/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/static/";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(13);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _app = __webpack_require__(26);

	var _app2 = _interopRequireDefault(_app);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	_reactDom2.default.render(_react2.default.createElement(_app2.default, null), document.getElementById("root"));

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	if (process.env.NODE_ENV === 'production') {
	  module.exports = __webpack_require__(4);
	} else {
	  module.exports = __webpack_require__(9);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 3 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;

	process.listeners = function (name) { return [] }

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/** @license React v16.4.2
	 * react.production.min.js
	 *
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';var k=__webpack_require__(5),n=__webpack_require__(6),p=__webpack_require__(7),q=__webpack_require__(8),r="function"===typeof Symbol&&Symbol.for,t=r?Symbol.for("react.element"):60103,u=r?Symbol.for("react.portal"):60106,v=r?Symbol.for("react.fragment"):60107,w=r?Symbol.for("react.strict_mode"):60108,x=r?Symbol.for("react.profiler"):60114,y=r?Symbol.for("react.provider"):60109,z=r?Symbol.for("react.context"):60110,A=r?Symbol.for("react.async_mode"):60111,B=
	r?Symbol.for("react.forward_ref"):60112;r&&Symbol.for("react.timeout");var C="function"===typeof Symbol&&Symbol.iterator;function D(a){for(var b=arguments.length-1,e="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=0;c<b;c++)e+="&args[]="+encodeURIComponent(arguments[c+1]);n(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",e)}
	var E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function F(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){"object"!==typeof a&&"function"!==typeof a&&null!=a?D("85"):void 0;this.updater.enqueueSetState(this,a,b,"setState")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function G(){}
	G.prototype=F.prototype;function H(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}var I=H.prototype=new G;I.constructor=H;k(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};
	function M(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=""+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:J.current}}
	function N(a){return"object"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={"=":"=0",":":"=2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\/+/g,P=[];function Q(a,b,e,c){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}
	function S(a,b,e,c){var d=typeof a;if("undefined"===d||"boolean"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case "string":case "number":g=!0;break;case "object":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,""===b?"."+T(a,0):b),1;g=0;b=""===b?".":b+":";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+T(d,h);g+=S(d,f,e,c)}else if(null===a||"undefined"===typeof a?f=null:(f=C&&a[C]||a["@@iterator"],f="function"===typeof f?f:null),"function"===typeof f)for(a=f.call(a),
	h=0;!(d=a.next()).done;)d=d.value,f=b+T(d,h++),g+=S(d,f,e,c);else"object"===d&&(e=""+a,D("31","[object Object]"===e?"object with keys {"+Object.keys(a).join(", ")+"}":e,""));return g}function T(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function U(a,b){a.func.call(a.context,b,a.count++)}
	function V(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,q.thatReturnsArgument):null!=a&&(N(a)&&(b=d+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(O,"$&/")+"/")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function W(a,b,e,c,d){var g="";null!=e&&(g=(""+e).replace(O,"$&/")+"/");b=Q(b,g,c,d);null==a||S(a,"",V,b);R(b)}
	var X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=Q(null,null,b,e);null==a||S(a,"",U,b);R(b)},count:function(a){return null==a?0:S(a,"",q.thatReturnsNull,null)},toArray:function(a){var b=[];W(a,b,null,q.thatReturnsArgument);return b},only:function(a){N(a)?void 0:D("143");return a}},createRef:function(){return{current:null}},Component:F,PureComponent:H,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:z,
	_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_currentValue2:a,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null};a.Provider={$$typeof:y,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:B,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:A,unstable_Profiler:x,createElement:M,cloneElement:function(a,b,e){null===a||void 0===a?D("267",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==
	b.key&&(g=""+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:"16.4.2",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:J,
	assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default?Z.default:Z;


/***/ },
/* 5 */
/***/ function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function validateFormat(format) {};

	if (process.env.NODE_ENV !== 'production') {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 8 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.4.2
	 * react.development.js
	 *
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';



	if (process.env.NODE_ENV !== "production") {
	  (function() {
	'use strict';

	var _assign = __webpack_require__(5);
	var invariant = __webpack_require__(6);
	var emptyObject = __webpack_require__(7);
	var warning = __webpack_require__(10);
	var emptyFunction = __webpack_require__(8);
	var checkPropTypes = __webpack_require__(11);

	// TODO: this is special because it gets imported during build.

	var ReactVersion = '16.4.2';

	// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var hasSymbol = typeof Symbol === 'function' && Symbol.for;

	var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
	var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
	var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
	var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
	var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
	var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
	var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
	var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
	var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
	var REACT_TIMEOUT_TYPE = hasSymbol ? Symbol.for('react.timeout') : 0xead1;

	var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator';

	function getIteratorFn(maybeIterable) {
	  if (maybeIterable === null || typeof maybeIterable === 'undefined') {
	    return null;
	  }
	  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
	  if (typeof maybeIterator === 'function') {
	    return maybeIterator;
	  }
	  return null;
	}

	// Relying on the `invariant()` implementation lets us
	// have preserve the format and params in the www builds.

	// Exports ReactDOM.createRoot


	// Experimental error-boundary API that can recover from errors within a single
	// render phase

	// Suspense
	var enableSuspense = false;
	// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:


	// In some cases, StrictMode should also double-render lifecycles.
	// This can be confusing for tests though,
	// And it can be bad for performance in production.
	// This feature flag can be used to control the behavior:


	// To preserve the "Pause on caught exceptions" behavior of the debugger, we
	// replay the begin phase of a failed component inside invokeGuardedCallback.


	// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:


	// Warn about legacy context API


	// Gather advanced timing metrics for Profiler subtrees.


	// Only used in www builds.

	/**
	 * Forked from fbjs/warning:
	 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
	 *
	 * Only change is we use console.warn instead of console.error,
	 * and do nothing when 'console' is not supported.
	 * This really simplifies the code.
	 * ---
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var lowPriorityWarning = function () {};

	{
	  var printWarning = function (format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.warn(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  lowPriorityWarning = function (condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	var lowPriorityWarning$1 = lowPriorityWarning;

	var didWarnStateUpdateForUnmountedComponent = {};

	function warnNoop(publicInstance, callerName) {
	  {
	    var _constructor = publicInstance.constructor;
	    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
	    var warningKey = componentName + '.' + callerName;
	    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
	      return;
	    }
	    warning(false, "Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
	    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {?function} callback Called after component is updated.
	   * @param {?string} callerName name of the calling function in the public API.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance, callback, callerName) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @param {?function} callback Called after component is updated.
	   * @param {?string} callerName name of the calling function in the public API.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
	    warnNoop(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @param {?function} callback Called after component is updated.
	   * @param {?string} Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
	    warnNoop(publicInstance, 'setState');
	  }
	};

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function Component(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	Component.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	Component.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
	  this.updater.enqueueSetState(this, partialState, callback, 'setState');
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	Component.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	{
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    Object.defineProperty(Component.prototype, methodName, {
	      get: function () {
	        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
	        return undefined;
	      }
	    });
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	function ComponentDummy() {}
	ComponentDummy.prototype = Component.prototype;

	/**
	 * Convenience component with default shallow equality check for sCU.
	 */
	function PureComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
	pureComponentPrototype.constructor = PureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(pureComponentPrototype, Component.prototype);
	pureComponentPrototype.isPureReactComponent = true;

	// an immutable object with a single mutable value
	function createRef() {
	  var refObject = {
	    current: null
	  };
	  {
	    Object.seal(refObject);
	  }
	  return refObject;
	}

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	};

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown = void 0;
	var specialPropRefWarningShown = void 0;

	function hasValidRef(config) {
	  {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}

	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	      warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}

	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	      warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allows us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    Object.defineProperty(element._store, 'validated', {
	      configurable: false,
	      enumerable: false,
	      writable: true,
	      value: false
	    });
	    // self and source are DEV only properties.
	    Object.defineProperty(element, '_self', {
	      configurable: false,
	      enumerable: false,
	      writable: false,
	      value: self
	    });
	    // Two elements created in two different places should be considered
	    // equal for testing purposes and therefore we hide it from enumeration.
	    Object.defineProperty(element, '_source', {
	      configurable: false,
	      enumerable: false,
	      writable: false,
	      value: source
	    });
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://reactjs.org/docs/react-api.html#createelement
	 */
	function createElement(type, config, children) {
	  var propName = void 0;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    {
	      if (Object.freeze) {
	        Object.freeze(childArray);
	      }
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	}

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://reactjs.org/docs/react-api.html#createfactory
	 */


	function cloneAndReplaceKey(oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	}

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://reactjs.org/docs/react-api.html#cloneelement
	 */
	function cloneElement(element, config, children) {
	  !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;

	  var propName = void 0;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    // Remaining properties override existing props
	    var defaultProps = void 0;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	}

	/**
	 * Verifies the object is a ReactElement.
	 * See https://reactjs.org/docs/react-api.html#isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	function isValidElement(object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	}

	var ReactDebugCurrentFrame = {};

	{
	  // Component that is being worked on
	  ReactDebugCurrentFrame.getCurrentStack = null;

	  ReactDebugCurrentFrame.getStackAddendum = function () {
	    var impl = ReactDebugCurrentFrame.getCurrentStack;
	    if (impl) {
	      return impl();
	    }
	    return null;
	  };
	}

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	var POOL_SIZE = 10;
	var traverseContextPool = [];
	function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
	  if (traverseContextPool.length) {
	    var traverseContext = traverseContextPool.pop();
	    traverseContext.result = mapResult;
	    traverseContext.keyPrefix = keyPrefix;
	    traverseContext.func = mapFunction;
	    traverseContext.context = mapContext;
	    traverseContext.count = 0;
	    return traverseContext;
	  } else {
	    return {
	      result: mapResult,
	      keyPrefix: keyPrefix,
	      func: mapFunction,
	      context: mapContext,
	      count: 0
	    };
	  }
	}

	function releaseTraverseContext(traverseContext) {
	  traverseContext.result = null;
	  traverseContext.keyPrefix = null;
	  traverseContext.func = null;
	  traverseContext.context = null;
	  traverseContext.count = 0;
	  if (traverseContextPool.length < POOL_SIZE) {
	    traverseContextPool.push(traverseContext);
	  }
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  var invokeCallback = false;

	  if (children === null) {
	    invokeCallback = true;
	  } else {
	    switch (type) {
	      case 'string':
	      case 'number':
	        invokeCallback = true;
	        break;
	      case 'object':
	        switch (children.$$typeof) {
	          case REACT_ELEMENT_TYPE:
	          case REACT_PORTAL_TYPE:
	            invokeCallback = true;
	        }
	    }
	  }

	  if (invokeCallback) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child = void 0;
	  var nextName = void 0;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (typeof iteratorFn === 'function') {
	      {
	        // Warn about using Maps as children
	        if (iteratorFn === children.entries) {
	          !didWarnAboutMaps ? warning(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', ReactDebugCurrentFrame.getStackAddendum()) : void 0;
	          didWarnAboutMaps = true;
	        }
	      }

	      var iterator = iteratorFn.call(children);
	      var step = void 0;
	      var ii = 0;
	      while (!(step = iterator.next()).done) {
	        child = step.value;
	        nextName = nextNamePrefix + getComponentKey(child, ii++);
	        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
	      }
	      var childrenString = '' + children;
	      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (typeof component === 'object' && component !== null && component.key != null) {
	    // Explicit key
	    return escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func,
	      context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  releaseTraverseContext(traverseContext);
	}

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result,
	      keyPrefix = bookKeeping.keyPrefix,
	      func = bookKeeping.func,
	      context = bookKeeping.context;


	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (isValidElement(mappedChild)) {
	      mappedChild = cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  releaseTraverseContext(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://reactjs.org/docs/react-api.html#reactchildrencount
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children) {
	  return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
	  return children;
	}

	function createContext(defaultValue, calculateChangedBits) {
	  if (calculateChangedBits === undefined) {
	    calculateChangedBits = null;
	  } else {
	    {
	      !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warning(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;
	    }
	  }

	  var context = {
	    $$typeof: REACT_CONTEXT_TYPE,
	    _calculateChangedBits: calculateChangedBits,
	    _defaultValue: defaultValue,
	    _currentValue: defaultValue,
	    // As a workaround to support multiple concurrent renderers, we categorize
	    // some renderers as primary and others as secondary. We only expect
	    // there to be two concurrent renderers at most: React Native (primary) and
	    // Fabric (secondary); React DOM (primary) and React ART (secondary).
	    // Secondary renderers store their context values on separate fields.
	    _currentValue2: defaultValue,
	    _changedBits: 0,
	    _changedBits2: 0,
	    // These are circular
	    Provider: null,
	    Consumer: null
	  };

	  context.Provider = {
	    $$typeof: REACT_PROVIDER_TYPE,
	    _context: context
	  };
	  context.Consumer = context;

	  {
	    context._currentRenderer = null;
	    context._currentRenderer2 = null;
	  }

	  return context;
	}

	function forwardRef(render) {
	  {
	    !(typeof render === 'function') ? warning(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render) : void 0;

	    if (render != null) {
	      !(render.defaultProps == null && render.propTypes == null) ? warning(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;
	    }
	  }

	  return {
	    $$typeof: REACT_FORWARD_REF_TYPE,
	    render: render
	  };
	}

	var describeComponentFrame = function (name, source, ownerName) {
	  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	};

	function isValidElementType(type) {
	  return typeof type === 'string' || typeof type === 'function' ||
	  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
	  type === REACT_FRAGMENT_TYPE || type === REACT_ASYNC_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_TIMEOUT_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
	}

	function getComponentName(fiber) {
	  var type = fiber.type;

	  if (typeof type === 'function') {
	    return type.displayName || type.name;
	  }
	  if (typeof type === 'string') {
	    return type;
	  }
	  switch (type) {
	    case REACT_ASYNC_MODE_TYPE:
	      return 'AsyncMode';
	    case REACT_CONTEXT_TYPE:
	      return 'Context.Consumer';
	    case REACT_FRAGMENT_TYPE:
	      return 'ReactFragment';
	    case REACT_PORTAL_TYPE:
	      return 'ReactPortal';
	    case REACT_PROFILER_TYPE:
	      return 'Profiler(' + fiber.pendingProps.id + ')';
	    case REACT_PROVIDER_TYPE:
	      return 'Context.Provider';
	    case REACT_STRICT_MODE_TYPE:
	      return 'StrictMode';
	    case REACT_TIMEOUT_TYPE:
	      return 'Timeout';
	  }
	  if (typeof type === 'object' && type !== null) {
	    switch (type.$$typeof) {
	      case REACT_FORWARD_REF_TYPE:
	        var functionName = type.render.displayName || type.render.name || '';
	        return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
	    }
	  }
	  return null;
	}

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	var currentlyValidatingElement = void 0;
	var propTypesMisspellWarningShown = void 0;

	var getDisplayName = function () {};
	var getStackAddendum = function () {};

	{
	  currentlyValidatingElement = null;

	  propTypesMisspellWarningShown = false;

	  getDisplayName = function (element) {
	    if (element == null) {
	      return '#empty';
	    } else if (typeof element === 'string' || typeof element === 'number') {
	      return '#text';
	    } else if (typeof element.type === 'string') {
	      return element.type;
	    }

	    var type = element.type;
	    if (type === REACT_FRAGMENT_TYPE) {
	      return 'React.Fragment';
	    } else if (typeof type === 'object' && type !== null && type.$$typeof === REACT_FORWARD_REF_TYPE) {
	      var functionName = type.render.displayName || type.render.name || '';
	      return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
	    } else {
	      return type.displayName || type.name || 'Unknown';
	    }
	  };

	  getStackAddendum = function () {
	    var stack = '';
	    if (currentlyValidatingElement) {
	      var name = getDisplayName(currentlyValidatingElement);
	      var owner = currentlyValidatingElement._owner;
	      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));
	    }
	    stack += ReactDebugCurrentFrame.getStackAddendum() || '';
	    return stack;
	  };
	}

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = getComponentName(ReactCurrentOwner.current);
	    if (name) {
	      return '\n\nCheck the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function getSourceInfoErrorAddendum(elementProps) {
	  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
	    var source = elementProps.__source;
	    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
	    var lineNumber = source.lineNumber;
	    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();

	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = '\n\nCheck the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
	    return;
	  }
	  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';
	  }

	  currentlyValidatingElement = element;
	  {
	    warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum());
	  }
	  currentlyValidatingElement = null;
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    if (typeof iteratorFn === 'function') {
	      // Entry iterators used to provide implicit keys,
	      // but now we print a separate warning for them later.
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step = void 0;
	        while (!(step = iterator.next()).done) {
	          if (isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var type = element.type;
	  var name = void 0,
	      propTypes = void 0;
	  if (typeof type === 'function') {
	    // Class or functional component
	    name = type.displayName || type.name;
	    propTypes = type.propTypes;
	  } else if (typeof type === 'object' && type !== null && type.$$typeof === REACT_FORWARD_REF_TYPE) {
	    // ForwardRef
	    var functionName = type.render.displayName || type.render.name || '';
	    name = functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
	    propTypes = type.propTypes;
	  } else {
	    return;
	  }
	  if (propTypes) {
	    currentlyValidatingElement = element;
	    checkPropTypes(propTypes, element.props, 'prop', name, getStackAddendum);
	    currentlyValidatingElement = null;
	  } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
	    propTypesMisspellWarningShown = true;
	    warning(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
	  }
	  if (typeof type.getDefaultProps === 'function') {
	    !type.getDefaultProps.isReactClassApproved ? warning(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}

	/**
	 * Given a fragment, validate that it can only be provided with fragment props
	 * @param {ReactElement} fragment
	 */
	function validateFragmentProps(fragment) {
	  currentlyValidatingElement = fragment;

	  var keys = Object.keys(fragment.props);
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    if (key !== 'children' && key !== 'key') {
	      warning(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.%s', key, getStackAddendum());
	      break;
	    }
	  }

	  if (fragment.ref !== null) {
	    warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.%s', getStackAddendum());
	  }

	  currentlyValidatingElement = null;
	}

	function createElementWithValidation(type, props, children) {
	  var validType = isValidElementType(type);

	  // We warn in this case but don't throw. We expect the element creation to
	  // succeed and there will likely be errors in render.
	  if (!validType) {
	    var info = '';
	    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
	    }

	    var sourceInfo = getSourceInfoErrorAddendum(props);
	    if (sourceInfo) {
	      info += sourceInfo;
	    } else {
	      info += getDeclarationErrorAddendum();
	    }

	    info += getStackAddendum() || '';

	    var typeString = void 0;
	    if (type === null) {
	      typeString = 'null';
	    } else if (Array.isArray(type)) {
	      typeString = 'array';
	    } else {
	      typeString = typeof type;
	    }

	    warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
	  }

	  var element = createElement.apply(this, arguments);

	  // The result can be nullish if a mock or a custom function is used.
	  // TODO: Drop this when these are no longer allowed as the type argument.
	  if (element == null) {
	    return element;
	  }

	  // Skip key warning if the type isn't valid since our key validation logic
	  // doesn't expect a non-string/function type and can throw confusing errors.
	  // We don't want exception behavior to differ between dev and prod.
	  // (Rendering will throw with a helpful message and as soon as the type is
	  // fixed, the key warnings will appear.)
	  if (validType) {
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], type);
	    }
	  }

	  if (type === REACT_FRAGMENT_TYPE) {
	    validateFragmentProps(element);
	  } else {
	    validatePropTypes(element);
	  }

	  return element;
	}

	function createFactoryWithValidation(type) {
	  var validatedFactory = createElementWithValidation.bind(null, type);
	  validatedFactory.type = type;
	  // Legacy hook: remove it
	  {
	    Object.defineProperty(validatedFactory, 'type', {
	      enumerable: false,
	      get: function () {
	        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
	        Object.defineProperty(this, 'type', {
	          value: type
	        });
	        return type;
	      }
	    });
	  }

	  return validatedFactory;
	}

	function cloneElementWithValidation(element, props, children) {
	  var newElement = cloneElement.apply(this, arguments);
	  for (var i = 2; i < arguments.length; i++) {
	    validateChildKeys(arguments[i], newElement.type);
	  }
	  validatePropTypes(newElement);
	  return newElement;
	}

	var React = {
	  Children: {
	    map: mapChildren,
	    forEach: forEachChildren,
	    count: countChildren,
	    toArray: toArray,
	    only: onlyChild
	  },

	  createRef: createRef,
	  Component: Component,
	  PureComponent: PureComponent,

	  createContext: createContext,
	  forwardRef: forwardRef,

	  Fragment: REACT_FRAGMENT_TYPE,
	  StrictMode: REACT_STRICT_MODE_TYPE,
	  unstable_AsyncMode: REACT_ASYNC_MODE_TYPE,
	  unstable_Profiler: REACT_PROFILER_TYPE,

	  createElement: createElementWithValidation,
	  cloneElement: cloneElementWithValidation,
	  createFactory: createFactoryWithValidation,
	  isValidElement: isValidElement,

	  version: ReactVersion,

	  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
	    ReactCurrentOwner: ReactCurrentOwner,
	    // Used by renderers to avoid bundling object-assign twice in UMD bundles:
	    assign: _assign
	  }
	};

	if (enableSuspense) {
	  React.Timeout = REACT_TIMEOUT_TYPE;
	}

	{
	  _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
	    // These should not be included in production.
	    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
	    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
	    // TODO: remove in React 17.0.
	    ReactComponentTreeHook: {}
	  });
	}



	var React$2 = Object.freeze({
		default: React
	});

	var React$3 = ( React$2 && React ) || React$2;

	// TODO: decide on the top-level export form.
	// This is hacky but makes it work with both Rollup and Jest.
	var react = React$3.default ? React$3.default : React$3;

	module.exports = react;
	  })();
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(8);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  var printWarning = function printWarning(format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  warning = function warning(condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var printWarning = function() {};

	if (process.env.NODE_ENV !== 'production') {
	  var ReactPropTypesSecret = __webpack_require__(12);
	  var loggedTypeFailures = {};

	  printWarning = function(text) {
	    var message = 'Warning: ' + text;
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };
	}

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?Function} getStack Returns the component stack.
	 * @private
	 */
	function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	  if (process.env.NODE_ENV !== 'production') {
	    for (var typeSpecName in typeSpecs) {
	      if (typeSpecs.hasOwnProperty(typeSpecName)) {
	        var error;
	        // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          if (typeof typeSpecs[typeSpecName] !== 'function') {
	            var err = Error(
	              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
	              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
	            );
	            err.name = 'Invariant Violation';
	            throw err;
	          }
	          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error && !(error instanceof Error)) {
	          printWarning(
	            (componentName || 'React class') + ': type specification of ' +
	            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
	            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
	            'You may have forgotten to pass an argument to the type checker ' +
	            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
	            'shape all require an argument).'
	          )

	        }
	        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error.message] = true;

	          var stack = getStack ? getStack() : '';

	          printWarning(
	            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
	          );
	        }
	      }
	    }
	  }
	}

	module.exports = checkPropTypes;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 12 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	function checkDCE() {
	  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
	  if (
	    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
	    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
	  ) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // This branch is unreachable because this function is only called
	    // in production, but the condition is true only in development.
	    // Therefore if the branch is still here, dead code elimination wasn't
	    // properly applied.
	    // Don't change the message. React DevTools relies on it. Also make sure
	    // this message doesn't occur elsewhere in this function, or it will cause
	    // a false positive.
	    throw new Error('^_^');
	  }
	  try {
	    // Verify that the code above has been dead code eliminated (DCE'd).
	    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
	  } catch (err) {
	    // DevTools shouldn't crash React, no matter what.
	    // We should still report in case we break this code.
	    console.error(err);
	  }
	}

	if (process.env.NODE_ENV === 'production') {
	  // DCE check should happen before ReactDOM bundle executes so that
	  // DevTools can report bad minification during injection.
	  checkDCE();
	  module.exports = __webpack_require__(14);
	} else {
	  module.exports = __webpack_require__(21);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/** @license React v16.4.2
	 * react-dom.production.min.js
	 *
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	/*
	 Modernizr 3.0.0pre (Custom Build) | MIT
	*/
	'use strict';var aa=__webpack_require__(6),ba=__webpack_require__(2),m=__webpack_require__(15),p=__webpack_require__(5),v=__webpack_require__(8),da=__webpack_require__(16),ea=__webpack_require__(17),fa=__webpack_require__(18),ha=__webpack_require__(7);
	function A(a){for(var b=arguments.length-1,c="https://reactjs.org/docs/error-decoder.html?invariant="+a,d=0;d<b;d++)c+="&args[]="+encodeURIComponent(arguments[d+1]);aa(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",c)}ba?void 0:A("227");
	function ia(a,b,c,d,e,f,g,h,k){this._hasCaughtError=!1;this._caughtError=null;var n=Array.prototype.slice.call(arguments,3);try{b.apply(c,n)}catch(r){this._caughtError=r,this._hasCaughtError=!0}}
	var B={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){ia.apply(B,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){B.invokeGuardedCallback.apply(this,arguments);if(B.hasCaughtError()){var n=B.clearCaughtError();B._hasRethrowError||(B._hasRethrowError=!0,B._rethrowError=n)}},rethrowCaughtError:function(){return ka.apply(B,arguments)},hasCaughtError:function(){return B._hasCaughtError},clearCaughtError:function(){if(B._hasCaughtError){var a=
	B._caughtError;B._caughtError=null;B._hasCaughtError=!1;return a}A("198")}};function ka(){if(B._hasRethrowError){var a=B._rethrowError;B._rethrowError=null;B._hasRethrowError=!1;throw a;}}var la=null,ma={};
	function na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:A("96",a);if(!oa[c]){b.extractEvents?void 0:A("97",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?A("99",h):void 0;pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&qa(k[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:A("98",d,a)}}}}
	function qa(a,b,c){ra[a]?A("100",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={};function ta(a){la?A("101"):void 0;la=Array.prototype.slice.call(a);na()}function ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?A("102",c):void 0,ma[c]=d,b=!0)}b&&na()}
	var va={plugins:oa,eventNameDispatchConfigs:pa,registrationNameModules:ra,registrationNameDependencies:sa,possibleRegistrationNames:null,injectEventPluginOrder:ta,injectEventPluginsByName:ua},wa=null,xa=null,ya=null;function za(a,b,c,d){b=a.type||"unknown-event";a.currentTarget=ya(d);B.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}
	function Aa(a,b){null==b?A("30"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ba(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ca=null;
	function Da(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)za(a,b,c[e],d[e]);else c&&za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ea(a){return Da(a,!0)}function Fa(a){return Da(a,!1)}var Ga={injectEventPluginOrder:ta,injectEventPluginsByName:ua};
	function Ha(a,b){var c=a.stateNode;if(!c)return null;var d=wa(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;c&&"function"!==typeof c?A("231",b,typeof c):void 0;
	return c}function Ia(a,b){null!==a&&(Ca=Aa(Ca,a));a=Ca;Ca=null;a&&(b?Ba(a,Ea):Ba(a,Fa),Ca?A("95"):void 0,B.rethrowCaughtError())}function Ja(a,b,c,d){for(var e=null,f=0;f<oa.length;f++){var g=oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Aa(e,g))}Ia(e,!1)}var Ka={injection:Ga,getListener:Ha,runEventsInBatch:Ia,runExtractedEventsInBatch:Ja},La=Math.random().toString(36).slice(2),C="__reactInternalInstance$"+La,Ma="__reactEventHandlers$"+La;
	function Na(a){if(a[C])return a[C];for(;!a[C];)if(a.parentNode)a=a.parentNode;else return null;a=a[C];return 5===a.tag||6===a.tag?a:null}function Oa(a){if(5===a.tag||6===a.tag)return a.stateNode;A("33")}function Pa(a){return a[Ma]||null}var Qa={precacheFiberNode:function(a,b){b[C]=a},getClosestInstanceFromNode:Na,getInstanceFromNode:function(a){a=a[C];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Oa,getFiberCurrentPropsFromNode:Pa,updateFiberProps:function(a,b){a[Ma]=b}};
	function F(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ra(a,b,c){for(var d=[];a;)d.push(a),a=F(a);for(a=d.length;0<a--;)b(d[a],"captured",c);for(a=0;a<d.length;a++)b(d[a],"bubbled",c)}function Sa(a,b,c){if(b=Ha(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a)}function Ta(a){a&&a.dispatchConfig.phasedRegistrationNames&&Ra(a._targetInst,Sa,a)}
	function Ua(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?F(b):null;Ra(b,Sa,a)}}function Va(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ha(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a))}function Xa(a){a&&a.dispatchConfig.registrationName&&Va(a._targetInst,null,a)}function Ya(a){Ba(a,Ta)}
	function Za(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=F(h))g++;h=0;for(var k=f;k;k=F(k))h++;for(;0<g-h;)e=F(e),g--;for(;0<h-g;)f=F(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=F(e);f=F(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=F(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=F(d)}for(d=0;d<e.length;d++)Va(e[d],"bubbled",a);for(a=c.length;0<a--;)Va(c[a],"captured",b)}
	var $a={accumulateTwoPhaseDispatches:Ya,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ba(a,Ua)},accumulateEnterLeaveDispatches:Za,accumulateDirectDispatches:function(a){Ba(a,Xa)}};function ab(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;c["ms"+a]="MS"+b;c["O"+a]="o"+b.toLowerCase();return c}
	var bb={animationend:ab("Animation","AnimationEnd"),animationiteration:ab("Animation","AnimationIteration"),animationstart:ab("Animation","AnimationStart"),transitionend:ab("Transition","TransitionEnd")},cb={},db={};m.canUseDOM&&(db=document.createElement("div").style,"AnimationEvent"in window||(delete bb.animationend.animation,delete bb.animationiteration.animation,delete bb.animationstart.animation),"TransitionEvent"in window||delete bb.transitionend.transition);
	function eb(a){if(cb[a])return cb[a];if(!bb[a])return a;var b=bb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in db)return cb[a]=b[c];return a}var fb=eb("animationend"),gb=eb("animationiteration"),hb=eb("animationstart"),ib=eb("transitionend"),jb="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),kb=null;
	function lb(){!kb&&m.canUseDOM&&(kb="textContent"in document.documentElement?"textContent":"innerText");return kb}var G={_root:null,_startText:null,_fallbackText:null};function mb(){if(G._fallbackText)return G._fallbackText;var a,b=G._startText,c=b.length,d,e=nb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);G._fallbackText=e.slice(a,1<d?1-d:void 0);return G._fallbackText}function nb(){return"value"in G._root?G._root.value:G._root[lb()]}
	var ob="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),pb={type:null,target:null,currentTarget:v.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
	function H(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?v.thatReturnsTrue:v.thatReturnsFalse;this.isPropagationStopped=v.thatReturnsFalse;return this}
	p(H.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=v.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=v.thatReturnsTrue)},persist:function(){this.isPersistent=v.thatReturnsTrue},isPersistent:v.thatReturnsFalse,
	destructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<ob.length;a++)this[ob[a]]=null}});H.Interface=pb;H.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;p(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=p({},d.Interface,a);c.extend=d.extend;qb(c);return c};qb(H);
	function rb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function sb(a){a instanceof this?void 0:A("223");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function qb(a){a.eventPool=[];a.getPooled=rb;a.release=sb}var tb=H.extend({data:null}),ub=H.extend({data:null}),vb=[9,13,27,32],wb=m.canUseDOM&&"CompositionEvent"in window,xb=null;m.canUseDOM&&"documentMode"in document&&(xb=document.documentMode);
	var yb=m.canUseDOM&&"TextEvent"in window&&!xb,zb=m.canUseDOM&&(!wb||xb&&8<xb&&11>=xb),Ab=String.fromCharCode(32),Bb={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
	captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Cb=!1;
	function Db(a,b){switch(a){case "keyup":return-1!==vb.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "blur":return!0;default:return!1}}function Eb(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var Fb=!1;function Gb(a,b){switch(a){case "compositionend":return Eb(b);case "keypress":if(32!==b.which)return null;Cb=!0;return Ab;case "textInput":return a=b.data,a===Ab&&Cb?null:a;default:return null}}
	function Hb(a,b){if(Fb)return"compositionend"===a||!wb&&Db(a,b)?(a=mb(),G._root=null,G._startText=null,G._fallbackText=null,Fb=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return zb?null:b.data;default:return null}}
	var Ib={eventTypes:Bb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(wb)b:{switch(a){case "compositionstart":e=Bb.compositionStart;break b;case "compositionend":e=Bb.compositionEnd;break b;case "compositionupdate":e=Bb.compositionUpdate;break b}e=void 0}else Fb?Db(a,c)&&(e=Bb.compositionEnd):"keydown"===a&&229===c.keyCode&&(e=Bb.compositionStart);e?(zb&&(Fb||e!==Bb.compositionStart?e===Bb.compositionEnd&&Fb&&(f=mb()):(G._root=d,G._startText=nb(),Fb=!0)),e=tb.getPooled(e,b,c,d),f?e.data=
	f:(f=Eb(c),null!==f&&(e.data=f)),Ya(e),f=e):f=null;(a=yb?Gb(a,c):Hb(a,c))?(b=ub.getPooled(Bb.beforeInput,b,c,d),b.data=a,Ya(b)):b=null;return null===f?b:null===b?f:[f,b]}},Jb=null,Kb={injectFiberControlledHostComponent:function(a){Jb=a}},Lb=null,Mb=null;function Nb(a){if(a=xa(a)){Jb&&"function"===typeof Jb.restoreControlledState?void 0:A("194");var b=wa(a.stateNode);Jb.restoreControlledState(a.stateNode,a.type,b)}}function Ob(a){Lb?Mb?Mb.push(a):Mb=[a]:Lb=a}
	function Pb(){return null!==Lb||null!==Mb}function Qb(){if(Lb){var a=Lb,b=Mb;Mb=Lb=null;Nb(a);if(b)for(a=0;a<b.length;a++)Nb(b[a])}}var Rb={injection:Kb,enqueueStateRestore:Ob,needsStateRestore:Pb,restoreStateIfNeeded:Qb};function Sb(a,b){return a(b)}function Tb(a,b,c){return a(b,c)}function Ub(){}var Vb=!1;function Wb(a,b){if(Vb)return a(b);Vb=!0;try{return Sb(a,b)}finally{Vb=!1,Pb()&&(Ub(),Qb())}}
	var Xb={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!Xb[a.type]:"textarea"===b?!0:!1}function Zb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}
	function $b(a,b){if(!m.canUseDOM||b&&!("addEventListener"in document))return!1;a="on"+a;b=a in document;b||(b=document.createElement("div"),b.setAttribute(a,"return;"),b="function"===typeof b[a]);return b}function ac(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
	function bc(a){var b=ac(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
	null;delete a[b]}}}}function cc(a){a._valueTracker||(a._valueTracker=bc(a))}function dc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=ac(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}
	var ec=ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,fc="function"===typeof Symbol&&Symbol.for,gc=fc?Symbol.for("react.element"):60103,hc=fc?Symbol.for("react.portal"):60106,ic=fc?Symbol.for("react.fragment"):60107,jc=fc?Symbol.for("react.strict_mode"):60108,kc=fc?Symbol.for("react.profiler"):60114,lc=fc?Symbol.for("react.provider"):60109,mc=fc?Symbol.for("react.context"):60110,pc=fc?Symbol.for("react.async_mode"):60111,qc=fc?Symbol.for("react.forward_ref"):60112,rc=fc?Symbol.for("react.timeout"):
	60113,sc="function"===typeof Symbol&&Symbol.iterator;function tc(a){if(null===a||"undefined"===typeof a)return null;a=sc&&a[sc]||a["@@iterator"];return"function"===typeof a?a:null}
	function uc(a){var b=a.type;if("function"===typeof b)return b.displayName||b.name;if("string"===typeof b)return b;switch(b){case pc:return"AsyncMode";case mc:return"Context.Consumer";case ic:return"ReactFragment";case hc:return"ReactPortal";case kc:return"Profiler("+a.pendingProps.id+")";case lc:return"Context.Provider";case jc:return"StrictMode";case rc:return"Timeout"}if("object"===typeof b&&null!==b)switch(b.$$typeof){case qc:return a=b.render.displayName||b.render.name||"",""!==a?"ForwardRef("+
	a+")":"ForwardRef"}return null}function vc(a){var b="";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=uc(a);var f=null;c&&(f=uc(c));c=d;e="\n    in "+(e||"Unknown")+(c?" (at "+c.fileName.replace(/^.*[\\\/]/,"")+":"+c.lineNumber+")":f?" (created by "+f+")":"");break a;default:e=""}b+=e;a=a.return}while(a);return b}
	var wc=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,xc=Object.prototype.hasOwnProperty,zc={},Ac={};
	function Bc(a){if(xc.call(Ac,a))return!0;if(xc.call(zc,a))return!1;if(wc.test(a))return Ac[a]=!0;zc[a]=!0;return!1}function Cc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
	function Dc(a,b,c,d){if(null===b||"undefined"===typeof b||Cc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function I(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var J={};
	"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){J[a]=new I(a,0,!1,a,null)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];J[b]=new I(b,1,!1,a[1],null)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){J[a]=new I(a,2,!1,a.toLowerCase(),null)});
	["autoReverse","externalResourcesRequired","preserveAlpha"].forEach(function(a){J[a]=new I(a,2,!1,a,null)});"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){J[a]=new I(a,3,!1,a.toLowerCase(),null)});["checked","multiple","muted","selected"].forEach(function(a){J[a]=new I(a,3,!0,a.toLowerCase(),null)});
	["capture","download"].forEach(function(a){J[a]=new I(a,4,!1,a.toLowerCase(),null)});["cols","rows","size","span"].forEach(function(a){J[a]=new I(a,6,!1,a.toLowerCase(),null)});["rowSpan","start"].forEach(function(a){J[a]=new I(a,5,!1,a.toLowerCase(),null)});var Ec=/[\-:]([a-z])/g;function Fc(a){return a[1].toUpperCase()}
	"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(Ec,
	Fc);J[b]=new I(b,1,!1,a,null)});"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(Ec,Fc);J[b]=new I(b,1,!1,a,"http://www.w3.org/1999/xlink")});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(Ec,Fc);J[b]=new I(b,1,!1,a,"http://www.w3.org/XML/1998/namespace")});J.tabIndex=new I("tabIndex",1,!1,"tabindex",null);
	function Gc(a,b,c,d){var e=J.hasOwnProperty(b)?J[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(Dc(b,c,e,d)&&(c=null),d||null===e?Bc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
	function Hc(a,b){var c=b.checked;return p({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Ic(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Jc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function Kc(a,b){b=b.checked;null!=b&&Gc(a,"checked",b,!1)}
	function Lc(a,b){Kc(a,b);var c=Jc(b.value);if(null!=c)if("number"===b.type){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);b.hasOwnProperty("value")?Mc(a,b.type,c):b.hasOwnProperty("defaultValue")&&Mc(a,b.type,Jc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
	function Nc(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){b=""+a._wrapperState.initialValue;var d=a.value;c||b===d||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;""!==c&&(a.name=c)}function Mc(a,b,c){if("number"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}
	function Jc(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}var Oc={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Pc(a,b,c){a=H.getPooled(Oc.change,a,b,c);a.type="change";Ob(c);Ya(a);return a}var Qc=null,Rc=null;function Sc(a){Ia(a,!1)}function Tc(a){var b=Oa(a);if(dc(b))return a}
	function Uc(a,b){if("change"===a)return b}var Vc=!1;m.canUseDOM&&(Vc=$b("input")&&(!document.documentMode||9<document.documentMode));function Wc(){Qc&&(Qc.detachEvent("onpropertychange",Xc),Rc=Qc=null)}function Xc(a){"value"===a.propertyName&&Tc(Rc)&&(a=Pc(Rc,a,Zb(a)),Wb(Sc,a))}function Yc(a,b,c){"focus"===a?(Wc(),Qc=b,Rc=c,Qc.attachEvent("onpropertychange",Xc)):"blur"===a&&Wc()}function Zc(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return Tc(Rc)}
	function $c(a,b){if("click"===a)return Tc(b)}function ad(a,b){if("input"===a||"change"===a)return Tc(b)}
	var bd={eventTypes:Oc,_isInputEventSupported:Vc,extractEvents:function(a,b,c,d){var e=b?Oa(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();"select"===h||"input"===h&&"file"===e.type?f=Uc:Yb(e)?Vc?f=ad:(f=Zc,g=Yc):(h=e.nodeName)&&"input"===h.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(f=$c);if(f&&(f=f(a,b)))return Pc(f,c,d);g&&g(a,e,b);"blur"===a&&(a=e._wrapperState)&&a.controlled&&"number"===e.type&&Mc(e,"number",e.value)}},cd=H.extend({view:null,detail:null}),dd={Alt:"altKey",
	Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function ed(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=dd[a])?!!b[a]:!1}function fd(){return ed}
	var gd=cd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:fd,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),hd=gd.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),id={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},
	mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},jd={eventTypes:id,extractEvents:function(a,b,c,d){var e="mouseover"===a||"pointerover"===a,f="mouseout"===a||"pointerout"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||
	e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Na(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,n=void 0;if("mouseout"===a||"mouseover"===a)g=gd,h=id.mouseLeave,k=id.mouseEnter,n="mouse";else if("pointerout"===a||"pointerover"===a)g=hd,h=id.pointerLeave,k=id.pointerEnter,n="pointer";a=null==f?e:Oa(f);e=null==b?e:Oa(b);h=g.getPooled(h,f,c,d);h.type=n+"leave";h.target=a;h.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=n+"enter";c.target=e;c.relatedTarget=a;Za(h,
	c,f,b);return[h,c]}};function kd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){2!==kd(a)?A("188"):void 0}
	function md(a){var b=a.alternate;if(!b)return b=kd(a),3===b?A("188"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return ld(e),a;if(g===d)return ld(e),b;g=g.sibling}A("188")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?
	void 0:A("189")}}c.alternate!==d?A("190"):void 0}3!==c.tag?A("188"):void 0;return c.stateNode.current===c?a:b}function nd(a){a=md(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
	function od(a){a=md(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}var pd=H.extend({animationName:null,elapsedTime:null,pseudoElement:null}),qd=H.extend({clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),rd=cd.extend({relatedTarget:null});
	function sd(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}
	var td={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},ud={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
	116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},vd=cd.extend({key:function(a){if(a.key){var b=td[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=sd(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?ud[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:fd,charCode:function(a){return"keypress"===
	a.type?sd(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?sd(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),wd=gd.extend({dataTransfer:null}),xd=cd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:fd}),yd=H.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),zd=gd.extend({deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in
	a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),Ad=[["abort","abort"],[fb,"animationEnd"],[gb,"animationIteration"],[hb,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],
	["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],
	["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ib,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],Bd={},Cd={};function Dd(a,b){var c=a[0];a=a[1];var d="on"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+"Capture"},dependencies:[c],isInteractive:b};Bd[a]=b;Cd[c]=b}
	[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],
	["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(a){Dd(a,!0)});Ad.forEach(function(a){Dd(a,!1)});
	var Ed={eventTypes:Bd,isInteractiveTopLevelEventType:function(a){a=Cd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Cd[a];if(!e)return null;switch(a){case "keypress":if(0===sd(c))return null;case "keydown":case "keyup":a=vd;break;case "blur":case "focus":a=rd;break;case "click":if(2===c.button)return null;case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":a=gd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":a=
	wd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":a=xd;break;case fb:case gb:case hb:a=pd;break;case ib:a=yd;break;case "scroll":a=cd;break;case "wheel":a=zd;break;case "copy":case "cut":case "paste":a=qd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":a=hd;break;default:a=H}b=a.getPooled(e,b,c,d);Ya(b);return b}},Fd=Ed.isInteractiveTopLevelEventType,
	Gd=[];function Hd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c.return;)c=c.return;c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Na(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Ja(a.topLevelType,b,a.nativeEvent,Zb(a.nativeEvent))}var Id=!0;function Kd(a){Id=!!a}function K(a,b){if(!b)return null;var c=(Fd(a)?Ld:Md).bind(null,a);b.addEventListener(a,c,!1)}
	function Nd(a,b){if(!b)return null;var c=(Fd(a)?Ld:Md).bind(null,a);b.addEventListener(a,c,!0)}function Ld(a,b){Tb(Md,a,b)}function Md(a,b){if(Id){var c=Zb(b);c=Na(c);null===c||"number"!==typeof c.tag||2===kd(c)||(c=null);if(Gd.length){var d=Gd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Wb(Hd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Gd.length&&Gd.push(a)}}}
	var Od={get _enabled(){return Id},setEnabled:Kd,isEnabled:function(){return Id},trapBubbledEvent:K,trapCapturedEvent:Nd,dispatchEvent:Md},Pd={},Qd=0,Rd="_reactListenersID"+(""+Math.random()).slice(2);function Sd(a){Object.prototype.hasOwnProperty.call(a,Rd)||(a[Rd]=Qd++,Pd[a[Rd]]={});return Pd[a[Rd]]}function Td(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
	function Ud(a,b){var c=Td(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Td(c)}}function Vd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}
	var Wd=m.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Xd={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Yd=null,Zd=null,$d=null,ae=!1;
	function be(a,b){if(ae||null==Yd||Yd!==da())return null;var c=Yd;"selectionStart"in c&&Vd(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return $d&&ea($d,c)?null:($d=c,a=H.getPooled(Xd.select,Zd,a,b),a.type="select",a.target=Yd,Ya(a),a)}
	var ce={eventTypes:Xd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Sd(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Oa(b):window;switch(a){case "focus":if(Yb(e)||"true"===e.contentEditable)Yd=e,Zd=b,$d=null;break;case "blur":$d=Zd=Yd=null;break;case "mousedown":ae=!0;break;case "contextmenu":case "mouseup":return ae=!1,be(c,d);case "selectionchange":if(Wd)break;
	case "keydown":case "keyup":return be(c,d)}return null}};Ga.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));wa=Qa.getFiberCurrentPropsFromNode;xa=Qa.getInstanceFromNode;ya=Qa.getNodeFromInstance;Ga.injectEventPluginsByName({SimpleEventPlugin:Ed,EnterLeaveEventPlugin:jd,ChangeEventPlugin:bd,SelectEventPlugin:ce,BeforeInputEventPlugin:Ib});
	var de="function"===typeof requestAnimationFrame?requestAnimationFrame:void 0,ee=Date,fe=setTimeout,ge=clearTimeout,he=void 0;if("object"===typeof performance&&"function"===typeof performance.now){var ie=performance;he=function(){return ie.now()}}else he=function(){return ee.now()};var je=void 0,ke=void 0;
	if(m.canUseDOM){var le="function"===typeof de?de:function(){A("276")},L=null,me=null,ne=-1,oe=!1,pe=!1,qe=0,re=33,se=33,te={didTimeout:!1,timeRemaining:function(){var a=qe-he();return 0<a?a:0}},ve=function(a,b){var c=a.scheduledCallback,d=!1;try{c(b),d=!0}finally{ke(a),d||(oe=!0,window.postMessage(ue,"*"))}},ue="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(a){if(a.source===window&&a.data===ue&&(oe=!1,null!==L)){if(null!==L){var b=he();if(!(-1===
	ne||ne>b)){a=-1;for(var c=[],d=L;null!==d;){var e=d.timeoutTime;-1!==e&&e<=b?c.push(d):-1!==e&&(-1===a||e<a)&&(a=e);d=d.next}if(0<c.length)for(te.didTimeout=!0,b=0,d=c.length;b<d;b++)ve(c[b],te);ne=a}}for(a=he();0<qe-a&&null!==L;)a=L,te.didTimeout=!1,ve(a,te),a=he();null===L||pe||(pe=!0,le(we))}},!1);var we=function(a){pe=!1;var b=a-qe+se;b<se&&re<se?(8>b&&(b=8),se=b<re?re:b):re=b;qe=a+se;oe||(oe=!0,window.postMessage(ue,"*"))};je=function(a,b){var c=-1;null!=b&&"number"===typeof b.timeout&&(c=he()+
	b.timeout);if(-1===ne||-1!==c&&c<ne)ne=c;a={scheduledCallback:a,timeoutTime:c,prev:null,next:null};null===L?L=a:(b=a.prev=me,null!==b&&(b.next=a));me=a;pe||(pe=!0,le(we));return a};ke=function(a){if(null!==a.prev||L===a){var b=a.next,c=a.prev;a.next=null;a.prev=null;null!==b?null!==c?(c.next=b,b.prev=c):(b.prev=null,L=b):null!==c?(c.next=null,me=c):me=L=null}}}else{var xe=new Map;je=function(a){var b={scheduledCallback:a,timeoutTime:0,next:null,prev:null},c=fe(function(){a({timeRemaining:function(){return Infinity},
	didTimeout:!1})});xe.set(a,c);return b};ke=function(a){var b=xe.get(a.scheduledCallback);xe.delete(a);ge(b)}}function ye(a){var b="";ba.Children.forEach(a,function(a){null==a||"string"!==typeof a&&"number"!==typeof a||(b+=a)});return b}function ze(a,b){a=p({children:void 0},b);if(b=ye(b.children))a.children=b;return a}
	function Ae(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
	function Be(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Ce(a,b){null!=b.dangerouslySetInnerHTML?A("91"):void 0;return p({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function De(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?A("92"):void 0,Array.isArray(b)&&(1>=b.length?void 0:A("93"),b=b[0]),c=""+b),null==c&&(c=""));a._wrapperState={initialValue:""+c}}
	function Ee(a,b){var c=b.value;null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Fe(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Ge={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
	function He(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ie(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?He(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
	var Je=void 0,Ke=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Ge.svg||"innerHTML"in a)a.innerHTML=b;else{Je=Je||document.createElement("div");Je.innerHTML="<svg>"+b+"</svg>";for(b=Je.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
	function Le(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
	var Me={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,
	stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ne=["Webkit","ms","Moz","O"];Object.keys(Me).forEach(function(a){Ne.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Me[b]=Me[a]})});
	function Oe(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--");var e=c;var f=b[c];e=null==f||"boolean"===typeof f||""===f?"":d||"number"!==typeof f||0===f||Me.hasOwnProperty(e)&&Me[e]?(""+f).trim():f+"px";"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var Pe=p({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
	function Qe(a,b,c){b&&(Pe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?A("137",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?A("60"):void 0,"object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML?void 0:A("61")),null!=b.style&&"object"!==typeof b.style?A("62",c()):void 0)}
	function Re(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var Se=v.thatReturns("");
	function Te(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Sd(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case "scroll":Nd("scroll",a);break;case "focus":case "blur":Nd("focus",a);Nd("blur",a);c.blur=!0;c.focus=!0;break;case "cancel":case "close":$b(e,!0)&&Nd(e,a);break;case "invalid":case "submit":case "reset":break;default:-1===jb.indexOf(e)&&K(e,a)}c[e]=!0}}}
	function Ue(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Ge.html&&(d=He(a));d===Ge.html?"script"===a?(a=c.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):a="string"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function Ve(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}
	function We(a,b,c,d){var e=Re(b,c);switch(b){case "iframe":case "object":K("load",a);var f=c;break;case "video":case "audio":for(f=0;f<jb.length;f++)K(jb[f],a);f=c;break;case "source":K("error",a);f=c;break;case "img":case "image":case "link":K("error",a);K("load",a);f=c;break;case "form":K("reset",a);K("submit",a);f=c;break;case "details":K("toggle",a);f=c;break;case "input":Ic(a,c);f=Hc(a,c);K("invalid",a);Te(d,"onChange");break;case "option":f=ze(a,c);break;case "select":Be(a,c);f=p({},c,{value:void 0});
	K("invalid",a);Te(d,"onChange");break;case "textarea":De(a,c);f=Ce(a,c);K("invalid",a);Te(d,"onChange");break;default:f=c}Qe(b,f,Se);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];"style"===h?Oe(a,k,Se):"dangerouslySetInnerHTML"===h?(k=k?k.__html:void 0,null!=k&&Ke(a,k)):"children"===h?"string"===typeof k?("textarea"!==b||""!==k)&&Le(a,k):"number"===typeof k&&Le(a,""+k):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(ra.hasOwnProperty(h)?null!=k&&Te(d,
	h):null!=k&&Gc(a,h,k,e))}switch(b){case "input":cc(a);Nc(a,c,!1);break;case "textarea":cc(a);Fe(a,c);break;case "option":null!=c.value&&a.setAttribute("value",c.value);break;case "select":a.multiple=!!c.multiple;b=c.value;null!=b?Ae(a,!!c.multiple,b,!1):null!=c.defaultValue&&Ae(a,!!c.multiple,c.defaultValue,!0);break;default:"function"===typeof f.onClick&&(a.onclick=v)}}
	function Xe(a,b,c,d,e){var f=null;switch(b){case "input":c=Hc(a,c);d=Hc(a,d);f=[];break;case "option":c=ze(a,c);d=ze(a,d);f=[];break;case "select":c=p({},c,{value:void 0});d=p({},d,{value:void 0});f=[];break;case "textarea":c=Ce(a,c);d=Ce(a,d);f=[];break;default:"function"!==typeof c.onClick&&"function"===typeof d.onClick&&(a.onclick=v)}Qe(b,d,Se);b=a=void 0;var g=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if("style"===a){var h=c[a];for(b in h)h.hasOwnProperty(b)&&(g||
	(g={}),g[b]="")}else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(ra.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];h=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==h&&(null!=k||null!=h))if("style"===a)if(h){for(b in h)!h.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(g||(g={}),g[b]="");for(b in k)k.hasOwnProperty(b)&&h[b]!==k[b]&&(g||(g={}),g[b]=k[b])}else g||(f||(f=[]),f.push(a,g)),
	g=k;else"dangerouslySetInnerHTML"===a?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(a,""+k)):"children"===a?h===k||"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(a,""+k):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(ra.hasOwnProperty(a)?(null!=k&&Te(e,a),f||h===k||(f=[])):(f=f||[]).push(a,k))}g&&(f=f||[]).push("style",g);return f}
	function Ye(a,b,c,d,e){"input"===c&&"radio"===e.type&&null!=e.name&&Kc(a,e);Re(c,d);d=Re(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];"style"===g?Oe(a,h,Se):"dangerouslySetInnerHTML"===g?Ke(a,h):"children"===g?Le(a,h):Gc(a,g,h,d)}switch(c){case "input":Lc(a,e);break;case "textarea":Ee(a,e);break;case "select":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Ae(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?
	Ae(a,!!e.multiple,e.defaultValue,!0):Ae(a,!!e.multiple,e.multiple?[]:"",!1))}}
	function Ze(a,b,c,d,e){switch(b){case "iframe":case "object":K("load",a);break;case "video":case "audio":for(d=0;d<jb.length;d++)K(jb[d],a);break;case "source":K("error",a);break;case "img":case "image":case "link":K("error",a);K("load",a);break;case "form":K("reset",a);K("submit",a);break;case "details":K("toggle",a);break;case "input":Ic(a,c);K("invalid",a);Te(e,"onChange");break;case "select":Be(a,c);K("invalid",a);Te(e,"onChange");break;case "textarea":De(a,c),K("invalid",a),Te(e,"onChange")}Qe(b,
	c,Se);d=null;for(var f in c)if(c.hasOwnProperty(f)){var g=c[f];"children"===f?"string"===typeof g?a.textContent!==g&&(d=["children",g]):"number"===typeof g&&a.textContent!==""+g&&(d=["children",""+g]):ra.hasOwnProperty(f)&&null!=g&&Te(e,f)}switch(b){case "input":cc(a);Nc(a,c,!0);break;case "textarea":cc(a);Fe(a,c);break;case "select":case "option":break;default:"function"===typeof c.onClick&&(a.onclick=v)}return d}function $e(a,b){return a.nodeValue!==b}
	var af={createElement:Ue,createTextNode:Ve,setInitialProperties:We,diffProperties:Xe,updateProperties:Ye,diffHydratedProperties:Ze,diffHydratedText:$e,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case "input":Lc(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;
	c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Pa(d);e?void 0:A("90");dc(d);Lc(d,e)}}}break;case "textarea":Ee(a,c);break;case "select":b=c.value,null!=b&&Ae(a,!!c.multiple,b,!1)}}},bf=null,cf=null;function df(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}
	function ef(a,b){return"textarea"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&"string"===typeof b.dangerouslySetInnerHTML.__html}var ff=he,gf=je,hf=ke;function jf(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function kf(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var lf=[],mf=-1;function nf(a){return{current:a}}
	function M(a){0>mf||(a.current=lf[mf],lf[mf]=null,mf--)}function N(a,b){mf++;lf[mf]=a.current;a.current=b}var of=nf(ha),O=nf(!1),pf=ha;function qf(a){return rf(a)?pf:of.current}
	function sf(a,b){var c=a.type.contextTypes;if(!c)return ha;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function rf(a){return 2===a.tag&&null!=a.type.childContextTypes}function tf(a){rf(a)&&(M(O,a),M(of,a))}function uf(a){M(O,a);M(of,a)}
	function vf(a,b,c){of.current!==ha?A("168"):void 0;N(of,b,a);N(O,c,a)}function wf(a,b){var c=a.stateNode,d=a.type.childContextTypes;if("function"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:A("108",uc(a)||"Unknown",e);return p({},b,c)}function xf(a){if(!rf(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ha;pf=of.current;N(of,b,a);N(O,O.current,a);return!0}
	function yf(a,b){var c=a.stateNode;c?void 0:A("169");if(b){var d=wf(a,pf);c.__reactInternalMemoizedMergedChildContext=d;M(O,a);M(of,a);N(of,d,a)}else M(O,a);N(O,b,a)}
	function zf(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}
	function Af(a,b,c){var d=a.alternate;null===d?(d=new zf(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}
	function Bf(a,b,c){var d=a.type,e=a.key;a=a.props;if("function"===typeof d)var f=d.prototype&&d.prototype.isReactComponent?2:0;else if("string"===typeof d)f=5;else switch(d){case ic:return Cf(a.children,b,c,e);case pc:f=11;b|=3;break;case jc:f=11;b|=2;break;case kc:return d=new zf(15,a,e,b|4),d.type=kc,d.expirationTime=c,d;case rc:f=16;b|=2;break;default:a:{switch("object"===typeof d&&null!==d?d.$$typeof:null){case lc:f=13;break a;case mc:f=12;break a;case qc:f=14;break a;default:A("130",null==d?
	d:typeof d,"")}f=void 0}}b=new zf(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Cf(a,b,c,d){a=new zf(10,a,d,b);a.expirationTime=c;return a}function Df(a,b,c){a=new zf(6,a,null,b);a.expirationTime=c;return a}function Ef(a,b,c){b=new zf(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
	function Ff(a,b,c){b=new zf(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a}var Gf=null,Hf=null;function If(a){return function(b){try{return a(b)}catch(c){}}}
	function Jf(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Gf=If(function(a){return b.onCommitFiberRoot(c,a)});Hf=If(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Kf(a){"function"===typeof Gf&&Gf(a)}function Lf(a){"function"===typeof Hf&&Hf(a)}var Mf=!1;
	function Nf(a){return{expirationTime:0,baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Of(a){return{expirationTime:a.expirationTime,baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}
	function Pf(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Qf(a,b,c){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b);if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c}
	function Rf(a,b,c){var d=a.alternate;if(null===d){var e=a.updateQueue;var f=null;null===e&&(e=a.updateQueue=Nf(a.memoizedState))}else e=a.updateQueue,f=d.updateQueue,null===e?null===f?(e=a.updateQueue=Nf(a.memoizedState),f=d.updateQueue=Nf(d.memoizedState)):e=a.updateQueue=Of(f):null===f&&(f=d.updateQueue=Of(e));null===f||e===f?Qf(e,b,c):null===e.lastUpdate||null===f.lastUpdate?(Qf(e,b,c),Qf(f,b,c)):(Qf(e,b,c),f.lastUpdate=b)}
	function Sf(a,b,c){var d=a.updateQueue;d=null===d?a.updateQueue=Nf(a.memoizedState):Tf(a,d);null===d.lastCapturedUpdate?d.firstCapturedUpdate=d.lastCapturedUpdate=b:(d.lastCapturedUpdate.next=b,d.lastCapturedUpdate=b);if(0===d.expirationTime||d.expirationTime>c)d.expirationTime=c}function Tf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Of(b));return b}
	function Uf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,"function"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e="function"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return p({},d,e);case 2:Mf=!0}return d}
	function Vf(a,b,c,d,e){Mf=!1;if(!(0===b.expirationTime||b.expirationTime>e)){b=Tf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,n=f;null!==k;){var r=k.expirationTime;if(r>e){if(null===g&&(g=k,f=n),0===h||h>r)h=r}else n=Uf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}r=null;for(k=b.firstCapturedUpdate;null!==k;){var w=k.expirationTime;if(w>e){if(null===r&&(r=k,null===
	g&&(f=n)),0===h||h>w)h=w}else n=Uf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===r?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===r&&(f=n);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=r;b.expirationTime=h;a.memoizedState=n}}
	function Wf(a,b){"function"!==typeof a?A("191",a):void 0;a.call(b)}
	function Xf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);a=b.firstEffect;for(b.firstEffect=b.lastEffect=null;null!==a;){var d=a.callback;null!==d&&(a.callback=null,Wf(d,c));a=a.nextEffect}a=b.firstCapturedEffect;for(b.firstCapturedEffect=b.lastCapturedEffect=null;null!==a;)b=a.callback,null!==b&&(a.callback=null,Wf(b,c)),a=a.nextEffect}
	function Yf(a,b){return{value:a,source:b,stack:vc(b)}}var Zf=nf(null),$f=nf(null),ag=nf(0);function bg(a){var b=a.type._context;N(ag,b._changedBits,a);N($f,b._currentValue,a);N(Zf,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode}function cg(a){var b=ag.current,c=$f.current;M(Zf,a);M($f,a);M(ag,a);a=a.type._context;a._currentValue=c;a._changedBits=b}var dg={},eg=nf(dg),fg=nf(dg),gg=nf(dg);function hg(a){a===dg?A("174"):void 0;return a}
	function jg(a,b){N(gg,b,a);N(fg,a,a);N(eg,dg,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Ie(null,"");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=Ie(b,c)}M(eg,a);N(eg,b,a)}function kg(a){M(eg,a);M(fg,a);M(gg,a)}function lg(a){fg.current===a&&(M(eg,a),M(fg,a))}function mg(a,b,c){var d=a.memoizedState;b=b(c,d);d=null===b||void 0===b?d:p({},d,b);a.memoizedState=d;a=a.updateQueue;null!==a&&0===a.expirationTime&&(a.baseState=d)}
	var qg={isMounted:function(a){return(a=a._reactInternalFiber)?2===kd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=ng();d=og(d,a);var e=Pf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Rf(a,e,d);pg(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=ng();d=og(d,a);var e=Pf(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Rf(a,e,d);pg(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=ng();c=og(c,a);var d=Pf(c);d.tag=2;void 0!==
	b&&null!==b&&(d.callback=b);Rf(a,d,c);pg(a,c)}};function rg(a,b,c,d,e,f){var g=a.stateNode;a=a.type;return"function"===typeof g.shouldComponentUpdate?g.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ea(b,c)||!ea(d,e):!0}
	function sg(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&qg.enqueueReplaceState(b,b.state,null)}
	function tg(a,b){var c=a.type,d=a.stateNode,e=a.pendingProps,f=qf(a);d.props=e;d.state=a.memoizedState;d.refs=ha;d.context=sf(a,f);f=a.updateQueue;null!==f&&(Vf(a,f,e,d,b),d.state=a.memoizedState);f=a.type.getDerivedStateFromProps;"function"===typeof f&&(mg(a,f,e),d.state=a.memoizedState);"function"===typeof c.getDerivedStateFromProps||"function"===typeof d.getSnapshotBeforeUpdate||"function"!==typeof d.UNSAFE_componentWillMount&&"function"!==typeof d.componentWillMount||(c=d.state,"function"===typeof d.componentWillMount&&
	d.componentWillMount(),"function"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount(),c!==d.state&&qg.enqueueReplaceState(d,d.state,null),f=a.updateQueue,null!==f&&(Vf(a,f,e,d,b),d.state=a.memoizedState));"function"===typeof d.componentDidMount&&(a.effectTag|=4)}var ug=Array.isArray;
	function vg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?A("110"):void 0,d=c.stateNode);d?void 0:A("147",a);var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ha?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}"string"!==typeof a?A("148"):void 0;c._owner?void 0:A("254",a)}return a}
	function wg(a,b){"textarea"!==a.type&&A("31","[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,"")}
	function xg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Af(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=
	2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Df(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=vg(a,b,c),d.return=a,d;d=Bf(c,a.mode,d);d.ref=vg(a,b,c);d.return=a;return d}function n(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=
	Ef(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function r(a,b,c,d,f){if(null===b||10!==b.tag)return b=Cf(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function w(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Df(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case gc:return c=Bf(b,a.mode,c),c.ref=vg(a,null,b),c.return=a,c;case hc:return b=Ef(b,a.mode,c),b.return=a,b}if(ug(b)||tc(b))return b=Cf(b,a.mode,c,null),b.return=
	a,b;wg(a,b)}return null}function P(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case gc:return c.key===e?c.type===ic?r(a,b,c.props.children,d,e):k(a,b,c,d):null;case hc:return c.key===e?n(a,b,c,d):null}if(ug(c)||tc(c))return null!==e?null:r(a,b,c,d,null);wg(a,c)}return null}function nc(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);
	if("object"===typeof d&&null!==d){switch(d.$$typeof){case gc:return a=a.get(null===d.key?c:d.key)||null,d.type===ic?r(b,a,d.props.children,e,d.key):k(b,a,d,e);case hc:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e)}if(ug(d)||tc(d))return a=a.get(c)||null,r(b,a,d,e,null);wg(b,d)}return null}function Jd(e,g,h,k){for(var u=null,x=null,t=g,q=g=0,n=null;null!==t&&q<h.length;q++){t.index>q?(n=t,t=null):n=t.sibling;var l=P(e,t,h[q],k);if(null===l){null===t&&(t=n);break}a&&t&&null===l.alternate&&b(e,
	t);g=f(l,g,q);null===x?u=l:x.sibling=l;x=l;t=n}if(q===h.length)return c(e,t),u;if(null===t){for(;q<h.length;q++)if(t=w(e,h[q],k))g=f(t,g,q),null===x?u=t:x.sibling=t,x=t;return u}for(t=d(e,t);q<h.length;q++)if(n=nc(t,e,q,h[q],k))a&&null!==n.alternate&&t.delete(null===n.key?q:n.key),g=f(n,g,q),null===x?u=n:x.sibling=n,x=n;a&&t.forEach(function(a){return b(e,a)});return u}function E(e,g,h,k){var u=tc(h);"function"!==typeof u?A("150"):void 0;h=u.call(h);null==h?A("151"):void 0;for(var t=u=null,n=g,x=
	g=0,y=null,l=h.next();null!==n&&!l.done;x++,l=h.next()){n.index>x?(y=n,n=null):y=n.sibling;var r=P(e,n,l.value,k);if(null===r){n||(n=y);break}a&&n&&null===r.alternate&&b(e,n);g=f(r,g,x);null===t?u=r:t.sibling=r;t=r;n=y}if(l.done)return c(e,n),u;if(null===n){for(;!l.done;x++,l=h.next())l=w(e,l.value,k),null!==l&&(g=f(l,g,x),null===t?u=l:t.sibling=l,t=l);return u}for(n=d(e,n);!l.done;x++,l=h.next())l=nc(n,e,x,l.value,k),null!==l&&(a&&null!==l.alternate&&n.delete(null===l.key?x:l.key),g=f(l,g,x),null===
	t?u=l:t.sibling=l,t=l);a&&n.forEach(function(a){return b(e,a)});return u}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===ic&&null===f.key;k&&(f=f.props.children);var n="object"===typeof f&&null!==f;if(n)switch(f.$$typeof){case gc:a:{n=f.key;for(k=d;null!==k;){if(k.key===n)if(10===k.tag?f.type===ic:k.type===f.type){c(a,k.sibling);d=e(k,f.type===ic?f.props.children:f.props,h);d.ref=vg(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===ic?(d=Cf(f.props.children,
	a.mode,h,f.key),d.return=a,a=d):(h=Bf(f,a.mode,h),h.ref=vg(a,d,f),h.return=a,a=h)}return g(a);case hc:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Ef(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=
	a,a=d):(c(a,d),d=Df(f,a.mode,h),d.return=a,a=d),g(a);if(ug(f))return Jd(a,d,f,h);if(tc(f))return E(a,d,f,h);n&&wg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 2:case 1:h=a.type,A("152",h.displayName||h.name||"Component")}return c(a,d)}}var yg=xg(!0),zg=xg(!1),Ag=null,Bg=null,Cg=!1;function Dg(a,b){var c=new zf(5,null,null,0);c.type="DELETED";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}
	function Eg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Fg(a){if(Cg){var b=Bg;if(b){var c=b;if(!Eg(a,b)){b=jf(c);if(!b||!Eg(a,b)){a.effectTag|=2;Cg=!1;Ag=a;return}Dg(Ag,c)}Ag=a;Bg=kf(b)}else a.effectTag|=2,Cg=!1,Ag=a}}
	function Gg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;Ag=a}function Hg(a){if(a!==Ag)return!1;if(!Cg)return Gg(a),Cg=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!ef(b,a.memoizedProps))for(b=Bg;b;)Dg(a,b),b=jf(b);Gg(a);Bg=Ag?jf(a.stateNode):null;return!0}function Ig(){Bg=Ag=null;Cg=!1}function Q(a,b,c){Jg(a,b,c,b.expirationTime)}function Jg(a,b,c,d){b.child=null===a?zg(b,null,c,d):yg(b,a.child,c,d)}
	function Kg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Lg(a,b,c,d,e){Kg(a,b);var f=0!==(b.effectTag&64);if(!c&&!f)return d&&yf(b,!1),R(a,b);c=b.stateNode;ec.current=b;var g=f?null:c.render();b.effectTag|=1;f&&(Jg(a,b,null,e),b.child=null);Jg(a,b,g,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&yf(b,!0);return b.child}
	function Mg(a){var b=a.stateNode;b.pendingContext?vf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&vf(a,b.context,!1);jg(a,b.containerInfo)}
	function Ng(a,b,c,d){var e=a.child;null!==e&&(e.return=a);for(;null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var g=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==g&&(0===g.expirationTime||g.expirationTime>d)&&(g.expirationTime=d);else if(null!==g&&(0===g.expirationTime||g.expirationTime>d))g.expirationTime=d;else break;f=f.return}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=
	e.child}if(null!==f)f.return=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){e.return=f.return;f=e;break}f=f.return}e=f}}
	function Rg(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps,g=!0;if(O.current)g=!1;else if(f===e)return b.stateNode=0,bg(b),R(a,b);var h=e.value;b.memoizedProps=e;if(null===f)h=1073741823;else if(f.value===e.value){if(f.children===e.children&&g)return b.stateNode=0,bg(b),R(a,b);h=0}else{var k=f.value;if(k===h&&(0!==k||1/k===1/h)||k!==k&&h!==h){if(f.children===e.children&&g)return b.stateNode=0,bg(b),R(a,b);h=0}else if(h="function"===typeof d._calculateChangedBits?d._calculateChangedBits(k,
	h):1073741823,h|=0,0===h){if(f.children===e.children&&g)return b.stateNode=0,bg(b),R(a,b)}else Ng(b,d,h,c)}b.stateNode=h;bg(b);Q(a,b,e.children);return b.child}function R(a,b){null!==a&&b.child!==a.child?A("153"):void 0;if(null!==b.child){a=b.child;var c=Af(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Af(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}
	function Sg(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:Mg(b);break;case 2:xf(b);break;case 4:jg(b,b.stateNode.containerInfo);break;case 13:bg(b)}return null}switch(b.tag){case 0:null!==a?A("155"):void 0;var d=b.type,e=b.pendingProps,f=qf(b);f=sf(b,f);d=d(e,f);b.effectTag|=1;"object"===typeof d&&null!==d&&"function"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,f=f.getDerivedStateFromProps,"function"===
	typeof f&&mg(b,f,e),e=xf(b),d.updater=qg,b.stateNode=d,d._reactInternalFiber=b,tg(b,c),a=Lg(a,b,!0,e,c)):(b.tag=1,Q(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,O.current||b.memoizedProps!==c?(d=qf(b),d=sf(b,d),e=e(c,d),b.effectTag|=1,Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 2:e=xf(b);if(null===a)if(null===b.stateNode){var g=b.pendingProps,h=b.type;d=qf(b);var k=2===b.tag&&null!=b.type.contextTypes;f=k?sf(b,d):ha;g=new h(g,f);b.memoizedState=null!==
	g.state&&void 0!==g.state?g.state:null;g.updater=qg;b.stateNode=g;g._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=d,k.__reactInternalMemoizedMaskedChildContext=f);tg(b,c);d=!0}else{h=b.type;d=b.stateNode;k=b.memoizedProps;f=b.pendingProps;d.props=k;var n=d.context;g=qf(b);g=sf(b,g);var r=h.getDerivedStateFromProps;(h="function"===typeof r||"function"===typeof d.getSnapshotBeforeUpdate)||"function"!==typeof d.UNSAFE_componentWillReceiveProps&&"function"!==typeof d.componentWillReceiveProps||
	(k!==f||n!==g)&&sg(b,d,f,g);Mf=!1;var w=b.memoizedState;n=d.state=w;var P=b.updateQueue;null!==P&&(Vf(b,P,f,d,c),n=b.memoizedState);k!==f||w!==n||O.current||Mf?("function"===typeof r&&(mg(b,r,f),n=b.memoizedState),(k=Mf||rg(b,k,f,w,n,g))?(h||"function"!==typeof d.UNSAFE_componentWillMount&&"function"!==typeof d.componentWillMount||("function"===typeof d.componentWillMount&&d.componentWillMount(),"function"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount()),"function"===typeof d.componentDidMount&&
	(b.effectTag|=4)):("function"===typeof d.componentDidMount&&(b.effectTag|=4),b.memoizedProps=f,b.memoizedState=n),d.props=f,d.state=n,d.context=g,d=k):("function"===typeof d.componentDidMount&&(b.effectTag|=4),d=!1)}else h=b.type,d=b.stateNode,f=b.memoizedProps,k=b.pendingProps,d.props=f,n=d.context,g=qf(b),g=sf(b,g),r=h.getDerivedStateFromProps,(h="function"===typeof r||"function"===typeof d.getSnapshotBeforeUpdate)||"function"!==typeof d.UNSAFE_componentWillReceiveProps&&"function"!==typeof d.componentWillReceiveProps||
	(f!==k||n!==g)&&sg(b,d,k,g),Mf=!1,n=b.memoizedState,w=d.state=n,P=b.updateQueue,null!==P&&(Vf(b,P,k,d,c),w=b.memoizedState),f!==k||n!==w||O.current||Mf?("function"===typeof r&&(mg(b,r,k),w=b.memoizedState),(r=Mf||rg(b,f,k,n,w,g))?(h||"function"!==typeof d.UNSAFE_componentWillUpdate&&"function"!==typeof d.componentWillUpdate||("function"===typeof d.componentWillUpdate&&d.componentWillUpdate(k,w,g),"function"===typeof d.UNSAFE_componentWillUpdate&&d.UNSAFE_componentWillUpdate(k,w,g)),"function"===typeof d.componentDidUpdate&&
	(b.effectTag|=4),"function"===typeof d.getSnapshotBeforeUpdate&&(b.effectTag|=256)):("function"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),"function"!==typeof d.getSnapshotBeforeUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),b.memoizedProps=k,b.memoizedState=w),d.props=k,d.state=w,d.context=g,d=r):("function"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),"function"!==typeof d.getSnapshotBeforeUpdate||
	f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),d=!1);return Lg(a,b,d,e,c);case 3:Mg(b);e=b.updateQueue;if(null!==e)if(d=b.memoizedState,d=null!==d?d.element:null,Vf(b,e,b.pendingProps,null,c),e=b.memoizedState.element,e===d)Ig(),a=R(a,b);else{d=b.stateNode;if(d=(null===a||null===a.child)&&d.hydrate)Bg=kf(b.stateNode.containerInfo),Ag=b,d=Cg=!0;d?(b.effectTag|=2,b.child=zg(b,null,e,c)):(Ig(),Q(a,b,e));a=b.child}else Ig(),a=R(a,b);return a;case 5:a:{hg(gg.current);e=hg(eg.current);d=Ie(e,
	b.type);e!==d&&(N(fg,b,b),N(eg,d,b));null===a&&Fg(b);e=b.type;k=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!O.current&&k===d){if(k=b.mode&1&&!!d.hidden)b.expirationTime=1073741823;if(!k||1073741823!==c){a=R(a,b);break a}}k=d.children;ef(e,d)?k=null:f&&ef(e,f)&&(b.effectTag|=16);Kg(a,b);1073741823!==c&&b.mode&1&&d.hidden?(b.expirationTime=1073741823,b.memoizedProps=d,a=null):(Q(a,b,k),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Fg(b),b.memoizedProps=b.pendingProps,
	null;case 16:return null;case 4:return jg(b,b.stateNode.containerInfo),e=b.pendingProps,O.current||b.memoizedProps!==e?(null===a?b.child=yg(b,null,e,c):Q(a,b,e),b.memoizedProps=e,a=b.child):a=R(a,b),a;case 14:return e=b.type.render,c=b.pendingProps,d=b.ref,O.current||b.memoizedProps!==c||d!==(null!==a?a.ref:null)?(e=e(c,d),Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 10:return c=b.pendingProps,O.current||b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 11:return c=
	b.pendingProps.children,O.current||null!==c&&b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 15:return c=b.pendingProps,b.memoizedProps===c?a=R(a,b):(Q(a,b,c.children),b.memoizedProps=c,a=b.child),a;case 13:return Rg(a,b,c);case 12:a:if(d=b.type,f=b.pendingProps,k=b.memoizedProps,e=d._currentValue,g=d._changedBits,O.current||0!==g||k!==f){b.memoizedProps=f;h=f.unstable_observedBits;if(void 0===h||null===h)h=1073741823;b.stateNode=h;if(0!==(g&h))Ng(b,d,g,c);else if(k===f){a=
	R(a,b);break a}c=f.children;c=c(e);b.effectTag|=1;Q(a,b,c);a=b.child}else a=R(a,b);return a;default:A("156")}}function Tg(a){a.effectTag|=4}var Ug=void 0,Vg=void 0,Wg=void 0;Ug=function(){};Vg=function(a,b,c){(b.updateQueue=c)&&Tg(b)};Wg=function(a,b,c,d){c!==d&&Tg(b)};
	function Xg(a,b){var c=b.pendingProps;switch(b.tag){case 1:return null;case 2:return tf(b),null;case 3:kg(b);uf(b);var d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Hg(b),b.effectTag&=-3;Ug(b);return null;case 5:lg(b);d=hg(gg.current);var e=b.type;if(null!==a&&null!=b.stateNode){var f=a.memoizedProps,g=b.stateNode,h=hg(eg.current);g=Xe(g,e,f,c,d);Vg(a,b,g,e,f,c,d,h);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?
	A("166"):void 0,null;a=hg(eg.current);if(Hg(b))c=b.stateNode,e=b.type,f=b.memoizedProps,c[C]=b,c[Ma]=f,d=Ze(c,e,f,a,d),b.updateQueue=d,null!==d&&Tg(b);else{a=Ue(e,c,d,a);a[C]=b;a[Ma]=c;a:for(f=b.child;null!==f;){if(5===f.tag||6===f.tag)a.appendChild(f.stateNode);else if(4!==f.tag&&null!==f.child){f.child.return=f;f=f.child;continue}if(f===b)break;for(;null===f.sibling;){if(null===f.return||f.return===b)break a;f=f.return}f.sibling.return=f.return;f=f.sibling}We(a,e,c,d);df(e,c)&&Tg(b);b.stateNode=
	a}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)Wg(a,b,a.memoizedProps,c);else{if("string"!==typeof c)return null===b.stateNode?A("166"):void 0,null;d=hg(gg.current);hg(eg.current);Hg(b)?(d=b.stateNode,c=b.memoizedProps,d[C]=b,$e(d,c)&&Tg(b)):(d=Ve(c,d),d[C]=b,b.stateNode=d)}return null;case 14:return null;case 16:return null;case 10:return null;case 11:return null;case 15:return null;case 4:return kg(b),Ug(b),null;case 13:return cg(b),null;case 12:return null;case 0:A("167");
	default:A("156")}}function Yg(a,b){var c=b.source;null===b.stack&&null!==c&&vc(c);null!==c&&uc(c);b=b.value;null!==a&&2===a.tag&&uc(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}function Zg(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){$g(a,c)}else b.current=null}
	function ah(a){"function"===typeof Lf&&Lf(a);switch(a.tag){case 2:Zg(a);var b=a.stateNode;if("function"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){$g(a,c)}break;case 5:Zg(a);break;case 4:bh(a)}}function ch(a){return 5===a.tag||3===a.tag||4===a.tag}
	function dh(a){a:{for(var b=a.return;null!==b;){if(ch(b)){var c=b;break a}b=b.return}A("160");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:A("161")}c.effectTag&16&&(Le(b,""),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ch(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;
	if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?f.parentNode.insertBefore(g,f):f.appendChild(g)):b.appendChild(e.stateNode);else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===
	e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}
	function bh(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?A("160"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(ah(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?
	(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?d=b.stateNode.containerInfo:ah(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}
	function eh(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&(c[Ma]=d,Ye(c,f,e,a,d))}break;case 6:null===b.stateNode?A("162"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 15:break;case 16:break;default:A("163")}}function fh(a,b,c){c=Pf(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){gh(d);Yg(a,b)};return c}
	function hh(a,b,c){c=Pf(c);c.tag=3;var d=a.stateNode;null!==d&&"function"===typeof d.componentDidCatch&&(c.callback=function(){null===ih?ih=new Set([this]):ih.add(this);var c=b.value,d=b.stack;Yg(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:""})});return c}
	function jh(a,b,c,d,e,f){c.effectTag|=512;c.firstEffect=c.lastEffect=null;d=Yf(d,c);a=b;do{switch(a.tag){case 3:a.effectTag|=1024;d=fh(a,d,f);Sf(a,d,f);return;case 2:if(b=d,c=a.stateNode,0===(a.effectTag&64)&&null!==c&&"function"===typeof c.componentDidCatch&&(null===ih||!ih.has(c))){a.effectTag|=1024;d=hh(a,b,f);Sf(a,d,f);return}}a=a.return}while(null!==a)}
	function kh(a){switch(a.tag){case 2:tf(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return kg(a),uf(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return lg(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 4:return kg(a),null;case 13:return cg(a),null;default:return null}}var lh=ff(),mh=2,nh=lh,oh=0,ph=0,qh=!1,S=null,rh=null,T=0,sh=-1,th=!1,U=null,uh=!1,vh=!1,ih=null;
	function wh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 2:tf(b);break;case 3:kg(b);uf(b);break;case 5:lg(b);break;case 4:kg(b);break;case 13:cg(b)}a=a.return}rh=null;T=0;sh=-1;th=!1;S=null;vh=!1}
	function xh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){b=Xg(b,a,T);var e=a;if(1073741823===T||1073741823!==e.expirationTime){var f=0;switch(e.tag){case 3:case 2:var g=e.updateQueue;null!==g&&(f=g.expirationTime)}for(g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&
	(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{vh=!0;break}}else{a=kh(a,th,T);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}
	function yh(a){var b=Sg(a.alternate,a,T);null===b&&(b=xh(a));ec.current=null;return b}
	function zh(a,b,c){qh?A("243"):void 0;qh=!0;if(b!==T||a!==rh||null===S)wh(),rh=a,T=b,sh=-1,S=Af(rh.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;th=!c||T<=mh;do{try{if(c)for(;null!==S&&!Ah();)S=yh(S);else for(;null!==S;)S=yh(S)}catch(f){if(null===S)d=!0,gh(f);else{null===S?A("271"):void 0;c=S;var e=c.return;if(null===e){d=!0;gh(f);break}jh(a,e,c,f,th,T,nh);S=xh(c)}}break}while(1);qh=!1;if(d)return null;if(null===S){if(vh)return a.pendingCommitExpirationTime=b,a.current.alternate;th?A("262"):
	void 0;0<=sh&&setTimeout(function(){var b=a.current.expirationTime;0!==b&&(0===a.remainingExpirationTime||a.remainingExpirationTime<b)&&Bh(a,b)},sh);Ch(a.current.expirationTime)}return null}
	function $g(a,b){var c;a:{qh&&!uh?A("263"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromCatch||"function"===typeof d.componentDidCatch&&(null===ih||!ih.has(d))){a=Yf(b,a);a=hh(c,a,1);Rf(c,a,1);pg(c,1);c=void 0;break a}break;case 3:a=Yf(b,a);a=fh(c,a,1);Rf(c,a,1);pg(c,1);c=void 0;break a}c=c.return}3===a.tag&&(c=Yf(b,a),c=fh(a,c,1),Rf(a,c,1),pg(a,1));c=void 0}return c}
	function Dh(){var a=2+25*(((ng()-2+500)/25|0)+1);a<=oh&&(a=oh+1);return oh=a}function og(a,b){a=0!==ph?ph:qh?uh?1:T:b.mode&1?Eh?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1):1;Eh&&(0===Fh||a>Fh)&&(Fh=a);return a}
	function pg(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a.return)if(3===a.tag){var c=a.stateNode;!qh&&0!==T&&b<T&&wh();var d=c.current.expirationTime;qh&&!uh&&rh===c||Bh(c,d);Gh>Hh&&A("185")}else break;a=a.return}}function ng(){nh=ff()-lh;return mh=(nh/10|0)+2}
	function Ih(a){var b=ph;ph=2+25*(((ng()-2+500)/25|0)+1);try{return a()}finally{ph=b}}function Jh(a,b,c,d,e){var f=ph;ph=1;try{return a(b,c,d,e)}finally{ph=f}}var Kh=null,V=null,Lh=0,Mh=void 0,W=!1,X=null,Y=0,Fh=0,Nh=!1,Oh=!1,Ph=null,Qh=null,Z=!1,Rh=!1,Eh=!1,Sh=null,Hh=1E3,Gh=0,Th=1;function Uh(a){if(0!==Lh){if(a>Lh)return;null!==Mh&&hf(Mh)}var b=ff()-lh;Lh=a;Mh=gf(Vh,{timeout:10*(a-2)-b})}
	function Bh(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===V?(Kh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=Kh);else{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}W||(Z?Rh&&(X=a,Y=1,Wh(a,1,!1)):1===b?Xh():Uh(b))}
	function Yh(){var a=0,b=null;if(null!==V)for(var c=V,d=Kh;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===V?A("244"):void 0;if(d===d.nextScheduledRoot){Kh=V=d.nextScheduledRoot=null;break}else if(d===Kh)Kh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=Kh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===V)break;
	c=d;d=d.nextScheduledRoot}}c=X;null!==c&&c===b&&1===a?Gh++:Gh=0;X=b;Y=a}function Vh(a){Zh(0,!0,a)}function Xh(){Zh(1,!1,null)}function Zh(a,b,c){Qh=c;Yh();if(b)for(;null!==X&&0!==Y&&(0===a||a>=Y)&&(!Nh||ng()>=Y);)ng(),Wh(X,Y,!Nh),Yh();else for(;null!==X&&0!==Y&&(0===a||a>=Y);)Wh(X,Y,!1),Yh();null!==Qh&&(Lh=0,Mh=null);0!==Y&&Uh(Y);Qh=null;Nh=!1;$h()}function ai(a,b){W?A("253"):void 0;X=a;Y=b;Wh(a,b,!1);Xh();$h()}
	function $h(){Gh=0;if(null!==Sh){var a=Sh;Sh=null;for(var b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Oh||(Oh=!0,Ph=d)}}}if(Oh)throw a=Ph,Ph=null,Oh=!1,a;}function Wh(a,b,c){W?A("245"):void 0;W=!0;c?(c=a.finishedWork,null!==c?bi(a,c,b):(c=zh(a,b,!0),null!==c&&(Ah()?a.finishedWork=c:bi(a,c,b)))):(c=a.finishedWork,null!==c?bi(a,c,b):(c=zh(a,b,!1),null!==c&&bi(a,c,b)));W=!1}
	function bi(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Sh?Sh=[d]:Sh.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=0;return}a.finishedWork=null;uh=qh=!0;c=b.stateNode;c.current===b?A("177"):void 0;d=c.pendingCommitExpirationTime;0===d?A("261"):void 0;c.pendingCommitExpirationTime=0;ng();ec.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var e=b.firstEffect}else e=b;else e=b.firstEffect;bf=Id;var f=da();if(Vd(f)){if("selectionStart"in
	f)var g={start:f.selectionStart,end:f.selectionEnd};else a:{var h=window.getSelection&&window.getSelection();if(h&&0!==h.rangeCount){g=h.anchorNode;var k=h.anchorOffset,n=h.focusNode;h=h.focusOffset;try{g.nodeType,n.nodeType}catch(Wa){g=null;break a}var r=0,w=-1,P=-1,nc=0,Jd=0,E=f,t=null;b:for(;;){for(var x;;){E!==g||0!==k&&3!==E.nodeType||(w=r+k);E!==n||0!==h&&3!==E.nodeType||(P=r+h);3===E.nodeType&&(r+=E.nodeValue.length);if(null===(x=E.firstChild))break;t=E;E=x}for(;;){if(E===f)break b;t===g&&
	++nc===k&&(w=r);t===n&&++Jd===h&&(P=r);if(null!==(x=E.nextSibling))break;E=t;t=E.parentNode}E=x}g=-1===w||-1===P?null:{start:w,end:P}}else g=null}g=g||{start:0,end:0}}else g=null;cf={focusedElem:f,selectionRange:g};Kd(!1);for(U=e;null!==U;){f=!1;g=void 0;try{for(;null!==U;){if(U.effectTag&256){var u=U.alternate;k=U;switch(k.tag){case 2:if(k.effectTag&256&&null!==u){var y=u.memoizedProps,D=u.memoizedState,ja=k.stateNode;ja.props=k.memoizedProps;ja.state=k.memoizedState;var ni=ja.getSnapshotBeforeUpdate(y,
	D);ja.__reactInternalSnapshotBeforeUpdate=ni}break;case 3:case 5:case 6:case 4:break;default:A("163")}}U=U.nextEffect}}catch(Wa){f=!0,g=Wa}f&&(null===U?A("178"):void 0,$g(U,g),null!==U&&(U=U.nextEffect))}for(U=e;null!==U;){u=!1;y=void 0;try{for(;null!==U;){var q=U.effectTag;q&16&&Le(U.stateNode,"");if(q&128){var z=U.alternate;if(null!==z){var l=z.ref;null!==l&&("function"===typeof l?l(null):l.current=null)}}switch(q&14){case 2:dh(U);U.effectTag&=-3;break;case 6:dh(U);U.effectTag&=-3;eh(U.alternate,
	U);break;case 4:eh(U.alternate,U);break;case 8:D=U,bh(D),D.return=null,D.child=null,D.alternate&&(D.alternate.child=null,D.alternate.return=null)}U=U.nextEffect}}catch(Wa){u=!0,y=Wa}u&&(null===U?A("178"):void 0,$g(U,y),null!==U&&(U=U.nextEffect))}l=cf;z=da();q=l.focusedElem;u=l.selectionRange;if(z!==q&&fa(document.documentElement,q)){null!==u&&Vd(q)&&(z=u.start,l=u.end,void 0===l&&(l=z),"selectionStart"in q?(q.selectionStart=z,q.selectionEnd=Math.min(l,q.value.length)):window.getSelection&&(z=window.getSelection(),
	y=q[lb()].length,l=Math.min(u.start,y),u=void 0===u.end?l:Math.min(u.end,y),!z.extend&&l>u&&(y=u,u=l,l=y),y=Ud(q,l),D=Ud(q,u),y&&D&&(1!==z.rangeCount||z.anchorNode!==y.node||z.anchorOffset!==y.offset||z.focusNode!==D.node||z.focusOffset!==D.offset)&&(ja=document.createRange(),ja.setStart(y.node,y.offset),z.removeAllRanges(),l>u?(z.addRange(ja),z.extend(D.node,D.offset)):(ja.setEnd(D.node,D.offset),z.addRange(ja)))));z=[];for(l=q;l=l.parentNode;)1===l.nodeType&&z.push({element:l,left:l.scrollLeft,
	top:l.scrollTop});"function"===typeof q.focus&&q.focus();for(q=0;q<z.length;q++)l=z[q],l.element.scrollLeft=l.left,l.element.scrollTop=l.top}cf=null;Kd(bf);bf=null;c.current=b;for(U=e;null!==U;){e=!1;q=void 0;try{for(z=d;null!==U;){var ig=U.effectTag;if(ig&36){var oc=U.alternate;l=U;u=z;switch(l.tag){case 2:var ca=l.stateNode;if(l.effectTag&4)if(null===oc)ca.props=l.memoizedProps,ca.state=l.memoizedState,ca.componentDidMount();else{var xi=oc.memoizedProps,yi=oc.memoizedState;ca.props=l.memoizedProps;
	ca.state=l.memoizedState;ca.componentDidUpdate(xi,yi,ca.__reactInternalSnapshotBeforeUpdate)}var Og=l.updateQueue;null!==Og&&(ca.props=l.memoizedProps,ca.state=l.memoizedState,Xf(l,Og,ca,u));break;case 3:var Pg=l.updateQueue;if(null!==Pg){y=null;if(null!==l.child)switch(l.child.tag){case 5:y=l.child.stateNode;break;case 2:y=l.child.stateNode}Xf(l,Pg,y,u)}break;case 5:var zi=l.stateNode;null===oc&&l.effectTag&4&&df(l.type,l.memoizedProps)&&zi.focus();break;case 6:break;case 4:break;case 15:break;case 16:break;
	default:A("163")}}if(ig&128){l=void 0;var yc=U.ref;if(null!==yc){var Qg=U.stateNode;switch(U.tag){case 5:l=Qg;break;default:l=Qg}"function"===typeof yc?yc(l):yc.current=l}}var Ai=U.nextEffect;U.nextEffect=null;U=Ai}}catch(Wa){e=!0,q=Wa}e&&(null===U?A("178"):void 0,$g(U,q),null!==U&&(U=U.nextEffect))}qh=uh=!1;"function"===typeof Kf&&Kf(b.stateNode);b=c.current.expirationTime;0===b&&(ih=null);a.remainingExpirationTime=b}function Ah(){return null===Qh||Qh.timeRemaining()>Th?!1:Nh=!0}
	function gh(a){null===X?A("246"):void 0;X.remainingExpirationTime=0;Oh||(Oh=!0,Ph=a)}function Ch(a){null===X?A("246"):void 0;X.remainingExpirationTime=a}function ci(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Xh()}}function di(a,b){if(Z&&!Rh){Rh=!0;try{return a(b)}finally{Rh=!1}}return a(b)}function ei(a,b){W?A("187"):void 0;var c=Z;Z=!0;try{return Jh(a,b)}finally{Z=c,Xh()}}
	function fi(a,b,c){if(Eh)return a(b,c);Z||W||0===Fh||(Zh(Fh,!1,null),Fh=0);var d=Eh,e=Z;Z=Eh=!0;try{return a(b,c)}finally{Eh=d,(Z=e)||W||Xh()}}function gi(a){var b=Z;Z=!0;try{Jh(a)}finally{(Z=b)||W||Zh(1,!1,null)}}
	function hi(a,b,c,d,e){var f=b.current;if(c){c=c._reactInternalFiber;var g;b:{2===kd(c)&&2===c.tag?void 0:A("170");for(g=c;3!==g.tag;){if(rf(g)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}(g=g.return)?void 0:A("171")}g=g.stateNode.context}c=rf(c)?wf(c,g):g}else c=ha;null===b.context?b.context=c:b.pendingContext=c;b=e;e=Pf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);Rf(f,e,d);pg(f,d);return d}
	function ii(a){var b=a._reactInternalFiber;void 0===b&&("function"===typeof a.render?A("188"):A("268",Object.keys(a)));a=nd(b);return null===a?null:a.stateNode}function ji(a,b,c,d){var e=b.current,f=ng();e=og(f,e);return hi(a,b,c,e,d)}function ki(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}
	function li(a){var b=a.findFiberByHostInstance;return Jf(p({},a,{findHostInstanceByFiber:function(a){a=nd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}
	var mi={updateContainerAtExpirationTime:hi,createContainer:function(a,b,c){return Ff(a,b,c)},updateContainer:ji,flushRoot:ai,requestWork:Bh,computeUniqueAsyncExpiration:Dh,batchedUpdates:ci,unbatchedUpdates:di,deferredUpdates:Ih,syncUpdates:Jh,interactiveUpdates:fi,flushInteractiveUpdates:function(){W||0===Fh||(Zh(Fh,!1,null),Fh=0)},flushControlled:gi,flushSync:ei,getPublicRootInstance:ki,findHostInstance:ii,findHostInstanceWithNoPortals:function(a){a=od(a);return null===a?null:a.stateNode},injectIntoDevTools:li};
	function oi(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:hc,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}Kb.injectFiberControlledHostComponent(af);function pi(a){this._expirationTime=Dh();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}
	pi.prototype.render=function(a){this._defer?void 0:A("250");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new qi;hi(a,b,null,c,d._onCommit);return d};pi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};
	pi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:A("251");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?A("251"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;ai(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=
	null,this._defer=!1};pi.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function qi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}qi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};
	qi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];"function"!==typeof c?A("191",c):void 0;c()}}};function ri(a,b,c){this._internalRoot=Ff(a,b,c)}ri.prototype.render=function(a,b){var c=this._internalRoot,d=new qi;b=void 0===b?null:b;null!==b&&d.then(b);ji(a,c,null,d._onCommit);return d};
	ri.prototype.unmount=function(a){var b=this._internalRoot,c=new qi;a=void 0===a?null:a;null!==a&&c.then(a);ji(null,b,null,c._onCommit);return c};ri.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new qi;c=void 0===c?null:c;null!==c&&e.then(c);ji(b,d,a,e._onCommit);return e};
	ri.prototype.createBatch=function(){var a=new pi(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function si(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}Sb=mi.batchedUpdates;Tb=mi.interactiveUpdates;Ub=mi.flushInteractiveUpdates;
	function ti(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new ri(a,!1,b)}
	function ui(a,b,c,d,e){si(c)?void 0:A("200");var f=c._reactRootContainer;if(f){if("function"===typeof e){var g=e;e=function(){var a=ki(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=ti(c,d);if("function"===typeof e){var h=e;e=function(){var a=ki(f._internalRoot);h.call(a)}}di(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return ki(f._internalRoot)}
	function vi(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;si(b)?void 0:A("200");return oi(a,b,null,c)}
	var wi={createPortal:vi,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:ii(a)},hydrate:function(a,b,c){return ui(null,a,b,!0,c)},render:function(a,b,c){return ui(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?A("38"):void 0;return ui(a,b,c,!1,d)},unmountComponentAtNode:function(a){si(a)?void 0:A("40");return a._reactRootContainer?(di(function(){ui(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return vi.apply(void 0,
	arguments)},unstable_batchedUpdates:ci,unstable_deferredUpdates:Ih,unstable_interactiveUpdates:fi,flushSync:ei,unstable_flushControlled:gi,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ka,EventPluginRegistry:va,EventPropagators:$a,ReactControlledComponent:Rb,ReactDOMComponentTree:Qa,ReactDOMEventListener:Od},unstable_createRoot:function(a,b){return new ri(a,!0,null!=b&&!0===b.hydrate)}};li({findFiberByHostInstance:Na,bundleType:0,version:"16.4.2",rendererPackageName:"react-dom"});
	var Bi={default:wi},Ci=Bi&&wi||Bi;module.exports=Ci.default?Ci.default:Ci;


/***/ },
/* 15 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ },
/* 16 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 *
	 * @param {?DOMDocument} doc Defaults to current document.
	 * @return {?DOMElement}
	 */
	function getActiveElement(doc) /*?DOMElement*/{
	  doc = doc || (typeof document !== 'undefined' ? document : undefined);
	  if (typeof doc === 'undefined') {
	    return null;
	  }
	  try {
	    return doc.activeElement || doc.body;
	  } catch (e) {
	    return doc.body;
	  }
	}

	module.exports = getActiveElement;

/***/ },
/* 17 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 * 
	 */

	/*eslint-disable no-self-compare */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	var isTextNode = __webpack_require__(19);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var isNode = __webpack_require__(20);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ },
/* 20 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  var doc = object ? object.ownerDocument || object : document;
	  var defaultView = doc.defaultView || window;
	  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.4.2
	 * react-dom.development.js
	 *
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';



	if (process.env.NODE_ENV !== "production") {
	  (function() {
	'use strict';

	var invariant = __webpack_require__(6);
	var React = __webpack_require__(2);
	var warning = __webpack_require__(10);
	var ExecutionEnvironment = __webpack_require__(15);
	var _assign = __webpack_require__(5);
	var emptyFunction = __webpack_require__(8);
	var checkPropTypes = __webpack_require__(11);
	var getActiveElement = __webpack_require__(16);
	var shallowEqual = __webpack_require__(17);
	var containsNode = __webpack_require__(18);
	var emptyObject = __webpack_require__(7);
	var hyphenateStyleName = __webpack_require__(22);
	var camelizeStyleName = __webpack_require__(24);

	// Relying on the `invariant()` implementation lets us
	// have preserve the format and params in the www builds.

	!React ? invariant(false, 'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.') : void 0;

	var invokeGuardedCallback = function (name, func, context, a, b, c, d, e, f) {
	  this._hasCaughtError = false;
	  this._caughtError = null;
	  var funcArgs = Array.prototype.slice.call(arguments, 3);
	  try {
	    func.apply(context, funcArgs);
	  } catch (error) {
	    this._caughtError = error;
	    this._hasCaughtError = true;
	  }
	};

	{
	  // In DEV mode, we swap out invokeGuardedCallback for a special version
	  // that plays more nicely with the browser's DevTools. The idea is to preserve
	  // "Pause on exceptions" behavior. Because React wraps all user-provided
	  // functions in invokeGuardedCallback, and the production version of
	  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
	  // like caught exceptions, and the DevTools won't pause unless the developer
	  // takes the extra step of enabling pause on caught exceptions. This is
	  // untintuitive, though, because even though React has caught the error, from
	  // the developer's perspective, the error is uncaught.
	  //
	  // To preserve the expected "Pause on exceptions" behavior, we don't use a
	  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
	  // DOM node, and call the user-provided callback from inside an event handler
	  // for that fake event. If the callback throws, the error is "captured" using
	  // a global event handler. But because the error happens in a different
	  // event loop context, it does not interrupt the normal program flow.
	  // Effectively, this gives us try-catch behavior without actually using
	  // try-catch. Neat!

	  // Check that the browser supports the APIs we need to implement our special
	  // DEV version of invokeGuardedCallback
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');

	    var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
	      // If document doesn't exist we know for sure we will crash in this method
	      // when we call document.createEvent(). However this can cause confusing
	      // errors: https://github.com/facebookincubator/create-react-app/issues/3482
	      // So we preemptively throw with a better message instead.
	      !(typeof document !== 'undefined') ? invariant(false, 'The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.') : void 0;
	      var evt = document.createEvent('Event');

	      // Keeps track of whether the user-provided callback threw an error. We
	      // set this to true at the beginning, then set it to false right after
	      // calling the function. If the function errors, `didError` will never be
	      // set to false. This strategy works even if the browser is flaky and
	      // fails to call our global error handler, because it doesn't rely on
	      // the error event at all.
	      var didError = true;

	      // Create an event handler for our fake event. We will synchronously
	      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
	      // call the user-provided callback.
	      var funcArgs = Array.prototype.slice.call(arguments, 3);
	      function callCallback() {
	        // We immediately remove the callback from event listeners so that
	        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
	        // nested call would trigger the fake event handlers of any call higher
	        // in the stack.
	        fakeNode.removeEventListener(evtType, callCallback, false);
	        func.apply(context, funcArgs);
	        didError = false;
	      }

	      // Create a global error event handler. We use this to capture the value
	      // that was thrown. It's possible that this error handler will fire more
	      // than once; for example, if non-React code also calls `dispatchEvent`
	      // and a handler for that event throws. We should be resilient to most of
	      // those cases. Even if our error event handler fires more than once, the
	      // last error event is always used. If the callback actually does error,
	      // we know that the last error event is the correct one, because it's not
	      // possible for anything else to have happened in between our callback
	      // erroring and the code that follows the `dispatchEvent` call below. If
	      // the callback doesn't error, but the error event was fired, we know to
	      // ignore it because `didError` will be false, as described above.
	      var error = void 0;
	      // Use this to track whether the error event is ever called.
	      var didSetError = false;
	      var isCrossOriginError = false;

	      function onError(event) {
	        error = event.error;
	        didSetError = true;
	        if (error === null && event.colno === 0 && event.lineno === 0) {
	          isCrossOriginError = true;
	        }
	      }

	      // Create a fake event type.
	      var evtType = 'react-' + (name ? name : 'invokeguardedcallback');

	      // Attach our event handlers
	      window.addEventListener('error', onError);
	      fakeNode.addEventListener(evtType, callCallback, false);

	      // Synchronously dispatch our fake event. If the user-provided function
	      // errors, it will trigger our global error handler.
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);

	      if (didError) {
	        if (!didSetError) {
	          // The callback errored, but the error event never fired.
	          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
	        } else if (isCrossOriginError) {
	          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
	        }
	        this._hasCaughtError = true;
	        this._caughtError = error;
	      } else {
	        this._hasCaughtError = false;
	        this._caughtError = null;
	      }

	      // Remove our event listeners
	      window.removeEventListener('error', onError);
	    };

	    invokeGuardedCallback = invokeGuardedCallbackDev;
	  }
	}

	var invokeGuardedCallback$1 = invokeGuardedCallback;

	var ReactErrorUtils = {
	  // Used by Fiber to simulate a try-catch.
	  _caughtError: null,
	  _hasCaughtError: false,

	  // Used by event system to capture/rethrow the first error.
	  _rethrowError: null,
	  _hasRethrowError: false,

	  /**
	   * Call a function while guarding against errors that happens within it.
	   * Returns an error if it throws, otherwise null.
	   *
	   * In production, this is implemented using a try-catch. The reason we don't
	   * use a try-catch directly is so that we can swap out a different
	   * implementation in DEV mode.
	   *
	   * @param {String} name of the guard to use for logging or debugging
	   * @param {Function} func The function to invoke
	   * @param {*} context The context to use when calling the function
	   * @param {...*} args Arguments for function
	   */
	  invokeGuardedCallback: function (name, func, context, a, b, c, d, e, f) {
	    invokeGuardedCallback$1.apply(ReactErrorUtils, arguments);
	  },

	  /**
	   * Same as invokeGuardedCallback, but instead of returning an error, it stores
	   * it in a global so it can be rethrown by `rethrowCaughtError` later.
	   * TODO: See if _caughtError and _rethrowError can be unified.
	   *
	   * @param {String} name of the guard to use for logging or debugging
	   * @param {Function} func The function to invoke
	   * @param {*} context The context to use when calling the function
	   * @param {...*} args Arguments for function
	   */
	  invokeGuardedCallbackAndCatchFirstError: function (name, func, context, a, b, c, d, e, f) {
	    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);
	    if (ReactErrorUtils.hasCaughtError()) {
	      var error = ReactErrorUtils.clearCaughtError();
	      if (!ReactErrorUtils._hasRethrowError) {
	        ReactErrorUtils._hasRethrowError = true;
	        ReactErrorUtils._rethrowError = error;
	      }
	    }
	  },

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    return rethrowCaughtError.apply(ReactErrorUtils, arguments);
	  },

	  hasCaughtError: function () {
	    return ReactErrorUtils._hasCaughtError;
	  },

	  clearCaughtError: function () {
	    if (ReactErrorUtils._hasCaughtError) {
	      var error = ReactErrorUtils._caughtError;
	      ReactErrorUtils._caughtError = null;
	      ReactErrorUtils._hasCaughtError = false;
	      return error;
	    } else {
	      invariant(false, 'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.');
	    }
	  }
	};

	var rethrowCaughtError = function () {
	  if (ReactErrorUtils._hasRethrowError) {
	    var error = ReactErrorUtils._rethrowError;
	    ReactErrorUtils._rethrowError = null;
	    ReactErrorUtils._hasRethrowError = false;
	    throw error;
	  }
	};

	/**
	 * Injectable ordering of event plugins.
	 */
	var eventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!eventPluginOrder) {
	    // Wait until an `eventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var pluginModule = namesToPlugins[pluginName];
	    var pluginIndex = eventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : void 0;
	    if (plugins[pluginIndex]) {
	      continue;
	    }
	    !pluginModule.extractEvents ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : void 0;
	    plugins[pluginIndex] = pluginModule;
	    var publishedEvents = pluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : void 0;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
	  !!eventNameDispatchConfigs.hasOwnProperty(eventName) ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : void 0;
	  eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, pluginModule, eventName) {
	  !!registrationNameModules[registrationName] ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : void 0;
	  registrationNameModules[registrationName] = pluginModule;
	  registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

	  {
	    var lowerCasedName = registrationName.toLowerCase();
	    possibleRegistrationNames[lowerCasedName] = registrationName;

	    if (registrationName === 'onDoubleClick') {
	      possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */

	/**
	 * Ordered list of injected plugins.
	 */
	var plugins = [];

	/**
	 * Mapping from event name to dispatch config
	 */
	var eventNameDispatchConfigs = {};

	/**
	 * Mapping from registration name to plugin module
	 */
	var registrationNameModules = {};

	/**
	 * Mapping from registration name to event name
	 */
	var registrationNameDependencies = {};

	/**
	 * Mapping from lowercase registration names to the properly cased version,
	 * used to warn in the case of missing event handlers. Available
	 * only in true.
	 * @type {Object}
	 */
	var possibleRegistrationNames = {};
	// Trust the developer to only use possibleRegistrationNames in true

	/**
	 * Injects an ordering of plugins (by plugin name). This allows the ordering
	 * to be decoupled from injection of the actual plugins so that ordering is
	 * always deterministic regardless of packaging, on-the-fly injection, etc.
	 *
	 * @param {array} InjectedEventPluginOrder
	 * @internal
	 * @see {EventPluginHub.injection.injectEventPluginOrder}
	 */
	function injectEventPluginOrder(injectedEventPluginOrder) {
	  !!eventPluginOrder ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : void 0;
	  // Clone the ordering so it cannot be dynamically mutated.
	  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
	  recomputePluginOrdering();
	}

	/**
	 * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	 * in the ordering injected by `injectEventPluginOrder`.
	 *
	 * Plugins can be injected as part of page initialization or on-the-fly.
	 *
	 * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	 * @internal
	 * @see {EventPluginHub.injection.injectEventPluginsByName}
	 */
	function injectEventPluginsByName(injectedNamesToPlugins) {
	  var isOrderingDirty = false;
	  for (var pluginName in injectedNamesToPlugins) {
	    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	      continue;
	    }
	    var pluginModule = injectedNamesToPlugins[pluginName];
	    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
	      !!namesToPlugins[pluginName] ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : void 0;
	      namesToPlugins[pluginName] = pluginModule;
	      isOrderingDirty = true;
	    }
	  }
	  if (isOrderingDirty) {
	    recomputePluginOrdering();
	  }
	}

	var EventPluginRegistry = Object.freeze({
		plugins: plugins,
		eventNameDispatchConfigs: eventNameDispatchConfigs,
		registrationNameModules: registrationNameModules,
		registrationNameDependencies: registrationNameDependencies,
		possibleRegistrationNames: possibleRegistrationNames,
		injectEventPluginOrder: injectEventPluginOrder,
		injectEventPluginsByName: injectEventPluginsByName
	});

	var getFiberCurrentPropsFromNode = null;
	var getInstanceFromNode = null;
	var getNodeFromInstance = null;

	var injection$1 = {
	  injectComponentTree: function (Injected) {
	    getFiberCurrentPropsFromNode = Injected.getFiberCurrentPropsFromNode;
	    getInstanceFromNode = Injected.getInstanceFromNode;
	    getNodeFromInstance = Injected.getNodeFromInstance;

	    {
	      !(getNodeFromInstance && getInstanceFromNode) ? warning(false, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  }
	};

	var validateEventDispatches = void 0;
	{
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

	    !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warning(false, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = getNodeFromInstance(inst);
	  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */


	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */


	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */

	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;

	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }

	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 * @param {function} cb Callback invoked with each element or a collection.
	 * @param {?} [scope] Scope used as `this` in a callback.
	 */
	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}

	function shouldPreventMouseEvent(name, type, props) {
	  switch (name) {
	    case 'onClick':
	    case 'onClickCapture':
	    case 'onDoubleClick':
	    case 'onDoubleClickCapture':
	    case 'onMouseDown':
	    case 'onMouseDownCapture':
	    case 'onMouseMove':
	    case 'onMouseMoveCapture':
	    case 'onMouseUp':
	    case 'onMouseUpCapture':
	      return !!(props.disabled && isInteractive(type));
	    default:
	      return false;
	  }
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */

	/**
	 * Methods for injecting dependencies.
	 */
	var injection = {
	  /**
	   * @param {array} InjectedEventPluginOrder
	   * @public
	   */
	  injectEventPluginOrder: injectEventPluginOrder,

	  /**
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   */
	  injectEventPluginsByName: injectEventPluginsByName
	};

	/**
	 * @param {object} inst The instance, which is the source of events.
	 * @param {string} registrationName Name of listener (e.g. `onClick`).
	 * @return {?function} The stored callback.
	 */
	function getListener(inst, registrationName) {
	  var listener = void 0;

	  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
	  // live here; needs to be moved to a better place soon
	  var stateNode = inst.stateNode;
	  if (!stateNode) {
	    // Work in progress (ex: onload events in incremental mode).
	    return null;
	  }
	  var props = getFiberCurrentPropsFromNode(stateNode);
	  if (!props) {
	    // Work in progress.
	    return null;
	  }
	  listener = props[registrationName];
	  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
	    return null;
	  }
	  !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener) : void 0;
	  return listener;
	}

	/**
	 * Allows registered plugins an opportunity to extract events from top-level
	 * native browser events.
	 *
	 * @return {*} An accumulation of synthetic events.
	 * @internal
	 */
	function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var events = null;
	  for (var i = 0; i < plugins.length; i++) {
	    // Not every plugin in the ordering may be loaded at runtime.
	    var possiblePlugin = plugins[i];
	    if (possiblePlugin) {
	      var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	      if (extractedEvents) {
	        events = accumulateInto(events, extractedEvents);
	      }
	    }
	  }
	  return events;
	}

	function runEventsInBatch(events, simulated) {
	  if (events !== null) {
	    eventQueue = accumulateInto(eventQueue, events);
	  }

	  // Set `eventQueue` to null before processing it so that we can tell if more
	  // events get enqueued while processing.
	  var processingEventQueue = eventQueue;
	  eventQueue = null;

	  if (!processingEventQueue) {
	    return;
	  }

	  if (simulated) {
	    forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	  } else {
	    forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	  }
	  !!eventQueue ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : void 0;
	  // This would be a good time to rethrow if any of the event handlers threw.
	  ReactErrorUtils.rethrowCaughtError();
	}

	function runExtractedEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var events = extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	  runEventsInBatch(events, false);
	}

	var EventPluginHub = Object.freeze({
		injection: injection,
		getListener: getListener,
		runEventsInBatch: runEventsInBatch,
		runExtractedEventsInBatch: runExtractedEventsInBatch
	});

	var IndeterminateComponent = 0; // Before we know whether it is functional or class
	var FunctionalComponent = 1;
	var ClassComponent = 2;
	var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
	var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
	var HostComponent = 5;
	var HostText = 6;



	var Fragment = 10;
	var Mode = 11;
	var ContextConsumer = 12;
	var ContextProvider = 13;
	var ForwardRef = 14;
	var Profiler = 15;
	var TimeoutComponent = 16;

	var randomKey = Math.random().toString(36).slice(2);
	var internalInstanceKey = '__reactInternalInstance$' + randomKey;
	var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;

	function precacheFiberNode(hostInst, node) {
	  node[internalInstanceKey] = hostInst;
	}

	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }

	  while (!node[internalInstanceKey]) {
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }

	  var inst = node[internalInstanceKey];
	  if (inst.tag === HostComponent || inst.tag === HostText) {
	    // In Fiber, this will always be the deepest root.
	    return inst;
	  }

	  return null;
	}

	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode$1(node) {
	  var inst = node[internalInstanceKey];
	  if (inst) {
	    if (inst.tag === HostComponent || inst.tag === HostText) {
	      return inst;
	    } else {
	      return null;
	    }
	  }
	  return null;
	}

	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance$1(inst) {
	  if (inst.tag === HostComponent || inst.tag === HostText) {
	    // In Fiber this, is just the state node right now. We assume it will be
	    // a host component or host text.
	    return inst.stateNode;
	  }

	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  invariant(false, 'getNodeFromInstance: Invalid argument.');
	}

	function getFiberCurrentPropsFromNode$1(node) {
	  return node[internalEventHandlersKey] || null;
	}

	function updateFiberProps(node, props) {
	  node[internalEventHandlersKey] = props;
	}

	var ReactDOMComponentTree = Object.freeze({
		precacheFiberNode: precacheFiberNode,
		getClosestInstanceFromNode: getClosestInstanceFromNode,
		getInstanceFromNode: getInstanceFromNode$1,
		getNodeFromInstance: getNodeFromInstance$1,
		getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode$1,
		updateFiberProps: updateFiberProps
	});

	function getParent(inst) {
	  do {
	    inst = inst.return;
	    // TODO: If this is a HostRoot we might want to bail out.
	    // That is depending on if we want nested subtrees (layers) to bubble
	    // events to their parent. We could also go through parentNode on the
	    // host node but that wouldn't work for React Native and doesn't let us
	    // do the portal feature.
	  } while (inst && inst.tag !== HostComponent);
	  if (inst) {
	    return inst;
	  }
	  return null;
	}

	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = getParent(tempA)) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = getParent(tempB)) {
	    depthB++;
	  }

	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = getParent(instA);
	    depthA--;
	  }

	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = getParent(instB);
	    depthB--;
	  }

	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB || instA === instB.alternate) {
	      return instA;
	    }
	    instA = getParent(instA);
	    instB = getParent(instB);
	  }
	  return null;
	}

	/**
	 * Return if A is an ancestor of B.
	 */


	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  return getParent(inst);
	}

	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = getParent(inst);
	  }
	  var i = void 0;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], 'captured', arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], 'bubbled', arg);
	  }
	}

	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (true) {
	    if (!from) {
	      break;
	    }
	    if (from === common) {
	      break;
	    }
	    var alternate = from.alternate;
	    if (alternate !== null && alternate === common) {
	      break;
	    }
	    pathFrom.push(from);
	    from = getParent(from);
	  }
	  var pathTo = [];
	  while (true) {
	    if (!to) {
	      break;
	    }
	    if (to === common) {
	      break;
	    }
	    var _alternate = to.alternate;
	    if (_alternate !== null && _alternate === common) {
	      break;
	    }
	    pathTo.push(to);
	    to = getParent(to);
	  }
	  for (var i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], 'bubbled', argFrom);
	  }
	  for (var _i = pathTo.length; _i-- > 0;) {
	    fn(pathTo[_i], 'captured', argTo);
	  }
	}

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing even a
	 * single one.
	 */

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, phase, event) {
	  {
	    !inst ? warning(false, 'Dispatching inst must not be null') : void 0;
	  }
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? getParentInstance(targetInst) : null;
	    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (inst && event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	var EventPropagators = Object.freeze({
		accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
		accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
		accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches,
		accumulateDirectDispatches: accumulateDirectDispatches
	});

	// Do not uses the below two methods directly!
	// Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.
	// (It is the only module that is allowed to access these methods.)

	function unsafeCastStringToDOMTopLevelType(topLevelType) {
	  return topLevelType;
	}

	function unsafeCastDOMTopLevelTypeToString(topLevelType) {
	  return topLevelType;
	}

	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};

	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

	  return prefixes;
	}

	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};

	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};

	/**
	 * Element to check for prefixes on.
	 */
	var style = {};

	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }

	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}

	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }

	  var prefixMap = vendorPrefixes[eventName];

	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }

	  return eventName;
	}

	/**
	 * To identify top level events in ReactDOM, we use constants defined by this
	 * module. This is the only module that uses the unsafe* methods to express
	 * that the constants actually correspond to the browser event names. This lets
	 * us save some bundle size by avoiding a top level type -> event name map.
	 * The rest of ReactDOM code should import top level types from this file.
	 */
	var TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');
	var TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));
	var TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));
	var TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));
	var TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');
	var TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');
	var TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');
	var TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');
	var TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');
	var TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');
	var TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');
	var TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');
	var TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');
	var TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');
	var TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');
	var TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');
	var TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');
	var TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');
	var TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');
	var TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');
	var TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');
	var TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');
	var TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');
	var TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');
	var TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');
	var TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');
	var TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');
	var TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');
	var TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');
	var TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');
	var TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');
	var TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');
	var TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');
	var TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');
	var TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');
	var TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');
	var TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');
	var TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');
	var TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');
	var TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');
	var TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');
	var TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');
	var TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');
	var TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');
	var TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');
	var TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');
	var TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');
	var TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');
	var TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');
	var TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');
	var TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');
	var TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');
	var TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');
	var TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');


	var TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');
	var TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');
	var TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');
	var TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');
	var TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');
	var TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');
	var TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');
	var TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');
	var TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');
	var TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');
	var TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');
	var TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');
	var TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');
	var TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');
	var TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');
	var TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');
	var TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');
	var TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');
	var TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');
	var TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');
	var TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');
	var TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));
	var TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');
	var TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');
	var TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel');

	// List of events that need to be individually attached to media elements.
	// Note that events in this list will *not* be listened to at the top level
	// unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.
	var mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];

	function getRawEventName(topLevelType) {
	  return unsafeCastDOMTopLevelTypeToString(topLevelType);
	}

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	/**
	 * This helper object stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 *
	 */
	var compositionState = {
	  _root: null,
	  _startText: null,
	  _fallbackText: null
	};

	function initialize(nativeEventTarget) {
	  compositionState._root = nativeEventTarget;
	  compositionState._startText = getText();
	  return true;
	}

	function reset() {
	  compositionState._root = null;
	  compositionState._startText = null;
	  compositionState._fallbackText = null;
	}

	function getData() {
	  if (compositionState._fallbackText) {
	    return compositionState._fallbackText;
	  }

	  var start = void 0;
	  var startValue = compositionState._startText;
	  var startLength = startValue.length;
	  var end = void 0;
	  var endValue = getText();
	  var endLength = endValue.length;

	  for (start = 0; start < startLength; start++) {
	    if (startValue[start] !== endValue[start]) {
	      break;
	    }
	  }

	  var minEnd = startLength - start;
	  for (end = 1; end <= minEnd; end++) {
	    if (startValue[startLength - end] !== endValue[endLength - end]) {
	      break;
	    }
	  }

	  var sliceTail = end > 1 ? 1 - end : undefined;
	  compositionState._fallbackText = endValue.slice(start, sliceTail);
	  return compositionState._fallbackText;
	}

	function getText() {
	  if ('value' in compositionState._root) {
	    return compositionState._root.value;
	  }
	  return compositionState._root[getTextContentAccessor()];
	}

	/* eslint valid-typeof: 0 */

	var didWarnForAddedNewProperty = false;
	var EVENT_POOL_SIZE = 10;

	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }

	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}

	_assign(SyntheticEvent.prototype, {
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else if (typeof event.returnValue !== 'unknown') {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }

	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }
	});

	SyntheticEvent.Interface = EventInterface;

	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 */
	SyntheticEvent.extend = function (Interface) {
	  var Super = this;

	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();

	  function Class() {
	    return Super.apply(this, arguments);
	  }
	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.extend = Super.extend;
	  addEventPoolingTo(Class);

	  return Class;
	};

	/** Proxying after everything set on SyntheticEvent
	 * to resolve Proxy issue on some WebKit browsers
	 * in which some Event properties are set to undefined (GH#10010)
	 */
	{
	  var isProxySupported = typeof Proxy === 'function' &&
	  // https://github.com/facebook/react/issues/12011
	  !Object.isSealed(new Proxy({}, {}));

	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              !(didWarnForAddedNewProperty || target.isPersistent()) ? warning(false, "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}

	addEventPoolingTo(SyntheticEvent);

	/**
	 * Helper to nullify syntheticEvent instance properties when destructing
	 *
	 * @param {String} propName
	 * @param {?object} getVal
	 * @return {object} defineProperty object
	 */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };

	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }

	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }

	  function warn(action, result) {
	    var warningCondition = false;
	    !warningCondition ? warning(false, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}

	function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
	  var EventConstructor = this;
	  if (EventConstructor.eventPool.length) {
	    var instance = EventConstructor.eventPool.pop();
	    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
	    return instance;
	  }
	  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
	}

	function releasePooledEvent(event) {
	  var EventConstructor = this;
	  !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance  into a pool of a different type.') : void 0;
	  event.destructor();
	  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
	    EventConstructor.eventPool.push(event);
	  }
	}

	function addEventPoolingTo(EventConstructor) {
	  EventConstructor.eventPool = [];
	  EventConstructor.getPooled = getPooledEvent;
	  EventConstructor.release = releasePooledEvent;
	}

	var SyntheticEvent$1 = SyntheticEvent;

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var SyntheticCompositionEvent = SyntheticEvent$1.extend({
	  data: null
	});

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var SyntheticInputEvent = SyntheticEvent$1.extend({
	  data: null
	});

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode;

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: 'onBeforeInput',
	      captured: 'onBeforeInputCapture'
	    },
	    dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionEnd',
	      captured: 'onCompositionEndCapture'
	    },
	    dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionStart',
	      captured: 'onCompositionStartCapture'
	    },
	    dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionUpdate',
	      captured: 'onCompositionUpdateCapture'
	    },
	    dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case TOP_COMPOSITION_START:
	      return eventTypes.compositionStart;
	    case TOP_COMPOSITION_END:
	      return eventTypes.compositionEnd;
	    case TOP_COMPOSITION_UPDATE:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case TOP_KEY_UP:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case TOP_KEY_DOWN:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case TOP_KEY_PRESS:
	    case TOP_MOUSE_DOWN:
	    case TOP_BLUR:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition status, if any.
	var isComposing = false;

	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType = void 0;
	  var fallbackData = void 0;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!isComposing) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!isComposing && eventType === eventTypes.compositionStart) {
	      isComposing = initialize(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (isComposing) {
	        fallbackData = getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {TopLevelType} topLevelType Number from `TopLevelType`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case TOP_COMPOSITION_END:
	      return getDataFromCustomEvent(nativeEvent);
	    case TOP_KEY_PRESS:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case TOP_TEXT_INPUT:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {number} topLevelType Number from `TopLevelEventTypes`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  // If composition event is available, we extract a string only at
	  // compositionevent, otherwise extract it at fallback events.
	  if (isComposing) {
	    if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = getData();
	      reset();
	      isComposing = false;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case TOP_PASTE:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case TOP_KEY_PRESS:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (!isKeypressCommand(nativeEvent)) {
	        // IE fires the `keypress` event when a user types an emoji via
	        // Touch keyboard of Windows.  In such a case, the `char` property
	        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
	        // is 2, the property `which` does not represent an emoji correctly.
	        // In such a case, we directly return the `char` property instead of
	        // using `which`.
	        if (nativeEvent.char && nativeEvent.char.length > 1) {
	          return nativeEvent.char;
	        } else if (nativeEvent.which) {
	          return String.fromCharCode(nativeEvent.which);
	        }
	      }
	      return null;
	    case TOP_COMPOSITION_END:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars = void 0;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

	    var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

	    if (composition === null) {
	      return beforeInput;
	    }

	    if (beforeInput === null) {
	      return composition;
	    }

	    return [composition, beforeInput];
	  }
	};

	// Use to restore controlled state after a change event has fired.

	var fiberHostComponent = null;

	var ReactControlledComponentInjection = {
	  injectFiberControlledHostComponent: function (hostComponentImpl) {
	    // The fiber implementation doesn't use dynamic dispatch so we need to
	    // inject the implementation.
	    fiberHostComponent = hostComponentImpl;
	  }
	};

	var restoreTarget = null;
	var restoreQueue = null;

	function restoreStateOfTarget(target) {
	  // We perform this translation at the end of the event loop so that we
	  // always receive the correct fiber here
	  var internalInstance = getInstanceFromNode(target);
	  if (!internalInstance) {
	    // Unmounted
	    return;
	  }
	  !(fiberHostComponent && typeof fiberHostComponent.restoreControlledState === 'function') ? invariant(false, 'Fiber needs to be injected to handle a fiber target for controlled events. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
	  fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
	}

	var injection$2 = ReactControlledComponentInjection;

	function enqueueStateRestore(target) {
	  if (restoreTarget) {
	    if (restoreQueue) {
	      restoreQueue.push(target);
	    } else {
	      restoreQueue = [target];
	    }
	  } else {
	    restoreTarget = target;
	  }
	}

	function needsStateRestore() {
	  return restoreTarget !== null || restoreQueue !== null;
	}

	function restoreStateIfNeeded() {
	  if (!restoreTarget) {
	    return;
	  }
	  var target = restoreTarget;
	  var queuedTargets = restoreQueue;
	  restoreTarget = null;
	  restoreQueue = null;

	  restoreStateOfTarget(target);
	  if (queuedTargets) {
	    for (var i = 0; i < queuedTargets.length; i++) {
	      restoreStateOfTarget(queuedTargets[i]);
	    }
	  }
	}

	var ReactControlledComponent = Object.freeze({
		injection: injection$2,
		enqueueStateRestore: enqueueStateRestore,
		needsStateRestore: needsStateRestore,
		restoreStateIfNeeded: restoreStateIfNeeded
	});

	// Used as a way to call batchedUpdates when we don't have a reference to
	// the renderer. Such as when we're dispatching events or if third party
	// libraries need to call batchedUpdates. Eventually, this API will go away when
	// everything is batched by default. We'll then have a similar API to opt-out of
	// scheduled work and instead do synchronous work.

	// Defaults
	var _batchedUpdates = function (fn, bookkeeping) {
	  return fn(bookkeeping);
	};
	var _interactiveUpdates = function (fn, a, b) {
	  return fn(a, b);
	};
	var _flushInteractiveUpdates = function () {};

	var isBatching = false;
	function batchedUpdates(fn, bookkeeping) {
	  if (isBatching) {
	    // If we are currently inside another batch, we need to wait until it
	    // fully completes before restoring state.
	    return fn(bookkeeping);
	  }
	  isBatching = true;
	  try {
	    return _batchedUpdates(fn, bookkeeping);
	  } finally {
	    // Here we wait until all updates have propagated, which is important
	    // when using controlled components within layers:
	    // https://github.com/facebook/react/issues/1698
	    // Then we restore state of any controlled component.
	    isBatching = false;
	    var controlledComponentsHavePendingUpdates = needsStateRestore();
	    if (controlledComponentsHavePendingUpdates) {
	      // If a controlled event was fired, we may need to restore the state of
	      // the DOM node back to the controlled value. This is necessary when React
	      // bails out of the update without touching the DOM.
	      _flushInteractiveUpdates();
	      restoreStateIfNeeded();
	    }
	  }
	}

	function interactiveUpdates(fn, a, b) {
	  return _interactiveUpdates(fn, a, b);
	}



	var injection$3 = {
	  injectRenderer: function (renderer) {
	    _batchedUpdates = renderer.batchedUpdates;
	    _interactiveUpdates = renderer.interactiveUpdates;
	    _flushInteractiveUpdates = renderer.flushInteractiveUpdates;
	  }
	};

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	var supportedInputTypes = {
	  color: true,
	  date: true,
	  datetime: true,
	  'datetime-local': true,
	  email: true,
	  month: true,
	  number: true,
	  password: true,
	  range: true,
	  search: true,
	  tel: true,
	  text: true,
	  time: true,
	  url: true,
	  week: true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }

	  if (nodeName === 'textarea') {
	    return true;
	  }

	  return false;
	}

	/**
	 * HTML nodeType values that represent the type of the node
	 */

	var ELEMENT_NODE = 1;
	var TEXT_NODE = 3;
	var COMMENT_NODE = 8;
	var DOCUMENT_NODE = 9;
	var DOCUMENT_FRAGMENT_NODE = 11;

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	function getEventTarget(nativeEvent) {
	  // Fallback to nativeEvent.srcElement for IE9
	  // https://github.com/facebook/react/issues/12506
	  var target = nativeEvent.target || nativeEvent.srcElement || window;

	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }

	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === TEXT_NODE ? target.parentNode : target;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  return isSupported;
	}

	function isCheckable(elem) {
	  var type = elem.type;
	  var nodeName = elem.nodeName;
	  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
	}

	function getTracker(node) {
	  return node._valueTracker;
	}

	function detachTracker(node) {
	  node._valueTracker = null;
	}

	function getValueFromNode(node) {
	  var value = '';
	  if (!node) {
	    return value;
	  }

	  if (isCheckable(node)) {
	    value = node.checked ? 'true' : 'false';
	  } else {
	    value = node.value;
	  }

	  return value;
	}

	function trackValueOnNode(node) {
	  var valueField = isCheckable(node) ? 'checked' : 'value';
	  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

	  var currentValue = '' + node[valueField];

	  // if someone has already defined a value or Safari, then bail
	  // and don't track value will cause over reporting of changes,
	  // but it's better then a hard failure
	  // (needed for certain tests that spyOn input values and Safari)
	  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
	    return;
	  }
	  var get = descriptor.get,
	      set = descriptor.set;

	  Object.defineProperty(node, valueField, {
	    configurable: true,
	    get: function () {
	      return get.call(this);
	    },
	    set: function (value) {
	      currentValue = '' + value;
	      set.call(this, value);
	    }
	  });
	  // We could've passed this the first time
	  // but it triggers a bug in IE11 and Edge 14/15.
	  // Calling defineProperty() again should be equivalent.
	  // https://github.com/facebook/react/issues/11768
	  Object.defineProperty(node, valueField, {
	    enumerable: descriptor.enumerable
	  });

	  var tracker = {
	    getValue: function () {
	      return currentValue;
	    },
	    setValue: function (value) {
	      currentValue = '' + value;
	    },
	    stopTracking: function () {
	      detachTracker(node);
	      delete node[valueField];
	    }
	  };
	  return tracker;
	}

	function track(node) {
	  if (getTracker(node)) {
	    return;
	  }

	  // TODO: Once it's just Fiber we can move this to node._wrapperState
	  node._valueTracker = trackValueOnNode(node);
	}

	function updateValueIfChanged(node) {
	  if (!node) {
	    return false;
	  }

	  var tracker = getTracker(node);
	  // if there is no tracker at this point it's unlikely
	  // that trying again will succeed
	  if (!tracker) {
	    return true;
	  }

	  var lastValue = tracker.getValue();
	  var nextValue = getValueFromNode(node);
	  if (nextValue !== lastValue) {
	    tracker.setValue(nextValue);
	    return true;
	  }
	  return false;
	}

	var ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

	var ReactCurrentOwner = ReactInternals.ReactCurrentOwner;
	var ReactDebugCurrentFrame = ReactInternals.ReactDebugCurrentFrame;

	var describeComponentFrame = function (name, source, ownerName) {
	  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	};

	// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var hasSymbol = typeof Symbol === 'function' && Symbol.for;

	var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
	var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
	var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
	var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
	var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
	var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
	var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
	var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
	var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
	var REACT_TIMEOUT_TYPE = hasSymbol ? Symbol.for('react.timeout') : 0xead1;

	var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator';

	function getIteratorFn(maybeIterable) {
	  if (maybeIterable === null || typeof maybeIterable === 'undefined') {
	    return null;
	  }
	  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
	  if (typeof maybeIterator === 'function') {
	    return maybeIterator;
	  }
	  return null;
	}

	function getComponentName(fiber) {
	  var type = fiber.type;

	  if (typeof type === 'function') {
	    return type.displayName || type.name;
	  }
	  if (typeof type === 'string') {
	    return type;
	  }
	  switch (type) {
	    case REACT_ASYNC_MODE_TYPE:
	      return 'AsyncMode';
	    case REACT_CONTEXT_TYPE:
	      return 'Context.Consumer';
	    case REACT_FRAGMENT_TYPE:
	      return 'ReactFragment';
	    case REACT_PORTAL_TYPE:
	      return 'ReactPortal';
	    case REACT_PROFILER_TYPE:
	      return 'Profiler(' + fiber.pendingProps.id + ')';
	    case REACT_PROVIDER_TYPE:
	      return 'Context.Provider';
	    case REACT_STRICT_MODE_TYPE:
	      return 'StrictMode';
	    case REACT_TIMEOUT_TYPE:
	      return 'Timeout';
	  }
	  if (typeof type === 'object' && type !== null) {
	    switch (type.$$typeof) {
	      case REACT_FORWARD_REF_TYPE:
	        var functionName = type.render.displayName || type.render.name || '';
	        return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
	    }
	  }
	  return null;
	}

	function describeFiber(fiber) {
	  switch (fiber.tag) {
	    case IndeterminateComponent:
	    case FunctionalComponent:
	    case ClassComponent:
	    case HostComponent:
	      var owner = fiber._debugOwner;
	      var source = fiber._debugSource;
	      var name = getComponentName(fiber);
	      var ownerName = null;
	      if (owner) {
	        ownerName = getComponentName(owner);
	      }
	      return describeComponentFrame(name, source, ownerName);
	    default:
	      return '';
	  }
	}

	// This function can only be called with a work-in-progress fiber and
	// only during begin or complete phase. Do not call it under any other
	// circumstances.
	function getStackAddendumByWorkInProgressFiber(workInProgress) {
	  var info = '';
	  var node = workInProgress;
	  do {
	    info += describeFiber(node);
	    // Otherwise this return pointer might point to the wrong tree:
	    node = node.return;
	  } while (node);
	  return info;
	}

	function getCurrentFiberOwnerName$1() {
	  {
	    var fiber = ReactDebugCurrentFiber.current;
	    if (fiber === null) {
	      return null;
	    }
	    var owner = fiber._debugOwner;
	    if (owner !== null && typeof owner !== 'undefined') {
	      return getComponentName(owner);
	    }
	  }
	  return null;
	}

	function getCurrentFiberStackAddendum$1() {
	  {
	    var fiber = ReactDebugCurrentFiber.current;
	    if (fiber === null) {
	      return null;
	    }
	    // Safe because if current fiber exists, we are reconciling,
	    // and it is guaranteed to be the work-in-progress version.
	    return getStackAddendumByWorkInProgressFiber(fiber);
	  }
	  return null;
	}

	function resetCurrentFiber() {
	  ReactDebugCurrentFrame.getCurrentStack = null;
	  ReactDebugCurrentFiber.current = null;
	  ReactDebugCurrentFiber.phase = null;
	}

	function setCurrentFiber(fiber) {
	  ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackAddendum$1;
	  ReactDebugCurrentFiber.current = fiber;
	  ReactDebugCurrentFiber.phase = null;
	}

	function setCurrentPhase(phase) {
	  ReactDebugCurrentFiber.phase = phase;
	}

	var ReactDebugCurrentFiber = {
	  current: null,
	  phase: null,
	  resetCurrentFiber: resetCurrentFiber,
	  setCurrentFiber: setCurrentFiber,
	  setCurrentPhase: setCurrentPhase,
	  getCurrentFiberOwnerName: getCurrentFiberOwnerName$1,
	  getCurrentFiberStackAddendum: getCurrentFiberStackAddendum$1
	};

	// A reserved attribute.
	// It is handled by React separately and shouldn't be written to the DOM.
	var RESERVED = 0;

	// A simple string attribute.
	// Attributes that aren't in the whitelist are presumed to have this type.
	var STRING = 1;

	// A string attribute that accepts booleans in React. In HTML, these are called
	// "enumerated" attributes with "true" and "false" as possible values.
	// When true, it should be set to a "true" string.
	// When false, it should be set to a "false" string.
	var BOOLEANISH_STRING = 2;

	// A real boolean attribute.
	// When true, it should be present (set either to an empty string or its name).
	// When false, it should be omitted.
	var BOOLEAN = 3;

	// An attribute that can be used as a flag as well as with a value.
	// When true, it should be present (set either to an empty string or its name).
	// When false, it should be omitted.
	// For any other value, should be present with that value.
	var OVERLOADED_BOOLEAN = 4;

	// An attribute that must be numeric or parse as a numeric.
	// When falsy, it should be removed.
	var NUMERIC = 5;

	// An attribute that must be positive numeric or parse as a positive numeric.
	// When falsy, it should be removed.
	var POSITIVE_NUMERIC = 6;

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */
	var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';


	var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');

	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
	    return true;
	  }
	  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  {
	    warning(false, 'Invalid attribute name: `%s`', attributeName);
	  }
	  return false;
	}

	function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
	  if (propertyInfo !== null) {
	    return propertyInfo.type === RESERVED;
	  }
	  if (isCustomComponentTag) {
	    return false;
	  }
	  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
	    return true;
	  }
	  return false;
	}

	function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
	  if (propertyInfo !== null && propertyInfo.type === RESERVED) {
	    return false;
	  }
	  switch (typeof value) {
	    case 'function':
	    // $FlowIssue symbol is perfectly valid here
	    case 'symbol':
	      // eslint-disable-line
	      return true;
	    case 'boolean':
	      {
	        if (isCustomComponentTag) {
	          return false;
	        }
	        if (propertyInfo !== null) {
	          return !propertyInfo.acceptsBooleans;
	        } else {
	          var prefix = name.toLowerCase().slice(0, 5);
	          return prefix !== 'data-' && prefix !== 'aria-';
	        }
	      }
	    default:
	      return false;
	  }
	}

	function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
	  if (value === null || typeof value === 'undefined') {
	    return true;
	  }
	  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
	    return true;
	  }
	  if (isCustomComponentTag) {
	    return false;
	  }
	  if (propertyInfo !== null) {
	    switch (propertyInfo.type) {
	      case BOOLEAN:
	        return !value;
	      case OVERLOADED_BOOLEAN:
	        return value === false;
	      case NUMERIC:
	        return isNaN(value);
	      case POSITIVE_NUMERIC:
	        return isNaN(value) || value < 1;
	    }
	  }
	  return false;
	}

	function getPropertyInfo(name) {
	  return properties.hasOwnProperty(name) ? properties[name] : null;
	}

	function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace) {
	  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
	  this.attributeName = attributeName;
	  this.attributeNamespace = attributeNamespace;
	  this.mustUseProperty = mustUseProperty;
	  this.propertyName = name;
	  this.type = type;
	}

	// When adding attributes to this list, be sure to also add them to
	// the `possibleStandardNames` module to ensure casing and incorrect
	// name warnings.
	var properties = {};

	// These props are reserved by React. They shouldn't be written to the DOM.
	['children', 'dangerouslySetInnerHTML',
	// TODO: This prevents the assignment of defaultValue to regular
	// elements (not just inputs). Now that ReactDOMInput assigns to the
	// defaultValue property -- do we need this?
	'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
	  name, // attributeName
	  null);
	} // attributeNamespace
	);

	// A few React string attributes have a different name.
	// This is a mapping from React prop names to the attribute names.
	[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
	  var name = _ref[0],
	      attributeName = _ref[1];

	  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
	  attributeName, // attributeName
	  null);
	} // attributeNamespace
	);

	// These are "enumerated" HTML attributes that accept "true" and "false".
	// In React, we let users pass `true` and `false` even though technically
	// these aren't boolean attributes (they are coerced to strings).
	['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	} // attributeNamespace
	);

	// These are "enumerated" SVG attributes that accept "true" and "false".
	// In React, we let users pass `true` and `false` even though technically
	// these aren't boolean attributes (they are coerced to strings).
	// Since these are SVG attributes, their attribute names are case-sensitive.
	['autoReverse', 'externalResourcesRequired', 'preserveAlpha'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
	  name, // attributeName
	  null);
	} // attributeNamespace
	);

	// These are HTML boolean attributes.
	['allowFullScreen', 'async',
	// Note: there is a special case that prevents it from being written to the DOM
	// on the client side because the browsers are inconsistent. Instead we call focus().
	'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless',
	// Microdata
	'itemScope'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	} // attributeNamespace
	);

	// These are the few React props that we set as DOM properties
	// rather than attributes. These are all booleans.
	['checked',
	// Note: `option.selected` is not updated if `select.multiple` is
	// disabled with `removeAttribute`. We have special logic for handling this.
	'multiple', 'muted', 'selected'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	} // attributeNamespace
	);

	// These are HTML attributes that are "overloaded booleans": they behave like
	// booleans, but can also accept a string value.
	['capture', 'download'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	} // attributeNamespace
	);

	// These are HTML attributes that must be positive numbers.
	['cols', 'rows', 'size', 'span'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	} // attributeNamespace
	);

	// These are HTML attributes that must be numbers.
	['rowSpan', 'start'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	} // attributeNamespace
	);

	var CAMELIZE = /[\-\:]([a-z])/g;
	var capitalize = function (token) {
	  return token[1].toUpperCase();
	};

	// This is a list of all SVG attributes that need special casing, namespacing,
	// or boolean value assignment. Regular attributes that just accept strings
	// and have the same names are omitted, just like in the HTML whitelist.
	// Some of these attributes can be hard to find. This list was created by
	// scrapping the MDN documentation.
	['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {
	  var name = attributeName.replace(CAMELIZE, capitalize);
	  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
	  attributeName, null);
	} // attributeNamespace
	);

	// String SVG attributes with the xlink namespace.
	['xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {
	  var name = attributeName.replace(CAMELIZE, capitalize);
	  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
	  attributeName, 'http://www.w3.org/1999/xlink');
	});

	// String SVG attributes with the xml namespace.
	['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {
	  var name = attributeName.replace(CAMELIZE, capitalize);
	  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
	  attributeName, 'http://www.w3.org/XML/1998/namespace');
	});

	// Special case: this attribute exists both in HTML and SVG.
	// Its "tabindex" attribute name is case-sensitive in SVG so we can't just use
	// its React `tabIndex` name, like we do for attributes that exist only in HTML.
	properties.tabIndex = new PropertyInfoRecord('tabIndex', STRING, false, // mustUseProperty
	'tabindex', // attributeName
	null);

	/**
	 * Get the value for a property on a node. Only used in DEV for SSR validation.
	 * The "expected" argument is used as a hint of what the expected value is.
	 * Some properties have multiple equivalent values.
	 */
	function getValueForProperty(node, name, expected, propertyInfo) {
	  {
	    if (propertyInfo.mustUseProperty) {
	      var propertyName = propertyInfo.propertyName;

	      return node[propertyName];
	    } else {
	      var attributeName = propertyInfo.attributeName;

	      var stringValue = null;

	      if (propertyInfo.type === OVERLOADED_BOOLEAN) {
	        if (node.hasAttribute(attributeName)) {
	          var value = node.getAttribute(attributeName);
	          if (value === '') {
	            return true;
	          }
	          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
	            return value;
	          }
	          if (value === '' + expected) {
	            return expected;
	          }
	          return value;
	        }
	      } else if (node.hasAttribute(attributeName)) {
	        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
	          // We had an attribute but shouldn't have had one, so read it
	          // for the error message.
	          return node.getAttribute(attributeName);
	        }
	        if (propertyInfo.type === BOOLEAN) {
	          // If this was a boolean, it doesn't matter what the value is
	          // the fact that we have it is the same as the expected.
	          return expected;
	        }
	        // Even if this property uses a namespace we use getAttribute
	        // because we assume its namespaced name is the same as our config.
	        // To use getAttributeNS we need the local name which we don't have
	        // in our config atm.
	        stringValue = node.getAttribute(attributeName);
	      }

	      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
	        return stringValue === null ? expected : stringValue;
	      } else if (stringValue === '' + expected) {
	        return expected;
	      } else {
	        return stringValue;
	      }
	    }
	  }
	}

	/**
	 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
	 * The third argument is used as a hint of what the expected value is. Some
	 * attributes have multiple equivalent values.
	 */
	function getValueForAttribute(node, name, expected) {
	  {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (!node.hasAttribute(name)) {
	      return expected === undefined ? undefined : null;
	    }
	    var value = node.getAttribute(name);
	    if (value === '' + expected) {
	      return expected;
	    }
	    return value;
	  }
	}

	/**
	 * Sets the value for a property on a node.
	 *
	 * @param {DOMElement} node
	 * @param {string} name
	 * @param {*} value
	 */
	function setValueForProperty(node, name, value, isCustomComponentTag) {
	  var propertyInfo = getPropertyInfo(name);
	  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
	    return;
	  }
	  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
	    value = null;
	  }
	  // If the prop isn't in the special list, treat it as a simple attribute.
	  if (isCustomComponentTag || propertyInfo === null) {
	    if (isAttributeNameSafe(name)) {
	      var _attributeName = name;
	      if (value === null) {
	        node.removeAttribute(_attributeName);
	      } else {
	        node.setAttribute(_attributeName, '' + value);
	      }
	    }
	    return;
	  }
	  var mustUseProperty = propertyInfo.mustUseProperty;

	  if (mustUseProperty) {
	    var propertyName = propertyInfo.propertyName;

	    if (value === null) {
	      var type = propertyInfo.type;

	      node[propertyName] = type === BOOLEAN ? false : '';
	    } else {
	      // Contrary to `setAttribute`, object properties are properly
	      // `toString`ed by IE8/9.
	      node[propertyName] = value;
	    }
	    return;
	  }
	  // The rest are treated as attributes with special cases.
	  var attributeName = propertyInfo.attributeName,
	      attributeNamespace = propertyInfo.attributeNamespace;

	  if (value === null) {
	    node.removeAttribute(attributeName);
	  } else {
	    var _type = propertyInfo.type;

	    var attributeValue = void 0;
	    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
	      attributeValue = '';
	    } else {
	      // `setAttribute` with objects becomes only `[object]` in IE8/9,
	      // ('' + value) makes it output the correct toString()-value.
	      attributeValue = '' + value;
	    }
	    if (attributeNamespace) {
	      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
	    } else {
	      node.setAttribute(attributeName, attributeValue);
	    }
	  }
	}

	var ReactControlledValuePropTypes = {
	  checkPropTypes: null
	};

	{
	  var hasReadOnlyValue = {
	    button: true,
	    checkbox: true,
	    image: true,
	    hidden: true,
	    radio: true,
	    reset: true,
	    submit: true
	  };

	  var propTypes = {
	    value: function (props, propName, componentName) {
	      if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	        return null;
	      }
	      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	    },
	    checked: function (props, propName, componentName) {
	      if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	        return null;
	      }
	      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	    }
	  };

	  /**
	   * Provide a linked `value` attribute for controlled forms. You should not use
	   * this outside of the ReactDOM controlled form components.
	   */
	  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props, getStack) {
	    checkPropTypes(propTypes, props, 'prop', tagName, getStack);
	  };
	}

	// TODO: direct imports like some-package/src/* are bad. Fix me.
	var getCurrentFiberOwnerName = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
	var getCurrentFiberStackAddendum = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;

	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked != null : props.value != null;
	}

	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */

	function getHostProps(element, props) {
	  var node = element;
	  var checked = props.checked;

	  var hostProps = _assign({}, props, {
	    defaultChecked: undefined,
	    defaultValue: undefined,
	    value: undefined,
	    checked: checked != null ? checked : node._wrapperState.initialChecked
	  });

	  return hostProps;
	}

	function initWrapperState(element, props) {
	  {
	    ReactControlledValuePropTypes.checkPropTypes('input', props, getCurrentFiberStackAddendum);

	    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	      warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName() || 'A component', props.type);
	      didWarnCheckedDefaultChecked = true;
	    }
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName() || 'A component', props.type);
	      didWarnValueDefaultValue = true;
	    }
	  }

	  var node = element;
	  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;

	  node._wrapperState = {
	    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	    initialValue: getSafeValue(props.value != null ? props.value : defaultValue),
	    controlled: isControlled(props)
	  };
	}

	function updateChecked(element, props) {
	  var node = element;
	  var checked = props.checked;
	  if (checked != null) {
	    setValueForProperty(node, 'checked', checked, false);
	  }
	}

	function updateWrapper(element, props) {
	  var node = element;
	  {
	    var _controlled = isControlled(props);

	    if (!node._wrapperState.controlled && _controlled && !didWarnUncontrolledToControlled) {
	      warning(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum());
	      didWarnUncontrolledToControlled = true;
	    }
	    if (node._wrapperState.controlled && !_controlled && !didWarnControlledToUncontrolled) {
	      warning(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum());
	      didWarnControlledToUncontrolled = true;
	    }
	  }

	  updateChecked(element, props);

	  var value = getSafeValue(props.value);

	  if (value != null) {
	    if (props.type === 'number') {
	      if (value === 0 && node.value === '' ||
	      // eslint-disable-next-line
	      node.value != value) {
	        node.value = '' + value;
	      }
	    } else if (node.value !== '' + value) {
	      node.value = '' + value;
	    }
	  }

	  if (props.hasOwnProperty('value')) {
	    setDefaultValue(node, props.type, value);
	  } else if (props.hasOwnProperty('defaultValue')) {
	    setDefaultValue(node, props.type, getSafeValue(props.defaultValue));
	  }

	  if (props.checked == null && props.defaultChecked != null) {
	    node.defaultChecked = !!props.defaultChecked;
	  }
	}

	function postMountWrapper(element, props, isHydrating) {
	  var node = element;

	  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
	    var _initialValue = '' + node._wrapperState.initialValue;
	    var currentValue = node.value;

	    // Do not assign value if it is already set. This prevents user text input
	    // from being lost during SSR hydration.
	    if (!isHydrating) {
	      // Do not re-assign the value property if there is no change. This
	      // potentially avoids a DOM write and prevents Firefox (~60.0.1) from
	      // prematurely marking required inputs as invalid
	      if (_initialValue !== currentValue) {
	        node.value = _initialValue;
	      }
	    }

	    // value must be assigned before defaultValue. This fixes an issue where the
	    // visually displayed value of date inputs disappears on mobile Safari and Chrome:
	    // https://github.com/facebook/react/issues/7233
	    node.defaultValue = _initialValue;
	  }

	  // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	  // this is needed to work around a chrome bug where setting defaultChecked
	  // will sometimes influence the value of checked (even after detachment).
	  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	  // We need to temporarily unset name to avoid disrupting radio button groups.
	  var name = node.name;
	  if (name !== '') {
	    node.name = '';
	  }
	  node.defaultChecked = !node.defaultChecked;
	  node.defaultChecked = !node.defaultChecked;
	  if (name !== '') {
	    node.name = name;
	  }
	}

	function restoreControlledState(element, props) {
	  var node = element;
	  updateWrapper(node, props);
	  updateNamedCousins(node, props);
	}

	function updateNamedCousins(rootNode, props) {
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form. It might not even be in the
	    // document. Let's just use the local `querySelectorAll` to ensure we don't
	    // miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherProps = getFiberCurrentPropsFromNode$1(otherNode);
	      !otherProps ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : void 0;

	      // We need update the tracked value on the named cousin since the value
	      // was changed but the input saw no event or value set
	      updateValueIfChanged(otherNode);

	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      updateWrapper(otherNode, otherProps);
	    }
	  }
	}

	// In Chrome, assigning defaultValue to certain input types triggers input validation.
	// For number inputs, the display value loses trailing decimal points. For email inputs,
	// Chrome raises "The specified value <x> is not a valid email address".
	//
	// Here we check to see if the defaultValue has actually changed, avoiding these problems
	// when the user is inputting text
	//
	// https://github.com/facebook/react/issues/7253
	function setDefaultValue(node, type, value) {
	  if (
	  // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
	  type !== 'number' || node.ownerDocument.activeElement !== node) {
	    if (value == null) {
	      node.defaultValue = '' + node._wrapperState.initialValue;
	    } else if (node.defaultValue !== '' + value) {
	      node.defaultValue = '' + value;
	    }
	  }
	}

	function getSafeValue(value) {
	  switch (typeof value) {
	    case 'boolean':
	    case 'number':
	    case 'object':
	    case 'string':
	    case 'undefined':
	      return value;
	    default:
	      // function, symbol are assigned as empty strings
	      return '';
	  }
	}

	var eventTypes$1 = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: 'onChange',
	      captured: 'onChangeCapture'
	    },
	    dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]
	  }
	};

	function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
	  var event = SyntheticEvent$1.getPooled(eventTypes$1.change, inst, nativeEvent, target);
	  event.type = 'change';
	  // Flag this event loop as needing state restore.
	  enqueueStateRestore(target);
	  accumulateTwoPhaseDispatches(event);
	  return event;
	}
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  runEventsInBatch(event, false);
	}

	function getInstIfValueChanged(targetInst) {
	  var targetNode = getNodeFromInstance$1(targetInst);
	  if (updateValueIfChanged(targetNode)) {
	    return targetInst;
	  }
	}

	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === TOP_CHANGE) {
	    return targetInst;
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
	}

	/**
	 * (For IE <=9) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}

	/**
	 * (For IE <=9) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  activeElement = null;
	  activeElementInst = null;
	}

	/**
	 * (For IE <=9) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  if (getInstIfValueChanged(activeElementInst)) {
	    manualDispatchChangeEvent(nativeEvent);
	  }
	}

	function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
	  if (topLevelType === TOP_FOCUS) {
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === TOP_BLUR) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
	  if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    return getInstIfValueChanged(activeElementInst);
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  var nodeName = elem.nodeName;
	  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === TOP_CLICK) {
	    return getInstIfValueChanged(targetInst);
	  }
	}

	function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {
	    return getInstIfValueChanged(targetInst);
	  }
	}

	function handleControlledInputBlur(node) {
	  var state = node._wrapperState;

	  if (!state || !state.controlled || node.type !== 'number') {
	    return;
	  }

	  // If controlled, assign the value attribute to the current value on blur
	  setDefaultValue(node, 'number', node.value);
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	  eventTypes: eventTypes$1,

	  _isInputEventSupported: isInputEventSupported,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

	    var getTargetInstFunc = void 0,
	        handleEventFunc = void 0;
	    if (shouldUseChangeEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForChangeEvent;
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventPolyfill;
	        handleEventFunc = handleEventsForInputEventPolyfill;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }

	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }

	    // When blurring, set the value attribute for number inputs
	    if (topLevelType === TOP_BLUR) {
	      handleControlledInputBlur(targetNode);
	    }
	  }
	};

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

	var SyntheticUIEvent = SyntheticEvent$1.extend({
	  view: null,
	  detail: null
	});

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  Alt: 'altKey',
	  Control: 'ctrlKey',
	  Meta: 'metaKey',
	  Shift: 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var SyntheticMouseEvent = SyntheticUIEvent.extend({
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  pageX: null,
	  pageY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: null,
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  }
	});

	/**
	 * @interface PointerEvent
	 * @see http://www.w3.org/TR/pointerevents/
	 */
	var SyntheticPointerEvent = SyntheticMouseEvent.extend({
	  pointerId: null,
	  width: null,
	  height: null,
	  pressure: null,
	  tiltX: null,
	  tiltY: null,
	  pointerType: null,
	  isPrimary: null
	});

	var eventTypes$2 = {
	  mouseEnter: {
	    registrationName: 'onMouseEnter',
	    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
	  },
	  mouseLeave: {
	    registrationName: 'onMouseLeave',
	    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
	  },
	  pointerEnter: {
	    registrationName: 'onPointerEnter',
	    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
	  },
	  pointerLeave: {
	    registrationName: 'onPointerLeave',
	    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
	  }
	};

	var EnterLeaveEventPlugin = {
	  eventTypes: eventTypes$2,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;
	    var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;

	    if (isOverEvent && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }

	    if (!isOutEvent && !isOverEvent) {
	      // Must not be a mouse or pointer in or out - ignoring.
	      return null;
	    }

	    var win = void 0;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from = void 0;
	    var to = void 0;
	    if (isOutEvent) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var eventInterface = void 0,
	        leaveEventType = void 0,
	        enterEventType = void 0,
	        eventTypePrefix = void 0;

	    if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {
	      eventInterface = SyntheticMouseEvent;
	      leaveEventType = eventTypes$2.mouseLeave;
	      enterEventType = eventTypes$2.mouseEnter;
	      eventTypePrefix = 'mouse';
	    } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {
	      eventInterface = SyntheticPointerEvent;
	      leaveEventType = eventTypes$2.pointerLeave;
	      enterEventType = eventTypes$2.pointerEnter;
	      eventTypePrefix = 'pointer';
	    }

	    var fromNode = from == null ? win : getNodeFromInstance$1(from);
	    var toNode = to == null ? win : getNodeFromInstance$1(to);

	    var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);
	    leave.type = eventTypePrefix + 'leave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;

	    var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);
	    enter.type = eventTypePrefix + 'enter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;

	    accumulateEnterLeaveDispatches(leave, enter, from, to);

	    return [leave, enter];
	  }
	};

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 *
	 * Note that this module is currently shared and assumed to be stateless.
	 * If this becomes an actual Map, that will break.
	 */

	/**
	 * This API should be called `delete` but we'd have to make sure to always
	 * transform these to strings for IE support. When this transform is fully
	 * supported we can rename it.
	 */


	function get(key) {
	  return key._reactInternalFiber;
	}

	function has(key) {
	  return key._reactInternalFiber !== undefined;
	}

	function set(key, value) {
	  key._reactInternalFiber = value;
	}

	// Don't change these two values. They're used by React Dev Tools.
	var NoEffect = /*              */0;
	var PerformedWork = /*         */1;

	// You can change the rest (and add more).
	var Placement = /*             */2;
	var Update = /*                */4;
	var PlacementAndUpdate = /*    */6;
	var Deletion = /*              */8;
	var ContentReset = /*          */16;
	var Callback = /*              */32;
	var DidCapture = /*            */64;
	var Ref = /*                   */128;
	var Snapshot = /*              */256;

	// Union of all host effects
	var HostEffectMask = /*        */511;

	var Incomplete = /*            */512;
	var ShouldCapture = /*         */1024;

	var MOUNTING = 1;
	var MOUNTED = 2;
	var UNMOUNTED = 3;

	function isFiberMountedImpl(fiber) {
	  var node = fiber;
	  if (!fiber.alternate) {
	    // If there is no alternate, this might be a new tree that isn't inserted
	    // yet. If it is, then it will have a pending insertion effect on it.
	    if ((node.effectTag & Placement) !== NoEffect) {
	      return MOUNTING;
	    }
	    while (node.return) {
	      node = node.return;
	      if ((node.effectTag & Placement) !== NoEffect) {
	        return MOUNTING;
	      }
	    }
	  } else {
	    while (node.return) {
	      node = node.return;
	    }
	  }
	  if (node.tag === HostRoot) {
	    // TODO: Check if this was a nested HostRoot when used with
	    // renderContainerIntoSubtree.
	    return MOUNTED;
	  }
	  // If we didn't hit the root, that means that we're in an disconnected tree
	  // that has been unmounted.
	  return UNMOUNTED;
	}

	function isFiberMounted(fiber) {
	  return isFiberMountedImpl(fiber) === MOUNTED;
	}

	function isMounted(component) {
	  {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null && owner.tag === ClassComponent) {
	      var ownerFiber = owner;
	      var instance = ownerFiber.stateNode;
	      !instance._warnedAboutRefsInRender ? warning(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber) || 'A component') : void 0;
	      instance._warnedAboutRefsInRender = true;
	    }
	  }

	  var fiber = get(component);
	  if (!fiber) {
	    return false;
	  }
	  return isFiberMountedImpl(fiber) === MOUNTED;
	}

	function assertIsMounted(fiber) {
	  !(isFiberMountedImpl(fiber) === MOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
	}

	function findCurrentFiberUsingSlowPath(fiber) {
	  var alternate = fiber.alternate;
	  if (!alternate) {
	    // If there is no alternate, then we only need to check if it is mounted.
	    var state = isFiberMountedImpl(fiber);
	    !(state !== UNMOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
	    if (state === MOUNTING) {
	      return null;
	    }
	    return fiber;
	  }
	  // If we have two possible branches, we'll walk backwards up to the root
	  // to see what path the root points to. On the way we may hit one of the
	  // special cases and we'll deal with them.
	  var a = fiber;
	  var b = alternate;
	  while (true) {
	    var parentA = a.return;
	    var parentB = parentA ? parentA.alternate : null;
	    if (!parentA || !parentB) {
	      // We're at the root.
	      break;
	    }

	    // If both copies of the parent fiber point to the same child, we can
	    // assume that the child is current. This happens when we bailout on low
	    // priority: the bailed out fiber's child reuses the current child.
	    if (parentA.child === parentB.child) {
	      var child = parentA.child;
	      while (child) {
	        if (child === a) {
	          // We've determined that A is the current branch.
	          assertIsMounted(parentA);
	          return fiber;
	        }
	        if (child === b) {
	          // We've determined that B is the current branch.
	          assertIsMounted(parentA);
	          return alternate;
	        }
	        child = child.sibling;
	      }
	      // We should never have an alternate for any mounting node. So the only
	      // way this could possibly happen is if this was unmounted, if at all.
	      invariant(false, 'Unable to find node on an unmounted component.');
	    }

	    if (a.return !== b.return) {
	      // The return pointer of A and the return pointer of B point to different
	      // fibers. We assume that return pointers never criss-cross, so A must
	      // belong to the child set of A.return, and B must belong to the child
	      // set of B.return.
	      a = parentA;
	      b = parentB;
	    } else {
	      // The return pointers point to the same fiber. We'll have to use the
	      // default, slow path: scan the child sets of each parent alternate to see
	      // which child belongs to which set.
	      //
	      // Search parent A's child set
	      var didFindChild = false;
	      var _child = parentA.child;
	      while (_child) {
	        if (_child === a) {
	          didFindChild = true;
	          a = parentA;
	          b = parentB;
	          break;
	        }
	        if (_child === b) {
	          didFindChild = true;
	          b = parentA;
	          a = parentB;
	          break;
	        }
	        _child = _child.sibling;
	      }
	      if (!didFindChild) {
	        // Search parent B's child set
	        _child = parentB.child;
	        while (_child) {
	          if (_child === a) {
	            didFindChild = true;
	            a = parentB;
	            b = parentA;
	            break;
	          }
	          if (_child === b) {
	            didFindChild = true;
	            b = parentB;
	            a = parentA;
	            break;
	          }
	          _child = _child.sibling;
	        }
	        !didFindChild ? invariant(false, 'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.') : void 0;
	      }
	    }

	    !(a.alternate === b) ? invariant(false, 'Return fibers should always be each others\' alternates. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  }
	  // If the root is not a host container, we're in a disconnected tree. I.e.
	  // unmounted.
	  !(a.tag === HostRoot) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
	  if (a.stateNode.current === a) {
	    // We've determined that A is the current branch.
	    return fiber;
	  }
	  // Otherwise B has to be current branch.
	  return alternate;
	}

	function findCurrentHostFiber(parent) {
	  var currentParent = findCurrentFiberUsingSlowPath(parent);
	  if (!currentParent) {
	    return null;
	  }

	  // Next we'll drill down this component to find the first HostComponent/Text.
	  var node = currentParent;
	  while (true) {
	    if (node.tag === HostComponent || node.tag === HostText) {
	      return node;
	    } else if (node.child) {
	      node.child.return = node;
	      node = node.child;
	      continue;
	    }
	    if (node === currentParent) {
	      return null;
	    }
	    while (!node.sibling) {
	      if (!node.return || node.return === currentParent) {
	        return null;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	  // Flow needs the return null here, but ESLint complains about it.
	  // eslint-disable-next-line no-unreachable
	  return null;
	}

	function findCurrentHostFiberWithNoPortals(parent) {
	  var currentParent = findCurrentFiberUsingSlowPath(parent);
	  if (!currentParent) {
	    return null;
	  }

	  // Next we'll drill down this component to find the first HostComponent/Text.
	  var node = currentParent;
	  while (true) {
	    if (node.tag === HostComponent || node.tag === HostText) {
	      return node;
	    } else if (node.child && node.tag !== HostPortal) {
	      node.child.return = node;
	      node = node.child;
	      continue;
	    }
	    if (node === currentParent) {
	      return null;
	    }
	    while (!node.sibling) {
	      if (!node.return || node.return === currentParent) {
	        return null;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	  // Flow needs the return null here, but ESLint complains about it.
	  // eslint-disable-next-line no-unreachable
	  return null;
	}

	function addEventBubbleListener(element, eventType, listener) {
	  element.addEventListener(eventType, listener, false);
	}

	function addEventCaptureListener(element, eventType, listener) {
	  element.addEventListener(eventType, listener, true);
	}

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var SyntheticAnimationEvent = SyntheticEvent$1.extend({
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	});

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var SyntheticClipboardEvent = SyntheticEvent$1.extend({
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	});

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var SyntheticFocusEvent = SyntheticUIEvent.extend({
	  relatedTarget: null
	});

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	function getEventCharCode(nativeEvent) {
	  var charCode = void 0;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
	  // report Enter as charCode 10 when ctrl is pressed.
	  if (charCode === 10) {
	    charCode = 13;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  Esc: 'Escape',
	  Spacebar: ' ',
	  Left: 'ArrowLeft',
	  Up: 'ArrowUp',
	  Right: 'ArrowRight',
	  Down: 'ArrowDown',
	  Del: 'Delete',
	  Win: 'OS',
	  Menu: 'ContextMenu',
	  Apps: 'ContextMenu',
	  Scroll: 'ScrollLock',
	  MozPrintableKey: 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  '8': 'Backspace',
	  '9': 'Tab',
	  '12': 'Clear',
	  '13': 'Enter',
	  '16': 'Shift',
	  '17': 'Control',
	  '18': 'Alt',
	  '19': 'Pause',
	  '20': 'CapsLock',
	  '27': 'Escape',
	  '32': ' ',
	  '33': 'PageUp',
	  '34': 'PageDown',
	  '35': 'End',
	  '36': 'Home',
	  '37': 'ArrowLeft',
	  '38': 'ArrowUp',
	  '39': 'ArrowRight',
	  '40': 'ArrowDown',
	  '45': 'Insert',
	  '46': 'Delete',
	  '112': 'F1',
	  '113': 'F2',
	  '114': 'F3',
	  '115': 'F4',
	  '116': 'F5',
	  '117': 'F6',
	  '118': 'F7',
	  '119': 'F8',
	  '120': 'F9',
	  '121': 'F10',
	  '122': 'F11',
	  '123': 'F12',
	  '144': 'NumLock',
	  '145': 'ScrollLock',
	  '224': 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var SyntheticKeyboardEvent = SyntheticUIEvent.extend({
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	});

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var SyntheticDragEvent = SyntheticMouseEvent.extend({
	  dataTransfer: null
	});

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var SyntheticTouchEvent = SyntheticUIEvent.extend({
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	});

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var SyntheticTransitionEvent = SyntheticEvent$1.extend({
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	});

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var SyntheticWheelEvent = SyntheticMouseEvent.extend({
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },

	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	});

	/**
	 * Turns
	 * ['abort', ...]
	 * into
	 * eventTypes = {
	 *   'abort': {
	 *     phasedRegistrationNames: {
	 *       bubbled: 'onAbort',
	 *       captured: 'onAbortCapture',
	 *     },
	 *     dependencies: [TOP_ABORT],
	 *   },
	 *   ...
	 * };
	 * topLevelEventsToDispatchConfig = new Map([
	 *   [TOP_ABORT, { sameConfig }],
	 * ]);
	 */

	var interactiveEventTypeNames = [[TOP_BLUR, 'blur'], [TOP_CANCEL, 'cancel'], [TOP_CLICK, 'click'], [TOP_CLOSE, 'close'], [TOP_CONTEXT_MENU, 'contextMenu'], [TOP_COPY, 'copy'], [TOP_CUT, 'cut'], [TOP_DOUBLE_CLICK, 'doubleClick'], [TOP_DRAG_END, 'dragEnd'], [TOP_DRAG_START, 'dragStart'], [TOP_DROP, 'drop'], [TOP_FOCUS, 'focus'], [TOP_INPUT, 'input'], [TOP_INVALID, 'invalid'], [TOP_KEY_DOWN, 'keyDown'], [TOP_KEY_PRESS, 'keyPress'], [TOP_KEY_UP, 'keyUp'], [TOP_MOUSE_DOWN, 'mouseDown'], [TOP_MOUSE_UP, 'mouseUp'], [TOP_PASTE, 'paste'], [TOP_PAUSE, 'pause'], [TOP_PLAY, 'play'], [TOP_POINTER_CANCEL, 'pointerCancel'], [TOP_POINTER_DOWN, 'pointerDown'], [TOP_POINTER_UP, 'pointerUp'], [TOP_RATE_CHANGE, 'rateChange'], [TOP_RESET, 'reset'], [TOP_SEEKED, 'seeked'], [TOP_SUBMIT, 'submit'], [TOP_TOUCH_CANCEL, 'touchCancel'], [TOP_TOUCH_END, 'touchEnd'], [TOP_TOUCH_START, 'touchStart'], [TOP_VOLUME_CHANGE, 'volumeChange']];
	var nonInteractiveEventTypeNames = [[TOP_ABORT, 'abort'], [TOP_ANIMATION_END, 'animationEnd'], [TOP_ANIMATION_ITERATION, 'animationIteration'], [TOP_ANIMATION_START, 'animationStart'], [TOP_CAN_PLAY, 'canPlay'], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough'], [TOP_DRAG, 'drag'], [TOP_DRAG_ENTER, 'dragEnter'], [TOP_DRAG_EXIT, 'dragExit'], [TOP_DRAG_LEAVE, 'dragLeave'], [TOP_DRAG_OVER, 'dragOver'], [TOP_DURATION_CHANGE, 'durationChange'], [TOP_EMPTIED, 'emptied'], [TOP_ENCRYPTED, 'encrypted'], [TOP_ENDED, 'ended'], [TOP_ERROR, 'error'], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture'], [TOP_LOAD, 'load'], [TOP_LOADED_DATA, 'loadedData'], [TOP_LOADED_METADATA, 'loadedMetadata'], [TOP_LOAD_START, 'loadStart'], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture'], [TOP_MOUSE_MOVE, 'mouseMove'], [TOP_MOUSE_OUT, 'mouseOut'], [TOP_MOUSE_OVER, 'mouseOver'], [TOP_PLAYING, 'playing'], [TOP_POINTER_MOVE, 'pointerMove'], [TOP_POINTER_OUT, 'pointerOut'], [TOP_POINTER_OVER, 'pointerOver'], [TOP_PROGRESS, 'progress'], [TOP_SCROLL, 'scroll'], [TOP_SEEKING, 'seeking'], [TOP_STALLED, 'stalled'], [TOP_SUSPEND, 'suspend'], [TOP_TIME_UPDATE, 'timeUpdate'], [TOP_TOGGLE, 'toggle'], [TOP_TOUCH_MOVE, 'touchMove'], [TOP_TRANSITION_END, 'transitionEnd'], [TOP_WAITING, 'waiting'], [TOP_WHEEL, 'wheel']];

	var eventTypes$4 = {};
	var topLevelEventsToDispatchConfig = {};

	function addEventTypeNameToConfig(_ref, isInteractive) {
	  var topEvent = _ref[0],
	      event = _ref[1];

	  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
	  var onEvent = 'on' + capitalizedEvent;

	  var type = {
	    phasedRegistrationNames: {
	      bubbled: onEvent,
	      captured: onEvent + 'Capture'
	    },
	    dependencies: [topEvent],
	    isInteractive: isInteractive
	  };
	  eventTypes$4[event] = type;
	  topLevelEventsToDispatchConfig[topEvent] = type;
	}

	interactiveEventTypeNames.forEach(function (eventTuple) {
	  addEventTypeNameToConfig(eventTuple, true);
	});
	nonInteractiveEventTypeNames.forEach(function (eventTuple) {
	  addEventTypeNameToConfig(eventTuple, false);
	});

	// Only used in DEV for exhaustiveness validation.
	var knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];

	var SimpleEventPlugin = {
	  eventTypes: eventTypes$4,

	  isInteractiveTopLevelEventType: function (topLevelType) {
	    var config = topLevelEventsToDispatchConfig[topLevelType];
	    return config !== undefined && config.isInteractive === true;
	  },


	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor = void 0;
	    switch (topLevelType) {
	      case TOP_KEY_PRESS:
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case TOP_KEY_DOWN:
	      case TOP_KEY_UP:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case TOP_BLUR:
	      case TOP_FOCUS:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case TOP_CLICK:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case TOP_DOUBLE_CLICK:
	      case TOP_MOUSE_DOWN:
	      case TOP_MOUSE_MOVE:
	      case TOP_MOUSE_UP:
	      // TODO: Disabled elements should not respond to mouse events
	      /* falls through */
	      case TOP_MOUSE_OUT:
	      case TOP_MOUSE_OVER:
	      case TOP_CONTEXT_MENU:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case TOP_DRAG:
	      case TOP_DRAG_END:
	      case TOP_DRAG_ENTER:
	      case TOP_DRAG_EXIT:
	      case TOP_DRAG_LEAVE:
	      case TOP_DRAG_OVER:
	      case TOP_DRAG_START:
	      case TOP_DROP:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case TOP_TOUCH_CANCEL:
	      case TOP_TOUCH_END:
	      case TOP_TOUCH_MOVE:
	      case TOP_TOUCH_START:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case TOP_ANIMATION_END:
	      case TOP_ANIMATION_ITERATION:
	      case TOP_ANIMATION_START:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case TOP_TRANSITION_END:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case TOP_SCROLL:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case TOP_WHEEL:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case TOP_COPY:
	      case TOP_CUT:
	      case TOP_PASTE:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	      case TOP_GOT_POINTER_CAPTURE:
	      case TOP_LOST_POINTER_CAPTURE:
	      case TOP_POINTER_CANCEL:
	      case TOP_POINTER_DOWN:
	      case TOP_POINTER_MOVE:
	      case TOP_POINTER_OUT:
	      case TOP_POINTER_OVER:
	      case TOP_POINTER_UP:
	        EventConstructor = SyntheticPointerEvent;
	        break;
	      default:
	        {
	          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
	            warning(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
	          }
	        }
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent$1;
	        break;
	    }
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    accumulateTwoPhaseDispatches(event);
	    return event;
	  }
	};

	var isInteractiveTopLevelEventType = SimpleEventPlugin.isInteractiveTopLevelEventType;


	var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
	var callbackBookkeepingPool = [];

	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findRootContainerNode(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst.return) {
	    inst = inst.return;
	  }
	  if (inst.tag !== HostRoot) {
	    // This can happen if we're in a detached tree.
	    return null;
	  }
	  return inst.stateNode.containerInfo;
	}

	// Used to store ancestor hierarchy in top level callback
	function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {
	  if (callbackBookkeepingPool.length) {
	    var instance = callbackBookkeepingPool.pop();
	    instance.topLevelType = topLevelType;
	    instance.nativeEvent = nativeEvent;
	    instance.targetInst = targetInst;
	    return instance;
	  }
	  return {
	    topLevelType: topLevelType,
	    nativeEvent: nativeEvent,
	    targetInst: targetInst,
	    ancestors: []
	  };
	}

	function releaseTopLevelCallbackBookKeeping(instance) {
	  instance.topLevelType = null;
	  instance.nativeEvent = null;
	  instance.targetInst = null;
	  instance.ancestors.length = 0;
	  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
	    callbackBookkeepingPool.push(instance);
	  }
	}

	function handleTopLevel(bookKeeping) {
	  var targetInst = bookKeeping.targetInst;

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    if (!ancestor) {
	      bookKeeping.ancestors.push(ancestor);
	      break;
	    }
	    var root = findRootContainerNode(ancestor);
	    if (!root) {
	      break;
	    }
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = getClosestInstanceFromNode(root);
	  } while (ancestor);

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    runExtractedEventsInBatch(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	// TODO: can we stop exporting these?
	var _enabled = true;

	function setEnabled(enabled) {
	  _enabled = !!enabled;
	}

	function isEnabled() {
	  return _enabled;
	}

	/**
	 * Traps top-level events by using event bubbling.
	 *
	 * @param {number} topLevelType Number from `TopLevelEventTypes`.
	 * @param {object} element Element on which to attach listener.
	 * @return {?object} An object with a remove function which will forcefully
	 *                  remove the listener.
	 * @internal
	 */
	function trapBubbledEvent(topLevelType, element) {
	  if (!element) {
	    return null;
	  }
	  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;

	  addEventBubbleListener(element, getRawEventName(topLevelType),
	  // Check if interactive and wrap in interactiveUpdates
	  dispatch.bind(null, topLevelType));
	}

	/**
	 * Traps a top-level event by using event capturing.
	 *
	 * @param {number} topLevelType Number from `TopLevelEventTypes`.
	 * @param {object} element Element on which to attach listener.
	 * @return {?object} An object with a remove function which will forcefully
	 *                  remove the listener.
	 * @internal
	 */
	function trapCapturedEvent(topLevelType, element) {
	  if (!element) {
	    return null;
	  }
	  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;

	  addEventCaptureListener(element, getRawEventName(topLevelType),
	  // Check if interactive and wrap in interactiveUpdates
	  dispatch.bind(null, topLevelType));
	}

	function dispatchInteractiveEvent(topLevelType, nativeEvent) {
	  interactiveUpdates(dispatchEvent, topLevelType, nativeEvent);
	}

	function dispatchEvent(topLevelType, nativeEvent) {
	  if (!_enabled) {
	    return;
	  }

	  var nativeEventTarget = getEventTarget(nativeEvent);
	  var targetInst = getClosestInstanceFromNode(nativeEventTarget);
	  if (targetInst !== null && typeof targetInst.tag === 'number' && !isFiberMounted(targetInst)) {
	    // If we get an event (ex: img onload) before committing that
	    // component's mount, ignore it for now (that is, treat it as if it was an
	    // event on a non-React tree). We might also consider queueing events and
	    // dispatching them after the mount.
	    targetInst = null;
	  }

	  var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);

	  try {
	    // Event queue being processed in the same cycle allows
	    // `preventDefault`.
	    batchedUpdates(handleTopLevel, bookKeeping);
	  } finally {
	    releaseTopLevelCallbackBookKeeping(bookKeeping);
	  }
	}

	var ReactDOMEventListener = Object.freeze({
		get _enabled () { return _enabled; },
		setEnabled: setEnabled,
		isEnabled: isEnabled,
		trapBubbledEvent: trapBubbledEvent,
		trapCapturedEvent: trapCapturedEvent,
		dispatchEvent: dispatchEvent
	});

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactDOMEventListener, which is injected and can therefore support
	 *    pluggable event sources. This is the only work that occurs in the main
	 *    thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var alreadyListeningTo = {};
	var reactTopListenersCounter = 0;

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * We listen for bubbled touch events on the document object.
	 *
	 * Firefox v8.01 (and possibly others) exhibited strange behavior when
	 * mounting `onmousemove` events at some node that was not the document
	 * element. The symptoms were that if your mouse is not moving over something
	 * contained within that mount point (for example on the background) the
	 * top-level listeners for `onmousemove` won't be called. However, if you
	 * register the `mousemove` on the document object, then it will of course
	 * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	 * top-level listeners to the document object only, at least for these
	 * movement types of events and possibly all events.
	 *
	 * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	 *
	 * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	 * they bubble to document.
	 *
	 * @param {string} registrationName Name of listener (e.g. `onClick`).
	 * @param {object} mountAt Container where to mount the listener
	 */
	function listenTo(registrationName, mountAt) {
	  var isListening = getListeningForDocument(mountAt);
	  var dependencies = registrationNameDependencies[registrationName];

	  for (var i = 0; i < dependencies.length; i++) {
	    var dependency = dependencies[i];
	    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	      switch (dependency) {
	        case TOP_SCROLL:
	          trapCapturedEvent(TOP_SCROLL, mountAt);
	          break;
	        case TOP_FOCUS:
	        case TOP_BLUR:
	          trapCapturedEvent(TOP_FOCUS, mountAt);
	          trapCapturedEvent(TOP_BLUR, mountAt);
	          // We set the flag for a single dependency later in this function,
	          // but this ensures we mark both as attached rather than just one.
	          isListening[TOP_BLUR] = true;
	          isListening[TOP_FOCUS] = true;
	          break;
	        case TOP_CANCEL:
	        case TOP_CLOSE:
	          if (isEventSupported(getRawEventName(dependency), true)) {
	            trapCapturedEvent(dependency, mountAt);
	          }
	          break;
	        case TOP_INVALID:
	        case TOP_SUBMIT:
	        case TOP_RESET:
	          // We listen to them on the target DOM elements.
	          // Some of them bubble so we don't want them to fire twice.
	          break;
	        default:
	          // By default, listen on the top level to all non-media events.
	          // Media events don't bubble so adding the listener wouldn't do anything.
	          var isMediaEvent = mediaEventTypes.indexOf(dependency) !== -1;
	          if (!isMediaEvent) {
	            trapBubbledEvent(dependency, mountAt);
	          }
	          break;
	      }
	      isListening[dependency] = true;
	    }
	  }
	}

	function isListeningToAllDependencies(registrationName, mountAt) {
	  var isListening = getListeningForDocument(mountAt);
	  var dependencies = registrationNameDependencies[registrationName];
	  for (var i = 0; i < dependencies.length; i++) {
	    var dependency = dependencies[i];
	    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	      return false;
	    }
	  }
	  return true;
	}

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === TEXT_NODE) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	/**
	 * @param {DOMElement} outerNode
	 * @return {?object}
	 */
	function getOffsets(outerNode) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode,
	      anchorOffset = selection.anchorOffset,
	      focusNode = selection.focusNode,
	      focusOffset = selection.focusOffset;

	  // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
	  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
	  // expose properties, triggering a "Permission denied error" if any of its
	  // properties are accessed. The only seemingly possible way to avoid erroring
	  // is to access a property that typically works for non-anonymous divs and
	  // catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

	  try {
	    /* eslint-disable no-unused-expressions */
	    anchorNode.nodeType;
	    focusNode.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
	}

	/**
	 * Returns {start, end} where `start` is the character/codepoint index of
	 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
	 * `end` is the index of (focusNode, focusOffset).
	 *
	 * Returns null if you pass in garbage input but we should probably just crash.
	 *
	 * Exported only for testing.
	 */
	function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
	  var length = 0;
	  var start = -1;
	  var end = -1;
	  var indexWithinAnchor = 0;
	  var indexWithinFocus = 0;
	  var node = outerNode;
	  var parentNode = null;

	  outer: while (true) {
	    var next = null;

	    while (true) {
	      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
	        start = length + anchorOffset;
	      }
	      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
	        end = length + focusOffset;
	      }

	      if (node.nodeType === TEXT_NODE) {
	        length += node.nodeValue.length;
	      }

	      if ((next = node.firstChild) === null) {
	        break;
	      }
	      // Moving from `node` to its first child `next`.
	      parentNode = node;
	      node = next;
	    }

	    while (true) {
	      if (node === outerNode) {
	        // If `outerNode` has children, this is always the second time visiting
	        // it. If it has no children, this is still the first loop, and the only
	        // valid selection is anchorNode and focusNode both equal to this node
	        // and both offsets 0, in which case we will have handled above.
	        break outer;
	      }
	      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
	        start = length;
	      }
	      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
	        end = length;
	      }
	      if ((next = node.nextSibling) !== null) {
	        break;
	      }
	      node = parentNode;
	      parentNode = node.parentNode;
	    }

	    // Moving from `node` to its next sibling `next`.
	    node = next;
	  }

	  if (start === -1 || end === -1) {
	    // This should never happen. (Would happen if the anchor/focus nodes aren't
	    // actually inside the passed-in node.)
	    return null;
	  }

	  return {
	    start: start,
	    end: end
	  };
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
	      return;
	    }
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */

	/**
	 * @hasSelectionCapabilities: we get the element types that support selection
	 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
	 * and `selectionEnd` rows.
	 */
	function hasSelectionCapabilities(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
	}

	function getSelectionInformation() {
	  var focusedElem = getActiveElement();
	  return {
	    focusedElem: focusedElem,
	    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection$1(focusedElem) : null
	  };
	}

	/**
	 * @restoreSelection: If any selection information was potentially lost,
	 * restore it. This is useful when performing operations that could remove dom
	 * nodes and place them back in, resulting in focus being lost.
	 */
	function restoreSelection(priorSelectionInformation) {
	  var curFocusedElem = getActiveElement();
	  var priorFocusedElem = priorSelectionInformation.focusedElem;
	  var priorSelectionRange = priorSelectionInformation.selectionRange;
	  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	    if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
	      setSelection(priorFocusedElem, priorSelectionRange);
	    }

	    // Focusing a node can change the scroll position, which is undesirable
	    var ancestors = [];
	    var ancestor = priorFocusedElem;
	    while (ancestor = ancestor.parentNode) {
	      if (ancestor.nodeType === ELEMENT_NODE) {
	        ancestors.push({
	          element: ancestor,
	          left: ancestor.scrollLeft,
	          top: ancestor.scrollTop
	        });
	      }
	    }

	    if (typeof priorFocusedElem.focus === 'function') {
	      priorFocusedElem.focus();
	    }

	    for (var i = 0; i < ancestors.length; i++) {
	      var info = ancestors[i];
	      info.element.scrollLeft = info.left;
	      info.element.scrollTop = info.top;
	    }
	  }
	}

	/**
	 * @getSelection: Gets the selection bounds of a focused textarea, input or
	 * contentEditable node.
	 * -@input: Look up selection bounds of this input
	 * -@return {start: selectionStart, end: selectionEnd}
	 */
	function getSelection$1(input) {
	  var selection = void 0;

	  if ('selectionStart' in input) {
	    // Modern browser with input or textarea.
	    selection = {
	      start: input.selectionStart,
	      end: input.selectionEnd
	    };
	  } else {
	    // Content editable or old IE textarea.
	    selection = getOffsets(input);
	  }

	  return selection || { start: 0, end: 0 };
	}

	/**
	 * @setSelection: Sets the selection bounds of a textarea or input and focuses
	 * the input.
	 * -@input     Set selection bounds of this input or textarea
	 * -@offsets   Object of same form that is returned from get*
	 */
	function setSelection(input, offsets) {
	  var start = offsets.start,
	      end = offsets.end;

	  if (end === undefined) {
	    end = start;
	  }

	  if ('selectionStart' in input) {
	    input.selectionStart = start;
	    input.selectionEnd = Math.min(end, input.value.length);
	  } else {
	    setOffsets(input, offsets);
	  }
	}

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes$3 = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: 'onSelect',
	      captured: 'onSelectCapture'
	    },
	    dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]
	  }
	};

	var activeElement$1 = null;
	var activeElementInst$1 = null;
	var lastSelection = null;
	var mouseDown = false;

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement$1);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent$1.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement$1;

	    accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	  eventTypes: eventTypes$3,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var doc = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget.document : nativeEventTarget.nodeType === DOCUMENT_NODE ? nativeEventTarget : nativeEventTarget.ownerDocument;
	    // Track whether all listeners exists for this plugin. If none exist, we do
	    // not extract events. See #3639.
	    if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
	      return null;
	    }

	    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case TOP_FOCUS:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement$1 = targetNode;
	          activeElementInst$1 = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case TOP_BLUR:
	        activeElement$1 = null;
	        activeElementInst$1 = null;
	        lastSelection = null;
	        break;
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case TOP_MOUSE_DOWN:
	        mouseDown = true;
	        break;
	      case TOP_CONTEXT_MENU:
	      case TOP_MOUSE_UP:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case TOP_SELECTION_CHANGE:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case TOP_KEY_DOWN:
	      case TOP_KEY_UP:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  }
	};

	/**
	 * Inject modules for resolving DOM hierarchy and plugin ordering.
	 */
	injection.injectEventPluginOrder(DOMEventPluginOrder);
	injection$1.injectComponentTree(ReactDOMComponentTree);

	/**
	 * Some important event plugins included by default (without having to require
	 * them).
	 */
	injection.injectEventPluginsByName({
	  SimpleEventPlugin: SimpleEventPlugin,
	  EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	  ChangeEventPlugin: ChangeEventPlugin,
	  SelectEventPlugin: SelectEventPlugin,
	  BeforeInputEventPlugin: BeforeInputEventPlugin
	});

	// We capture a local reference to any global, in case it gets polyfilled after
	// this module is initially evaluated.
	// We want to be using a consistent implementation.

	var localRequestAnimationFrame$1 = typeof requestAnimationFrame === 'function' ? requestAnimationFrame : undefined;

	/**
	 * A scheduling library to allow scheduling work with more granular priority and
	 * control than requestAnimationFrame and requestIdleCallback.
	 * Current TODO items:
	 * X- Pull out the scheduleWork polyfill built into React
	 * X- Initial test coverage
	 * X- Support for multiple callbacks
	 * - Support for two priorities; serial and deferred
	 * - Better test coverage
	 * - Better docblock
	 * - Polish documentation, API
	 */

	// This is a built-in polyfill for requestIdleCallback. It works by scheduling
	// a requestAnimationFrame, storing the time for the start of the frame, then
	// scheduling a postMessage which gets scheduled after paint. Within the
	// postMessage handler do as much work as possible until time + frame rate.
	// By separating the idle call into a separate event tick we ensure that
	// layout, paint and other browser work is counted against the available time.
	// The frame rate is dynamically adjusted.

	// We capture a local reference to any global, in case it gets polyfilled after
	// this module is initially evaluated.
	// We want to be using a consistent implementation.
	var localDate = Date;
	var localSetTimeout = setTimeout;
	var localClearTimeout = clearTimeout;

	var hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';

	var now$1 = void 0;
	if (hasNativePerformanceNow) {
	  var Performance = performance;
	  now$1 = function () {
	    return Performance.now();
	  };
	} else {
	  now$1 = function () {
	    return localDate.now();
	  };
	}

	var scheduleWork = void 0;
	var cancelScheduledWork = void 0;

	if (!ExecutionEnvironment.canUseDOM) {
	  var timeoutIds = new Map();

	  scheduleWork = function (callback, options) {
	    // keeping return type consistent
	    var callbackConfig = {
	      scheduledCallback: callback,
	      timeoutTime: 0,
	      next: null,
	      prev: null
	    };
	    var timeoutId = localSetTimeout(function () {
	      callback({
	        timeRemaining: function () {
	          return Infinity;
	        },

	        didTimeout: false
	      });
	    });
	    timeoutIds.set(callback, timeoutId);
	    return callbackConfig;
	  };
	  cancelScheduledWork = function (callbackId) {
	    var callback = callbackId.scheduledCallback;
	    var timeoutId = timeoutIds.get(callback);
	    timeoutIds.delete(callbackId);
	    localClearTimeout(timeoutId);
	  };
	} else {
	  {
	    if (typeof localRequestAnimationFrame$1 !== 'function') {
	      warning(false, 'React depends on requestAnimationFrame. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
	    }
	  }

	  var localRequestAnimationFrame = typeof localRequestAnimationFrame$1 === 'function' ? localRequestAnimationFrame$1 : function (callback) {
	    invariant(false, 'React depends on requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills');
	  };

	  var headOfPendingCallbacksLinkedList = null;
	  var tailOfPendingCallbacksLinkedList = null;

	  // We track what the next soonest timeoutTime is, to be able to quickly tell
	  // if none of the scheduled callbacks have timed out.
	  var nextSoonestTimeoutTime = -1;

	  var isIdleScheduled = false;
	  var isAnimationFrameScheduled = false;

	  var frameDeadline = 0;
	  // We start out assuming that we run at 30fps but then the heuristic tracking
	  // will adjust this value to a faster fps if we get more frequent animation
	  // frames.
	  var previousFrameTime = 33;
	  var activeFrameTime = 33;

	  var frameDeadlineObject = {
	    didTimeout: false,
	    timeRemaining: function () {
	      var remaining = frameDeadline - now$1();
	      return remaining > 0 ? remaining : 0;
	    }
	  };

	  /**
	   * Handles the case where a callback errors:
	   * - don't catch the error, because this changes debugging behavior
	   * - do start a new postMessage callback, to call any remaining callbacks,
	   * - but only if there is an error, so there is not extra overhead.
	   */
	  var callUnsafely = function (callbackConfig, arg) {
	    var callback = callbackConfig.scheduledCallback;
	    var finishedCalling = false;
	    try {
	      callback(arg);
	      finishedCalling = true;
	    } finally {
	      // always remove it from linked list
	      cancelScheduledWork(callbackConfig);

	      if (!finishedCalling) {
	        // an error must have been thrown
	        isIdleScheduled = true;
	        window.postMessage(messageKey, '*');
	      }
	    }
	  };

	  /**
	   * Checks for timed out callbacks, runs them, and then checks again to see if
	   * any more have timed out.
	   * Keeps doing this until there are none which have currently timed out.
	   */
	  var callTimedOutCallbacks = function () {
	    if (headOfPendingCallbacksLinkedList === null) {
	      return;
	    }

	    var currentTime = now$1();
	    // TODO: this would be more efficient if deferred callbacks are stored in
	    // min heap.
	    // Or in a linked list with links for both timeoutTime order and insertion
	    // order.
	    // For now an easy compromise is the current approach:
	    // Keep a pointer to the soonest timeoutTime, and check that first.
	    // If it has not expired, we can skip traversing the whole list.
	    // If it has expired, then we step through all the callbacks.
	    if (nextSoonestTimeoutTime === -1 || nextSoonestTimeoutTime > currentTime) {
	      // We know that none of them have timed out yet.
	      return;
	    }
	    // NOTE: we intentionally wait to update the nextSoonestTimeoutTime until
	    // after successfully calling any timed out callbacks.
	    // If a timed out callback throws an error, we could get stuck in a state
	    // where the nextSoonestTimeoutTime was set wrong.
	    var updatedNextSoonestTimeoutTime = -1; // we will update nextSoonestTimeoutTime below
	    var timedOutCallbacks = [];

	    // iterate once to find timed out callbacks and find nextSoonestTimeoutTime
	    var currentCallbackConfig = headOfPendingCallbacksLinkedList;
	    while (currentCallbackConfig !== null) {
	      var _timeoutTime = currentCallbackConfig.timeoutTime;
	      if (_timeoutTime !== -1 && _timeoutTime <= currentTime) {
	        // it has timed out!
	        timedOutCallbacks.push(currentCallbackConfig);
	      } else {
	        if (_timeoutTime !== -1 && (updatedNextSoonestTimeoutTime === -1 || _timeoutTime < updatedNextSoonestTimeoutTime)) {
	          updatedNextSoonestTimeoutTime = _timeoutTime;
	        }
	      }
	      currentCallbackConfig = currentCallbackConfig.next;
	    }

	    if (timedOutCallbacks.length > 0) {
	      frameDeadlineObject.didTimeout = true;
	      for (var i = 0, len = timedOutCallbacks.length; i < len; i++) {
	        callUnsafely(timedOutCallbacks[i], frameDeadlineObject);
	      }
	    }

	    // NOTE: we intentionally wait to update the nextSoonestTimeoutTime until
	    // after successfully calling any timed out callbacks.
	    nextSoonestTimeoutTime = updatedNextSoonestTimeoutTime;
	  };

	  // We use the postMessage trick to defer idle work until after the repaint.
	  var messageKey = '__reactIdleCallback$' + Math.random().toString(36).slice(2);
	  var idleTick = function (event) {
	    if (event.source !== window || event.data !== messageKey) {
	      return;
	    }
	    isIdleScheduled = false;

	    if (headOfPendingCallbacksLinkedList === null) {
	      return;
	    }

	    // First call anything which has timed out, until we have caught up.
	    callTimedOutCallbacks();

	    var currentTime = now$1();
	    // Next, as long as we have idle time, try calling more callbacks.
	    while (frameDeadline - currentTime > 0 && headOfPendingCallbacksLinkedList !== null) {
	      var latestCallbackConfig = headOfPendingCallbacksLinkedList;
	      frameDeadlineObject.didTimeout = false;
	      // callUnsafely will remove it from the head of the linked list
	      callUnsafely(latestCallbackConfig, frameDeadlineObject);
	      currentTime = now$1();
	    }
	    if (headOfPendingCallbacksLinkedList !== null) {
	      if (!isAnimationFrameScheduled) {
	        // Schedule another animation callback so we retry later.
	        isAnimationFrameScheduled = true;
	        localRequestAnimationFrame(animationTick);
	      }
	    }
	  };
	  // Assumes that we have addEventListener in this environment. Might need
	  // something better for old IE.
	  window.addEventListener('message', idleTick, false);

	  var animationTick = function (rafTime) {
	    isAnimationFrameScheduled = false;
	    var nextFrameTime = rafTime - frameDeadline + activeFrameTime;
	    if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {
	      if (nextFrameTime < 8) {
	        // Defensive coding. We don't support higher frame rates than 120hz.
	        // If we get lower than that, it is probably a bug.
	        nextFrameTime = 8;
	      }
	      // If one frame goes long, then the next one can be short to catch up.
	      // If two frames are short in a row, then that's an indication that we
	      // actually have a higher frame rate than what we're currently optimizing.
	      // We adjust our heuristic dynamically accordingly. For example, if we're
	      // running on 120hz display or 90hz VR display.
	      // Take the max of the two in case one of them was an anomaly due to
	      // missed frame deadlines.
	      activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;
	    } else {
	      previousFrameTime = nextFrameTime;
	    }
	    frameDeadline = rafTime + activeFrameTime;
	    if (!isIdleScheduled) {
	      isIdleScheduled = true;
	      window.postMessage(messageKey, '*');
	    }
	  };

	  scheduleWork = function (callback, options) /* CallbackConfigType */{
	    var timeoutTime = -1;
	    if (options != null && typeof options.timeout === 'number') {
	      timeoutTime = now$1() + options.timeout;
	    }
	    if (nextSoonestTimeoutTime === -1 || timeoutTime !== -1 && timeoutTime < nextSoonestTimeoutTime) {
	      nextSoonestTimeoutTime = timeoutTime;
	    }

	    var scheduledCallbackConfig = {
	      scheduledCallback: callback,
	      timeoutTime: timeoutTime,
	      prev: null,
	      next: null
	    };
	    if (headOfPendingCallbacksLinkedList === null) {
	      // Make this callback the head and tail of our list
	      headOfPendingCallbacksLinkedList = scheduledCallbackConfig;
	      tailOfPendingCallbacksLinkedList = scheduledCallbackConfig;
	    } else {
	      // Add latest callback as the new tail of the list
	      scheduledCallbackConfig.prev = tailOfPendingCallbacksLinkedList;
	      // renaming for clarity
	      var oldTailOfPendingCallbacksLinkedList = tailOfPendingCallbacksLinkedList;
	      if (oldTailOfPendingCallbacksLinkedList !== null) {
	        oldTailOfPendingCallbacksLinkedList.next = scheduledCallbackConfig;
	      }
	      tailOfPendingCallbacksLinkedList = scheduledCallbackConfig;
	    }

	    if (!isAnimationFrameScheduled) {
	      // If rAF didn't already schedule one, we need to schedule a frame.
	      // TODO: If this rAF doesn't materialize because the browser throttles, we
	      // might want to still have setTimeout trigger scheduleWork as a backup to ensure
	      // that we keep performing work.
	      isAnimationFrameScheduled = true;
	      localRequestAnimationFrame(animationTick);
	    }
	    return scheduledCallbackConfig;
	  };

	  cancelScheduledWork = function (callbackConfig /* CallbackConfigType */
	  ) {
	    if (callbackConfig.prev === null && headOfPendingCallbacksLinkedList !== callbackConfig) {
	      // this callbackConfig has already been cancelled.
	      // cancelScheduledWork should be idempotent, a no-op after first call.
	      return;
	    }

	    /**
	     * There are four possible cases:
	     * - Head/nodeToRemove/Tail -> null
	     *   In this case we set Head and Tail to null.
	     * - Head -> ... middle nodes... -> Tail/nodeToRemove
	     *   In this case we point the middle.next to null and put middle as the new
	     *   Tail.
	     * - Head/nodeToRemove -> ...middle nodes... -> Tail
	     *   In this case we point the middle.prev at null and move the Head to
	     *   middle.
	     * - Head -> ... ?some nodes ... -> nodeToRemove -> ... ?some nodes ... -> Tail
	     *   In this case we point the Head.next to the Tail and the Tail.prev to
	     *   the Head.
	     */
	    var next = callbackConfig.next;
	    var prev = callbackConfig.prev;
	    callbackConfig.next = null;
	    callbackConfig.prev = null;
	    if (next !== null) {
	      // we have a next

	      if (prev !== null) {
	        // we have a prev

	        // callbackConfig is somewhere in the middle of a list of 3 or more nodes.
	        prev.next = next;
	        next.prev = prev;
	        return;
	      } else {
	        // there is a next but not a previous one;
	        // callbackConfig is the head of a list of 2 or more other nodes.
	        next.prev = null;
	        headOfPendingCallbacksLinkedList = next;
	        return;
	      }
	    } else {
	      // there is no next callback config; this must the tail of the list

	      if (prev !== null) {
	        // we have a prev

	        // callbackConfig is the tail of a list of 2 or more other nodes.
	        prev.next = null;
	        tailOfPendingCallbacksLinkedList = prev;
	        return;
	      } else {
	        // there is no previous callback config;
	        // callbackConfig is the only thing in the linked list,
	        // so both head and tail point to it.
	        headOfPendingCallbacksLinkedList = null;
	        tailOfPendingCallbacksLinkedList = null;
	        return;
	      }
	    }
	  };
	}

	var didWarnSelectedSetOnOption = false;

	function flattenChildren(children) {
	  var content = '';

	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  // We can silently skip them because invalid DOM nesting warning
	  // catches these cases in Fiber.
	  React.Children.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    }
	  });

	  return content;
	}

	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */

	function validateProps(element, props) {
	  // TODO (yungsters): Remove support for `selected` in <option>.
	  {
	    if (props.selected != null && !didWarnSelectedSetOnOption) {
	      warning(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
	      didWarnSelectedSetOnOption = true;
	    }
	  }
	}

	function postMountWrapper$1(element, props) {
	  // value="" should make a value attribute (#6219)
	  if (props.value != null) {
	    element.setAttribute('value', props.value);
	  }
	}

	function getHostProps$1(element, props) {
	  var hostProps = _assign({ children: undefined }, props);
	  var content = flattenChildren(props.children);

	  if (content) {
	    hostProps.children = content;
	  }

	  return hostProps;
	}

	// TODO: direct imports like some-package/src/* are bad. Fix me.
	var getCurrentFiberOwnerName$3 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
	var getCurrentFiberStackAddendum$3 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


	var didWarnValueDefaultValue$1 = void 0;

	{
	  didWarnValueDefaultValue$1 = false;
	}

	function getDeclarationErrorAddendum() {
	  var ownerName = getCurrentFiberOwnerName$3();
	  if (ownerName) {
	    return '\n\nCheck the render method of `' + ownerName + '`.';
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 */
	function checkSelectPropTypes(props) {
	  ReactControlledValuePropTypes.checkPropTypes('select', props, getCurrentFiberStackAddendum$3);

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	      warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
	    } else if (!props.multiple && isArray) {
	      warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
	    }
	  }
	}

	function updateOptions(node, multiple, propValue, setDefaultSelected) {
	  var options = node.options;

	  if (multiple) {
	    var selectedValues = propValue;
	    var selectedValue = {};
	    for (var i = 0; i < selectedValues.length; i++) {
	      // Prefix to avoid chaos with special keys.
	      selectedValue['$' + selectedValues[i]] = true;
	    }
	    for (var _i = 0; _i < options.length; _i++) {
	      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
	      if (options[_i].selected !== selected) {
	        options[_i].selected = selected;
	      }
	      if (selected && setDefaultSelected) {
	        options[_i].defaultSelected = true;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    var _selectedValue = '' + propValue;
	    var defaultSelected = null;
	    for (var _i2 = 0; _i2 < options.length; _i2++) {
	      if (options[_i2].value === _selectedValue) {
	        options[_i2].selected = true;
	        if (setDefaultSelected) {
	          options[_i2].defaultSelected = true;
	        }
	        return;
	      }
	      if (defaultSelected === null && !options[_i2].disabled) {
	        defaultSelected = options[_i2];
	      }
	    }
	    if (defaultSelected !== null) {
	      defaultSelected.selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */

	function getHostProps$2(element, props) {
	  return _assign({}, props, {
	    value: undefined
	  });
	}

	function initWrapperState$1(element, props) {
	  var node = element;
	  {
	    checkSelectPropTypes(props);
	  }

	  var value = props.value;
	  node._wrapperState = {
	    initialValue: value != null ? value : props.defaultValue,
	    wasMultiple: !!props.multiple
	  };

	  {
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
	      warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
	      didWarnValueDefaultValue$1 = true;
	    }
	  }
	}

	function postMountWrapper$2(element, props) {
	  var node = element;
	  node.multiple = !!props.multiple;
	  var value = props.value;
	  if (value != null) {
	    updateOptions(node, !!props.multiple, value, false);
	  } else if (props.defaultValue != null) {
	    updateOptions(node, !!props.multiple, props.defaultValue, true);
	  }
	}

	function postUpdateWrapper(element, props) {
	  var node = element;
	  // After the initial mount, we control selected-ness manually so don't pass
	  // this value down
	  node._wrapperState.initialValue = undefined;

	  var wasMultiple = node._wrapperState.wasMultiple;
	  node._wrapperState.wasMultiple = !!props.multiple;

	  var value = props.value;
	  if (value != null) {
	    updateOptions(node, !!props.multiple, value, false);
	  } else if (wasMultiple !== !!props.multiple) {
	    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	    if (props.defaultValue != null) {
	      updateOptions(node, !!props.multiple, props.defaultValue, true);
	    } else {
	      // Revert the select back to its default unselected state.
	      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
	    }
	  }
	}

	function restoreControlledState$2(element, props) {
	  var node = element;
	  var value = props.value;

	  if (value != null) {
	    updateOptions(node, !!props.multiple, value, false);
	  }
	}

	// TODO: direct imports like some-package/src/* are bad. Fix me.
	var getCurrentFiberStackAddendum$4 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

	var didWarnValDefaultVal = false;

	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */

	function getHostProps$3(element, props) {
	  var node = element;
	  !(props.dangerouslySetInnerHTML == null) ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : void 0;

	  // Always set children to the same thing. In IE9, the selection range will
	  // get reset if `textContent` is mutated.  We could add a check in setTextContent
	  // to only set the value if/when the value differs from the node value (which would
	  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
	  // solution. The value can be a boolean or object so that's why it's forced
	  // to be a string.
	  var hostProps = _assign({}, props, {
	    value: undefined,
	    defaultValue: undefined,
	    children: '' + node._wrapperState.initialValue
	  });

	  return hostProps;
	}

	function initWrapperState$2(element, props) {
	  var node = element;
	  {
	    ReactControlledValuePropTypes.checkPropTypes('textarea', props, getCurrentFiberStackAddendum$4);
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	      warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
	      didWarnValDefaultVal = true;
	    }
	  }

	  var initialValue = props.value;

	  // Only bother fetching default value if we're going to use it
	  if (initialValue == null) {
	    var defaultValue = props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = props.children;
	    if (children != null) {
	      {
	        warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
	      }
	      !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;
	      if (Array.isArray(children)) {
	        !(children.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;
	        children = children[0];
	      }

	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    initialValue = defaultValue;
	  }

	  node._wrapperState = {
	    initialValue: '' + initialValue
	  };
	}

	function updateWrapper$1(element, props) {
	  var node = element;
	  var value = props.value;
	  if (value != null) {
	    // Cast `value` to a string to ensure the value is set correctly. While
	    // browsers typically do this as necessary, jsdom doesn't.
	    var newValue = '' + value;

	    // To avoid side effects (such as losing text selection), only set value if changed
	    if (newValue !== node.value) {
	      node.value = newValue;
	    }
	    if (props.defaultValue == null) {
	      node.defaultValue = newValue;
	    }
	  }
	  if (props.defaultValue != null) {
	    node.defaultValue = props.defaultValue;
	  }
	}

	function postMountWrapper$3(element, props) {
	  var node = element;
	  // This is in postMount because we need access to the DOM node, which is not
	  // available until after the component has mounted.
	  var textContent = node.textContent;

	  // Only set node.value if textContent is equal to the expected
	  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
	  // will populate textContent as well.
	  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
	  if (textContent === node._wrapperState.initialValue) {
	    node.value = textContent;
	  }
	}

	function restoreControlledState$3(element, props) {
	  // DOM component is still mounted; update
	  updateWrapper$1(element, props);
	}

	var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
	var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
	var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';

	var Namespaces = {
	  html: HTML_NAMESPACE$1,
	  mathml: MATH_NAMESPACE,
	  svg: SVG_NAMESPACE
	};

	// Assumes there is no parent namespace.
	function getIntrinsicNamespace(type) {
	  switch (type) {
	    case 'svg':
	      return SVG_NAMESPACE;
	    case 'math':
	      return MATH_NAMESPACE;
	    default:
	      return HTML_NAMESPACE$1;
	  }
	}

	function getChildNamespace(parentNamespace, type) {
	  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
	    // No (or default) parent namespace: potential entry point.
	    return getIntrinsicNamespace(type);
	  }
	  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
	    // We're leaving SVG.
	    return HTML_NAMESPACE$1;
	  }
	  // By default, pass namespace below.
	  return parentNamespace;
	}

	/* globals MSApp */

	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */
	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};

	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer = void 0;

	/**
	 * Set the innerHTML property of a node
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node

	  if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var svgNode = reusableSVGContainer.firstChild;
	    while (node.firstChild) {
	      node.removeChild(node.firstChild);
	    }
	    while (svgNode.firstChild) {
	      node.appendChild(svgNode.firstChild);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});

	/**
	 * Set the textContent property of a node. For text updates, it's faster
	 * to set the `nodeValue` of the Text node directly instead of using
	 * `.textContent` which will remove the existing node and create a new one.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;

	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  columns: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridRowEnd: true,
	  gridRowSpan: true,
	  gridRowStart: true,
	  gridColumn: true,
	  gridColumnEnd: true,
	  gridColumnSpan: true,
	  gridColumnStart: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, isCustomProperty) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
	    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
	  }

	  return ('' + value).trim();
	}

	var warnValidStyle = emptyFunction;

	{
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	  var warnedForInfinityValue = false;

	  var warnHyphenatedStyleName = function (name, getStack) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), getStack());
	  };

	  var warnBadVendoredStyleName = function (name, getStack) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), getStack());
	  };

	  var warnStyleValueWithSemicolon = function (name, value, getStack) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    warning(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.%s', name, value.replace(badStyleValueWithSemicolonPattern, ''), getStack());
	  };

	  var warnStyleValueIsNaN = function (name, value, getStack) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, getStack());
	  };

	  var warnStyleValueIsInfinity = function (name, value, getStack) {
	    if (warnedForInfinityValue) {
	      return;
	    }

	    warnedForInfinityValue = true;
	    warning(false, '`Infinity` is an invalid value for the `%s` css style property.%s', name, getStack());
	  };

	  warnValidStyle = function (name, value, getStack) {
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, getStack);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, getStack);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, getStack);
	    }

	    if (typeof value === 'number') {
	      if (isNaN(value)) {
	        warnStyleValueIsNaN(name, value, getStack);
	      } else if (!isFinite(value)) {
	        warnStyleValueIsInfinity(name, value, getStack);
	      }
	    }
	  };
	}

	var warnValidStyle$1 = warnValidStyle;

	/**
	 * Operations for dealing with CSS properties.
	 */

	/**
	 * This creates a string that is expected to be equivalent to the style
	 * attribute generated by server-side rendering. It by-passes warnings and
	 * security checks so it's not safe to use this value for anything other than
	 * comparison. It is only used in DEV for SSR validation.
	 */
	function createDangerousStringForStyles(styles) {
	  {
	    var serialized = '';
	    var delimiter = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (styleValue != null) {
	        var isCustomProperty = styleName.indexOf('--') === 0;
	        serialized += delimiter + hyphenateStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);

	        delimiter = ';';
	      }
	    }
	    return serialized || null;
	  }
	}

	/**
	 * Sets the value for multiple styles on a node.  If a value is specified as
	 * '' (empty string), the corresponding style property will be unset.
	 *
	 * @param {DOMElement} node
	 * @param {object} styles
	 */
	function setValueForStyles(node, styles, getStack) {
	  var style = node.style;
	  for (var styleName in styles) {
	    if (!styles.hasOwnProperty(styleName)) {
	      continue;
	    }
	    var isCustomProperty = styleName.indexOf('--') === 0;
	    {
	      if (!isCustomProperty) {
	        warnValidStyle$1(styleName, styles[styleName], getStack);
	      }
	    }
	    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
	    if (styleName === 'float') {
	      styleName = 'cssFloat';
	    }
	    if (isCustomProperty) {
	      style.setProperty(styleName, styleValue);
	    } else {
	      style[styleName] = styleValue;
	    }
	  }
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  area: true,
	  base: true,
	  br: true,
	  col: true,
	  embed: true,
	  hr: true,
	  img: true,
	  input: true,
	  keygen: true,
	  link: true,
	  meta: true,
	  param: true,
	  source: true,
	  track: true,
	  wbr: true
	  // NOTE: menuitem's close tag should be omitted, but that causes problems.
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  menuitem: true
	}, omittedCloseTags);

	var HTML$1 = '__html';

	function assertValidProps(tag, props, getStack) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, getStack()) : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;
	  }
	  {
	    !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.%s', getStack()) : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getStack()) : void 0;
	}

	function isCustomComponent(tagName, props) {
	  if (tagName.indexOf('-') === -1) {
	    return typeof props.is === 'string';
	  }
	  switch (tagName) {
	    // These are reserved SVG and MathML elements.
	    // We don't mind this whitelist too much because we expect it to never grow.
	    // The alternative is to track the namespace in a few places which is convoluted.
	    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
	    case 'annotation-xml':
	    case 'color-profile':
	    case 'font-face':
	    case 'font-face-src':
	    case 'font-face-uri':
	    case 'font-face-format':
	    case 'font-face-name':
	    case 'missing-glyph':
	      return false;
	    default:
	      return true;
	  }
	}

	// When adding attributes to the HTML or SVG whitelist, be sure to
	// also add them to this module to ensure casing and incorrect name
	// warnings.
	var possibleStandardNames = {
	  // HTML
	  accept: 'accept',
	  acceptcharset: 'acceptCharset',
	  'accept-charset': 'acceptCharset',
	  accesskey: 'accessKey',
	  action: 'action',
	  allowfullscreen: 'allowFullScreen',
	  alt: 'alt',
	  as: 'as',
	  async: 'async',
	  autocapitalize: 'autoCapitalize',
	  autocomplete: 'autoComplete',
	  autocorrect: 'autoCorrect',
	  autofocus: 'autoFocus',
	  autoplay: 'autoPlay',
	  autosave: 'autoSave',
	  capture: 'capture',
	  cellpadding: 'cellPadding',
	  cellspacing: 'cellSpacing',
	  challenge: 'challenge',
	  charset: 'charSet',
	  checked: 'checked',
	  children: 'children',
	  cite: 'cite',
	  class: 'className',
	  classid: 'classID',
	  classname: 'className',
	  cols: 'cols',
	  colspan: 'colSpan',
	  content: 'content',
	  contenteditable: 'contentEditable',
	  contextmenu: 'contextMenu',
	  controls: 'controls',
	  controlslist: 'controlsList',
	  coords: 'coords',
	  crossorigin: 'crossOrigin',
	  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
	  data: 'data',
	  datetime: 'dateTime',
	  default: 'default',
	  defaultchecked: 'defaultChecked',
	  defaultvalue: 'defaultValue',
	  defer: 'defer',
	  dir: 'dir',
	  disabled: 'disabled',
	  download: 'download',
	  draggable: 'draggable',
	  enctype: 'encType',
	  for: 'htmlFor',
	  form: 'form',
	  formmethod: 'formMethod',
	  formaction: 'formAction',
	  formenctype: 'formEncType',
	  formnovalidate: 'formNoValidate',
	  formtarget: 'formTarget',
	  frameborder: 'frameBorder',
	  headers: 'headers',
	  height: 'height',
	  hidden: 'hidden',
	  high: 'high',
	  href: 'href',
	  hreflang: 'hrefLang',
	  htmlfor: 'htmlFor',
	  httpequiv: 'httpEquiv',
	  'http-equiv': 'httpEquiv',
	  icon: 'icon',
	  id: 'id',
	  innerhtml: 'innerHTML',
	  inputmode: 'inputMode',
	  integrity: 'integrity',
	  is: 'is',
	  itemid: 'itemID',
	  itemprop: 'itemProp',
	  itemref: 'itemRef',
	  itemscope: 'itemScope',
	  itemtype: 'itemType',
	  keyparams: 'keyParams',
	  keytype: 'keyType',
	  kind: 'kind',
	  label: 'label',
	  lang: 'lang',
	  list: 'list',
	  loop: 'loop',
	  low: 'low',
	  manifest: 'manifest',
	  marginwidth: 'marginWidth',
	  marginheight: 'marginHeight',
	  max: 'max',
	  maxlength: 'maxLength',
	  media: 'media',
	  mediagroup: 'mediaGroup',
	  method: 'method',
	  min: 'min',
	  minlength: 'minLength',
	  multiple: 'multiple',
	  muted: 'muted',
	  name: 'name',
	  nomodule: 'noModule',
	  nonce: 'nonce',
	  novalidate: 'noValidate',
	  open: 'open',
	  optimum: 'optimum',
	  pattern: 'pattern',
	  placeholder: 'placeholder',
	  playsinline: 'playsInline',
	  poster: 'poster',
	  preload: 'preload',
	  profile: 'profile',
	  radiogroup: 'radioGroup',
	  readonly: 'readOnly',
	  referrerpolicy: 'referrerPolicy',
	  rel: 'rel',
	  required: 'required',
	  reversed: 'reversed',
	  role: 'role',
	  rows: 'rows',
	  rowspan: 'rowSpan',
	  sandbox: 'sandbox',
	  scope: 'scope',
	  scoped: 'scoped',
	  scrolling: 'scrolling',
	  seamless: 'seamless',
	  selected: 'selected',
	  shape: 'shape',
	  size: 'size',
	  sizes: 'sizes',
	  span: 'span',
	  spellcheck: 'spellCheck',
	  src: 'src',
	  srcdoc: 'srcDoc',
	  srclang: 'srcLang',
	  srcset: 'srcSet',
	  start: 'start',
	  step: 'step',
	  style: 'style',
	  summary: 'summary',
	  tabindex: 'tabIndex',
	  target: 'target',
	  title: 'title',
	  type: 'type',
	  usemap: 'useMap',
	  value: 'value',
	  width: 'width',
	  wmode: 'wmode',
	  wrap: 'wrap',

	  // SVG
	  about: 'about',
	  accentheight: 'accentHeight',
	  'accent-height': 'accentHeight',
	  accumulate: 'accumulate',
	  additive: 'additive',
	  alignmentbaseline: 'alignmentBaseline',
	  'alignment-baseline': 'alignmentBaseline',
	  allowreorder: 'allowReorder',
	  alphabetic: 'alphabetic',
	  amplitude: 'amplitude',
	  arabicform: 'arabicForm',
	  'arabic-form': 'arabicForm',
	  ascent: 'ascent',
	  attributename: 'attributeName',
	  attributetype: 'attributeType',
	  autoreverse: 'autoReverse',
	  azimuth: 'azimuth',
	  basefrequency: 'baseFrequency',
	  baselineshift: 'baselineShift',
	  'baseline-shift': 'baselineShift',
	  baseprofile: 'baseProfile',
	  bbox: 'bbox',
	  begin: 'begin',
	  bias: 'bias',
	  by: 'by',
	  calcmode: 'calcMode',
	  capheight: 'capHeight',
	  'cap-height': 'capHeight',
	  clip: 'clip',
	  clippath: 'clipPath',
	  'clip-path': 'clipPath',
	  clippathunits: 'clipPathUnits',
	  cliprule: 'clipRule',
	  'clip-rule': 'clipRule',
	  color: 'color',
	  colorinterpolation: 'colorInterpolation',
	  'color-interpolation': 'colorInterpolation',
	  colorinterpolationfilters: 'colorInterpolationFilters',
	  'color-interpolation-filters': 'colorInterpolationFilters',
	  colorprofile: 'colorProfile',
	  'color-profile': 'colorProfile',
	  colorrendering: 'colorRendering',
	  'color-rendering': 'colorRendering',
	  contentscripttype: 'contentScriptType',
	  contentstyletype: 'contentStyleType',
	  cursor: 'cursor',
	  cx: 'cx',
	  cy: 'cy',
	  d: 'd',
	  datatype: 'datatype',
	  decelerate: 'decelerate',
	  descent: 'descent',
	  diffuseconstant: 'diffuseConstant',
	  direction: 'direction',
	  display: 'display',
	  divisor: 'divisor',
	  dominantbaseline: 'dominantBaseline',
	  'dominant-baseline': 'dominantBaseline',
	  dur: 'dur',
	  dx: 'dx',
	  dy: 'dy',
	  edgemode: 'edgeMode',
	  elevation: 'elevation',
	  enablebackground: 'enableBackground',
	  'enable-background': 'enableBackground',
	  end: 'end',
	  exponent: 'exponent',
	  externalresourcesrequired: 'externalResourcesRequired',
	  fill: 'fill',
	  fillopacity: 'fillOpacity',
	  'fill-opacity': 'fillOpacity',
	  fillrule: 'fillRule',
	  'fill-rule': 'fillRule',
	  filter: 'filter',
	  filterres: 'filterRes',
	  filterunits: 'filterUnits',
	  floodopacity: 'floodOpacity',
	  'flood-opacity': 'floodOpacity',
	  floodcolor: 'floodColor',
	  'flood-color': 'floodColor',
	  focusable: 'focusable',
	  fontfamily: 'fontFamily',
	  'font-family': 'fontFamily',
	  fontsize: 'fontSize',
	  'font-size': 'fontSize',
	  fontsizeadjust: 'fontSizeAdjust',
	  'font-size-adjust': 'fontSizeAdjust',
	  fontstretch: 'fontStretch',
	  'font-stretch': 'fontStretch',
	  fontstyle: 'fontStyle',
	  'font-style': 'fontStyle',
	  fontvariant: 'fontVariant',
	  'font-variant': 'fontVariant',
	  fontweight: 'fontWeight',
	  'font-weight': 'fontWeight',
	  format: 'format',
	  from: 'from',
	  fx: 'fx',
	  fy: 'fy',
	  g1: 'g1',
	  g2: 'g2',
	  glyphname: 'glyphName',
	  'glyph-name': 'glyphName',
	  glyphorientationhorizontal: 'glyphOrientationHorizontal',
	  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
	  glyphorientationvertical: 'glyphOrientationVertical',
	  'glyph-orientation-vertical': 'glyphOrientationVertical',
	  glyphref: 'glyphRef',
	  gradienttransform: 'gradientTransform',
	  gradientunits: 'gradientUnits',
	  hanging: 'hanging',
	  horizadvx: 'horizAdvX',
	  'horiz-adv-x': 'horizAdvX',
	  horizoriginx: 'horizOriginX',
	  'horiz-origin-x': 'horizOriginX',
	  ideographic: 'ideographic',
	  imagerendering: 'imageRendering',
	  'image-rendering': 'imageRendering',
	  in2: 'in2',
	  in: 'in',
	  inlist: 'inlist',
	  intercept: 'intercept',
	  k1: 'k1',
	  k2: 'k2',
	  k3: 'k3',
	  k4: 'k4',
	  k: 'k',
	  kernelmatrix: 'kernelMatrix',
	  kernelunitlength: 'kernelUnitLength',
	  kerning: 'kerning',
	  keypoints: 'keyPoints',
	  keysplines: 'keySplines',
	  keytimes: 'keyTimes',
	  lengthadjust: 'lengthAdjust',
	  letterspacing: 'letterSpacing',
	  'letter-spacing': 'letterSpacing',
	  lightingcolor: 'lightingColor',
	  'lighting-color': 'lightingColor',
	  limitingconeangle: 'limitingConeAngle',
	  local: 'local',
	  markerend: 'markerEnd',
	  'marker-end': 'markerEnd',
	  markerheight: 'markerHeight',
	  markermid: 'markerMid',
	  'marker-mid': 'markerMid',
	  markerstart: 'markerStart',
	  'marker-start': 'markerStart',
	  markerunits: 'markerUnits',
	  markerwidth: 'markerWidth',
	  mask: 'mask',
	  maskcontentunits: 'maskContentUnits',
	  maskunits: 'maskUnits',
	  mathematical: 'mathematical',
	  mode: 'mode',
	  numoctaves: 'numOctaves',
	  offset: 'offset',
	  opacity: 'opacity',
	  operator: 'operator',
	  order: 'order',
	  orient: 'orient',
	  orientation: 'orientation',
	  origin: 'origin',
	  overflow: 'overflow',
	  overlineposition: 'overlinePosition',
	  'overline-position': 'overlinePosition',
	  overlinethickness: 'overlineThickness',
	  'overline-thickness': 'overlineThickness',
	  paintorder: 'paintOrder',
	  'paint-order': 'paintOrder',
	  panose1: 'panose1',
	  'panose-1': 'panose1',
	  pathlength: 'pathLength',
	  patterncontentunits: 'patternContentUnits',
	  patterntransform: 'patternTransform',
	  patternunits: 'patternUnits',
	  pointerevents: 'pointerEvents',
	  'pointer-events': 'pointerEvents',
	  points: 'points',
	  pointsatx: 'pointsAtX',
	  pointsaty: 'pointsAtY',
	  pointsatz: 'pointsAtZ',
	  prefix: 'prefix',
	  preservealpha: 'preserveAlpha',
	  preserveaspectratio: 'preserveAspectRatio',
	  primitiveunits: 'primitiveUnits',
	  property: 'property',
	  r: 'r',
	  radius: 'radius',
	  refx: 'refX',
	  refy: 'refY',
	  renderingintent: 'renderingIntent',
	  'rendering-intent': 'renderingIntent',
	  repeatcount: 'repeatCount',
	  repeatdur: 'repeatDur',
	  requiredextensions: 'requiredExtensions',
	  requiredfeatures: 'requiredFeatures',
	  resource: 'resource',
	  restart: 'restart',
	  result: 'result',
	  results: 'results',
	  rotate: 'rotate',
	  rx: 'rx',
	  ry: 'ry',
	  scale: 'scale',
	  security: 'security',
	  seed: 'seed',
	  shaperendering: 'shapeRendering',
	  'shape-rendering': 'shapeRendering',
	  slope: 'slope',
	  spacing: 'spacing',
	  specularconstant: 'specularConstant',
	  specularexponent: 'specularExponent',
	  speed: 'speed',
	  spreadmethod: 'spreadMethod',
	  startoffset: 'startOffset',
	  stddeviation: 'stdDeviation',
	  stemh: 'stemh',
	  stemv: 'stemv',
	  stitchtiles: 'stitchTiles',
	  stopcolor: 'stopColor',
	  'stop-color': 'stopColor',
	  stopopacity: 'stopOpacity',
	  'stop-opacity': 'stopOpacity',
	  strikethroughposition: 'strikethroughPosition',
	  'strikethrough-position': 'strikethroughPosition',
	  strikethroughthickness: 'strikethroughThickness',
	  'strikethrough-thickness': 'strikethroughThickness',
	  string: 'string',
	  stroke: 'stroke',
	  strokedasharray: 'strokeDasharray',
	  'stroke-dasharray': 'strokeDasharray',
	  strokedashoffset: 'strokeDashoffset',
	  'stroke-dashoffset': 'strokeDashoffset',
	  strokelinecap: 'strokeLinecap',
	  'stroke-linecap': 'strokeLinecap',
	  strokelinejoin: 'strokeLinejoin',
	  'stroke-linejoin': 'strokeLinejoin',
	  strokemiterlimit: 'strokeMiterlimit',
	  'stroke-miterlimit': 'strokeMiterlimit',
	  strokewidth: 'strokeWidth',
	  'stroke-width': 'strokeWidth',
	  strokeopacity: 'strokeOpacity',
	  'stroke-opacity': 'strokeOpacity',
	  suppresscontenteditablewarning: 'suppressContentEditableWarning',
	  suppresshydrationwarning: 'suppressHydrationWarning',
	  surfacescale: 'surfaceScale',
	  systemlanguage: 'systemLanguage',
	  tablevalues: 'tableValues',
	  targetx: 'targetX',
	  targety: 'targetY',
	  textanchor: 'textAnchor',
	  'text-anchor': 'textAnchor',
	  textdecoration: 'textDecoration',
	  'text-decoration': 'textDecoration',
	  textlength: 'textLength',
	  textrendering: 'textRendering',
	  'text-rendering': 'textRendering',
	  to: 'to',
	  transform: 'transform',
	  typeof: 'typeof',
	  u1: 'u1',
	  u2: 'u2',
	  underlineposition: 'underlinePosition',
	  'underline-position': 'underlinePosition',
	  underlinethickness: 'underlineThickness',
	  'underline-thickness': 'underlineThickness',
	  unicode: 'unicode',
	  unicodebidi: 'unicodeBidi',
	  'unicode-bidi': 'unicodeBidi',
	  unicoderange: 'unicodeRange',
	  'unicode-range': 'unicodeRange',
	  unitsperem: 'unitsPerEm',
	  'units-per-em': 'unitsPerEm',
	  unselectable: 'unselectable',
	  valphabetic: 'vAlphabetic',
	  'v-alphabetic': 'vAlphabetic',
	  values: 'values',
	  vectoreffect: 'vectorEffect',
	  'vector-effect': 'vectorEffect',
	  version: 'version',
	  vertadvy: 'vertAdvY',
	  'vert-adv-y': 'vertAdvY',
	  vertoriginx: 'vertOriginX',
	  'vert-origin-x': 'vertOriginX',
	  vertoriginy: 'vertOriginY',
	  'vert-origin-y': 'vertOriginY',
	  vhanging: 'vHanging',
	  'v-hanging': 'vHanging',
	  videographic: 'vIdeographic',
	  'v-ideographic': 'vIdeographic',
	  viewbox: 'viewBox',
	  viewtarget: 'viewTarget',
	  visibility: 'visibility',
	  vmathematical: 'vMathematical',
	  'v-mathematical': 'vMathematical',
	  vocab: 'vocab',
	  widths: 'widths',
	  wordspacing: 'wordSpacing',
	  'word-spacing': 'wordSpacing',
	  writingmode: 'writingMode',
	  'writing-mode': 'writingMode',
	  x1: 'x1',
	  x2: 'x2',
	  x: 'x',
	  xchannelselector: 'xChannelSelector',
	  xheight: 'xHeight',
	  'x-height': 'xHeight',
	  xlinkactuate: 'xlinkActuate',
	  'xlink:actuate': 'xlinkActuate',
	  xlinkarcrole: 'xlinkArcrole',
	  'xlink:arcrole': 'xlinkArcrole',
	  xlinkhref: 'xlinkHref',
	  'xlink:href': 'xlinkHref',
	  xlinkrole: 'xlinkRole',
	  'xlink:role': 'xlinkRole',
	  xlinkshow: 'xlinkShow',
	  'xlink:show': 'xlinkShow',
	  xlinktitle: 'xlinkTitle',
	  'xlink:title': 'xlinkTitle',
	  xlinktype: 'xlinkType',
	  'xlink:type': 'xlinkType',
	  xmlbase: 'xmlBase',
	  'xml:base': 'xmlBase',
	  xmllang: 'xmlLang',
	  'xml:lang': 'xmlLang',
	  xmlns: 'xmlns',
	  'xml:space': 'xmlSpace',
	  xmlnsxlink: 'xmlnsXlink',
	  'xmlns:xlink': 'xmlnsXlink',
	  xmlspace: 'xmlSpace',
	  y1: 'y1',
	  y2: 'y2',
	  y: 'y',
	  ychannelselector: 'yChannelSelector',
	  z: 'z',
	  zoomandpan: 'zoomAndPan'
	};

	var ariaProperties = {
	  'aria-current': 0, // state
	  'aria-details': 0,
	  'aria-disabled': 0, // state
	  'aria-hidden': 0, // state
	  'aria-invalid': 0, // state
	  'aria-keyshortcuts': 0,
	  'aria-label': 0,
	  'aria-roledescription': 0,
	  // Widget Attributes
	  'aria-autocomplete': 0,
	  'aria-checked': 0,
	  'aria-expanded': 0,
	  'aria-haspopup': 0,
	  'aria-level': 0,
	  'aria-modal': 0,
	  'aria-multiline': 0,
	  'aria-multiselectable': 0,
	  'aria-orientation': 0,
	  'aria-placeholder': 0,
	  'aria-pressed': 0,
	  'aria-readonly': 0,
	  'aria-required': 0,
	  'aria-selected': 0,
	  'aria-sort': 0,
	  'aria-valuemax': 0,
	  'aria-valuemin': 0,
	  'aria-valuenow': 0,
	  'aria-valuetext': 0,
	  // Live Region Attributes
	  'aria-atomic': 0,
	  'aria-busy': 0,
	  'aria-live': 0,
	  'aria-relevant': 0,
	  // Drag-and-Drop Attributes
	  'aria-dropeffect': 0,
	  'aria-grabbed': 0,
	  // Relationship Attributes
	  'aria-activedescendant': 0,
	  'aria-colcount': 0,
	  'aria-colindex': 0,
	  'aria-colspan': 0,
	  'aria-controls': 0,
	  'aria-describedby': 0,
	  'aria-errormessage': 0,
	  'aria-flowto': 0,
	  'aria-labelledby': 0,
	  'aria-owns': 0,
	  'aria-posinset': 0,
	  'aria-rowcount': 0,
	  'aria-rowindex': 0,
	  'aria-rowspan': 0,
	  'aria-setsize': 0
	};

	var warnedProperties = {};
	var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
	var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

	var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

	function getStackAddendum() {
	  var stack = ReactDebugCurrentFrame.getStackAddendum();
	  return stack != null ? stack : '';
	}

	function validateProperty(tagName, name) {
	  if (hasOwnProperty$1.call(warnedProperties, name) && warnedProperties[name]) {
	    return true;
	  }

	  if (rARIACamel.test(name)) {
	    var ariaName = 'aria-' + name.slice(4).toLowerCase();
	    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;

	    // If this is an aria-* attribute, but is not listed in the known DOM
	    // DOM properties, then it is an invalid aria-* attribute.
	    if (correctName == null) {
	      warning(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.%s', name, getStackAddendum());
	      warnedProperties[name] = true;
	      return true;
	    }
	    // aria-* attributes should be lowercase; suggest the lowercase version.
	    if (name !== correctName) {
	      warning(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?%s', name, correctName, getStackAddendum());
	      warnedProperties[name] = true;
	      return true;
	    }
	  }

	  if (rARIA.test(name)) {
	    var lowerCasedName = name.toLowerCase();
	    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;

	    // If this is an aria-* attribute, but is not listed in the known DOM
	    // DOM properties, then it is an invalid aria-* attribute.
	    if (standardName == null) {
	      warnedProperties[name] = true;
	      return false;
	    }
	    // aria-* attributes should be lowercase; suggest the lowercase version.
	    if (name !== standardName) {
	      warning(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum());
	      warnedProperties[name] = true;
	      return true;
	    }
	  }

	  return true;
	}

	function warnInvalidARIAProps(type, props) {
	  var invalidProps = [];

	  for (var key in props) {
	    var isValid = validateProperty(type, key);
	    if (!isValid) {
	      invalidProps.push(key);
	    }
	  }

	  var unknownPropString = invalidProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');

	  if (invalidProps.length === 1) {
	    warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum());
	  } else if (invalidProps.length > 1) {
	    warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum());
	  }
	}

	function validateProperties(type, props) {
	  if (isCustomComponent(type, props)) {
	    return;
	  }
	  warnInvalidARIAProps(type, props);
	}

	var didWarnValueNull = false;

	function getStackAddendum$1() {
	  var stack = ReactDebugCurrentFrame.getStackAddendum();
	  return stack != null ? stack : '';
	}

	function validateProperties$1(type, props) {
	  if (type !== 'input' && type !== 'textarea' && type !== 'select') {
	    return;
	  }

	  if (props != null && props.value === null && !didWarnValueNull) {
	    didWarnValueNull = true;
	    if (type === 'select' && props.multiple) {
	      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.%s', type, getStackAddendum$1());
	    } else {
	      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', type, getStackAddendum$1());
	    }
	  }
	}

	function getStackAddendum$2() {
	  var stack = ReactDebugCurrentFrame.getStackAddendum();
	  return stack != null ? stack : '';
	}

	var validateProperty$1 = function () {};

	{
	  var warnedProperties$1 = {};
	  var _hasOwnProperty = Object.prototype.hasOwnProperty;
	  var EVENT_NAME_REGEX = /^on./;
	  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
	  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
	  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

	  validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
	    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
	      return true;
	    }

	    var lowerCasedName = name.toLowerCase();
	    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
	      warning(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    // We can't rely on the event system being injected on the server.
	    if (canUseEventSystem) {
	      if (registrationNameModules.hasOwnProperty(name)) {
	        return true;
	      }
	      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
	      if (registrationName != null) {
	        warning(false, 'Invalid event handler property `%s`. Did you mean `%s`?%s', name, registrationName, getStackAddendum$2());
	        warnedProperties$1[name] = true;
	        return true;
	      }
	      if (EVENT_NAME_REGEX.test(name)) {
	        warning(false, 'Unknown event handler property `%s`. It will be ignored.%s', name, getStackAddendum$2());
	        warnedProperties$1[name] = true;
	        return true;
	      }
	    } else if (EVENT_NAME_REGEX.test(name)) {
	      // If no event plugins have been injected, we are in a server environment.
	      // So we can't tell if the event name is correct for sure, but we can filter
	      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
	      if (INVALID_EVENT_NAME_REGEX.test(name)) {
	        warning(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.%s', name, getStackAddendum$2());
	      }
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    // Let the ARIA attribute hook validate ARIA attributes
	    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
	      return true;
	    }

	    if (lowerCasedName === 'innerhtml') {
	      warning(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    if (lowerCasedName === 'aria') {
	      warning(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
	      warning(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.%s', typeof value, getStackAddendum$2());
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warning(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.%s', name, getStackAddendum$2());
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    var propertyInfo = getPropertyInfo(name);
	    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;

	    // Known attributes should match the casing specified in the property config.
	    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
	      var standardName = possibleStandardNames[lowerCasedName];
	      if (standardName !== name) {
	        warning(false, 'Invalid DOM property `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum$2());
	        warnedProperties$1[name] = true;
	        return true;
	      }
	    } else if (!isReserved && name !== lowerCasedName) {
	      // Unknown attributes should have lowercase casing since that's how they
	      // will be cased anyway with server rendering.
	      warning(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.%s', name, lowerCasedName, getStackAddendum$2());
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
	      if (value) {
	        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.%s', value, name, name, value, name, getStackAddendum$2());
	      } else {
	        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', value, name, name, value, name, name, name, getStackAddendum$2());
	      }
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    // Now that we've validated casing, do not validate
	    // data types for reserved props
	    if (isReserved) {
	      return true;
	    }

	    // Warn when a known attribute is a bad type
	    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
	      warnedProperties$1[name] = true;
	      return false;
	    }

	    return true;
	  };
	}

	var warnUnknownProperties = function (type, props, canUseEventSystem) {
	  var unknownProps = [];
	  for (var key in props) {
	    var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }

	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');
	  if (unknownProps.length === 1) {
	    warning(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2());
	  } else if (unknownProps.length > 1) {
	    warning(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2());
	  }
	};

	function validateProperties$2(type, props, canUseEventSystem) {
	  if (isCustomComponent(type, props)) {
	    return;
	  }
	  warnUnknownProperties(type, props, canUseEventSystem);
	}

	// TODO: direct imports like some-package/src/* are bad. Fix me.
	var getCurrentFiberOwnerName$2 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
	var getCurrentFiberStackAddendum$2 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

	var didWarnInvalidHydration = false;
	var didWarnShadyDOM = false;

	var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
	var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
	var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
	var AUTOFOCUS = 'autoFocus';
	var CHILDREN = 'children';
	var STYLE = 'style';
	var HTML = '__html';

	var HTML_NAMESPACE = Namespaces.html;


	var getStack = emptyFunction.thatReturns('');

	var warnedUnknownTags = void 0;
	var suppressHydrationWarning = void 0;

	var validatePropertiesInDevelopment = void 0;
	var warnForTextDifference = void 0;
	var warnForPropDifference = void 0;
	var warnForExtraAttributes = void 0;
	var warnForInvalidEventListener = void 0;

	var normalizeMarkupForTextOrAttribute = void 0;
	var normalizeHTML = void 0;

	{
	  getStack = getCurrentFiberStackAddendum$2;

	  warnedUnknownTags = {
	    // Chrome is the only major browser not shipping <time>. But as of July
	    // 2017 it intends to ship it due to widespread usage. We intentionally
	    // *don't* warn for <time> even if it's unrecognized by Chrome because
	    // it soon will be, and many apps have been using it anyway.
	    time: true,
	    // There are working polyfills for <dialog>. Let people use it.
	    dialog: true
	  };

	  validatePropertiesInDevelopment = function (type, props) {
	    validateProperties(type, props);
	    validateProperties$1(type, props);
	    validateProperties$2(type, props, /* canUseEventSystem */true);
	  };

	  // HTML parsing normalizes CR and CRLF to LF.
	  // It also can turn \u0000 into \uFFFD inside attributes.
	  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
	  // If we have a mismatch, it might be caused by that.
	  // We will still patch up in this case but not fire the warning.
	  var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
	  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

	  normalizeMarkupForTextOrAttribute = function (markup) {
	    var markupString = typeof markup === 'string' ? markup : '' + markup;
	    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
	  };

	  warnForTextDifference = function (serverText, clientText) {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
	    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
	    if (normalizedServerText === normalizedClientText) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warning(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
	  };

	  warnForPropDifference = function (propName, serverValue, clientValue) {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
	    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
	    if (normalizedServerValue === normalizedClientValue) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warning(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
	  };

	  warnForExtraAttributes = function (attributeNames) {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    var names = [];
	    attributeNames.forEach(function (name) {
	      names.push(name);
	    });
	    warning(false, 'Extra attributes from the server: %s', names);
	  };

	  warnForInvalidEventListener = function (registrationName, listener) {
	    if (listener === false) {
	      warning(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', registrationName, registrationName, registrationName, getCurrentFiberStackAddendum$2());
	    } else {
	      warning(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.%s', registrationName, typeof listener, getCurrentFiberStackAddendum$2());
	    }
	  };

	  // Parse the HTML and read it back to normalize the HTML string so that it
	  // can be used for comparison.
	  normalizeHTML = function (parent, html) {
	    // We could have created a separate document here to avoid
	    // re-initializing custom elements if they exist. But this breaks
	    // how <noscript> is being handled. So we use the same document.
	    // See the discussion in https://github.com/facebook/react/pull/11157.
	    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
	    testElement.innerHTML = html;
	    return testElement.innerHTML;
	  };
	}

	function ensureListeningTo(rootContainerElement, registrationName) {
	  var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
	  var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
	  listenTo(registrationName, doc);
	}

	function getOwnerDocumentFromRootContainer(rootContainerElement) {
	  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
	}

	function trapClickOnNonInteractiveElement(node) {
	  // Mobile Safari does not fire properly bubble click events on
	  // non-interactive elements, which means delegated click listeners do not
	  // fire. The workaround for this bug involves attaching an empty click
	  // listener on the target node.
	  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	  // Just set it using the onclick property so that we don't have to manage any
	  // bookkeeping for it. Not sure if we need to clear it when the listener is
	  // removed.
	  // TODO: Only do this for the relevant Safaris maybe?
	  node.onclick = emptyFunction;
	}

	function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
	  for (var propKey in nextProps) {
	    if (!nextProps.hasOwnProperty(propKey)) {
	      continue;
	    }
	    var nextProp = nextProps[propKey];
	    if (propKey === STYLE) {
	      {
	        if (nextProp) {
	          // Freeze the next style object so that we can assume it won't be
	          // mutated. We have already warned for this in the past.
	          Object.freeze(nextProp);
	        }
	      }
	      // Relies on `updateStylesByID` not mutating `styleUpdates`.
	      setValueForStyles(domElement, nextProp, getStack);
	    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
	      var nextHtml = nextProp ? nextProp[HTML] : undefined;
	      if (nextHtml != null) {
	        setInnerHTML(domElement, nextHtml);
	      }
	    } else if (propKey === CHILDREN) {
	      if (typeof nextProp === 'string') {
	        // Avoid setting initial textContent when the text is empty. In IE11 setting
	        // textContent on a <textarea> will cause the placeholder to not
	        // show within the <textarea> until it has been focused and blurred again.
	        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
	        var canSetTextContent = tag !== 'textarea' || nextProp !== '';
	        if (canSetTextContent) {
	          setTextContent(domElement, nextProp);
	        }
	      } else if (typeof nextProp === 'number') {
	        setTextContent(domElement, '' + nextProp);
	      }
	    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
	      // Noop
	    } else if (propKey === AUTOFOCUS) {
	      // We polyfill it separately on the client during commit.
	      // We blacklist it here rather than in the property list because we emit it in SSR.
	    } else if (registrationNameModules.hasOwnProperty(propKey)) {
	      if (nextProp != null) {
	        if (true && typeof nextProp !== 'function') {
	          warnForInvalidEventListener(propKey, nextProp);
	        }
	        ensureListeningTo(rootContainerElement, propKey);
	      }
	    } else if (nextProp != null) {
	      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
	    }
	  }
	}

	function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
	  // TODO: Handle wasCustomComponentTag
	  for (var i = 0; i < updatePayload.length; i += 2) {
	    var propKey = updatePayload[i];
	    var propValue = updatePayload[i + 1];
	    if (propKey === STYLE) {
	      setValueForStyles(domElement, propValue, getStack);
	    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
	      setInnerHTML(domElement, propValue);
	    } else if (propKey === CHILDREN) {
	      setTextContent(domElement, propValue);
	    } else {
	      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
	    }
	  }
	}

	function createElement$1(type, props, rootContainerElement, parentNamespace) {
	  var isCustomComponentTag = void 0;

	  // We create tags in the namespace of their parent container, except HTML
	  // tags get no namespace.
	  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
	  var domElement = void 0;
	  var namespaceURI = parentNamespace;
	  if (namespaceURI === HTML_NAMESPACE) {
	    namespaceURI = getIntrinsicNamespace(type);
	  }
	  if (namespaceURI === HTML_NAMESPACE) {
	    {
	      isCustomComponentTag = isCustomComponent(type, props);
	      // Should this check be gated by parent namespace? Not sure we want to
	      // allow <SVG> or <mATH>.
	      !(isCustomComponentTag || type === type.toLowerCase()) ? warning(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;
	    }

	    if (type === 'script') {
	      // Create the script via .innerHTML so its "parser-inserted" flag is
	      // set to true and it does not execute
	      var div = ownerDocument.createElement('div');
	      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
	      // This is guaranteed to yield a script element.
	      var firstChild = div.firstChild;
	      domElement = div.removeChild(firstChild);
	    } else if (typeof props.is === 'string') {
	      // $FlowIssue `createElement` should be updated for Web Components
	      domElement = ownerDocument.createElement(type, { is: props.is });
	    } else {
	      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
	      // See discussion in https://github.com/facebook/react/pull/6896
	      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	      domElement = ownerDocument.createElement(type);
	    }
	  } else {
	    domElement = ownerDocument.createElementNS(namespaceURI, type);
	  }

	  {
	    if (namespaceURI === HTML_NAMESPACE) {
	      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
	        warnedUnknownTags[type] = true;
	        warning(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
	      }
	    }
	  }

	  return domElement;
	}

	function createTextNode$1(text, rootContainerElement) {
	  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
	}

	function setInitialProperties$1(domElement, tag, rawProps, rootContainerElement) {
	  var isCustomComponentTag = isCustomComponent(tag, rawProps);
	  {
	    validatePropertiesInDevelopment(tag, rawProps);
	    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
	      warning(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName$2() || 'A component');
	      didWarnShadyDOM = true;
	    }
	  }

	  // TODO: Make sure that we check isMounted before firing any of these events.
	  var props = void 0;
	  switch (tag) {
	    case 'iframe':
	    case 'object':
	      trapBubbledEvent(TOP_LOAD, domElement);
	      props = rawProps;
	      break;
	    case 'video':
	    case 'audio':
	      // Create listener for each media event
	      for (var i = 0; i < mediaEventTypes.length; i++) {
	        trapBubbledEvent(mediaEventTypes[i], domElement);
	      }
	      props = rawProps;
	      break;
	    case 'source':
	      trapBubbledEvent(TOP_ERROR, domElement);
	      props = rawProps;
	      break;
	    case 'img':
	    case 'image':
	    case 'link':
	      trapBubbledEvent(TOP_ERROR, domElement);
	      trapBubbledEvent(TOP_LOAD, domElement);
	      props = rawProps;
	      break;
	    case 'form':
	      trapBubbledEvent(TOP_RESET, domElement);
	      trapBubbledEvent(TOP_SUBMIT, domElement);
	      props = rawProps;
	      break;
	    case 'details':
	      trapBubbledEvent(TOP_TOGGLE, domElement);
	      props = rawProps;
	      break;
	    case 'input':
	      initWrapperState(domElement, rawProps);
	      props = getHostProps(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	    case 'option':
	      validateProps(domElement, rawProps);
	      props = getHostProps$1(domElement, rawProps);
	      break;
	    case 'select':
	      initWrapperState$1(domElement, rawProps);
	      props = getHostProps$2(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	    case 'textarea':
	      initWrapperState$2(domElement, rawProps);
	      props = getHostProps$3(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	    default:
	      props = rawProps;
	  }

	  assertValidProps(tag, props, getStack);

	  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

	  switch (tag) {
	    case 'input':
	      // TODO: Make sure we check if this is still unmounted or do any clean
	      // up necessary since we never stop tracking anymore.
	      track(domElement);
	      postMountWrapper(domElement, rawProps, false);
	      break;
	    case 'textarea':
	      // TODO: Make sure we check if this is still unmounted or do any clean
	      // up necessary since we never stop tracking anymore.
	      track(domElement);
	      postMountWrapper$3(domElement, rawProps);
	      break;
	    case 'option':
	      postMountWrapper$1(domElement, rawProps);
	      break;
	    case 'select':
	      postMountWrapper$2(domElement, rawProps);
	      break;
	    default:
	      if (typeof props.onClick === 'function') {
	        // TODO: This cast may not be sound for SVG, MathML or custom elements.
	        trapClickOnNonInteractiveElement(domElement);
	      }
	      break;
	  }
	}

	// Calculate the diff between the two objects.
	function diffProperties$1(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
	  {
	    validatePropertiesInDevelopment(tag, nextRawProps);
	  }

	  var updatePayload = null;

	  var lastProps = void 0;
	  var nextProps = void 0;
	  switch (tag) {
	    case 'input':
	      lastProps = getHostProps(domElement, lastRawProps);
	      nextProps = getHostProps(domElement, nextRawProps);
	      updatePayload = [];
	      break;
	    case 'option':
	      lastProps = getHostProps$1(domElement, lastRawProps);
	      nextProps = getHostProps$1(domElement, nextRawProps);
	      updatePayload = [];
	      break;
	    case 'select':
	      lastProps = getHostProps$2(domElement, lastRawProps);
	      nextProps = getHostProps$2(domElement, nextRawProps);
	      updatePayload = [];
	      break;
	    case 'textarea':
	      lastProps = getHostProps$3(domElement, lastRawProps);
	      nextProps = getHostProps$3(domElement, nextRawProps);
	      updatePayload = [];
	      break;
	    default:
	      lastProps = lastRawProps;
	      nextProps = nextRawProps;
	      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
	        // TODO: This cast may not be sound for SVG, MathML or custom elements.
	        trapClickOnNonInteractiveElement(domElement);
	      }
	      break;
	  }

	  assertValidProps(tag, nextProps, getStack);

	  var propKey = void 0;
	  var styleName = void 0;
	  var styleUpdates = null;
	  for (propKey in lastProps) {
	    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	      continue;
	    }
	    if (propKey === STYLE) {
	      var lastStyle = lastProps[propKey];
	      for (styleName in lastStyle) {
	        if (lastStyle.hasOwnProperty(styleName)) {
	          if (!styleUpdates) {
	            styleUpdates = {};
	          }
	          styleUpdates[styleName] = '';
	        }
	      }
	    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {
	      // Noop. This is handled by the clear text mechanism.
	    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
	      // Noop
	    } else if (propKey === AUTOFOCUS) {
	      // Noop. It doesn't work on updates anyway.
	    } else if (registrationNameModules.hasOwnProperty(propKey)) {
	      // This is a special case. If any listener updates we need to ensure
	      // that the "current" fiber pointer gets updated so we need a commit
	      // to update this element.
	      if (!updatePayload) {
	        updatePayload = [];
	      }
	    } else {
	      // For all other deleted properties we add it to the queue. We use
	      // the whitelist in the commit phase instead.
	      (updatePayload = updatePayload || []).push(propKey, null);
	    }
	  }
	  for (propKey in nextProps) {
	    var nextProp = nextProps[propKey];
	    var lastProp = lastProps != null ? lastProps[propKey] : undefined;
	    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	      continue;
	    }
	    if (propKey === STYLE) {
	      {
	        if (nextProp) {
	          // Freeze the next style object so that we can assume it won't be
	          // mutated. We have already warned for this in the past.
	          Object.freeze(nextProp);
	        }
	      }
	      if (lastProp) {
	        // Unset styles on `lastProp` but not on `nextProp`.
	        for (styleName in lastProp) {
	          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	            if (!styleUpdates) {
	              styleUpdates = {};
	            }
	            styleUpdates[styleName] = '';
	          }
	        }
	        // Update styles that changed since `lastProp`.
	        for (styleName in nextProp) {
	          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	            if (!styleUpdates) {
	              styleUpdates = {};
	            }
	            styleUpdates[styleName] = nextProp[styleName];
	          }
	        }
	      } else {
	        // Relies on `updateStylesByID` not mutating `styleUpdates`.
	        if (!styleUpdates) {
	          if (!updatePayload) {
	            updatePayload = [];
	          }
	          updatePayload.push(propKey, styleUpdates);
	        }
	        styleUpdates = nextProp;
	      }
	    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
	      var nextHtml = nextProp ? nextProp[HTML] : undefined;
	      var lastHtml = lastProp ? lastProp[HTML] : undefined;
	      if (nextHtml != null) {
	        if (lastHtml !== nextHtml) {
	          (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);
	        }
	      } else {
	        // TODO: It might be too late to clear this if we have children
	        // inserted already.
	      }
	    } else if (propKey === CHILDREN) {
	      if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
	        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
	      }
	    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
	      // Noop
	    } else if (registrationNameModules.hasOwnProperty(propKey)) {
	      if (nextProp != null) {
	        // We eagerly listen to this even though we haven't committed yet.
	        if (true && typeof nextProp !== 'function') {
	          warnForInvalidEventListener(propKey, nextProp);
	        }
	        ensureListeningTo(rootContainerElement, propKey);
	      }
	      if (!updatePayload && lastProp !== nextProp) {
	        // This is a special case. If any listener updates we need to ensure
	        // that the "current" props pointer gets updated so we need a commit
	        // to update this element.
	        updatePayload = [];
	      }
	    } else {
	      // For any other property we always add it to the queue and then we
	      // filter it out using the whitelist during the commit.
	      (updatePayload = updatePayload || []).push(propKey, nextProp);
	    }
	  }
	  if (styleUpdates) {
	    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
	  }
	  return updatePayload;
	}

	// Apply the diff.
	function updateProperties$1(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
	  // Update checked *before* name.
	  // In the middle of an update, it is possible to have multiple checked.
	  // When a checked radio tries to change name, browser makes another radio's checked false.
	  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
	    updateChecked(domElement, nextRawProps);
	  }

	  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
	  var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
	  // Apply the diff.
	  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);

	  // TODO: Ensure that an update gets scheduled if any of the special props
	  // changed.
	  switch (tag) {
	    case 'input':
	      // Update the wrapper around inputs *after* updating props. This has to
	      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
	      // raise warnings and prevent the new value from being assigned.
	      updateWrapper(domElement, nextRawProps);
	      break;
	    case 'textarea':
	      updateWrapper$1(domElement, nextRawProps);
	      break;
	    case 'select':
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      postUpdateWrapper(domElement, nextRawProps);
	      break;
	  }
	}

	function getPossibleStandardName(propName) {
	  {
	    var lowerCasedName = propName.toLowerCase();
	    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
	      return null;
	    }
	    return possibleStandardNames[lowerCasedName] || null;
	  }
	  return null;
	}

	function diffHydratedProperties$1(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
	  var isCustomComponentTag = void 0;
	  var extraAttributeNames = void 0;

	  {
	    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
	    isCustomComponentTag = isCustomComponent(tag, rawProps);
	    validatePropertiesInDevelopment(tag, rawProps);
	    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
	      warning(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName$2() || 'A component');
	      didWarnShadyDOM = true;
	    }
	  }

	  // TODO: Make sure that we check isMounted before firing any of these events.
	  switch (tag) {
	    case 'iframe':
	    case 'object':
	      trapBubbledEvent(TOP_LOAD, domElement);
	      break;
	    case 'video':
	    case 'audio':
	      // Create listener for each media event
	      for (var i = 0; i < mediaEventTypes.length; i++) {
	        trapBubbledEvent(mediaEventTypes[i], domElement);
	      }
	      break;
	    case 'source':
	      trapBubbledEvent(TOP_ERROR, domElement);
	      break;
	    case 'img':
	    case 'image':
	    case 'link':
	      trapBubbledEvent(TOP_ERROR, domElement);
	      trapBubbledEvent(TOP_LOAD, domElement);
	      break;
	    case 'form':
	      trapBubbledEvent(TOP_RESET, domElement);
	      trapBubbledEvent(TOP_SUBMIT, domElement);
	      break;
	    case 'details':
	      trapBubbledEvent(TOP_TOGGLE, domElement);
	      break;
	    case 'input':
	      initWrapperState(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	    case 'option':
	      validateProps(domElement, rawProps);
	      break;
	    case 'select':
	      initWrapperState$1(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	    case 'textarea':
	      initWrapperState$2(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	  }

	  assertValidProps(tag, rawProps, getStack);

	  {
	    extraAttributeNames = new Set();
	    var attributes = domElement.attributes;
	    for (var _i = 0; _i < attributes.length; _i++) {
	      var name = attributes[_i].name.toLowerCase();
	      switch (name) {
	        // Built-in SSR attribute is whitelisted
	        case 'data-reactroot':
	          break;
	        // Controlled attributes are not validated
	        // TODO: Only ignore them on controlled tags.
	        case 'value':
	          break;
	        case 'checked':
	          break;
	        case 'selected':
	          break;
	        default:
	          // Intentionally use the original name.
	          // See discussion in https://github.com/facebook/react/pull/10676.
	          extraAttributeNames.add(attributes[_i].name);
	      }
	    }
	  }

	  var updatePayload = null;
	  for (var propKey in rawProps) {
	    if (!rawProps.hasOwnProperty(propKey)) {
	      continue;
	    }
	    var nextProp = rawProps[propKey];
	    if (propKey === CHILDREN) {
	      // For text content children we compare against textContent. This
	      // might match additional HTML that is hidden when we read it using
	      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
	      // satisfies our requirement. Our requirement is not to produce perfect
	      // HTML and attributes. Ideally we should preserve structure but it's
	      // ok not to if the visible content is still enough to indicate what
	      // even listeners these nodes might be wired up to.
	      // TODO: Warn if there is more than a single textNode as a child.
	      // TODO: Should we use domElement.firstChild.nodeValue to compare?
	      if (typeof nextProp === 'string') {
	        if (domElement.textContent !== nextProp) {
	          if (true && !suppressHydrationWarning) {
	            warnForTextDifference(domElement.textContent, nextProp);
	          }
	          updatePayload = [CHILDREN, nextProp];
	        }
	      } else if (typeof nextProp === 'number') {
	        if (domElement.textContent !== '' + nextProp) {
	          if (true && !suppressHydrationWarning) {
	            warnForTextDifference(domElement.textContent, nextProp);
	          }
	          updatePayload = [CHILDREN, '' + nextProp];
	        }
	      }
	    } else if (registrationNameModules.hasOwnProperty(propKey)) {
	      if (nextProp != null) {
	        if (true && typeof nextProp !== 'function') {
	          warnForInvalidEventListener(propKey, nextProp);
	        }
	        ensureListeningTo(rootContainerElement, propKey);
	      }
	    } else if (true &&
	    // Convince Flow we've calculated it (it's DEV-only in this method.)
	    typeof isCustomComponentTag === 'boolean') {
	      // Validate that the properties correspond to their expected values.
	      var serverValue = void 0;
	      var propertyInfo = getPropertyInfo(propKey);
	      if (suppressHydrationWarning) {
	        // Don't bother comparing. We're ignoring all these warnings.
	      } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 ||
	      // Controlled attributes are not validated
	      // TODO: Only ignore them on controlled tags.
	      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {
	        // Noop
	      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
	        var rawHtml = nextProp ? nextProp[HTML] || '' : '';
	        var serverHTML = domElement.innerHTML;
	        var expectedHTML = normalizeHTML(domElement, rawHtml);
	        if (expectedHTML !== serverHTML) {
	          warnForPropDifference(propKey, serverHTML, expectedHTML);
	        }
	      } else if (propKey === STYLE) {
	        // $FlowFixMe - Should be inferred as not undefined.
	        extraAttributeNames.delete(propKey);
	        var expectedStyle = createDangerousStringForStyles(nextProp);
	        serverValue = domElement.getAttribute('style');
	        if (expectedStyle !== serverValue) {
	          warnForPropDifference(propKey, serverValue, expectedStyle);
	        }
	      } else if (isCustomComponentTag) {
	        // $FlowFixMe - Should be inferred as not undefined.
	        extraAttributeNames.delete(propKey.toLowerCase());
	        serverValue = getValueForAttribute(domElement, propKey, nextProp);

	        if (nextProp !== serverValue) {
	          warnForPropDifference(propKey, serverValue, nextProp);
	        }
	      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
	        var isMismatchDueToBadCasing = false;
	        if (propertyInfo !== null) {
	          // $FlowFixMe - Should be inferred as not undefined.
	          extraAttributeNames.delete(propertyInfo.attributeName);
	          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
	        } else {
	          var ownNamespace = parentNamespace;
	          if (ownNamespace === HTML_NAMESPACE) {
	            ownNamespace = getIntrinsicNamespace(tag);
	          }
	          if (ownNamespace === HTML_NAMESPACE) {
	            // $FlowFixMe - Should be inferred as not undefined.
	            extraAttributeNames.delete(propKey.toLowerCase());
	          } else {
	            var standardName = getPossibleStandardName(propKey);
	            if (standardName !== null && standardName !== propKey) {
	              // If an SVG prop is supplied with bad casing, it will
	              // be successfully parsed from HTML, but will produce a mismatch
	              // (and would be incorrectly rendered on the client).
	              // However, we already warn about bad casing elsewhere.
	              // So we'll skip the misleading extra mismatch warning in this case.
	              isMismatchDueToBadCasing = true;
	              // $FlowFixMe - Should be inferred as not undefined.
	              extraAttributeNames.delete(standardName);
	            }
	            // $FlowFixMe - Should be inferred as not undefined.
	            extraAttributeNames.delete(propKey);
	          }
	          serverValue = getValueForAttribute(domElement, propKey, nextProp);
	        }

	        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
	          warnForPropDifference(propKey, serverValue, nextProp);
	        }
	      }
	    }
	  }

	  {
	    // $FlowFixMe - Should be inferred as not undefined.
	    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
	      // $FlowFixMe - Should be inferred as not undefined.
	      warnForExtraAttributes(extraAttributeNames);
	    }
	  }

	  switch (tag) {
	    case 'input':
	      // TODO: Make sure we check if this is still unmounted or do any clean
	      // up necessary since we never stop tracking anymore.
	      track(domElement);
	      postMountWrapper(domElement, rawProps, true);
	      break;
	    case 'textarea':
	      // TODO: Make sure we check if this is still unmounted or do any clean
	      // up necessary since we never stop tracking anymore.
	      track(domElement);
	      postMountWrapper$3(domElement, rawProps);
	      break;
	    case 'select':
	    case 'option':
	      // For input and textarea we current always set the value property at
	      // post mount to force it to diverge from attributes. However, for
	      // option and select we don't quite do the same thing and select
	      // is not resilient to the DOM state changing so we don't do that here.
	      // TODO: Consider not doing this for input and textarea.
	      break;
	    default:
	      if (typeof rawProps.onClick === 'function') {
	        // TODO: This cast may not be sound for SVG, MathML or custom elements.
	        trapClickOnNonInteractiveElement(domElement);
	      }
	      break;
	  }

	  return updatePayload;
	}

	function diffHydratedText$1(textNode, text) {
	  var isDifferent = textNode.nodeValue !== text;
	  return isDifferent;
	}

	function warnForUnmatchedText$1(textNode, text) {
	  {
	    warnForTextDifference(textNode.nodeValue, text);
	  }
	}

	function warnForDeletedHydratableElement$1(parentNode, child) {
	  {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warning(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
	  }
	}

	function warnForDeletedHydratableText$1(parentNode, child) {
	  {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warning(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
	  }
	}

	function warnForInsertedHydratedElement$1(parentNode, tag, props) {
	  {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warning(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
	  }
	}

	function warnForInsertedHydratedText$1(parentNode, text) {
	  {
	    if (text === '') {
	      // We expect to insert empty text nodes since they're not represented in
	      // the HTML.
	      // TODO: Remove this special case if we can just avoid inserting empty
	      // text nodes.
	      return;
	    }
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warning(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
	  }
	}

	function restoreControlledState$1(domElement, tag, props) {
	  switch (tag) {
	    case 'input':
	      restoreControlledState(domElement, props);
	      return;
	    case 'textarea':
	      restoreControlledState$3(domElement, props);
	      return;
	    case 'select':
	      restoreControlledState$2(domElement, props);
	      return;
	  }
	}

	var ReactDOMFiberComponent = Object.freeze({
		createElement: createElement$1,
		createTextNode: createTextNode$1,
		setInitialProperties: setInitialProperties$1,
		diffProperties: diffProperties$1,
		updateProperties: updateProperties$1,
		diffHydratedProperties: diffHydratedProperties$1,
		diffHydratedText: diffHydratedText$1,
		warnForUnmatchedText: warnForUnmatchedText$1,
		warnForDeletedHydratableElement: warnForDeletedHydratableElement$1,
		warnForDeletedHydratableText: warnForDeletedHydratableText$1,
		warnForInsertedHydratedElement: warnForInsertedHydratedElement$1,
		warnForInsertedHydratedText: warnForInsertedHydratedText$1,
		restoreControlledState: restoreControlledState$1
	});

	// TODO: direct imports like some-package/src/* are bad. Fix me.
	var getCurrentFiberStackAddendum$5 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

	var validateDOMNesting = emptyFunction;

	{
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    current: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo$1 = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.current = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	      case 'pre':
	      case 'listing':
	      case 'table':
	      case 'hr':
	      case 'xmp':
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childText, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;

	    if (childText != null) {
	      !(childTag == null) ? warning(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
	      childTag = '#text';
	    }

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var invalidParentOrAncestor = invalidParent || invalidAncestor;
	    if (!invalidParentOrAncestor) {
	      return;
	    }

	    var ancestorTag = invalidParentOrAncestor.tag;
	    var addendum = getCurrentFiberStackAddendum$5();

	    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;
	    if (didWarn[warnKey]) {
	      return;
	    }
	    didWarn[warnKey] = true;

	    var tagDisplayName = childTag;
	    var whitespaceInfo = '';
	    if (childTag === '#text') {
	      if (/\S/.test(childText)) {
	        tagDisplayName = 'Text nodes';
	      } else {
	        tagDisplayName = 'Whitespace text nodes';
	        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
	      }
	    } else {
	      tagDisplayName = '<' + childTag + '>';
	    }

	    if (invalidParent) {
	      var info = '';
	      if (ancestorTag === 'table' && childTag === 'tr') {
	        info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	      }
	      warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
	    } else {
	      warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
	    }
	  };

	  // TODO: turn this into a named export
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo$1;
	}

	var validateDOMNesting$1 = validateDOMNesting;

	// Renderers that don't support persistence
	// can re-export everything from this module.

	function shim() {
	  invariant(false, 'The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.');
	}

	// Persistence (when unsupported)
	var supportsPersistence = false;
	var cloneInstance = shim;
	var createContainerChildSet = shim;
	var appendChildToContainerChildSet = shim;
	var finalizeContainerChildren = shim;
	var replaceContainerChildren = shim;

	// Unused

	var createElement = createElement$1;
	var createTextNode = createTextNode$1;
	var setInitialProperties = setInitialProperties$1;
	var diffProperties = diffProperties$1;
	var updateProperties = updateProperties$1;
	var diffHydratedProperties = diffHydratedProperties$1;
	var diffHydratedText = diffHydratedText$1;
	var warnForUnmatchedText = warnForUnmatchedText$1;
	var warnForDeletedHydratableElement = warnForDeletedHydratableElement$1;
	var warnForDeletedHydratableText = warnForDeletedHydratableText$1;
	var warnForInsertedHydratedElement = warnForInsertedHydratedElement$1;
	var warnForInsertedHydratedText = warnForInsertedHydratedText$1;
	var updatedAncestorInfo = validateDOMNesting$1.updatedAncestorInfo;
	var precacheFiberNode$1 = precacheFiberNode;
	var updateFiberProps$1 = updateFiberProps;


	var SUPPRESS_HYDRATION_WARNING = void 0;
	{
	  SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
	}

	var eventsEnabled = null;
	var selectionInformation = null;

	function shouldAutoFocusHostComponent(type, props) {
	  switch (type) {
	    case 'button':
	    case 'input':
	    case 'select':
	    case 'textarea':
	      return !!props.autoFocus;
	  }
	  return false;
	}

	function getRootHostContext(rootContainerInstance) {
	  var type = void 0;
	  var namespace = void 0;
	  var nodeType = rootContainerInstance.nodeType;
	  switch (nodeType) {
	    case DOCUMENT_NODE:
	    case DOCUMENT_FRAGMENT_NODE:
	      {
	        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
	        var root = rootContainerInstance.documentElement;
	        namespace = root ? root.namespaceURI : getChildNamespace(null, '');
	        break;
	      }
	    default:
	      {
	        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
	        var ownNamespace = container.namespaceURI || null;
	        type = container.tagName;
	        namespace = getChildNamespace(ownNamespace, type);
	        break;
	      }
	  }
	  {
	    var validatedTag = type.toLowerCase();
	    var _ancestorInfo = updatedAncestorInfo(null, validatedTag, null);
	    return { namespace: namespace, ancestorInfo: _ancestorInfo };
	  }
	  return namespace;
	}

	function getChildHostContext(parentHostContext, type, rootContainerInstance) {
	  {
	    var parentHostContextDev = parentHostContext;
	    var _namespace = getChildNamespace(parentHostContextDev.namespace, type);
	    var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type, null);
	    return { namespace: _namespace, ancestorInfo: _ancestorInfo2 };
	  }
	  var parentNamespace = parentHostContext;
	  return getChildNamespace(parentNamespace, type);
	}

	function getPublicInstance(instance) {
	  return instance;
	}

	function prepareForCommit(containerInfo) {
	  eventsEnabled = isEnabled();
	  selectionInformation = getSelectionInformation();
	  setEnabled(false);
	}

	function resetAfterCommit(containerInfo) {
	  restoreSelection(selectionInformation);
	  selectionInformation = null;
	  setEnabled(eventsEnabled);
	  eventsEnabled = null;
	}

	function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
	  var parentNamespace = void 0;
	  {
	    // TODO: take namespace into account when validating.
	    var hostContextDev = hostContext;
	    validateDOMNesting$1(type, null, hostContextDev.ancestorInfo);
	    if (typeof props.children === 'string' || typeof props.children === 'number') {
	      var string = '' + props.children;
	      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
	      validateDOMNesting$1(null, string, ownAncestorInfo);
	    }
	    parentNamespace = hostContextDev.namespace;
	  }
	  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
	  precacheFiberNode$1(internalInstanceHandle, domElement);
	  updateFiberProps$1(domElement, props);
	  return domElement;
	}

	function appendInitialChild(parentInstance, child) {
	  parentInstance.appendChild(child);
	}

	function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
	  setInitialProperties(domElement, type, props, rootContainerInstance);
	  return shouldAutoFocusHostComponent(type, props);
	}

	function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
	  {
	    var hostContextDev = hostContext;
	    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
	      var string = '' + newProps.children;
	      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
	      validateDOMNesting$1(null, string, ownAncestorInfo);
	    }
	  }
	  return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
	}

	function shouldSetTextContent(type, props) {
	  return type === 'textarea' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && typeof props.dangerouslySetInnerHTML.__html === 'string';
	}

	function shouldDeprioritizeSubtree(type, props) {
	  return !!props.hidden;
	}

	function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
	  {
	    var hostContextDev = hostContext;
	    validateDOMNesting$1(null, text, hostContextDev.ancestorInfo);
	  }
	  var textNode = createTextNode(text, rootContainerInstance);
	  precacheFiberNode$1(internalInstanceHandle, textNode);
	  return textNode;
	}

	var now = now$1;
	var isPrimaryRenderer = true;
	var scheduleDeferredCallback = scheduleWork;
	var cancelDeferredCallback = cancelScheduledWork;

	// -------------------
	//     Mutation
	// -------------------

	var supportsMutation = true;

	function commitMount(domElement, type, newProps, internalInstanceHandle) {
	  // Despite the naming that might imply otherwise, this method only
	  // fires if there is an `Update` effect scheduled during mounting.
	  // This happens if `finalizeInitialChildren` returns `true` (which it
	  // does to implement the `autoFocus` attribute on the client). But
	  // there are also other cases when this might happen (such as patching
	  // up text content during hydration mismatch). So we'll check this again.
	  if (shouldAutoFocusHostComponent(type, newProps)) {
	    domElement.focus();
	  }
	}

	function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
	  // Update the props handle so that we know which props are the ones with
	  // with current event handlers.
	  updateFiberProps$1(domElement, newProps);
	  // Apply the diff to the DOM node.
	  updateProperties(domElement, updatePayload, type, oldProps, newProps);
	}

	function resetTextContent(domElement) {
	  setTextContent(domElement, '');
	}

	function commitTextUpdate(textInstance, oldText, newText) {
	  textInstance.nodeValue = newText;
	}

	function appendChild(parentInstance, child) {
	  parentInstance.appendChild(child);
	}

	function appendChildToContainer(container, child) {
	  if (container.nodeType === COMMENT_NODE) {
	    container.parentNode.insertBefore(child, container);
	  } else {
	    container.appendChild(child);
	  }
	}

	function insertBefore(parentInstance, child, beforeChild) {
	  parentInstance.insertBefore(child, beforeChild);
	}

	function insertInContainerBefore(container, child, beforeChild) {
	  if (container.nodeType === COMMENT_NODE) {
	    container.parentNode.insertBefore(child, beforeChild);
	  } else {
	    container.insertBefore(child, beforeChild);
	  }
	}

	function removeChild(parentInstance, child) {
	  parentInstance.removeChild(child);
	}

	function removeChildFromContainer(container, child) {
	  if (container.nodeType === COMMENT_NODE) {
	    container.parentNode.removeChild(child);
	  } else {
	    container.removeChild(child);
	  }
	}

	// -------------------
	//     Hydration
	// -------------------

	var supportsHydration = true;

	function canHydrateInstance(instance, type, props) {
	  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
	    return null;
	  }
	  // This has now been refined to an element node.
	  return instance;
	}

	function canHydrateTextInstance(instance, text) {
	  if (text === '' || instance.nodeType !== TEXT_NODE) {
	    // Empty strings are not parsed by HTML so there won't be a correct match here.
	    return null;
	  }
	  // This has now been refined to a text node.
	  return instance;
	}

	function getNextHydratableSibling(instance) {
	  var node = instance.nextSibling;
	  // Skip non-hydratable nodes.
	  while (node && node.nodeType !== ELEMENT_NODE && node.nodeType !== TEXT_NODE) {
	    node = node.nextSibling;
	  }
	  return node;
	}

	function getFirstHydratableChild(parentInstance) {
	  var next = parentInstance.firstChild;
	  // Skip non-hydratable nodes.
	  while (next && next.nodeType !== ELEMENT_NODE && next.nodeType !== TEXT_NODE) {
	    next = next.nextSibling;
	  }
	  return next;
	}

	function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
	  precacheFiberNode$1(internalInstanceHandle, instance);
	  // TODO: Possibly defer this until the commit phase where all the events
	  // get attached.
	  updateFiberProps$1(instance, props);
	  var parentNamespace = void 0;
	  {
	    var hostContextDev = hostContext;
	    parentNamespace = hostContextDev.namespace;
	  }
	  return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
	}

	function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
	  precacheFiberNode$1(internalInstanceHandle, textInstance);
	  return diffHydratedText(textInstance, text);
	}

	function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
	  {
	    warnForUnmatchedText(textInstance, text);
	  }
	}

	function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
	  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
	    warnForUnmatchedText(textInstance, text);
	  }
	}

	function didNotHydrateContainerInstance(parentContainer, instance) {
	  {
	    if (instance.nodeType === 1) {
	      warnForDeletedHydratableElement(parentContainer, instance);
	    } else {
	      warnForDeletedHydratableText(parentContainer, instance);
	    }
	  }
	}

	function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
	  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
	    if (instance.nodeType === 1) {
	      warnForDeletedHydratableElement(parentInstance, instance);
	    } else {
	      warnForDeletedHydratableText(parentInstance, instance);
	    }
	  }
	}

	function didNotFindHydratableContainerInstance(parentContainer, type, props) {
	  {
	    warnForInsertedHydratedElement(parentContainer, type, props);
	  }
	}

	function didNotFindHydratableContainerTextInstance(parentContainer, text) {
	  {
	    warnForInsertedHydratedText(parentContainer, text);
	  }
	}

	function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
	  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
	    warnForInsertedHydratedElement(parentInstance, type, props);
	  }
	}

	function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
	  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
	    warnForInsertedHydratedText(parentInstance, text);
	  }
	}

	// Exports ReactDOM.createRoot
	var enableUserTimingAPI = true;

	// Experimental error-boundary API that can recover from errors within a single
	// render phase
	var enableGetDerivedStateFromCatch = false;
	// Suspense
	var enableSuspense = false;
	// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:
	var debugRenderPhaseSideEffects = false;

	// In some cases, StrictMode should also double-render lifecycles.
	// This can be confusing for tests though,
	// And it can be bad for performance in production.
	// This feature flag can be used to control the behavior:
	var debugRenderPhaseSideEffectsForStrictMode = true;

	// To preserve the "Pause on caught exceptions" behavior of the debugger, we
	// replay the begin phase of a failed component inside invokeGuardedCallback.
	var replayFailedUnitOfWorkWithInvokeGuardedCallback = true;

	// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:
	var warnAboutDeprecatedLifecycles = false;

	// Warn about legacy context API
	var warnAboutLegacyContextAPI = false;

	// Gather advanced timing metrics for Profiler subtrees.
	var enableProfilerTimer = true;

	// Only used in www builds.

	// Prefix measurements so that it's possible to filter them.
	// Longer prefixes are hard to read in DevTools.
	var reactEmoji = '\u269B';
	var warningEmoji = '\u26D4';
	var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

	// Keep track of current fiber so that we know the path to unwind on pause.
	// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?
	var currentFiber = null;
	// If we're in the middle of user code, which fiber and method is it?
	// Reusing `currentFiber` would be confusing for this because user code fiber
	// can change during commit phase too, but we don't need to unwind it (since
	// lifecycles in the commit phase don't resemble a tree).
	var currentPhase = null;
	var currentPhaseFiber = null;
	// Did lifecycle hook schedule an update? This is often a performance problem,
	// so we will keep track of it, and include it in the report.
	// Track commits caused by cascading updates.
	var isCommitting = false;
	var hasScheduledUpdateInCurrentCommit = false;
	var hasScheduledUpdateInCurrentPhase = false;
	var commitCountInCurrentWorkLoop = 0;
	var effectCountInCurrentCommit = 0;
	var isWaitingForCallback = false;
	// During commits, we only show a measurement once per method name
	// to avoid stretch the commit phase with measurement overhead.
	var labelsInCurrentCommit = new Set();

	var formatMarkName = function (markName) {
	  return reactEmoji + ' ' + markName;
	};

	var formatLabel = function (label, warning$$1) {
	  var prefix = warning$$1 ? warningEmoji + ' ' : reactEmoji + ' ';
	  var suffix = warning$$1 ? ' Warning: ' + warning$$1 : '';
	  return '' + prefix + label + suffix;
	};

	var beginMark = function (markName) {
	  performance.mark(formatMarkName(markName));
	};

	var clearMark = function (markName) {
	  performance.clearMarks(formatMarkName(markName));
	};

	var endMark = function (label, markName, warning$$1) {
	  var formattedMarkName = formatMarkName(markName);
	  var formattedLabel = formatLabel(label, warning$$1);
	  try {
	    performance.measure(formattedLabel, formattedMarkName);
	  } catch (err) {}
	  // If previous mark was missing for some reason, this will throw.
	  // This could only happen if React crashed in an unexpected place earlier.
	  // Don't pile on with more errors.

	  // Clear marks immediately to avoid growing buffer.
	  performance.clearMarks(formattedMarkName);
	  performance.clearMeasures(formattedLabel);
	};

	var getFiberMarkName = function (label, debugID) {
	  return label + ' (#' + debugID + ')';
	};

	var getFiberLabel = function (componentName, isMounted, phase) {
	  if (phase === null) {
	    // These are composite component total time measurements.
	    return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';
	  } else {
	    // Composite component methods.
	    return componentName + '.' + phase;
	  }
	};

	var beginFiberMark = function (fiber, phase) {
	  var componentName = getComponentName(fiber) || 'Unknown';
	  var debugID = fiber._debugID;
	  var isMounted = fiber.alternate !== null;
	  var label = getFiberLabel(componentName, isMounted, phase);

	  if (isCommitting && labelsInCurrentCommit.has(label)) {
	    // During the commit phase, we don't show duplicate labels because
	    // there is a fixed overhead for every measurement, and we don't
	    // want to stretch the commit phase beyond necessary.
	    return false;
	  }
	  labelsInCurrentCommit.add(label);

	  var markName = getFiberMarkName(label, debugID);
	  beginMark(markName);
	  return true;
	};

	var clearFiberMark = function (fiber, phase) {
	  var componentName = getComponentName(fiber) || 'Unknown';
	  var debugID = fiber._debugID;
	  var isMounted = fiber.alternate !== null;
	  var label = getFiberLabel(componentName, isMounted, phase);
	  var markName = getFiberMarkName(label, debugID);
	  clearMark(markName);
	};

	var endFiberMark = function (fiber, phase, warning$$1) {
	  var componentName = getComponentName(fiber) || 'Unknown';
	  var debugID = fiber._debugID;
	  var isMounted = fiber.alternate !== null;
	  var label = getFiberLabel(componentName, isMounted, phase);
	  var markName = getFiberMarkName(label, debugID);
	  endMark(label, markName, warning$$1);
	};

	var shouldIgnoreFiber = function (fiber) {
	  // Host components should be skipped in the timeline.
	  // We could check typeof fiber.type, but does this work with RN?
	  switch (fiber.tag) {
	    case HostRoot:
	    case HostComponent:
	    case HostText:
	    case HostPortal:
	    case Fragment:
	    case ContextProvider:
	    case ContextConsumer:
	    case Mode:
	      return true;
	    default:
	      return false;
	  }
	};

	var clearPendingPhaseMeasurement = function () {
	  if (currentPhase !== null && currentPhaseFiber !== null) {
	    clearFiberMark(currentPhaseFiber, currentPhase);
	  }
	  currentPhaseFiber = null;
	  currentPhase = null;
	  hasScheduledUpdateInCurrentPhase = false;
	};

	var pauseTimers = function () {
	  // Stops all currently active measurements so that they can be resumed
	  // if we continue in a later deferred loop from the same unit of work.
	  var fiber = currentFiber;
	  while (fiber) {
	    if (fiber._debugIsCurrentlyTiming) {
	      endFiberMark(fiber, null, null);
	    }
	    fiber = fiber.return;
	  }
	};

	var resumeTimersRecursively = function (fiber) {
	  if (fiber.return !== null) {
	    resumeTimersRecursively(fiber.return);
	  }
	  if (fiber._debugIsCurrentlyTiming) {
	    beginFiberMark(fiber, null);
	  }
	};

	var resumeTimers = function () {
	  // Resumes all measurements that were active during the last deferred loop.
	  if (currentFiber !== null) {
	    resumeTimersRecursively(currentFiber);
	  }
	};

	function recordEffect() {
	  if (enableUserTimingAPI) {
	    effectCountInCurrentCommit++;
	  }
	}

	function recordScheduleUpdate() {
	  if (enableUserTimingAPI) {
	    if (isCommitting) {
	      hasScheduledUpdateInCurrentCommit = true;
	    }
	    if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
	      hasScheduledUpdateInCurrentPhase = true;
	    }
	  }
	}

	function startRequestCallbackTimer() {
	  if (enableUserTimingAPI) {
	    if (supportsUserTiming && !isWaitingForCallback) {
	      isWaitingForCallback = true;
	      beginMark('(Waiting for async callback...)');
	    }
	  }
	}

	function stopRequestCallbackTimer(didExpire, expirationTime) {
	  if (enableUserTimingAPI) {
	    if (supportsUserTiming) {
	      isWaitingForCallback = false;
	      var warning$$1 = didExpire ? 'React was blocked by main thread' : null;
	      endMark('(Waiting for async callback... will force flush in ' + expirationTime + ' ms)', '(Waiting for async callback...)', warning$$1);
	    }
	  }
	}

	function startWorkTimer(fiber) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
	      return;
	    }
	    // If we pause, this is the fiber to unwind from.
	    currentFiber = fiber;
	    if (!beginFiberMark(fiber, null)) {
	      return;
	    }
	    fiber._debugIsCurrentlyTiming = true;
	  }
	}

	function cancelWorkTimer(fiber) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
	      return;
	    }
	    // Remember we shouldn't complete measurement for this fiber.
	    // Otherwise flamechart will be deep even for small updates.
	    fiber._debugIsCurrentlyTiming = false;
	    clearFiberMark(fiber, null);
	  }
	}

	function stopWorkTimer(fiber) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
	      return;
	    }
	    // If we pause, its parent is the fiber to unwind from.
	    currentFiber = fiber.return;
	    if (!fiber._debugIsCurrentlyTiming) {
	      return;
	    }
	    fiber._debugIsCurrentlyTiming = false;
	    endFiberMark(fiber, null, null);
	  }
	}

	function stopFailedWorkTimer(fiber) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
	      return;
	    }
	    // If we pause, its parent is the fiber to unwind from.
	    currentFiber = fiber.return;
	    if (!fiber._debugIsCurrentlyTiming) {
	      return;
	    }
	    fiber._debugIsCurrentlyTiming = false;
	    var warning$$1 = 'An error was thrown inside this error boundary';
	    endFiberMark(fiber, null, warning$$1);
	  }
	}

	function startPhaseTimer(fiber, phase) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    clearPendingPhaseMeasurement();
	    if (!beginFiberMark(fiber, phase)) {
	      return;
	    }
	    currentPhaseFiber = fiber;
	    currentPhase = phase;
	  }
	}

	function stopPhaseTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    if (currentPhase !== null && currentPhaseFiber !== null) {
	      var warning$$1 = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
	      endFiberMark(currentPhaseFiber, currentPhase, warning$$1);
	    }
	    currentPhase = null;
	    currentPhaseFiber = null;
	  }
	}

	function startWorkLoopTimer(nextUnitOfWork) {
	  if (enableUserTimingAPI) {
	    currentFiber = nextUnitOfWork;
	    if (!supportsUserTiming) {
	      return;
	    }
	    commitCountInCurrentWorkLoop = 0;
	    // This is top level call.
	    // Any other measurements are performed within.
	    beginMark('(React Tree Reconciliation)');
	    // Resume any measurements that were in progress during the last loop.
	    resumeTimers();
	  }
	}

	function stopWorkLoopTimer(interruptedBy, didCompleteRoot) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    var warning$$1 = null;
	    if (interruptedBy !== null) {
	      if (interruptedBy.tag === HostRoot) {
	        warning$$1 = 'A top-level update interrupted the previous render';
	      } else {
	        var componentName = getComponentName(interruptedBy) || 'Unknown';
	        warning$$1 = 'An update to ' + componentName + ' interrupted the previous render';
	      }
	    } else if (commitCountInCurrentWorkLoop > 1) {
	      warning$$1 = 'There were cascading updates';
	    }
	    commitCountInCurrentWorkLoop = 0;
	    var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)';
	    // Pause any measurements until the next loop.
	    pauseTimers();
	    endMark(label, '(React Tree Reconciliation)', warning$$1);
	  }
	}

	function startCommitTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    isCommitting = true;
	    hasScheduledUpdateInCurrentCommit = false;
	    labelsInCurrentCommit.clear();
	    beginMark('(Committing Changes)');
	  }
	}

	function stopCommitTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }

	    var warning$$1 = null;
	    if (hasScheduledUpdateInCurrentCommit) {
	      warning$$1 = 'Lifecycle hook scheduled a cascading update';
	    } else if (commitCountInCurrentWorkLoop > 0) {
	      warning$$1 = 'Caused by a cascading update in earlier commit';
	    }
	    hasScheduledUpdateInCurrentCommit = false;
	    commitCountInCurrentWorkLoop++;
	    isCommitting = false;
	    labelsInCurrentCommit.clear();

	    endMark('(Committing Changes)', '(Committing Changes)', warning$$1);
	  }
	}

	function startCommitSnapshotEffectsTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    effectCountInCurrentCommit = 0;
	    beginMark('(Committing Snapshot Effects)');
	  }
	}

	function stopCommitSnapshotEffectsTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    var count = effectCountInCurrentCommit;
	    effectCountInCurrentCommit = 0;
	    endMark('(Committing Snapshot Effects: ' + count + ' Total)', '(Committing Snapshot Effects)', null);
	  }
	}

	function startCommitHostEffectsTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    effectCountInCurrentCommit = 0;
	    beginMark('(Committing Host Effects)');
	  }
	}

	function stopCommitHostEffectsTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    var count = effectCountInCurrentCommit;
	    effectCountInCurrentCommit = 0;
	    endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);
	  }
	}

	function startCommitLifeCyclesTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    effectCountInCurrentCommit = 0;
	    beginMark('(Calling Lifecycle Methods)');
	  }
	}

	function stopCommitLifeCyclesTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    var count = effectCountInCurrentCommit;
	    effectCountInCurrentCommit = 0;
	    endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);
	  }
	}

	var valueStack = [];

	var fiberStack = void 0;

	{
	  fiberStack = [];
	}

	var index = -1;

	function createCursor(defaultValue) {
	  return {
	    current: defaultValue
	  };
	}

	function pop(cursor, fiber) {
	  if (index < 0) {
	    {
	      warning(false, 'Unexpected pop.');
	    }
	    return;
	  }

	  {
	    if (fiber !== fiberStack[index]) {
	      warning(false, 'Unexpected Fiber popped.');
	    }
	  }

	  cursor.current = valueStack[index];

	  valueStack[index] = null;

	  {
	    fiberStack[index] = null;
	  }

	  index--;
	}

	function push(cursor, value, fiber) {
	  index++;

	  valueStack[index] = cursor.current;

	  {
	    fiberStack[index] = fiber;
	  }

	  cursor.current = value;
	}

	function checkThatStackIsEmpty() {
	  {
	    if (index !== -1) {
	      warning(false, 'Expected an empty stack. Something was not reset properly.');
	    }
	  }
	}

	function resetStackAfterFatalErrorInDev() {
	  {
	    index = -1;
	    valueStack.length = 0;
	    fiberStack.length = 0;
	  }
	}

	var warnedAboutMissingGetChildContext = void 0;

	{
	  warnedAboutMissingGetChildContext = {};
	}

	// A cursor to the current merged context object on the stack.
	var contextStackCursor = createCursor(emptyObject);
	// A cursor to a boolean indicating whether the context has changed.
	var didPerformWorkStackCursor = createCursor(false);
	// Keep track of the previous context object that was on the stack.
	// We use this to get access to the parent context after we have already
	// pushed the next context provider, and now need to merge their contexts.
	var previousContext = emptyObject;

	function getUnmaskedContext(workInProgress) {
	  var hasOwnContext = isContextProvider(workInProgress);
	  if (hasOwnContext) {
	    // If the fiber is a context provider itself, when we read its context
	    // we have already pushed its own child context on the stack. A context
	    // provider should not "see" its own child context. Therefore we read the
	    // previous (parent) context instead for a context provider.
	    return previousContext;
	  }
	  return contextStackCursor.current;
	}

	function cacheContext(workInProgress, unmaskedContext, maskedContext) {
	  var instance = workInProgress.stateNode;
	  instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
	  instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
	}

	function getMaskedContext(workInProgress, unmaskedContext) {
	  var type = workInProgress.type;
	  var contextTypes = type.contextTypes;
	  if (!contextTypes) {
	    return emptyObject;
	  }

	  // Avoid recreating masked context unless unmasked context has changed.
	  // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
	  // This may trigger infinite loops if componentWillReceiveProps calls setState.
	  var instance = workInProgress.stateNode;
	  if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
	    return instance.__reactInternalMemoizedMaskedChildContext;
	  }

	  var context = {};
	  for (var key in contextTypes) {
	    context[key] = unmaskedContext[key];
	  }

	  {
	    var name = getComponentName(workInProgress) || 'Unknown';
	    checkPropTypes(contextTypes, context, 'context', name, ReactDebugCurrentFiber.getCurrentFiberStackAddendum);
	  }

	  // Cache unmasked context so we can avoid recreating masked context unless necessary.
	  // Context is created before the class component is instantiated so check for instance.
	  if (instance) {
	    cacheContext(workInProgress, unmaskedContext, context);
	  }

	  return context;
	}

	function hasContextChanged() {
	  return didPerformWorkStackCursor.current;
	}

	function isContextConsumer(fiber) {
	  return fiber.tag === ClassComponent && fiber.type.contextTypes != null;
	}

	function isContextProvider(fiber) {
	  return fiber.tag === ClassComponent && fiber.type.childContextTypes != null;
	}

	function popContextProvider(fiber) {
	  if (!isContextProvider(fiber)) {
	    return;
	  }

	  pop(didPerformWorkStackCursor, fiber);
	  pop(contextStackCursor, fiber);
	}

	function popTopLevelContextObject(fiber) {
	  pop(didPerformWorkStackCursor, fiber);
	  pop(contextStackCursor, fiber);
	}

	function pushTopLevelContextObject(fiber, context, didChange) {
	  !(contextStackCursor.current === emptyObject) ? invariant(false, 'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	  push(contextStackCursor, context, fiber);
	  push(didPerformWorkStackCursor, didChange, fiber);
	}

	function processChildContext(fiber, parentContext) {
	  var instance = fiber.stateNode;
	  var childContextTypes = fiber.type.childContextTypes;

	  // TODO (bvaughn) Replace this behavior with an invariant() in the future.
	  // It has only been added in Fiber to match the (unintentional) behavior in Stack.
	  if (typeof instance.getChildContext !== 'function') {
	    {
	      var componentName = getComponentName(fiber) || 'Unknown';

	      if (!warnedAboutMissingGetChildContext[componentName]) {
	        warnedAboutMissingGetChildContext[componentName] = true;
	        warning(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
	      }
	    }
	    return parentContext;
	  }

	  var childContext = void 0;
	  {
	    ReactDebugCurrentFiber.setCurrentPhase('getChildContext');
	  }
	  startPhaseTimer(fiber, 'getChildContext');
	  childContext = instance.getChildContext();
	  stopPhaseTimer();
	  {
	    ReactDebugCurrentFiber.setCurrentPhase(null);
	  }
	  for (var contextKey in childContext) {
	    !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName(fiber) || 'Unknown', contextKey) : void 0;
	  }
	  {
	    var name = getComponentName(fiber) || 'Unknown';
	    checkPropTypes(childContextTypes, childContext, 'child context', name,
	    // In practice, there is one case in which we won't get a stack. It's when
	    // somebody calls unstable_renderSubtreeIntoContainer() and we process
	    // context from the parent component instance. The stack will be missing
	    // because it's outside of the reconciliation, and so the pointer has not
	    // been set. This is rare and doesn't matter. We'll also remove that API.
	    ReactDebugCurrentFiber.getCurrentFiberStackAddendum);
	  }

	  return _assign({}, parentContext, childContext);
	}

	function pushContextProvider(workInProgress) {
	  if (!isContextProvider(workInProgress)) {
	    return false;
	  }

	  var instance = workInProgress.stateNode;
	  // We push the context as early as possible to ensure stack integrity.
	  // If the instance does not exist yet, we will push null at first,
	  // and replace it on the stack later when invalidating the context.
	  var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyObject;

	  // Remember the parent context so we can merge with it later.
	  // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
	  previousContext = contextStackCursor.current;
	  push(contextStackCursor, memoizedMergedChildContext, workInProgress);
	  push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);

	  return true;
	}

	function invalidateContextProvider(workInProgress, didChange) {
	  var instance = workInProgress.stateNode;
	  !instance ? invariant(false, 'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	  if (didChange) {
	    // Merge parent and own context.
	    // Skip this if we're not updating due to sCU.
	    // This avoids unnecessarily recomputing memoized values.
	    var mergedContext = processChildContext(workInProgress, previousContext);
	    instance.__reactInternalMemoizedMergedChildContext = mergedContext;

	    // Replace the old (or empty) context with the new one.
	    // It is important to unwind the context in the reverse order.
	    pop(didPerformWorkStackCursor, workInProgress);
	    pop(contextStackCursor, workInProgress);
	    // Now push the new context and mark that it has changed.
	    push(contextStackCursor, mergedContext, workInProgress);
	    push(didPerformWorkStackCursor, didChange, workInProgress);
	  } else {
	    pop(didPerformWorkStackCursor, workInProgress);
	    push(didPerformWorkStackCursor, didChange, workInProgress);
	  }
	}

	function findCurrentUnmaskedContext(fiber) {
	  // Currently this is only used with renderSubtreeIntoContainer; not sure if it
	  // makes sense elsewhere
	  !(isFiberMounted(fiber) && fiber.tag === ClassComponent) ? invariant(false, 'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	  var node = fiber;
	  while (node.tag !== HostRoot) {
	    if (isContextProvider(node)) {
	      return node.stateNode.__reactInternalMemoizedMergedChildContext;
	    }
	    var parent = node.return;
	    !parent ? invariant(false, 'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	    node = parent;
	  }
	  return node.stateNode.context;
	}

	// Max 31 bit integer. The max integer size in V8 for 32-bit systems.
	// Math.pow(2, 30) - 1
	// 0b111111111111111111111111111111
	var MAX_SIGNED_31_BIT_INT = 1073741823;

	// TODO: Use an opaque type once ESLint et al support the syntax


	var NoWork = 0;
	var Sync = 1;
	var Never = MAX_SIGNED_31_BIT_INT;

	var UNIT_SIZE = 10;
	var MAGIC_NUMBER_OFFSET = 2;

	// 1 unit of expiration time represents 10ms.
	function msToExpirationTime(ms) {
	  // Always add an offset so that we don't clash with the magic number for NoWork.
	  return (ms / UNIT_SIZE | 0) + MAGIC_NUMBER_OFFSET;
	}

	function expirationTimeToMs(expirationTime) {
	  return (expirationTime - MAGIC_NUMBER_OFFSET) * UNIT_SIZE;
	}

	function ceiling(num, precision) {
	  return ((num / precision | 0) + 1) * precision;
	}

	function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
	  return MAGIC_NUMBER_OFFSET + ceiling(currentTime - MAGIC_NUMBER_OFFSET + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
	}

	var NoContext = 0;
	var AsyncMode = 1;
	var StrictMode = 2;
	var ProfileMode = 4;

	var hasBadMapPolyfill = void 0;

	{
	  hasBadMapPolyfill = false;
	  try {
	    var nonExtensibleObject = Object.preventExtensions({});
	    var testMap = new Map([[nonExtensibleObject, null]]);
	    var testSet = new Set([nonExtensibleObject]);
	    // This is necessary for Rollup to not consider these unused.
	    // https://github.com/rollup/rollup/issues/1771
	    // TODO: we can remove these if Rollup fixes the bug.
	    testMap.set(0, 0);
	    testSet.add(0);
	  } catch (e) {
	    // TODO: Consider warning about bad polyfills
	    hasBadMapPolyfill = true;
	  }
	}

	// A Fiber is work on a Component that needs to be done or was done. There can
	// be more than one per component.


	var debugCounter = void 0;

	{
	  debugCounter = 1;
	}

	function FiberNode(tag, pendingProps, key, mode) {
	  // Instance
	  this.tag = tag;
	  this.key = key;
	  this.type = null;
	  this.stateNode = null;

	  // Fiber
	  this.return = null;
	  this.child = null;
	  this.sibling = null;
	  this.index = 0;

	  this.ref = null;

	  this.pendingProps = pendingProps;
	  this.memoizedProps = null;
	  this.updateQueue = null;
	  this.memoizedState = null;

	  this.mode = mode;

	  // Effects
	  this.effectTag = NoEffect;
	  this.nextEffect = null;

	  this.firstEffect = null;
	  this.lastEffect = null;

	  this.expirationTime = NoWork;

	  this.alternate = null;

	  if (enableProfilerTimer) {
	    this.actualDuration = 0;
	    this.actualStartTime = 0;
	    this.selfBaseTime = 0;
	    this.treeBaseTime = 0;
	  }

	  {
	    this._debugID = debugCounter++;
	    this._debugSource = null;
	    this._debugOwner = null;
	    this._debugIsCurrentlyTiming = false;
	    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
	      Object.preventExtensions(this);
	    }
	  }
	}

	// This is a constructor function, rather than a POJO constructor, still
	// please ensure we do the following:
	// 1) Nobody should add any instance methods on this. Instance methods can be
	//    more difficult to predict when they get optimized and they are almost
	//    never inlined properly in static compilers.
	// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
	//    always know when it is a fiber.
	// 3) We might want to experiment with using numeric keys since they are easier
	//    to optimize in a non-JIT environment.
	// 4) We can easily go from a constructor to a createFiber object literal if that
	//    is faster.
	// 5) It should be easy to port this to a C struct and keep a C implementation
	//    compatible.
	var createFiber = function (tag, pendingProps, key, mode) {
	  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
	  return new FiberNode(tag, pendingProps, key, mode);
	};

	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}

	// This is used to create an alternate fiber to do work on.
	function createWorkInProgress(current, pendingProps, expirationTime) {
	  var workInProgress = current.alternate;
	  if (workInProgress === null) {
	    // We use a double buffering pooling technique because we know that we'll
	    // only ever need at most two versions of a tree. We pool the "other" unused
	    // node that we're free to reuse. This is lazily created to avoid allocating
	    // extra objects for things that are never updated. It also allow us to
	    // reclaim the extra memory if needed.
	    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
	    workInProgress.type = current.type;
	    workInProgress.stateNode = current.stateNode;

	    {
	      // DEV-only fields
	      workInProgress._debugID = current._debugID;
	      workInProgress._debugSource = current._debugSource;
	      workInProgress._debugOwner = current._debugOwner;
	    }

	    workInProgress.alternate = current;
	    current.alternate = workInProgress;
	  } else {
	    workInProgress.pendingProps = pendingProps;

	    // We already have an alternate.
	    // Reset the effect tag.
	    workInProgress.effectTag = NoEffect;

	    // The effect list is no longer valid.
	    workInProgress.nextEffect = null;
	    workInProgress.firstEffect = null;
	    workInProgress.lastEffect = null;

	    if (enableProfilerTimer) {
	      // We intentionally reset, rather than copy, actualDuration & actualStartTime.
	      // This prevents time from endlessly accumulating in new commits.
	      // This has the downside of resetting values for different priority renders,
	      // But works for yielding (the common case) and should support resuming.
	      workInProgress.actualDuration = 0;
	      workInProgress.actualStartTime = 0;
	    }
	  }

	  workInProgress.expirationTime = expirationTime;

	  workInProgress.child = current.child;
	  workInProgress.memoizedProps = current.memoizedProps;
	  workInProgress.memoizedState = current.memoizedState;
	  workInProgress.updateQueue = current.updateQueue;

	  // These will be overridden during the parent's reconciliation
	  workInProgress.sibling = current.sibling;
	  workInProgress.index = current.index;
	  workInProgress.ref = current.ref;

	  if (enableProfilerTimer) {
	    workInProgress.selfBaseTime = current.selfBaseTime;
	    workInProgress.treeBaseTime = current.treeBaseTime;
	  }

	  return workInProgress;
	}

	function createHostRootFiber(isAsync) {
	  var mode = isAsync ? AsyncMode | StrictMode : NoContext;
	  return createFiber(HostRoot, null, null, mode);
	}

	function createFiberFromElement(element, mode, expirationTime) {
	  var owner = null;
	  {
	    owner = element._owner;
	  }

	  var fiber = void 0;
	  var type = element.type;
	  var key = element.key;
	  var pendingProps = element.props;

	  var fiberTag = void 0;
	  if (typeof type === 'function') {
	    fiberTag = shouldConstruct(type) ? ClassComponent : IndeterminateComponent;
	  } else if (typeof type === 'string') {
	    fiberTag = HostComponent;
	  } else {
	    switch (type) {
	      case REACT_FRAGMENT_TYPE:
	        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);
	      case REACT_ASYNC_MODE_TYPE:
	        fiberTag = Mode;
	        mode |= AsyncMode | StrictMode;
	        break;
	      case REACT_STRICT_MODE_TYPE:
	        fiberTag = Mode;
	        mode |= StrictMode;
	        break;
	      case REACT_PROFILER_TYPE:
	        return createFiberFromProfiler(pendingProps, mode, expirationTime, key);
	      case REACT_TIMEOUT_TYPE:
	        fiberTag = TimeoutComponent;
	        // Suspense does not require async, but its children should be strict
	        // mode compatible.
	        mode |= StrictMode;
	        break;
	      default:
	        fiberTag = getFiberTagFromObjectType(type, owner);
	        break;
	    }
	  }

	  fiber = createFiber(fiberTag, pendingProps, key, mode);
	  fiber.type = type;
	  fiber.expirationTime = expirationTime;

	  {
	    fiber._debugSource = element._source;
	    fiber._debugOwner = element._owner;
	  }

	  return fiber;
	}

	function getFiberTagFromObjectType(type, owner) {
	  var $$typeof = typeof type === 'object' && type !== null ? type.$$typeof : null;

	  switch ($$typeof) {
	    case REACT_PROVIDER_TYPE:
	      return ContextProvider;
	    case REACT_CONTEXT_TYPE:
	      // This is a consumer
	      return ContextConsumer;
	    case REACT_FORWARD_REF_TYPE:
	      return ForwardRef;
	    default:
	      {
	        var info = '';
	        {
	          if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	            info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
	          }
	          var ownerName = owner ? getComponentName(owner) : null;
	          if (ownerName) {
	            info += '\n\nCheck the render method of `' + ownerName + '`.';
	          }
	        }
	        invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);
	      }
	  }
	}

	function createFiberFromFragment(elements, mode, expirationTime, key) {
	  var fiber = createFiber(Fragment, elements, key, mode);
	  fiber.expirationTime = expirationTime;
	  return fiber;
	}

	function createFiberFromProfiler(pendingProps, mode, expirationTime, key) {
	  {
	    if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {
	      invariant(false, 'Profiler must specify an "id" string and "onRender" function as props');
	    }
	  }

	  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
	  fiber.type = REACT_PROFILER_TYPE;
	  fiber.expirationTime = expirationTime;

	  return fiber;
	}

	function createFiberFromText(content, mode, expirationTime) {
	  var fiber = createFiber(HostText, content, null, mode);
	  fiber.expirationTime = expirationTime;
	  return fiber;
	}

	function createFiberFromHostInstanceForDeletion() {
	  var fiber = createFiber(HostComponent, null, null, NoContext);
	  fiber.type = 'DELETED';
	  return fiber;
	}

	function createFiberFromPortal(portal, mode, expirationTime) {
	  var pendingProps = portal.children !== null ? portal.children : [];
	  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
	  fiber.expirationTime = expirationTime;
	  fiber.stateNode = {
	    containerInfo: portal.containerInfo,
	    pendingChildren: null, // Used by persistent updates
	    implementation: portal.implementation
	  };
	  return fiber;
	}

	// Used for stashing WIP properties to replay failed work in DEV.
	function assignFiberPropertiesInDEV(target, source) {
	  if (target === null) {
	    // This Fiber's initial properties will always be overwritten.
	    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
	    target = createFiber(IndeterminateComponent, null, null, NoContext);
	  }

	  // This is intentionally written as a list of all properties.
	  // We tried to use Object.assign() instead but this is called in
	  // the hottest path, and Object.assign() was too slow:
	  // https://github.com/facebook/react/issues/12502
	  // This code is DEV-only so size is not a concern.

	  target.tag = source.tag;
	  target.key = source.key;
	  target.type = source.type;
	  target.stateNode = source.stateNode;
	  target.return = source.return;
	  target.child = source.child;
	  target.sibling = source.sibling;
	  target.index = source.index;
	  target.ref = source.ref;
	  target.pendingProps = source.pendingProps;
	  target.memoizedProps = source.memoizedProps;
	  target.updateQueue = source.updateQueue;
	  target.memoizedState = source.memoizedState;
	  target.mode = source.mode;
	  target.effectTag = source.effectTag;
	  target.nextEffect = source.nextEffect;
	  target.firstEffect = source.firstEffect;
	  target.lastEffect = source.lastEffect;
	  target.expirationTime = source.expirationTime;
	  target.alternate = source.alternate;
	  if (enableProfilerTimer) {
	    target.actualDuration = source.actualDuration;
	    target.actualStartTime = source.actualStartTime;
	    target.selfBaseTime = source.selfBaseTime;
	    target.treeBaseTime = source.treeBaseTime;
	  }
	  target._debugID = source._debugID;
	  target._debugSource = source._debugSource;
	  target._debugOwner = source._debugOwner;
	  target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;
	  return target;
	}

	// TODO: This should be lifted into the renderer.


	function createFiberRoot(containerInfo, isAsync, hydrate) {
	  // Cyclic construction. This cheats the type system right now because
	  // stateNode is any.
	  var uninitializedFiber = createHostRootFiber(isAsync);
	  var root = {
	    current: uninitializedFiber,
	    containerInfo: containerInfo,
	    pendingChildren: null,

	    earliestPendingTime: NoWork,
	    latestPendingTime: NoWork,
	    earliestSuspendedTime: NoWork,
	    latestSuspendedTime: NoWork,
	    latestPingedTime: NoWork,

	    pendingCommitExpirationTime: NoWork,
	    finishedWork: null,
	    context: null,
	    pendingContext: null,
	    hydrate: hydrate,
	    remainingExpirationTime: NoWork,
	    firstBatch: null,
	    nextScheduledRoot: null
	  };
	  uninitializedFiber.stateNode = root;
	  return root;
	}

	var onCommitFiberRoot = null;
	var onCommitFiberUnmount = null;
	var hasLoggedError = false;

	function catchErrors(fn) {
	  return function (arg) {
	    try {
	      return fn(arg);
	    } catch (err) {
	      if (true && !hasLoggedError) {
	        hasLoggedError = true;
	        warning(false, 'React DevTools encountered an error: %s', err);
	      }
	    }
	  };
	}

	function injectInternals(internals) {
	  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	    // No DevTools
	    return false;
	  }
	  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
	  if (hook.isDisabled) {
	    // This isn't a real property on the hook, but it can be set to opt out
	    // of DevTools integration and associated warnings and logs.
	    // https://github.com/facebook/react/issues/3877
	    return true;
	  }
	  if (!hook.supportsFiber) {
	    {
	      warning(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
	    }
	    // DevTools exists, even though it doesn't support Fiber.
	    return true;
	  }
	  try {
	    var rendererID = hook.inject(internals);
	    // We have successfully injected, so now it is safe to set up hooks.
	    onCommitFiberRoot = catchErrors(function (root) {
	      return hook.onCommitFiberRoot(rendererID, root);
	    });
	    onCommitFiberUnmount = catchErrors(function (fiber) {
	      return hook.onCommitFiberUnmount(rendererID, fiber);
	    });
	  } catch (err) {
	    // Catch all errors because it is unsafe to throw during initialization.
	    {
	      warning(false, 'React DevTools encountered an error: %s.', err);
	    }
	  }
	  // DevTools exists
	  return true;
	}

	function onCommitRoot(root) {
	  if (typeof onCommitFiberRoot === 'function') {
	    onCommitFiberRoot(root);
	  }
	}

	function onCommitUnmount(fiber) {
	  if (typeof onCommitFiberUnmount === 'function') {
	    onCommitFiberUnmount(fiber);
	  }
	}

	/**
	 * Forked from fbjs/warning:
	 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
	 *
	 * Only change is we use console.warn instead of console.error,
	 * and do nothing when 'console' is not supported.
	 * This really simplifies the code.
	 * ---
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var lowPriorityWarning = function () {};

	{
	  var printWarning = function (format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.warn(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  lowPriorityWarning = function (condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	var lowPriorityWarning$1 = lowPriorityWarning;

	var ReactStrictModeWarnings = {
	  discardPendingWarnings: function () {},
	  flushPendingDeprecationWarnings: function () {},
	  flushPendingUnsafeLifecycleWarnings: function () {},
	  recordDeprecationWarnings: function (fiber, instance) {},
	  recordUnsafeLifecycleWarnings: function (fiber, instance) {},
	  recordLegacyContextWarning: function (fiber, instance) {},
	  flushLegacyContextWarning: function () {}
	};

	{
	  var LIFECYCLE_SUGGESTIONS = {
	    UNSAFE_componentWillMount: 'componentDidMount',
	    UNSAFE_componentWillReceiveProps: 'static getDerivedStateFromProps',
	    UNSAFE_componentWillUpdate: 'componentDidUpdate'
	  };

	  var pendingComponentWillMountWarnings = [];
	  var pendingComponentWillReceivePropsWarnings = [];
	  var pendingComponentWillUpdateWarnings = [];
	  var pendingUnsafeLifecycleWarnings = new Map();
	  var pendingLegacyContextWarning = new Map();

	  // Tracks components we have already warned about.
	  var didWarnAboutDeprecatedLifecycles = new Set();
	  var didWarnAboutUnsafeLifecycles = new Set();
	  var didWarnAboutLegacyContext = new Set();

	  var setToSortedString = function (set) {
	    var array = [];
	    set.forEach(function (value) {
	      array.push(value);
	    });
	    return array.sort().join(', ');
	  };

	  ReactStrictModeWarnings.discardPendingWarnings = function () {
	    pendingComponentWillMountWarnings = [];
	    pendingComponentWillReceivePropsWarnings = [];
	    pendingComponentWillUpdateWarnings = [];
	    pendingUnsafeLifecycleWarnings = new Map();
	    pendingLegacyContextWarning = new Map();
	  };

	  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
	    pendingUnsafeLifecycleWarnings.forEach(function (lifecycleWarningsMap, strictRoot) {
	      var lifecyclesWarningMesages = [];

	      Object.keys(lifecycleWarningsMap).forEach(function (lifecycle) {
	        var lifecycleWarnings = lifecycleWarningsMap[lifecycle];
	        if (lifecycleWarnings.length > 0) {
	          var componentNames = new Set();
	          lifecycleWarnings.forEach(function (fiber) {
	            componentNames.add(getComponentName(fiber) || 'Component');
	            didWarnAboutUnsafeLifecycles.add(fiber.type);
	          });

	          var formatted = lifecycle.replace('UNSAFE_', '');
	          var suggestion = LIFECYCLE_SUGGESTIONS[lifecycle];
	          var sortedComponentNames = setToSortedString(componentNames);

	          lifecyclesWarningMesages.push(formatted + ': Please update the following components to use ' + (suggestion + ' instead: ' + sortedComponentNames));
	        }
	      });

	      if (lifecyclesWarningMesages.length > 0) {
	        var strictRootComponentStack = getStackAddendumByWorkInProgressFiber(strictRoot);

	        warning(false, 'Unsafe lifecycle methods were found within a strict-mode tree:%s' + '\n\n%s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, lifecyclesWarningMesages.join('\n\n'));
	      }
	    });

	    pendingUnsafeLifecycleWarnings = new Map();
	  };

	  var findStrictRoot = function (fiber) {
	    var maybeStrictRoot = null;

	    var node = fiber;
	    while (node !== null) {
	      if (node.mode & StrictMode) {
	        maybeStrictRoot = node;
	      }
	      node = node.return;
	    }

	    return maybeStrictRoot;
	  };

	  ReactStrictModeWarnings.flushPendingDeprecationWarnings = function () {
	    if (pendingComponentWillMountWarnings.length > 0) {
	      var uniqueNames = new Set();
	      pendingComponentWillMountWarnings.forEach(function (fiber) {
	        uniqueNames.add(getComponentName(fiber) || 'Component');
	        didWarnAboutDeprecatedLifecycles.add(fiber.type);
	      });

	      var sortedNames = setToSortedString(uniqueNames);

	      lowPriorityWarning$1(false, 'componentWillMount is deprecated and will be removed in the next major version. ' + 'Use componentDidMount instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillMount.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', sortedNames);

	      pendingComponentWillMountWarnings = [];
	    }

	    if (pendingComponentWillReceivePropsWarnings.length > 0) {
	      var _uniqueNames = new Set();
	      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
	        _uniqueNames.add(getComponentName(fiber) || 'Component');
	        didWarnAboutDeprecatedLifecycles.add(fiber.type);
	      });

	      var _sortedNames = setToSortedString(_uniqueNames);

	      lowPriorityWarning$1(false, 'componentWillReceiveProps is deprecated and will be removed in the next major version. ' + 'Use static getDerivedStateFromProps instead.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames);

	      pendingComponentWillReceivePropsWarnings = [];
	    }

	    if (pendingComponentWillUpdateWarnings.length > 0) {
	      var _uniqueNames2 = new Set();
	      pendingComponentWillUpdateWarnings.forEach(function (fiber) {
	        _uniqueNames2.add(getComponentName(fiber) || 'Component');
	        didWarnAboutDeprecatedLifecycles.add(fiber.type);
	      });

	      var _sortedNames2 = setToSortedString(_uniqueNames2);

	      lowPriorityWarning$1(false, 'componentWillUpdate is deprecated and will be removed in the next major version. ' + 'Use componentDidUpdate instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillUpdate.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames2);

	      pendingComponentWillUpdateWarnings = [];
	    }
	  };

	  ReactStrictModeWarnings.recordDeprecationWarnings = function (fiber, instance) {
	    // Dedup strategy: Warn once per component.
	    if (didWarnAboutDeprecatedLifecycles.has(fiber.type)) {
	      return;
	    }

	    // Don't warn about react-lifecycles-compat polyfilled components.
	    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
	      pendingComponentWillMountWarnings.push(fiber);
	    }
	    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
	      pendingComponentWillReceivePropsWarnings.push(fiber);
	    }
	    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
	      pendingComponentWillUpdateWarnings.push(fiber);
	    }
	  };

	  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
	    var strictRoot = findStrictRoot(fiber);
	    if (strictRoot === null) {
	      warning(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
	      return;
	    }

	    // Dedup strategy: Warn once per component.
	    // This is difficult to track any other way since component names
	    // are often vague and are likely to collide between 3rd party libraries.
	    // An expand property is probably okay to use here since it's DEV-only,
	    // and will only be set in the event of serious warnings.
	    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
	      return;
	    }

	    var warningsForRoot = void 0;
	    if (!pendingUnsafeLifecycleWarnings.has(strictRoot)) {
	      warningsForRoot = {
	        UNSAFE_componentWillMount: [],
	        UNSAFE_componentWillReceiveProps: [],
	        UNSAFE_componentWillUpdate: []
	      };

	      pendingUnsafeLifecycleWarnings.set(strictRoot, warningsForRoot);
	    } else {
	      warningsForRoot = pendingUnsafeLifecycleWarnings.get(strictRoot);
	    }

	    var unsafeLifecycles = [];
	    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillMount === 'function') {
	      unsafeLifecycles.push('UNSAFE_componentWillMount');
	    }
	    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
	      unsafeLifecycles.push('UNSAFE_componentWillReceiveProps');
	    }
	    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillUpdate === 'function') {
	      unsafeLifecycles.push('UNSAFE_componentWillUpdate');
	    }

	    if (unsafeLifecycles.length > 0) {
	      unsafeLifecycles.forEach(function (lifecycle) {
	        warningsForRoot[lifecycle].push(fiber);
	      });
	    }
	  };

	  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
	    var strictRoot = findStrictRoot(fiber);
	    if (strictRoot === null) {
	      warning(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
	      return;
	    }

	    // Dedup strategy: Warn once per component.
	    if (didWarnAboutLegacyContext.has(fiber.type)) {
	      return;
	    }

	    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

	    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
	      if (warningsForRoot === undefined) {
	        warningsForRoot = [];
	        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
	      }
	      warningsForRoot.push(fiber);
	    }
	  };

	  ReactStrictModeWarnings.flushLegacyContextWarning = function () {
	    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
	      var uniqueNames = new Set();
	      fiberArray.forEach(function (fiber) {
	        uniqueNames.add(getComponentName(fiber) || 'Component');
	        didWarnAboutLegacyContext.add(fiber.type);
	      });

	      var sortedNames = setToSortedString(uniqueNames);
	      var strictRootComponentStack = getStackAddendumByWorkInProgressFiber(strictRoot);

	      warning(false, 'Legacy context API has been detected within a strict-mode tree: %s' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, sortedNames);
	    });
	  };
	}

	// This lets us hook into Fiber to debug what it's doing.
	// See https://github.com/facebook/react/pull/8033.
	// This is not part of the public API, not even for React DevTools.
	// You may only inject a debugTool if you work on React Fiber itself.
	var ReactFiberInstrumentation = {
	  debugTool: null
	};

	var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;

	// TODO: Offscreen updates

	function markPendingPriorityLevel(root, expirationTime) {
	  if (enableSuspense) {
	    // Update the latest and earliest pending times
	    var earliestPendingTime = root.earliestPendingTime;
	    if (earliestPendingTime === NoWork) {
	      // No other pending updates.
	      root.earliestPendingTime = root.latestPendingTime = expirationTime;
	    } else {
	      if (earliestPendingTime > expirationTime) {
	        // This is the earliest pending update.
	        root.earliestPendingTime = expirationTime;
	      } else {
	        var latestPendingTime = root.latestPendingTime;
	        if (latestPendingTime < expirationTime) {
	          // This is the latest pending update
	          root.latestPendingTime = expirationTime;
	        }
	      }
	    }
	  }
	}

	function markCommittedPriorityLevels(root, currentTime, earliestRemainingTime) {
	  if (enableSuspense) {
	    if (earliestRemainingTime === NoWork) {
	      // Fast path. There's no remaining work. Clear everything.
	      root.earliestPendingTime = NoWork;
	      root.latestPendingTime = NoWork;
	      root.earliestSuspendedTime = NoWork;
	      root.latestSuspendedTime = NoWork;
	      root.latestPingedTime = NoWork;
	      return;
	    }

	    // Let's see if the previous latest known pending level was just flushed.
	    var latestPendingTime = root.latestPendingTime;
	    if (latestPendingTime !== NoWork) {
	      if (latestPendingTime < earliestRemainingTime) {
	        // We've flushed all the known pending levels.
	        root.earliestPendingTime = root.latestPendingTime = NoWork;
	      } else {
	        var earliestPendingTime = root.earliestPendingTime;
	        if (earliestPendingTime < earliestRemainingTime) {
	          // We've flushed the earliest known pending level. Set this to the
	          // latest pending time.
	          root.earliestPendingTime = root.latestPendingTime;
	        }
	      }
	    }

	    // Now let's handle the earliest remaining level in the whole tree. We need to
	    // decide whether to treat it as a pending level or as suspended. Check
	    // it falls within the range of known suspended levels.

	    var earliestSuspendedTime = root.earliestSuspendedTime;
	    if (earliestSuspendedTime === NoWork) {
	      // There's no suspended work. Treat the earliest remaining level as a
	      // pending level.
	      markPendingPriorityLevel(root, earliestRemainingTime);
	      return;
	    }

	    var latestSuspendedTime = root.latestSuspendedTime;
	    if (earliestRemainingTime > latestSuspendedTime) {
	      // The earliest remaining level is later than all the suspended work. That
	      // means we've flushed all the suspended work.
	      root.earliestSuspendedTime = NoWork;
	      root.latestSuspendedTime = NoWork;
	      root.latestPingedTime = NoWork;

	      // There's no suspended work. Treat the earliest remaining level as a
	      // pending level.
	      markPendingPriorityLevel(root, earliestRemainingTime);
	      return;
	    }

	    if (earliestRemainingTime < earliestSuspendedTime) {
	      // The earliest remaining time is earlier than all the suspended work.
	      // Treat it as a pending update.
	      markPendingPriorityLevel(root, earliestRemainingTime);
	      return;
	    }

	    // The earliest remaining time falls within the range of known suspended
	    // levels. We should treat this as suspended work.
	  }
	}

	function markSuspendedPriorityLevel(root, suspendedTime) {
	  if (enableSuspense) {
	    // First, check the known pending levels and update them if needed.
	    var earliestPendingTime = root.earliestPendingTime;
	    var latestPendingTime = root.latestPendingTime;
	    if (earliestPendingTime === suspendedTime) {
	      if (latestPendingTime === suspendedTime) {
	        // Both known pending levels were suspended. Clear them.
	        root.earliestPendingTime = root.latestPendingTime = NoWork;
	      } else {
	        // The earliest pending level was suspended. Clear by setting it to the
	        // latest pending level.
	        root.earliestPendingTime = latestPendingTime;
	      }
	    } else if (latestPendingTime === suspendedTime) {
	      // The latest pending level was suspended. Clear by setting it to the
	      // latest pending level.
	      root.latestPendingTime = earliestPendingTime;
	    }

	    // Next, if we're working on the lowest known suspended level, clear the ping.
	    // TODO: What if a promise suspends and pings before the root completes?
	    var latestSuspendedTime = root.latestSuspendedTime;
	    if (latestSuspendedTime === suspendedTime) {
	      root.latestPingedTime = NoWork;
	    }

	    // Finally, update the known suspended levels.
	    var earliestSuspendedTime = root.earliestSuspendedTime;
	    if (earliestSuspendedTime === NoWork) {
	      // No other suspended levels.
	      root.earliestSuspendedTime = root.latestSuspendedTime = suspendedTime;
	    } else {
	      if (earliestSuspendedTime > suspendedTime) {
	        // This is the earliest suspended level.
	        root.earliestSuspendedTime = suspendedTime;
	      } else if (latestSuspendedTime < suspendedTime) {
	        // This is the latest suspended level
	        root.latestSuspendedTime = suspendedTime;
	      }
	    }
	  }
	}

	function markPingedPriorityLevel(root, pingedTime) {
	  if (enableSuspense) {
	    var latestSuspendedTime = root.latestSuspendedTime;
	    if (latestSuspendedTime !== NoWork && latestSuspendedTime <= pingedTime) {
	      var latestPingedTime = root.latestPingedTime;
	      if (latestPingedTime === NoWork || latestPingedTime < pingedTime) {
	        root.latestPingedTime = pingedTime;
	      }
	    }
	  }
	}

	function findNextPendingPriorityLevel(root) {
	  if (enableSuspense) {
	    var earliestSuspendedTime = root.earliestSuspendedTime;
	    var earliestPendingTime = root.earliestPendingTime;
	    if (earliestSuspendedTime === NoWork) {
	      // Fast path. There's no suspended work.
	      return earliestPendingTime;
	    }

	    // First, check if there's known pending work.
	    if (earliestPendingTime !== NoWork) {
	      return earliestPendingTime;
	    }

	    // Finally, if a suspended level was pinged, work on that. Otherwise there's
	    // nothing to work on.
	    return root.latestPingedTime;
	  } else {
	    return root.current.expirationTime;
	  }
	}

	// UpdateQueue is a linked list of prioritized updates.
	//
	// Like fibers, update queues come in pairs: a current queue, which represents
	// the visible state of the screen, and a work-in-progress queue, which is
	// can be mutated and processed asynchronously before it is committed — a form
	// of double buffering. If a work-in-progress render is discarded before
	// finishing, we create a new work-in-progress by cloning the current queue.
	//
	// Both queues share a persistent, singly-linked list structure. To schedule an
	// update, we append it to the end of both queues. Each queue maintains a
	// pointer to first update in the persistent list that hasn't been processed.
	// The work-in-progress pointer always has a position equal to or greater than
	// the current queue, since we always work on that one. The current queue's
	// pointer is only updated during the commit phase, when we swap in the
	// work-in-progress.
	//
	// For example:
	//
	//   Current pointer:           A - B - C - D - E - F
	//   Work-in-progress pointer:              D - E - F
	//                                          ^
	//                                          The work-in-progress queue has
	//                                          processed more updates than current.
	//
	// The reason we append to both queues is because otherwise we might drop
	// updates without ever processing them. For example, if we only add updates to
	// the work-in-progress queue, some updates could be lost whenever a work-in
	// -progress render restarts by cloning from current. Similarly, if we only add
	// updates to the current queue, the updates will be lost whenever an already
	// in-progress queue commits and swaps with the current queue. However, by
	// adding to both queues, we guarantee that the update will be part of the next
	// work-in-progress. (And because the work-in-progress queue becomes the
	// current queue once it commits, there's no danger of applying the same
	// update twice.)
	//
	// Prioritization
	// --------------
	//
	// Updates are not sorted by priority, but by insertion; new updates are always
	// appended to the end of the list.
	//
	// The priority is still important, though. When processing the update queue
	// during the render phase, only the updates with sufficient priority are
	// included in the result. If we skip an update because it has insufficient
	// priority, it remains in the queue to be processed later, during a lower
	// priority render. Crucially, all updates subsequent to a skipped update also
	// remain in the queue *regardless of their priority*. That means high priority
	// updates are sometimes processed twice, at two separate priorities. We also
	// keep track of a base state, that represents the state before the first
	// update in the queue is applied.
	//
	// For example:
	//
	//   Given a base state of '', and the following queue of updates
	//
	//     A1 - B2 - C1 - D2
	//
	//   where the number indicates the priority, and the update is applied to the
	//   previous state by appending a letter, React will process these updates as
	//   two separate renders, one per distinct priority level:
	//
	//   First render, at priority 1:
	//     Base state: ''
	//     Updates: [A1, C1]
	//     Result state: 'AC'
	//
	//   Second render, at priority 2:
	//     Base state: 'A'            <-  The base state does not include C1,
	//                                    because B2 was skipped.
	//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2
	//     Result state: 'ABCD'
	//
	// Because we process updates in insertion order, and rebase high priority
	// updates when preceding updates are skipped, the final result is deterministic
	// regardless of priority. Intermediate state may vary according to system
	// resources, but the final state is always the same.

	var UpdateState = 0;
	var ReplaceState = 1;
	var ForceUpdate = 2;
	var CaptureUpdate = 3;

	// Global state that is reset at the beginning of calling `processUpdateQueue`.
	// It should only be read right after calling `processUpdateQueue`, via
	// `checkHasForceUpdateAfterProcessing`.
	var hasForceUpdate = false;

	var didWarnUpdateInsideUpdate = void 0;
	var currentlyProcessingQueue = void 0;
	var resetCurrentlyProcessingQueue = void 0;
	{
	  didWarnUpdateInsideUpdate = false;
	  currentlyProcessingQueue = null;
	  resetCurrentlyProcessingQueue = function () {
	    currentlyProcessingQueue = null;
	  };
	}

	function createUpdateQueue(baseState) {
	  var queue = {
	    expirationTime: NoWork,
	    baseState: baseState,
	    firstUpdate: null,
	    lastUpdate: null,
	    firstCapturedUpdate: null,
	    lastCapturedUpdate: null,
	    firstEffect: null,
	    lastEffect: null,
	    firstCapturedEffect: null,
	    lastCapturedEffect: null
	  };
	  return queue;
	}

	function cloneUpdateQueue(currentQueue) {
	  var queue = {
	    expirationTime: currentQueue.expirationTime,
	    baseState: currentQueue.baseState,
	    firstUpdate: currentQueue.firstUpdate,
	    lastUpdate: currentQueue.lastUpdate,

	    // TODO: With resuming, if we bail out and resuse the child tree, we should
	    // keep these effects.
	    firstCapturedUpdate: null,
	    lastCapturedUpdate: null,

	    firstEffect: null,
	    lastEffect: null,

	    firstCapturedEffect: null,
	    lastCapturedEffect: null
	  };
	  return queue;
	}

	function createUpdate(expirationTime) {
	  return {
	    expirationTime: expirationTime,

	    tag: UpdateState,
	    payload: null,
	    callback: null,

	    next: null,
	    nextEffect: null
	  };
	}

	function appendUpdateToQueue(queue, update, expirationTime) {
	  // Append the update to the end of the list.
	  if (queue.lastUpdate === null) {
	    // Queue is empty
	    queue.firstUpdate = queue.lastUpdate = update;
	  } else {
	    queue.lastUpdate.next = update;
	    queue.lastUpdate = update;
	  }
	  if (queue.expirationTime === NoWork || queue.expirationTime > expirationTime) {
	    // The incoming update has the earliest expiration of any update in the
	    // queue. Update the queue's expiration time.
	    queue.expirationTime = expirationTime;
	  }
	}

	function enqueueUpdate(fiber, update, expirationTime) {
	  // Update queues are created lazily.
	  var alternate = fiber.alternate;
	  var queue1 = void 0;
	  var queue2 = void 0;
	  if (alternate === null) {
	    // There's only one fiber.
	    queue1 = fiber.updateQueue;
	    queue2 = null;
	    if (queue1 === null) {
	      queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
	    }
	  } else {
	    // There are two owners.
	    queue1 = fiber.updateQueue;
	    queue2 = alternate.updateQueue;
	    if (queue1 === null) {
	      if (queue2 === null) {
	        // Neither fiber has an update queue. Create new ones.
	        queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
	        queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);
	      } else {
	        // Only one fiber has an update queue. Clone to create a new one.
	        queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);
	      }
	    } else {
	      if (queue2 === null) {
	        // Only one fiber has an update queue. Clone to create a new one.
	        queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);
	      } else {
	        // Both owners have an update queue.
	      }
	    }
	  }
	  if (queue2 === null || queue1 === queue2) {
	    // There's only a single queue.
	    appendUpdateToQueue(queue1, update, expirationTime);
	  } else {
	    // There are two queues. We need to append the update to both queues,
	    // while accounting for the persistent structure of the list — we don't
	    // want the same update to be added multiple times.
	    if (queue1.lastUpdate === null || queue2.lastUpdate === null) {
	      // One of the queues is not empty. We must add the update to both queues.
	      appendUpdateToQueue(queue1, update, expirationTime);
	      appendUpdateToQueue(queue2, update, expirationTime);
	    } else {
	      // Both queues are non-empty. The last update is the same in both lists,
	      // because of structural sharing. So, only append to one of the lists.
	      appendUpdateToQueue(queue1, update, expirationTime);
	      // But we still need to update the `lastUpdate` pointer of queue2.
	      queue2.lastUpdate = update;
	    }
	  }

	  {
	    if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {
	      warning(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
	      didWarnUpdateInsideUpdate = true;
	    }
	  }
	}

	function enqueueCapturedUpdate(workInProgress, update, renderExpirationTime) {
	  // Captured updates go into a separate list, and only on the work-in-
	  // progress queue.
	  var workInProgressQueue = workInProgress.updateQueue;
	  if (workInProgressQueue === null) {
	    workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);
	  } else {
	    // TODO: I put this here rather than createWorkInProgress so that we don't
	    // clone the queue unnecessarily. There's probably a better way to
	    // structure this.
	    workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
	  }

	  // Append the update to the end of the list.
	  if (workInProgressQueue.lastCapturedUpdate === null) {
	    // This is the first render phase update
	    workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;
	  } else {
	    workInProgressQueue.lastCapturedUpdate.next = update;
	    workInProgressQueue.lastCapturedUpdate = update;
	  }
	  if (workInProgressQueue.expirationTime === NoWork || workInProgressQueue.expirationTime > renderExpirationTime) {
	    // The incoming update has the earliest expiration of any update in the
	    // queue. Update the queue's expiration time.
	    workInProgressQueue.expirationTime = renderExpirationTime;
	  }
	}

	function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
	  var current = workInProgress.alternate;
	  if (current !== null) {
	    // If the work-in-progress queue is equal to the current queue,
	    // we need to clone it first.
	    if (queue === current.updateQueue) {
	      queue = workInProgress.updateQueue = cloneUpdateQueue(queue);
	    }
	  }
	  return queue;
	}

	function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
	  switch (update.tag) {
	    case ReplaceState:
	      {
	        var _payload = update.payload;
	        if (typeof _payload === 'function') {
	          // Updater function
	          {
	            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	              _payload.call(instance, prevState, nextProps);
	            }
	          }
	          return _payload.call(instance, prevState, nextProps);
	        }
	        // State object
	        return _payload;
	      }
	    case CaptureUpdate:
	      {
	        workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;
	      }
	    // Intentional fallthrough
	    case UpdateState:
	      {
	        var _payload2 = update.payload;
	        var partialState = void 0;
	        if (typeof _payload2 === 'function') {
	          // Updater function
	          {
	            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	              _payload2.call(instance, prevState, nextProps);
	            }
	          }
	          partialState = _payload2.call(instance, prevState, nextProps);
	        } else {
	          // Partial state object
	          partialState = _payload2;
	        }
	        if (partialState === null || partialState === undefined) {
	          // Null and undefined are treated as no-ops.
	          return prevState;
	        }
	        // Merge the partial state and the previous state.
	        return _assign({}, prevState, partialState);
	      }
	    case ForceUpdate:
	      {
	        hasForceUpdate = true;
	        return prevState;
	      }
	  }
	  return prevState;
	}

	function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
	  hasForceUpdate = false;

	  if (queue.expirationTime === NoWork || queue.expirationTime > renderExpirationTime) {
	    // Insufficient priority. Bailout.
	    return;
	  }

	  queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

	  {
	    currentlyProcessingQueue = queue;
	  }

	  // These values may change as we process the queue.
	  var newBaseState = queue.baseState;
	  var newFirstUpdate = null;
	  var newExpirationTime = NoWork;

	  // Iterate through the list of updates to compute the result.
	  var update = queue.firstUpdate;
	  var resultState = newBaseState;
	  while (update !== null) {
	    var updateExpirationTime = update.expirationTime;
	    if (updateExpirationTime > renderExpirationTime) {
	      // This update does not have sufficient priority. Skip it.
	      if (newFirstUpdate === null) {
	        // This is the first skipped update. It will be the first update in
	        // the new list.
	        newFirstUpdate = update;
	        // Since this is the first update that was skipped, the current result
	        // is the new base state.
	        newBaseState = resultState;
	      }
	      // Since this update will remain in the list, update the remaining
	      // expiration time.
	      if (newExpirationTime === NoWork || newExpirationTime > updateExpirationTime) {
	        newExpirationTime = updateExpirationTime;
	      }
	    } else {
	      // This update does have sufficient priority. Process it and compute
	      // a new result.
	      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
	      var _callback = update.callback;
	      if (_callback !== null) {
	        workInProgress.effectTag |= Callback;
	        // Set this to null, in case it was mutated during an aborted render.
	        update.nextEffect = null;
	        if (queue.lastEffect === null) {
	          queue.firstEffect = queue.lastEffect = update;
	        } else {
	          queue.lastEffect.nextEffect = update;
	          queue.lastEffect = update;
	        }
	      }
	    }
	    // Continue to the next update.
	    update = update.next;
	  }

	  // Separately, iterate though the list of captured updates.
	  var newFirstCapturedUpdate = null;
	  update = queue.firstCapturedUpdate;
	  while (update !== null) {
	    var _updateExpirationTime = update.expirationTime;
	    if (_updateExpirationTime > renderExpirationTime) {
	      // This update does not have sufficient priority. Skip it.
	      if (newFirstCapturedUpdate === null) {
	        // This is the first skipped captured update. It will be the first
	        // update in the new list.
	        newFirstCapturedUpdate = update;
	        // If this is the first update that was skipped, the current result is
	        // the new base state.
	        if (newFirstUpdate === null) {
	          newBaseState = resultState;
	        }
	      }
	      // Since this update will remain in the list, update the remaining
	      // expiration time.
	      if (newExpirationTime === NoWork || newExpirationTime > _updateExpirationTime) {
	        newExpirationTime = _updateExpirationTime;
	      }
	    } else {
	      // This update does have sufficient priority. Process it and compute
	      // a new result.
	      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
	      var _callback2 = update.callback;
	      if (_callback2 !== null) {
	        workInProgress.effectTag |= Callback;
	        // Set this to null, in case it was mutated during an aborted render.
	        update.nextEffect = null;
	        if (queue.lastCapturedEffect === null) {
	          queue.firstCapturedEffect = queue.lastCapturedEffect = update;
	        } else {
	          queue.lastCapturedEffect.nextEffect = update;
	          queue.lastCapturedEffect = update;
	        }
	      }
	    }
	    update = update.next;
	  }

	  if (newFirstUpdate === null) {
	    queue.lastUpdate = null;
	  }
	  if (newFirstCapturedUpdate === null) {
	    queue.lastCapturedUpdate = null;
	  } else {
	    workInProgress.effectTag |= Callback;
	  }
	  if (newFirstUpdate === null && newFirstCapturedUpdate === null) {
	    // We processed every update, without skipping. That means the new base
	    // state is the same as the result state.
	    newBaseState = resultState;
	  }

	  queue.baseState = newBaseState;
	  queue.firstUpdate = newFirstUpdate;
	  queue.firstCapturedUpdate = newFirstCapturedUpdate;
	  queue.expirationTime = newExpirationTime;

	  workInProgress.memoizedState = resultState;

	  {
	    currentlyProcessingQueue = null;
	  }
	}

	function callCallback(callback, context) {
	  !(typeof callback === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', callback) : void 0;
	  callback.call(context);
	}

	function resetHasForceUpdateBeforeProcessing() {
	  hasForceUpdate = false;
	}

	function checkHasForceUpdateAfterProcessing() {
	  return hasForceUpdate;
	}

	function commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {
	  // If the finished render included captured updates, and there are still
	  // lower priority updates left over, we need to keep the captured updates
	  // in the queue so that they are rebased and not dropped once we process the
	  // queue again at the lower priority.
	  if (finishedQueue.firstCapturedUpdate !== null) {
	    // Join the captured update list to the end of the normal list.
	    if (finishedQueue.lastUpdate !== null) {
	      finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;
	      finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;
	    }
	    // Clear the list of captured updates.
	    finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;
	  }

	  // Commit the effects
	  var effect = finishedQueue.firstEffect;
	  finishedQueue.firstEffect = finishedQueue.lastEffect = null;
	  while (effect !== null) {
	    var _callback3 = effect.callback;
	    if (_callback3 !== null) {
	      effect.callback = null;
	      callCallback(_callback3, instance);
	    }
	    effect = effect.nextEffect;
	  }

	  effect = finishedQueue.firstCapturedEffect;
	  finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
	  while (effect !== null) {
	    var _callback4 = effect.callback;
	    if (_callback4 !== null) {
	      effect.callback = null;
	      callCallback(_callback4, instance);
	    }
	    effect = effect.nextEffect;
	  }
	}

	function createCapturedValue(value, source) {
	  // If the value is an error, call this function immediately after it is thrown
	  // so the stack is accurate.
	  return {
	    value: value,
	    source: source,
	    stack: getStackAddendumByWorkInProgressFiber(source)
	  };
	}

	var providerCursor = createCursor(null);
	var valueCursor = createCursor(null);
	var changedBitsCursor = createCursor(0);

	var rendererSigil = void 0;
	{
	  // Use this to detect multiple renderers using the same context
	  rendererSigil = {};
	}

	function pushProvider(providerFiber) {
	  var context = providerFiber.type._context;

	  if (isPrimaryRenderer) {
	    push(changedBitsCursor, context._changedBits, providerFiber);
	    push(valueCursor, context._currentValue, providerFiber);
	    push(providerCursor, providerFiber, providerFiber);

	    context._currentValue = providerFiber.pendingProps.value;
	    context._changedBits = providerFiber.stateNode;
	    {
	      !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warning(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
	      context._currentRenderer = rendererSigil;
	    }
	  } else {
	    push(changedBitsCursor, context._changedBits2, providerFiber);
	    push(valueCursor, context._currentValue2, providerFiber);
	    push(providerCursor, providerFiber, providerFiber);

	    context._currentValue2 = providerFiber.pendingProps.value;
	    context._changedBits2 = providerFiber.stateNode;
	    {
	      !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warning(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
	      context._currentRenderer2 = rendererSigil;
	    }
	  }
	}

	function popProvider(providerFiber) {
	  var changedBits = changedBitsCursor.current;
	  var currentValue = valueCursor.current;

	  pop(providerCursor, providerFiber);
	  pop(valueCursor, providerFiber);
	  pop(changedBitsCursor, providerFiber);

	  var context = providerFiber.type._context;
	  if (isPrimaryRenderer) {
	    context._currentValue = currentValue;
	    context._changedBits = changedBits;
	  } else {
	    context._currentValue2 = currentValue;
	    context._changedBits2 = changedBits;
	  }
	}

	function getContextCurrentValue(context) {
	  return isPrimaryRenderer ? context._currentValue : context._currentValue2;
	}

	function getContextChangedBits(context) {
	  return isPrimaryRenderer ? context._changedBits : context._changedBits2;
	}

	var NO_CONTEXT = {};

	var contextStackCursor$1 = createCursor(NO_CONTEXT);
	var contextFiberStackCursor = createCursor(NO_CONTEXT);
	var rootInstanceStackCursor = createCursor(NO_CONTEXT);

	function requiredContext(c) {
	  !(c !== NO_CONTEXT) ? invariant(false, 'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  return c;
	}

	function getRootHostContainer() {
	  var rootInstance = requiredContext(rootInstanceStackCursor.current);
	  return rootInstance;
	}

	function pushHostContainer(fiber, nextRootInstance) {
	  // Push current root instance onto the stack;
	  // This allows us to reset root when portals are popped.
	  push(rootInstanceStackCursor, nextRootInstance, fiber);
	  // Track the context and the Fiber that provided it.
	  // This enables us to pop only Fibers that provide unique contexts.
	  push(contextFiberStackCursor, fiber, fiber);

	  // Finally, we need to push the host context to the stack.
	  // However, we can't just call getRootHostContext() and push it because
	  // we'd have a different number of entries on the stack depending on
	  // whether getRootHostContext() throws somewhere in renderer code or not.
	  // So we push an empty value first. This lets us safely unwind on errors.
	  push(contextStackCursor$1, NO_CONTEXT, fiber);
	  var nextRootContext = getRootHostContext(nextRootInstance);
	  // Now that we know this function doesn't throw, replace it.
	  pop(contextStackCursor$1, fiber);
	  push(contextStackCursor$1, nextRootContext, fiber);
	}

	function popHostContainer(fiber) {
	  pop(contextStackCursor$1, fiber);
	  pop(contextFiberStackCursor, fiber);
	  pop(rootInstanceStackCursor, fiber);
	}

	function getHostContext() {
	  var context = requiredContext(contextStackCursor$1.current);
	  return context;
	}

	function pushHostContext(fiber) {
	  var rootInstance = requiredContext(rootInstanceStackCursor.current);
	  var context = requiredContext(contextStackCursor$1.current);
	  var nextContext = getChildHostContext(context, fiber.type, rootInstance);

	  // Don't push this Fiber's context unless it's unique.
	  if (context === nextContext) {
	    return;
	  }

	  // Track the context and the Fiber that provided it.
	  // This enables us to pop only Fibers that provide unique contexts.
	  push(contextFiberStackCursor, fiber, fiber);
	  push(contextStackCursor$1, nextContext, fiber);
	}

	function popHostContext(fiber) {
	  // Do not pop unless this Fiber provided the current context.
	  // pushHostContext() only pushes Fibers that provide unique contexts.
	  if (contextFiberStackCursor.current !== fiber) {
	    return;
	  }

	  pop(contextStackCursor$1, fiber);
	  pop(contextFiberStackCursor, fiber);
	}

	var commitTime = 0;

	function getCommitTime() {
	  return commitTime;
	}

	function recordCommitTime() {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  commitTime = now();
	}

	/**
	 * The "actual" render time is total time required to render the descendants of a Profiler component.
	 * This time is stored as a stack, since Profilers can be nested.
	 * This time is started during the "begin" phase and stopped during the "complete" phase.
	 * It is paused (and accumulated) in the event of an interruption or an aborted render.
	 */

	var fiberStack$1 = void 0;

	{
	  fiberStack$1 = [];
	}

	var timerPausedAt = 0;
	var totalElapsedPauseTime = 0;

	function checkActualRenderTimeStackEmpty() {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  {
	    !(fiberStack$1.length === 0) ? warning(false, 'Expected an empty stack. Something was not reset properly.') : void 0;
	  }
	}

	function markActualRenderTimeStarted(fiber) {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  {
	    fiberStack$1.push(fiber);
	  }

	  fiber.actualDuration = now() - fiber.actualDuration - totalElapsedPauseTime;
	  fiber.actualStartTime = now();
	}

	function pauseActualRenderTimerIfRunning() {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  if (timerPausedAt === 0) {
	    timerPausedAt = now();
	  }
	}

	function recordElapsedActualRenderTime(fiber) {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  {
	    !(fiber === fiberStack$1.pop()) ? warning(false, 'Unexpected Fiber (%s) popped.', getComponentName(fiber)) : void 0;
	  }

	  fiber.actualDuration = now() - totalElapsedPauseTime - fiber.actualDuration;
	}

	function resetActualRenderTimer() {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  totalElapsedPauseTime = 0;
	}

	function resumeActualRenderTimerIfPaused() {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  if (timerPausedAt > 0) {
	    totalElapsedPauseTime += now() - timerPausedAt;
	    timerPausedAt = 0;
	  }
	}

	/**
	 * The "base" render time is the duration of the “begin” phase of work for a particular fiber.
	 * This time is measured and stored on each fiber.
	 * The time for all sibling fibers are accumulated and stored on their parent during the "complete" phase.
	 * If a fiber bails out (sCU false) then its "base" timer is cancelled and the fiber is not updated.
	 */

	var baseStartTime = -1;

	function recordElapsedBaseRenderTimeIfRunning(fiber) {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  if (baseStartTime !== -1) {
	    fiber.selfBaseTime = now() - baseStartTime;
	  }
	}

	function startBaseRenderTimer() {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  {
	    if (baseStartTime !== -1) {
	      warning(false, 'Cannot start base timer that is already running. ' + 'This error is likely caused by a bug in React. ' + 'Please file an issue.');
	    }
	  }
	  baseStartTime = now();
	}

	function stopBaseRenderTimerIfRunning() {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  baseStartTime = -1;
	}

	var fakeInternalInstance = {};
	var isArray = Array.isArray;

	var didWarnAboutStateAssignmentForComponent = void 0;
	var didWarnAboutUninitializedState = void 0;
	var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = void 0;
	var didWarnAboutLegacyLifecyclesAndDerivedState = void 0;
	var didWarnAboutUndefinedDerivedState = void 0;
	var warnOnUndefinedDerivedState = void 0;
	var warnOnInvalidCallback$1 = void 0;

	{
	  didWarnAboutStateAssignmentForComponent = new Set();
	  didWarnAboutUninitializedState = new Set();
	  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
	  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
	  didWarnAboutUndefinedDerivedState = new Set();

	  var didWarnOnInvalidCallback = new Set();

	  warnOnInvalidCallback$1 = function (callback, callerName) {
	    if (callback === null || typeof callback === 'function') {
	      return;
	    }
	    var key = callerName + '_' + callback;
	    if (!didWarnOnInvalidCallback.has(key)) {
	      didWarnOnInvalidCallback.add(key);
	      warning(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
	    }
	  };

	  warnOnUndefinedDerivedState = function (workInProgress, partialState) {
	    if (partialState === undefined) {
	      var componentName = getComponentName(workInProgress) || 'Component';
	      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
	        didWarnAboutUndefinedDerivedState.add(componentName);
	        warning(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
	      }
	    }
	  };

	  // This is so gross but it's at least non-critical and can be removed if
	  // it causes problems. This is meant to give a nicer error message for
	  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
	  // ...)) which otherwise throws a "_processChildContext is not a function"
	  // exception.
	  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
	    enumerable: false,
	    value: function () {
	      invariant(false, '_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).');
	    }
	  });
	  Object.freeze(fakeInternalInstance);
	}

	function applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, nextProps) {
	  var prevState = workInProgress.memoizedState;

	  {
	    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	      // Invoke the function an extra time to help detect side-effects.
	      getDerivedStateFromProps(nextProps, prevState);
	    }
	  }

	  var partialState = getDerivedStateFromProps(nextProps, prevState);

	  {
	    warnOnUndefinedDerivedState(workInProgress, partialState);
	  }
	  // Merge the partial state and the previous state.
	  var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
	  workInProgress.memoizedState = memoizedState;

	  // Once the update queue is empty, persist the derived state onto the
	  // base state.
	  var updateQueue = workInProgress.updateQueue;
	  if (updateQueue !== null && updateQueue.expirationTime === NoWork) {
	    updateQueue.baseState = memoizedState;
	  }
	}

	var classComponentUpdater = {
	  isMounted: isMounted,
	  enqueueSetState: function (inst, payload, callback) {
	    var fiber = get(inst);
	    var currentTime = recalculateCurrentTime();
	    var expirationTime = computeExpirationForFiber(currentTime, fiber);

	    var update = createUpdate(expirationTime);
	    update.payload = payload;
	    if (callback !== undefined && callback !== null) {
	      {
	        warnOnInvalidCallback$1(callback, 'setState');
	      }
	      update.callback = callback;
	    }

	    enqueueUpdate(fiber, update, expirationTime);
	    scheduleWork$1(fiber, expirationTime);
	  },
	  enqueueReplaceState: function (inst, payload, callback) {
	    var fiber = get(inst);
	    var currentTime = recalculateCurrentTime();
	    var expirationTime = computeExpirationForFiber(currentTime, fiber);

	    var update = createUpdate(expirationTime);
	    update.tag = ReplaceState;
	    update.payload = payload;

	    if (callback !== undefined && callback !== null) {
	      {
	        warnOnInvalidCallback$1(callback, 'replaceState');
	      }
	      update.callback = callback;
	    }

	    enqueueUpdate(fiber, update, expirationTime);
	    scheduleWork$1(fiber, expirationTime);
	  },
	  enqueueForceUpdate: function (inst, callback) {
	    var fiber = get(inst);
	    var currentTime = recalculateCurrentTime();
	    var expirationTime = computeExpirationForFiber(currentTime, fiber);

	    var update = createUpdate(expirationTime);
	    update.tag = ForceUpdate;

	    if (callback !== undefined && callback !== null) {
	      {
	        warnOnInvalidCallback$1(callback, 'forceUpdate');
	      }
	      update.callback = callback;
	    }

	    enqueueUpdate(fiber, update, expirationTime);
	    scheduleWork$1(fiber, expirationTime);
	  }
	};

	function checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext) {
	  var instance = workInProgress.stateNode;
	  var ctor = workInProgress.type;
	  if (typeof instance.shouldComponentUpdate === 'function') {
	    startPhaseTimer(workInProgress, 'shouldComponentUpdate');
	    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, newContext);
	    stopPhaseTimer();

	    {
	      !(shouldUpdate !== undefined) ? warning(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(workInProgress) || 'Component') : void 0;
	    }

	    return shouldUpdate;
	  }

	  if (ctor.prototype && ctor.prototype.isPureReactComponent) {
	    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
	  }

	  return true;
	}

	function checkClassInstance(workInProgress) {
	  var instance = workInProgress.stateNode;
	  var type = workInProgress.type;
	  {
	    var name = getComponentName(workInProgress) || 'Component';
	    var renderPresent = instance.render;

	    if (!renderPresent) {
	      if (type.prototype && typeof type.prototype.render === 'function') {
	        warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
	      } else {
	        warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
	      }
	    }

	    var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
	    !noGetInitialStateOnES6 ? warning(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;
	    var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
	    !noGetDefaultPropsOnES6 ? warning(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;
	    var noInstancePropTypes = !instance.propTypes;
	    !noInstancePropTypes ? warning(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;
	    var noInstanceContextTypes = !instance.contextTypes;
	    !noInstanceContextTypes ? warning(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;
	    var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
	    !noComponentShouldUpdate ? warning(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;
	    if (type.prototype && type.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
	      warning(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(workInProgress) || 'A pure component');
	    }
	    var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
	    !noComponentDidUnmount ? warning(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;
	    var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
	    !noComponentDidReceiveProps ? warning(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;
	    var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
	    !noComponentWillRecieveProps ? warning(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;
	    var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';
	    !noUnsafeComponentWillRecieveProps ? warning(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;
	    var hasMutatedProps = instance.props !== workInProgress.pendingProps;
	    !(instance.props === undefined || !hasMutatedProps) ? warning(false, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name) : void 0;
	    var noInstanceDefaultProps = !instance.defaultProps;
	    !noInstanceDefaultProps ? warning(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;

	    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(type)) {
	      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(type);
	      warning(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(workInProgress));
	    }

	    var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';
	    !noInstanceGetDerivedStateFromProps ? warning(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
	    var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromCatch !== 'function';
	    !noInstanceGetDerivedStateFromCatch ? warning(false, '%s: getDerivedStateFromCatch() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
	    var noStaticGetSnapshotBeforeUpdate = typeof type.getSnapshotBeforeUpdate !== 'function';
	    !noStaticGetSnapshotBeforeUpdate ? warning(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;
	    var _state = instance.state;
	    if (_state && (typeof _state !== 'object' || isArray(_state))) {
	      warning(false, '%s.state: must be set to an object or null', name);
	    }
	    if (typeof instance.getChildContext === 'function') {
	      !(typeof type.childContextTypes === 'object') ? warning(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;
	    }
	  }
	}

	function adoptClassInstance(workInProgress, instance) {
	  instance.updater = classComponentUpdater;
	  workInProgress.stateNode = instance;
	  // The instance needs access to the fiber so that it can schedule updates
	  set(instance, workInProgress);
	  {
	    instance._reactInternalInstance = fakeInternalInstance;
	  }
	}

	function constructClassInstance(workInProgress, props, renderExpirationTime) {
	  var ctor = workInProgress.type;
	  var unmaskedContext = getUnmaskedContext(workInProgress);
	  var needsContext = isContextConsumer(workInProgress);
	  var context = needsContext ? getMaskedContext(workInProgress, unmaskedContext) : emptyObject;

	  // Instantiate twice to help detect side-effects.
	  {
	    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	      new ctor(props, context); // eslint-disable-line no-new
	    }
	  }

	  var instance = new ctor(props, context);
	  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
	  adoptClassInstance(workInProgress, instance);

	  {
	    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
	      var componentName = getComponentName(workInProgress) || 'Component';
	      if (!didWarnAboutUninitializedState.has(componentName)) {
	        didWarnAboutUninitializedState.add(componentName);
	        warning(false, '%s: Did not properly initialize state during construction. ' + 'Expected state to be an object, but it was %s.', componentName, instance.state === null ? 'null' : 'undefined');
	      }
	    }

	    // If new component APIs are defined, "unsafe" lifecycles won't be called.
	    // Warn about these lifecycles if they are present.
	    // Don't warn about react-lifecycles-compat polyfilled methods though.
	    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
	      var foundWillMountName = null;
	      var foundWillReceivePropsName = null;
	      var foundWillUpdateName = null;
	      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
	        foundWillMountName = 'componentWillMount';
	      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
	        foundWillMountName = 'UNSAFE_componentWillMount';
	      }
	      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
	        foundWillReceivePropsName = 'componentWillReceiveProps';
	      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
	        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
	      }
	      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
	        foundWillUpdateName = 'componentWillUpdate';
	      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
	        foundWillUpdateName = 'UNSAFE_componentWillUpdate';
	      }
	      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
	        var _componentName = getComponentName(workInProgress) || 'Component';
	        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
	        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
	          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
	          warning(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-async-component-lifecycle-hooks', _componentName, newApiName, foundWillMountName !== null ? '\n  ' + foundWillMountName : '', foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '', foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '');
	        }
	      }
	    }
	  }

	  // Cache unmasked context so we can avoid recreating masked context unless necessary.
	  // ReactFiberContext usually updates this cache but can't for newly-created instances.
	  if (needsContext) {
	    cacheContext(workInProgress, unmaskedContext, context);
	  }

	  return instance;
	}

	function callComponentWillMount(workInProgress, instance) {
	  startPhaseTimer(workInProgress, 'componentWillMount');
	  var oldState = instance.state;

	  if (typeof instance.componentWillMount === 'function') {
	    instance.componentWillMount();
	  }
	  if (typeof instance.UNSAFE_componentWillMount === 'function') {
	    instance.UNSAFE_componentWillMount();
	  }

	  stopPhaseTimer();

	  if (oldState !== instance.state) {
	    {
	      warning(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress) || 'Component');
	    }
	    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
	  }
	}

	function callComponentWillReceiveProps(workInProgress, instance, newProps, newContext) {
	  var oldState = instance.state;
	  startPhaseTimer(workInProgress, 'componentWillReceiveProps');
	  if (typeof instance.componentWillReceiveProps === 'function') {
	    instance.componentWillReceiveProps(newProps, newContext);
	  }
	  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
	    instance.UNSAFE_componentWillReceiveProps(newProps, newContext);
	  }
	  stopPhaseTimer();

	  if (instance.state !== oldState) {
	    {
	      var componentName = getComponentName(workInProgress) || 'Component';
	      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
	        didWarnAboutStateAssignmentForComponent.add(componentName);
	        warning(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
	      }
	    }
	    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
	  }
	}

	// Invokes the mount life-cycles on a previously never rendered instance.
	function mountClassInstance(workInProgress, renderExpirationTime) {
	  var ctor = workInProgress.type;

	  {
	    checkClassInstance(workInProgress);
	  }

	  var instance = workInProgress.stateNode;
	  var props = workInProgress.pendingProps;
	  var unmaskedContext = getUnmaskedContext(workInProgress);

	  instance.props = props;
	  instance.state = workInProgress.memoizedState;
	  instance.refs = emptyObject;
	  instance.context = getMaskedContext(workInProgress, unmaskedContext);

	  {
	    if (workInProgress.mode & StrictMode) {
	      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);

	      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
	    }

	    if (warnAboutDeprecatedLifecycles) {
	      ReactStrictModeWarnings.recordDeprecationWarnings(workInProgress, instance);
	    }
	  }

	  var updateQueue = workInProgress.updateQueue;
	  if (updateQueue !== null) {
	    processUpdateQueue(workInProgress, updateQueue, props, instance, renderExpirationTime);
	    instance.state = workInProgress.memoizedState;
	  }

	  var getDerivedStateFromProps = workInProgress.type.getDerivedStateFromProps;
	  if (typeof getDerivedStateFromProps === 'function') {
	    applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, props);
	    instance.state = workInProgress.memoizedState;
	  }

	  // In order to support react-lifecycles-compat polyfilled components,
	  // Unsafe lifecycles should not be invoked for components using the new APIs.
	  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
	    callComponentWillMount(workInProgress, instance);
	    // If we had additional state updates during this life-cycle, let's
	    // process them now.
	    updateQueue = workInProgress.updateQueue;
	    if (updateQueue !== null) {
	      processUpdateQueue(workInProgress, updateQueue, props, instance, renderExpirationTime);
	      instance.state = workInProgress.memoizedState;
	    }
	  }

	  if (typeof instance.componentDidMount === 'function') {
	    workInProgress.effectTag |= Update;
	  }
	}

	function resumeMountClassInstance(workInProgress, renderExpirationTime) {
	  var ctor = workInProgress.type;
	  var instance = workInProgress.stateNode;

	  var oldProps = workInProgress.memoizedProps;
	  var newProps = workInProgress.pendingProps;
	  instance.props = oldProps;

	  var oldContext = instance.context;
	  var newUnmaskedContext = getUnmaskedContext(workInProgress);
	  var newContext = getMaskedContext(workInProgress, newUnmaskedContext);

	  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
	  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';

	  // Note: During these life-cycles, instance.props/instance.state are what
	  // ever the previously attempted to render - not the "current". However,
	  // during componentDidUpdate we pass the "current" props.

	  // In order to support react-lifecycles-compat polyfilled components,
	  // Unsafe lifecycles should not be invoked for components using the new APIs.
	  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
	    if (oldProps !== newProps || oldContext !== newContext) {
	      callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
	    }
	  }

	  resetHasForceUpdateBeforeProcessing();

	  var oldState = workInProgress.memoizedState;
	  var newState = instance.state = oldState;
	  var updateQueue = workInProgress.updateQueue;
	  if (updateQueue !== null) {
	    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
	    newState = workInProgress.memoizedState;
	  }
	  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
	    // If an update was already in progress, we should schedule an Update
	    // effect even though we're bailing out, so that cWU/cDU are called.
	    if (typeof instance.componentDidMount === 'function') {
	      workInProgress.effectTag |= Update;
	    }
	    return false;
	  }

	  if (typeof getDerivedStateFromProps === 'function') {
	    applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, newProps);
	    newState = workInProgress.memoizedState;
	  }

	  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);

	  if (shouldUpdate) {
	    // In order to support react-lifecycles-compat polyfilled components,
	    // Unsafe lifecycles should not be invoked for components using the new APIs.
	    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
	      startPhaseTimer(workInProgress, 'componentWillMount');
	      if (typeof instance.componentWillMount === 'function') {
	        instance.componentWillMount();
	      }
	      if (typeof instance.UNSAFE_componentWillMount === 'function') {
	        instance.UNSAFE_componentWillMount();
	      }
	      stopPhaseTimer();
	    }
	    if (typeof instance.componentDidMount === 'function') {
	      workInProgress.effectTag |= Update;
	    }
	  } else {
	    // If an update was already in progress, we should schedule an Update
	    // effect even though we're bailing out, so that cWU/cDU are called.
	    if (typeof instance.componentDidMount === 'function') {
	      workInProgress.effectTag |= Update;
	    }

	    // If shouldComponentUpdate returned false, we should still update the
	    // memoized state to indicate that this work can be reused.
	    workInProgress.memoizedProps = newProps;
	    workInProgress.memoizedState = newState;
	  }

	  // Update the existing instance's state, props, and context pointers even
	  // if shouldComponentUpdate returns false.
	  instance.props = newProps;
	  instance.state = newState;
	  instance.context = newContext;

	  return shouldUpdate;
	}

	// Invokes the update life-cycles and returns false if it shouldn't rerender.
	function updateClassInstance(current, workInProgress, renderExpirationTime) {
	  var ctor = workInProgress.type;
	  var instance = workInProgress.stateNode;

	  var oldProps = workInProgress.memoizedProps;
	  var newProps = workInProgress.pendingProps;
	  instance.props = oldProps;

	  var oldContext = instance.context;
	  var newUnmaskedContext = getUnmaskedContext(workInProgress);
	  var newContext = getMaskedContext(workInProgress, newUnmaskedContext);

	  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
	  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';

	  // Note: During these life-cycles, instance.props/instance.state are what
	  // ever the previously attempted to render - not the "current". However,
	  // during componentDidUpdate we pass the "current" props.

	  // In order to support react-lifecycles-compat polyfilled components,
	  // Unsafe lifecycles should not be invoked for components using the new APIs.
	  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
	    if (oldProps !== newProps || oldContext !== newContext) {
	      callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
	    }
	  }

	  resetHasForceUpdateBeforeProcessing();

	  var oldState = workInProgress.memoizedState;
	  var newState = instance.state = oldState;
	  var updateQueue = workInProgress.updateQueue;
	  if (updateQueue !== null) {
	    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
	    newState = workInProgress.memoizedState;
	  }

	  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
	    // If an update was already in progress, we should schedule an Update
	    // effect even though we're bailing out, so that cWU/cDU are called.
	    if (typeof instance.componentDidUpdate === 'function') {
	      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
	        workInProgress.effectTag |= Update;
	      }
	    }
	    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
	      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
	        workInProgress.effectTag |= Snapshot;
	      }
	    }
	    return false;
	  }

	  if (typeof getDerivedStateFromProps === 'function') {
	    applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, newProps);
	    newState = workInProgress.memoizedState;
	  }

	  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);

	  if (shouldUpdate) {
	    // In order to support react-lifecycles-compat polyfilled components,
	    // Unsafe lifecycles should not be invoked for components using the new APIs.
	    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
	      startPhaseTimer(workInProgress, 'componentWillUpdate');
	      if (typeof instance.componentWillUpdate === 'function') {
	        instance.componentWillUpdate(newProps, newState, newContext);
	      }
	      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
	        instance.UNSAFE_componentWillUpdate(newProps, newState, newContext);
	      }
	      stopPhaseTimer();
	    }
	    if (typeof instance.componentDidUpdate === 'function') {
	      workInProgress.effectTag |= Update;
	    }
	    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
	      workInProgress.effectTag |= Snapshot;
	    }
	  } else {
	    // If an update was already in progress, we should schedule an Update
	    // effect even though we're bailing out, so that cWU/cDU are called.
	    if (typeof instance.componentDidUpdate === 'function') {
	      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
	        workInProgress.effectTag |= Update;
	      }
	    }
	    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
	      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
	        workInProgress.effectTag |= Snapshot;
	      }
	    }

	    // If shouldComponentUpdate returned false, we should still update the
	    // memoized props/state to indicate that this work can be reused.
	    workInProgress.memoizedProps = newProps;
	    workInProgress.memoizedState = newState;
	  }

	  // Update the existing instance's state, props, and context pointers even
	  // if shouldComponentUpdate returns false.
	  instance.props = newProps;
	  instance.state = newState;
	  instance.context = newContext;

	  return shouldUpdate;
	}

	var getCurrentFiberStackAddendum$7 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


	var didWarnAboutMaps = void 0;
	var didWarnAboutStringRefInStrictMode = void 0;
	var ownerHasKeyUseWarning = void 0;
	var ownerHasFunctionTypeWarning = void 0;
	var warnForMissingKey = function (child) {};

	{
	  didWarnAboutMaps = false;
	  didWarnAboutStringRefInStrictMode = {};

	  /**
	   * Warn if there's no key explicitly set on dynamic arrays of children or
	   * object keys are not valid. This allows us to keep track of children between
	   * updates.
	   */
	  ownerHasKeyUseWarning = {};
	  ownerHasFunctionTypeWarning = {};

	  warnForMissingKey = function (child) {
	    if (child === null || typeof child !== 'object') {
	      return;
	    }
	    if (!child._store || child._store.validated || child.key != null) {
	      return;
	    }
	    !(typeof child._store === 'object') ? invariant(false, 'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	    child._store.validated = true;

	    var currentComponentErrorInfo = 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + (getCurrentFiberStackAddendum$7() || '');
	    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
	      return;
	    }
	    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

	    warning(false, 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.%s', getCurrentFiberStackAddendum$7());
	  };
	}

	var isArray$1 = Array.isArray;

	function coerceRef(returnFiber, current, element) {
	  var mixedRef = element.ref;
	  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
	    {
	      if (returnFiber.mode & StrictMode) {
	        var componentName = getComponentName(returnFiber) || 'Component';
	        if (!didWarnAboutStringRefInStrictMode[componentName]) {
	          warning(false, 'A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using createRef() instead.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-string-ref', mixedRef, getStackAddendumByWorkInProgressFiber(returnFiber));
	          didWarnAboutStringRefInStrictMode[componentName] = true;
	        }
	      }
	    }

	    if (element._owner) {
	      var owner = element._owner;
	      var inst = void 0;
	      if (owner) {
	        var ownerFiber = owner;
	        !(ownerFiber.tag === ClassComponent) ? invariant(false, 'Stateless function components cannot have refs.') : void 0;
	        inst = ownerFiber.stateNode;
	      }
	      !inst ? invariant(false, 'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.', mixedRef) : void 0;
	      var stringRef = '' + mixedRef;
	      // Check if previous string ref matches new string ref
	      if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) {
	        return current.ref;
	      }
	      var ref = function (value) {
	        var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	        if (value === null) {
	          delete refs[stringRef];
	        } else {
	          refs[stringRef] = value;
	        }
	      };
	      ref._stringRef = stringRef;
	      return ref;
	    } else {
	      !(typeof mixedRef === 'string') ? invariant(false, 'Expected ref to be a function or a string.') : void 0;
	      !element._owner ? invariant(false, 'Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a functional component\n2. You may be adding a ref to a component that was not created inside a component\'s render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.', mixedRef) : void 0;
	    }
	  }
	  return mixedRef;
	}

	function throwOnInvalidObjectType(returnFiber, newChild) {
	  if (returnFiber.type !== 'textarea') {
	    var addendum = '';
	    {
	      addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + (getCurrentFiberStackAddendum$7() || '');
	    }
	    invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);
	  }
	}

	function warnOnFunctionType() {
	  var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + (getCurrentFiberStackAddendum$7() || '');

	  if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
	    return;
	  }
	  ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;

	  warning(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.%s', getCurrentFiberStackAddendum$7() || '');
	}

	// This wrapper function exists because I expect to clone the code in each path
	// to be able to optimize each path individually by branching early. This needs
	// a compiler or we can do it manually. Helpers that don't need this branching
	// live outside of this function.
	function ChildReconciler(shouldTrackSideEffects) {
	  function deleteChild(returnFiber, childToDelete) {
	    if (!shouldTrackSideEffects) {
	      // Noop.
	      return;
	    }
	    // Deletions are added in reversed order so we add it to the front.
	    // At this point, the return fiber's effect list is empty except for
	    // deletions, so we can just append the deletion to the list. The remaining
	    // effects aren't added until the complete phase. Once we implement
	    // resuming, this may not be true.
	    var last = returnFiber.lastEffect;
	    if (last !== null) {
	      last.nextEffect = childToDelete;
	      returnFiber.lastEffect = childToDelete;
	    } else {
	      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
	    }
	    childToDelete.nextEffect = null;
	    childToDelete.effectTag = Deletion;
	  }

	  function deleteRemainingChildren(returnFiber, currentFirstChild) {
	    if (!shouldTrackSideEffects) {
	      // Noop.
	      return null;
	    }

	    // TODO: For the shouldClone case, this could be micro-optimized a bit by
	    // assuming that after the first child we've already added everything.
	    var childToDelete = currentFirstChild;
	    while (childToDelete !== null) {
	      deleteChild(returnFiber, childToDelete);
	      childToDelete = childToDelete.sibling;
	    }
	    return null;
	  }

	  function mapRemainingChildren(returnFiber, currentFirstChild) {
	    // Add the remaining children to a temporary map so that we can find them by
	    // keys quickly. Implicit (null) keys get added to this set with their index
	    var existingChildren = new Map();

	    var existingChild = currentFirstChild;
	    while (existingChild !== null) {
	      if (existingChild.key !== null) {
	        existingChildren.set(existingChild.key, existingChild);
	      } else {
	        existingChildren.set(existingChild.index, existingChild);
	      }
	      existingChild = existingChild.sibling;
	    }
	    return existingChildren;
	  }

	  function useFiber(fiber, pendingProps, expirationTime) {
	    // We currently set sibling to null and index to 0 here because it is easy
	    // to forget to do before returning it. E.g. for the single child case.
	    var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
	    clone.index = 0;
	    clone.sibling = null;
	    return clone;
	  }

	  function placeChild(newFiber, lastPlacedIndex, newIndex) {
	    newFiber.index = newIndex;
	    if (!shouldTrackSideEffects) {
	      // Noop.
	      return lastPlacedIndex;
	    }
	    var current = newFiber.alternate;
	    if (current !== null) {
	      var oldIndex = current.index;
	      if (oldIndex < lastPlacedIndex) {
	        // This is a move.
	        newFiber.effectTag = Placement;
	        return lastPlacedIndex;
	      } else {
	        // This item can stay in place.
	        return oldIndex;
	      }
	    } else {
	      // This is an insertion.
	      newFiber.effectTag = Placement;
	      return lastPlacedIndex;
	    }
	  }

	  function placeSingleChild(newFiber) {
	    // This is simpler for the single child case. We only need to do a
	    // placement for inserting new children.
	    if (shouldTrackSideEffects && newFiber.alternate === null) {
	      newFiber.effectTag = Placement;
	    }
	    return newFiber;
	  }

	  function updateTextNode(returnFiber, current, textContent, expirationTime) {
	    if (current === null || current.tag !== HostText) {
	      // Insert
	      var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
	      created.return = returnFiber;
	      return created;
	    } else {
	      // Update
	      var existing = useFiber(current, textContent, expirationTime);
	      existing.return = returnFiber;
	      return existing;
	    }
	  }

	  function updateElement(returnFiber, current, element, expirationTime) {
	    if (current !== null && current.type === element.type) {
	      // Move based on index
	      var existing = useFiber(current, element.props, expirationTime);
	      existing.ref = coerceRef(returnFiber, current, element);
	      existing.return = returnFiber;
	      {
	        existing._debugSource = element._source;
	        existing._debugOwner = element._owner;
	      }
	      return existing;
	    } else {
	      // Insert
	      var created = createFiberFromElement(element, returnFiber.mode, expirationTime);
	      created.ref = coerceRef(returnFiber, current, element);
	      created.return = returnFiber;
	      return created;
	    }
	  }

	  function updatePortal(returnFiber, current, portal, expirationTime) {
	    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
	      // Insert
	      var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
	      created.return = returnFiber;
	      return created;
	    } else {
	      // Update
	      var existing = useFiber(current, portal.children || [], expirationTime);
	      existing.return = returnFiber;
	      return existing;
	    }
	  }

	  function updateFragment(returnFiber, current, fragment, expirationTime, key) {
	    if (current === null || current.tag !== Fragment) {
	      // Insert
	      var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);
	      created.return = returnFiber;
	      return created;
	    } else {
	      // Update
	      var existing = useFiber(current, fragment, expirationTime);
	      existing.return = returnFiber;
	      return existing;
	    }
	  }

	  function createChild(returnFiber, newChild, expirationTime) {
	    if (typeof newChild === 'string' || typeof newChild === 'number') {
	      // Text nodes don't have keys. If the previous node is implicitly keyed
	      // we can continue to replace it without aborting even if it is not a text
	      // node.
	      var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);
	      created.return = returnFiber;
	      return created;
	    }

	    if (typeof newChild === 'object' && newChild !== null) {
	      switch (newChild.$$typeof) {
	        case REACT_ELEMENT_TYPE:
	          {
	            var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);
	            _created.ref = coerceRef(returnFiber, null, newChild);
	            _created.return = returnFiber;
	            return _created;
	          }
	        case REACT_PORTAL_TYPE:
	          {
	            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
	            _created2.return = returnFiber;
	            return _created2;
	          }
	      }

	      if (isArray$1(newChild) || getIteratorFn(newChild)) {
	        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);
	        _created3.return = returnFiber;
	        return _created3;
	      }

	      throwOnInvalidObjectType(returnFiber, newChild);
	    }

	    {
	      if (typeof newChild === 'function') {
	        warnOnFunctionType();
	      }
	    }

	    return null;
	  }

	  function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
	    // Update the fiber if the keys match, otherwise return null.

	    var key = oldFiber !== null ? oldFiber.key : null;

	    if (typeof newChild === 'string' || typeof newChild === 'number') {
	      // Text nodes don't have keys. If the previous node is implicitly keyed
	      // we can continue to replace it without aborting even if it is not a text
	      // node.
	      if (key !== null) {
	        return null;
	      }
	      return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
	    }

	    if (typeof newChild === 'object' && newChild !== null) {
	      switch (newChild.$$typeof) {
	        case REACT_ELEMENT_TYPE:
	          {
	            if (newChild.key === key) {
	              if (newChild.type === REACT_FRAGMENT_TYPE) {
	                return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
	              }
	              return updateElement(returnFiber, oldFiber, newChild, expirationTime);
	            } else {
	              return null;
	            }
	          }
	        case REACT_PORTAL_TYPE:
	          {
	            if (newChild.key === key) {
	              return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
	            } else {
	              return null;
	            }
	          }
	      }

	      if (isArray$1(newChild) || getIteratorFn(newChild)) {
	        if (key !== null) {
	          return null;
	        }

	        return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
	      }

	      throwOnInvalidObjectType(returnFiber, newChild);
	    }

	    {
	      if (typeof newChild === 'function') {
	        warnOnFunctionType();
	      }
	    }

	    return null;
	  }

	  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
	    if (typeof newChild === 'string' || typeof newChild === 'number') {
	      // Text nodes don't have keys, so we neither have to check the old nor
	      // new node for the key. If both are text nodes, they match.
	      var matchedFiber = existingChildren.get(newIdx) || null;
	      return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
	    }

	    if (typeof newChild === 'object' && newChild !== null) {
	      switch (newChild.$$typeof) {
	        case REACT_ELEMENT_TYPE:
	          {
	            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
	            if (newChild.type === REACT_FRAGMENT_TYPE) {
	              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
	            }
	            return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
	          }
	        case REACT_PORTAL_TYPE:
	          {
	            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
	            return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);
	          }
	      }

	      if (isArray$1(newChild) || getIteratorFn(newChild)) {
	        var _matchedFiber3 = existingChildren.get(newIdx) || null;
	        return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);
	      }

	      throwOnInvalidObjectType(returnFiber, newChild);
	    }

	    {
	      if (typeof newChild === 'function') {
	        warnOnFunctionType();
	      }
	    }

	    return null;
	  }

	  /**
	   * Warns if there is a duplicate or missing key
	   */
	  function warnOnInvalidKey(child, knownKeys) {
	    {
	      if (typeof child !== 'object' || child === null) {
	        return knownKeys;
	      }
	      switch (child.$$typeof) {
	        case REACT_ELEMENT_TYPE:
	        case REACT_PORTAL_TYPE:
	          warnForMissingKey(child);
	          var key = child.key;
	          if (typeof key !== 'string') {
	            break;
	          }
	          if (knownKeys === null) {
	            knownKeys = new Set();
	            knownKeys.add(key);
	            break;
	          }
	          if (!knownKeys.has(key)) {
	            knownKeys.add(key);
	            break;
	          }
	          warning(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.%s', key, getCurrentFiberStackAddendum$7());
	          break;
	        default:
	          break;
	      }
	    }
	    return knownKeys;
	  }

	  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
	    // This algorithm can't optimize by searching from boths ends since we
	    // don't have backpointers on fibers. I'm trying to see how far we can get
	    // with that model. If it ends up not being worth the tradeoffs, we can
	    // add it later.

	    // Even with a two ended optimization, we'd want to optimize for the case
	    // where there are few changes and brute force the comparison instead of
	    // going for the Map. It'd like to explore hitting that path first in
	    // forward-only mode and only go for the Map once we notice that we need
	    // lots of look ahead. This doesn't handle reversal as well as two ended
	    // search but that's unusual. Besides, for the two ended optimization to
	    // work on Iterables, we'd need to copy the whole set.

	    // In this first iteration, we'll just live with hitting the bad case
	    // (adding everything to a Map) in for every insert/move.

	    // If you change this code, also update reconcileChildrenIterator() which
	    // uses the same algorithm.

	    {
	      // First, validate keys.
	      var knownKeys = null;
	      for (var i = 0; i < newChildren.length; i++) {
	        var child = newChildren[i];
	        knownKeys = warnOnInvalidKey(child, knownKeys);
	      }
	    }

	    var resultingFirstChild = null;
	    var previousNewFiber = null;

	    var oldFiber = currentFirstChild;
	    var lastPlacedIndex = 0;
	    var newIdx = 0;
	    var nextOldFiber = null;
	    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
	      if (oldFiber.index > newIdx) {
	        nextOldFiber = oldFiber;
	        oldFiber = null;
	      } else {
	        nextOldFiber = oldFiber.sibling;
	      }
	      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);
	      if (newFiber === null) {
	        // TODO: This breaks on empty slots like null children. That's
	        // unfortunate because it triggers the slow path all the time. We need
	        // a better way to communicate whether this was a miss or null,
	        // boolean, undefined, etc.
	        if (oldFiber === null) {
	          oldFiber = nextOldFiber;
	        }
	        break;
	      }
	      if (shouldTrackSideEffects) {
	        if (oldFiber && newFiber.alternate === null) {
	          // We matched the slot, but we didn't reuse the existing fiber, so we
	          // need to delete the existing child.
	          deleteChild(returnFiber, oldFiber);
	        }
	      }
	      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
	      if (previousNewFiber === null) {
	        // TODO: Move out of the loop. This only happens for the first run.
	        resultingFirstChild = newFiber;
	      } else {
	        // TODO: Defer siblings if we're not at the right index for this slot.
	        // I.e. if we had null values before, then we want to defer this
	        // for each null value. However, we also don't want to call updateSlot
	        // with the previous one.
	        previousNewFiber.sibling = newFiber;
	      }
	      previousNewFiber = newFiber;
	      oldFiber = nextOldFiber;
	    }

	    if (newIdx === newChildren.length) {
	      // We've reached the end of the new children. We can delete the rest.
	      deleteRemainingChildren(returnFiber, oldFiber);
	      return resultingFirstChild;
	    }

	    if (oldFiber === null) {
	      // If we don't have any more existing children we can choose a fast path
	      // since the rest will all be insertions.
	      for (; newIdx < newChildren.length; newIdx++) {
	        var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);
	        if (!_newFiber) {
	          continue;
	        }
	        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
	        if (previousNewFiber === null) {
	          // TODO: Move out of the loop. This only happens for the first run.
	          resultingFirstChild = _newFiber;
	        } else {
	          previousNewFiber.sibling = _newFiber;
	        }
	        previousNewFiber = _newFiber;
	      }
	      return resultingFirstChild;
	    }

	    // Add all children to a key map for quick lookups.
	    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

	    // Keep scanning and use the map to restore deleted items as moves.
	    for (; newIdx < newChildren.length; newIdx++) {
	      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);
	      if (_newFiber2) {
	        if (shouldTrackSideEffects) {
	          if (_newFiber2.alternate !== null) {
	            // The new fiber is a work in progress, but if there exists a
	            // current, that means that we reused the fiber. We need to delete
	            // it from the child list so that we don't add it to the deletion
	            // list.
	            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
	          }
	        }
	        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
	        if (previousNewFiber === null) {
	          resultingFirstChild = _newFiber2;
	        } else {
	          previousNewFiber.sibling = _newFiber2;
	        }
	        previousNewFiber = _newFiber2;
	      }
	    }

	    if (shouldTrackSideEffects) {
	      // Any existing children that weren't consumed above were deleted. We need
	      // to add them to the deletion list.
	      existingChildren.forEach(function (child) {
	        return deleteChild(returnFiber, child);
	      });
	    }

	    return resultingFirstChild;
	  }

	  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
	    // This is the same implementation as reconcileChildrenArray(),
	    // but using the iterator instead.

	    var iteratorFn = getIteratorFn(newChildrenIterable);
	    !(typeof iteratorFn === 'function') ? invariant(false, 'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	    {
	      // Warn about using Maps as children
	      if (newChildrenIterable.entries === iteratorFn) {
	        !didWarnAboutMaps ? warning(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', getCurrentFiberStackAddendum$7()) : void 0;
	        didWarnAboutMaps = true;
	      }

	      // First, validate keys.
	      // We'll get a different iterator later for the main pass.
	      var _newChildren = iteratorFn.call(newChildrenIterable);
	      if (_newChildren) {
	        var knownKeys = null;
	        var _step = _newChildren.next();
	        for (; !_step.done; _step = _newChildren.next()) {
	          var child = _step.value;
	          knownKeys = warnOnInvalidKey(child, knownKeys);
	        }
	      }
	    }

	    var newChildren = iteratorFn.call(newChildrenIterable);
	    !(newChildren != null) ? invariant(false, 'An iterable object provided no iterator.') : void 0;

	    var resultingFirstChild = null;
	    var previousNewFiber = null;

	    var oldFiber = currentFirstChild;
	    var lastPlacedIndex = 0;
	    var newIdx = 0;
	    var nextOldFiber = null;

	    var step = newChildren.next();
	    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
	      if (oldFiber.index > newIdx) {
	        nextOldFiber = oldFiber;
	        oldFiber = null;
	      } else {
	        nextOldFiber = oldFiber.sibling;
	      }
	      var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);
	      if (newFiber === null) {
	        // TODO: This breaks on empty slots like null children. That's
	        // unfortunate because it triggers the slow path all the time. We need
	        // a better way to communicate whether this was a miss or null,
	        // boolean, undefined, etc.
	        if (!oldFiber) {
	          oldFiber = nextOldFiber;
	        }
	        break;
	      }
	      if (shouldTrackSideEffects) {
	        if (oldFiber && newFiber.alternate === null) {
	          // We matched the slot, but we didn't reuse the existing fiber, so we
	          // need to delete the existing child.
	          deleteChild(returnFiber, oldFiber);
	        }
	      }
	      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
	      if (previousNewFiber === null) {
	        // TODO: Move out of the loop. This only happens for the first run.
	        resultingFirstChild = newFiber;
	      } else {
	        // TODO: Defer siblings if we're not at the right index for this slot.
	        // I.e. if we had null values before, then we want to defer this
	        // for each null value. However, we also don't want to call updateSlot
	        // with the previous one.
	        previousNewFiber.sibling = newFiber;
	      }
	      previousNewFiber = newFiber;
	      oldFiber = nextOldFiber;
	    }

	    if (step.done) {
	      // We've reached the end of the new children. We can delete the rest.
	      deleteRemainingChildren(returnFiber, oldFiber);
	      return resultingFirstChild;
	    }

	    if (oldFiber === null) {
	      // If we don't have any more existing children we can choose a fast path
	      // since the rest will all be insertions.
	      for (; !step.done; newIdx++, step = newChildren.next()) {
	        var _newFiber3 = createChild(returnFiber, step.value, expirationTime);
	        if (_newFiber3 === null) {
	          continue;
	        }
	        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
	        if (previousNewFiber === null) {
	          // TODO: Move out of the loop. This only happens for the first run.
	          resultingFirstChild = _newFiber3;
	        } else {
	          previousNewFiber.sibling = _newFiber3;
	        }
	        previousNewFiber = _newFiber3;
	      }
	      return resultingFirstChild;
	    }

	    // Add all children to a key map for quick lookups.
	    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

	    // Keep scanning and use the map to restore deleted items as moves.
	    for (; !step.done; newIdx++, step = newChildren.next()) {
	      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);
	      if (_newFiber4 !== null) {
	        if (shouldTrackSideEffects) {
	          if (_newFiber4.alternate !== null) {
	            // The new fiber is a work in progress, but if there exists a
	            // current, that means that we reused the fiber. We need to delete
	            // it from the child list so that we don't add it to the deletion
	            // list.
	            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
	          }
	        }
	        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
	        if (previousNewFiber === null) {
	          resultingFirstChild = _newFiber4;
	        } else {
	          previousNewFiber.sibling = _newFiber4;
	        }
	        previousNewFiber = _newFiber4;
	      }
	    }

	    if (shouldTrackSideEffects) {
	      // Any existing children that weren't consumed above were deleted. We need
	      // to add them to the deletion list.
	      existingChildren.forEach(function (child) {
	        return deleteChild(returnFiber, child);
	      });
	    }

	    return resultingFirstChild;
	  }

	  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
	    // There's no need to check for keys on text nodes since we don't have a
	    // way to define them.
	    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
	      // We already have an existing node so let's just update it and delete
	      // the rest.
	      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
	      var existing = useFiber(currentFirstChild, textContent, expirationTime);
	      existing.return = returnFiber;
	      return existing;
	    }
	    // The existing first child is not a text node so we need to create one
	    // and delete the existing ones.
	    deleteRemainingChildren(returnFiber, currentFirstChild);
	    var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
	    created.return = returnFiber;
	    return created;
	  }

	  function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
	    var key = element.key;
	    var child = currentFirstChild;
	    while (child !== null) {
	      // TODO: If key === null and child.key === null, then this only applies to
	      // the first item in the list.
	      if (child.key === key) {
	        if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.type === element.type) {
	          deleteRemainingChildren(returnFiber, child.sibling);
	          var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
	          existing.ref = coerceRef(returnFiber, child, element);
	          existing.return = returnFiber;
	          {
	            existing._debugSource = element._source;
	            existing._debugOwner = element._owner;
	          }
	          return existing;
	        } else {
	          deleteRemainingChildren(returnFiber, child);
	          break;
	        }
	      } else {
	        deleteChild(returnFiber, child);
	      }
	      child = child.sibling;
	    }

	    if (element.type === REACT_FRAGMENT_TYPE) {
	      var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);
	      created.return = returnFiber;
	      return created;
	    } else {
	      var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);
	      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
	      _created4.return = returnFiber;
	      return _created4;
	    }
	  }

	  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
	    var key = portal.key;
	    var child = currentFirstChild;
	    while (child !== null) {
	      // TODO: If key === null and child.key === null, then this only applies to
	      // the first item in the list.
	      if (child.key === key) {
	        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
	          deleteRemainingChildren(returnFiber, child.sibling);
	          var existing = useFiber(child, portal.children || [], expirationTime);
	          existing.return = returnFiber;
	          return existing;
	        } else {
	          deleteRemainingChildren(returnFiber, child);
	          break;
	        }
	      } else {
	        deleteChild(returnFiber, child);
	      }
	      child = child.sibling;
	    }

	    var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
	    created.return = returnFiber;
	    return created;
	  }

	  // This API will tag the children with the side-effect of the reconciliation
	  // itself. They will be added to the side-effect list as we pass through the
	  // children and the parent.
	  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
	    // This function is not recursive.
	    // If the top level item is an array, we treat it as a set of children,
	    // not as a fragment. Nested arrays on the other hand will be treated as
	    // fragment nodes. Recursion happens at the normal flow.

	    // Handle top level unkeyed fragments as if they were arrays.
	    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
	    // We treat the ambiguous cases above the same.
	    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
	    if (isUnkeyedTopLevelFragment) {
	      newChild = newChild.props.children;
	    }

	    // Handle object types
	    var isObject = typeof newChild === 'object' && newChild !== null;

	    if (isObject) {
	      switch (newChild.$$typeof) {
	        case REACT_ELEMENT_TYPE:
	          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));
	        case REACT_PORTAL_TYPE:
	          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
	      }
	    }

	    if (typeof newChild === 'string' || typeof newChild === 'number') {
	      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
	    }

	    if (isArray$1(newChild)) {
	      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
	    }

	    if (getIteratorFn(newChild)) {
	      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
	    }

	    if (isObject) {
	      throwOnInvalidObjectType(returnFiber, newChild);
	    }

	    {
	      if (typeof newChild === 'function') {
	        warnOnFunctionType();
	      }
	    }
	    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {
	      // If the new child is undefined, and the return fiber is a composite
	      // component, throw an error. If Fiber return types are disabled,
	      // we already threw above.
	      switch (returnFiber.tag) {
	        case ClassComponent:
	          {
	            {
	              var instance = returnFiber.stateNode;
	              if (instance.render._isMockFunction) {
	                // We allow auto-mocks to proceed as if they're returning null.
	                break;
	              }
	            }
	          }
	        // Intentionally fall through to the next case, which handles both
	        // functions and classes
	        // eslint-disable-next-lined no-fallthrough
	        case FunctionalComponent:
	          {
	            var Component = returnFiber.type;
	            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');
	          }
	      }
	    }

	    // Remaining cases are all treated as empty.
	    return deleteRemainingChildren(returnFiber, currentFirstChild);
	  }

	  return reconcileChildFibers;
	}

	var reconcileChildFibers = ChildReconciler(true);
	var mountChildFibers = ChildReconciler(false);

	function cloneChildFibers(current, workInProgress) {
	  !(current === null || workInProgress.child === current.child) ? invariant(false, 'Resuming work not yet implemented.') : void 0;

	  if (workInProgress.child === null) {
	    return;
	  }

	  var currentChild = workInProgress.child;
	  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
	  workInProgress.child = newChild;

	  newChild.return = workInProgress;
	  while (currentChild.sibling !== null) {
	    currentChild = currentChild.sibling;
	    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
	    newChild.return = workInProgress;
	  }
	  newChild.sibling = null;
	}

	// The deepest Fiber on the stack involved in a hydration context.
	// This may have been an insertion or a hydration.
	var hydrationParentFiber = null;
	var nextHydratableInstance = null;
	var isHydrating = false;

	function enterHydrationState(fiber) {
	  if (!supportsHydration) {
	    return false;
	  }

	  var parentInstance = fiber.stateNode.containerInfo;
	  nextHydratableInstance = getFirstHydratableChild(parentInstance);
	  hydrationParentFiber = fiber;
	  isHydrating = true;
	  return true;
	}

	function deleteHydratableInstance(returnFiber, instance) {
	  {
	    switch (returnFiber.tag) {
	      case HostRoot:
	        didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
	        break;
	      case HostComponent:
	        didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
	        break;
	    }
	  }

	  var childToDelete = createFiberFromHostInstanceForDeletion();
	  childToDelete.stateNode = instance;
	  childToDelete.return = returnFiber;
	  childToDelete.effectTag = Deletion;

	  // This might seem like it belongs on progressedFirstDeletion. However,
	  // these children are not part of the reconciliation list of children.
	  // Even if we abort and rereconcile the children, that will try to hydrate
	  // again and the nodes are still in the host tree so these will be
	  // recreated.
	  if (returnFiber.lastEffect !== null) {
	    returnFiber.lastEffect.nextEffect = childToDelete;
	    returnFiber.lastEffect = childToDelete;
	  } else {
	    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
	  }
	}

	function insertNonHydratedInstance(returnFiber, fiber) {
	  fiber.effectTag |= Placement;
	  {
	    switch (returnFiber.tag) {
	      case HostRoot:
	        {
	          var parentContainer = returnFiber.stateNode.containerInfo;
	          switch (fiber.tag) {
	            case HostComponent:
	              var type = fiber.type;
	              var props = fiber.pendingProps;
	              didNotFindHydratableContainerInstance(parentContainer, type, props);
	              break;
	            case HostText:
	              var text = fiber.pendingProps;
	              didNotFindHydratableContainerTextInstance(parentContainer, text);
	              break;
	          }
	          break;
	        }
	      case HostComponent:
	        {
	          var parentType = returnFiber.type;
	          var parentProps = returnFiber.memoizedProps;
	          var parentInstance = returnFiber.stateNode;
	          switch (fiber.tag) {
	            case HostComponent:
	              var _type = fiber.type;
	              var _props = fiber.pendingProps;
	              didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
	              break;
	            case HostText:
	              var _text = fiber.pendingProps;
	              didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
	              break;
	          }
	          break;
	        }
	      default:
	        return;
	    }
	  }
	}

	function tryHydrate(fiber, nextInstance) {
	  switch (fiber.tag) {
	    case HostComponent:
	      {
	        var type = fiber.type;
	        var props = fiber.pendingProps;
	        var instance = canHydrateInstance(nextInstance, type, props);
	        if (instance !== null) {
	          fiber.stateNode = instance;
	          return true;
	        }
	        return false;
	      }
	    case HostText:
	      {
	        var text = fiber.pendingProps;
	        var textInstance = canHydrateTextInstance(nextInstance, text);
	        if (textInstance !== null) {
	          fiber.stateNode = textInstance;
	          return true;
	        }
	        return false;
	      }
	    default:
	      return false;
	  }
	}

	function tryToClaimNextHydratableInstance(fiber) {
	  if (!isHydrating) {
	    return;
	  }
	  var nextInstance = nextHydratableInstance;
	  if (!nextInstance) {
	    // Nothing to hydrate. Make it an insertion.
	    insertNonHydratedInstance(hydrationParentFiber, fiber);
	    isHydrating = false;
	    hydrationParentFiber = fiber;
	    return;
	  }
	  var firstAttemptedInstance = nextInstance;
	  if (!tryHydrate(fiber, nextInstance)) {
	    // If we can't hydrate this instance let's try the next one.
	    // We use this as a heuristic. It's based on intuition and not data so it
	    // might be flawed or unnecessary.
	    nextInstance = getNextHydratableSibling(firstAttemptedInstance);
	    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
	      // Nothing to hydrate. Make it an insertion.
	      insertNonHydratedInstance(hydrationParentFiber, fiber);
	      isHydrating = false;
	      hydrationParentFiber = fiber;
	      return;
	    }
	    // We matched the next one, we'll now assume that the first one was
	    // superfluous and we'll delete it. Since we can't eagerly delete it
	    // we'll have to schedule a deletion. To do that, this node needs a dummy
	    // fiber associated with it.
	    deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
	  }
	  hydrationParentFiber = fiber;
	  nextHydratableInstance = getFirstHydratableChild(nextInstance);
	}

	function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
	  if (!supportsHydration) {
	    invariant(false, 'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
	  }

	  var instance = fiber.stateNode;
	  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
	  // TODO: Type this specific to this type of component.
	  fiber.updateQueue = updatePayload;
	  // If the update payload indicates that there is a change or if there
	  // is a new ref we mark this as an update.
	  if (updatePayload !== null) {
	    return true;
	  }
	  return false;
	}

	function prepareToHydrateHostTextInstance(fiber) {
	  if (!supportsHydration) {
	    invariant(false, 'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
	  }

	  var textInstance = fiber.stateNode;
	  var textContent = fiber.memoizedProps;
	  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
	  {
	    if (shouldUpdate) {
	      // We assume that prepareToHydrateHostTextInstance is called in a context where the
	      // hydration parent is the parent host component of this host text.
	      var returnFiber = hydrationParentFiber;
	      if (returnFiber !== null) {
	        switch (returnFiber.tag) {
	          case HostRoot:
	            {
	              var parentContainer = returnFiber.stateNode.containerInfo;
	              didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
	              break;
	            }
	          case HostComponent:
	            {
	              var parentType = returnFiber.type;
	              var parentProps = returnFiber.memoizedProps;
	              var parentInstance = returnFiber.stateNode;
	              didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
	              break;
	            }
	        }
	      }
	    }
	  }
	  return shouldUpdate;
	}

	function popToNextHostParent(fiber) {
	  var parent = fiber.return;
	  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot) {
	    parent = parent.return;
	  }
	  hydrationParentFiber = parent;
	}

	function popHydrationState(fiber) {
	  if (!supportsHydration) {
	    return false;
	  }
	  if (fiber !== hydrationParentFiber) {
	    // We're deeper than the current hydration context, inside an inserted
	    // tree.
	    return false;
	  }
	  if (!isHydrating) {
	    // If we're not currently hydrating but we're in a hydration context, then
	    // we were an insertion and now need to pop up reenter hydration of our
	    // siblings.
	    popToNextHostParent(fiber);
	    isHydrating = true;
	    return false;
	  }

	  var type = fiber.type;

	  // If we have any remaining hydratable nodes, we need to delete them now.
	  // We only do this deeper than head and body since they tend to have random
	  // other nodes in them. We also ignore components with pure text content in
	  // side of them.
	  // TODO: Better heuristic.
	  if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
	    var nextInstance = nextHydratableInstance;
	    while (nextInstance) {
	      deleteHydratableInstance(fiber, nextInstance);
	      nextInstance = getNextHydratableSibling(nextInstance);
	    }
	  }

	  popToNextHostParent(fiber);
	  nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
	  return true;
	}

	function resetHydrationState() {
	  if (!supportsHydration) {
	    return;
	  }

	  hydrationParentFiber = null;
	  nextHydratableInstance = null;
	  isHydrating = false;
	}

	var getCurrentFiberStackAddendum$6 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


	var didWarnAboutBadClass = void 0;
	var didWarnAboutGetDerivedStateOnFunctionalComponent = void 0;
	var didWarnAboutStatelessRefs = void 0;

	{
	  didWarnAboutBadClass = {};
	  didWarnAboutGetDerivedStateOnFunctionalComponent = {};
	  didWarnAboutStatelessRefs = {};
	}

	// TODO: Remove this and use reconcileChildrenAtExpirationTime directly.
	function reconcileChildren(current, workInProgress, nextChildren) {
	  reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, workInProgress.expirationTime);
	}

	function reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, renderExpirationTime) {
	  if (current === null) {
	    // If this is a fresh new component that hasn't been rendered yet, we
	    // won't update its child set by applying minimal side-effects. Instead,
	    // we will add them all to the child before it gets rendered. That means
	    // we can optimize this reconciliation pass by not tracking side-effects.
	    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
	  } else {
	    // If the current child is the same as the work in progress, it means that
	    // we haven't yet started any work on these children. Therefore, we use
	    // the clone algorithm to create a copy of all the current children.

	    // If we had any progressed work already, that is invalid at this point so
	    // let's throw it out.
	    workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderExpirationTime);
	  }
	}

	function updateForwardRef(current, workInProgress) {
	  var render = workInProgress.type.render;
	  var nextProps = workInProgress.pendingProps;
	  var ref = workInProgress.ref;
	  if (hasContextChanged()) {
	    // Normally we can bail out on props equality but if context has changed
	    // we don't do the bailout and we have to reuse existing props instead.
	  } else if (workInProgress.memoizedProps === nextProps) {
	    var currentRef = current !== null ? current.ref : null;
	    if (ref === currentRef) {
	      return bailoutOnAlreadyFinishedWork(current, workInProgress);
	    }
	  }

	  var nextChildren = void 0;
	  {
	    ReactCurrentOwner.current = workInProgress;
	    ReactDebugCurrentFiber.setCurrentPhase('render');
	    nextChildren = render(nextProps, ref);
	    ReactDebugCurrentFiber.setCurrentPhase(null);
	  }

	  reconcileChildren(current, workInProgress, nextChildren);
	  memoizeProps(workInProgress, nextProps);
	  return workInProgress.child;
	}

	function updateFragment(current, workInProgress) {
	  var nextChildren = workInProgress.pendingProps;
	  if (hasContextChanged()) {
	    // Normally we can bail out on props equality but if context has changed
	    // we don't do the bailout and we have to reuse existing props instead.
	  } else if (workInProgress.memoizedProps === nextChildren) {
	    return bailoutOnAlreadyFinishedWork(current, workInProgress);
	  }
	  reconcileChildren(current, workInProgress, nextChildren);
	  memoizeProps(workInProgress, nextChildren);
	  return workInProgress.child;
	}

	function updateMode(current, workInProgress) {
	  var nextChildren = workInProgress.pendingProps.children;
	  if (hasContextChanged()) {
	    // Normally we can bail out on props equality but if context has changed
	    // we don't do the bailout and we have to reuse existing props instead.
	  } else if (nextChildren === null || workInProgress.memoizedProps === nextChildren) {
	    return bailoutOnAlreadyFinishedWork(current, workInProgress);
	  }
	  reconcileChildren(current, workInProgress, nextChildren);
	  memoizeProps(workInProgress, nextChildren);
	  return workInProgress.child;
	}

	function updateProfiler(current, workInProgress) {
	  var nextProps = workInProgress.pendingProps;
	  if (enableProfilerTimer) {
	    workInProgress.effectTag |= Update;
	  }
	  if (workInProgress.memoizedProps === nextProps) {
	    return bailoutOnAlreadyFinishedWork(current, workInProgress);
	  }
	  var nextChildren = nextProps.children;
	  reconcileChildren(current, workInProgress, nextChildren);
	  memoizeProps(workInProgress, nextProps);
	  return workInProgress.child;
	}

	function markRef(current, workInProgress) {
	  var ref = workInProgress.ref;
	  if (current === null && ref !== null || current !== null && current.ref !== ref) {
	    // Schedule a Ref effect
	    workInProgress.effectTag |= Ref;
	  }
	}

	function updateFunctionalComponent(current, workInProgress) {
	  var fn = workInProgress.type;
	  var nextProps = workInProgress.pendingProps;

	  if (hasContextChanged()) {
	    // Normally we can bail out on props equality but if context has changed
	    // we don't do the bailout and we have to reuse existing props instead.
	  } else {
	    if (workInProgress.memoizedProps === nextProps) {
	      return bailoutOnAlreadyFinishedWork(current, workInProgress);
	    }
	    // TODO: consider bringing fn.shouldComponentUpdate() back.
	    // It used to be here.
	  }

	  var unmaskedContext = getUnmaskedContext(workInProgress);
	  var context = getMaskedContext(workInProgress, unmaskedContext);

	  var nextChildren = void 0;

	  {
	    ReactCurrentOwner.current = workInProgress;
	    ReactDebugCurrentFiber.setCurrentPhase('render');
	    nextChildren = fn(nextProps, context);
	    ReactDebugCurrentFiber.setCurrentPhase(null);
	  }
	  // React DevTools reads this flag.
	  workInProgress.effectTag |= PerformedWork;
	  reconcileChildren(current, workInProgress, nextChildren);
	  memoizeProps(workInProgress, nextProps);
	  return workInProgress.child;
	}

	function updateClassComponent(current, workInProgress, renderExpirationTime) {
	  // Push context providers early to prevent context stack mismatches.
	  // During mounting we don't know the child context yet as the instance doesn't exist.
	  // We will invalidate the child context in finishClassComponent() right after rendering.
	  var hasContext = pushContextProvider(workInProgress);
	  var shouldUpdate = void 0;
	  if (current === null) {
	    if (workInProgress.stateNode === null) {
	      // In the initial pass we might need to construct the instance.
	      constructClassInstance(workInProgress, workInProgress.pendingProps, renderExpirationTime);
	      mountClassInstance(workInProgress, renderExpirationTime);

	      shouldUpdate = true;
	    } else {
	      // In a resume, we'll already have an instance we can reuse.
	      shouldUpdate = resumeMountClassInstance(workInProgress, renderExpirationTime);
	    }
	  } else {
	    shouldUpdate = updateClassInstance(current, workInProgress, renderExpirationTime);
	  }
	  return finishClassComponent(current, workInProgress, shouldUpdate, hasContext, renderExpirationTime);
	}

	function finishClassComponent(current, workInProgress, shouldUpdate, hasContext, renderExpirationTime) {
	  // Refs should update even if shouldComponentUpdate returns false
	  markRef(current, workInProgress);

	  var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;

	  if (!shouldUpdate && !didCaptureError) {
	    // Context providers should defer to sCU for rendering
	    if (hasContext) {
	      invalidateContextProvider(workInProgress, false);
	    }

	    return bailoutOnAlreadyFinishedWork(current, workInProgress);
	  }

	  var ctor = workInProgress.type;
	  var instance = workInProgress.stateNode;

	  // Rerender
	  ReactCurrentOwner.current = workInProgress;
	  var nextChildren = void 0;
	  if (didCaptureError && (!enableGetDerivedStateFromCatch || typeof ctor.getDerivedStateFromCatch !== 'function')) {
	    // If we captured an error, but getDerivedStateFrom catch is not defined,
	    // unmount all the children. componentDidCatch will schedule an update to
	    // re-render a fallback. This is temporary until we migrate everyone to
	    // the new API.
	    // TODO: Warn in a future release.
	    nextChildren = null;

	    if (enableProfilerTimer) {
	      stopBaseRenderTimerIfRunning();
	    }
	  } else {
	    {
	      ReactDebugCurrentFiber.setCurrentPhase('render');
	      nextChildren = instance.render();
	      if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	        instance.render();
	      }
	      ReactDebugCurrentFiber.setCurrentPhase(null);
	    }
	  }

	  // React DevTools reads this flag.
	  workInProgress.effectTag |= PerformedWork;
	  if (didCaptureError) {
	    // If we're recovering from an error, reconcile twice: first to delete
	    // all the existing children.
	    reconcileChildrenAtExpirationTime(current, workInProgress, null, renderExpirationTime);
	    workInProgress.child = null;
	    // Now we can continue reconciling like normal. This has the effect of
	    // remounting all children regardless of whether their their
	    // identity matches.
	  }
	  reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, renderExpirationTime);
	  // Memoize props and state using the values we just used to render.
	  // TODO: Restructure so we never read values from the instance.
	  memoizeState(workInProgress, instance.state);
	  memoizeProps(workInProgress, instance.props);

	  // The context might have changed so we need to recalculate it.
	  if (hasContext) {
	    invalidateContextProvider(workInProgress, true);
	  }

	  return workInProgress.child;
	}

	function pushHostRootContext(workInProgress) {
	  var root = workInProgress.stateNode;
	  if (root.pendingContext) {
	    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
	  } else if (root.context) {
	    // Should always be set
	    pushTopLevelContextObject(workInProgress, root.context, false);
	  }
	  pushHostContainer(workInProgress, root.containerInfo);
	}

	function updateHostRoot(current, workInProgress, renderExpirationTime) {
	  pushHostRootContext(workInProgress);
	  var updateQueue = workInProgress.updateQueue;
	  if (updateQueue !== null) {
	    var nextProps = workInProgress.pendingProps;
	    var prevState = workInProgress.memoizedState;
	    var prevChildren = prevState !== null ? prevState.element : null;
	    processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);
	    var nextState = workInProgress.memoizedState;
	    // Caution: React DevTools currently depends on this property
	    // being called "element".
	    var nextChildren = nextState.element;

	    if (nextChildren === prevChildren) {
	      // If the state is the same as before, that's a bailout because we had
	      // no work that expires at this time.
	      resetHydrationState();
	      return bailoutOnAlreadyFinishedWork(current, workInProgress);
	    }
	    var root = workInProgress.stateNode;
	    if ((current === null || current.child === null) && root.hydrate && enterHydrationState(workInProgress)) {
	      // If we don't have any current children this might be the first pass.
	      // We always try to hydrate. If this isn't a hydration pass there won't
	      // be any children to hydrate which is effectively the same thing as
	      // not hydrating.

	      // This is a bit of a hack. We track the host root as a placement to
	      // know that we're currently in a mounting state. That way isMounted
	      // works as expected. We must reset this before committing.
	      // TODO: Delete this when we delete isMounted and findDOMNode.
	      workInProgress.effectTag |= Placement;

	      // Ensure that children mount into this root without tracking
	      // side-effects. This ensures that we don't store Placement effects on
	      // nodes that will be hydrated.
	      workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
	    } else {
	      // Otherwise reset hydration state in case we aborted and resumed another
	      // root.
	      resetHydrationState();
	      reconcileChildren(current, workInProgress, nextChildren);
	    }
	    return workInProgress.child;
	  }
	  resetHydrationState();
	  // If there is no update queue, that's a bailout because the root has no props.
	  return bailoutOnAlreadyFinishedWork(current, workInProgress);
	}

	function updateHostComponent(current, workInProgress, renderExpirationTime) {
	  pushHostContext(workInProgress);

	  if (current === null) {
	    tryToClaimNextHydratableInstance(workInProgress);
	  }

	  var type = workInProgress.type;
	  var memoizedProps = workInProgress.memoizedProps;
	  var nextProps = workInProgress.pendingProps;
	  var prevProps = current !== null ? current.memoizedProps : null;

	  if (hasContextChanged()) {
	    // Normally we can bail out on props equality but if context has changed
	    // we don't do the bailout and we have to reuse existing props instead.
	  } else if (memoizedProps === nextProps) {
	    var isHidden = workInProgress.mode & AsyncMode && shouldDeprioritizeSubtree(type, nextProps);
	    if (isHidden) {
	      // Before bailing out, make sure we've deprioritized a hidden component.
	      workInProgress.expirationTime = Never;
	    }
	    if (!isHidden || renderExpirationTime !== Never) {
	      return bailoutOnAlreadyFinishedWork(current, workInProgress);
	    }
	    // If we're rendering a hidden node at hidden priority, don't bailout. The
	    // parent is complete, but the children may not be.
	  }

	  var nextChildren = nextProps.children;
	  var isDirectTextChild = shouldSetTextContent(type, nextProps);

	  if (isDirectTextChild) {
	    // We special case a direct text child of a host node. This is a common
	    // case. We won't handle it as a reified child. We will instead handle
	    // this in the host environment that also have access to this prop. That
	    // avoids allocating another HostText fiber and traversing it.
	    nextChildren = null;
	  } else if (prevProps && shouldSetTextContent(type, prevProps)) {
	    // If we're switching from a direct text child to a normal child, or to
	    // empty, we need to schedule the text content to be reset.
	    workInProgress.effectTag |= ContentReset;
	  }

	  markRef(current, workInProgress);

	  // Check the host config to see if the children are offscreen/hidden.
	  if (renderExpirationTime !== Never && workInProgress.mode & AsyncMode && shouldDeprioritizeSubtree(type, nextProps)) {
	    // Down-prioritize the children.
	    workInProgress.expirationTime = Never;
	    // Bailout and come back to this fiber later.
	    workInProgress.memoizedProps = nextProps;
	    return null;
	  }

	  reconcileChildren(current, workInProgress, nextChildren);
	  memoizeProps(workInProgress, nextProps);
	  return workInProgress.child;
	}

	function updateHostText(current, workInProgress) {
	  if (current === null) {
	    tryToClaimNextHydratableInstance(workInProgress);
	  }
	  var nextProps = workInProgress.pendingProps;
	  memoizeProps(workInProgress, nextProps);
	  // Nothing to do here. This is terminal. We'll do the completion step
	  // immediately after.
	  return null;
	}

	function mountIndeterminateComponent(current, workInProgress, renderExpirationTime) {
	  !(current === null) ? invariant(false, 'An indeterminate component should never have mounted. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  var fn = workInProgress.type;
	  var props = workInProgress.pendingProps;
	  var unmaskedContext = getUnmaskedContext(workInProgress);
	  var context = getMaskedContext(workInProgress, unmaskedContext);

	  var value = void 0;

	  {
	    if (fn.prototype && typeof fn.prototype.render === 'function') {
	      var componentName = getComponentName(workInProgress) || 'Unknown';

	      if (!didWarnAboutBadClass[componentName]) {
	        warning(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
	        didWarnAboutBadClass[componentName] = true;
	      }
	    }

	    if (workInProgress.mode & StrictMode) {
	      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
	    }

	    ReactCurrentOwner.current = workInProgress;
	    value = fn(props, context);
	  }
	  // React DevTools reads this flag.
	  workInProgress.effectTag |= PerformedWork;

	  if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
	    var Component = workInProgress.type;

	    // Proceed under the assumption that this is a class instance
	    workInProgress.tag = ClassComponent;

	    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;

	    var getDerivedStateFromProps = Component.getDerivedStateFromProps;
	    if (typeof getDerivedStateFromProps === 'function') {
	      applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, props);
	    }

	    // Push context providers early to prevent context stack mismatches.
	    // During mounting we don't know the child context yet as the instance doesn't exist.
	    // We will invalidate the child context in finishClassComponent() right after rendering.
	    var hasContext = pushContextProvider(workInProgress);
	    adoptClassInstance(workInProgress, value);
	    mountClassInstance(workInProgress, renderExpirationTime);
	    return finishClassComponent(current, workInProgress, true, hasContext, renderExpirationTime);
	  } else {
	    // Proceed under the assumption that this is a functional component
	    workInProgress.tag = FunctionalComponent;
	    {
	      var _Component = workInProgress.type;

	      if (_Component) {
	        !!_Component.childContextTypes ? warning(false, '%s(...): childContextTypes cannot be defined on a functional component.', _Component.displayName || _Component.name || 'Component') : void 0;
	      }
	      if (workInProgress.ref !== null) {
	        var info = '';
	        var ownerName = ReactDebugCurrentFiber.getCurrentFiberOwnerName();
	        if (ownerName) {
	          info += '\n\nCheck the render method of `' + ownerName + '`.';
	        }

	        var warningKey = ownerName || workInProgress._debugID || '';
	        var debugSource = workInProgress._debugSource;
	        if (debugSource) {
	          warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
	        }
	        if (!didWarnAboutStatelessRefs[warningKey]) {
	          didWarnAboutStatelessRefs[warningKey] = true;
	          warning(false, 'Stateless function components cannot be given refs. ' + 'Attempts to access this ref will fail.%s%s', info, ReactDebugCurrentFiber.getCurrentFiberStackAddendum());
	        }
	      }

	      if (typeof fn.getDerivedStateFromProps === 'function') {
	        var _componentName = getComponentName(workInProgress) || 'Unknown';

	        if (!didWarnAboutGetDerivedStateOnFunctionalComponent[_componentName]) {
	          warning(false, '%s: Stateless functional components do not support getDerivedStateFromProps.', _componentName);
	          didWarnAboutGetDerivedStateOnFunctionalComponent[_componentName] = true;
	        }
	      }
	    }
	    reconcileChildren(current, workInProgress, value);
	    memoizeProps(workInProgress, props);
	    return workInProgress.child;
	  }
	}

	function updateTimeoutComponent(current, workInProgress, renderExpirationTime) {
	  if (enableSuspense) {
	    var nextProps = workInProgress.pendingProps;
	    var prevProps = workInProgress.memoizedProps;

	    var prevDidTimeout = workInProgress.memoizedState;

	    // Check if we already attempted to render the normal state. If we did,
	    // and we timed out, render the placeholder state.
	    var alreadyCaptured = (workInProgress.effectTag & DidCapture) === NoEffect;
	    var nextDidTimeout = !alreadyCaptured;

	    if (hasContextChanged()) {
	      // Normally we can bail out on props equality but if context has changed
	      // we don't do the bailout and we have to reuse existing props instead.
	    } else if (nextProps === prevProps && nextDidTimeout === prevDidTimeout) {
	      return bailoutOnAlreadyFinishedWork(current, workInProgress);
	    }

	    var render = nextProps.children;
	    var nextChildren = render(nextDidTimeout);
	    workInProgress.memoizedProps = nextProps;
	    workInProgress.memoizedState = nextDidTimeout;
	    reconcileChildren(current, workInProgress, nextChildren);
	    return workInProgress.child;
	  } else {
	    return null;
	  }
	}

	function updatePortalComponent(current, workInProgress, renderExpirationTime) {
	  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
	  var nextChildren = workInProgress.pendingProps;
	  if (hasContextChanged()) {
	    // Normally we can bail out on props equality but if context has changed
	    // we don't do the bailout and we have to reuse existing props instead.
	  } else if (workInProgress.memoizedProps === nextChildren) {
	    return bailoutOnAlreadyFinishedWork(current, workInProgress);
	  }

	  if (current === null) {
	    // Portals are special because we don't append the children during mount
	    // but at commit. Therefore we need to track insertions which the normal
	    // flow doesn't do during mount. This doesn't happen at the root because
	    // the root always starts with a "current" with a null child.
	    // TODO: Consider unifying this with how the root works.
	    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
	    memoizeProps(workInProgress, nextChildren);
	  } else {
	    reconcileChildren(current, workInProgress, nextChildren);
	    memoizeProps(workInProgress, nextChildren);
	  }
	  return workInProgress.child;
	}

	function propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {
	  var fiber = workInProgress.child;
	  if (fiber !== null) {
	    // Set the return pointer of the child to the work-in-progress fiber.
	    fiber.return = workInProgress;
	  }
	  while (fiber !== null) {
	    var nextFiber = void 0;
	    // Visit this fiber.
	    switch (fiber.tag) {
	      case ContextConsumer:
	        // Check if the context matches.
	        var observedBits = fiber.stateNode | 0;
	        if (fiber.type === context && (observedBits & changedBits) !== 0) {
	          // Update the expiration time of all the ancestors, including
	          // the alternates.
	          var node = fiber;
	          while (node !== null) {
	            var alternate = node.alternate;
	            if (node.expirationTime === NoWork || node.expirationTime > renderExpirationTime) {
	              node.expirationTime = renderExpirationTime;
	              if (alternate !== null && (alternate.expirationTime === NoWork || alternate.expirationTime > renderExpirationTime)) {
	                alternate.expirationTime = renderExpirationTime;
	              }
	            } else if (alternate !== null && (alternate.expirationTime === NoWork || alternate.expirationTime > renderExpirationTime)) {
	              alternate.expirationTime = renderExpirationTime;
	            } else {
	              // Neither alternate was updated, which means the rest of the
	              // ancestor path already has sufficient priority.
	              break;
	            }
	            node = node.return;
	          }
	          // Don't scan deeper than a matching consumer. When we render the
	          // consumer, we'll continue scanning from that point. This way the
	          // scanning work is time-sliced.
	          nextFiber = null;
	        } else {
	          // Traverse down.
	          nextFiber = fiber.child;
	        }
	        break;
	      case ContextProvider:
	        // Don't scan deeper if this is a matching provider
	        nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
	        break;
	      default:
	        // Traverse down.
	        nextFiber = fiber.child;
	        break;
	    }
	    if (nextFiber !== null) {
	      // Set the return pointer of the child to the work-in-progress fiber.
	      nextFiber.return = fiber;
	    } else {
	      // No child. Traverse to next sibling.
	      nextFiber = fiber;
	      while (nextFiber !== null) {
	        if (nextFiber === workInProgress) {
	          // We're back to the root of this subtree. Exit.
	          nextFiber = null;
	          break;
	        }
	        var sibling = nextFiber.sibling;
	        if (sibling !== null) {
	          // Set the return pointer of the sibling to the work-in-progress fiber.
	          sibling.return = nextFiber.return;
	          nextFiber = sibling;
	          break;
	        }
	        // No more siblings. Traverse up.
	        nextFiber = nextFiber.return;
	      }
	    }
	    fiber = nextFiber;
	  }
	}

	function updateContextProvider(current, workInProgress, renderExpirationTime) {
	  var providerType = workInProgress.type;
	  var context = providerType._context;

	  var newProps = workInProgress.pendingProps;
	  var oldProps = workInProgress.memoizedProps;
	  var canBailOnProps = true;

	  if (hasContextChanged()) {
	    canBailOnProps = false;
	    // Normally we can bail out on props equality but if context has changed
	    // we don't do the bailout and we have to reuse existing props instead.
	  } else if (oldProps === newProps) {
	    workInProgress.stateNode = 0;
	    pushProvider(workInProgress);
	    return bailoutOnAlreadyFinishedWork(current, workInProgress);
	  }

	  var newValue = newProps.value;
	  workInProgress.memoizedProps = newProps;

	  {
	    var providerPropTypes = workInProgress.type.propTypes;

	    if (providerPropTypes) {
	      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackAddendum$6);
	    }
	  }

	  var changedBits = void 0;
	  if (oldProps === null) {
	    // Initial render
	    changedBits = MAX_SIGNED_31_BIT_INT;
	  } else {
	    if (oldProps.value === newProps.value) {
	      // No change. Bailout early if children are the same.
	      if (oldProps.children === newProps.children && canBailOnProps) {
	        workInProgress.stateNode = 0;
	        pushProvider(workInProgress);
	        return bailoutOnAlreadyFinishedWork(current, workInProgress);
	      }
	      changedBits = 0;
	    } else {
	      var oldValue = oldProps.value;
	      // Use Object.is to compare the new context value to the old value.
	      // Inlined Object.is polyfill.
	      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	      if (oldValue === newValue && (oldValue !== 0 || 1 / oldValue === 1 / newValue) || oldValue !== oldValue && newValue !== newValue // eslint-disable-line no-self-compare
	      ) {
	          // No change. Bailout early if children are the same.
	          if (oldProps.children === newProps.children && canBailOnProps) {
	            workInProgress.stateNode = 0;
	            pushProvider(workInProgress);
	            return bailoutOnAlreadyFinishedWork(current, workInProgress);
	          }
	          changedBits = 0;
	        } else {
	        changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
	        {
	          !((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits) ? warning(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;
	        }
	        changedBits |= 0;

	        if (changedBits === 0) {
	          // No change. Bailout early if children are the same.
	          if (oldProps.children === newProps.children && canBailOnProps) {
	            workInProgress.stateNode = 0;
	            pushProvider(workInProgress);
	            return bailoutOnAlreadyFinishedWork(current, workInProgress);
	          }
	        } else {
	          propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
	        }
	      }
	    }
	  }

	  workInProgress.stateNode = changedBits;
	  pushProvider(workInProgress);

	  var newChildren = newProps.children;
	  reconcileChildren(current, workInProgress, newChildren);
	  return workInProgress.child;
	}

	function updateContextConsumer(current, workInProgress, renderExpirationTime) {
	  var context = workInProgress.type;
	  var newProps = workInProgress.pendingProps;
	  var oldProps = workInProgress.memoizedProps;

	  var newValue = getContextCurrentValue(context);
	  var changedBits = getContextChangedBits(context);

	  if (hasContextChanged()) {
	    // Normally we can bail out on props equality but if context has changed
	    // we don't do the bailout and we have to reuse existing props instead.
	  } else if (changedBits === 0 && oldProps === newProps) {
	    return bailoutOnAlreadyFinishedWork(current, workInProgress);
	  }
	  workInProgress.memoizedProps = newProps;

	  var observedBits = newProps.unstable_observedBits;
	  if (observedBits === undefined || observedBits === null) {
	    // Subscribe to all changes by default
	    observedBits = MAX_SIGNED_31_BIT_INT;
	  }
	  // Store the observedBits on the fiber's stateNode for quick access.
	  workInProgress.stateNode = observedBits;

	  if ((changedBits & observedBits) !== 0) {
	    // Context change propagation stops at matching consumers, for time-
	    // slicing. Continue the propagation here.
	    propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
	  } else if (oldProps === newProps) {
	    // Skip over a memoized parent with a bitmask bailout even
	    // if we began working on it because of a deeper matching child.
	    return bailoutOnAlreadyFinishedWork(current, workInProgress);
	  }
	  // There is no bailout on `children` equality because we expect people
	  // to often pass a bound method as a child, but it may reference
	  // `this.state` or `this.props` (and thus needs to re-render on `setState`).

	  var render = newProps.children;

	  {
	    !(typeof render === 'function') ? warning(false, 'A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;
	  }

	  var newChildren = void 0;
	  {
	    ReactCurrentOwner.current = workInProgress;
	    ReactDebugCurrentFiber.setCurrentPhase('render');
	    newChildren = render(newValue);
	    ReactDebugCurrentFiber.setCurrentPhase(null);
	  }

	  // React DevTools reads this flag.
	  workInProgress.effectTag |= PerformedWork;
	  reconcileChildren(current, workInProgress, newChildren);
	  return workInProgress.child;
	}

	/*
	  function reuseChildrenEffects(returnFiber : Fiber, firstChild : Fiber) {
	    let child = firstChild;
	    do {
	      // Ensure that the first and last effect of the parent corresponds
	      // to the children's first and last effect.
	      if (!returnFiber.firstEffect) {
	        returnFiber.firstEffect = child.firstEffect;
	      }
	      if (child.lastEffect) {
	        if (returnFiber.lastEffect) {
	          returnFiber.lastEffect.nextEffect = child.firstEffect;
	        }
	        returnFiber.lastEffect = child.lastEffect;
	      }
	    } while (child = child.sibling);
	  }
	  */

	function bailoutOnAlreadyFinishedWork(current, workInProgress) {
	  cancelWorkTimer(workInProgress);

	  if (enableProfilerTimer) {
	    // Don't update "base" render times for bailouts.
	    stopBaseRenderTimerIfRunning();
	  }

	  // TODO: We should ideally be able to bail out early if the children have no
	  // more work to do. However, since we don't have a separation of this
	  // Fiber's priority and its children yet - we don't know without doing lots
	  // of the same work we do anyway. Once we have that separation we can just
	  // bail out here if the children has no more work at this priority level.
	  // if (workInProgress.priorityOfChildren <= priorityLevel) {
	  //   // If there are side-effects in these children that have not yet been
	  //   // committed we need to ensure that they get properly transferred up.
	  //   if (current && current.child !== workInProgress.child) {
	  //     reuseChildrenEffects(workInProgress, child);
	  //   }
	  //   return null;
	  // }

	  cloneChildFibers(current, workInProgress);
	  return workInProgress.child;
	}

	function bailoutOnLowPriority(current, workInProgress) {
	  cancelWorkTimer(workInProgress);

	  if (enableProfilerTimer) {
	    // Don't update "base" render times for bailouts.
	    stopBaseRenderTimerIfRunning();
	  }

	  // TODO: Handle HostComponent tags here as well and call pushHostContext()?
	  // See PR 8590 discussion for context
	  switch (workInProgress.tag) {
	    case HostRoot:
	      pushHostRootContext(workInProgress);
	      break;
	    case ClassComponent:
	      pushContextProvider(workInProgress);
	      break;
	    case HostPortal:
	      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
	      break;
	    case ContextProvider:
	      pushProvider(workInProgress);
	      break;
	  }
	  // TODO: What if this is currently in progress?
	  // How can that happen? How is this not being cloned?
	  return null;
	}

	// TODO: Delete memoizeProps/State and move to reconcile/bailout instead
	function memoizeProps(workInProgress, nextProps) {
	  workInProgress.memoizedProps = nextProps;
	}

	function memoizeState(workInProgress, nextState) {
	  workInProgress.memoizedState = nextState;
	  // Don't reset the updateQueue, in case there are pending updates. Resetting
	  // is handled by processUpdateQueue.
	}

	function beginWork(current, workInProgress, renderExpirationTime) {
	  if (enableProfilerTimer) {
	    if (workInProgress.mode & ProfileMode) {
	      markActualRenderTimeStarted(workInProgress);
	    }
	  }

	  if (workInProgress.expirationTime === NoWork || workInProgress.expirationTime > renderExpirationTime) {
	    return bailoutOnLowPriority(current, workInProgress);
	  }

	  switch (workInProgress.tag) {
	    case IndeterminateComponent:
	      return mountIndeterminateComponent(current, workInProgress, renderExpirationTime);
	    case FunctionalComponent:
	      return updateFunctionalComponent(current, workInProgress);
	    case ClassComponent:
	      return updateClassComponent(current, workInProgress, renderExpirationTime);
	    case HostRoot:
	      return updateHostRoot(current, workInProgress, renderExpirationTime);
	    case HostComponent:
	      return updateHostComponent(current, workInProgress, renderExpirationTime);
	    case HostText:
	      return updateHostText(current, workInProgress);
	    case TimeoutComponent:
	      return updateTimeoutComponent(current, workInProgress, renderExpirationTime);
	    case HostPortal:
	      return updatePortalComponent(current, workInProgress, renderExpirationTime);
	    case ForwardRef:
	      return updateForwardRef(current, workInProgress);
	    case Fragment:
	      return updateFragment(current, workInProgress);
	    case Mode:
	      return updateMode(current, workInProgress);
	    case Profiler:
	      return updateProfiler(current, workInProgress);
	    case ContextProvider:
	      return updateContextProvider(current, workInProgress, renderExpirationTime);
	    case ContextConsumer:
	      return updateContextConsumer(current, workInProgress, renderExpirationTime);
	    default:
	      invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
	  }
	}

	function markUpdate(workInProgress) {
	  // Tag the fiber with an update effect. This turns a Placement into
	  // a PlacementAndUpdate.
	  workInProgress.effectTag |= Update;
	}

	function markRef$1(workInProgress) {
	  workInProgress.effectTag |= Ref;
	}

	function appendAllChildren(parent, workInProgress) {
	  // We only have the top Fiber that was created but we need recurse down its
	  // children to find all the terminal nodes.
	  var node = workInProgress.child;
	  while (node !== null) {
	    if (node.tag === HostComponent || node.tag === HostText) {
	      appendInitialChild(parent, node.stateNode);
	    } else if (node.tag === HostPortal) {
	      // If we have a portal child, then we don't want to traverse
	      // down its children. Instead, we'll get insertions from each child in
	      // the portal directly.
	    } else if (node.child !== null) {
	      node.child.return = node;
	      node = node.child;
	      continue;
	    }
	    if (node === workInProgress) {
	      return;
	    }
	    while (node.sibling === null) {
	      if (node.return === null || node.return === workInProgress) {
	        return;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	}

	var updateHostContainer = void 0;
	var updateHostComponent$1 = void 0;
	var updateHostText$1 = void 0;
	if (supportsMutation) {
	  // Mutation mode

	  updateHostContainer = function (workInProgress) {
	    // Noop
	  };
	  updateHostComponent$1 = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext) {
	    // TODO: Type this specific to this type of component.
	    workInProgress.updateQueue = updatePayload;
	    // If the update payload indicates that there is a change or if there
	    // is a new ref we mark this as an update. All the work is done in commitWork.
	    if (updatePayload) {
	      markUpdate(workInProgress);
	    }
	  };
	  updateHostText$1 = function (current, workInProgress, oldText, newText) {
	    // If the text differs, mark it as an update. All the work in done in commitWork.
	    if (oldText !== newText) {
	      markUpdate(workInProgress);
	    }
	  };
	} else if (supportsPersistence) {
	  // Persistent host tree mode

	  // An unfortunate fork of appendAllChildren because we have two different parent types.
	  var appendAllChildrenToContainer = function (containerChildSet, workInProgress) {
	    // We only have the top Fiber that was created but we need recurse down its
	    // children to find all the terminal nodes.
	    var node = workInProgress.child;
	    while (node !== null) {
	      if (node.tag === HostComponent || node.tag === HostText) {
	        appendChildToContainerChildSet(containerChildSet, node.stateNode);
	      } else if (node.tag === HostPortal) {
	        // If we have a portal child, then we don't want to traverse
	        // down its children. Instead, we'll get insertions from each child in
	        // the portal directly.
	      } else if (node.child !== null) {
	        node.child.return = node;
	        node = node.child;
	        continue;
	      }
	      if (node === workInProgress) {
	        return;
	      }
	      while (node.sibling === null) {
	        if (node.return === null || node.return === workInProgress) {
	          return;
	        }
	        node = node.return;
	      }
	      node.sibling.return = node.return;
	      node = node.sibling;
	    }
	  };
	  updateHostContainer = function (workInProgress) {
	    var portalOrRoot = workInProgress.stateNode;
	    var childrenUnchanged = workInProgress.firstEffect === null;
	    if (childrenUnchanged) {
	      // No changes, just reuse the existing instance.
	    } else {
	      var container = portalOrRoot.containerInfo;
	      var newChildSet = createContainerChildSet(container);
	      // If children might have changed, we have to add them all to the set.
	      appendAllChildrenToContainer(newChildSet, workInProgress);
	      portalOrRoot.pendingChildren = newChildSet;
	      // Schedule an update on the container to swap out the container.
	      markUpdate(workInProgress);
	      finalizeContainerChildren(container, newChildSet);
	    }
	  };
	  updateHostComponent$1 = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext) {
	    // If there are no effects associated with this node, then none of our children had any updates.
	    // This guarantees that we can reuse all of them.
	    var childrenUnchanged = workInProgress.firstEffect === null;
	    var currentInstance = current.stateNode;
	    if (childrenUnchanged && updatePayload === null) {
	      // No changes, just reuse the existing instance.
	      // Note that this might release a previous clone.
	      workInProgress.stateNode = currentInstance;
	    } else {
	      var recyclableInstance = workInProgress.stateNode;
	      var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);
	      if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {
	        markUpdate(workInProgress);
	      }
	      workInProgress.stateNode = newInstance;
	      if (childrenUnchanged) {
	        // If there are no other effects in this tree, we need to flag this node as having one.
	        // Even though we're not going to use it for anything.
	        // Otherwise parents won't know that there are new children to propagate upwards.
	        markUpdate(workInProgress);
	      } else {
	        // If children might have changed, we have to add them all to the set.
	        appendAllChildren(newInstance, workInProgress);
	      }
	    }
	  };
	  updateHostText$1 = function (current, workInProgress, oldText, newText) {
	    if (oldText !== newText) {
	      // If the text content differs, we'll create a new text instance for it.
	      var rootContainerInstance = getRootHostContainer();
	      var currentHostContext = getHostContext();
	      workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress);
	      // We'll have to mark it as having an effect, even though we won't use the effect for anything.
	      // This lets the parents know that at least one of their children has changed.
	      markUpdate(workInProgress);
	    }
	  };
	} else {
	  // No host operations
	  updateHostContainer = function (workInProgress) {
	    // Noop
	  };
	  updateHostComponent$1 = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext) {
	    // Noop
	  };
	  updateHostText$1 = function (current, workInProgress, oldText, newText) {
	    // Noop
	  };
	}

	function completeWork(current, workInProgress, renderExpirationTime) {
	  var newProps = workInProgress.pendingProps;

	  if (enableProfilerTimer) {
	    if (workInProgress.mode & ProfileMode) {
	      recordElapsedActualRenderTime(workInProgress);
	    }
	  }

	  switch (workInProgress.tag) {
	    case FunctionalComponent:
	      return null;
	    case ClassComponent:
	      {
	        // We are leaving this subtree, so pop context if any.
	        popContextProvider(workInProgress);
	        return null;
	      }
	    case HostRoot:
	      {
	        popHostContainer(workInProgress);
	        popTopLevelContextObject(workInProgress);
	        var fiberRoot = workInProgress.stateNode;
	        if (fiberRoot.pendingContext) {
	          fiberRoot.context = fiberRoot.pendingContext;
	          fiberRoot.pendingContext = null;
	        }
	        if (current === null || current.child === null) {
	          // If we hydrated, pop so that we can delete any remaining children
	          // that weren't hydrated.
	          popHydrationState(workInProgress);
	          // This resets the hacky state to fix isMounted before committing.
	          // TODO: Delete this when we delete isMounted and findDOMNode.
	          workInProgress.effectTag &= ~Placement;
	        }
	        updateHostContainer(workInProgress);
	        return null;
	      }
	    case HostComponent:
	      {
	        popHostContext(workInProgress);
	        var rootContainerInstance = getRootHostContainer();
	        var type = workInProgress.type;
	        if (current !== null && workInProgress.stateNode != null) {
	          // If we have an alternate, that means this is an update and we need to
	          // schedule a side-effect to do the updates.
	          var oldProps = current.memoizedProps;
	          // If we get updated because one of our children updated, we don't
	          // have newProps so we'll have to reuse them.
	          // TODO: Split the update API as separate for the props vs. children.
	          // Even better would be if children weren't special cased at all tho.
	          var instance = workInProgress.stateNode;
	          var currentHostContext = getHostContext();
	          // TODO: Experiencing an error where oldProps is null. Suggests a host
	          // component is hitting the resume path. Figure out why. Possibly
	          // related to `hidden`.
	          var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);

	          updateHostComponent$1(current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext);

	          if (current.ref !== workInProgress.ref) {
	            markRef$1(workInProgress);
	          }
	        } else {
	          if (!newProps) {
	            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	            // This can happen when we abort work.
	            return null;
	          }

	          var _currentHostContext = getHostContext();
	          // TODO: Move createInstance to beginWork and keep it on a context
	          // "stack" as the parent. Then append children as we go in beginWork
	          // or completeWork depending on we want to add then top->down or
	          // bottom->up. Top->down is faster in IE11.
	          var wasHydrated = popHydrationState(workInProgress);
	          if (wasHydrated) {
	            // TODO: Move this and createInstance step into the beginPhase
	            // to consolidate.
	            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, _currentHostContext)) {
	              // If changes to the hydrated node needs to be applied at the
	              // commit-phase we mark this as such.
	              markUpdate(workInProgress);
	            }
	          } else {
	            var _instance = createInstance(type, newProps, rootContainerInstance, _currentHostContext, workInProgress);

	            appendAllChildren(_instance, workInProgress);

	            // Certain renderers require commit-time effects for initial mount.
	            // (eg DOM renderer supports auto-focus for certain elements).
	            // Make sure such renderers get scheduled for later work.
	            if (finalizeInitialChildren(_instance, type, newProps, rootContainerInstance, _currentHostContext)) {
	              markUpdate(workInProgress);
	            }
	            workInProgress.stateNode = _instance;
	          }

	          if (workInProgress.ref !== null) {
	            // If there is a ref on a host node we need to schedule a callback
	            markRef$1(workInProgress);
	          }
	        }
	        return null;
	      }
	    case HostText:
	      {
	        var newText = newProps;
	        if (current && workInProgress.stateNode != null) {
	          var oldText = current.memoizedProps;
	          // If we have an alternate, that means this is an update and we need
	          // to schedule a side-effect to do the updates.
	          updateHostText$1(current, workInProgress, oldText, newText);
	        } else {
	          if (typeof newText !== 'string') {
	            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	            // This can happen when we abort work.
	            return null;
	          }
	          var _rootContainerInstance = getRootHostContainer();
	          var _currentHostContext2 = getHostContext();
	          var _wasHydrated = popHydrationState(workInProgress);
	          if (_wasHydrated) {
	            if (prepareToHydrateHostTextInstance(workInProgress)) {
	              markUpdate(workInProgress);
	            }
	          } else {
	            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext2, workInProgress);
	          }
	        }
	        return null;
	      }
	    case ForwardRef:
	      return null;
	    case TimeoutComponent:
	      return null;
	    case Fragment:
	      return null;
	    case Mode:
	      return null;
	    case Profiler:
	      return null;
	    case HostPortal:
	      popHostContainer(workInProgress);
	      updateHostContainer(workInProgress);
	      return null;
	    case ContextProvider:
	      // Pop provider fiber
	      popProvider(workInProgress);
	      return null;
	    case ContextConsumer:
	      return null;
	    // Error cases
	    case IndeterminateComponent:
	      invariant(false, 'An indeterminate component should have become determinate before completing. This error is likely caused by a bug in React. Please file an issue.');
	    // eslint-disable-next-line no-fallthrough
	    default:
	      invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
	  }
	}

	// This module is forked in different environments.
	// By default, return `true` to log errors to the console.
	// Forks can return `false` if this isn't desirable.
	function showErrorDialog(capturedError) {
	  return true;
	}

	function logCapturedError(capturedError) {
	  var logError = showErrorDialog(capturedError);

	  // Allow injected showErrorDialog() to prevent default console.error logging.
	  // This enables renderers like ReactNative to better manage redbox behavior.
	  if (logError === false) {
	    return;
	  }

	  var error = capturedError.error;
	  var suppressLogging = error && error.suppressReactErrorLogging;
	  if (suppressLogging) {
	    return;
	  }

	  {
	    var componentName = capturedError.componentName,
	        componentStack = capturedError.componentStack,
	        errorBoundaryName = capturedError.errorBoundaryName,
	        errorBoundaryFound = capturedError.errorBoundaryFound,
	        willRetry = capturedError.willRetry;


	    var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';

	    var errorBoundaryMessage = void 0;
	    // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.
	    if (errorBoundaryFound && errorBoundaryName) {
	      if (willRetry) {
	        errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');
	      } else {
	        errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';
	      }
	    } else {
	      errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
	    }
	    var combinedMessage = '' + componentNameMessage + componentStack + '\n\n' + ('' + errorBoundaryMessage);

	    // In development, we provide our own message with just the component stack.
	    // We don't include the original error message and JS stack because the browser
	    // has already printed it. Even if the application swallows the error, it is still
	    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
	    console.error(combinedMessage);
	  }
	}

	var invokeGuardedCallback$3 = ReactErrorUtils.invokeGuardedCallback;
	var hasCaughtError$1 = ReactErrorUtils.hasCaughtError;
	var clearCaughtError$1 = ReactErrorUtils.clearCaughtError;


	var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
	{
	  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
	}

	function logError(boundary, errorInfo) {
	  var source = errorInfo.source;
	  var stack = errorInfo.stack;
	  if (stack === null && source !== null) {
	    stack = getStackAddendumByWorkInProgressFiber(source);
	  }

	  var capturedError = {
	    componentName: source !== null ? getComponentName(source) : null,
	    componentStack: stack !== null ? stack : '',
	    error: errorInfo.value,
	    errorBoundary: null,
	    errorBoundaryName: null,
	    errorBoundaryFound: false,
	    willRetry: false
	  };

	  if (boundary !== null && boundary.tag === ClassComponent) {
	    capturedError.errorBoundary = boundary.stateNode;
	    capturedError.errorBoundaryName = getComponentName(boundary);
	    capturedError.errorBoundaryFound = true;
	    capturedError.willRetry = true;
	  }

	  try {
	    logCapturedError(capturedError);
	  } catch (e) {
	    // Prevent cycle if logCapturedError() throws.
	    // A cycle may still occur if logCapturedError renders a component that throws.
	    var suppressLogging = e && e.suppressReactErrorLogging;
	    if (!suppressLogging) {
	      console.error(e);
	    }
	  }
	}

	var callComponentWillUnmountWithTimer = function (current, instance) {
	  startPhaseTimer(current, 'componentWillUnmount');
	  instance.props = current.memoizedProps;
	  instance.state = current.memoizedState;
	  instance.componentWillUnmount();
	  stopPhaseTimer();
	};

	// Capture errors so they don't interrupt unmounting.
	function safelyCallComponentWillUnmount(current, instance) {
	  {
	    invokeGuardedCallback$3(null, callComponentWillUnmountWithTimer, null, current, instance);
	    if (hasCaughtError$1()) {
	      var unmountError = clearCaughtError$1();
	      captureCommitPhaseError(current, unmountError);
	    }
	  }
	}

	function safelyDetachRef(current) {
	  var ref = current.ref;
	  if (ref !== null) {
	    if (typeof ref === 'function') {
	      {
	        invokeGuardedCallback$3(null, ref, null, null);
	        if (hasCaughtError$1()) {
	          var refError = clearCaughtError$1();
	          captureCommitPhaseError(current, refError);
	        }
	      }
	    } else {
	      ref.current = null;
	    }
	  }
	}

	function commitBeforeMutationLifeCycles(current, finishedWork) {
	  switch (finishedWork.tag) {
	    case ClassComponent:
	      {
	        if (finishedWork.effectTag & Snapshot) {
	          if (current !== null) {
	            var prevProps = current.memoizedProps;
	            var prevState = current.memoizedState;
	            startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');
	            var instance = finishedWork.stateNode;
	            instance.props = finishedWork.memoizedProps;
	            instance.state = finishedWork.memoizedState;
	            var snapshot = instance.getSnapshotBeforeUpdate(prevProps, prevState);
	            {
	              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
	              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
	                didWarnSet.add(finishedWork.type);
	                warning(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork));
	              }
	            }
	            instance.__reactInternalSnapshotBeforeUpdate = snapshot;
	            stopPhaseTimer();
	          }
	        }
	        return;
	      }
	    case HostRoot:
	    case HostComponent:
	    case HostText:
	    case HostPortal:
	      // Nothing to do for these component types
	      return;
	    default:
	      {
	        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
	      }
	  }
	}

	function commitLifeCycles(finishedRoot, current, finishedWork, currentTime, committedExpirationTime) {
	  switch (finishedWork.tag) {
	    case ClassComponent:
	      {
	        var instance = finishedWork.stateNode;
	        if (finishedWork.effectTag & Update) {
	          if (current === null) {
	            startPhaseTimer(finishedWork, 'componentDidMount');
	            instance.props = finishedWork.memoizedProps;
	            instance.state = finishedWork.memoizedState;
	            instance.componentDidMount();
	            stopPhaseTimer();
	          } else {
	            var prevProps = current.memoizedProps;
	            var prevState = current.memoizedState;
	            startPhaseTimer(finishedWork, 'componentDidUpdate');
	            instance.props = finishedWork.memoizedProps;
	            instance.state = finishedWork.memoizedState;
	            instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
	            stopPhaseTimer();
	          }
	        }
	        var updateQueue = finishedWork.updateQueue;
	        if (updateQueue !== null) {
	          instance.props = finishedWork.memoizedProps;
	          instance.state = finishedWork.memoizedState;
	          commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);
	        }
	        return;
	      }
	    case HostRoot:
	      {
	        var _updateQueue = finishedWork.updateQueue;
	        if (_updateQueue !== null) {
	          var _instance = null;
	          if (finishedWork.child !== null) {
	            switch (finishedWork.child.tag) {
	              case HostComponent:
	                _instance = getPublicInstance(finishedWork.child.stateNode);
	                break;
	              case ClassComponent:
	                _instance = finishedWork.child.stateNode;
	                break;
	            }
	          }
	          commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);
	        }
	        return;
	      }
	    case HostComponent:
	      {
	        var _instance2 = finishedWork.stateNode;

	        // Renderers may schedule work to be done after host components are mounted
	        // (eg DOM renderer may schedule auto-focus for inputs and form controls).
	        // These effects should only be committed when components are first mounted,
	        // aka when there is no current/alternate.
	        if (current === null && finishedWork.effectTag & Update) {
	          var type = finishedWork.type;
	          var props = finishedWork.memoizedProps;
	          commitMount(_instance2, type, props, finishedWork);
	        }

	        return;
	      }
	    case HostText:
	      {
	        // We have no life-cycles associated with text.
	        return;
	      }
	    case HostPortal:
	      {
	        // We have no life-cycles associated with portals.
	        return;
	      }
	    case Profiler:
	      {
	        // We have no life-cycles associated with Profiler.
	        return;
	      }
	    case TimeoutComponent:
	      {
	        // We have no life-cycles associated with Timeouts.
	        return;
	      }
	    default:
	      {
	        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
	      }
	  }
	}

	function commitAttachRef(finishedWork) {
	  var ref = finishedWork.ref;
	  if (ref !== null) {
	    var instance = finishedWork.stateNode;
	    var instanceToUse = void 0;
	    switch (finishedWork.tag) {
	      case HostComponent:
	        instanceToUse = getPublicInstance(instance);
	        break;
	      default:
	        instanceToUse = instance;
	    }
	    if (typeof ref === 'function') {
	      ref(instanceToUse);
	    } else {
	      {
	        if (!ref.hasOwnProperty('current')) {
	          warning(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork), getStackAddendumByWorkInProgressFiber(finishedWork));
	        }
	      }

	      ref.current = instanceToUse;
	    }
	  }
	}

	function commitDetachRef(current) {
	  var currentRef = current.ref;
	  if (currentRef !== null) {
	    if (typeof currentRef === 'function') {
	      currentRef(null);
	    } else {
	      currentRef.current = null;
	    }
	  }
	}

	// User-originating errors (lifecycles and refs) should not interrupt
	// deletion, so don't let them throw. Host-originating errors should
	// interrupt deletion, so it's okay
	function commitUnmount(current) {
	  if (typeof onCommitUnmount === 'function') {
	    onCommitUnmount(current);
	  }

	  switch (current.tag) {
	    case ClassComponent:
	      {
	        safelyDetachRef(current);
	        var instance = current.stateNode;
	        if (typeof instance.componentWillUnmount === 'function') {
	          safelyCallComponentWillUnmount(current, instance);
	        }
	        return;
	      }
	    case HostComponent:
	      {
	        safelyDetachRef(current);
	        return;
	      }
	    case HostPortal:
	      {
	        // TODO: this is recursive.
	        // We are also not using this parent because
	        // the portal will get pushed immediately.
	        if (supportsMutation) {
	          unmountHostComponents(current);
	        } else if (supportsPersistence) {
	          emptyPortalContainer(current);
	        }
	        return;
	      }
	  }
	}

	function commitNestedUnmounts(root) {
	  // While we're inside a removed host node we don't want to call
	  // removeChild on the inner nodes because they're removed by the top
	  // call anyway. We also want to call componentWillUnmount on all
	  // composites before this host node is removed from the tree. Therefore
	  var node = root;
	  while (true) {
	    commitUnmount(node);
	    // Visit children because they may contain more composite or host nodes.
	    // Skip portals because commitUnmount() currently visits them recursively.
	    if (node.child !== null && (
	    // If we use mutation we drill down into portals using commitUnmount above.
	    // If we don't use mutation we drill down into portals here instead.
	    !supportsMutation || node.tag !== HostPortal)) {
	      node.child.return = node;
	      node = node.child;
	      continue;
	    }
	    if (node === root) {
	      return;
	    }
	    while (node.sibling === null) {
	      if (node.return === null || node.return === root) {
	        return;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	}

	function detachFiber(current) {
	  // Cut off the return pointers to disconnect it from the tree. Ideally, we
	  // should clear the child pointer of the parent alternate to let this
	  // get GC:ed but we don't know which for sure which parent is the current
	  // one so we'll settle for GC:ing the subtree of this child. This child
	  // itself will be GC:ed when the parent updates the next time.
	  current.return = null;
	  current.child = null;
	  if (current.alternate) {
	    current.alternate.child = null;
	    current.alternate.return = null;
	  }
	}

	function emptyPortalContainer(current) {
	  if (!supportsPersistence) {
	    return;
	  }

	  var portal = current.stateNode;
	  var containerInfo = portal.containerInfo;

	  var emptyChildSet = createContainerChildSet(containerInfo);
	  replaceContainerChildren(containerInfo, emptyChildSet);
	}

	function commitContainer(finishedWork) {
	  if (!supportsPersistence) {
	    return;
	  }

	  switch (finishedWork.tag) {
	    case ClassComponent:
	      {
	        return;
	      }
	    case HostComponent:
	      {
	        return;
	      }
	    case HostText:
	      {
	        return;
	      }
	    case HostRoot:
	    case HostPortal:
	      {
	        var portalOrRoot = finishedWork.stateNode;
	        var containerInfo = portalOrRoot.containerInfo,
	            _pendingChildren = portalOrRoot.pendingChildren;

	        replaceContainerChildren(containerInfo, _pendingChildren);
	        return;
	      }
	    default:
	      {
	        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
	      }
	  }
	}

	function getHostParentFiber(fiber) {
	  var parent = fiber.return;
	  while (parent !== null) {
	    if (isHostParent(parent)) {
	      return parent;
	    }
	    parent = parent.return;
	  }
	  invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.');
	}

	function isHostParent(fiber) {
	  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
	}

	function getHostSibling(fiber) {
	  // We're going to search forward into the tree until we find a sibling host
	  // node. Unfortunately, if multiple insertions are done in a row we have to
	  // search past them. This leads to exponential search for the next sibling.
	  var node = fiber;
	  siblings: while (true) {
	    // If we didn't find anything, let's try the next sibling.
	    while (node.sibling === null) {
	      if (node.return === null || isHostParent(node.return)) {
	        // If we pop out of the root or hit the parent the fiber we are the
	        // last sibling.
	        return null;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	    while (node.tag !== HostComponent && node.tag !== HostText) {
	      // If it is not host node and, we might have a host node inside it.
	      // Try to search down until we find one.
	      if (node.effectTag & Placement) {
	        // If we don't have a child, try the siblings instead.
	        continue siblings;
	      }
	      // If we don't have a child, try the siblings instead.
	      // We also skip portals because they are not part of this host tree.
	      if (node.child === null || node.tag === HostPortal) {
	        continue siblings;
	      } else {
	        node.child.return = node;
	        node = node.child;
	      }
	    }
	    // Check if this host node is stable or about to be placed.
	    if (!(node.effectTag & Placement)) {
	      // Found it!
	      return node.stateNode;
	    }
	  }
	}

	function commitPlacement(finishedWork) {
	  if (!supportsMutation) {
	    return;
	  }

	  // Recursively insert all host nodes into the parent.
	  var parentFiber = getHostParentFiber(finishedWork);
	  var parent = void 0;
	  var isContainer = void 0;
	  switch (parentFiber.tag) {
	    case HostComponent:
	      parent = parentFiber.stateNode;
	      isContainer = false;
	      break;
	    case HostRoot:
	      parent = parentFiber.stateNode.containerInfo;
	      isContainer = true;
	      break;
	    case HostPortal:
	      parent = parentFiber.stateNode.containerInfo;
	      isContainer = true;
	      break;
	    default:
	      invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.');
	  }
	  if (parentFiber.effectTag & ContentReset) {
	    // Reset the text content of the parent before doing any insertions
	    resetTextContent(parent);
	    // Clear ContentReset from the effect tag
	    parentFiber.effectTag &= ~ContentReset;
	  }

	  var before = getHostSibling(finishedWork);
	  // We only have the top Fiber that was inserted but we need recurse down its
	  // children to find all the terminal nodes.
	  var node = finishedWork;
	  while (true) {
	    if (node.tag === HostComponent || node.tag === HostText) {
	      if (before) {
	        if (isContainer) {
	          insertInContainerBefore(parent, node.stateNode, before);
	        } else {
	          insertBefore(parent, node.stateNode, before);
	        }
	      } else {
	        if (isContainer) {
	          appendChildToContainer(parent, node.stateNode);
	        } else {
	          appendChild(parent, node.stateNode);
	        }
	      }
	    } else if (node.tag === HostPortal) {
	      // If the insertion itself is a portal, then we don't want to traverse
	      // down its children. Instead, we'll get insertions from each child in
	      // the portal directly.
	    } else if (node.child !== null) {
	      node.child.return = node;
	      node = node.child;
	      continue;
	    }
	    if (node === finishedWork) {
	      return;
	    }
	    while (node.sibling === null) {
	      if (node.return === null || node.return === finishedWork) {
	        return;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	}

	function unmountHostComponents(current) {
	  // We only have the top Fiber that was inserted but we need recurse down its
	  var node = current;

	  // Each iteration, currentParent is populated with node's host parent if not
	  // currentParentIsValid.
	  var currentParentIsValid = false;
	  var currentParent = void 0;
	  var currentParentIsContainer = void 0;

	  while (true) {
	    if (!currentParentIsValid) {
	      var parent = node.return;
	      findParent: while (true) {
	        !(parent !== null) ? invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	        switch (parent.tag) {
	          case HostComponent:
	            currentParent = parent.stateNode;
	            currentParentIsContainer = false;
	            break findParent;
	          case HostRoot:
	            currentParent = parent.stateNode.containerInfo;
	            currentParentIsContainer = true;
	            break findParent;
	          case HostPortal:
	            currentParent = parent.stateNode.containerInfo;
	            currentParentIsContainer = true;
	            break findParent;
	        }
	        parent = parent.return;
	      }
	      currentParentIsValid = true;
	    }

	    if (node.tag === HostComponent || node.tag === HostText) {
	      commitNestedUnmounts(node);
	      // After all the children have unmounted, it is now safe to remove the
	      // node from the tree.
	      if (currentParentIsContainer) {
	        removeChildFromContainer(currentParent, node.stateNode);
	      } else {
	        removeChild(currentParent, node.stateNode);
	      }
	      // Don't visit children because we already visited them.
	    } else if (node.tag === HostPortal) {
	      // When we go into a portal, it becomes the parent to remove from.
	      // We will reassign it back when we pop the portal on the way up.
	      currentParent = node.stateNode.containerInfo;
	      // Visit children because portals might contain host components.
	      if (node.child !== null) {
	        node.child.return = node;
	        node = node.child;
	        continue;
	      }
	    } else {
	      commitUnmount(node);
	      // Visit children because we may find more host components below.
	      if (node.child !== null) {
	        node.child.return = node;
	        node = node.child;
	        continue;
	      }
	    }
	    if (node === current) {
	      return;
	    }
	    while (node.sibling === null) {
	      if (node.return === null || node.return === current) {
	        return;
	      }
	      node = node.return;
	      if (node.tag === HostPortal) {
	        // When we go out of the portal, we need to restore the parent.
	        // Since we don't keep a stack of them, we will search for it.
	        currentParentIsValid = false;
	      }
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	}

	function commitDeletion(current) {
	  if (supportsMutation) {
	    // Recursively delete all host nodes from the parent.
	    // Detach refs and call componentWillUnmount() on the whole subtree.
	    unmountHostComponents(current);
	  } else {
	    // Detach refs and call componentWillUnmount() on the whole subtree.
	    commitNestedUnmounts(current);
	  }
	  detachFiber(current);
	}

	function commitWork(current, finishedWork) {
	  if (!supportsMutation) {
	    commitContainer(finishedWork);
	    return;
	  }

	  switch (finishedWork.tag) {
	    case ClassComponent:
	      {
	        return;
	      }
	    case HostComponent:
	      {
	        var instance = finishedWork.stateNode;
	        if (instance != null) {
	          // Commit the work prepared earlier.
	          var newProps = finishedWork.memoizedProps;
	          // For hydration we reuse the update path but we treat the oldProps
	          // as the newProps. The updatePayload will contain the real change in
	          // this case.
	          var oldProps = current !== null ? current.memoizedProps : newProps;
	          var type = finishedWork.type;
	          // TODO: Type the updateQueue to be specific to host components.
	          var updatePayload = finishedWork.updateQueue;
	          finishedWork.updateQueue = null;
	          if (updatePayload !== null) {
	            commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
	          }
	        }
	        return;
	      }
	    case HostText:
	      {
	        !(finishedWork.stateNode !== null) ? invariant(false, 'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	        var textInstance = finishedWork.stateNode;
	        var newText = finishedWork.memoizedProps;
	        // For hydration we reuse the update path but we treat the oldProps
	        // as the newProps. The updatePayload will contain the real change in
	        // this case.
	        var oldText = current !== null ? current.memoizedProps : newText;
	        commitTextUpdate(textInstance, oldText, newText);
	        return;
	      }
	    case HostRoot:
	      {
	        return;
	      }
	    case Profiler:
	      {
	        if (enableProfilerTimer) {
	          var onRender = finishedWork.memoizedProps.onRender;
	          onRender(finishedWork.memoizedProps.id, current === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseTime, finishedWork.actualStartTime, getCommitTime());
	        }
	        return;
	      }
	    case TimeoutComponent:
	      {
	        return;
	      }
	    default:
	      {
	        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
	      }
	  }
	}

	function commitResetTextContent(current) {
	  if (!supportsMutation) {
	    return;
	  }
	  resetTextContent(current.stateNode);
	}

	function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
	  var update = createUpdate(expirationTime);
	  // Unmount the root by rendering null.
	  update.tag = CaptureUpdate;
	  // Caution: React DevTools currently depends on this property
	  // being called "element".
	  update.payload = { element: null };
	  var error = errorInfo.value;
	  update.callback = function () {
	    onUncaughtError(error);
	    logError(fiber, errorInfo);
	  };
	  return update;
	}

	function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
	  var update = createUpdate(expirationTime);
	  update.tag = CaptureUpdate;
	  var getDerivedStateFromCatch = fiber.type.getDerivedStateFromCatch;
	  if (enableGetDerivedStateFromCatch && typeof getDerivedStateFromCatch === 'function') {
	    var error = errorInfo.value;
	    update.payload = function () {
	      return getDerivedStateFromCatch(error);
	    };
	  }

	  var inst = fiber.stateNode;
	  if (inst !== null && typeof inst.componentDidCatch === 'function') {
	    update.callback = function callback() {
	      if (!enableGetDerivedStateFromCatch || getDerivedStateFromCatch !== 'function') {
	        // To preserve the preexisting retry behavior of error boundaries,
	        // we keep track of which ones already failed during this batch.
	        // This gets reset before we yield back to the browser.
	        // TODO: Warn in strict mode if getDerivedStateFromCatch is
	        // not defined.
	        markLegacyErrorBoundaryAsFailed(this);
	      }
	      var error = errorInfo.value;
	      var stack = errorInfo.stack;
	      logError(fiber, errorInfo);
	      this.componentDidCatch(error, {
	        componentStack: stack !== null ? stack : ''
	      });
	    };
	  }
	  return update;
	}

	function schedulePing(finishedWork) {
	  // Once the promise resolves, we should try rendering the non-
	  // placeholder state again.
	  var currentTime = recalculateCurrentTime();
	  var expirationTime = computeExpirationForFiber(currentTime, finishedWork);
	  var recoveryUpdate = createUpdate(expirationTime);
	  enqueueUpdate(finishedWork, recoveryUpdate, expirationTime);
	  scheduleWork$1(finishedWork, expirationTime);
	}

	function throwException(root, returnFiber, sourceFiber, value, renderIsExpired, renderExpirationTime, currentTimeMs) {
	  // The source fiber did not complete.
	  sourceFiber.effectTag |= Incomplete;
	  // Its effect list is no longer valid.
	  sourceFiber.firstEffect = sourceFiber.lastEffect = null;

	  if (enableSuspense && value !== null && typeof value === 'object' && typeof value.then === 'function') {
	    // This is a thenable.
	    var thenable = value;

	    var expirationTimeMs = expirationTimeToMs(renderExpirationTime);
	    var startTimeMs = expirationTimeMs - 5000;
	    var elapsedMs = currentTimeMs - startTimeMs;
	    if (elapsedMs < 0) {
	      elapsedMs = 0;
	    }
	    var remainingTimeMs = expirationTimeMs - currentTimeMs;

	    // Find the earliest timeout of all the timeouts in the ancestor path.
	    // TODO: Alternatively, we could store the earliest timeout on the context
	    // stack, rather than searching on every suspend.
	    var _workInProgress = returnFiber;
	    var earliestTimeoutMs = -1;
	    searchForEarliestTimeout: do {
	      if (_workInProgress.tag === TimeoutComponent) {
	        var current = _workInProgress.alternate;
	        if (current !== null && current.memoizedState === true) {
	          // A parent Timeout already committed in a placeholder state. We
	          // need to handle this promise immediately. In other words, we
	          // should never suspend inside a tree that already expired.
	          earliestTimeoutMs = 0;
	          break searchForEarliestTimeout;
	        }
	        var timeoutPropMs = _workInProgress.pendingProps.ms;
	        if (typeof timeoutPropMs === 'number') {
	          if (timeoutPropMs <= 0) {
	            earliestTimeoutMs = 0;
	            break searchForEarliestTimeout;
	          } else if (earliestTimeoutMs === -1 || timeoutPropMs < earliestTimeoutMs) {
	            earliestTimeoutMs = timeoutPropMs;
	          }
	        } else if (earliestTimeoutMs === -1) {
	          earliestTimeoutMs = remainingTimeMs;
	        }
	      }
	      _workInProgress = _workInProgress.return;
	    } while (_workInProgress !== null);

	    // Compute the remaining time until the timeout.
	    var msUntilTimeout = earliestTimeoutMs - elapsedMs;

	    if (renderExpirationTime === Never || msUntilTimeout > 0) {
	      // There's still time remaining.
	      suspendRoot(root, thenable, msUntilTimeout, renderExpirationTime);
	      var onResolveOrReject = function () {
	        retrySuspendedRoot(root, renderExpirationTime);
	      };
	      thenable.then(onResolveOrReject, onResolveOrReject);
	      return;
	    } else {
	      // No time remaining. Need to fallback to placeholder.
	      // Find the nearest timeout that can be retried.
	      _workInProgress = returnFiber;
	      do {
	        switch (_workInProgress.tag) {
	          case HostRoot:
	            {
	              // The root expired, but no fallback was provided. Throw a
	              // helpful error.
	              var message = renderExpirationTime === Sync ? 'A synchronous update was suspended, but no fallback UI ' + 'was provided.' : 'An update was suspended for longer than the timeout, ' + 'but no fallback UI was provided.';
	              value = new Error(message);
	              break;
	            }
	          case TimeoutComponent:
	            {
	              if ((_workInProgress.effectTag & DidCapture) === NoEffect) {
	                _workInProgress.effectTag |= ShouldCapture;
	                var _onResolveOrReject = schedulePing.bind(null, _workInProgress);
	                thenable.then(_onResolveOrReject, _onResolveOrReject);
	                return;
	              }
	              // Already captured during this render. Continue to the next
	              // Timeout ancestor.
	              break;
	            }
	        }
	        _workInProgress = _workInProgress.return;
	      } while (_workInProgress !== null);
	    }
	  }

	  // We didn't find a boundary that could handle this type of exception. Start
	  // over and traverse parent path again, this time treating the exception
	  // as an error.
	  value = createCapturedValue(value, sourceFiber);
	  var workInProgress = returnFiber;
	  do {
	    switch (workInProgress.tag) {
	      case HostRoot:
	        {
	          var _errorInfo = value;
	          workInProgress.effectTag |= ShouldCapture;
	          var update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);
	          enqueueCapturedUpdate(workInProgress, update, renderExpirationTime);
	          return;
	        }
	      case ClassComponent:
	        // Capture and retry
	        var errorInfo = value;
	        var ctor = workInProgress.type;
	        var instance = workInProgress.stateNode;
	        if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromCatch === 'function' && enableGetDerivedStateFromCatch || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
	          workInProgress.effectTag |= ShouldCapture;
	          // Schedule the error boundary to re-render using updated state
	          var _update = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);
	          enqueueCapturedUpdate(workInProgress, _update, renderExpirationTime);
	          return;
	        }
	        break;
	      default:
	        break;
	    }
	    workInProgress = workInProgress.return;
	  } while (workInProgress !== null);
	}

	function unwindWork(workInProgress, renderIsExpired, renderExpirationTime) {
	  if (enableProfilerTimer) {
	    if (workInProgress.mode & ProfileMode) {
	      recordElapsedActualRenderTime(workInProgress);
	    }
	  }

	  switch (workInProgress.tag) {
	    case ClassComponent:
	      {
	        popContextProvider(workInProgress);
	        var effectTag = workInProgress.effectTag;
	        if (effectTag & ShouldCapture) {
	          workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;
	          return workInProgress;
	        }
	        return null;
	      }
	    case HostRoot:
	      {
	        popHostContainer(workInProgress);
	        popTopLevelContextObject(workInProgress);
	        var _effectTag = workInProgress.effectTag;
	        if (_effectTag & ShouldCapture) {
	          workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;
	          return workInProgress;
	        }
	        return null;
	      }
	    case HostComponent:
	      {
	        popHostContext(workInProgress);
	        return null;
	      }
	    case TimeoutComponent:
	      {
	        var _effectTag2 = workInProgress.effectTag;
	        if (_effectTag2 & ShouldCapture) {
	          workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture;
	          return workInProgress;
	        }
	        return null;
	      }
	    case HostPortal:
	      popHostContainer(workInProgress);
	      return null;
	    case ContextProvider:
	      popProvider(workInProgress);
	      return null;
	    default:
	      return null;
	  }
	}

	function unwindInterruptedWork(interruptedWork) {
	  if (enableProfilerTimer) {
	    if (interruptedWork.mode & ProfileMode) {
	      // Resume in case we're picking up on work that was paused.
	      resumeActualRenderTimerIfPaused();
	      recordElapsedActualRenderTime(interruptedWork);
	    }
	  }

	  switch (interruptedWork.tag) {
	    case ClassComponent:
	      {
	        popContextProvider(interruptedWork);
	        break;
	      }
	    case HostRoot:
	      {
	        popHostContainer(interruptedWork);
	        popTopLevelContextObject(interruptedWork);
	        break;
	      }
	    case HostComponent:
	      {
	        popHostContext(interruptedWork);
	        break;
	      }
	    case HostPortal:
	      popHostContainer(interruptedWork);
	      break;
	    case ContextProvider:
	      popProvider(interruptedWork);
	      break;
	    default:
	      break;
	  }
	}

	var invokeGuardedCallback$2 = ReactErrorUtils.invokeGuardedCallback;
	var hasCaughtError = ReactErrorUtils.hasCaughtError;
	var clearCaughtError = ReactErrorUtils.clearCaughtError;


	var didWarnAboutStateTransition = void 0;
	var didWarnSetStateChildContext = void 0;
	var warnAboutUpdateOnUnmounted = void 0;
	var warnAboutInvalidUpdates = void 0;

	{
	  didWarnAboutStateTransition = false;
	  didWarnSetStateChildContext = false;
	  var didWarnStateUpdateForUnmountedComponent = {};

	  warnAboutUpdateOnUnmounted = function (fiber) {
	    // We show the whole stack but dedupe on the top component's name because
	    // the problematic code almost always lies inside that component.
	    var componentName = getComponentName(fiber) || 'ReactClass';
	    if (didWarnStateUpdateForUnmountedComponent[componentName]) {
	      return;
	    }
	    warning(false, "Can't call setState (or forceUpdate) on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in the ' + 'componentWillUnmount method.%s', getStackAddendumByWorkInProgressFiber(fiber));
	    didWarnStateUpdateForUnmountedComponent[componentName] = true;
	  };

	  warnAboutInvalidUpdates = function (instance) {
	    switch (ReactDebugCurrentFiber.phase) {
	      case 'getChildContext':
	        if (didWarnSetStateChildContext) {
	          return;
	        }
	        warning(false, 'setState(...): Cannot call setState() inside getChildContext()');
	        didWarnSetStateChildContext = true;
	        break;
	      case 'render':
	        if (didWarnAboutStateTransition) {
	          return;
	        }
	        warning(false, 'Cannot update during an existing state transition (such as within ' + "`render` or another component's constructor). Render methods should " + 'be a pure function of props and state; constructor side-effects are ' + 'an anti-pattern, but can be moved to `componentWillMount`.');
	        didWarnAboutStateTransition = true;
	        break;
	    }
	  };
	}

	// Represents the current time in ms.
	var originalStartTimeMs = now();
	var mostRecentCurrentTime = msToExpirationTime(0);
	var mostRecentCurrentTimeMs = originalStartTimeMs;

	// Used to ensure computeUniqueAsyncExpiration is monotonically increases.
	var lastUniqueAsyncExpiration = 0;

	// Represents the expiration time that incoming updates should use. (If this
	// is NoWork, use the default strategy: async updates in async mode, sync
	// updates in sync mode.)
	var expirationContext = NoWork;

	var isWorking = false;

	// The next work in progress fiber that we're currently working on.
	var nextUnitOfWork = null;
	var nextRoot = null;
	// The time at which we're currently rendering work.
	var nextRenderExpirationTime = NoWork;
	var nextLatestTimeoutMs = -1;
	var nextRenderIsExpired = false;

	// The next fiber with an effect that we're currently committing.
	var nextEffect = null;

	var isCommitting$1 = false;

	var isRootReadyForCommit = false;

	var legacyErrorBoundariesThatAlreadyFailed = null;

	// Used for performance tracking.
	var interruptedBy = null;

	var stashedWorkInProgressProperties = void 0;
	var replayUnitOfWork = void 0;
	var isReplayingFailedUnitOfWork = void 0;
	var originalReplayError = void 0;
	var rethrowOriginalError = void 0;
	if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
	  stashedWorkInProgressProperties = null;
	  isReplayingFailedUnitOfWork = false;
	  originalReplayError = null;
	  replayUnitOfWork = function (failedUnitOfWork, thrownValue, isAsync) {
	    if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {
	      // Don't replay promises. Treat everything else like an error.
	      // TODO: Need to figure out a different strategy if/when we add
	      // support for catching other types.
	      return;
	    }

	    // Restore the original state of the work-in-progress
	    if (stashedWorkInProgressProperties === null) {
	      // This should never happen. Don't throw because this code is DEV-only.
	      warning(false, 'Could not replay rendering after an error. This is likely a bug in React. ' + 'Please file an issue.');
	      return;
	    }
	    assignFiberPropertiesInDEV(failedUnitOfWork, stashedWorkInProgressProperties);

	    switch (failedUnitOfWork.tag) {
	      case HostRoot:
	        popHostContainer(failedUnitOfWork);
	        popTopLevelContextObject(failedUnitOfWork);
	        break;
	      case HostComponent:
	        popHostContext(failedUnitOfWork);
	        break;
	      case ClassComponent:
	        popContextProvider(failedUnitOfWork);
	        break;
	      case HostPortal:
	        popHostContainer(failedUnitOfWork);
	        break;
	      case ContextProvider:
	        popProvider(failedUnitOfWork);
	        break;
	    }
	    // Replay the begin phase.
	    isReplayingFailedUnitOfWork = true;
	    originalReplayError = thrownValue;
	    invokeGuardedCallback$2(null, workLoop, null, isAsync);
	    isReplayingFailedUnitOfWork = false;
	    originalReplayError = null;
	    if (hasCaughtError()) {
	      clearCaughtError();

	      if (enableProfilerTimer) {
	        if (failedUnitOfWork.mode & ProfileMode) {
	          recordElapsedActualRenderTime(failedUnitOfWork);
	        }

	        // Stop "base" render timer again (after the re-thrown error).
	        stopBaseRenderTimerIfRunning();
	      }
	    } else {
	      // If the begin phase did not fail the second time, set this pointer
	      // back to the original value.
	      nextUnitOfWork = failedUnitOfWork;
	    }
	  };
	  rethrowOriginalError = function () {
	    throw originalReplayError;
	  };
	}

	function resetStack() {
	  if (nextUnitOfWork !== null) {
	    var interruptedWork = nextUnitOfWork.return;
	    while (interruptedWork !== null) {
	      unwindInterruptedWork(interruptedWork);
	      interruptedWork = interruptedWork.return;
	    }
	  }

	  {
	    ReactStrictModeWarnings.discardPendingWarnings();
	    checkThatStackIsEmpty();
	  }

	  nextRoot = null;
	  nextRenderExpirationTime = NoWork;
	  nextLatestTimeoutMs = -1;
	  nextRenderIsExpired = false;
	  nextUnitOfWork = null;

	  isRootReadyForCommit = false;
	}

	function commitAllHostEffects() {
	  while (nextEffect !== null) {
	    {
	      ReactDebugCurrentFiber.setCurrentFiber(nextEffect);
	    }
	    recordEffect();

	    var effectTag = nextEffect.effectTag;

	    if (effectTag & ContentReset) {
	      commitResetTextContent(nextEffect);
	    }

	    if (effectTag & Ref) {
	      var current = nextEffect.alternate;
	      if (current !== null) {
	        commitDetachRef(current);
	      }
	    }

	    // The following switch statement is only concerned about placement,
	    // updates, and deletions. To avoid needing to add a case for every
	    // possible bitmap value, we remove the secondary effects from the
	    // effect tag and switch on that value.
	    var primaryEffectTag = effectTag & (Placement | Update | Deletion);
	    switch (primaryEffectTag) {
	      case Placement:
	        {
	          commitPlacement(nextEffect);
	          // Clear the "placement" from effect tag so that we know that this is inserted, before
	          // any life-cycles like componentDidMount gets called.
	          // TODO: findDOMNode doesn't rely on this any more but isMounted
	          // does and isMounted is deprecated anyway so we should be able
	          // to kill this.
	          nextEffect.effectTag &= ~Placement;
	          break;
	        }
	      case PlacementAndUpdate:
	        {
	          // Placement
	          commitPlacement(nextEffect);
	          // Clear the "placement" from effect tag so that we know that this is inserted, before
	          // any life-cycles like componentDidMount gets called.
	          nextEffect.effectTag &= ~Placement;

	          // Update
	          var _current = nextEffect.alternate;
	          commitWork(_current, nextEffect);
	          break;
	        }
	      case Update:
	        {
	          var _current2 = nextEffect.alternate;
	          commitWork(_current2, nextEffect);
	          break;
	        }
	      case Deletion:
	        {
	          commitDeletion(nextEffect);
	          break;
	        }
	    }
	    nextEffect = nextEffect.nextEffect;
	  }

	  {
	    ReactDebugCurrentFiber.resetCurrentFiber();
	  }
	}

	function commitBeforeMutationLifecycles() {
	  while (nextEffect !== null) {
	    var effectTag = nextEffect.effectTag;

	    if (effectTag & Snapshot) {
	      recordEffect();
	      var current = nextEffect.alternate;
	      commitBeforeMutationLifeCycles(current, nextEffect);
	    }

	    // Don't cleanup effects yet;
	    // This will be done by commitAllLifeCycles()
	    nextEffect = nextEffect.nextEffect;
	  }
	}

	function commitAllLifeCycles(finishedRoot, currentTime, committedExpirationTime) {
	  {
	    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();

	    if (warnAboutDeprecatedLifecycles) {
	      ReactStrictModeWarnings.flushPendingDeprecationWarnings();
	    }

	    if (warnAboutLegacyContextAPI) {
	      ReactStrictModeWarnings.flushLegacyContextWarning();
	    }
	  }
	  while (nextEffect !== null) {
	    var effectTag = nextEffect.effectTag;

	    if (effectTag & (Update | Callback)) {
	      recordEffect();
	      var current = nextEffect.alternate;
	      commitLifeCycles(finishedRoot, current, nextEffect, currentTime, committedExpirationTime);
	    }

	    if (effectTag & Ref) {
	      recordEffect();
	      commitAttachRef(nextEffect);
	    }

	    var next = nextEffect.nextEffect;
	    // Ensure that we clean these up so that we don't accidentally keep them.
	    // I'm not actually sure this matters because we can't reset firstEffect
	    // and lastEffect since they're on every node, not just the effectful
	    // ones. So we have to clean everything as we reuse nodes anyway.
	    nextEffect.nextEffect = null;
	    // Ensure that we reset the effectTag here so that we can rely on effect
	    // tags to reason about the current life-cycle.
	    nextEffect = next;
	  }
	}

	function isAlreadyFailedLegacyErrorBoundary(instance) {
	  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
	}

	function markLegacyErrorBoundaryAsFailed(instance) {
	  if (legacyErrorBoundariesThatAlreadyFailed === null) {
	    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
	  } else {
	    legacyErrorBoundariesThatAlreadyFailed.add(instance);
	  }
	}

	function commitRoot(finishedWork) {
	  isWorking = true;
	  isCommitting$1 = true;
	  startCommitTimer();

	  var root = finishedWork.stateNode;
	  !(root.current !== finishedWork) ? invariant(false, 'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  var committedExpirationTime = root.pendingCommitExpirationTime;
	  !(committedExpirationTime !== NoWork) ? invariant(false, 'Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  root.pendingCommitExpirationTime = NoWork;

	  var currentTime = recalculateCurrentTime();

	  // Reset this to null before calling lifecycles
	  ReactCurrentOwner.current = null;

	  var firstEffect = void 0;
	  if (finishedWork.effectTag > PerformedWork) {
	    // A fiber's effect list consists only of its children, not itself. So if
	    // the root has an effect, we need to add it to the end of the list. The
	    // resulting list is the set that would belong to the root's parent, if
	    // it had one; that is, all the effects in the tree including the root.
	    if (finishedWork.lastEffect !== null) {
	      finishedWork.lastEffect.nextEffect = finishedWork;
	      firstEffect = finishedWork.firstEffect;
	    } else {
	      firstEffect = finishedWork;
	    }
	  } else {
	    // There is no effect on the root.
	    firstEffect = finishedWork.firstEffect;
	  }

	  prepareForCommit(root.containerInfo);

	  // Invoke instances of getSnapshotBeforeUpdate before mutation.
	  nextEffect = firstEffect;
	  startCommitSnapshotEffectsTimer();
	  while (nextEffect !== null) {
	    var didError = false;
	    var error = void 0;
	    {
	      invokeGuardedCallback$2(null, commitBeforeMutationLifecycles, null);
	      if (hasCaughtError()) {
	        didError = true;
	        error = clearCaughtError();
	      }
	    }
	    if (didError) {
	      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	      captureCommitPhaseError(nextEffect, error);
	      // Clean-up
	      if (nextEffect !== null) {
	        nextEffect = nextEffect.nextEffect;
	      }
	    }
	  }
	  stopCommitSnapshotEffectsTimer();

	  if (enableProfilerTimer) {
	    // Mark the current commit time to be shared by all Profilers in this batch.
	    // This enables them to be grouped later.
	    recordCommitTime();
	  }

	  // Commit all the side-effects within a tree. We'll do this in two passes.
	  // The first pass performs all the host insertions, updates, deletions and
	  // ref unmounts.
	  nextEffect = firstEffect;
	  startCommitHostEffectsTimer();
	  while (nextEffect !== null) {
	    var _didError = false;
	    var _error = void 0;
	    {
	      invokeGuardedCallback$2(null, commitAllHostEffects, null);
	      if (hasCaughtError()) {
	        _didError = true;
	        _error = clearCaughtError();
	      }
	    }
	    if (_didError) {
	      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	      captureCommitPhaseError(nextEffect, _error);
	      // Clean-up
	      if (nextEffect !== null) {
	        nextEffect = nextEffect.nextEffect;
	      }
	    }
	  }
	  stopCommitHostEffectsTimer();

	  resetAfterCommit(root.containerInfo);

	  // The work-in-progress tree is now the current tree. This must come after
	  // the first pass of the commit phase, so that the previous tree is still
	  // current during componentWillUnmount, but before the second pass, so that
	  // the finished work is current during componentDidMount/Update.
	  root.current = finishedWork;

	  // In the second pass we'll perform all life-cycles and ref callbacks.
	  // Life-cycles happen as a separate pass so that all placements, updates,
	  // and deletions in the entire tree have already been invoked.
	  // This pass also triggers any renderer-specific initial effects.
	  nextEffect = firstEffect;
	  startCommitLifeCyclesTimer();
	  while (nextEffect !== null) {
	    var _didError2 = false;
	    var _error2 = void 0;
	    {
	      invokeGuardedCallback$2(null, commitAllLifeCycles, null, root, currentTime, committedExpirationTime);
	      if (hasCaughtError()) {
	        _didError2 = true;
	        _error2 = clearCaughtError();
	      }
	    }
	    if (_didError2) {
	      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	      captureCommitPhaseError(nextEffect, _error2);
	      if (nextEffect !== null) {
	        nextEffect = nextEffect.nextEffect;
	      }
	    }
	  }

	  if (enableProfilerTimer) {
	    {
	      checkActualRenderTimeStackEmpty();
	    }
	    resetActualRenderTimer();
	  }

	  isCommitting$1 = false;
	  isWorking = false;
	  stopCommitLifeCyclesTimer();
	  stopCommitTimer();
	  if (typeof onCommitRoot === 'function') {
	    onCommitRoot(finishedWork.stateNode);
	  }
	  if (true && ReactFiberInstrumentation_1.debugTool) {
	    ReactFiberInstrumentation_1.debugTool.onCommitWork(finishedWork);
	  }

	  markCommittedPriorityLevels(root, currentTime, root.current.expirationTime);
	  var remainingTime = findNextPendingPriorityLevel(root);
	  if (remainingTime === NoWork) {
	    // If there's no remaining work, we can clear the set of already failed
	    // error boundaries.
	    legacyErrorBoundariesThatAlreadyFailed = null;
	  }
	  return remainingTime;
	}

	function resetExpirationTime(workInProgress, renderTime) {
	  if (renderTime !== Never && workInProgress.expirationTime === Never) {
	    // The children of this component are hidden. Don't bubble their
	    // expiration times.
	    return;
	  }

	  // Check for pending updates.
	  var newExpirationTime = NoWork;
	  switch (workInProgress.tag) {
	    case HostRoot:
	    case ClassComponent:
	      {
	        var updateQueue = workInProgress.updateQueue;
	        if (updateQueue !== null) {
	          newExpirationTime = updateQueue.expirationTime;
	        }
	      }
	  }

	  // TODO: Calls need to visit stateNode

	  // Bubble up the earliest expiration time.
	  // (And "base" render timers if that feature flag is enabled)
	  if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
	    var treeBaseTime = workInProgress.selfBaseTime;
	    var child = workInProgress.child;
	    while (child !== null) {
	      treeBaseTime += child.treeBaseTime;
	      if (child.expirationTime !== NoWork && (newExpirationTime === NoWork || newExpirationTime > child.expirationTime)) {
	        newExpirationTime = child.expirationTime;
	      }
	      child = child.sibling;
	    }
	    workInProgress.treeBaseTime = treeBaseTime;
	  } else {
	    var _child = workInProgress.child;
	    while (_child !== null) {
	      if (_child.expirationTime !== NoWork && (newExpirationTime === NoWork || newExpirationTime > _child.expirationTime)) {
	        newExpirationTime = _child.expirationTime;
	      }
	      _child = _child.sibling;
	    }
	  }

	  workInProgress.expirationTime = newExpirationTime;
	}

	function completeUnitOfWork(workInProgress) {
	  // Attempt to complete the current unit of work, then move to the
	  // next sibling. If there are no more siblings, return to the
	  // parent fiber.
	  while (true) {
	    // The current, flushed, state of this fiber is the alternate.
	    // Ideally nothing should rely on this, but relying on it here
	    // means that we don't need an additional field on the work in
	    // progress.
	    var current = workInProgress.alternate;
	    {
	      ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
	    }

	    var returnFiber = workInProgress.return;
	    var siblingFiber = workInProgress.sibling;

	    if ((workInProgress.effectTag & Incomplete) === NoEffect) {
	      // This fiber completed.
	      var next = completeWork(current, workInProgress, nextRenderExpirationTime);
	      stopWorkTimer(workInProgress);
	      resetExpirationTime(workInProgress, nextRenderExpirationTime);
	      {
	        ReactDebugCurrentFiber.resetCurrentFiber();
	      }

	      if (next !== null) {
	        stopWorkTimer(workInProgress);
	        if (true && ReactFiberInstrumentation_1.debugTool) {
	          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
	        }
	        // If completing this work spawned new work, do that next. We'll come
	        // back here again.
	        return next;
	      }

	      if (returnFiber !== null &&
	      // Do not append effects to parents if a sibling failed to complete
	      (returnFiber.effectTag & Incomplete) === NoEffect) {
	        // Append all the effects of the subtree and this fiber onto the effect
	        // list of the parent. The completion order of the children affects the
	        // side-effect order.
	        if (returnFiber.firstEffect === null) {
	          returnFiber.firstEffect = workInProgress.firstEffect;
	        }
	        if (workInProgress.lastEffect !== null) {
	          if (returnFiber.lastEffect !== null) {
	            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
	          }
	          returnFiber.lastEffect = workInProgress.lastEffect;
	        }

	        // If this fiber had side-effects, we append it AFTER the children's
	        // side-effects. We can perform certain side-effects earlier if
	        // needed, by doing multiple passes over the effect list. We don't want
	        // to schedule our own side-effect on our own list because if end up
	        // reusing children we'll schedule this effect onto itself since we're
	        // at the end.
	        var effectTag = workInProgress.effectTag;
	        // Skip both NoWork and PerformedWork tags when creating the effect list.
	        // PerformedWork effect is read by React DevTools but shouldn't be committed.
	        if (effectTag > PerformedWork) {
	          if (returnFiber.lastEffect !== null) {
	            returnFiber.lastEffect.nextEffect = workInProgress;
	          } else {
	            returnFiber.firstEffect = workInProgress;
	          }
	          returnFiber.lastEffect = workInProgress;
	        }
	      }

	      if (true && ReactFiberInstrumentation_1.debugTool) {
	        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
	      }

	      if (siblingFiber !== null) {
	        // If there is more work to do in this returnFiber, do that next.
	        return siblingFiber;
	      } else if (returnFiber !== null) {
	        // If there's no more work in this returnFiber. Complete the returnFiber.
	        workInProgress = returnFiber;
	        continue;
	      } else {
	        // We've reached the root.
	        isRootReadyForCommit = true;
	        return null;
	      }
	    } else {
	      // This fiber did not complete because something threw. Pop values off
	      // the stack without entering the complete phase. If this is a boundary,
	      // capture values if possible.
	      var _next = unwindWork(workInProgress, nextRenderIsExpired, nextRenderExpirationTime);
	      // Because this fiber did not complete, don't reset its expiration time.
	      if (workInProgress.effectTag & DidCapture) {
	        // Restarting an error boundary
	        stopFailedWorkTimer(workInProgress);
	      } else {
	        stopWorkTimer(workInProgress);
	      }

	      {
	        ReactDebugCurrentFiber.resetCurrentFiber();
	      }

	      if (_next !== null) {
	        stopWorkTimer(workInProgress);
	        if (true && ReactFiberInstrumentation_1.debugTool) {
	          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
	        }
	        // If completing this work spawned new work, do that next. We'll come
	        // back here again.
	        // Since we're restarting, remove anything that is not a host effect
	        // from the effect tag.
	        _next.effectTag &= HostEffectMask;
	        return _next;
	      }

	      if (returnFiber !== null) {
	        // Mark the parent fiber as incomplete and clear its effect list.
	        returnFiber.firstEffect = returnFiber.lastEffect = null;
	        returnFiber.effectTag |= Incomplete;
	      }

	      if (true && ReactFiberInstrumentation_1.debugTool) {
	        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
	      }

	      if (siblingFiber !== null) {
	        // If there is more work to do in this returnFiber, do that next.
	        return siblingFiber;
	      } else if (returnFiber !== null) {
	        // If there's no more work in this returnFiber. Complete the returnFiber.
	        workInProgress = returnFiber;
	        continue;
	      } else {
	        return null;
	      }
	    }
	  }

	  // Without this explicit null return Flow complains of invalid return type
	  // TODO Remove the above while(true) loop
	  // eslint-disable-next-line no-unreachable
	  return null;
	}

	function performUnitOfWork(workInProgress) {
	  // The current, flushed, state of this fiber is the alternate.
	  // Ideally nothing should rely on this, but relying on it here
	  // means that we don't need an additional field on the work in
	  // progress.
	  var current = workInProgress.alternate;

	  // See if beginning this work spawns more work.
	  startWorkTimer(workInProgress);
	  {
	    ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
	  }

	  if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
	    stashedWorkInProgressProperties = assignFiberPropertiesInDEV(stashedWorkInProgressProperties, workInProgress);
	  }

	  var next = void 0;
	  if (enableProfilerTimer) {
	    if (workInProgress.mode & ProfileMode) {
	      startBaseRenderTimer();
	    }

	    next = beginWork(current, workInProgress, nextRenderExpirationTime);

	    if (workInProgress.mode & ProfileMode) {
	      // Update "base" time if the render wasn't bailed out on.
	      recordElapsedBaseRenderTimeIfRunning(workInProgress);
	      stopBaseRenderTimerIfRunning();
	    }
	  } else {
	    next = beginWork(current, workInProgress, nextRenderExpirationTime);
	  }

	  {
	    ReactDebugCurrentFiber.resetCurrentFiber();
	    if (isReplayingFailedUnitOfWork) {
	      // Currently replaying a failed unit of work. This should be unreachable,
	      // because the render phase is meant to be idempotent, and it should
	      // have thrown again. Since it didn't, rethrow the original error, so
	      // React's internal stack is not misaligned.
	      rethrowOriginalError();
	    }
	  }
	  if (true && ReactFiberInstrumentation_1.debugTool) {
	    ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);
	  }

	  if (next === null) {
	    // If this doesn't spawn new work, complete the current work.
	    next = completeUnitOfWork(workInProgress);
	  }

	  ReactCurrentOwner.current = null;

	  return next;
	}

	function workLoop(isAsync) {
	  if (!isAsync) {
	    // Flush all expired work.
	    while (nextUnitOfWork !== null) {
	      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
	    }
	  } else {
	    // Flush asynchronous work until the deadline runs out of time.
	    while (nextUnitOfWork !== null && !shouldYield()) {
	      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
	    }

	    if (enableProfilerTimer) {
	      // If we didn't finish, pause the "actual" render timer.
	      // We'll restart it when we resume work.
	      pauseActualRenderTimerIfRunning();
	    }
	  }
	}

	function renderRoot(root, expirationTime, isAsync) {
	  !!isWorking ? invariant(false, 'renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  isWorking = true;

	  // Check if we're starting from a fresh stack, or if we're resuming from
	  // previously yielded work.
	  if (expirationTime !== nextRenderExpirationTime || root !== nextRoot || nextUnitOfWork === null) {
	    // Reset the stack and start working from the root.
	    resetStack();
	    nextRoot = root;
	    nextRenderExpirationTime = expirationTime;
	    nextLatestTimeoutMs = -1;
	    nextUnitOfWork = createWorkInProgress(nextRoot.current, null, nextRenderExpirationTime);
	    root.pendingCommitExpirationTime = NoWork;
	  }

	  var didFatal = false;

	  nextRenderIsExpired = !isAsync || nextRenderExpirationTime <= mostRecentCurrentTime;

	  startWorkLoopTimer(nextUnitOfWork);

	  do {
	    try {
	      workLoop(isAsync);
	    } catch (thrownValue) {
	      if (enableProfilerTimer) {
	        // Stop "base" render timer in the event of an error.
	        stopBaseRenderTimerIfRunning();
	      }

	      if (nextUnitOfWork === null) {
	        // This is a fatal error.
	        didFatal = true;
	        onUncaughtError(thrownValue);
	      } else {
	        {
	          // Reset global debug state
	          // We assume this is defined in DEV
	          resetCurrentlyProcessingQueue();
	        }

	        var failedUnitOfWork = nextUnitOfWork;
	        if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
	          replayUnitOfWork(failedUnitOfWork, thrownValue, isAsync);
	        }

	        // TODO: we already know this isn't true in some cases.
	        // At least this shows a nicer error message until we figure out the cause.
	        // https://github.com/facebook/react/issues/12449#issuecomment-386727431
	        !(nextUnitOfWork !== null) ? invariant(false, 'Failed to replay rendering after an error. This is likely caused by a bug in React. Please file an issue with a reproducing case to help us find it.') : void 0;

	        var sourceFiber = nextUnitOfWork;
	        var returnFiber = sourceFiber.return;
	        if (returnFiber === null) {
	          // This is the root. The root could capture its own errors. However,
	          // we don't know if it errors before or after we pushed the host
	          // context. This information is needed to avoid a stack mismatch.
	          // Because we're not sure, treat this as a fatal error. We could track
	          // which phase it fails in, but doesn't seem worth it. At least
	          // for now.
	          didFatal = true;
	          onUncaughtError(thrownValue);
	          break;
	        }
	        throwException(root, returnFiber, sourceFiber, thrownValue, nextRenderIsExpired, nextRenderExpirationTime, mostRecentCurrentTimeMs);
	        nextUnitOfWork = completeUnitOfWork(sourceFiber);
	      }
	    }
	    break;
	  } while (true);

	  // We're done performing work. Time to clean up.
	  var didCompleteRoot = false;
	  isWorking = false;

	  // Yield back to main thread.
	  if (didFatal) {
	    stopWorkLoopTimer(interruptedBy, didCompleteRoot);
	    interruptedBy = null;
	    // There was a fatal error.
	    {
	      resetStackAfterFatalErrorInDev();
	    }
	    return null;
	  } else if (nextUnitOfWork === null) {
	    // We reached the root.
	    if (isRootReadyForCommit) {
	      didCompleteRoot = true;
	      stopWorkLoopTimer(interruptedBy, didCompleteRoot);
	      interruptedBy = null;
	      // The root successfully completed. It's ready for commit.
	      root.pendingCommitExpirationTime = expirationTime;
	      var finishedWork = root.current.alternate;
	      return finishedWork;
	    } else {
	      // The root did not complete.
	      stopWorkLoopTimer(interruptedBy, didCompleteRoot);
	      interruptedBy = null;
	      !!nextRenderIsExpired ? invariant(false, 'Expired work should have completed. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	      markSuspendedPriorityLevel(root, expirationTime);
	      if (nextLatestTimeoutMs >= 0) {
	        setTimeout(function () {
	          retrySuspendedRoot(root, expirationTime);
	        }, nextLatestTimeoutMs);
	      }
	      var firstUnblockedExpirationTime = findNextPendingPriorityLevel(root);
	      onBlock(firstUnblockedExpirationTime);
	      return null;
	    }
	  } else {
	    stopWorkLoopTimer(interruptedBy, didCompleteRoot);
	    interruptedBy = null;
	    // There's more work to do, but we ran out of time. Yield back to
	    // the renderer.
	    return null;
	  }
	}

	function dispatch(sourceFiber, value, expirationTime) {
	  !(!isWorking || isCommitting$1) ? invariant(false, 'dispatch: Cannot dispatch during the render phase.') : void 0;

	  var fiber = sourceFiber.return;
	  while (fiber !== null) {
	    switch (fiber.tag) {
	      case ClassComponent:
	        var ctor = fiber.type;
	        var instance = fiber.stateNode;
	        if (typeof ctor.getDerivedStateFromCatch === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
	          var errorInfo = createCapturedValue(value, sourceFiber);
	          var update = createClassErrorUpdate(fiber, errorInfo, expirationTime);
	          enqueueUpdate(fiber, update, expirationTime);
	          scheduleWork$1(fiber, expirationTime);
	          return;
	        }
	        break;
	      case HostRoot:
	        {
	          var _errorInfo = createCapturedValue(value, sourceFiber);
	          var _update = createRootErrorUpdate(fiber, _errorInfo, expirationTime);
	          enqueueUpdate(fiber, _update, expirationTime);
	          scheduleWork$1(fiber, expirationTime);
	          return;
	        }
	    }
	    fiber = fiber.return;
	  }

	  if (sourceFiber.tag === HostRoot) {
	    // Error was thrown at the root. There is no parent, so the root
	    // itself should capture it.
	    var rootFiber = sourceFiber;
	    var _errorInfo2 = createCapturedValue(value, rootFiber);
	    var _update2 = createRootErrorUpdate(rootFiber, _errorInfo2, expirationTime);
	    enqueueUpdate(rootFiber, _update2, expirationTime);
	    scheduleWork$1(rootFiber, expirationTime);
	  }
	}

	function captureCommitPhaseError(fiber, error) {
	  return dispatch(fiber, error, Sync);
	}

	function computeAsyncExpiration(currentTime) {
	  // Given the current clock time, returns an expiration time. We use rounding
	  // to batch like updates together.
	  // Should complete within ~5000ms. 5250ms max.
	  var expirationMs = 5000;
	  var bucketSizeMs = 250;
	  return computeExpirationBucket(currentTime, expirationMs, bucketSizeMs);
	}

	function computeInteractiveExpiration(currentTime) {
	  var expirationMs = void 0;
	  // We intentionally set a higher expiration time for interactive updates in
	  // dev than in production.
	  // If the main thread is being blocked so long that you hit the expiration,
	  // it's a problem that could be solved with better scheduling.
	  // People will be more likely to notice this and fix it with the long
	  // expiration time in development.
	  // In production we opt for better UX at the risk of masking scheduling
	  // problems, by expiring fast.
	  {
	    // Should complete within ~500ms. 600ms max.
	    expirationMs = 500;
	  }
	  var bucketSizeMs = 100;
	  return computeExpirationBucket(currentTime, expirationMs, bucketSizeMs);
	}

	// Creates a unique async expiration time.
	function computeUniqueAsyncExpiration() {
	  var currentTime = recalculateCurrentTime();
	  var result = computeAsyncExpiration(currentTime);
	  if (result <= lastUniqueAsyncExpiration) {
	    // Since we assume the current time monotonically increases, we only hit
	    // this branch when computeUniqueAsyncExpiration is fired multiple times
	    // within a 200ms window (or whatever the async bucket size is).
	    result = lastUniqueAsyncExpiration + 1;
	  }
	  lastUniqueAsyncExpiration = result;
	  return lastUniqueAsyncExpiration;
	}

	function computeExpirationForFiber(currentTime, fiber) {
	  var expirationTime = void 0;
	  if (expirationContext !== NoWork) {
	    // An explicit expiration context was set;
	    expirationTime = expirationContext;
	  } else if (isWorking) {
	    if (isCommitting$1) {
	      // Updates that occur during the commit phase should have sync priority
	      // by default.
	      expirationTime = Sync;
	    } else {
	      // Updates during the render phase should expire at the same time as
	      // the work that is being rendered.
	      expirationTime = nextRenderExpirationTime;
	    }
	  } else {
	    // No explicit expiration context was set, and we're not currently
	    // performing work. Calculate a new expiration time.
	    if (fiber.mode & AsyncMode) {
	      if (isBatchingInteractiveUpdates) {
	        // This is an interactive update
	        expirationTime = computeInteractiveExpiration(currentTime);
	      } else {
	        // This is an async update
	        expirationTime = computeAsyncExpiration(currentTime);
	      }
	    } else {
	      // This is a sync update
	      expirationTime = Sync;
	    }
	  }
	  if (isBatchingInteractiveUpdates) {
	    // This is an interactive update. Keep track of the lowest pending
	    // interactive expiration time. This allows us to synchronously flush
	    // all interactive updates when needed.
	    if (lowestPendingInteractiveExpirationTime === NoWork || expirationTime > lowestPendingInteractiveExpirationTime) {
	      lowestPendingInteractiveExpirationTime = expirationTime;
	    }
	  }
	  return expirationTime;
	}

	// TODO: Rename this to scheduleTimeout or something
	function suspendRoot(root, thenable, timeoutMs, suspendedTime) {
	  // Schedule the timeout.
	  if (timeoutMs >= 0 && nextLatestTimeoutMs < timeoutMs) {
	    nextLatestTimeoutMs = timeoutMs;
	  }
	}

	function retrySuspendedRoot(root, suspendedTime) {
	  markPingedPriorityLevel(root, suspendedTime);
	  var retryTime = findNextPendingPriorityLevel(root);
	  if (retryTime !== NoWork) {
	    requestRetry(root, retryTime);
	  }
	}

	function scheduleWork$1(fiber, expirationTime) {
	  recordScheduleUpdate();

	  {
	    if (fiber.tag === ClassComponent) {
	      var instance = fiber.stateNode;
	      warnAboutInvalidUpdates(instance);
	    }
	  }

	  var node = fiber;
	  while (node !== null) {
	    // Walk the parent path to the root and update each node's
	    // expiration time.
	    if (node.expirationTime === NoWork || node.expirationTime > expirationTime) {
	      node.expirationTime = expirationTime;
	    }
	    if (node.alternate !== null) {
	      if (node.alternate.expirationTime === NoWork || node.alternate.expirationTime > expirationTime) {
	        node.alternate.expirationTime = expirationTime;
	      }
	    }
	    if (node.return === null) {
	      if (node.tag === HostRoot) {
	        var root = node.stateNode;
	        if (!isWorking && nextRenderExpirationTime !== NoWork && expirationTime < nextRenderExpirationTime) {
	          // This is an interruption. (Used for performance tracking.)
	          interruptedBy = fiber;
	          resetStack();
	        }
	        markPendingPriorityLevel(root, expirationTime);
	        var nextExpirationTimeToWorkOn = findNextPendingPriorityLevel(root);
	        if (
	        // If we're in the render phase, we don't need to schedule this root
	        // for an update, because we'll do it before we exit...
	        !isWorking || isCommitting$1 ||
	        // ...unless this is a different root than the one we're rendering.
	        nextRoot !== root) {
	          requestWork(root, nextExpirationTimeToWorkOn);
	        }
	        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
	          invariant(false, 'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.');
	        }
	      } else {
	        {
	          if (fiber.tag === ClassComponent) {
	            warnAboutUpdateOnUnmounted(fiber);
	          }
	        }
	        return;
	      }
	    }
	    node = node.return;
	  }
	}

	function recalculateCurrentTime() {
	  // Subtract initial time so it fits inside 32bits
	  mostRecentCurrentTimeMs = now() - originalStartTimeMs;
	  mostRecentCurrentTime = msToExpirationTime(mostRecentCurrentTimeMs);
	  return mostRecentCurrentTime;
	}

	function deferredUpdates(fn) {
	  var previousExpirationContext = expirationContext;
	  var currentTime = recalculateCurrentTime();
	  expirationContext = computeAsyncExpiration(currentTime);
	  try {
	    return fn();
	  } finally {
	    expirationContext = previousExpirationContext;
	  }
	}
	function syncUpdates(fn, a, b, c, d) {
	  var previousExpirationContext = expirationContext;
	  expirationContext = Sync;
	  try {
	    return fn(a, b, c, d);
	  } finally {
	    expirationContext = previousExpirationContext;
	  }
	}

	// TODO: Everything below this is written as if it has been lifted to the
	// renderers. I'll do this in a follow-up.

	// Linked-list of roots
	var firstScheduledRoot = null;
	var lastScheduledRoot = null;

	var callbackExpirationTime = NoWork;
	var callbackID = void 0;
	var isRendering = false;
	var nextFlushedRoot = null;
	var nextFlushedExpirationTime = NoWork;
	var lowestPendingInteractiveExpirationTime = NoWork;
	var deadlineDidExpire = false;
	var hasUnhandledError = false;
	var unhandledError = null;
	var deadline = null;

	var isBatchingUpdates = false;
	var isUnbatchingUpdates = false;
	var isBatchingInteractiveUpdates = false;

	var completedBatches = null;

	// Use these to prevent an infinite loop of nested updates
	var NESTED_UPDATE_LIMIT = 1000;
	var nestedUpdateCount = 0;

	var timeHeuristicForUnitOfWork = 1;

	function scheduleCallbackWithExpiration(expirationTime) {
	  if (callbackExpirationTime !== NoWork) {
	    // A callback is already scheduled. Check its expiration time (timeout).
	    if (expirationTime > callbackExpirationTime) {
	      // Existing callback has sufficient timeout. Exit.
	      return;
	    } else {
	      if (callbackID !== null) {
	        // Existing callback has insufficient timeout. Cancel and schedule a
	        // new one.
	        cancelDeferredCallback(callbackID);
	      }
	    }
	    // The request callback timer is already running. Don't start a new one.
	  } else {
	    startRequestCallbackTimer();
	  }

	  // Compute a timeout for the given expiration time.
	  var currentMs = now() - originalStartTimeMs;
	  var expirationMs = expirationTimeToMs(expirationTime);
	  var timeout = expirationMs - currentMs;

	  callbackExpirationTime = expirationTime;
	  callbackID = scheduleDeferredCallback(performAsyncWork, { timeout: timeout });
	}

	function requestRetry(root, expirationTime) {
	  if (root.remainingExpirationTime === NoWork || root.remainingExpirationTime < expirationTime) {
	    // For a retry, only update the remaining expiration time if it has a
	    // *lower priority* than the existing value. This is because, on a retry,
	    // we should attempt to coalesce as much as possible.
	    requestWork(root, expirationTime);
	  }
	}

	// requestWork is called by the scheduler whenever a root receives an update.
	// It's up to the renderer to call renderRoot at some point in the future.
	function requestWork(root, expirationTime) {
	  addRootToSchedule(root, expirationTime);

	  if (isRendering) {
	    // Prevent reentrancy. Remaining work will be scheduled at the end of
	    // the currently rendering batch.
	    return;
	  }

	  if (isBatchingUpdates) {
	    // Flush work at the end of the batch.
	    if (isUnbatchingUpdates) {
	      // ...unless we're inside unbatchedUpdates, in which case we should
	      // flush it now.
	      nextFlushedRoot = root;
	      nextFlushedExpirationTime = Sync;
	      performWorkOnRoot(root, Sync, false);
	    }
	    return;
	  }

	  // TODO: Get rid of Sync and use current time?
	  if (expirationTime === Sync) {
	    performSyncWork();
	  } else {
	    scheduleCallbackWithExpiration(expirationTime);
	  }
	}

	function addRootToSchedule(root, expirationTime) {
	  // Add the root to the schedule.
	  // Check if this root is already part of the schedule.
	  if (root.nextScheduledRoot === null) {
	    // This root is not already scheduled. Add it.
	    root.remainingExpirationTime = expirationTime;
	    if (lastScheduledRoot === null) {
	      firstScheduledRoot = lastScheduledRoot = root;
	      root.nextScheduledRoot = root;
	    } else {
	      lastScheduledRoot.nextScheduledRoot = root;
	      lastScheduledRoot = root;
	      lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
	    }
	  } else {
	    // This root is already scheduled, but its priority may have increased.
	    var remainingExpirationTime = root.remainingExpirationTime;
	    if (remainingExpirationTime === NoWork || expirationTime < remainingExpirationTime) {
	      // Update the priority.
	      root.remainingExpirationTime = expirationTime;
	    }
	  }
	}

	function findHighestPriorityRoot() {
	  var highestPriorityWork = NoWork;
	  var highestPriorityRoot = null;
	  if (lastScheduledRoot !== null) {
	    var previousScheduledRoot = lastScheduledRoot;
	    var root = firstScheduledRoot;
	    while (root !== null) {
	      var remainingExpirationTime = root.remainingExpirationTime;
	      if (remainingExpirationTime === NoWork) {
	        // This root no longer has work. Remove it from the scheduler.

	        // TODO: This check is redudant, but Flow is confused by the branch
	        // below where we set lastScheduledRoot to null, even though we break
	        // from the loop right after.
	        !(previousScheduledRoot !== null && lastScheduledRoot !== null) ? invariant(false, 'Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	        if (root === root.nextScheduledRoot) {
	          // This is the only root in the list.
	          root.nextScheduledRoot = null;
	          firstScheduledRoot = lastScheduledRoot = null;
	          break;
	        } else if (root === firstScheduledRoot) {
	          // This is the first root in the list.
	          var next = root.nextScheduledRoot;
	          firstScheduledRoot = next;
	          lastScheduledRoot.nextScheduledRoot = next;
	          root.nextScheduledRoot = null;
	        } else if (root === lastScheduledRoot) {
	          // This is the last root in the list.
	          lastScheduledRoot = previousScheduledRoot;
	          lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
	          root.nextScheduledRoot = null;
	          break;
	        } else {
	          previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot;
	          root.nextScheduledRoot = null;
	        }
	        root = previousScheduledRoot.nextScheduledRoot;
	      } else {
	        if (highestPriorityWork === NoWork || remainingExpirationTime < highestPriorityWork) {
	          // Update the priority, if it's higher
	          highestPriorityWork = remainingExpirationTime;
	          highestPriorityRoot = root;
	        }
	        if (root === lastScheduledRoot) {
	          break;
	        }
	        previousScheduledRoot = root;
	        root = root.nextScheduledRoot;
	      }
	    }
	  }

	  // If the next root is the same as the previous root, this is a nested
	  // update. To prevent an infinite loop, increment the nested update count.
	  var previousFlushedRoot = nextFlushedRoot;
	  if (previousFlushedRoot !== null && previousFlushedRoot === highestPriorityRoot && highestPriorityWork === Sync) {
	    nestedUpdateCount++;
	  } else {
	    // Reset whenever we switch roots.
	    nestedUpdateCount = 0;
	  }
	  nextFlushedRoot = highestPriorityRoot;
	  nextFlushedExpirationTime = highestPriorityWork;
	}

	function performAsyncWork(dl) {
	  performWork(NoWork, true, dl);
	}

	function performSyncWork() {
	  performWork(Sync, false, null);
	}

	function performWork(minExpirationTime, isAsync, dl) {
	  deadline = dl;

	  // Keep working on roots until there's no more work, or until the we reach
	  // the deadline.
	  findHighestPriorityRoot();

	  if (enableProfilerTimer) {
	    resumeActualRenderTimerIfPaused();
	  }

	  if (enableUserTimingAPI && deadline !== null) {
	    var didExpire = nextFlushedExpirationTime < recalculateCurrentTime();
	    var timeout = expirationTimeToMs(nextFlushedExpirationTime);
	    stopRequestCallbackTimer(didExpire, timeout);
	  }

	  if (isAsync) {
	    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && (minExpirationTime === NoWork || minExpirationTime >= nextFlushedExpirationTime) && (!deadlineDidExpire || recalculateCurrentTime() >= nextFlushedExpirationTime)) {
	      recalculateCurrentTime();
	      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, !deadlineDidExpire);
	      findHighestPriorityRoot();
	    }
	  } else {
	    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && (minExpirationTime === NoWork || minExpirationTime >= nextFlushedExpirationTime)) {
	      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, false);
	      findHighestPriorityRoot();
	    }
	  }

	  // We're done flushing work. Either we ran out of time in this callback,
	  // or there's no more work left with sufficient priority.

	  // If we're inside a callback, set this to false since we just completed it.
	  if (deadline !== null) {
	    callbackExpirationTime = NoWork;
	    callbackID = null;
	  }
	  // If there's work left over, schedule a new callback.
	  if (nextFlushedExpirationTime !== NoWork) {
	    scheduleCallbackWithExpiration(nextFlushedExpirationTime);
	  }

	  // Clean-up.
	  deadline = null;
	  deadlineDidExpire = false;

	  finishRendering();
	}

	function flushRoot(root, expirationTime) {
	  !!isRendering ? invariant(false, 'work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.') : void 0;
	  // Perform work on root as if the given expiration time is the current time.
	  // This has the effect of synchronously flushing all work up to and
	  // including the given time.
	  nextFlushedRoot = root;
	  nextFlushedExpirationTime = expirationTime;
	  performWorkOnRoot(root, expirationTime, false);
	  // Flush any sync work that was scheduled by lifecycles
	  performSyncWork();
	  finishRendering();
	}

	function finishRendering() {
	  nestedUpdateCount = 0;

	  if (completedBatches !== null) {
	    var batches = completedBatches;
	    completedBatches = null;
	    for (var i = 0; i < batches.length; i++) {
	      var batch = batches[i];
	      try {
	        batch._onComplete();
	      } catch (error) {
	        if (!hasUnhandledError) {
	          hasUnhandledError = true;
	          unhandledError = error;
	        }
	      }
	    }
	  }

	  if (hasUnhandledError) {
	    var error = unhandledError;
	    unhandledError = null;
	    hasUnhandledError = false;
	    throw error;
	  }
	}

	function performWorkOnRoot(root, expirationTime, isAsync) {
	  !!isRendering ? invariant(false, 'performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	  isRendering = true;

	  // Check if this is async work or sync/expired work.
	  if (!isAsync) {
	    // Flush sync work.
	    var finishedWork = root.finishedWork;
	    if (finishedWork !== null) {
	      // This root is already complete. We can commit it.
	      completeRoot(root, finishedWork, expirationTime);
	    } else {
	      finishedWork = renderRoot(root, expirationTime, false);
	      if (finishedWork !== null) {
	        // We've completed the root. Commit it.
	        completeRoot(root, finishedWork, expirationTime);
	      }
	    }
	  } else {
	    // Flush async work.
	    var _finishedWork = root.finishedWork;
	    if (_finishedWork !== null) {
	      // This root is already complete. We can commit it.
	      completeRoot(root, _finishedWork, expirationTime);
	    } else {
	      _finishedWork = renderRoot(root, expirationTime, true);
	      if (_finishedWork !== null) {
	        // We've completed the root. Check the deadline one more time
	        // before committing.
	        if (!shouldYield()) {
	          // Still time left. Commit the root.
	          completeRoot(root, _finishedWork, expirationTime);
	        } else {
	          // There's no time left. Mark this root as complete. We'll come
	          // back and commit it later.
	          root.finishedWork = _finishedWork;

	          if (enableProfilerTimer) {
	            // If we didn't finish, pause the "actual" render timer.
	            // We'll restart it when we resume work.
	            pauseActualRenderTimerIfRunning();
	          }
	        }
	      }
	    }
	  }

	  isRendering = false;
	}

	function completeRoot(root, finishedWork, expirationTime) {
	  // Check if there's a batch that matches this expiration time.
	  var firstBatch = root.firstBatch;
	  if (firstBatch !== null && firstBatch._expirationTime <= expirationTime) {
	    if (completedBatches === null) {
	      completedBatches = [firstBatch];
	    } else {
	      completedBatches.push(firstBatch);
	    }
	    if (firstBatch._defer) {
	      // This root is blocked from committing by a batch. Unschedule it until
	      // we receive another update.
	      root.finishedWork = finishedWork;
	      root.remainingExpirationTime = NoWork;
	      return;
	    }
	  }

	  // Commit the root.
	  root.finishedWork = null;
	  root.remainingExpirationTime = commitRoot(finishedWork);
	}

	// When working on async work, the reconciler asks the renderer if it should
	// yield execution. For DOM, we implement this with requestIdleCallback.
	function shouldYield() {
	  if (deadline === null) {
	    return false;
	  }
	  if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
	    // Disregard deadline.didTimeout. Only expired work should be flushed
	    // during a timeout. This path is only hit for non-expired work.
	    return false;
	  }
	  deadlineDidExpire = true;
	  return true;
	}

	function onUncaughtError(error) {
	  !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  // Unschedule this root so we don't work on it again until there's
	  // another update.
	  nextFlushedRoot.remainingExpirationTime = NoWork;
	  if (!hasUnhandledError) {
	    hasUnhandledError = true;
	    unhandledError = error;
	  }
	}

	function onBlock(remainingExpirationTime) {
	  !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  // This root was blocked. Unschedule it until there's another update.
	  nextFlushedRoot.remainingExpirationTime = remainingExpirationTime;
	}

	// TODO: Batching should be implemented at the renderer level, not inside
	// the reconciler.
	function batchedUpdates$1(fn, a) {
	  var previousIsBatchingUpdates = isBatchingUpdates;
	  isBatchingUpdates = true;
	  try {
	    return fn(a);
	  } finally {
	    isBatchingUpdates = previousIsBatchingUpdates;
	    if (!isBatchingUpdates && !isRendering) {
	      performSyncWork();
	    }
	  }
	}

	// TODO: Batching should be implemented at the renderer level, not inside
	// the reconciler.
	function unbatchedUpdates(fn, a) {
	  if (isBatchingUpdates && !isUnbatchingUpdates) {
	    isUnbatchingUpdates = true;
	    try {
	      return fn(a);
	    } finally {
	      isUnbatchingUpdates = false;
	    }
	  }
	  return fn(a);
	}

	// TODO: Batching should be implemented at the renderer level, not within
	// the reconciler.
	function flushSync(fn, a) {
	  !!isRendering ? invariant(false, 'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.') : void 0;
	  var previousIsBatchingUpdates = isBatchingUpdates;
	  isBatchingUpdates = true;
	  try {
	    return syncUpdates(fn, a);
	  } finally {
	    isBatchingUpdates = previousIsBatchingUpdates;
	    performSyncWork();
	  }
	}

	function interactiveUpdates$1(fn, a, b) {
	  if (isBatchingInteractiveUpdates) {
	    return fn(a, b);
	  }
	  // If there are any pending interactive updates, synchronously flush them.
	  // This needs to happen before we read any handlers, because the effect of
	  // the previous event may influence which handlers are called during
	  // this event.
	  if (!isBatchingUpdates && !isRendering && lowestPendingInteractiveExpirationTime !== NoWork) {
	    // Synchronously flush pending interactive updates.
	    performWork(lowestPendingInteractiveExpirationTime, false, null);
	    lowestPendingInteractiveExpirationTime = NoWork;
	  }
	  var previousIsBatchingInteractiveUpdates = isBatchingInteractiveUpdates;
	  var previousIsBatchingUpdates = isBatchingUpdates;
	  isBatchingInteractiveUpdates = true;
	  isBatchingUpdates = true;
	  try {
	    return fn(a, b);
	  } finally {
	    isBatchingInteractiveUpdates = previousIsBatchingInteractiveUpdates;
	    isBatchingUpdates = previousIsBatchingUpdates;
	    if (!isBatchingUpdates && !isRendering) {
	      performSyncWork();
	    }
	  }
	}

	function flushInteractiveUpdates$1() {
	  if (!isRendering && lowestPendingInteractiveExpirationTime !== NoWork) {
	    // Synchronously flush pending interactive updates.
	    performWork(lowestPendingInteractiveExpirationTime, false, null);
	    lowestPendingInteractiveExpirationTime = NoWork;
	  }
	}

	function flushControlled(fn) {
	  var previousIsBatchingUpdates = isBatchingUpdates;
	  isBatchingUpdates = true;
	  try {
	    syncUpdates(fn);
	  } finally {
	    isBatchingUpdates = previousIsBatchingUpdates;
	    if (!isBatchingUpdates && !isRendering) {
	      performWork(Sync, false, null);
	    }
	  }
	}

	// 0 is PROD, 1 is DEV.
	// Might add PROFILE later.


	var didWarnAboutNestedUpdates = void 0;

	{
	  didWarnAboutNestedUpdates = false;
	}

	function getContextForSubtree(parentComponent) {
	  if (!parentComponent) {
	    return emptyObject;
	  }

	  var fiber = get(parentComponent);
	  var parentContext = findCurrentUnmaskedContext(fiber);
	  return isContextProvider(fiber) ? processChildContext(fiber, parentContext) : parentContext;
	}

	function scheduleRootUpdate(current, element, expirationTime, callback) {
	  {
	    if (ReactDebugCurrentFiber.phase === 'render' && ReactDebugCurrentFiber.current !== null && !didWarnAboutNestedUpdates) {
	      didWarnAboutNestedUpdates = true;
	      warning(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(ReactDebugCurrentFiber.current) || 'Unknown');
	    }
	  }

	  var update = createUpdate(expirationTime);
	  // Caution: React DevTools currently depends on this property
	  // being called "element".
	  update.payload = { element: element };

	  callback = callback === undefined ? null : callback;
	  if (callback !== null) {
	    !(typeof callback === 'function') ? warning(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;
	    update.callback = callback;
	  }
	  enqueueUpdate(current, update, expirationTime);

	  scheduleWork$1(current, expirationTime);
	  return expirationTime;
	}

	function updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback) {
	  // TODO: If this is a nested container, this won't be the root.
	  var current = container.current;

	  {
	    if (ReactFiberInstrumentation_1.debugTool) {
	      if (current.alternate === null) {
	        ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
	      } else if (element === null) {
	        ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
	      } else {
	        ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
	      }
	    }
	  }

	  var context = getContextForSubtree(parentComponent);
	  if (container.context === null) {
	    container.context = context;
	  } else {
	    container.pendingContext = context;
	  }

	  return scheduleRootUpdate(current, element, expirationTime, callback);
	}

	function findHostInstance(component) {
	  var fiber = get(component);
	  if (fiber === undefined) {
	    if (typeof component.render === 'function') {
	      invariant(false, 'Unable to find node on an unmounted component.');
	    } else {
	      invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));
	    }
	  }
	  var hostFiber = findCurrentHostFiber(fiber);
	  if (hostFiber === null) {
	    return null;
	  }
	  return hostFiber.stateNode;
	}

	function createContainer(containerInfo, isAsync, hydrate) {
	  return createFiberRoot(containerInfo, isAsync, hydrate);
	}

	function updateContainer(element, container, parentComponent, callback) {
	  var current = container.current;
	  var currentTime = recalculateCurrentTime();
	  var expirationTime = computeExpirationForFiber(currentTime, current);
	  return updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback);
	}

	function getPublicRootInstance(container) {
	  var containerFiber = container.current;
	  if (!containerFiber.child) {
	    return null;
	  }
	  switch (containerFiber.child.tag) {
	    case HostComponent:
	      return getPublicInstance(containerFiber.child.stateNode);
	    default:
	      return containerFiber.child.stateNode;
	  }
	}

	function findHostInstanceWithNoPortals(fiber) {
	  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
	  if (hostFiber === null) {
	    return null;
	  }
	  return hostFiber.stateNode;
	}

	function injectIntoDevTools(devToolsConfig) {
	  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;

	  return injectInternals(_assign({}, devToolsConfig, {
	    findHostInstanceByFiber: function (fiber) {
	      var hostFiber = findCurrentHostFiber(fiber);
	      if (hostFiber === null) {
	        return null;
	      }
	      return hostFiber.stateNode;
	    },
	    findFiberByHostInstance: function (instance) {
	      if (!findFiberByHostInstance) {
	        // Might not be implemented by the renderer.
	        return null;
	      }
	      return findFiberByHostInstance(instance);
	    }
	  }));
	}

	// This file intentionally does *not* have the Flow annotation.
	// Don't add it. See `./inline-typed.js` for an explanation.



	var DOMRenderer = Object.freeze({
		updateContainerAtExpirationTime: updateContainerAtExpirationTime,
		createContainer: createContainer,
		updateContainer: updateContainer,
		flushRoot: flushRoot,
		requestWork: requestWork,
		computeUniqueAsyncExpiration: computeUniqueAsyncExpiration,
		batchedUpdates: batchedUpdates$1,
		unbatchedUpdates: unbatchedUpdates,
		deferredUpdates: deferredUpdates,
		syncUpdates: syncUpdates,
		interactiveUpdates: interactiveUpdates$1,
		flushInteractiveUpdates: flushInteractiveUpdates$1,
		flushControlled: flushControlled,
		flushSync: flushSync,
		getPublicRootInstance: getPublicRootInstance,
		findHostInstance: findHostInstance,
		findHostInstanceWithNoPortals: findHostInstanceWithNoPortals,
		injectIntoDevTools: injectIntoDevTools
	});

	function createPortal$1(children, containerInfo,
	// TODO: figure out the API for cross-renderer implementation.
	implementation) {
	  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

	  return {
	    // This tag allow us to uniquely identify this as a React Portal
	    $$typeof: REACT_PORTAL_TYPE,
	    key: key == null ? null : '' + key,
	    children: children,
	    containerInfo: containerInfo,
	    implementation: implementation
	  };
	}

	// TODO: this is special because it gets imported during build.

	var ReactVersion = '16.4.2';

	// TODO: This type is shared between the reconciler and ReactDOM, but will
	// eventually be lifted out to the renderer.
	var topLevelUpdateWarnings = void 0;
	var warnOnInvalidCallback = void 0;
	var didWarnAboutUnstableCreatePortal = false;

	{
	  if (typeof Map !== 'function' ||
	  // $FlowIssue Flow incorrectly thinks Map has no prototype
	  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' ||
	  // $FlowIssue Flow incorrectly thinks Set has no prototype
	  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
	    warning(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
	  }

	  topLevelUpdateWarnings = function (container) {
	    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
	      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);
	      if (hostInstance) {
	        !(hostInstance.parentNode === container) ? warning(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;
	      }
	    }

	    var isRootRenderedBySomeReact = !!container._reactRootContainer;
	    var rootEl = getReactRootElementInContainer(container);
	    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));

	    !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warning(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

	    !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warning(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
	  };

	  warnOnInvalidCallback = function (callback, callerName) {
	    !(callback === null || typeof callback === 'function') ? warning(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;
	  };
	}

	injection$2.injectFiberControlledHostComponent(ReactDOMFiberComponent);

	function ReactBatch(root) {
	  var expirationTime = computeUniqueAsyncExpiration();
	  this._expirationTime = expirationTime;
	  this._root = root;
	  this._next = null;
	  this._callbacks = null;
	  this._didComplete = false;
	  this._hasChildren = false;
	  this._children = null;
	  this._defer = true;
	}
	ReactBatch.prototype.render = function (children) {
	  !this._defer ? invariant(false, 'batch.render: Cannot render a batch that already committed.') : void 0;
	  this._hasChildren = true;
	  this._children = children;
	  var internalRoot = this._root._internalRoot;
	  var expirationTime = this._expirationTime;
	  var work = new ReactWork();
	  updateContainerAtExpirationTime(children, internalRoot, null, expirationTime, work._onCommit);
	  return work;
	};
	ReactBatch.prototype.then = function (onComplete) {
	  if (this._didComplete) {
	    onComplete();
	    return;
	  }
	  var callbacks = this._callbacks;
	  if (callbacks === null) {
	    callbacks = this._callbacks = [];
	  }
	  callbacks.push(onComplete);
	};
	ReactBatch.prototype.commit = function () {
	  var internalRoot = this._root._internalRoot;
	  var firstBatch = internalRoot.firstBatch;
	  !(this._defer && firstBatch !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;

	  if (!this._hasChildren) {
	    // This batch is empty. Return.
	    this._next = null;
	    this._defer = false;
	    return;
	  }

	  var expirationTime = this._expirationTime;

	  // Ensure this is the first batch in the list.
	  if (firstBatch !== this) {
	    // This batch is not the earliest batch. We need to move it to the front.
	    // Update its expiration time to be the expiration time of the earliest
	    // batch, so that we can flush it without flushing the other batches.
	    if (this._hasChildren) {
	      expirationTime = this._expirationTime = firstBatch._expirationTime;
	      // Rendering this batch again ensures its children will be the final state
	      // when we flush (updates are processed in insertion order: last
	      // update wins).
	      // TODO: This forces a restart. Should we print a warning?
	      this.render(this._children);
	    }

	    // Remove the batch from the list.
	    var previous = null;
	    var batch = firstBatch;
	    while (batch !== this) {
	      previous = batch;
	      batch = batch._next;
	    }
	    !(previous !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;
	    previous._next = batch._next;

	    // Add it to the front.
	    this._next = firstBatch;
	    firstBatch = internalRoot.firstBatch = this;
	  }

	  // Synchronously flush all the work up to this batch's expiration time.
	  this._defer = false;
	  flushRoot(internalRoot, expirationTime);

	  // Pop the batch from the list.
	  var next = this._next;
	  this._next = null;
	  firstBatch = internalRoot.firstBatch = next;

	  // Append the next earliest batch's children to the update queue.
	  if (firstBatch !== null && firstBatch._hasChildren) {
	    firstBatch.render(firstBatch._children);
	  }
	};
	ReactBatch.prototype._onComplete = function () {
	  if (this._didComplete) {
	    return;
	  }
	  this._didComplete = true;
	  var callbacks = this._callbacks;
	  if (callbacks === null) {
	    return;
	  }
	  // TODO: Error handling.
	  for (var i = 0; i < callbacks.length; i++) {
	    var _callback = callbacks[i];
	    _callback();
	  }
	};

	function ReactWork() {
	  this._callbacks = null;
	  this._didCommit = false;
	  // TODO: Avoid need to bind by replacing callbacks in the update queue with
	  // list of Work objects.
	  this._onCommit = this._onCommit.bind(this);
	}
	ReactWork.prototype.then = function (onCommit) {
	  if (this._didCommit) {
	    onCommit();
	    return;
	  }
	  var callbacks = this._callbacks;
	  if (callbacks === null) {
	    callbacks = this._callbacks = [];
	  }
	  callbacks.push(onCommit);
	};
	ReactWork.prototype._onCommit = function () {
	  if (this._didCommit) {
	    return;
	  }
	  this._didCommit = true;
	  var callbacks = this._callbacks;
	  if (callbacks === null) {
	    return;
	  }
	  // TODO: Error handling.
	  for (var i = 0; i < callbacks.length; i++) {
	    var _callback2 = callbacks[i];
	    !(typeof _callback2 === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', _callback2) : void 0;
	    _callback2();
	  }
	};

	function ReactRoot(container, isAsync, hydrate) {
	  var root = createContainer(container, isAsync, hydrate);
	  this._internalRoot = root;
	}
	ReactRoot.prototype.render = function (children, callback) {
	  var root = this._internalRoot;
	  var work = new ReactWork();
	  callback = callback === undefined ? null : callback;
	  {
	    warnOnInvalidCallback(callback, 'render');
	  }
	  if (callback !== null) {
	    work.then(callback);
	  }
	  updateContainer(children, root, null, work._onCommit);
	  return work;
	};
	ReactRoot.prototype.unmount = function (callback) {
	  var root = this._internalRoot;
	  var work = new ReactWork();
	  callback = callback === undefined ? null : callback;
	  {
	    warnOnInvalidCallback(callback, 'render');
	  }
	  if (callback !== null) {
	    work.then(callback);
	  }
	  updateContainer(null, root, null, work._onCommit);
	  return work;
	};
	ReactRoot.prototype.legacy_renderSubtreeIntoContainer = function (parentComponent, children, callback) {
	  var root = this._internalRoot;
	  var work = new ReactWork();
	  callback = callback === undefined ? null : callback;
	  {
	    warnOnInvalidCallback(callback, 'render');
	  }
	  if (callback !== null) {
	    work.then(callback);
	  }
	  updateContainer(children, root, parentComponent, work._onCommit);
	  return work;
	};
	ReactRoot.prototype.createBatch = function () {
	  var batch = new ReactBatch(this);
	  var expirationTime = batch._expirationTime;

	  var internalRoot = this._internalRoot;
	  var firstBatch = internalRoot.firstBatch;
	  if (firstBatch === null) {
	    internalRoot.firstBatch = batch;
	    batch._next = null;
	  } else {
	    // Insert sorted by expiration time then insertion order
	    var insertAfter = null;
	    var insertBefore = firstBatch;
	    while (insertBefore !== null && insertBefore._expirationTime <= expirationTime) {
	      insertAfter = insertBefore;
	      insertBefore = insertBefore._next;
	    }
	    batch._next = insertBefore;
	    if (insertAfter !== null) {
	      insertAfter._next = batch;
	    }
	  }

	  return batch;
	};

	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
	}

	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOCUMENT_NODE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	function shouldHydrateDueToLegacyHeuristic(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
	}

	injection$3.injectRenderer(DOMRenderer);

	var warnedAboutHydrateAPI = false;

	function legacyCreateRootFromDOMContainer(container, forceHydrate) {
	  var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
	  // First clear any existing content.
	  if (!shouldHydrate) {
	    var warned = false;
	    var rootSibling = void 0;
	    while (rootSibling = container.lastChild) {
	      {
	        if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
	          warned = true;
	          warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
	        }
	      }
	      container.removeChild(rootSibling);
	    }
	  }
	  {
	    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
	      warnedAboutHydrateAPI = true;
	      lowPriorityWarning$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
	    }
	  }
	  // Legacy roots are not async by default.
	  var isAsync = false;
	  return new ReactRoot(container, isAsync, shouldHydrate);
	}

	function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
	  // TODO: Ensure all entry points contain this check
	  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;

	  {
	    topLevelUpdateWarnings(container);
	  }

	  // TODO: Without `any` type, Flow says "Property cannot be accessed on any
	  // member of intersection type." Whyyyyyy.
	  var root = container._reactRootContainer;
	  if (!root) {
	    // Initial mount
	    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
	    if (typeof callback === 'function') {
	      var originalCallback = callback;
	      callback = function () {
	        var instance = getPublicRootInstance(root._internalRoot);
	        originalCallback.call(instance);
	      };
	    }
	    // Initial mount should not be batched.
	    unbatchedUpdates(function () {
	      if (parentComponent != null) {
	        root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
	      } else {
	        root.render(children, callback);
	      }
	    });
	  } else {
	    if (typeof callback === 'function') {
	      var _originalCallback = callback;
	      callback = function () {
	        var instance = getPublicRootInstance(root._internalRoot);
	        _originalCallback.call(instance);
	      };
	    }
	    // Update
	    if (parentComponent != null) {
	      root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
	    } else {
	      root.render(children, callback);
	    }
	  }
	  return getPublicRootInstance(root._internalRoot);
	}

	function createPortal(children, container) {
	  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

	  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
	  // TODO: pass ReactDOM portal implementation as third argument
	  return createPortal$1(children, container, null, key);
	}

	var ReactDOM = {
	  createPortal: createPortal,

	  findDOMNode: function (componentOrElement) {
	    {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null && owner.stateNode !== null) {
	        var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
	        !warnedAboutRefsInRender ? warning(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner) || 'A component') : void 0;
	        owner.stateNode._warnedAboutRefsInRender = true;
	      }
	    }
	    if (componentOrElement == null) {
	      return null;
	    }
	    if (componentOrElement.nodeType === ELEMENT_NODE) {
	      return componentOrElement;
	    }

	    return findHostInstance(componentOrElement);
	  },
	  hydrate: function (element, container, callback) {
	    // TODO: throw or warn if we couldn't hydrate?
	    return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
	  },
	  render: function (element, container, callback) {
	    return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
	  },
	  unstable_renderSubtreeIntoContainer: function (parentComponent, element, containerNode, callback) {
	    !(parentComponent != null && has(parentComponent)) ? invariant(false, 'parentComponent must be a valid React Component') : void 0;
	    return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
	  },
	  unmountComponentAtNode: function (container) {
	    !isValidContainer(container) ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : void 0;

	    if (container._reactRootContainer) {
	      {
	        var rootEl = getReactRootElementInContainer(container);
	        var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
	        !!renderedByDifferentReact ? warning(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
	      }

	      // Unmount should not be batched.
	      unbatchedUpdates(function () {
	        legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
	          container._reactRootContainer = null;
	        });
	      });
	      // If you call unmountComponentAtNode twice in quick succession, you'll
	      // get `true` twice. That's probably fine?
	      return true;
	    } else {
	      {
	        var _rootEl = getReactRootElementInContainer(container);
	        var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl));

	        // Check if the container itself is a React root node.
	        var isContainerReactRoot = container.nodeType === 1 && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;

	        !!hasNonRootReactChild ? warning(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }

	      return false;
	    }
	  },


	  // Temporary alias since we already shipped React 16 RC with it.
	  // TODO: remove in React 17.
	  unstable_createPortal: function () {
	    if (!didWarnAboutUnstableCreatePortal) {
	      didWarnAboutUnstableCreatePortal = true;
	      lowPriorityWarning$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
	    }
	    return createPortal.apply(undefined, arguments);
	  },


	  unstable_batchedUpdates: batchedUpdates$1,

	  unstable_deferredUpdates: deferredUpdates,

	  unstable_interactiveUpdates: interactiveUpdates$1,

	  flushSync: flushSync,

	  unstable_flushControlled: flushControlled,

	  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
	    // For TapEventPlugin which is popular in open source
	    EventPluginHub: EventPluginHub,
	    // Used by test-utils
	    EventPluginRegistry: EventPluginRegistry,
	    EventPropagators: EventPropagators,
	    ReactControlledComponent: ReactControlledComponent,
	    ReactDOMComponentTree: ReactDOMComponentTree,
	    ReactDOMEventListener: ReactDOMEventListener
	  }
	};

	ReactDOM.unstable_createRoot = function createRoot(container, options) {
	  var hydrate = options != null && options.hydrate === true;
	  return new ReactRoot(container, true, hydrate);
	};

	var foundDevTools = injectIntoDevTools({
	  findFiberByHostInstance: getClosestInstanceFromNode,
	  bundleType: 1,
	  version: ReactVersion,
	  rendererPackageName: 'react-dom'
	});

	{
	  if (!foundDevTools && ExecutionEnvironment.canUseDOM && window.top === window.self) {
	    // If we're in Chrome or Firefox, provide a download link if not installed.
	    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	      var protocol = window.location.protocol;
	      // Don't warn in exotic cases like chrome-extension://.
	      if (/^(https?|file):$/.test(protocol)) {
	        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
	      }
	    }
	  }
	}



	var ReactDOM$2 = Object.freeze({
		default: ReactDOM
	});

	var ReactDOM$3 = ( ReactDOM$2 && ReactDOM ) || ReactDOM$2;

	// TODO: decide on the top-level export form.
	// This is hacky but makes it work with both Rollup and Jest.
	var reactDom = ReactDOM$3.default ? ReactDOM$3.default : ReactDOM$3;

	module.exports = reactDom;
	  })();
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(23);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ },
/* 23 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(25);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ },
/* 25 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _class2;

	var _ravenJs = __webpack_require__(27);

	var _ravenJs2 = _interopRequireDefault(_ravenJs);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactFileReader = __webpack_require__(35);

	var _reactFileReader2 = _interopRequireDefault(_reactFileReader);

	var _mobxReact = __webpack_require__(62);

	var _styledComponents = __webpack_require__(64);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _reactSplitPane = __webpack_require__(72);

	var _reactSplitPane2 = _interopRequireDefault(_reactSplitPane);

	var _chromaJs = __webpack_require__(114);

	var _chromaJs2 = _interopRequireDefault(_chromaJs);

	var _md = __webpack_require__(115);

	var _store = __webpack_require__(118);

	var _store2 = _interopRequireDefault(_store);

	var _generateChildren = __webpack_require__(122);

	__webpack_require__(123);

	var _colors = __webpack_require__(127);

	var _arrangement = __webpack_require__(128);

	var _arrangement2 = _interopRequireDefault(_arrangement);

	var _beat = __webpack_require__(257);

	var _beat2 = _interopRequireDefault(_beat);

	var _button = __webpack_require__(156);

	var _button2 = _interopRequireDefault(_button);

	var _configControl = __webpack_require__(258);

	var _configControl2 = _interopRequireDefault(_configControl);

	var _newBeatManager = __webpack_require__(259);

	var _newBeatManager2 = _interopRequireDefault(_newBeatManager);

	var _familySelect = __webpack_require__(260);

	var _familySelect2 = _interopRequireDefault(_familySelect);

	var _familyTree = __webpack_require__(261);

	var _familyTree2 = _interopRequireDefault(_familyTree);

	var _matingControls = __webpack_require__(268);

	var _matingControls2 = _interopRequireDefault(_matingControls);

	var _player = __webpack_require__(157);

	var _player2 = _interopRequireDefault(_player);

	var _starRating = __webpack_require__(270);

	var _starRating2 = _interopRequireDefault(_starRating);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	//import DevTools from "mobx-react-devtools"


	if (process.env.SENTRY_PUBLIC_DSN) {
	  _ravenJs2.default.config(process.env.SENTRY_PUBLIC_DSN);
	}

	var Header = _styledComponents2.default.div.withConfig({
	  displayName: 'app__Header',
	  componentId: 'sc-1a9j2e0-0'
	})(['background:', ';width:100%;padding:0px 3px;box-sizing:border-box;'], _colors.headerFooterBgColor);

	var Footer = _styledComponents2.default.div.withConfig({
	  displayName: 'app__Footer',
	  componentId: 'sc-1a9j2e0-1'
	})(['background:', ';position:absolute;bottom:0;left:0;right:0;width:100%;padding:0px 3px;box-sizing:border-box;'], _colors.headerFooterBgColor);

	var BackgroundText = _styledComponents2.default.div.withConfig({
	  displayName: 'app__BackgroundText',
	  componentId: 'sc-1a9j2e0-2'
	})(['left:10px;top:50px;position:absolute;']);

	var BigText = _styledComponents2.default.div.withConfig({
	  displayName: 'app__BigText',
	  componentId: 'sc-1a9j2e0-3'
	})(['display:', ';color:#555;font-family:"Hind Madurai";font-size:50px;vertical-align:middle;'], function (props) {
	  return props.inlineBlock ? "inline-block" : "block";
	});

	var BeatOuterContainer = _styledComponents2.default.div.withConfig({
	  displayName: 'app__BeatOuterContainer',
	  componentId: 'sc-1a9j2e0-4'
	})(['flex:1;position:relative;top:0;left:0;right:0;bottom:0;']);

	var BeatContainer = _styledComponents2.default.div.withConfig({
	  displayName: 'app__BeatContainer',
	  componentId: 'sc-1a9j2e0-5'
	})(['position:relative;top:0;left:0;right:0;bottom:60px;']);

	var PanelLabel = _styledComponents2.default.div.withConfig({
	  displayName: 'app__PanelLabel',
	  componentId: 'sc-1a9j2e0-6'
	})(['font-size:28px;font-family:"Hind Madurai";margin:0 0 5px;&::after{content:"";clear:both;display:table;}']);

	var AddNewBeatButton = _styledComponents2.default.div.withConfig({
	  displayName: 'app__AddNewBeatButton',
	  componentId: 'sc-1a9j2e0-7'
	})(['background:', ';border-radius:40px;border:2px solid darkgreen;color:white;cursor:pointer;display:inline-block;font-size:30px;height:40px;left:20px;position:absolute;text-align:center;top:25px;width:40px;transition:all 0.1s;&:hover{background:', ';}'], _colors.green, (0, _chromaJs2.default)(_colors.green).darken(0.8));

	var InfoRow = _styledComponents2.default.div.withConfig({
	  displayName: 'app__InfoRow',
	  componentId: 'sc-1a9j2e0-8'
	})(['text-align:center;color:gray;font-size:16px;padding:10px;']);
	var Spacer = _styledComponents2.default.div.withConfig({
	  displayName: 'app__Spacer',
	  componentId: 'sc-1a9j2e0-9'
	})(['height:', 'px;'], function (props) {
	  return props.height ? props.height : 10;
	});

	var familyTreeWidth = 440;

	var BeatDisplay = (0, _mobxReact.observer)(_class = function (_Component) {
	  _inherits(BeatDisplay, _Component);

	  function BeatDisplay() {
	    _classCallCheck(this, BeatDisplay);

	    return _possibleConstructorReturn(this, (BeatDisplay.__proto__ || Object.getPrototypeOf(BeatDisplay)).apply(this, arguments));
	  }

	  _createClass(BeatDisplay, [{
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var beat = function (beat) {
	        if (beat) {
	          var keyInfo = beat.key.split(".");
	          var generation = keyInfo[0];
	          var beatNum = keyInfo[1];

	          return _react2.default.createElement(_beat2.default, {
	            key: beat.key,
	            ref: function ref(r) {
	              _this2.beat = r;
	            },
	            beat: beat,
	            handleRemoveTrack: function handleRemoveTrack(trackNum) {
	              return _store2.default.removeTrackFromBeat(generation, beatNum, trackNum);
	            },
	            handleToggleNote: function handleToggleNote(trackNum, note) {
	              return _store2.default.toggleNoteOnBeat(generation, beatNum, trackNum, note);
	            },
	            handleSetSample: function handleSetSample(trackNum, sample) {
	              return _store2.default.setSampleOnBeat(generation, beatNum, trackNum, sample);
	            }
	          });
	        } else {
	          _react2.default.createElement('div', null);
	        }
	      }(_store2.default.currentBeat);

	      if (!beat || _store2.default.showAddNewBeat) {
	        return _react2.default.createElement(
	          'div',
	          { style: { textAlign: "center" } },
	          _react2.default.createElement(_newBeatManager2.default, null)
	        );
	      }

	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(
	          Header,
	          { style: {
	              borderTop: '1px solid ' + _colors.lightGray,
	              textAlign: "center",
	              position: "relative"
	            } },
	          _react2.default.createElement(
	            AddNewBeatButton,
	            {
	              onClick: function onClick() {
	                _store2.default.toggleAddNewBeat(true);
	              }
	            },
	            '+'
	          ),
	          _react2.default.createElement(_starRating2.default, {
	            score: _store2.default.currentBeat.score,
	            handleSetScore: function handleSetScore(score) {
	              _store2.default.setScore(score);
	              _store2.default.nextBeat();
	            }
	          })
	        ),
	        _react2.default.createElement(
	          'div',
	          { style: {
	              overflow: "auto",
	              background: _colors.itemBgColor
	            } },
	          beat
	        )
	      );
	    }
	  }]);

	  return BeatDisplay;
	}(_react.Component)) || _class;

	var App = (0, _mobxReact.observer)(_class2 = function (_Component2) {
	  _inherits(App, _Component2);

	  function App(props) {
	    _classCallCheck(this, App);

	    var _this3 = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));

	    _this3.componentDidMount = function () {
	      document.addEventListener("keydown", _this3.handleKeyPress, false);
	      window.addEventListener("resize", _this3.handleWindowResize);
	    };

	    _this3.componentWillUnmount = function () {
	      document.removeEventListener("keydown", _this3.handleKeyPress, false);
	      window.removeEventListener("resize", _this3.handleWindowResize);
	    };

	    _this3.handleWindowResize = function (e) {
	      _this3.setState({ familyTreeHeight: e.target.innerHeight });
	    };

	    _this3.newFamilyTree = function () {
	      if (confirm("Are you sure you want to start a new family tree?")) {
	        window.location.reload();
	      }
	    };

	    _this3.clearSavedFamilies = function () {
	      if (confirm("Are you sure you want to clear all families?")) {
	        _store2.default.clearSavedFamilies();
	        window.location.reload();
	      }
	    };

	    _this3.handleMate = function () {
	      if (_store2.default.generation < _store2.default.allGenerations.length - 1 && !_store2.default.selectPairMode) {
	        if (confirm('Mating now will clear all generations after the currently selected one (' + _store2.default.generation + ').')) {
	          _store2.default.killSubsequentGenerations();
	        } else {
	          return;
	        }
	      }

	      var options = {};
	      var members = _store2.default.currentGeneration;
	      var nextGeneration = void 0;
	      if (_store2.default.selectPairMode) {
	        members = _store2.default.selectedBeats.map(function (currentKey) {
	          var currentKeyInfo = currentKey.split(".");
	          var generation = currentKeyInfo[0];
	          var beatNum = currentKeyInfo[1];
	          return _store2.default.allGenerations[generation][beatNum];
	        });
	        nextGeneration = (0, _generateChildren.mateSelectedMembers)(members);
	      } else {
	        nextGeneration = (0, _generateChildren.mateGeneration)(members);
	      }

	      _store2.default.addGeneration(nextGeneration);
	      if (_store2.default.selectPairMode) {
	        _store2.default.toggleSelectPairMode();
	      }
	    };

	    _this3.handleUploadSample = function (files) {
	      var file = document.querySelector('input[type=file]').files[0];
	      var reader = new FileReader();

	      reader.addEventListener("load", function () {}, false);

	      if (file) {
	        reader.readAsDataURL(file);
	      }
	    };

	    _this3.handleKeyPress = function (e) {
	      if (e.code == "Space") {
	        e.preventDefault();
	        _store2.default.togglePlay();
	      } else if (e.code == "ArrowRight") {
	        _store2.default.nextBeat();
	      } else if (e.code == "ArrowLeft") {
	        _store2.default.prevBeat();
	      }
	    };

	    _this3.state = {
	      familyTreeHeight: window.innerHeight,
	      familyTreeWidth: familyTreeWidth
	      //store.fetchAllSamples()
	    };return _this3;
	  }

	  _createClass(App, [{
	    key: 'render',
	    value: function render() {
	      var _this4 = this;

	      //<input type="file" onChange={this.handleUploadSample} ></input>
	      return _react2.default.createElement(
	        _reactSplitPane2.default,
	        {
	          onKeyPress: this.handleKeyPress,
	          split: 'vertical',
	          primary: 'second',
	          defaultSize: familyTreeWidth,
	          minSize: 400,
	          maxSize: 800,
	          onChange: function onChange(size) {
	            _this4.setState({ familyTreeWidth: size });
	          },
	          pane1Style: { backgroundColor: _colors.panelBackground },
	          pane2Style: { backgroundColor: _colors.panelBackground }
	        },
	        _react2.default.createElement(
	          _reactSplitPane2.default,
	          { split: 'horizontal', defaultSize: 600, minSize: 600, maxSize: 600 },
	          _react2.default.createElement(
	            BeatOuterContainer,
	            null,
	            _react2.default.createElement(
	              BeatContainer,
	              null,
	              _react2.default.createElement(_player2.default, {
	                beat: _store2.default.currentBeat,
	                playing: _store2.default.playingCurrentBeat,
	                resolution: _store2.default.currentBeatResolution
	              }),
	              _react2.default.createElement(
	                Header,
	                null,
	                _react2.default.createElement(
	                  BigText,
	                  { inlineBlock: true },
	                  'Beat'
	                )
	              ),
	              _react2.default.createElement(BeatDisplay, null)
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(
	              Header,
	              null,
	              _react2.default.createElement(
	                PanelLabel,
	                null,
	                'Arrangement'
	              )
	            ),
	            _react2.default.createElement(_arrangement2.default, null),
	            _react2.default.createElement(
	              Footer,
	              null,
	              _react2.default.createElement(_familySelect2.default, null),
	              _react2.default.createElement(
	                _button2.default,
	                { title: 'Start new family', onClick: this.newFamilyTree },
	                'New Family'
	              ),
	              _react2.default.createElement(
	                _button2.default,
	                { title: 'Clear all saved families', onClick: this.clearSavedFamilies },
	                'Clear All'
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            Header,
	            null,
	            _react2.default.createElement(
	              PanelLabel,
	              null,
	              _react2.default.createElement(
	                _button2.default,
	                { large: true, color: [_colors.green], onClick: this.handleMate },
	                'Mate'
	              ),
	              _react2.default.createElement(
	                _button2.default,
	                {
	                  active: _store2.default.selectPairMode,
	                  onClick: _store2.default.toggleSelectPairMode
	                },
	                'Select beats to mate'
	              ),
	              _react2.default.createElement(_matingControls2.default, null)
	            )
	          ),
	          _react2.default.createElement(
	            BackgroundText,
	            null,
	            _react2.default.createElement(
	              BigText,
	              null,
	              'Family Tree'
	            )
	          ),
	          _react2.default.createElement(_familyTree2.default, {
	            height: this.state.familyTreeHeight,
	            width: this.state.familyTreeWidth,
	            familyTree: _store2.default.allGenerations
	          }),
	          _react2.default.createElement(
	            Footer,
	            null,
	            _react2.default.createElement(
	              InfoRow,
	              null,
	              'scroll to zoom'
	            )
	          ),
	          typeof DevTools !== "undefined" ? _react2.default.createElement(DevTools, null) : null
	        )
	      );
	    }
	  }]);

	  return App;
	}(_react.Component)) || _class2;

	exports.default = App;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/**
	 * Enforces a single instance of the Raven client, and the
	 * main entry point for Raven. If you are a consumer of the
	 * Raven library, you SHOULD load this file (vs raven.js).
	 **/

	var RavenConstructor = __webpack_require__(28);

	// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)
	var _window =
	  typeof window !== 'undefined'
	    ? window
	    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};
	var _Raven = _window.Raven;

	var Raven = new RavenConstructor();

	/*
	 * Allow multiple versions of Raven to be installed.
	 * Strip Raven from the global context and returns the instance.
	 *
	 * @return {Raven}
	 */
	Raven.noConflict = function() {
	  _window.Raven = _Raven;
	  return Raven;
	};

	Raven.afterLoad();

	module.exports = Raven;

	/**
	 * DISCLAIMER:
	 *
	 * Expose `Client` constructor for cases where user want to track multiple "sub-applications" in one larger app.
	 * It's not meant to be used by a wide audience, so pleaaase make sure that you know what you're doing before using it.
	 * Accidentally calling `install` multiple times, may result in an unexpected behavior that's very hard to debug.
	 *
	 * It's called `Client' to be in-line with Raven Node implementation.
	 *
	 * HOWTO:
	 *
	 * import Raven from 'raven-js';
	 *
	 * const someAppReporter = new Raven.Client();
	 * const someOtherAppReporter = new Raven.Client();
	 *
	 * someAppReporter.config('__DSN__', {
	 *   ...config goes here
	 * });
	 *
	 * someOtherAppReporter.config('__OTHER_DSN__', {
	 *   ...config goes here
	 * });
	 *
	 * someAppReporter.captureMessage(...);
	 * someAppReporter.captureException(...);
	 * someAppReporter.captureBreadcrumb(...);
	 *
	 * someOtherAppReporter.captureMessage(...);
	 * someOtherAppReporter.captureException(...);
	 * someOtherAppReporter.captureBreadcrumb(...);
	 *
	 * It should "just work".
	 */
	module.exports.Client = RavenConstructor;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/*global XDomainRequest:false */

	var TraceKit = __webpack_require__(29);
	var stringify = __webpack_require__(31);
	var md5 = __webpack_require__(32);
	var RavenConfigError = __webpack_require__(33);

	var utils = __webpack_require__(30);
	var isErrorEvent = utils.isErrorEvent;
	var isDOMError = utils.isDOMError;
	var isDOMException = utils.isDOMException;
	var isError = utils.isError;
	var isObject = utils.isObject;
	var isPlainObject = utils.isPlainObject;
	var isUndefined = utils.isUndefined;
	var isFunction = utils.isFunction;
	var isString = utils.isString;
	var isArray = utils.isArray;
	var isEmptyObject = utils.isEmptyObject;
	var each = utils.each;
	var objectMerge = utils.objectMerge;
	var truncate = utils.truncate;
	var objectFrozen = utils.objectFrozen;
	var hasKey = utils.hasKey;
	var joinRegExp = utils.joinRegExp;
	var urlencode = utils.urlencode;
	var uuid4 = utils.uuid4;
	var htmlTreeAsString = utils.htmlTreeAsString;
	var isSameException = utils.isSameException;
	var isSameStacktrace = utils.isSameStacktrace;
	var parseUrl = utils.parseUrl;
	var fill = utils.fill;
	var supportsFetch = utils.supportsFetch;
	var supportsReferrerPolicy = utils.supportsReferrerPolicy;
	var serializeKeysForMessage = utils.serializeKeysForMessage;
	var serializeException = utils.serializeException;
	var sanitize = utils.sanitize;

	var wrapConsoleMethod = __webpack_require__(34).wrapMethod;

	var dsnKeys = 'source protocol user pass host port path'.split(' '),
	  dsnPattern = /^(?:(\w+):)?\/\/(?:(\w+)(:\w+)?@)?([\w\.-]+)(?::(\d+))?(\/.*)/;

	function now() {
	  return +new Date();
	}

	// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)
	var _window =
	  typeof window !== 'undefined'
	    ? window
	    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};
	var _document = _window.document;
	var _navigator = _window.navigator;

	function keepOriginalCallback(original, callback) {
	  return isFunction(callback)
	    ? function(data) {
	        return callback(data, original);
	      }
	    : callback;
	}

	// First, check for JSON support
	// If there is no JSON, we no-op the core features of Raven
	// since JSON is required to encode the payload
	function Raven() {
	  this._hasJSON = !!(typeof JSON === 'object' && JSON.stringify);
	  // Raven can run in contexts where there's no document (react-native)
	  this._hasDocument = !isUndefined(_document);
	  this._hasNavigator = !isUndefined(_navigator);
	  this._lastCapturedException = null;
	  this._lastData = null;
	  this._lastEventId = null;
	  this._globalServer = null;
	  this._globalKey = null;
	  this._globalProject = null;
	  this._globalContext = {};
	  this._globalOptions = {
	    // SENTRY_RELEASE can be injected by https://github.com/getsentry/sentry-webpack-plugin
	    release: _window.SENTRY_RELEASE && _window.SENTRY_RELEASE.id,
	    logger: 'javascript',
	    ignoreErrors: [],
	    ignoreUrls: [],
	    whitelistUrls: [],
	    includePaths: [],
	    headers: null,
	    collectWindowErrors: true,
	    captureUnhandledRejections: true,
	    maxMessageLength: 0,
	    // By default, truncates URL values to 250 chars
	    maxUrlLength: 250,
	    stackTraceLimit: 50,
	    autoBreadcrumbs: true,
	    instrument: true,
	    sampleRate: 1,
	    sanitizeKeys: []
	  };
	  this._fetchDefaults = {
	    method: 'POST',
	    keepalive: true,
	    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default
	    // https://caniuse.com/#feat=referrer-policy
	    // It doesn't. And it throw exception instead of ignoring this parameter...
	    // REF: https://github.com/getsentry/raven-js/issues/1233
	    referrerPolicy: supportsReferrerPolicy() ? 'origin' : ''
	  };
	  this._ignoreOnError = 0;
	  this._isRavenInstalled = false;
	  this._originalErrorStackTraceLimit = Error.stackTraceLimit;
	  // capture references to window.console *and* all its methods first
	  // before the console plugin has a chance to monkey patch
	  this._originalConsole = _window.console || {};
	  this._originalConsoleMethods = {};
	  this._plugins = [];
	  this._startTime = now();
	  this._wrappedBuiltIns = [];
	  this._breadcrumbs = [];
	  this._lastCapturedEvent = null;
	  this._keypressTimeout;
	  this._location = _window.location;
	  this._lastHref = this._location && this._location.href;
	  this._resetBackoff();

	  // eslint-disable-next-line guard-for-in
	  for (var method in this._originalConsole) {
	    this._originalConsoleMethods[method] = this._originalConsole[method];
	  }
	}

	/*
	 * The core Raven singleton
	 *
	 * @this {Raven}
	 */

	Raven.prototype = {
	  // Hardcode version string so that raven source can be loaded directly via
	  // webpack (using a build step causes webpack #1617). Grunt verifies that
	  // this value matches package.json during build.
	  //   See: https://github.com/getsentry/raven-js/issues/465
	  VERSION: '3.26.4',

	  debug: false,

	  TraceKit: TraceKit, // alias to TraceKit

	  /*
	     * Configure Raven with a DSN and extra options
	     *
	     * @param {string} dsn The public Sentry DSN
	     * @param {object} options Set of global options [optional]
	     * @return {Raven}
	     */
	  config: function(dsn, options) {
	    var self = this;

	    if (self._globalServer) {
	      this._logDebug('error', 'Error: Raven has already been configured');
	      return self;
	    }
	    if (!dsn) return self;

	    var globalOptions = self._globalOptions;

	    // merge in options
	    if (options) {
	      each(options, function(key, value) {
	        // tags and extra are special and need to be put into context
	        if (key === 'tags' || key === 'extra' || key === 'user') {
	          self._globalContext[key] = value;
	        } else {
	          globalOptions[key] = value;
	        }
	      });
	    }

	    self.setDSN(dsn);

	    // "Script error." is hard coded into browsers for errors that it can't read.
	    // this is the result of a script being pulled in from an external domain and CORS.
	    globalOptions.ignoreErrors.push(/^Script error\.?$/);
	    globalOptions.ignoreErrors.push(/^Javascript error: Script error\.? on line 0$/);

	    // join regexp rules into one big rule
	    globalOptions.ignoreErrors = joinRegExp(globalOptions.ignoreErrors);
	    globalOptions.ignoreUrls = globalOptions.ignoreUrls.length
	      ? joinRegExp(globalOptions.ignoreUrls)
	      : false;
	    globalOptions.whitelistUrls = globalOptions.whitelistUrls.length
	      ? joinRegExp(globalOptions.whitelistUrls)
	      : false;
	    globalOptions.includePaths = joinRegExp(globalOptions.includePaths);
	    globalOptions.maxBreadcrumbs = Math.max(
	      0,
	      Math.min(globalOptions.maxBreadcrumbs || 100, 100)
	    ); // default and hard limit is 100

	    var autoBreadcrumbDefaults = {
	      xhr: true,
	      console: true,
	      dom: true,
	      location: true,
	      sentry: true
	    };

	    var autoBreadcrumbs = globalOptions.autoBreadcrumbs;
	    if ({}.toString.call(autoBreadcrumbs) === '[object Object]') {
	      autoBreadcrumbs = objectMerge(autoBreadcrumbDefaults, autoBreadcrumbs);
	    } else if (autoBreadcrumbs !== false) {
	      autoBreadcrumbs = autoBreadcrumbDefaults;
	    }
	    globalOptions.autoBreadcrumbs = autoBreadcrumbs;

	    var instrumentDefaults = {
	      tryCatch: true
	    };

	    var instrument = globalOptions.instrument;
	    if ({}.toString.call(instrument) === '[object Object]') {
	      instrument = objectMerge(instrumentDefaults, instrument);
	    } else if (instrument !== false) {
	      instrument = instrumentDefaults;
	    }
	    globalOptions.instrument = instrument;

	    TraceKit.collectWindowErrors = !!globalOptions.collectWindowErrors;

	    // return for chaining
	    return self;
	  },

	  /*
	     * Installs a global window.onerror error handler
	     * to capture and report uncaught exceptions.
	     * At this point, install() is required to be called due
	     * to the way TraceKit is set up.
	     *
	     * @return {Raven}
	     */
	  install: function() {
	    var self = this;
	    if (self.isSetup() && !self._isRavenInstalled) {
	      TraceKit.report.subscribe(function() {
	        self._handleOnErrorStackInfo.apply(self, arguments);
	      });

	      if (self._globalOptions.captureUnhandledRejections) {
	        self._attachPromiseRejectionHandler();
	      }

	      self._patchFunctionToString();

	      if (self._globalOptions.instrument && self._globalOptions.instrument.tryCatch) {
	        self._instrumentTryCatch();
	      }

	      if (self._globalOptions.autoBreadcrumbs) self._instrumentBreadcrumbs();

	      // Install all of the plugins
	      self._drainPlugins();

	      self._isRavenInstalled = true;
	    }

	    Error.stackTraceLimit = self._globalOptions.stackTraceLimit;
	    return this;
	  },

	  /*
	     * Set the DSN (can be called multiple time unlike config)
	     *
	     * @param {string} dsn The public Sentry DSN
	     */
	  setDSN: function(dsn) {
	    var self = this,
	      uri = self._parseDSN(dsn),
	      lastSlash = uri.path.lastIndexOf('/'),
	      path = uri.path.substr(1, lastSlash);

	    self._dsn = dsn;
	    self._globalKey = uri.user;
	    self._globalSecret = uri.pass && uri.pass.substr(1);
	    self._globalProject = uri.path.substr(lastSlash + 1);

	    self._globalServer = self._getGlobalServer(uri);

	    self._globalEndpoint =
	      self._globalServer + '/' + path + 'api/' + self._globalProject + '/store/';

	    // Reset backoff state since we may be pointing at a
	    // new project/server
	    this._resetBackoff();
	  },

	  /*
	     * Wrap code within a context so Raven can capture errors
	     * reliably across domains that is executed immediately.
	     *
	     * @param {object} options A specific set of options for this context [optional]
	     * @param {function} func The callback to be immediately executed within the context
	     * @param {array} args An array of arguments to be called with the callback [optional]
	     */
	  context: function(options, func, args) {
	    if (isFunction(options)) {
	      args = func || [];
	      func = options;
	      options = {};
	    }

	    return this.wrap(options, func).apply(this, args);
	  },

	  /*
	     * Wrap code within a context and returns back a new function to be executed
	     *
	     * @param {object} options A specific set of options for this context [optional]
	     * @param {function} func The function to be wrapped in a new context
	     * @param {function} _before A function to call before the try/catch wrapper [optional, private]
	     * @return {function} The newly wrapped functions with a context
	     */
	  wrap: function(options, func, _before) {
	    var self = this;
	    // 1 argument has been passed, and it's not a function
	    // so just return it
	    if (isUndefined(func) && !isFunction(options)) {
	      return options;
	    }

	    // options is optional
	    if (isFunction(options)) {
	      func = options;
	      options = undefined;
	    }

	    // At this point, we've passed along 2 arguments, and the second one
	    // is not a function either, so we'll just return the second argument.
	    if (!isFunction(func)) {
	      return func;
	    }

	    // We don't wanna wrap it twice!
	    try {
	      if (func.__raven__) {
	        return func;
	      }

	      // If this has already been wrapped in the past, return that
	      if (func.__raven_wrapper__) {
	        return func.__raven_wrapper__;
	      }
	    } catch (e) {
	      // Just accessing custom props in some Selenium environments
	      // can cause a "Permission denied" exception (see raven-js#495).
	      // Bail on wrapping and return the function as-is (defers to window.onerror).
	      return func;
	    }

	    function wrapped() {
	      var args = [],
	        i = arguments.length,
	        deep = !options || (options && options.deep !== false);

	      if (_before && isFunction(_before)) {
	        _before.apply(this, arguments);
	      }

	      // Recursively wrap all of a function's arguments that are
	      // functions themselves.
	      while (i--) args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];

	      try {
	        // Attempt to invoke user-land function
	        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it
	        //       means Raven caught an error invoking your application code. This is
	        //       expected behavior and NOT indicative of a bug with Raven.js.
	        return func.apply(this, args);
	      } catch (e) {
	        self._ignoreNextOnError();
	        self.captureException(e, options);
	        throw e;
	      }
	    }

	    // copy over properties of the old function
	    for (var property in func) {
	      if (hasKey(func, property)) {
	        wrapped[property] = func[property];
	      }
	    }
	    wrapped.prototype = func.prototype;

	    func.__raven_wrapper__ = wrapped;
	    // Signal that this function has been wrapped/filled already
	    // for both debugging and to prevent it to being wrapped/filled twice
	    wrapped.__raven__ = true;
	    wrapped.__orig__ = func;

	    return wrapped;
	  },

	  /**
	   * Uninstalls the global error handler.
	   *
	   * @return {Raven}
	   */
	  uninstall: function() {
	    TraceKit.report.uninstall();

	    this._detachPromiseRejectionHandler();
	    this._unpatchFunctionToString();
	    this._restoreBuiltIns();
	    this._restoreConsole();

	    Error.stackTraceLimit = this._originalErrorStackTraceLimit;
	    this._isRavenInstalled = false;

	    return this;
	  },

	  /**
	   * Callback used for `unhandledrejection` event
	   *
	   * @param {PromiseRejectionEvent} event An object containing
	   *   promise: the Promise that was rejected
	   *   reason: the value with which the Promise was rejected
	   * @return void
	   */
	  _promiseRejectionHandler: function(event) {
	    this._logDebug('debug', 'Raven caught unhandled promise rejection:', event);
	    this.captureException(event.reason, {
	      mechanism: {
	        type: 'onunhandledrejection',
	        handled: false
	      }
	    });
	  },

	  /**
	   * Installs the global promise rejection handler.
	   *
	   * @return {raven}
	   */
	  _attachPromiseRejectionHandler: function() {
	    this._promiseRejectionHandler = this._promiseRejectionHandler.bind(this);
	    _window.addEventListener &&
	      _window.addEventListener('unhandledrejection', this._promiseRejectionHandler);
	    return this;
	  },

	  /**
	   * Uninstalls the global promise rejection handler.
	   *
	   * @return {raven}
	   */
	  _detachPromiseRejectionHandler: function() {
	    _window.removeEventListener &&
	      _window.removeEventListener('unhandledrejection', this._promiseRejectionHandler);
	    return this;
	  },

	  /**
	   * Manually capture an exception and send it over to Sentry
	   *
	   * @param {error} ex An exception to be logged
	   * @param {object} options A specific set of options for this error [optional]
	   * @return {Raven}
	   */
	  captureException: function(ex, options) {
	    options = objectMerge({trimHeadFrames: 0}, options ? options : {});

	    if (isErrorEvent(ex) && ex.error) {
	      // If it is an ErrorEvent with `error` property, extract it to get actual Error
	      ex = ex.error;
	    } else if (isDOMError(ex) || isDOMException(ex)) {
	      // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)
	      // then we just extract the name and message, as they don't provide anything else
	      // https://developer.mozilla.org/en-US/docs/Web/API/DOMError
	      // https://developer.mozilla.org/en-US/docs/Web/API/DOMException
	      var name = ex.name || (isDOMError(ex) ? 'DOMError' : 'DOMException');
	      var message = ex.message ? name + ': ' + ex.message : name;

	      return this.captureMessage(
	        message,
	        objectMerge(options, {
	          // neither DOMError or DOMException provide stack trace and we most likely wont get it this way as well
	          // but it's barely any overhead so we may at least try
	          stacktrace: true,
	          trimHeadFrames: options.trimHeadFrames + 1
	        })
	      );
	    } else if (isError(ex)) {
	      // we have a real Error object
	      ex = ex;
	    } else if (isPlainObject(ex)) {
	      // If it is plain Object, serialize it manually and extract options
	      // This will allow us to group events based on top-level keys
	      // which is much better than creating new group when any key/value change
	      options = this._getCaptureExceptionOptionsFromPlainObject(options, ex);
	      ex = new Error(options.message);
	    } else {
	      // If none of previous checks were valid, then it means that
	      // it's not a DOMError/DOMException
	      // it's not a plain Object
	      // it's not a valid ErrorEvent (one with an error property)
	      // it's not an Error
	      // So bail out and capture it as a simple message:
	      return this.captureMessage(
	        ex,
	        objectMerge(options, {
	          stacktrace: true, // if we fall back to captureMessage, default to attempting a new trace
	          trimHeadFrames: options.trimHeadFrames + 1
	        })
	      );
	    }

	    // Store the raw exception object for potential debugging and introspection
	    this._lastCapturedException = ex;

	    // TraceKit.report will re-raise any exception passed to it,
	    // which means you have to wrap it in try/catch. Instead, we
	    // can wrap it here and only re-raise if TraceKit.report
	    // raises an exception different from the one we asked to
	    // report on.
	    try {
	      var stack = TraceKit.computeStackTrace(ex);
	      this._handleStackInfo(stack, options);
	    } catch (ex1) {
	      if (ex !== ex1) {
	        throw ex1;
	      }
	    }

	    return this;
	  },

	  _getCaptureExceptionOptionsFromPlainObject: function(currentOptions, ex) {
	    var exKeys = Object.keys(ex).sort();
	    var options = objectMerge(currentOptions, {
	      message:
	        'Non-Error exception captured with keys: ' + serializeKeysForMessage(exKeys),
	      fingerprint: [md5(exKeys)],
	      extra: currentOptions.extra || {}
	    });
	    options.extra.__serialized__ = serializeException(ex);

	    return options;
	  },

	  /*
	     * Manually send a message to Sentry
	     *
	     * @param {string} msg A plain message to be captured in Sentry
	     * @param {object} options A specific set of options for this message [optional]
	     * @return {Raven}
	     */
	  captureMessage: function(msg, options) {
	    // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an
	    // early call; we'll error on the side of logging anything called before configuration since it's
	    // probably something you should see:
	    if (
	      !!this._globalOptions.ignoreErrors.test &&
	      this._globalOptions.ignoreErrors.test(msg)
	    ) {
	      return;
	    }

	    options = options || {};
	    msg = msg + ''; // Make sure it's actually a string

	    var data = objectMerge(
	      {
	        message: msg
	      },
	      options
	    );

	    var ex;
	    // Generate a "synthetic" stack trace from this point.
	    // NOTE: If you are a Sentry user, and you are seeing this stack frame, it is NOT indicative
	    //       of a bug with Raven.js. Sentry generates synthetic traces either by configuration,
	    //       or if it catches a thrown object without a "stack" property.
	    try {
	      throw new Error(msg);
	    } catch (ex1) {
	      ex = ex1;
	    }

	    // null exception name so `Error` isn't prefixed to msg
	    ex.name = null;
	    var stack = TraceKit.computeStackTrace(ex);

	    // stack[0] is `throw new Error(msg)` call itself, we are interested in the frame that was just before that, stack[1]
	    var initialCall = isArray(stack.stack) && stack.stack[1];

	    // if stack[1] is `Raven.captureException`, it means that someone passed a string to it and we redirected that call
	    // to be handled by `captureMessage`, thus `initialCall` is the 3rd one, not 2nd
	    // initialCall => captureException(string) => captureMessage(string)
	    if (initialCall && initialCall.func === 'Raven.captureException') {
	      initialCall = stack.stack[2];
	    }

	    var fileurl = (initialCall && initialCall.url) || '';

	    if (
	      !!this._globalOptions.ignoreUrls.test &&
	      this._globalOptions.ignoreUrls.test(fileurl)
	    ) {
	      return;
	    }

	    if (
	      !!this._globalOptions.whitelistUrls.test &&
	      !this._globalOptions.whitelistUrls.test(fileurl)
	    ) {
	      return;
	    }

	    // Always attempt to get stacktrace if message is empty.
	    // It's the only way to provide any helpful information to the user.
	    if (this._globalOptions.stacktrace || options.stacktrace || data.message === '') {
	      // fingerprint on msg, not stack trace (legacy behavior, could be revisited)
	      data.fingerprint = data.fingerprint == null ? msg : data.fingerprint;

	      options = objectMerge(
	        {
	          trimHeadFrames: 0
	        },
	        options
	      );
	      // Since we know this is a synthetic trace, the top frame (this function call)
	      // MUST be from Raven.js, so mark it for trimming
	      // We add to the trim counter so that callers can choose to trim extra frames, such
	      // as utility functions.
	      options.trimHeadFrames += 1;

	      var frames = this._prepareFrames(stack, options);
	      data.stacktrace = {
	        // Sentry expects frames oldest to newest
	        frames: frames.reverse()
	      };
	    }

	    // Make sure that fingerprint is always wrapped in an array
	    if (data.fingerprint) {
	      data.fingerprint = isArray(data.fingerprint)
	        ? data.fingerprint
	        : [data.fingerprint];
	    }

	    // Fire away!
	    this._send(data);

	    return this;
	  },

	  captureBreadcrumb: function(obj) {
	    var crumb = objectMerge(
	      {
	        timestamp: now() / 1000
	      },
	      obj
	    );

	    if (isFunction(this._globalOptions.breadcrumbCallback)) {
	      var result = this._globalOptions.breadcrumbCallback(crumb);

	      if (isObject(result) && !isEmptyObject(result)) {
	        crumb = result;
	      } else if (result === false) {
	        return this;
	      }
	    }

	    this._breadcrumbs.push(crumb);
	    if (this._breadcrumbs.length > this._globalOptions.maxBreadcrumbs) {
	      this._breadcrumbs.shift();
	    }
	    return this;
	  },

	  addPlugin: function(plugin /*arg1, arg2, ... argN*/) {
	    var pluginArgs = [].slice.call(arguments, 1);

	    this._plugins.push([plugin, pluginArgs]);
	    if (this._isRavenInstalled) {
	      this._drainPlugins();
	    }

	    return this;
	  },

	  /*
	     * Set/clear a user to be sent along with the payload.
	     *
	     * @param {object} user An object representing user data [optional]
	     * @return {Raven}
	     */
	  setUserContext: function(user) {
	    // Intentionally do not merge here since that's an unexpected behavior.
	    this._globalContext.user = user;

	    return this;
	  },

	  /*
	     * Merge extra attributes to be sent along with the payload.
	     *
	     * @param {object} extra An object representing extra data [optional]
	     * @return {Raven}
	     */
	  setExtraContext: function(extra) {
	    this._mergeContext('extra', extra);

	    return this;
	  },

	  /*
	     * Merge tags to be sent along with the payload.
	     *
	     * @param {object} tags An object representing tags [optional]
	     * @return {Raven}
	     */
	  setTagsContext: function(tags) {
	    this._mergeContext('tags', tags);

	    return this;
	  },

	  /*
	     * Clear all of the context.
	     *
	     * @return {Raven}
	     */
	  clearContext: function() {
	    this._globalContext = {};

	    return this;
	  },

	  /*
	     * Get a copy of the current context. This cannot be mutated.
	     *
	     * @return {object} copy of context
	     */
	  getContext: function() {
	    // lol javascript
	    return JSON.parse(stringify(this._globalContext));
	  },

	  /*
	     * Set environment of application
	     *
	     * @param {string} environment Typically something like 'production'.
	     * @return {Raven}
	     */
	  setEnvironment: function(environment) {
	    this._globalOptions.environment = environment;

	    return this;
	  },

	  /*
	     * Set release version of application
	     *
	     * @param {string} release Typically something like a git SHA to identify version
	     * @return {Raven}
	     */
	  setRelease: function(release) {
	    this._globalOptions.release = release;

	    return this;
	  },

	  /*
	     * Set the dataCallback option
	     *
	     * @param {function} callback The callback to run which allows the
	     *                            data blob to be mutated before sending
	     * @return {Raven}
	     */
	  setDataCallback: function(callback) {
	    var original = this._globalOptions.dataCallback;
	    this._globalOptions.dataCallback = keepOriginalCallback(original, callback);
	    return this;
	  },

	  /*
	     * Set the breadcrumbCallback option
	     *
	     * @param {function} callback The callback to run which allows filtering
	     *                            or mutating breadcrumbs
	     * @return {Raven}
	     */
	  setBreadcrumbCallback: function(callback) {
	    var original = this._globalOptions.breadcrumbCallback;
	    this._globalOptions.breadcrumbCallback = keepOriginalCallback(original, callback);
	    return this;
	  },

	  /*
	     * Set the shouldSendCallback option
	     *
	     * @param {function} callback The callback to run which allows
	     *                            introspecting the blob before sending
	     * @return {Raven}
	     */
	  setShouldSendCallback: function(callback) {
	    var original = this._globalOptions.shouldSendCallback;
	    this._globalOptions.shouldSendCallback = keepOriginalCallback(original, callback);
	    return this;
	  },

	  /**
	   * Override the default HTTP transport mechanism that transmits data
	   * to the Sentry server.
	   *
	   * @param {function} transport Function invoked instead of the default
	   *                             `makeRequest` handler.
	   *
	   * @return {Raven}
	   */
	  setTransport: function(transport) {
	    this._globalOptions.transport = transport;

	    return this;
	  },

	  /*
	     * Get the latest raw exception that was captured by Raven.
	     *
	     * @return {error}
	     */
	  lastException: function() {
	    return this._lastCapturedException;
	  },

	  /*
	     * Get the last event id
	     *
	     * @return {string}
	     */
	  lastEventId: function() {
	    return this._lastEventId;
	  },

	  /*
	     * Determine if Raven is setup and ready to go.
	     *
	     * @return {boolean}
	     */
	  isSetup: function() {
	    if (!this._hasJSON) return false; // needs JSON support
	    if (!this._globalServer) {
	      if (!this.ravenNotConfiguredError) {
	        this.ravenNotConfiguredError = true;
	        this._logDebug('error', 'Error: Raven has not been configured.');
	      }
	      return false;
	    }
	    return true;
	  },

	  afterLoad: function() {
	    // TODO: remove window dependence?

	    // Attempt to initialize Raven on load
	    var RavenConfig = _window.RavenConfig;
	    if (RavenConfig) {
	      this.config(RavenConfig.dsn, RavenConfig.config).install();
	    }
	  },

	  showReportDialog: function(options) {
	    if (
	      !_document // doesn't work without a document (React native)
	    )
	      return;

	    options = Object.assign(
	      {
	        eventId: this.lastEventId(),
	        dsn: this._dsn,
	        user: this._globalContext.user || {}
	      },
	      options
	    );

	    if (!options.eventId) {
	      throw new RavenConfigError('Missing eventId');
	    }

	    if (!options.dsn) {
	      throw new RavenConfigError('Missing DSN');
	    }

	    var encode = encodeURIComponent;
	    var encodedOptions = [];

	    for (var key in options) {
	      if (key === 'user') {
	        var user = options.user;
	        if (user.name) encodedOptions.push('name=' + encode(user.name));
	        if (user.email) encodedOptions.push('email=' + encode(user.email));
	      } else {
	        encodedOptions.push(encode(key) + '=' + encode(options[key]));
	      }
	    }
	    var globalServer = this._getGlobalServer(this._parseDSN(options.dsn));

	    var script = _document.createElement('script');
	    script.async = true;
	    script.src = globalServer + '/api/embed/error-page/?' + encodedOptions.join('&');
	    (_document.head || _document.body).appendChild(script);
	  },

	  /**** Private functions ****/
	  _ignoreNextOnError: function() {
	    var self = this;
	    this._ignoreOnError += 1;
	    setTimeout(function() {
	      // onerror should trigger before setTimeout
	      self._ignoreOnError -= 1;
	    });
	  },

	  _triggerEvent: function(eventType, options) {
	    // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it
	    var evt, key;

	    if (!this._hasDocument) return;

	    options = options || {};

	    eventType = 'raven' + eventType.substr(0, 1).toUpperCase() + eventType.substr(1);

	    if (_document.createEvent) {
	      evt = _document.createEvent('HTMLEvents');
	      evt.initEvent(eventType, true, true);
	    } else {
	      evt = _document.createEventObject();
	      evt.eventType = eventType;
	    }

	    for (key in options)
	      if (hasKey(options, key)) {
	        evt[key] = options[key];
	      }

	    if (_document.createEvent) {
	      // IE9 if standards
	      _document.dispatchEvent(evt);
	    } else {
	      // IE8 regardless of Quirks or Standards
	      // IE9 if quirks
	      try {
	        _document.fireEvent('on' + evt.eventType.toLowerCase(), evt);
	      } catch (e) {
	        // Do nothing
	      }
	    }
	  },

	  /**
	   * Wraps addEventListener to capture UI breadcrumbs
	   * @param evtName the event name (e.g. "click")
	   * @returns {Function}
	   * @private
	   */
	  _breadcrumbEventHandler: function(evtName) {
	    var self = this;
	    return function(evt) {
	      // reset keypress timeout; e.g. triggering a 'click' after
	      // a 'keypress' will reset the keypress debounce so that a new
	      // set of keypresses can be recorded
	      self._keypressTimeout = null;

	      // It's possible this handler might trigger multiple times for the same
	      // event (e.g. event propagation through node ancestors). Ignore if we've
	      // already captured the event.
	      if (self._lastCapturedEvent === evt) return;

	      self._lastCapturedEvent = evt;

	      // try/catch both:
	      // - accessing evt.target (see getsentry/raven-js#838, #768)
	      // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly
	      //   can throw an exception in some circumstances.
	      var target;
	      try {
	        target = htmlTreeAsString(evt.target);
	      } catch (e) {
	        target = '<unknown>';
	      }

	      self.captureBreadcrumb({
	        category: 'ui.' + evtName, // e.g. ui.click, ui.input
	        message: target
	      });
	    };
	  },

	  /**
	   * Wraps addEventListener to capture keypress UI events
	   * @returns {Function}
	   * @private
	   */
	  _keypressEventHandler: function() {
	    var self = this,
	      debounceDuration = 1000; // milliseconds

	    // TODO: if somehow user switches keypress target before
	    //       debounce timeout is triggered, we will only capture
	    //       a single breadcrumb from the FIRST target (acceptable?)
	    return function(evt) {
	      var target;
	      try {
	        target = evt.target;
	      } catch (e) {
	        // just accessing event properties can throw an exception in some rare circumstances
	        // see: https://github.com/getsentry/raven-js/issues/838
	        return;
	      }
	      var tagName = target && target.tagName;

	      // only consider keypress events on actual input elements
	      // this will disregard keypresses targeting body (e.g. tabbing
	      // through elements, hotkeys, etc)
	      if (
	        !tagName ||
	        (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)
	      )
	        return;

	      // record first keypress in a series, but ignore subsequent
	      // keypresses until debounce clears
	      var timeout = self._keypressTimeout;
	      if (!timeout) {
	        self._breadcrumbEventHandler('input')(evt);
	      }
	      clearTimeout(timeout);
	      self._keypressTimeout = setTimeout(function() {
	        self._keypressTimeout = null;
	      }, debounceDuration);
	    };
	  },

	  /**
	   * Captures a breadcrumb of type "navigation", normalizing input URLs
	   * @param to the originating URL
	   * @param from the target URL
	   * @private
	   */
	  _captureUrlChange: function(from, to) {
	    var parsedLoc = parseUrl(this._location.href);
	    var parsedTo = parseUrl(to);
	    var parsedFrom = parseUrl(from);

	    // because onpopstate only tells you the "new" (to) value of location.href, and
	    // not the previous (from) value, we need to track the value of the current URL
	    // state ourselves
	    this._lastHref = to;

	    // Use only the path component of the URL if the URL matches the current
	    // document (almost all the time when using pushState)
	    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host)
	      to = parsedTo.relative;
	    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host)
	      from = parsedFrom.relative;

	    this.captureBreadcrumb({
	      category: 'navigation',
	      data: {
	        to: to,
	        from: from
	      }
	    });
	  },

	  _patchFunctionToString: function() {
	    var self = this;
	    self._originalFunctionToString = Function.prototype.toString;
	    // eslint-disable-next-line no-extend-native
	    Function.prototype.toString = function() {
	      if (typeof this === 'function' && this.__raven__) {
	        return self._originalFunctionToString.apply(this.__orig__, arguments);
	      }
	      return self._originalFunctionToString.apply(this, arguments);
	    };
	  },

	  _unpatchFunctionToString: function() {
	    if (this._originalFunctionToString) {
	      // eslint-disable-next-line no-extend-native
	      Function.prototype.toString = this._originalFunctionToString;
	    }
	  },

	  /**
	   * Wrap timer functions and event targets to catch errors and provide
	   * better metadata.
	   */
	  _instrumentTryCatch: function() {
	    var self = this;

	    var wrappedBuiltIns = self._wrappedBuiltIns;

	    function wrapTimeFn(orig) {
	      return function(fn, t) {
	        // preserve arity
	        // Make a copy of the arguments to prevent deoptimization
	        // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments
	        var args = new Array(arguments.length);
	        for (var i = 0; i < args.length; ++i) {
	          args[i] = arguments[i];
	        }
	        var originalCallback = args[0];
	        if (isFunction(originalCallback)) {
	          args[0] = self.wrap(
	            {
	              mechanism: {
	                type: 'instrument',
	                data: {function: orig.name || '<anonymous>'}
	              }
	            },
	            originalCallback
	          );
	        }

	        // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it
	        // also supports only two arguments and doesn't care what this is, so we
	        // can just call the original function directly.
	        if (orig.apply) {
	          return orig.apply(this, args);
	        } else {
	          return orig(args[0], args[1]);
	        }
	      };
	    }

	    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;

	    function wrapEventTarget(global) {
	      var proto = _window[global] && _window[global].prototype;
	      if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {
	        fill(
	          proto,
	          'addEventListener',
	          function(orig) {
	            return function(evtName, fn, capture, secure) {
	              // preserve arity
	              try {
	                if (fn && fn.handleEvent) {
	                  fn.handleEvent = self.wrap(
	                    {
	                      mechanism: {
	                        type: 'instrument',
	                        data: {
	                          target: global,
	                          function: 'handleEvent',
	                          handler: (fn && fn.name) || '<anonymous>'
	                        }
	                      }
	                    },
	                    fn.handleEvent
	                  );
	                }
	              } catch (err) {
	                // can sometimes get 'Permission denied to access property "handle Event'
	              }

	              // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`
	              // so that we don't have more than one wrapper function
	              var before, clickHandler, keypressHandler;

	              if (
	                autoBreadcrumbs &&
	                autoBreadcrumbs.dom &&
	                (global === 'EventTarget' || global === 'Node')
	              ) {
	                // NOTE: generating multiple handlers per addEventListener invocation, should
	                //       revisit and verify we can just use one (almost certainly)
	                clickHandler = self._breadcrumbEventHandler('click');
	                keypressHandler = self._keypressEventHandler();
	                before = function(evt) {
	                  // need to intercept every DOM event in `before` argument, in case that
	                  // same wrapped method is re-used for different events (e.g. mousemove THEN click)
	                  // see #724
	                  if (!evt) return;

	                  var eventType;
	                  try {
	                    eventType = evt.type;
	                  } catch (e) {
	                    // just accessing event properties can throw an exception in some rare circumstances
	                    // see: https://github.com/getsentry/raven-js/issues/838
	                    return;
	                  }
	                  if (eventType === 'click') return clickHandler(evt);
	                  else if (eventType === 'keypress') return keypressHandler(evt);
	                };
	              }
	              return orig.call(
	                this,
	                evtName,
	                self.wrap(
	                  {
	                    mechanism: {
	                      type: 'instrument',
	                      data: {
	                        target: global,
	                        function: 'addEventListener',
	                        handler: (fn && fn.name) || '<anonymous>'
	                      }
	                    }
	                  },
	                  fn,
	                  before
	                ),
	                capture,
	                secure
	              );
	            };
	          },
	          wrappedBuiltIns
	        );
	        fill(
	          proto,
	          'removeEventListener',
	          function(orig) {
	            return function(evt, fn, capture, secure) {
	              try {
	                fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__ : fn);
	              } catch (e) {
	                // ignore, accessing __raven_wrapper__ will throw in some Selenium environments
	              }
	              return orig.call(this, evt, fn, capture, secure);
	            };
	          },
	          wrappedBuiltIns
	        );
	      }
	    }

	    fill(_window, 'setTimeout', wrapTimeFn, wrappedBuiltIns);
	    fill(_window, 'setInterval', wrapTimeFn, wrappedBuiltIns);
	    if (_window.requestAnimationFrame) {
	      fill(
	        _window,
	        'requestAnimationFrame',
	        function(orig) {
	          return function(cb) {
	            return orig(
	              self.wrap(
	                {
	                  mechanism: {
	                    type: 'instrument',
	                    data: {
	                      function: 'requestAnimationFrame',
	                      handler: (orig && orig.name) || '<anonymous>'
	                    }
	                  }
	                },
	                cb
	              )
	            );
	          };
	        },
	        wrappedBuiltIns
	      );
	    }

	    // event targets borrowed from bugsnag-js:
	    // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666
	    var eventTargets = [
	      'EventTarget',
	      'Window',
	      'Node',
	      'ApplicationCache',
	      'AudioTrackList',
	      'ChannelMergerNode',
	      'CryptoOperation',
	      'EventSource',
	      'FileReader',
	      'HTMLUnknownElement',
	      'IDBDatabase',
	      'IDBRequest',
	      'IDBTransaction',
	      'KeyOperation',
	      'MediaController',
	      'MessagePort',
	      'ModalWindow',
	      'Notification',
	      'SVGElementInstance',
	      'Screen',
	      'TextTrack',
	      'TextTrackCue',
	      'TextTrackList',
	      'WebSocket',
	      'WebSocketWorker',
	      'Worker',
	      'XMLHttpRequest',
	      'XMLHttpRequestEventTarget',
	      'XMLHttpRequestUpload'
	    ];
	    for (var i = 0; i < eventTargets.length; i++) {
	      wrapEventTarget(eventTargets[i]);
	    }
	  },

	  /**
	   * Instrument browser built-ins w/ breadcrumb capturing
	   *  - XMLHttpRequests
	   *  - DOM interactions (click/typing)
	   *  - window.location changes
	   *  - console
	   *
	   * Can be disabled or individually configured via the `autoBreadcrumbs` config option
	   */
	  _instrumentBreadcrumbs: function() {
	    var self = this;
	    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;

	    var wrappedBuiltIns = self._wrappedBuiltIns;

	    function wrapProp(prop, xhr) {
	      if (prop in xhr && isFunction(xhr[prop])) {
	        fill(xhr, prop, function(orig) {
	          return self.wrap(
	            {
	              mechanism: {
	                type: 'instrument',
	                data: {function: prop, handler: (orig && orig.name) || '<anonymous>'}
	              }
	            },
	            orig
	          );
	        }); // intentionally don't track filled methods on XHR instances
	      }
	    }

	    if (autoBreadcrumbs.xhr && 'XMLHttpRequest' in _window) {
	      var xhrproto = _window.XMLHttpRequest && _window.XMLHttpRequest.prototype;
	      fill(
	        xhrproto,
	        'open',
	        function(origOpen) {
	          return function(method, url) {
	            // preserve arity

	            // if Sentry key appears in URL, don't capture
	            if (isString(url) && url.indexOf(self._globalKey) === -1) {
	              this.__raven_xhr = {
	                method: method,
	                url: url,
	                status_code: null
	              };
	            }

	            return origOpen.apply(this, arguments);
	          };
	        },
	        wrappedBuiltIns
	      );

	      fill(
	        xhrproto,
	        'send',
	        function(origSend) {
	          return function() {
	            // preserve arity
	            var xhr = this;

	            function onreadystatechangeHandler() {
	              if (xhr.__raven_xhr && xhr.readyState === 4) {
	                try {
	                  // touching statusCode in some platforms throws
	                  // an exception
	                  xhr.__raven_xhr.status_code = xhr.status;
	                } catch (e) {
	                  /* do nothing */
	                }

	                self.captureBreadcrumb({
	                  type: 'http',
	                  category: 'xhr',
	                  data: xhr.__raven_xhr
	                });
	              }
	            }

	            var props = ['onload', 'onerror', 'onprogress'];
	            for (var j = 0; j < props.length; j++) {
	              wrapProp(props[j], xhr);
	            }

	            if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {
	              fill(
	                xhr,
	                'onreadystatechange',
	                function(orig) {
	                  return self.wrap(
	                    {
	                      mechanism: {
	                        type: 'instrument',
	                        data: {
	                          function: 'onreadystatechange',
	                          handler: (orig && orig.name) || '<anonymous>'
	                        }
	                      }
	                    },
	                    orig,
	                    onreadystatechangeHandler
	                  );
	                } /* intentionally don't track this instrumentation */
	              );
	            } else {
	              // if onreadystatechange wasn't actually set by the page on this xhr, we
	              // are free to set our own and capture the breadcrumb
	              xhr.onreadystatechange = onreadystatechangeHandler;
	            }

	            return origSend.apply(this, arguments);
	          };
	        },
	        wrappedBuiltIns
	      );
	    }

	    if (autoBreadcrumbs.xhr && supportsFetch()) {
	      fill(
	        _window,
	        'fetch',
	        function(origFetch) {
	          return function() {
	            // preserve arity
	            // Make a copy of the arguments to prevent deoptimization
	            // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments
	            var args = new Array(arguments.length);
	            for (var i = 0; i < args.length; ++i) {
	              args[i] = arguments[i];
	            }

	            var fetchInput = args[0];
	            var method = 'GET';
	            var url;

	            if (typeof fetchInput === 'string') {
	              url = fetchInput;
	            } else if ('Request' in _window && fetchInput instanceof _window.Request) {
	              url = fetchInput.url;
	              if (fetchInput.method) {
	                method = fetchInput.method;
	              }
	            } else {
	              url = '' + fetchInput;
	            }

	            // if Sentry key appears in URL, don't capture, as it's our own request
	            if (url.indexOf(self._globalKey) !== -1) {
	              return origFetch.apply(this, args);
	            }

	            if (args[1] && args[1].method) {
	              method = args[1].method;
	            }

	            var fetchData = {
	              method: method,
	              url: url,
	              status_code: null
	            };

	            return origFetch
	              .apply(this, args)
	              .then(function(response) {
	                fetchData.status_code = response.status;

	                self.captureBreadcrumb({
	                  type: 'http',
	                  category: 'fetch',
	                  data: fetchData
	                });

	                return response;
	              })
	              ['catch'](function(err) {
	                // if there is an error performing the request
	                self.captureBreadcrumb({
	                  type: 'http',
	                  category: 'fetch',
	                  data: fetchData,
	                  level: 'error'
	                });

	                throw err;
	              });
	          };
	        },
	        wrappedBuiltIns
	      );
	    }

	    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way
	    // to the document. Do this before we instrument addEventListener.
	    if (autoBreadcrumbs.dom && this._hasDocument) {
	      if (_document.addEventListener) {
	        _document.addEventListener('click', self._breadcrumbEventHandler('click'), false);
	        _document.addEventListener('keypress', self._keypressEventHandler(), false);
	      } else if (_document.attachEvent) {
	        // IE8 Compatibility
	        _document.attachEvent('onclick', self._breadcrumbEventHandler('click'));
	        _document.attachEvent('onkeypress', self._keypressEventHandler());
	      }
	    }

	    // record navigation (URL) changes
	    // NOTE: in Chrome App environment, touching history.pushState, *even inside
	    //       a try/catch block*, will cause Chrome to output an error to console.error
	    // borrowed from: https://github.com/angular/angular.js/pull/13945/files
	    var chrome = _window.chrome;
	    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;
	    var hasPushAndReplaceState =
	      !isChromePackagedApp &&
	      _window.history &&
	      _window.history.pushState &&
	      _window.history.replaceState;
	    if (autoBreadcrumbs.location && hasPushAndReplaceState) {
	      // TODO: remove onpopstate handler on uninstall()
	      var oldOnPopState = _window.onpopstate;
	      _window.onpopstate = function() {
	        var currentHref = self._location.href;
	        self._captureUrlChange(self._lastHref, currentHref);

	        if (oldOnPopState) {
	          return oldOnPopState.apply(this, arguments);
	        }
	      };

	      var historyReplacementFunction = function(origHistFunction) {
	        // note history.pushState.length is 0; intentionally not declaring
	        // params to preserve 0 arity
	        return function(/* state, title, url */) {
	          var url = arguments.length > 2 ? arguments[2] : undefined;

	          // url argument is optional
	          if (url) {
	            // coerce to string (this is what pushState does)
	            self._captureUrlChange(self._lastHref, url + '');
	          }

	          return origHistFunction.apply(this, arguments);
	        };
	      };

	      fill(_window.history, 'pushState', historyReplacementFunction, wrappedBuiltIns);
	      fill(_window.history, 'replaceState', historyReplacementFunction, wrappedBuiltIns);
	    }

	    if (autoBreadcrumbs.console && 'console' in _window && console.log) {
	      // console
	      var consoleMethodCallback = function(msg, data) {
	        self.captureBreadcrumb({
	          message: msg,
	          level: data.level,
	          category: 'console'
	        });
	      };

	      each(['debug', 'info', 'warn', 'error', 'log'], function(_, level) {
	        wrapConsoleMethod(console, level, consoleMethodCallback);
	      });
	    }
	  },

	  _restoreBuiltIns: function() {
	    // restore any wrapped builtins
	    var builtin;
	    while (this._wrappedBuiltIns.length) {
	      builtin = this._wrappedBuiltIns.shift();

	      var obj = builtin[0],
	        name = builtin[1],
	        orig = builtin[2];

	      obj[name] = orig;
	    }
	  },

	  _restoreConsole: function() {
	    // eslint-disable-next-line guard-for-in
	    for (var method in this._originalConsoleMethods) {
	      this._originalConsole[method] = this._originalConsoleMethods[method];
	    }
	  },

	  _drainPlugins: function() {
	    var self = this;

	    // FIX ME TODO
	    each(this._plugins, function(_, plugin) {
	      var installer = plugin[0];
	      var args = plugin[1];
	      installer.apply(self, [self].concat(args));
	    });
	  },

	  _parseDSN: function(str) {
	    var m = dsnPattern.exec(str),
	      dsn = {},
	      i = 7;

	    try {
	      while (i--) dsn[dsnKeys[i]] = m[i] || '';
	    } catch (e) {
	      throw new RavenConfigError('Invalid DSN: ' + str);
	    }

	    if (dsn.pass && !this._globalOptions.allowSecretKey) {
	      throw new RavenConfigError(
	        'Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key'
	      );
	    }

	    return dsn;
	  },

	  _getGlobalServer: function(uri) {
	    // assemble the endpoint from the uri pieces
	    var globalServer = '//' + uri.host + (uri.port ? ':' + uri.port : '');

	    if (uri.protocol) {
	      globalServer = uri.protocol + ':' + globalServer;
	    }
	    return globalServer;
	  },

	  _handleOnErrorStackInfo: function(stackInfo, options) {
	    options = options || {};
	    options.mechanism = options.mechanism || {
	      type: 'onerror',
	      handled: false
	    };

	    // if we are intentionally ignoring errors via onerror, bail out
	    if (!this._ignoreOnError) {
	      this._handleStackInfo(stackInfo, options);
	    }
	  },

	  _handleStackInfo: function(stackInfo, options) {
	    var frames = this._prepareFrames(stackInfo, options);

	    this._triggerEvent('handle', {
	      stackInfo: stackInfo,
	      options: options
	    });

	    this._processException(
	      stackInfo.name,
	      stackInfo.message,
	      stackInfo.url,
	      stackInfo.lineno,
	      frames,
	      options
	    );
	  },

	  _prepareFrames: function(stackInfo, options) {
	    var self = this;
	    var frames = [];
	    if (stackInfo.stack && stackInfo.stack.length) {
	      each(stackInfo.stack, function(i, stack) {
	        var frame = self._normalizeFrame(stack, stackInfo.url);
	        if (frame) {
	          frames.push(frame);
	        }
	      });

	      // e.g. frames captured via captureMessage throw
	      if (options && options.trimHeadFrames) {
	        for (var j = 0; j < options.trimHeadFrames && j < frames.length; j++) {
	          frames[j].in_app = false;
	        }
	      }
	    }
	    frames = frames.slice(0, this._globalOptions.stackTraceLimit);
	    return frames;
	  },

	  _normalizeFrame: function(frame, stackInfoUrl) {
	    // normalize the frames data
	    var normalized = {
	      filename: frame.url,
	      lineno: frame.line,
	      colno: frame.column,
	      function: frame.func || '?'
	    };

	    // Case when we don't have any information about the error
	    // E.g. throwing a string or raw object, instead of an `Error` in Firefox
	    // Generating synthetic error doesn't add any value here
	    //
	    // We should probably somehow let a user know that they should fix their code
	    if (!frame.url) {
	      normalized.filename = stackInfoUrl; // fallback to whole stacks url from onerror handler
	    }

	    normalized.in_app = !// determine if an exception came from outside of our app
	    // first we check the global includePaths list.
	    (
	      (!!this._globalOptions.includePaths.test &&
	        !this._globalOptions.includePaths.test(normalized.filename)) ||
	      // Now we check for fun, if the function name is Raven or TraceKit
	      /(Raven|TraceKit)\./.test(normalized['function']) ||
	      // finally, we do a last ditch effort and check for raven.min.js
	      /raven\.(min\.)?js$/.test(normalized.filename)
	    );

	    return normalized;
	  },

	  _processException: function(type, message, fileurl, lineno, frames, options) {
	    var prefixedMessage = (type ? type + ': ' : '') + (message || '');
	    if (
	      !!this._globalOptions.ignoreErrors.test &&
	      (this._globalOptions.ignoreErrors.test(message) ||
	        this._globalOptions.ignoreErrors.test(prefixedMessage))
	    ) {
	      return;
	    }

	    var stacktrace;

	    if (frames && frames.length) {
	      fileurl = frames[0].filename || fileurl;
	      // Sentry expects frames oldest to newest
	      // and JS sends them as newest to oldest
	      frames.reverse();
	      stacktrace = {frames: frames};
	    } else if (fileurl) {
	      stacktrace = {
	        frames: [
	          {
	            filename: fileurl,
	            lineno: lineno,
	            in_app: true
	          }
	        ]
	      };
	    }

	    if (
	      !!this._globalOptions.ignoreUrls.test &&
	      this._globalOptions.ignoreUrls.test(fileurl)
	    ) {
	      return;
	    }

	    if (
	      !!this._globalOptions.whitelistUrls.test &&
	      !this._globalOptions.whitelistUrls.test(fileurl)
	    ) {
	      return;
	    }

	    var data = objectMerge(
	      {
	        // sentry.interfaces.Exception
	        exception: {
	          values: [
	            {
	              type: type,
	              value: message,
	              stacktrace: stacktrace
	            }
	          ]
	        },
	        transaction: fileurl
	      },
	      options
	    );

	    var ex = data.exception.values[0];
	    if (ex.type == null && ex.value === '') {
	      ex.value = 'Unrecoverable error caught';
	    }

	    // Move mechanism from options to exception interface
	    // We do this, as requiring user to pass `{exception:{mechanism:{ ... }}}` would be
	    // too much
	    if (!data.exception.mechanism && data.mechanism) {
	      data.exception.mechanism = data.mechanism;
	      delete data.mechanism;
	    }

	    data.exception.mechanism = objectMerge(
	      {
	        type: 'generic',
	        handled: true
	      },
	      data.exception.mechanism || {}
	    );

	    // Fire away!
	    this._send(data);
	  },

	  _trimPacket: function(data) {
	    // For now, we only want to truncate the two different messages
	    // but this could/should be expanded to just trim everything
	    var max = this._globalOptions.maxMessageLength;
	    if (data.message) {
	      data.message = truncate(data.message, max);
	    }
	    if (data.exception) {
	      var exception = data.exception.values[0];
	      exception.value = truncate(exception.value, max);
	    }

	    var request = data.request;
	    if (request) {
	      if (request.url) {
	        request.url = truncate(request.url, this._globalOptions.maxUrlLength);
	      }
	      if (request.Referer) {
	        request.Referer = truncate(request.Referer, this._globalOptions.maxUrlLength);
	      }
	    }

	    if (data.breadcrumbs && data.breadcrumbs.values)
	      this._trimBreadcrumbs(data.breadcrumbs);

	    return data;
	  },

	  /**
	   * Truncate breadcrumb values (right now just URLs)
	   */
	  _trimBreadcrumbs: function(breadcrumbs) {
	    // known breadcrumb properties with urls
	    // TODO: also consider arbitrary prop values that start with (https?)?://
	    var urlProps = ['to', 'from', 'url'],
	      urlProp,
	      crumb,
	      data;

	    for (var i = 0; i < breadcrumbs.values.length; ++i) {
	      crumb = breadcrumbs.values[i];
	      if (
	        !crumb.hasOwnProperty('data') ||
	        !isObject(crumb.data) ||
	        objectFrozen(crumb.data)
	      )
	        continue;

	      data = objectMerge({}, crumb.data);
	      for (var j = 0; j < urlProps.length; ++j) {
	        urlProp = urlProps[j];
	        if (data.hasOwnProperty(urlProp) && data[urlProp]) {
	          data[urlProp] = truncate(data[urlProp], this._globalOptions.maxUrlLength);
	        }
	      }
	      breadcrumbs.values[i].data = data;
	    }
	  },

	  _getHttpData: function() {
	    if (!this._hasNavigator && !this._hasDocument) return;
	    var httpData = {};

	    if (this._hasNavigator && _navigator.userAgent) {
	      httpData.headers = {
	        'User-Agent': _navigator.userAgent
	      };
	    }

	    // Check in `window` instead of `document`, as we may be in ServiceWorker environment
	    if (_window.location && _window.location.href) {
	      httpData.url = _window.location.href;
	    }

	    if (this._hasDocument && _document.referrer) {
	      if (!httpData.headers) httpData.headers = {};
	      httpData.headers.Referer = _document.referrer;
	    }

	    return httpData;
	  },

	  _resetBackoff: function() {
	    this._backoffDuration = 0;
	    this._backoffStart = null;
	  },

	  _shouldBackoff: function() {
	    return this._backoffDuration && now() - this._backoffStart < this._backoffDuration;
	  },

	  /**
	   * Returns true if the in-process data payload matches the signature
	   * of the previously-sent data
	   *
	   * NOTE: This has to be done at this level because TraceKit can generate
	   *       data from window.onerror WITHOUT an exception object (IE8, IE9,
	   *       other old browsers). This can take the form of an "exception"
	   *       data object with a single frame (derived from the onerror args).
	   */
	  _isRepeatData: function(current) {
	    var last = this._lastData;

	    if (
	      !last ||
	      current.message !== last.message || // defined for captureMessage
	      current.transaction !== last.transaction // defined for captureException/onerror
	    )
	      return false;

	    // Stacktrace interface (i.e. from captureMessage)
	    if (current.stacktrace || last.stacktrace) {
	      return isSameStacktrace(current.stacktrace, last.stacktrace);
	    } else if (current.exception || last.exception) {
	      // Exception interface (i.e. from captureException/onerror)
	      return isSameException(current.exception, last.exception);
	    }

	    return true;
	  },

	  _setBackoffState: function(request) {
	    // If we are already in a backoff state, don't change anything
	    if (this._shouldBackoff()) {
	      return;
	    }

	    var status = request.status;

	    // 400 - project_id doesn't exist or some other fatal
	    // 401 - invalid/revoked dsn
	    // 429 - too many requests
	    if (!(status === 400 || status === 401 || status === 429)) return;

	    var retry;
	    try {
	      // If Retry-After is not in Access-Control-Expose-Headers, most
	      // browsers will throw an exception trying to access it
	      if (supportsFetch()) {
	        retry = request.headers.get('Retry-After');
	      } else {
	        retry = request.getResponseHeader('Retry-After');
	      }

	      // Retry-After is returned in seconds
	      retry = parseInt(retry, 10) * 1000;
	    } catch (e) {
	      /* eslint no-empty:0 */
	    }

	    this._backoffDuration = retry
	      ? // If Sentry server returned a Retry-After value, use it
	        retry
	      : // Otherwise, double the last backoff duration (starts at 1 sec)
	        this._backoffDuration * 2 || 1000;

	    this._backoffStart = now();
	  },

	  _send: function(data) {
	    var globalOptions = this._globalOptions;

	    var baseData = {
	        project: this._globalProject,
	        logger: globalOptions.logger,
	        platform: 'javascript'
	      },
	      httpData = this._getHttpData();

	    if (httpData) {
	      baseData.request = httpData;
	    }

	    // HACK: delete `trimHeadFrames` to prevent from appearing in outbound payload
	    if (data.trimHeadFrames) delete data.trimHeadFrames;

	    data = objectMerge(baseData, data);

	    // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge
	    data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);
	    data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra);

	    // Send along our own collected metadata with extra
	    data.extra['session:duration'] = now() - this._startTime;

	    if (this._breadcrumbs && this._breadcrumbs.length > 0) {
	      // intentionally make shallow copy so that additions
	      // to breadcrumbs aren't accidentally sent in this request
	      data.breadcrumbs = {
	        values: [].slice.call(this._breadcrumbs, 0)
	      };
	    }

	    if (this._globalContext.user) {
	      // sentry.interfaces.User
	      data.user = this._globalContext.user;
	    }

	    // Include the environment if it's defined in globalOptions
	    if (globalOptions.environment) data.environment = globalOptions.environment;

	    // Include the release if it's defined in globalOptions
	    if (globalOptions.release) data.release = globalOptions.release;

	    // Include server_name if it's defined in globalOptions
	    if (globalOptions.serverName) data.server_name = globalOptions.serverName;

	    data = this._sanitizeData(data);

	    // Cleanup empty properties before sending them to the server
	    Object.keys(data).forEach(function(key) {
	      if (data[key] == null || data[key] === '' || isEmptyObject(data[key])) {
	        delete data[key];
	      }
	    });

	    if (isFunction(globalOptions.dataCallback)) {
	      data = globalOptions.dataCallback(data) || data;
	    }

	    // Why??????????
	    if (!data || isEmptyObject(data)) {
	      return;
	    }

	    // Check if the request should be filtered or not
	    if (
	      isFunction(globalOptions.shouldSendCallback) &&
	      !globalOptions.shouldSendCallback(data)
	    ) {
	      return;
	    }

	    // Backoff state: Sentry server previously responded w/ an error (e.g. 429 - too many requests),
	    // so drop requests until "cool-off" period has elapsed.
	    if (this._shouldBackoff()) {
	      this._logDebug('warn', 'Raven dropped error due to backoff: ', data);
	      return;
	    }

	    if (typeof globalOptions.sampleRate === 'number') {
	      if (Math.random() < globalOptions.sampleRate) {
	        this._sendProcessedPayload(data);
	      }
	    } else {
	      this._sendProcessedPayload(data);
	    }
	  },

	  _sanitizeData: function(data) {
	    return sanitize(data, this._globalOptions.sanitizeKeys);
	  },

	  _getUuid: function() {
	    return uuid4();
	  },

	  _sendProcessedPayload: function(data, callback) {
	    var self = this;
	    var globalOptions = this._globalOptions;

	    if (!this.isSetup()) return;

	    // Try and clean up the packet before sending by truncating long values
	    data = this._trimPacket(data);

	    // ideally duplicate error testing should occur *before* dataCallback/shouldSendCallback,
	    // but this would require copying an un-truncated copy of the data packet, which can be
	    // arbitrarily deep (extra_data) -- could be worthwhile? will revisit
	    if (!this._globalOptions.allowDuplicates && this._isRepeatData(data)) {
	      this._logDebug('warn', 'Raven dropped repeat event: ', data);
	      return;
	    }

	    // Send along an event_id if not explicitly passed.
	    // This event_id can be used to reference the error within Sentry itself.
	    // Set lastEventId after we know the error should actually be sent
	    this._lastEventId = data.event_id || (data.event_id = this._getUuid());

	    // Store outbound payload after trim
	    this._lastData = data;

	    this._logDebug('debug', 'Raven about to send:', data);

	    var auth = {
	      sentry_version: '7',
	      sentry_client: 'raven-js/' + this.VERSION,
	      sentry_key: this._globalKey
	    };

	    if (this._globalSecret) {
	      auth.sentry_secret = this._globalSecret;
	    }

	    var exception = data.exception && data.exception.values[0];

	    // only capture 'sentry' breadcrumb is autoBreadcrumbs is truthy
	    if (
	      this._globalOptions.autoBreadcrumbs &&
	      this._globalOptions.autoBreadcrumbs.sentry
	    ) {
	      this.captureBreadcrumb({
	        category: 'sentry',
	        message: exception
	          ? (exception.type ? exception.type + ': ' : '') + exception.value
	          : data.message,
	        event_id: data.event_id,
	        level: data.level || 'error' // presume error unless specified
	      });
	    }

	    var url = this._globalEndpoint;
	    (globalOptions.transport || this._makeRequest).call(this, {
	      url: url,
	      auth: auth,
	      data: data,
	      options: globalOptions,
	      onSuccess: function success() {
	        self._resetBackoff();

	        self._triggerEvent('success', {
	          data: data,
	          src: url
	        });
	        callback && callback();
	      },
	      onError: function failure(error) {
	        self._logDebug('error', 'Raven transport failed to send: ', error);

	        if (error.request) {
	          self._setBackoffState(error.request);
	        }

	        self._triggerEvent('failure', {
	          data: data,
	          src: url
	        });
	        error = error || new Error('Raven send failed (no additional details provided)');
	        callback && callback(error);
	      }
	    });
	  },

	  _makeRequest: function(opts) {
	    // Auth is intentionally sent as part of query string (NOT as custom HTTP header) to avoid preflight CORS requests
	    var url = opts.url + '?' + urlencode(opts.auth);

	    var evaluatedHeaders = null;
	    var evaluatedFetchParameters = {};

	    if (opts.options.headers) {
	      evaluatedHeaders = this._evaluateHash(opts.options.headers);
	    }

	    if (opts.options.fetchParameters) {
	      evaluatedFetchParameters = this._evaluateHash(opts.options.fetchParameters);
	    }

	    if (supportsFetch()) {
	      evaluatedFetchParameters.body = stringify(opts.data);

	      var defaultFetchOptions = objectMerge({}, this._fetchDefaults);
	      var fetchOptions = objectMerge(defaultFetchOptions, evaluatedFetchParameters);

	      if (evaluatedHeaders) {
	        fetchOptions.headers = evaluatedHeaders;
	      }

	      return _window
	        .fetch(url, fetchOptions)
	        .then(function(response) {
	          if (response.ok) {
	            opts.onSuccess && opts.onSuccess();
	          } else {
	            var error = new Error('Sentry error code: ' + response.status);
	            // It's called request only to keep compatibility with XHR interface
	            // and not add more redundant checks in setBackoffState method
	            error.request = response;
	            opts.onError && opts.onError(error);
	          }
	        })
	        ['catch'](function() {
	          opts.onError &&
	            opts.onError(new Error('Sentry error code: network unavailable'));
	        });
	    }

	    var request = _window.XMLHttpRequest && new _window.XMLHttpRequest();
	    if (!request) return;

	    // if browser doesn't support CORS (e.g. IE7), we are out of luck
	    var hasCORS = 'withCredentials' in request || typeof XDomainRequest !== 'undefined';

	    if (!hasCORS) return;

	    if ('withCredentials' in request) {
	      request.onreadystatechange = function() {
	        if (request.readyState !== 4) {
	          return;
	        } else if (request.status === 200) {
	          opts.onSuccess && opts.onSuccess();
	        } else if (opts.onError) {
	          var err = new Error('Sentry error code: ' + request.status);
	          err.request = request;
	          opts.onError(err);
	        }
	      };
	    } else {
	      request = new XDomainRequest();
	      // xdomainrequest cannot go http -> https (or vice versa),
	      // so always use protocol relative
	      url = url.replace(/^https?:/, '');

	      // onreadystatechange not supported by XDomainRequest
	      if (opts.onSuccess) {
	        request.onload = opts.onSuccess;
	      }
	      if (opts.onError) {
	        request.onerror = function() {
	          var err = new Error('Sentry error code: XDomainRequest');
	          err.request = request;
	          opts.onError(err);
	        };
	      }
	    }

	    request.open('POST', url);

	    if (evaluatedHeaders) {
	      each(evaluatedHeaders, function(key, value) {
	        request.setRequestHeader(key, value);
	      });
	    }

	    request.send(stringify(opts.data));
	  },

	  _evaluateHash: function(hash) {
	    var evaluated = {};

	    for (var key in hash) {
	      if (hash.hasOwnProperty(key)) {
	        var value = hash[key];
	        evaluated[key] = typeof value === 'function' ? value() : value;
	      }
	    }

	    return evaluated;
	  },

	  _logDebug: function(level) {
	    // We allow `Raven.debug` and `Raven.config(DSN, { debug: true })` to not make backward incompatible API change
	    if (
	      this._originalConsoleMethods[level] &&
	      (this.debug || this._globalOptions.debug)
	    ) {
	      // In IE<10 console methods do not have their own 'apply' method
	      Function.prototype.apply.call(
	        this._originalConsoleMethods[level],
	        this._originalConsole,
	        [].slice.call(arguments, 1)
	      );
	    }
	  },

	  _mergeContext: function(key, context) {
	    if (isUndefined(context)) {
	      delete this._globalContext[key];
	    } else {
	      this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);
	    }
	  }
	};

	// Deprecations
	Raven.prototype.setUser = Raven.prototype.setUserContext;
	Raven.prototype.setReleaseContext = Raven.prototype.setRelease;

	module.exports = Raven;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var utils = __webpack_require__(30);

	/*
	 TraceKit - Cross brower stack traces

	 This was originally forked from github.com/occ/TraceKit, but has since been
	 largely re-written and is now maintained as part of raven-js.  Tests for
	 this are in test/vendor.

	 MIT license
	*/

	var TraceKit = {
	  collectWindowErrors: true,
	  debug: false
	};

	// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)
	var _window =
	  typeof window !== 'undefined'
	    ? window
	    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

	// global reference to slice
	var _slice = [].slice;
	var UNKNOWN_FUNCTION = '?';

	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types
	var ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;

	function getLocationHref() {
	  if (typeof document === 'undefined' || document.location == null) return '';
	  return document.location.href;
	}

	function getLocationOrigin() {
	  if (typeof document === 'undefined' || document.location == null) return '';

	  // Oh dear IE10...
	  if (!document.location.origin) {
	    return (
	      document.location.protocol +
	      '//' +
	      document.location.hostname +
	      (document.location.port ? ':' + document.location.port : '')
	    );
	  }

	  return document.location.origin;
	}

	/**
	 * TraceKit.report: cross-browser processing of unhandled exceptions
	 *
	 * Syntax:
	 *   TraceKit.report.subscribe(function(stackInfo) { ... })
	 *   TraceKit.report.unsubscribe(function(stackInfo) { ... })
	 *   TraceKit.report(exception)
	 *   try { ...code... } catch(ex) { TraceKit.report(ex); }
	 *
	 * Supports:
	 *   - Firefox: full stack trace with line numbers, plus column number
	 *              on top frame; column number is not guaranteed
	 *   - Opera:   full stack trace with line and column numbers
	 *   - Chrome:  full stack trace with line and column numbers
	 *   - Safari:  line and column number for the top frame only; some frames
	 *              may be missing, and column number is not guaranteed
	 *   - IE:      line and column number for the top frame only; some frames
	 *              may be missing, and column number is not guaranteed
	 *
	 * In theory, TraceKit should work on all of the following versions:
	 *   - IE5.5+ (only 8.0 tested)
	 *   - Firefox 0.9+ (only 3.5+ tested)
	 *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require
	 *     Exceptions Have Stacktrace to be enabled in opera:config)
	 *   - Safari 3+ (only 4+ tested)
	 *   - Chrome 1+ (only 5+ tested)
	 *   - Konqueror 3.5+ (untested)
	 *
	 * Requires TraceKit.computeStackTrace.
	 *
	 * Tries to catch all unhandled exceptions and report them to the
	 * subscribed handlers. Please note that TraceKit.report will rethrow the
	 * exception. This is REQUIRED in order to get a useful stack trace in IE.
	 * If the exception does not reach the top of the browser, you will only
	 * get a stack trace from the point where TraceKit.report was called.
	 *
	 * Handlers receive a stackInfo object as described in the
	 * TraceKit.computeStackTrace docs.
	 */
	TraceKit.report = (function reportModuleWrapper() {
	  var handlers = [],
	    lastArgs = null,
	    lastException = null,
	    lastExceptionStack = null;

	  /**
	   * Add a crash handler.
	   * @param {Function} handler
	   */
	  function subscribe(handler) {
	    installGlobalHandler();
	    handlers.push(handler);
	  }

	  /**
	   * Remove a crash handler.
	   * @param {Function} handler
	   */
	  function unsubscribe(handler) {
	    for (var i = handlers.length - 1; i >= 0; --i) {
	      if (handlers[i] === handler) {
	        handlers.splice(i, 1);
	      }
	    }
	  }

	  /**
	   * Remove all crash handlers.
	   */
	  function unsubscribeAll() {
	    uninstallGlobalHandler();
	    handlers = [];
	  }

	  /**
	   * Dispatch stack information to all handlers.
	   * @param {Object.<string, *>} stack
	   */
	  function notifyHandlers(stack, isWindowError) {
	    var exception = null;
	    if (isWindowError && !TraceKit.collectWindowErrors) {
	      return;
	    }
	    for (var i in handlers) {
	      if (handlers.hasOwnProperty(i)) {
	        try {
	          handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));
	        } catch (inner) {
	          exception = inner;
	        }
	      }
	    }

	    if (exception) {
	      throw exception;
	    }
	  }

	  var _oldOnerrorHandler, _onErrorHandlerInstalled;

	  /**
	   * Ensures all global unhandled exceptions are recorded.
	   * Supported by Gecko and IE.
	   * @param {string} msg Error message.
	   * @param {string} url URL of script that generated the exception.
	   * @param {(number|string)} lineNo The line number at which the error
	   * occurred.
	   * @param {?(number|string)} colNo The column number at which the error
	   * occurred.
	   * @param {?Error} ex The actual Error object.
	   */
	  function traceKitWindowOnError(msg, url, lineNo, colNo, ex) {
	    var stack = null;
	    // If 'ex' is ErrorEvent, get real Error from inside
	    var exception = utils.isErrorEvent(ex) ? ex.error : ex;
	    // If 'msg' is ErrorEvent, get real message from inside
	    var message = utils.isErrorEvent(msg) ? msg.message : msg;

	    if (lastExceptionStack) {
	      TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(
	        lastExceptionStack,
	        url,
	        lineNo,
	        message
	      );
	      processLastException();
	    } else if (exception && utils.isError(exception)) {
	      // non-string `exception` arg; attempt to extract stack trace

	      // New chrome and blink send along a real error object
	      // Let's just report that like a normal error.
	      // See: https://mikewest.org/2013/08/debugging-runtime-errors-with-window-onerror
	      stack = TraceKit.computeStackTrace(exception);
	      notifyHandlers(stack, true);
	    } else {
	      var location = {
	        url: url,
	        line: lineNo,
	        column: colNo
	      };

	      var name = undefined;
	      var groups;

	      if ({}.toString.call(message) === '[object String]') {
	        var groups = message.match(ERROR_TYPES_RE);
	        if (groups) {
	          name = groups[1];
	          message = groups[2];
	        }
	      }

	      location.func = UNKNOWN_FUNCTION;

	      stack = {
	        name: name,
	        message: message,
	        url: getLocationHref(),
	        stack: [location]
	      };
	      notifyHandlers(stack, true);
	    }

	    if (_oldOnerrorHandler) {
	      return _oldOnerrorHandler.apply(this, arguments);
	    }

	    return false;
	  }

	  function installGlobalHandler() {
	    if (_onErrorHandlerInstalled) {
	      return;
	    }
	    _oldOnerrorHandler = _window.onerror;
	    _window.onerror = traceKitWindowOnError;
	    _onErrorHandlerInstalled = true;
	  }

	  function uninstallGlobalHandler() {
	    if (!_onErrorHandlerInstalled) {
	      return;
	    }
	    _window.onerror = _oldOnerrorHandler;
	    _onErrorHandlerInstalled = false;
	    _oldOnerrorHandler = undefined;
	  }

	  function processLastException() {
	    var _lastExceptionStack = lastExceptionStack,
	      _lastArgs = lastArgs;
	    lastArgs = null;
	    lastExceptionStack = null;
	    lastException = null;
	    notifyHandlers.apply(null, [_lastExceptionStack, false].concat(_lastArgs));
	  }

	  /**
	   * Reports an unhandled Error to TraceKit.
	   * @param {Error} ex
	   * @param {?boolean} rethrow If false, do not re-throw the exception.
	   * Only used for window.onerror to not cause an infinite loop of
	   * rethrowing.
	   */
	  function report(ex, rethrow) {
	    var args = _slice.call(arguments, 1);
	    if (lastExceptionStack) {
	      if (lastException === ex) {
	        return; // already caught by an inner catch block, ignore
	      } else {
	        processLastException();
	      }
	    }

	    var stack = TraceKit.computeStackTrace(ex);
	    lastExceptionStack = stack;
	    lastException = ex;
	    lastArgs = args;

	    // If the stack trace is incomplete, wait for 2 seconds for
	    // slow slow IE to see if onerror occurs or not before reporting
	    // this exception; otherwise, we will end up with an incomplete
	    // stack trace
	    setTimeout(function() {
	      if (lastException === ex) {
	        processLastException();
	      }
	    }, stack.incomplete ? 2000 : 0);

	    if (rethrow !== false) {
	      throw ex; // re-throw to propagate to the top level (and cause window.onerror)
	    }
	  }

	  report.subscribe = subscribe;
	  report.unsubscribe = unsubscribe;
	  report.uninstall = unsubscribeAll;
	  return report;
	})();

	/**
	 * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript
	 *
	 * Syntax:
	 *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)
	 * Returns:
	 *   s.name              - exception name
	 *   s.message           - exception message
	 *   s.stack[i].url      - JavaScript or HTML file URL
	 *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)
	 *   s.stack[i].args     - arguments passed to the function, if known
	 *   s.stack[i].line     - line number, if known
	 *   s.stack[i].column   - column number, if known
	 *
	 * Supports:
	 *   - Firefox:  full stack trace with line numbers and unreliable column
	 *               number on top frame
	 *   - Opera 10: full stack trace with line and column numbers
	 *   - Opera 9-: full stack trace with line numbers
	 *   - Chrome:   full stack trace with line and column numbers
	 *   - Safari:   line and column number for the topmost stacktrace element
	 *               only
	 *   - IE:       no line numbers whatsoever
	 *
	 * Tries to guess names of anonymous functions by looking for assignments
	 * in the source code. In IE and Safari, we have to guess source file names
	 * by searching for function bodies inside all page scripts. This will not
	 * work for scripts that are loaded cross-domain.
	 * Here be dragons: some function names may be guessed incorrectly, and
	 * duplicate functions may be mismatched.
	 *
	 * TraceKit.computeStackTrace should only be used for tracing purposes.
	 * Logging of unhandled exceptions should be done with TraceKit.report,
	 * which builds on top of TraceKit.computeStackTrace and provides better
	 * IE support by utilizing the window.onerror event to retrieve information
	 * about the top of the stack.
	 *
	 * Note: In IE and Safari, no stack trace is recorded on the Error object,
	 * so computeStackTrace instead walks its *own* chain of callers.
	 * This means that:
	 *  * in Safari, some methods may be missing from the stack trace;
	 *  * in IE, the topmost function in the stack trace will always be the
	 *    caller of computeStackTrace.
	 *
	 * This is okay for tracing (because you are likely to be calling
	 * computeStackTrace from the function you want to be the topmost element
	 * of the stack trace anyway), but not okay for logging unhandled
	 * exceptions (because your catch block will likely be far away from the
	 * inner function that actually caused the exception).
	 *
	 */
	TraceKit.computeStackTrace = (function computeStackTraceWrapper() {
	  // Contents of Exception in various browsers.
	  //
	  // SAFARI:
	  // ex.message = Can't find variable: qq
	  // ex.line = 59
	  // ex.sourceId = 580238192
	  // ex.sourceURL = http://...
	  // ex.expressionBeginOffset = 96
	  // ex.expressionCaretOffset = 98
	  // ex.expressionEndOffset = 98
	  // ex.name = ReferenceError
	  //
	  // FIREFOX:
	  // ex.message = qq is not defined
	  // ex.fileName = http://...
	  // ex.lineNumber = 59
	  // ex.columnNumber = 69
	  // ex.stack = ...stack trace... (see the example below)
	  // ex.name = ReferenceError
	  //
	  // CHROME:
	  // ex.message = qq is not defined
	  // ex.name = ReferenceError
	  // ex.type = not_defined
	  // ex.arguments = ['aa']
	  // ex.stack = ...stack trace...
	  //
	  // INTERNET EXPLORER:
	  // ex.message = ...
	  // ex.name = ReferenceError
	  //
	  // OPERA:
	  // ex.message = ...message... (see the example below)
	  // ex.name = ReferenceError
	  // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)
	  // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'

	  /**
	   * Computes stack trace information from the stack property.
	   * Chrome and Gecko use this property.
	   * @param {Error} ex
	   * @return {?Object.<string, *>} Stack trace information.
	   */
	  function computeStackTraceFromStackProp(ex) {
	    if (typeof ex.stack === 'undefined' || !ex.stack) return;

	    var chrome = /^\s*at (?:(.*?) ?\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
	    var winjs = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx(?:-web)|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;
	    // NOTE: blob urls are now supposed to always have an origin, therefore it's format
	    // which is `blob:http://url/path/with-some-uuid`, is matched by `blob.*?:\/` as well
	    var gecko = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\/.*?|\[native code\]|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i;
	    // Used to additionally parse URL/line/column from eval frames
	    var geckoEval = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;
	    var chromeEval = /\((\S*)(?::(\d+))(?::(\d+))\)/;
	    var lines = ex.stack.split('\n');
	    var stack = [];
	    var submatch;
	    var parts;
	    var element;
	    var reference = /^(.*) is undefined$/.exec(ex.message);

	    for (var i = 0, j = lines.length; i < j; ++i) {
	      if ((parts = chrome.exec(lines[i]))) {
	        var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line
	        var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line
	        if (isEval && (submatch = chromeEval.exec(parts[2]))) {
	          // throw out eval line/column and use top-most line/column number
	          parts[2] = submatch[1]; // url
	          parts[3] = submatch[2]; // line
	          parts[4] = submatch[3]; // column
	        }
	        element = {
	          url: !isNative ? parts[2] : null,
	          func: parts[1] || UNKNOWN_FUNCTION,
	          args: isNative ? [parts[2]] : [],
	          line: parts[3] ? +parts[3] : null,
	          column: parts[4] ? +parts[4] : null
	        };
	      } else if ((parts = winjs.exec(lines[i]))) {
	        element = {
	          url: parts[2],
	          func: parts[1] || UNKNOWN_FUNCTION,
	          args: [],
	          line: +parts[3],
	          column: parts[4] ? +parts[4] : null
	        };
	      } else if ((parts = gecko.exec(lines[i]))) {
	        var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;
	        if (isEval && (submatch = geckoEval.exec(parts[3]))) {
	          // throw out eval line/column and use top-most line number
	          parts[3] = submatch[1];
	          parts[4] = submatch[2];
	          parts[5] = null; // no column when eval
	        } else if (i === 0 && !parts[5] && typeof ex.columnNumber !== 'undefined') {
	          // FireFox uses this awesome columnNumber property for its top frame
	          // Also note, Firefox's column number is 0-based and everything else expects 1-based,
	          // so adding 1
	          // NOTE: this hack doesn't work if top-most frame is eval
	          stack[0].column = ex.columnNumber + 1;
	        }
	        element = {
	          url: parts[3],
	          func: parts[1] || UNKNOWN_FUNCTION,
	          args: parts[2] ? parts[2].split(',') : [],
	          line: parts[4] ? +parts[4] : null,
	          column: parts[5] ? +parts[5] : null
	        };
	      } else {
	        continue;
	      }

	      if (!element.func && element.line) {
	        element.func = UNKNOWN_FUNCTION;
	      }

	      if (element.url && element.url.substr(0, 5) === 'blob:') {
	        // Special case for handling JavaScript loaded into a blob.
	        // We use a synchronous AJAX request here as a blob is already in
	        // memory - it's not making a network request.  This will generate a warning
	        // in the browser console, but there has already been an error so that's not
	        // that much of an issue.
	        var xhr = new XMLHttpRequest();
	        xhr.open('GET', element.url, false);
	        xhr.send(null);

	        // If we failed to download the source, skip this patch
	        if (xhr.status === 200) {
	          var source = xhr.responseText || '';

	          // We trim the source down to the last 300 characters as sourceMappingURL is always at the end of the file.
	          // Why 300? To be in line with: https://github.com/getsentry/sentry/blob/4af29e8f2350e20c28a6933354e4f42437b4ba42/src/sentry/lang/javascript/processor.py#L164-L175
	          source = source.slice(-300);

	          // Now we dig out the source map URL
	          var sourceMaps = source.match(/\/\/# sourceMappingURL=(.*)$/);

	          // If we don't find a source map comment or we find more than one, continue on to the next element.
	          if (sourceMaps) {
	            var sourceMapAddress = sourceMaps[1];

	            // Now we check to see if it's a relative URL.
	            // If it is, convert it to an absolute one.
	            if (sourceMapAddress.charAt(0) === '~') {
	              sourceMapAddress = getLocationOrigin() + sourceMapAddress.slice(1);
	            }

	            // Now we strip the '.map' off of the end of the URL and update the
	            // element so that Sentry can match the map to the blob.
	            element.url = sourceMapAddress.slice(0, -4);
	          }
	        }
	      }

	      stack.push(element);
	    }

	    if (!stack.length) {
	      return null;
	    }

	    return {
	      name: ex.name,
	      message: ex.message,
	      url: getLocationHref(),
	      stack: stack
	    };
	  }

	  /**
	   * Adds information about the first frame to incomplete stack traces.
	   * Safari and IE require this to get complete data on the first frame.
	   * @param {Object.<string, *>} stackInfo Stack trace information from
	   * one of the compute* methods.
	   * @param {string} url The URL of the script that caused an error.
	   * @param {(number|string)} lineNo The line number of the script that
	   * caused an error.
	   * @param {string=} message The error generated by the browser, which
	   * hopefully contains the name of the object that caused the error.
	   * @return {boolean} Whether or not the stack information was
	   * augmented.
	   */
	  function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {
	    var initial = {
	      url: url,
	      line: lineNo
	    };

	    if (initial.url && initial.line) {
	      stackInfo.incomplete = false;

	      if (!initial.func) {
	        initial.func = UNKNOWN_FUNCTION;
	      }

	      if (stackInfo.stack.length > 0) {
	        if (stackInfo.stack[0].url === initial.url) {
	          if (stackInfo.stack[0].line === initial.line) {
	            return false; // already in stack trace
	          } else if (
	            !stackInfo.stack[0].line &&
	            stackInfo.stack[0].func === initial.func
	          ) {
	            stackInfo.stack[0].line = initial.line;
	            return false;
	          }
	        }
	      }

	      stackInfo.stack.unshift(initial);
	      stackInfo.partial = true;
	      return true;
	    } else {
	      stackInfo.incomplete = true;
	    }

	    return false;
	  }

	  /**
	   * Computes stack trace information by walking the arguments.caller
	   * chain at the time the exception occurred. This will cause earlier
	   * frames to be missed but is the only way to get any stack trace in
	   * Safari and IE. The top frame is restored by
	   * {@link augmentStackTraceWithInitialElement}.
	   * @param {Error} ex
	   * @return {?Object.<string, *>} Stack trace information.
	   */
	  function computeStackTraceByWalkingCallerChain(ex, depth) {
	    var functionName = /function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i,
	      stack = [],
	      funcs = {},
	      recursion = false,
	      parts,
	      item,
	      source;

	    for (
	      var curr = computeStackTraceByWalkingCallerChain.caller;
	      curr && !recursion;
	      curr = curr.caller
	    ) {
	      if (curr === computeStackTrace || curr === TraceKit.report) {
	        // console.log('skipping internal function');
	        continue;
	      }

	      item = {
	        url: null,
	        func: UNKNOWN_FUNCTION,
	        line: null,
	        column: null
	      };

	      if (curr.name) {
	        item.func = curr.name;
	      } else if ((parts = functionName.exec(curr.toString()))) {
	        item.func = parts[1];
	      }

	      if (typeof item.func === 'undefined') {
	        try {
	          item.func = parts.input.substring(0, parts.input.indexOf('{'));
	        } catch (e) {}
	      }

	      if (funcs['' + curr]) {
	        recursion = true;
	      } else {
	        funcs['' + curr] = true;
	      }

	      stack.push(item);
	    }

	    if (depth) {
	      // console.log('depth is ' + depth);
	      // console.log('stack is ' + stack.length);
	      stack.splice(0, depth);
	    }

	    var result = {
	      name: ex.name,
	      message: ex.message,
	      url: getLocationHref(),
	      stack: stack
	    };
	    augmentStackTraceWithInitialElement(
	      result,
	      ex.sourceURL || ex.fileName,
	      ex.line || ex.lineNumber,
	      ex.message || ex.description
	    );
	    return result;
	  }

	  /**
	   * Computes a stack trace for an exception.
	   * @param {Error} ex
	   * @param {(string|number)=} depth
	   */
	  function computeStackTrace(ex, depth) {
	    var stack = null;
	    depth = depth == null ? 0 : +depth;

	    try {
	      stack = computeStackTraceFromStackProp(ex);
	      if (stack) {
	        return stack;
	      }
	    } catch (e) {
	      if (TraceKit.debug) {
	        throw e;
	      }
	    }

	    try {
	      stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);
	      if (stack) {
	        return stack;
	      }
	    } catch (e) {
	      if (TraceKit.debug) {
	        throw e;
	      }
	    }
	    return {
	      name: ex.name,
	      message: ex.message,
	      url: getLocationHref()
	    };
	  }

	  computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;
	  computeStackTrace.computeStackTraceFromStackProp = computeStackTraceFromStackProp;

	  return computeStackTrace;
	})();

	module.exports = TraceKit;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var stringify = __webpack_require__(31);

	var _window =
	  typeof window !== 'undefined'
	    ? window
	    : typeof global !== 'undefined'
	      ? global
	      : typeof self !== 'undefined'
	        ? self
	        : {};

	function isObject(what) {
	  return typeof what === 'object' && what !== null;
	}

	// Yanked from https://git.io/vS8DV re-used under CC0
	// with some tiny modifications
	function isError(value) {
	  switch (Object.prototype.toString.call(value)) {
	    case '[object Error]':
	      return true;
	    case '[object Exception]':
	      return true;
	    case '[object DOMException]':
	      return true;
	    default:
	      return value instanceof Error;
	  }
	}

	function isErrorEvent(value) {
	  return Object.prototype.toString.call(value) === '[object ErrorEvent]';
	}

	function isDOMError(value) {
	  return Object.prototype.toString.call(value) === '[object DOMError]';
	}

	function isDOMException(value) {
	  return Object.prototype.toString.call(value) === '[object DOMException]';
	}

	function isUndefined(what) {
	  return what === void 0;
	}

	function isFunction(what) {
	  return typeof what === 'function';
	}

	function isPlainObject(what) {
	  return Object.prototype.toString.call(what) === '[object Object]';
	}

	function isString(what) {
	  return Object.prototype.toString.call(what) === '[object String]';
	}

	function isArray(what) {
	  return Object.prototype.toString.call(what) === '[object Array]';
	}

	function isEmptyObject(what) {
	  if (!isPlainObject(what)) return false;

	  for (var _ in what) {
	    if (what.hasOwnProperty(_)) {
	      return false;
	    }
	  }
	  return true;
	}

	function supportsErrorEvent() {
	  try {
	    new ErrorEvent(''); // eslint-disable-line no-new
	    return true;
	  } catch (e) {
	    return false;
	  }
	}

	function supportsDOMError() {
	  try {
	    new DOMError(''); // eslint-disable-line no-new
	    return true;
	  } catch (e) {
	    return false;
	  }
	}

	function supportsDOMException() {
	  try {
	    new DOMException(''); // eslint-disable-line no-new
	    return true;
	  } catch (e) {
	    return false;
	  }
	}

	function supportsFetch() {
	  if (!('fetch' in _window)) return false;

	  try {
	    new Headers(); // eslint-disable-line no-new
	    new Request(''); // eslint-disable-line no-new
	    new Response(); // eslint-disable-line no-new
	    return true;
	  } catch (e) {
	    return false;
	  }
	}

	// Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default
	// https://caniuse.com/#feat=referrer-policy
	// It doesn't. And it throw exception instead of ignoring this parameter...
	// REF: https://github.com/getsentry/raven-js/issues/1233
	function supportsReferrerPolicy() {
	  if (!supportsFetch()) return false;

	  try {
	    // eslint-disable-next-line no-new
	    new Request('pickleRick', {
	      referrerPolicy: 'origin'
	    });
	    return true;
	  } catch (e) {
	    return false;
	  }
	}

	function supportsPromiseRejectionEvent() {
	  return typeof PromiseRejectionEvent === 'function';
	}

	function wrappedCallback(callback) {
	  function dataCallback(data, original) {
	    var normalizedData = callback(data) || data;
	    if (original) {
	      return original(normalizedData) || normalizedData;
	    }
	    return normalizedData;
	  }

	  return dataCallback;
	}

	function each(obj, callback) {
	  var i, j;

	  if (isUndefined(obj.length)) {
	    for (i in obj) {
	      if (hasKey(obj, i)) {
	        callback.call(null, i, obj[i]);
	      }
	    }
	  } else {
	    j = obj.length;
	    if (j) {
	      for (i = 0; i < j; i++) {
	        callback.call(null, i, obj[i]);
	      }
	    }
	  }
	}

	function objectMerge(obj1, obj2) {
	  if (!obj2) {
	    return obj1;
	  }
	  each(obj2, function(key, value) {
	    obj1[key] = value;
	  });
	  return obj1;
	}

	/**
	 * This function is only used for react-native.
	 * react-native freezes object that have already been sent over the
	 * js bridge. We need this function in order to check if the object is frozen.
	 * So it's ok that objectFrozen returns false if Object.isFrozen is not
	 * supported because it's not relevant for other "platforms". See related issue:
	 * https://github.com/getsentry/react-native-sentry/issues/57
	 */
	function objectFrozen(obj) {
	  if (!Object.isFrozen) {
	    return false;
	  }
	  return Object.isFrozen(obj);
	}

	function truncate(str, max) {
	  if (typeof max !== 'number') {
	    throw new Error('2nd argument to `truncate` function should be a number');
	  }
	  if (typeof str !== 'string' || max === 0) {
	    return str;
	  }
	  return str.length <= max ? str : str.substr(0, max) + '\u2026';
	}

	/**
	 * hasKey, a better form of hasOwnProperty
	 * Example: hasKey(MainHostObject, property) === true/false
	 *
	 * @param {Object} host object to check property
	 * @param {string} key to check
	 */
	function hasKey(object, key) {
	  return Object.prototype.hasOwnProperty.call(object, key);
	}

	function joinRegExp(patterns) {
	  // Combine an array of regular expressions and strings into one large regexp
	  // Be mad.
	  var sources = [],
	    i = 0,
	    len = patterns.length,
	    pattern;

	  for (; i < len; i++) {
	    pattern = patterns[i];
	    if (isString(pattern)) {
	      // If it's a string, we need to escape it
	      // Taken from: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions
	      sources.push(pattern.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, '\\$1'));
	    } else if (pattern && pattern.source) {
	      // If it's a regexp already, we want to extract the source
	      sources.push(pattern.source);
	    }
	    // Intentionally skip other cases
	  }
	  return new RegExp(sources.join('|'), 'i');
	}

	function urlencode(o) {
	  var pairs = [];
	  each(o, function(key, value) {
	    pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
	  });
	  return pairs.join('&');
	}

	// borrowed from https://tools.ietf.org/html/rfc3986#appendix-B
	// intentionally using regex and not <a/> href parsing trick because React Native and other
	// environments where DOM might not be available
	function parseUrl(url) {
	  if (typeof url !== 'string') return {};
	  var match = url.match(/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);

	  // coerce to undefined values to empty string so we don't get 'undefined'
	  var query = match[6] || '';
	  var fragment = match[8] || '';
	  return {
	    protocol: match[2],
	    host: match[4],
	    path: match[5],
	    relative: match[5] + query + fragment // everything minus origin
	  };
	}
	function uuid4() {
	  var crypto = _window.crypto || _window.msCrypto;

	  if (!isUndefined(crypto) && crypto.getRandomValues) {
	    // Use window.crypto API if available
	    // eslint-disable-next-line no-undef
	    var arr = new Uint16Array(8);
	    crypto.getRandomValues(arr);

	    // set 4 in byte 7
	    arr[3] = (arr[3] & 0xfff) | 0x4000;
	    // set 2 most significant bits of byte 9 to '10'
	    arr[4] = (arr[4] & 0x3fff) | 0x8000;

	    var pad = function(num) {
	      var v = num.toString(16);
	      while (v.length < 4) {
	        v = '0' + v;
	      }
	      return v;
	    };

	    return (
	      pad(arr[0]) +
	      pad(arr[1]) +
	      pad(arr[2]) +
	      pad(arr[3]) +
	      pad(arr[4]) +
	      pad(arr[5]) +
	      pad(arr[6]) +
	      pad(arr[7])
	    );
	  } else {
	    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523
	    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
	      var r = (Math.random() * 16) | 0,
	        v = c === 'x' ? r : (r & 0x3) | 0x8;
	      return v.toString(16);
	    });
	  }
	}

	/**
	 * Given a child DOM element, returns a query-selector statement describing that
	 * and its ancestors
	 * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]
	 * @param elem
	 * @returns {string}
	 */
	function htmlTreeAsString(elem) {
	  /* eslint no-extra-parens:0*/
	  var MAX_TRAVERSE_HEIGHT = 5,
	    MAX_OUTPUT_LEN = 80,
	    out = [],
	    height = 0,
	    len = 0,
	    separator = ' > ',
	    sepLength = separator.length,
	    nextStr;

	  while (elem && height++ < MAX_TRAVERSE_HEIGHT) {
	    nextStr = htmlElementAsString(elem);
	    // bail out if
	    // - nextStr is the 'html' element
	    // - the length of the string that would be created exceeds MAX_OUTPUT_LEN
	    //   (ignore this limit if we are on the first iteration)
	    if (
	      nextStr === 'html' ||
	      (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)
	    ) {
	      break;
	    }

	    out.push(nextStr);

	    len += nextStr.length;
	    elem = elem.parentNode;
	  }

	  return out.reverse().join(separator);
	}

	/**
	 * Returns a simple, query-selector representation of a DOM element
	 * e.g. [HTMLElement] => input#foo.btn[name=baz]
	 * @param HTMLElement
	 * @returns {string}
	 */
	function htmlElementAsString(elem) {
	  var out = [],
	    className,
	    classes,
	    key,
	    attr,
	    i;

	  if (!elem || !elem.tagName) {
	    return '';
	  }

	  out.push(elem.tagName.toLowerCase());
	  if (elem.id) {
	    out.push('#' + elem.id);
	  }

	  className = elem.className;
	  if (className && isString(className)) {
	    classes = className.split(/\s+/);
	    for (i = 0; i < classes.length; i++) {
	      out.push('.' + classes[i]);
	    }
	  }
	  var attrWhitelist = ['type', 'name', 'title', 'alt'];
	  for (i = 0; i < attrWhitelist.length; i++) {
	    key = attrWhitelist[i];
	    attr = elem.getAttribute(key);
	    if (attr) {
	      out.push('[' + key + '="' + attr + '"]');
	    }
	  }
	  return out.join('');
	}

	/**
	 * Returns true if either a OR b is truthy, but not both
	 */
	function isOnlyOneTruthy(a, b) {
	  return !!(!!a ^ !!b);
	}

	/**
	 * Returns true if both parameters are undefined
	 */
	function isBothUndefined(a, b) {
	  return isUndefined(a) && isUndefined(b);
	}

	/**
	 * Returns true if the two input exception interfaces have the same content
	 */
	function isSameException(ex1, ex2) {
	  if (isOnlyOneTruthy(ex1, ex2)) return false;

	  ex1 = ex1.values[0];
	  ex2 = ex2.values[0];

	  if (ex1.type !== ex2.type || ex1.value !== ex2.value) return false;

	  // in case both stacktraces are undefined, we can't decide so default to false
	  if (isBothUndefined(ex1.stacktrace, ex2.stacktrace)) return false;

	  return isSameStacktrace(ex1.stacktrace, ex2.stacktrace);
	}

	/**
	 * Returns true if the two input stack trace interfaces have the same content
	 */
	function isSameStacktrace(stack1, stack2) {
	  if (isOnlyOneTruthy(stack1, stack2)) return false;

	  var frames1 = stack1.frames;
	  var frames2 = stack2.frames;

	  // Exit early if stacktrace is malformed
	  if (frames1 === undefined || frames2 === undefined) return false;

	  // Exit early if frame count differs
	  if (frames1.length !== frames2.length) return false;

	  // Iterate through every frame; bail out if anything differs
	  var a, b;
	  for (var i = 0; i < frames1.length; i++) {
	    a = frames1[i];
	    b = frames2[i];
	    if (
	      a.filename !== b.filename ||
	      a.lineno !== b.lineno ||
	      a.colno !== b.colno ||
	      a['function'] !== b['function']
	    )
	      return false;
	  }
	  return true;
	}

	/**
	 * Polyfill a method
	 * @param obj object e.g. `document`
	 * @param name method name present on object e.g. `addEventListener`
	 * @param replacement replacement function
	 * @param track {optional} record instrumentation to an array
	 */
	function fill(obj, name, replacement, track) {
	  if (obj == null) return;
	  var orig = obj[name];
	  obj[name] = replacement(orig);
	  obj[name].__raven__ = true;
	  obj[name].__orig__ = orig;
	  if (track) {
	    track.push([obj, name, orig]);
	  }
	}

	/**
	 * Join values in array
	 * @param input array of values to be joined together
	 * @param delimiter string to be placed in-between values
	 * @returns {string}
	 */
	function safeJoin(input, delimiter) {
	  if (!isArray(input)) return '';

	  var output = [];

	  for (var i = 0; i < input.length; i++) {
	    try {
	      output.push(String(input[i]));
	    } catch (e) {
	      output.push('[value cannot be serialized]');
	    }
	  }

	  return output.join(delimiter);
	}

	// Default Node.js REPL depth
	var MAX_SERIALIZE_EXCEPTION_DEPTH = 3;
	// 50kB, as 100kB is max payload size, so half sounds reasonable
	var MAX_SERIALIZE_EXCEPTION_SIZE = 50 * 1024;
	var MAX_SERIALIZE_KEYS_LENGTH = 40;

	function utf8Length(value) {
	  return ~-encodeURI(value).split(/%..|./).length;
	}

	function jsonSize(value) {
	  return utf8Length(JSON.stringify(value));
	}

	function serializeValue(value) {
	  if (typeof value === 'string') {
	    var maxLength = 40;
	    return truncate(value, maxLength);
	  } else if (
	    typeof value === 'number' ||
	    typeof value === 'boolean' ||
	    typeof value === 'undefined'
	  ) {
	    return value;
	  }

	  var type = Object.prototype.toString.call(value);

	  // Node.js REPL notation
	  if (type === '[object Object]') return '[Object]';
	  if (type === '[object Array]') return '[Array]';
	  if (type === '[object Function]')
	    return value.name ? '[Function: ' + value.name + ']' : '[Function]';

	  return value;
	}

	function serializeObject(value, depth) {
	  if (depth === 0) return serializeValue(value);

	  if (isPlainObject(value)) {
	    return Object.keys(value).reduce(function(acc, key) {
	      acc[key] = serializeObject(value[key], depth - 1);
	      return acc;
	    }, {});
	  } else if (Array.isArray(value)) {
	    return value.map(function(val) {
	      return serializeObject(val, depth - 1);
	    });
	  }

	  return serializeValue(value);
	}

	function serializeException(ex, depth, maxSize) {
	  if (!isPlainObject(ex)) return ex;

	  depth = typeof depth !== 'number' ? MAX_SERIALIZE_EXCEPTION_DEPTH : depth;
	  maxSize = typeof depth !== 'number' ? MAX_SERIALIZE_EXCEPTION_SIZE : maxSize;

	  var serialized = serializeObject(ex, depth);

	  if (jsonSize(stringify(serialized)) > maxSize) {
	    return serializeException(ex, depth - 1);
	  }

	  return serialized;
	}

	function serializeKeysForMessage(keys, maxLength) {
	  if (typeof keys === 'number' || typeof keys === 'string') return keys.toString();
	  if (!Array.isArray(keys)) return '';

	  keys = keys.filter(function(key) {
	    return typeof key === 'string';
	  });
	  if (keys.length === 0) return '[object has no keys]';

	  maxLength = typeof maxLength !== 'number' ? MAX_SERIALIZE_KEYS_LENGTH : maxLength;
	  if (keys[0].length >= maxLength) return keys[0];

	  for (var usedKeys = keys.length; usedKeys > 0; usedKeys--) {
	    var serialized = keys.slice(0, usedKeys).join(', ');
	    if (serialized.length > maxLength) continue;
	    if (usedKeys === keys.length) return serialized;
	    return serialized + '\u2026';
	  }

	  return '';
	}

	function sanitize(input, sanitizeKeys) {
	  if (!isArray(sanitizeKeys) || (isArray(sanitizeKeys) && sanitizeKeys.length === 0))
	    return input;

	  var sanitizeRegExp = joinRegExp(sanitizeKeys);
	  var sanitizeMask = '********';
	  var safeInput;

	  try {
	    safeInput = JSON.parse(stringify(input));
	  } catch (o_O) {
	    return input;
	  }

	  function sanitizeWorker(workerInput) {
	    if (isArray(workerInput)) {
	      return workerInput.map(function(val) {
	        return sanitizeWorker(val);
	      });
	    }

	    if (isPlainObject(workerInput)) {
	      return Object.keys(workerInput).reduce(function(acc, k) {
	        if (sanitizeRegExp.test(k)) {
	          acc[k] = sanitizeMask;
	        } else {
	          acc[k] = sanitizeWorker(workerInput[k]);
	        }
	        return acc;
	      }, {});
	    }

	    return workerInput;
	  }

	  return sanitizeWorker(safeInput);
	}

	module.exports = {
	  isObject: isObject,
	  isError: isError,
	  isErrorEvent: isErrorEvent,
	  isDOMError: isDOMError,
	  isDOMException: isDOMException,
	  isUndefined: isUndefined,
	  isFunction: isFunction,
	  isPlainObject: isPlainObject,
	  isString: isString,
	  isArray: isArray,
	  isEmptyObject: isEmptyObject,
	  supportsErrorEvent: supportsErrorEvent,
	  supportsDOMError: supportsDOMError,
	  supportsDOMException: supportsDOMException,
	  supportsFetch: supportsFetch,
	  supportsReferrerPolicy: supportsReferrerPolicy,
	  supportsPromiseRejectionEvent: supportsPromiseRejectionEvent,
	  wrappedCallback: wrappedCallback,
	  each: each,
	  objectMerge: objectMerge,
	  truncate: truncate,
	  objectFrozen: objectFrozen,
	  hasKey: hasKey,
	  joinRegExp: joinRegExp,
	  urlencode: urlencode,
	  uuid4: uuid4,
	  htmlTreeAsString: htmlTreeAsString,
	  htmlElementAsString: htmlElementAsString,
	  isSameException: isSameException,
	  isSameStacktrace: isSameStacktrace,
	  parseUrl: parseUrl,
	  fill: fill,
	  safeJoin: safeJoin,
	  serializeException: serializeException,
	  serializeKeysForMessage: serializeKeysForMessage,
	  sanitize: sanitize
	};

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 31 */
/***/ function(module, exports) {

	/*
	 json-stringify-safe
	 Like JSON.stringify, but doesn't throw on circular references.

	 Originally forked from https://github.com/isaacs/json-stringify-safe
	 version 5.0.1 on 3/8/2017 and modified to handle Errors serialization
	 and IE8 compatibility. Tests for this are in test/vendor.

	 ISC license: https://github.com/isaacs/json-stringify-safe/blob/master/LICENSE
	*/

	exports = module.exports = stringify;
	exports.getSerialize = serializer;

	function indexOf(haystack, needle) {
	  for (var i = 0; i < haystack.length; ++i) {
	    if (haystack[i] === needle) return i;
	  }
	  return -1;
	}

	function stringify(obj, replacer, spaces, cycleReplacer) {
	  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces);
	}

	// https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106
	function stringifyError(value) {
	  var err = {
	    // These properties are implemented as magical getters and don't show up in for in
	    stack: value.stack,
	    message: value.message,
	    name: value.name
	  };

	  for (var i in value) {
	    if (Object.prototype.hasOwnProperty.call(value, i)) {
	      err[i] = value[i];
	    }
	  }

	  return err;
	}

	function serializer(replacer, cycleReplacer) {
	  var stack = [];
	  var keys = [];

	  if (cycleReplacer == null) {
	    cycleReplacer = function(key, value) {
	      if (stack[0] === value) {
	        return '[Circular ~]';
	      }
	      return '[Circular ~.' + keys.slice(0, indexOf(stack, value)).join('.') + ']';
	    };
	  }

	  return function(key, value) {
	    if (stack.length > 0) {
	      var thisPos = indexOf(stack, this);
	      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);
	      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);

	      if (~indexOf(stack, value)) {
	        value = cycleReplacer.call(this, key, value);
	      }
	    } else {
	      stack.push(value);
	    }

	    return replacer == null
	      ? value instanceof Error ? stringifyError(value) : value
	      : replacer.call(this, key, value);
	  };
	}


/***/ },
/* 32 */
/***/ function(module, exports) {

	/*
	 * JavaScript MD5
	 * https://github.com/blueimp/JavaScript-MD5
	 *
	 * Copyright 2011, Sebastian Tschan
	 * https://blueimp.net
	 *
	 * Licensed under the MIT license:
	 * https://opensource.org/licenses/MIT
	 *
	 * Based on
	 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
	 * Digest Algorithm, as defined in RFC 1321.
	 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 * Distributed under the BSD License
	 * See http://pajhome.org.uk/crypt/md5 for more info.
	 */

	/*
	* Add integers, wrapping at 2^32. This uses 16-bit operations internally
	* to work around bugs in some JS interpreters.
	*/
	function safeAdd(x, y) {
	  var lsw = (x & 0xffff) + (y & 0xffff);
	  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
	  return (msw << 16) | (lsw & 0xffff);
	}

	/*
	* Bitwise rotate a 32-bit number to the left.
	*/
	function bitRotateLeft(num, cnt) {
	  return (num << cnt) | (num >>> (32 - cnt));
	}

	/*
	* These functions implement the four basic operations the algorithm uses.
	*/
	function md5cmn(q, a, b, x, s, t) {
	  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);
	}
	function md5ff(a, b, c, d, x, s, t) {
	  return md5cmn((b & c) | (~b & d), a, b, x, s, t);
	}
	function md5gg(a, b, c, d, x, s, t) {
	  return md5cmn((b & d) | (c & ~d), a, b, x, s, t);
	}
	function md5hh(a, b, c, d, x, s, t) {
	  return md5cmn(b ^ c ^ d, a, b, x, s, t);
	}
	function md5ii(a, b, c, d, x, s, t) {
	  return md5cmn(c ^ (b | ~d), a, b, x, s, t);
	}

	/*
	* Calculate the MD5 of an array of little-endian words, and a bit length.
	*/
	function binlMD5(x, len) {
	  /* append padding */
	  x[len >> 5] |= 0x80 << (len % 32);
	  x[(((len + 64) >>> 9) << 4) + 14] = len;

	  var i;
	  var olda;
	  var oldb;
	  var oldc;
	  var oldd;
	  var a = 1732584193;
	  var b = -271733879;
	  var c = -1732584194;
	  var d = 271733878;

	  for (i = 0; i < x.length; i += 16) {
	    olda = a;
	    oldb = b;
	    oldc = c;
	    oldd = d;

	    a = md5ff(a, b, c, d, x[i], 7, -680876936);
	    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
	    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
	    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
	    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
	    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
	    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
	    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
	    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
	    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
	    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
	    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
	    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
	    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
	    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
	    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);

	    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
	    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
	    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
	    b = md5gg(b, c, d, a, x[i], 20, -373897302);
	    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
	    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
	    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
	    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
	    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
	    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
	    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
	    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
	    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
	    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
	    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
	    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);

	    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
	    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
	    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
	    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
	    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
	    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
	    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
	    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
	    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
	    d = md5hh(d, a, b, c, x[i], 11, -358537222);
	    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
	    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
	    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
	    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
	    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
	    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);

	    a = md5ii(a, b, c, d, x[i], 6, -198630844);
	    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
	    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
	    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
	    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
	    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
	    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
	    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
	    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
	    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
	    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
	    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
	    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
	    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
	    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
	    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);

	    a = safeAdd(a, olda);
	    b = safeAdd(b, oldb);
	    c = safeAdd(c, oldc);
	    d = safeAdd(d, oldd);
	  }
	  return [a, b, c, d];
	}

	/*
	* Convert an array of little-endian words to a string
	*/
	function binl2rstr(input) {
	  var i;
	  var output = '';
	  var length32 = input.length * 32;
	  for (i = 0; i < length32; i += 8) {
	    output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xff);
	  }
	  return output;
	}

	/*
	* Convert a raw string to an array of little-endian words
	* Characters >255 have their high-byte silently ignored.
	*/
	function rstr2binl(input) {
	  var i;
	  var output = [];
	  output[(input.length >> 2) - 1] = undefined;
	  for (i = 0; i < output.length; i += 1) {
	    output[i] = 0;
	  }
	  var length8 = input.length * 8;
	  for (i = 0; i < length8; i += 8) {
	    output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << (i % 32);
	  }
	  return output;
	}

	/*
	* Calculate the MD5 of a raw string
	*/
	function rstrMD5(s) {
	  return binl2rstr(binlMD5(rstr2binl(s), s.length * 8));
	}

	/*
	* Calculate the HMAC-MD5, of a key and some data (raw strings)
	*/
	function rstrHMACMD5(key, data) {
	  var i;
	  var bkey = rstr2binl(key);
	  var ipad = [];
	  var opad = [];
	  var hash;
	  ipad[15] = opad[15] = undefined;
	  if (bkey.length > 16) {
	    bkey = binlMD5(bkey, key.length * 8);
	  }
	  for (i = 0; i < 16; i += 1) {
	    ipad[i] = bkey[i] ^ 0x36363636;
	    opad[i] = bkey[i] ^ 0x5c5c5c5c;
	  }
	  hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);
	  return binl2rstr(binlMD5(opad.concat(hash), 512 + 128));
	}

	/*
	* Convert a raw string to a hex string
	*/
	function rstr2hex(input) {
	  var hexTab = '0123456789abcdef';
	  var output = '';
	  var x;
	  var i;
	  for (i = 0; i < input.length; i += 1) {
	    x = input.charCodeAt(i);
	    output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f);
	  }
	  return output;
	}

	/*
	* Encode a string as utf-8
	*/
	function str2rstrUTF8(input) {
	  return unescape(encodeURIComponent(input));
	}

	/*
	* Take string arguments and return either raw or hex encoded strings
	*/
	function rawMD5(s) {
	  return rstrMD5(str2rstrUTF8(s));
	}
	function hexMD5(s) {
	  return rstr2hex(rawMD5(s));
	}
	function rawHMACMD5(k, d) {
	  return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d));
	}
	function hexHMACMD5(k, d) {
	  return rstr2hex(rawHMACMD5(k, d));
	}

	function md5(string, key, raw) {
	  if (!key) {
	    if (!raw) {
	      return hexMD5(string);
	    }
	    return rawMD5(string);
	  }
	  if (!raw) {
	    return hexHMACMD5(key, string);
	  }
	  return rawHMACMD5(key, string);
	}

	module.exports = md5;


/***/ },
/* 33 */
/***/ function(module, exports) {

	function RavenConfigError(message) {
	  this.name = 'RavenConfigError';
	  this.message = message;
	}
	RavenConfigError.prototype = new Error();
	RavenConfigError.prototype.constructor = RavenConfigError;

	module.exports = RavenConfigError;


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	var utils = __webpack_require__(30);

	var wrapMethod = function(console, level, callback) {
	  var originalConsoleLevel = console[level];
	  var originalConsole = console;

	  if (!(level in console)) {
	    return;
	  }

	  var sentryLevel = level === 'warn' ? 'warning' : level;

	  console[level] = function() {
	    var args = [].slice.call(arguments);

	    var msg = utils.safeJoin(args, ' ');
	    var data = {level: sentryLevel, logger: 'console', extra: {arguments: args}};

	    if (level === 'assert') {
	      if (args[0] === false) {
	        // Default browsers message
	        msg =
	          'Assertion failed: ' + (utils.safeJoin(args.slice(1), ' ') || 'console.assert');
	        data.extra.arguments = args.slice(1);
	        callback && callback(msg, data);
	      }
	    } else {
	      callback && callback(msg, data);
	    }

	    // this fails for some browsers. :(
	    if (originalConsoleLevel) {
	      // IE9 doesn't allow calling apply on console functions directly
	      // See: https://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function#answer-5473193
	      Function.prototype.apply.call(originalConsoleLevel, originalConsole, args);
	    }
	  };
	};

	module.exports = {
	  wrapMethod: wrapMethod
	};


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _uuid = __webpack_require__(36);

	var _uuid2 = _interopRequireDefault(_uuid);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ReactFileReader = function (_React$Component) {
	  _inherits(ReactFileReader, _React$Component);

	  function ReactFileReader() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, ReactFileReader);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ReactFileReader.__proto__ || Object.getPrototypeOf(ReactFileReader)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      elementId: _this.props.elementId || (0, _uuid2.default)()
	    }, _this.clickInput = function () {
	      var element = document.getElementById(_this.state.elementId);
	      element.value = '';
	      element.click();
	    }, _this.handleFiles = function (event) {
	      if (_this.props.base64) {
	        _this.convertFilesToBase64(event.target.files);
	      } else {
	        _this.props.handleFiles(event.target.files);
	      }
	    }, _this.convertFilesToBase64 = function (files) {
	      var ef = files;

	      if (_this.props.multipleFiles) {
	        var i, len;

	        (function () {
	          var files = { base64: [], fileList: ef };

	          var _loop = function _loop() {
	            var reader = new FileReader();
	            var f = ef[i];

	            reader.onloadend = function (e) {
	              files.base64.push(reader.result);

	              if (files.base64.length === ef.length) {
	                _this.props.handleFiles(files);
	              }
	            };

	            reader.readAsDataURL(f);
	          };

	          for (i = 0, len = ef.length; i < len; i++) {
	            _loop();
	          }
	        })();
	      } else {
	        var _files = { base64: '', fileList: ef };
	        var f = ef[0];
	        var _reader = new FileReader();

	        _reader.onloadend = function (e) {
	          _files.base64 = _reader.result;
	          _this.props.handleFiles(_files);
	        };

	        _reader.readAsDataURL(f);
	      }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(ReactFileReader, [{
	    key: 'render',
	    value: function render() {
	      var hideInput = {
	        width: '0px',
	        opacity: '0',
	        position: 'fixed'
	      };

	      return _react2.default.createElement(
	        'div',
	        { className: 'react-file-reader' },
	        _react2.default.createElement('input', { type: 'file',
	          onChange: this.handleFiles,
	          accept: Array.isArray(this.props.fileTypes) ? this.props.fileTypes.join(',') : this.props.fileTypes,
	          className: 'react-file-reader-input',
	          id: this.state.elementId,
	          multiple: this.props.multipleFiles,
	          style: hideInput,
	          disabled: this.props.disabled
	        }),
	        _react2.default.createElement(
	          'div',
	          { className: 'react-file-reader-button', onClick: this.clickInput },
	          this.props.children
	        )
	      );
	    }
	  }]);

	  return ReactFileReader;
	}(_react2.default.Component);

	exports.default = ReactFileReader;


	ReactFileReader.defaultProps = {
	  fileTypes: 'image/*',
	  multipleFiles: false,
	  base64: false,
	  disabled: false
	};

	ReactFileReader.propTypes = {
	  multipleFiles: _propTypes2.default.bool,
	  handleFiles: _propTypes2.default.func.isRequired,
	  fileTypes: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
	  base64: _propTypes2.default.bool,
	  children: _propTypes2.default.element.isRequired,
	  disabled: _propTypes2.default.bool
	};


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var crypto = __webpack_require__(37)
	    ,uuidPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/
	    ;

	exports = module.exports = generateUuid;
	exports.async = generateUuidAsync;
	exports.sync = generateUuidSync;
	exports.valid = generateUuid;


	function isUUID(uuid) {
	  return uuidPattern.test(uuid);
	}


	function generateUuidSync() {
	  var rnd = crypto.randomBytes(16);
	  rnd[6] = (rnd[6] & 0x0f) | 0x40;
	  rnd[8] = (rnd[8] & 0x3f) | 0x80;
	  rnd = rnd.toString('hex').match(/(.{8})(.{4})(.{4})(.{4})(.{12})/);
	  rnd.shift();
	  return rnd.join('-');
	}

	function generateUuidAsync(callback) {
	  crypto.randomBytes(16, function(err, rnd) {
	    rnd[6] = (rnd[6] & 0x0f) | 0x40;
	    rnd[8] = (rnd[8] & 0x3f) | 0x80;
	    rnd = rnd.toString('hex').match(/(.{8})(.{4})(.{4})(.{4})(.{12})/);
	    rnd.shift();
	    callback(null, rnd.join('-'));
	  });
	}

	function generateUuid(callback) {
	  if (typeof callback !== 'function') return generateUuidSync();
	  return generateUuidAsync(callback);
	}


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var rng = __webpack_require__(42)

	function error () {
	  var m = [].slice.call(arguments).join(' ')
	  throw new Error([
	    m,
	    'we accept pull requests',
	    'http://github.com/dominictarr/crypto-browserify'
	    ].join('\n'))
	}

	exports.createHash = __webpack_require__(44)

	exports.createHmac = __webpack_require__(56)

	exports.randomBytes = function(size, callback) {
	  if (callback && callback.call) {
	    try {
	      callback.call(this, undefined, new Buffer(rng(size)))
	    } catch (err) { callback(err) }
	  } else {
	    return new Buffer(rng(size))
	  }
	}

	function each(a, f) {
	  for(var i in a)
	    f(a[i], i)
	}

	exports.getHashes = function () {
	  return ['sha1', 'sha256', 'sha512', 'md5', 'rmd160']
	}

	var p = __webpack_require__(57)(exports)
	exports.pbkdf2 = p.pbkdf2
	exports.pbkdf2Sync = p.pbkdf2Sync


	// the least I can do is make error messages for the rest of the node.js/crypto api.
	each(['createCredentials'
	, 'createCipher'
	, 'createCipheriv'
	, 'createDecipher'
	, 'createDecipheriv'
	, 'createSign'
	, 'createVerify'
	, 'createDiffieHellman'
	], function (name) {
	  exports[name] = function () {
	    error('sorry,', name, 'is not implemented yet')
	  }
	})

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38).Buffer))

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */

	'use strict'

	var base64 = __webpack_require__(39)
	var ieee754 = __webpack_require__(40)
	var isArray = __webpack_require__(41)

	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50

	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.

	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()

	/*
	 * Export kMaxLength after typed array support is determined.
	 */
	exports.kMaxLength = kMaxLength()

	function typedArraySupport () {
	  try {
	    var arr = new Uint8Array(1)
	    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
	    return arr.foo() === 42 && // typed array instances can be augmented
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}

	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}

	function createBuffer (that, length) {
	  if (kMaxLength() < length) {
	    throw new RangeError('Invalid typed array length')
	  }
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = new Uint8Array(length)
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    if (that === null) {
	      that = new Buffer(length)
	    }
	    that.length = length
	  }

	  return that
	}

	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */

	function Buffer (arg, encodingOrOffset, length) {
	  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
	    return new Buffer(arg, encodingOrOffset, length)
	  }

	  // Common case.
	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error(
	        'If encoding is specified then the first argument must be a string'
	      )
	    }
	    return allocUnsafe(this, arg)
	  }
	  return from(this, arg, encodingOrOffset, length)
	}

	Buffer.poolSize = 8192 // not used by this implementation

	// TODO: Legacy, not needed anymore. Remove in next major version.
	Buffer._augment = function (arr) {
	  arr.__proto__ = Buffer.prototype
	  return arr
	}

	function from (that, value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number')
	  }

	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(that, value, encodingOrOffset, length)
	  }

	  if (typeof value === 'string') {
	    return fromString(that, value, encodingOrOffset)
	  }

	  return fromObject(that, value)
	}

	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/
	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(null, value, encodingOrOffset, length)
	}

	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	  if (typeof Symbol !== 'undefined' && Symbol.species &&
	      Buffer[Symbol.species] === Buffer) {
	    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	    Object.defineProperty(Buffer, Symbol.species, {
	      value: null,
	      configurable: true
	    })
	  }
	}

	function assertSize (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number')
	  } else if (size < 0) {
	    throw new RangeError('"size" argument must not be negative')
	  }
	}

	function alloc (that, size, fill, encoding) {
	  assertSize(size)
	  if (size <= 0) {
	    return createBuffer(that, size)
	  }
	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string'
	      ? createBuffer(that, size).fill(fill, encoding)
	      : createBuffer(that, size).fill(fill)
	  }
	  return createBuffer(that, size)
	}

	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(null, size, fill, encoding)
	}

	function allocUnsafe (that, size) {
	  assertSize(size)
	  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < size; ++i) {
	      that[i] = 0
	    }
	  }
	  return that
	}

	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */
	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(null, size)
	}
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(null, size)
	}

	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8'
	  }

	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding')
	  }

	  var length = byteLength(string, encoding) | 0
	  that = createBuffer(that, length)

	  var actual = that.write(string, encoding)

	  if (actual !== length) {
	    // Writing a hex string, for example, that contains invalid characters will
	    // cause everything after the first invalid character to be ignored. (e.g.
	    // 'abxxcd' will be treated as 'ab')
	    that = that.slice(0, actual)
	  }

	  return that
	}

	function fromArrayLike (that, array) {
	  var length = array.length < 0 ? 0 : checked(array.length) | 0
	  that = createBuffer(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	function fromArrayBuffer (that, array, byteOffset, length) {
	  array.byteLength // this throws if `array` is not a valid ArrayBuffer

	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds')
	  }

	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds')
	  }

	  if (byteOffset === undefined && length === undefined) {
	    array = new Uint8Array(array)
	  } else if (length === undefined) {
	    array = new Uint8Array(array, byteOffset)
	  } else {
	    array = new Uint8Array(array, byteOffset, length)
	  }

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = array
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromArrayLike(that, array)
	  }
	  return that
	}

	function fromObject (that, obj) {
	  if (Buffer.isBuffer(obj)) {
	    var len = checked(obj.length) | 0
	    that = createBuffer(that, len)

	    if (that.length === 0) {
	      return that
	    }

	    obj.copy(that, 0, 0, len)
	    return that
	  }

	  if (obj) {
	    if ((typeof ArrayBuffer !== 'undefined' &&
	        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(that, 0)
	      }
	      return fromArrayLike(that, obj)
	    }

	    if (obj.type === 'Buffer' && isArray(obj.data)) {
	      return fromArrayLike(that, obj.data)
	    }
	  }

	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
	}

	function checked (length) {
	  // Note: cannot use `length < kMaxLength()` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}

	function SlowBuffer (length) {
	  if (+length != length) { // eslint-disable-line eqeqeq
	    length = 0
	  }
	  return Buffer.alloc(+length)
	}

	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}

	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }

	  if (a === b) return 0

	  var x = a.length
	  var y = b.length

	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i]
	      y = b[i]
	      break
	    }
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'latin1':
	    case 'binary':
	    case 'base64':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}

	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers')
	  }

	  if (list.length === 0) {
	    return Buffer.alloc(0)
	  }

	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; ++i) {
	      length += list[i].length
	    }
	  }

	  var buffer = Buffer.allocUnsafe(length)
	  var pos = 0
	  for (i = 0; i < list.length; ++i) {
	    var buf = list[i]
	    if (!Buffer.isBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers')
	    }
	    buf.copy(buffer, pos)
	    pos += buf.length
	  }
	  return buffer
	}

	function byteLength (string, encoding) {
	  if (Buffer.isBuffer(string)) {
	    return string.length
	  }
	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
	      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength
	  }
	  if (typeof string !== 'string') {
	    string = '' + string
	  }

	  var len = string.length
	  if (len === 0) return 0

	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'latin1':
	      case 'binary':
	        return len
	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength

	function slowToString (encoding, start, end) {
	  var loweredCase = false

	  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.

	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	  if (start === undefined || start < 0) {
	    start = 0
	  }
	  // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.
	  if (start > this.length) {
	    return ''
	  }

	  if (end === undefined || end > this.length) {
	    end = this.length
	  }

	  if (end <= 0) {
	    return ''
	  }

	  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	  end >>>= 0
	  start >>>= 0

	  if (end <= start) {
	    return ''
	  }

	  if (!encoding) encoding = 'utf8'

	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)

	      case 'ascii':
	        return asciiSlice(this, start, end)

	      case 'latin1':
	      case 'binary':
	        return latin1Slice(this, start, end)

	      case 'base64':
	        return base64Slice(this, start, end)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.
	Buffer.prototype._isBuffer = true

	function swap (b, n, m) {
	  var i = b[n]
	  b[n] = b[m]
	  b[m] = i
	}

	Buffer.prototype.swap16 = function swap16 () {
	  var len = this.length
	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits')
	  }
	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1)
	  }
	  return this
	}

	Buffer.prototype.swap32 = function swap32 () {
	  var len = this.length
	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits')
	  }
	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3)
	    swap(this, i + 1, i + 2)
	  }
	  return this
	}

	Buffer.prototype.swap64 = function swap64 () {
	  var len = this.length
	  if (len % 8 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 64-bits')
	  }
	  for (var i = 0; i < len; i += 8) {
	    swap(this, i, i + 7)
	    swap(this, i + 1, i + 6)
	    swap(this, i + 2, i + 5)
	    swap(this, i + 3, i + 4)
	  }
	  return this
	}

	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}

	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}

	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}

	Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
	  if (!Buffer.isBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer')
	  }

	  if (start === undefined) {
	    start = 0
	  }
	  if (end === undefined) {
	    end = target ? target.length : 0
	  }
	  if (thisStart === undefined) {
	    thisStart = 0
	  }
	  if (thisEnd === undefined) {
	    thisEnd = this.length
	  }

	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index')
	  }

	  if (thisStart >= thisEnd && start >= end) {
	    return 0
	  }
	  if (thisStart >= thisEnd) {
	    return -1
	  }
	  if (start >= end) {
	    return 1
	  }

	  start >>>= 0
	  end >>>= 0
	  thisStart >>>= 0
	  thisEnd >>>= 0

	  if (this === target) return 0

	  var x = thisEnd - thisStart
	  var y = end - start
	  var len = Math.min(x, y)

	  var thisCopy = this.slice(thisStart, thisEnd)
	  var targetCopy = target.slice(start, end)

	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i]
	      y = targetCopy[i]
	      break
	    }
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf
	function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
	  // Empty buffer means no match
	  if (buffer.length === 0) return -1

	  // Normalize byteOffset
	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset
	    byteOffset = 0
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000
	  }
	  byteOffset = +byteOffset  // Coerce to Number.
	  if (isNaN(byteOffset)) {
	    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	    byteOffset = dir ? 0 : (buffer.length - 1)
	  }

	  // Normalize byteOffset: negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
	  if (byteOffset >= buffer.length) {
	    if (dir) return -1
	    else byteOffset = buffer.length - 1
	  } else if (byteOffset < 0) {
	    if (dir) byteOffset = 0
	    else return -1
	  }

	  // Normalize val
	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding)
	  }

	  // Finally, search either indexOf (if dir is true) or lastIndexOf
	  if (Buffer.isBuffer(val)) {
	    // Special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1
	    }
	    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
	  } else if (typeof val === 'number') {
	    val = val & 0xFF // Search for a byte value [0-255]
	    if (Buffer.TYPED_ARRAY_SUPPORT &&
	        typeof Uint8Array.prototype.indexOf === 'function') {
	      if (dir) {
	        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
	      } else {
	        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
	      }
	    }
	    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
	  }

	  throw new TypeError('val must be string, number or Buffer')
	}

	function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
	  var indexSize = 1
	  var arrLength = arr.length
	  var valLength = val.length

	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase()
	    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
	        encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1
	      }
	      indexSize = 2
	      arrLength /= 2
	      valLength /= 2
	      byteOffset /= 2
	    }
	  }

	  function read (buf, i) {
	    if (indexSize === 1) {
	      return buf[i]
	    } else {
	      return buf.readUInt16BE(i * indexSize)
	    }
	  }

	  var i
	  if (dir) {
	    var foundIndex = -1
	    for (i = byteOffset; i < arrLength; i++) {
	      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
	      } else {
	        if (foundIndex !== -1) i -= i - foundIndex
	        foundIndex = -1
	      }
	    }
	  } else {
	    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
	    for (i = byteOffset; i >= 0; i--) {
	      var found = true
	      for (var j = 0; j < valLength; j++) {
	        if (read(arr, i + j) !== read(val, j)) {
	          found = false
	          break
	        }
	      }
	      if (found) return i
	    }
	  }

	  return -1
	}

	Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1
	}

	Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
	}

	Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
	}

	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }

	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; ++i) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) return i
	    buf[offset + i] = parsed
	  }
	  return i
	}

	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}

	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}

	function latin1Write (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}

	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}

	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}

	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    throw new Error(
	      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
	    )
	  }

	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining

	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds')
	  }

	  if (!encoding) encoding = 'utf8'

	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)

	      case 'ascii':
	        return asciiWrite(this, string, offset, length)

	      case 'latin1':
	      case 'binary':
	        return latin1Write(this, string, offset, length)

	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}

	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}

	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []

	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1

	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint

	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }

	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }

	    res.push(codePoint)
	    i += bytesPerSequence
	  }

	  return decodeCodePointsArray(res)
	}

	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000

	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }

	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}

	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}

	function latin1Slice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}

	function hexSlice (buf, start, end) {
	  var len = buf.length

	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len

	  var out = ''
	  for (var i = start; i < end; ++i) {
	    out += toHex(buf[i])
	  }
	  return out
	}

	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}

	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end

	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }

	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }

	  if (end < start) end = start

	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = this.subarray(start, end)
	    newBuf.__proto__ = Buffer.prototype
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; ++i) {
	      newBuf[i] = this[i + start]
	    }
	  }

	  return newBuf
	}

	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}

	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }

	  return val
	}

	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }

	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }

	  return val
	}

	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}

	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}

	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}

	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}

	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}

	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}

	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}

	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}

	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}

	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}

	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}

	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}

	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	}

	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }

	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}

	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}

	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = 0
	  var mul = 1
	  var sub = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  var sub = 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	  if (offset < 0) throw new RangeError('Index out of range')
	}

	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}

	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}

	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}

	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}

	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start

	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0

	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')

	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }

	  var len = end - start
	  var i

	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; --i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; ++i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    Uint8Array.prototype.set.call(
	      target,
	      this.subarray(start, start + len),
	      targetStart
	    )
	  }

	  return len
	}

	// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill = function fill (val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start
	      start = 0
	      end = this.length
	    } else if (typeof end === 'string') {
	      encoding = end
	      end = this.length
	    }
	    if (val.length === 1) {
	      var code = val.charCodeAt(0)
	      if (code < 256) {
	        val = code
	      }
	    }
	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string')
	    }
	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding)
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255
	  }

	  // Invalid ranges are not set to a default, so can range check early.
	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index')
	  }

	  if (end <= start) {
	    return this
	  }

	  start = start >>> 0
	  end = end === undefined ? this.length : end >>> 0

	  if (!val) val = 0

	  var i
	  if (typeof val === 'number') {
	    for (i = start; i < end; ++i) {
	      this[i] = val
	    }
	  } else {
	    var bytes = Buffer.isBuffer(val)
	      ? val
	      : utf8ToBytes(new Buffer(val, encoding).toString())
	    var len = bytes.length
	    for (i = 0; i < end - start; ++i) {
	      this[i + start] = bytes[i % len]
	    }
	  }

	  return this
	}

	// HELPER FUNCTIONS
	// ================

	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}

	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}

	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}

	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []

	  for (var i = 0; i < length; ++i) {
	    codePoint = string.charCodeAt(i)

	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }

	        // valid lead
	        leadSurrogate = codePoint

	        continue
	      }

	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }

	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }

	    leadSurrogate = null

	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }

	  return bytes
	}

	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}

	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    if ((units -= 2) < 0) break

	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }

	  return byteArray
	}

	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}

	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; ++i) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}

	function isnan (val) {
	  return val !== val // eslint-disable-line no-self-compare
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38).Buffer, (function() { return this; }())))

/***/ },
/* 39 */
/***/ function(module, exports) {

	'use strict'

	exports.byteLength = byteLength
	exports.toByteArray = toByteArray
	exports.fromByteArray = fromByteArray

	var lookup = []
	var revLookup = []
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

	var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	for (var i = 0, len = code.length; i < len; ++i) {
	  lookup[i] = code[i]
	  revLookup[code.charCodeAt(i)] = i
	}

	// Support decoding URL-safe base64 strings, as Node.js does.
	// See: https://en.wikipedia.org/wiki/Base64#URL_applications
	revLookup['-'.charCodeAt(0)] = 62
	revLookup['_'.charCodeAt(0)] = 63

	function getLens (b64) {
	  var len = b64.length

	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4')
	  }

	  // Trim off extra bytes after placeholder bytes are found
	  // See: https://github.com/beatgammit/base64-js/issues/42
	  var validLen = b64.indexOf('=')
	  if (validLen === -1) validLen = len

	  var placeHoldersLen = validLen === len
	    ? 0
	    : 4 - (validLen % 4)

	  return [validLen, placeHoldersLen]
	}

	// base64 is 4/3 + up to two characters of the original data
	function byteLength (b64) {
	  var lens = getLens(b64)
	  var validLen = lens[0]
	  var placeHoldersLen = lens[1]
	  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
	}

	function _byteLength (b64, validLen, placeHoldersLen) {
	  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
	}

	function toByteArray (b64) {
	  var tmp
	  var lens = getLens(b64)
	  var validLen = lens[0]
	  var placeHoldersLen = lens[1]

	  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

	  var curByte = 0

	  // if there are placeholders, only get up to the last complete 4 chars
	  var len = placeHoldersLen > 0
	    ? validLen - 4
	    : validLen

	  for (var i = 0; i < len; i += 4) {
	    tmp =
	      (revLookup[b64.charCodeAt(i)] << 18) |
	      (revLookup[b64.charCodeAt(i + 1)] << 12) |
	      (revLookup[b64.charCodeAt(i + 2)] << 6) |
	      revLookup[b64.charCodeAt(i + 3)]
	    arr[curByte++] = (tmp >> 16) & 0xFF
	    arr[curByte++] = (tmp >> 8) & 0xFF
	    arr[curByte++] = tmp & 0xFF
	  }

	  if (placeHoldersLen === 2) {
	    tmp =
	      (revLookup[b64.charCodeAt(i)] << 2) |
	      (revLookup[b64.charCodeAt(i + 1)] >> 4)
	    arr[curByte++] = tmp & 0xFF
	  }

	  if (placeHoldersLen === 1) {
	    tmp =
	      (revLookup[b64.charCodeAt(i)] << 10) |
	      (revLookup[b64.charCodeAt(i + 1)] << 4) |
	      (revLookup[b64.charCodeAt(i + 2)] >> 2)
	    arr[curByte++] = (tmp >> 8) & 0xFF
	    arr[curByte++] = tmp & 0xFF
	  }

	  return arr
	}

	function tripletToBase64 (num) {
	  return lookup[num >> 18 & 0x3F] +
	    lookup[num >> 12 & 0x3F] +
	    lookup[num >> 6 & 0x3F] +
	    lookup[num & 0x3F]
	}

	function encodeChunk (uint8, start, end) {
	  var tmp
	  var output = []
	  for (var i = start; i < end; i += 3) {
	    tmp =
	      ((uint8[i] << 16) & 0xFF0000) +
	      ((uint8[i + 1] << 8) & 0xFF00) +
	      (uint8[i + 2] & 0xFF)
	    output.push(tripletToBase64(tmp))
	  }
	  return output.join('')
	}

	function fromByteArray (uint8) {
	  var tmp
	  var len = uint8.length
	  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
	  var parts = []
	  var maxChunkLength = 16383 // must be multiple of 3

	  // go through the array every three bytes, we'll deal with trailing stuff later
	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(
	      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
	    ))
	  }

	  // pad the end with zeros, but make sure to not forget the extra bytes
	  if (extraBytes === 1) {
	    tmp = uint8[len - 1]
	    parts.push(
	      lookup[tmp >> 2] +
	      lookup[(tmp << 4) & 0x3F] +
	      '=='
	    )
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
	    parts.push(
	      lookup[tmp >> 10] +
	      lookup[(tmp >> 4) & 0x3F] +
	      lookup[(tmp << 2) & 0x3F] +
	      '='
	    )
	  }

	  return parts.join('')
	}


/***/ },
/* 40 */
/***/ function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = (nBytes * 8) - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]

	  i += d

	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}

	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = (nBytes * 8) - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

	  value = Math.abs(value)

	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }

	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = ((value * c) - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }

	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

	  buffer[offset + i - d] |= s * 128
	}


/***/ },
/* 41 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, Buffer) {(function() {
	  var g = ('undefined' === typeof window ? global : window) || {}
	  _crypto = (
	    g.crypto || g.msCrypto || __webpack_require__(43)
	  )
	  module.exports = function(size) {
	    // Modern Browsers
	    if(_crypto.getRandomValues) {
	      var bytes = new Buffer(size); //in browserify, this is an extended Uint8Array
	      /* This will not work in older browsers.
	       * See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
	       */
	    
	      _crypto.getRandomValues(bytes);
	      return bytes;
	    }
	    else if (_crypto.randomBytes) {
	      return _crypto.randomBytes(size)
	    }
	    else
	      throw new Error(
	        'secure random number generation not supported by this browser\n'+
	        'use chrome, FireFox or Internet Explorer 11'
	      )
	  }
	}())

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(38).Buffer))

/***/ },
/* 43 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(45)

	var md5 = toConstructor(__webpack_require__(53))
	var rmd160 = toConstructor(__webpack_require__(55))

	function toConstructor (fn) {
	  return function () {
	    var buffers = []
	    var m= {
	      update: function (data, enc) {
	        if(!Buffer.isBuffer(data)) data = new Buffer(data, enc)
	        buffers.push(data)
	        return this
	      },
	      digest: function (enc) {
	        var buf = Buffer.concat(buffers)
	        var r = fn(buf)
	        buffers = null
	        return enc ? r.toString(enc) : r
	      }
	    }
	    return m
	  }
	}

	module.exports = function (alg) {
	  if('md5' === alg) return new md5()
	  if('rmd160' === alg) return new rmd160()
	  return createHash(alg)
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38).Buffer))

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	var exports = module.exports = function (alg) {
	  var Alg = exports[alg]
	  if(!Alg) throw new Error(alg + ' is not supported (we accept pull requests)')
	  return new Alg()
	}

	var Buffer = __webpack_require__(38).Buffer
	var Hash   = __webpack_require__(46)(Buffer)

	exports.sha1 = __webpack_require__(47)(Buffer, Hash)
	exports.sha256 = __webpack_require__(51)(Buffer, Hash)
	exports.sha512 = __webpack_require__(52)(Buffer, Hash)


/***/ },
/* 46 */
/***/ function(module, exports) {

	module.exports = function (Buffer) {

	  //prototype class for hash functions
	  function Hash (blockSize, finalSize) {
	    this._block = new Buffer(blockSize) //new Uint32Array(blockSize/4)
	    this._finalSize = finalSize
	    this._blockSize = blockSize
	    this._len = 0
	    this._s = 0
	  }

	  Hash.prototype.init = function () {
	    this._s = 0
	    this._len = 0
	  }

	  Hash.prototype.update = function (data, enc) {
	    if ("string" === typeof data) {
	      enc = enc || "utf8"
	      data = new Buffer(data, enc)
	    }

	    var l = this._len += data.length
	    var s = this._s = (this._s || 0)
	    var f = 0
	    var buffer = this._block

	    while (s < l) {
	      var t = Math.min(data.length, f + this._blockSize - (s % this._blockSize))
	      var ch = (t - f)

	      for (var i = 0; i < ch; i++) {
	        buffer[(s % this._blockSize) + i] = data[i + f]
	      }

	      s += ch
	      f += ch

	      if ((s % this._blockSize) === 0) {
	        this._update(buffer)
	      }
	    }
	    this._s = s

	    return this
	  }

	  Hash.prototype.digest = function (enc) {
	    // Suppose the length of the message M, in bits, is l
	    var l = this._len * 8

	    // Append the bit 1 to the end of the message
	    this._block[this._len % this._blockSize] = 0x80

	    // and then k zero bits, where k is the smallest non-negative solution to the equation (l + 1 + k) === finalSize mod blockSize
	    this._block.fill(0, this._len % this._blockSize + 1)

	    if (l % (this._blockSize * 8) >= this._finalSize * 8) {
	      this._update(this._block)
	      this._block.fill(0)
	    }

	    // to this append the block which is equal to the number l written in binary
	    // TODO: handle case where l is > Math.pow(2, 29)
	    this._block.writeInt32BE(l, this._blockSize - 4)

	    var hash = this._update(this._block) || this._hash()

	    return enc ? hash.toString(enc) : hash
	  }

	  Hash.prototype._update = function () {
	    throw new Error('_update must be implemented by subclass')
	  }

	  return Hash
	}


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
	 * in FIPS PUB 180-1
	 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 * Distributed under the BSD License
	 * See http://pajhome.org.uk/crypt/md5 for details.
	 */

	var inherits = __webpack_require__(48).inherits

	module.exports = function (Buffer, Hash) {

	  var A = 0|0
	  var B = 4|0
	  var C = 8|0
	  var D = 12|0
	  var E = 16|0

	  var W = new (typeof Int32Array === 'undefined' ? Array : Int32Array)(80)

	  var POOL = []

	  function Sha1 () {
	    if(POOL.length)
	      return POOL.pop().init()

	    if(!(this instanceof Sha1)) return new Sha1()
	    this._w = W
	    Hash.call(this, 16*4, 14*4)

	    this._h = null
	    this.init()
	  }

	  inherits(Sha1, Hash)

	  Sha1.prototype.init = function () {
	    this._a = 0x67452301
	    this._b = 0xefcdab89
	    this._c = 0x98badcfe
	    this._d = 0x10325476
	    this._e = 0xc3d2e1f0

	    Hash.prototype.init.call(this)
	    return this
	  }

	  Sha1.prototype._POOL = POOL
	  Sha1.prototype._update = function (X) {

	    var a, b, c, d, e, _a, _b, _c, _d, _e

	    a = _a = this._a
	    b = _b = this._b
	    c = _c = this._c
	    d = _d = this._d
	    e = _e = this._e

	    var w = this._w

	    for(var j = 0; j < 80; j++) {
	      var W = w[j] = j < 16 ? X.readInt32BE(j*4)
	        : rol(w[j - 3] ^ w[j -  8] ^ w[j - 14] ^ w[j - 16], 1)

	      var t = add(
	        add(rol(a, 5), sha1_ft(j, b, c, d)),
	        add(add(e, W), sha1_kt(j))
	      )

	      e = d
	      d = c
	      c = rol(b, 30)
	      b = a
	      a = t
	    }

	    this._a = add(a, _a)
	    this._b = add(b, _b)
	    this._c = add(c, _c)
	    this._d = add(d, _d)
	    this._e = add(e, _e)
	  }

	  Sha1.prototype._hash = function () {
	    if(POOL.length < 100) POOL.push(this)
	    var H = new Buffer(20)
	    //console.log(this._a|0, this._b|0, this._c|0, this._d|0, this._e|0)
	    H.writeInt32BE(this._a|0, A)
	    H.writeInt32BE(this._b|0, B)
	    H.writeInt32BE(this._c|0, C)
	    H.writeInt32BE(this._d|0, D)
	    H.writeInt32BE(this._e|0, E)
	    return H
	  }

	  /*
	   * Perform the appropriate triplet combination function for the current
	   * iteration
	   */
	  function sha1_ft(t, b, c, d) {
	    if(t < 20) return (b & c) | ((~b) & d);
	    if(t < 40) return b ^ c ^ d;
	    if(t < 60) return (b & c) | (b & d) | (c & d);
	    return b ^ c ^ d;
	  }

	  /*
	   * Determine the appropriate additive constant for the current iteration
	   */
	  function sha1_kt(t) {
	    return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :
	           (t < 60) ? -1894007588 : -899497514;
	  }

	  /*
	   * Add integers, wrapping at 2^32. This uses 16-bit operations internally
	   * to work around bugs in some JS interpreters.
	   * //dominictarr: this is 10 years old, so maybe this can be dropped?)
	   *
	   */
	  function add(x, y) {
	    return (x + y ) | 0
	  //lets see how this goes on testling.
	  //  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
	  //  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
	  //  return (msw << 16) | (lsw & 0xFFFF);
	  }

	  /*
	   * Bitwise rotate a 32-bit number to the left.
	   */
	  function rol(num, cnt) {
	    return (num << cnt) | (num >>> (32 - cnt));
	  }

	  return Sha1
	}


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	var formatRegExp = /%[sdj%]/g;
	exports.format = function(f) {
	  if (!isString(f)) {
	    var objects = [];
	    for (var i = 0; i < arguments.length; i++) {
	      objects.push(inspect(arguments[i]));
	    }
	    return objects.join(' ');
	  }

	  var i = 1;
	  var args = arguments;
	  var len = args.length;
	  var str = String(f).replace(formatRegExp, function(x) {
	    if (x === '%%') return '%';
	    if (i >= len) return x;
	    switch (x) {
	      case '%s': return String(args[i++]);
	      case '%d': return Number(args[i++]);
	      case '%j':
	        try {
	          return JSON.stringify(args[i++]);
	        } catch (_) {
	          return '[Circular]';
	        }
	      default:
	        return x;
	    }
	  });
	  for (var x = args[i]; i < len; x = args[++i]) {
	    if (isNull(x) || !isObject(x)) {
	      str += ' ' + x;
	    } else {
	      str += ' ' + inspect(x);
	    }
	  }
	  return str;
	};


	// Mark that a method should not be used.
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.
	exports.deprecate = function(fn, msg) {
	  // Allow for deprecating things in the process of starting up.
	  if (isUndefined(global.process)) {
	    return function() {
	      return exports.deprecate(fn, msg).apply(this, arguments);
	    };
	  }

	  if (process.noDeprecation === true) {
	    return fn;
	  }

	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (process.throwDeprecation) {
	        throw new Error(msg);
	      } else if (process.traceDeprecation) {
	        console.trace(msg);
	      } else {
	        console.error(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }

	  return deprecated;
	};


	var debugs = {};
	var debugEnviron;
	exports.debuglog = function(set) {
	  if (isUndefined(debugEnviron))
	    debugEnviron = process.env.NODE_DEBUG || '';
	  set = set.toUpperCase();
	  if (!debugs[set]) {
	    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
	      var pid = process.pid;
	      debugs[set] = function() {
	        var msg = exports.format.apply(exports, arguments);
	        console.error('%s %d: %s', set, pid, msg);
	      };
	    } else {
	      debugs[set] = function() {};
	    }
	  }
	  return debugs[set];
	};


	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
	/* legacy: obj, showHidden, depth, colors*/
	function inspect(obj, opts) {
	  // default options
	  var ctx = {
	    seen: [],
	    stylize: stylizeNoColor
	  };
	  // legacy...
	  if (arguments.length >= 3) ctx.depth = arguments[2];
	  if (arguments.length >= 4) ctx.colors = arguments[3];
	  if (isBoolean(opts)) {
	    // legacy...
	    ctx.showHidden = opts;
	  } else if (opts) {
	    // got an "options" object
	    exports._extend(ctx, opts);
	  }
	  // set default options
	  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
	  if (isUndefined(ctx.depth)) ctx.depth = 2;
	  if (isUndefined(ctx.colors)) ctx.colors = false;
	  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
	  if (ctx.colors) ctx.stylize = stylizeWithColor;
	  return formatValue(ctx, obj, ctx.depth);
	}
	exports.inspect = inspect;


	// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
	inspect.colors = {
	  'bold' : [1, 22],
	  'italic' : [3, 23],
	  'underline' : [4, 24],
	  'inverse' : [7, 27],
	  'white' : [37, 39],
	  'grey' : [90, 39],
	  'black' : [30, 39],
	  'blue' : [34, 39],
	  'cyan' : [36, 39],
	  'green' : [32, 39],
	  'magenta' : [35, 39],
	  'red' : [31, 39],
	  'yellow' : [33, 39]
	};

	// Don't use 'blue' not visible on cmd.exe
	inspect.styles = {
	  'special': 'cyan',
	  'number': 'yellow',
	  'boolean': 'yellow',
	  'undefined': 'grey',
	  'null': 'bold',
	  'string': 'green',
	  'date': 'magenta',
	  // "name": intentionally not styling
	  'regexp': 'red'
	};


	function stylizeWithColor(str, styleType) {
	  var style = inspect.styles[styleType];

	  if (style) {
	    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
	           '\u001b[' + inspect.colors[style][1] + 'm';
	  } else {
	    return str;
	  }
	}


	function stylizeNoColor(str, styleType) {
	  return str;
	}


	function arrayToHash(array) {
	  var hash = {};

	  array.forEach(function(val, idx) {
	    hash[val] = true;
	  });

	  return hash;
	}


	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (ctx.customInspect &&
	      value &&
	      isFunction(value.inspect) &&
	      // Filter out the util module, it's inspect function is special
	      value.inspect !== exports.inspect &&
	      // Also filter out any prototype objects using the circular check.
	      !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes, ctx);
	    if (!isString(ret)) {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }

	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }

	  // Look up the keys of the object.
	  var keys = Object.keys(value);
	  var visibleKeys = arrayToHash(keys);

	  if (ctx.showHidden) {
	    keys = Object.getOwnPropertyNames(value);
	  }

	  // IE doesn't make error fields non-enumerable
	  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
	  if (isError(value)
	      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
	    return formatError(value);
	  }

	  // Some type of object without properties can be shortcutted.
	  if (keys.length === 0) {
	    if (isFunction(value)) {
	      var name = value.name ? ': ' + value.name : '';
	      return ctx.stylize('[Function' + name + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }

	  var base = '', array = false, braces = ['{', '}'];

	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }

	  // Make functions say that they are functions
	  if (isFunction(value)) {
	    var n = value.name ? ': ' + value.name : '';
	    base = ' [Function' + n + ']';
	  }

	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }

	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }

	  // Make error with message first say the error
	  if (isError(value)) {
	    base = ' ' + formatError(value);
	  }

	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }

	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }

	  ctx.seen.push(value);

	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function(key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }

	  ctx.seen.pop();

	  return reduceToSingleString(output, base, braces);
	}


	function formatPrimitive(ctx, value) {
	  if (isUndefined(value))
	    return ctx.stylize('undefined', 'undefined');
	  if (isString(value)) {
	    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
	                                             .replace(/'/g, "\\'")
	                                             .replace(/\\"/g, '"') + '\'';
	    return ctx.stylize(simple, 'string');
	  }
	  if (isNumber(value))
	    return ctx.stylize('' + value, 'number');
	  if (isBoolean(value))
	    return ctx.stylize('' + value, 'boolean');
	  // For some reason typeof null is "object", so special case here.
	  if (isNull(value))
	    return ctx.stylize('null', 'null');
	}


	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}


	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (hasOwnProperty(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function(key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          key, true));
	    }
	  });
	  return output;
	}


	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str, desc;
	  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
	  if (desc.get) {
	    if (desc.set) {
	      str = ctx.stylize('[Getter/Setter]', 'special');
	    } else {
	      str = ctx.stylize('[Getter]', 'special');
	    }
	  } else {
	    if (desc.set) {
	      str = ctx.stylize('[Setter]', 'special');
	    }
	  }
	  if (!hasOwnProperty(visibleKeys, key)) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(desc.value) < 0) {
	      if (isNull(recurseTimes)) {
	        str = formatValue(ctx, desc.value, null);
	      } else {
	        str = formatValue(ctx, desc.value, recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function(line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function(line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (isUndefined(name)) {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'")
	                 .replace(/\\"/g, '"')
	                 .replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }

	  return name + ': ' + str;
	}


	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function(prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
	  }, 0);

	  if (length > 60) {
	    return braces[0] +
	           (base === '' ? '' : base + '\n ') +
	           ' ' +
	           output.join(',\n  ') +
	           ' ' +
	           braces[1];
	  }

	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}


	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;

	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;

	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;

	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;

	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;

	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;

	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;

	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;

	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;

	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;

	function isError(e) {
	  return isObject(e) &&
	      (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;

	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;

	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;

	exports.isBuffer = __webpack_require__(49);

	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}


	function pad(n) {
	  return n < 10 ? '0' + n.toString(10) : n.toString(10);
	}


	var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
	              'Oct', 'Nov', 'Dec'];

	// 26 Feb 16:19:34
	function timestamp() {
	  var d = new Date();
	  var time = [pad(d.getHours()),
	              pad(d.getMinutes()),
	              pad(d.getSeconds())].join(':');
	  return [d.getDate(), months[d.getMonth()], time].join(' ');
	}


	// log is just a thin wrapper to console.log that prepends a timestamp
	exports.log = function() {
	  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
	};


	/**
	 * Inherit the prototype methods from one constructor into another.
	 *
	 * The Function.prototype.inherits from lang.js rewritten as a standalone
	 * function (not on Function.prototype). NOTE: If this file is to be loaded
	 * during bootstrapping this function needs to be rewritten using some native
	 * functions as prototype setup using normal JavaScript does not work as
	 * expected during bootstrapping (see mirror.js in r114903).
	 *
	 * @param {function} ctor Constructor function which needs to inherit the
	 *     prototype.
	 * @param {function} superCtor Constructor function to inherit prototype from.
	 */
	exports.inherits = __webpack_require__(50);

	exports._extend = function(origin, add) {
	  // Don't do anything if add isn't an object
	  if (!add || !isObject(add)) return origin;

	  var keys = Object.keys(add);
	  var i = keys.length;
	  while (i--) {
	    origin[keys[i]] = add[keys[i]];
	  }
	  return origin;
	};

	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(3)))

/***/ },
/* 49 */
/***/ function(module, exports) {

	module.exports = function isBuffer(arg) {
	  return arg && typeof arg === 'object'
	    && typeof arg.copy === 'function'
	    && typeof arg.fill === 'function'
	    && typeof arg.readUInt8 === 'function';
	}

/***/ },
/* 50 */
/***/ function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
	 * in FIPS 180-2
	 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 *
	 */

	var inherits = __webpack_require__(48).inherits

	module.exports = function (Buffer, Hash) {

	  var K = [
	      0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
	      0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
	      0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
	      0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
	      0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
	      0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
	      0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
	      0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
	      0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
	      0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
	      0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
	      0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
	      0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
	      0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
	      0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
	      0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
	    ]

	  var W = new Array(64)

	  function Sha256() {
	    this.init()

	    this._w = W //new Array(64)

	    Hash.call(this, 16*4, 14*4)
	  }

	  inherits(Sha256, Hash)

	  Sha256.prototype.init = function () {

	    this._a = 0x6a09e667|0
	    this._b = 0xbb67ae85|0
	    this._c = 0x3c6ef372|0
	    this._d = 0xa54ff53a|0
	    this._e = 0x510e527f|0
	    this._f = 0x9b05688c|0
	    this._g = 0x1f83d9ab|0
	    this._h = 0x5be0cd19|0

	    this._len = this._s = 0

	    return this
	  }

	  function S (X, n) {
	    return (X >>> n) | (X << (32 - n));
	  }

	  function R (X, n) {
	    return (X >>> n);
	  }

	  function Ch (x, y, z) {
	    return ((x & y) ^ ((~x) & z));
	  }

	  function Maj (x, y, z) {
	    return ((x & y) ^ (x & z) ^ (y & z));
	  }

	  function Sigma0256 (x) {
	    return (S(x, 2) ^ S(x, 13) ^ S(x, 22));
	  }

	  function Sigma1256 (x) {
	    return (S(x, 6) ^ S(x, 11) ^ S(x, 25));
	  }

	  function Gamma0256 (x) {
	    return (S(x, 7) ^ S(x, 18) ^ R(x, 3));
	  }

	  function Gamma1256 (x) {
	    return (S(x, 17) ^ S(x, 19) ^ R(x, 10));
	  }

	  Sha256.prototype._update = function(M) {

	    var W = this._w
	    var a, b, c, d, e, f, g, h
	    var T1, T2

	    a = this._a | 0
	    b = this._b | 0
	    c = this._c | 0
	    d = this._d | 0
	    e = this._e | 0
	    f = this._f | 0
	    g = this._g | 0
	    h = this._h | 0

	    for (var j = 0; j < 64; j++) {
	      var w = W[j] = j < 16
	        ? M.readInt32BE(j * 4)
	        : Gamma1256(W[j - 2]) + W[j - 7] + Gamma0256(W[j - 15]) + W[j - 16]

	      T1 = h + Sigma1256(e) + Ch(e, f, g) + K[j] + w

	      T2 = Sigma0256(a) + Maj(a, b, c);
	      h = g; g = f; f = e; e = d + T1; d = c; c = b; b = a; a = T1 + T2;
	    }

	    this._a = (a + this._a) | 0
	    this._b = (b + this._b) | 0
	    this._c = (c + this._c) | 0
	    this._d = (d + this._d) | 0
	    this._e = (e + this._e) | 0
	    this._f = (f + this._f) | 0
	    this._g = (g + this._g) | 0
	    this._h = (h + this._h) | 0

	  };

	  Sha256.prototype._hash = function () {
	    var H = new Buffer(32)

	    H.writeInt32BE(this._a,  0)
	    H.writeInt32BE(this._b,  4)
	    H.writeInt32BE(this._c,  8)
	    H.writeInt32BE(this._d, 12)
	    H.writeInt32BE(this._e, 16)
	    H.writeInt32BE(this._f, 20)
	    H.writeInt32BE(this._g, 24)
	    H.writeInt32BE(this._h, 28)

	    return H
	  }

	  return Sha256

	}


/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	var inherits = __webpack_require__(48).inherits

	module.exports = function (Buffer, Hash) {
	  var K = [
	    0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
	    0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
	    0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
	    0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
	    0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
	    0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
	    0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
	    0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
	    0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
	    0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
	    0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
	    0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
	    0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
	    0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
	    0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
	    0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
	    0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
	    0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
	    0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
	    0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
	    0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
	    0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
	    0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
	    0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
	    0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
	    0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
	    0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
	    0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
	    0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
	    0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
	    0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
	    0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
	    0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
	    0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
	    0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
	    0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
	    0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
	    0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
	    0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
	    0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
	  ]

	  var W = new Array(160)

	  function Sha512() {
	    this.init()
	    this._w = W

	    Hash.call(this, 128, 112)
	  }

	  inherits(Sha512, Hash)

	  Sha512.prototype.init = function () {

	    this._a = 0x6a09e667|0
	    this._b = 0xbb67ae85|0
	    this._c = 0x3c6ef372|0
	    this._d = 0xa54ff53a|0
	    this._e = 0x510e527f|0
	    this._f = 0x9b05688c|0
	    this._g = 0x1f83d9ab|0
	    this._h = 0x5be0cd19|0

	    this._al = 0xf3bcc908|0
	    this._bl = 0x84caa73b|0
	    this._cl = 0xfe94f82b|0
	    this._dl = 0x5f1d36f1|0
	    this._el = 0xade682d1|0
	    this._fl = 0x2b3e6c1f|0
	    this._gl = 0xfb41bd6b|0
	    this._hl = 0x137e2179|0

	    this._len = this._s = 0

	    return this
	  }

	  function S (X, Xl, n) {
	    return (X >>> n) | (Xl << (32 - n))
	  }

	  function Ch (x, y, z) {
	    return ((x & y) ^ ((~x) & z));
	  }

	  function Maj (x, y, z) {
	    return ((x & y) ^ (x & z) ^ (y & z));
	  }

	  Sha512.prototype._update = function(M) {

	    var W = this._w
	    var a, b, c, d, e, f, g, h
	    var al, bl, cl, dl, el, fl, gl, hl

	    a = this._a | 0
	    b = this._b | 0
	    c = this._c | 0
	    d = this._d | 0
	    e = this._e | 0
	    f = this._f | 0
	    g = this._g | 0
	    h = this._h | 0

	    al = this._al | 0
	    bl = this._bl | 0
	    cl = this._cl | 0
	    dl = this._dl | 0
	    el = this._el | 0
	    fl = this._fl | 0
	    gl = this._gl | 0
	    hl = this._hl | 0

	    for (var i = 0; i < 80; i++) {
	      var j = i * 2

	      var Wi, Wil

	      if (i < 16) {
	        Wi = W[j] = M.readInt32BE(j * 4)
	        Wil = W[j + 1] = M.readInt32BE(j * 4 + 4)

	      } else {
	        var x  = W[j - 15*2]
	        var xl = W[j - 15*2 + 1]
	        var gamma0  = S(x, xl, 1) ^ S(x, xl, 8) ^ (x >>> 7)
	        var gamma0l = S(xl, x, 1) ^ S(xl, x, 8) ^ S(xl, x, 7)

	        x  = W[j - 2*2]
	        xl = W[j - 2*2 + 1]
	        var gamma1  = S(x, xl, 19) ^ S(xl, x, 29) ^ (x >>> 6)
	        var gamma1l = S(xl, x, 19) ^ S(x, xl, 29) ^ S(xl, x, 6)

	        // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
	        var Wi7  = W[j - 7*2]
	        var Wi7l = W[j - 7*2 + 1]

	        var Wi16  = W[j - 16*2]
	        var Wi16l = W[j - 16*2 + 1]

	        Wil = gamma0l + Wi7l
	        Wi  = gamma0  + Wi7 + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0)
	        Wil = Wil + gamma1l
	        Wi  = Wi  + gamma1  + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0)
	        Wil = Wil + Wi16l
	        Wi  = Wi  + Wi16 + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0)

	        W[j] = Wi
	        W[j + 1] = Wil
	      }

	      var maj = Maj(a, b, c)
	      var majl = Maj(al, bl, cl)

	      var sigma0h = S(a, al, 28) ^ S(al, a, 2) ^ S(al, a, 7)
	      var sigma0l = S(al, a, 28) ^ S(a, al, 2) ^ S(a, al, 7)
	      var sigma1h = S(e, el, 14) ^ S(e, el, 18) ^ S(el, e, 9)
	      var sigma1l = S(el, e, 14) ^ S(el, e, 18) ^ S(e, el, 9)

	      // t1 = h + sigma1 + ch + K[i] + W[i]
	      var Ki = K[j]
	      var Kil = K[j + 1]

	      var ch = Ch(e, f, g)
	      var chl = Ch(el, fl, gl)

	      var t1l = hl + sigma1l
	      var t1 = h + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0)
	      t1l = t1l + chl
	      t1 = t1 + ch + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0)
	      t1l = t1l + Kil
	      t1 = t1 + Ki + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0)
	      t1l = t1l + Wil
	      t1 = t1 + Wi + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0)

	      // t2 = sigma0 + maj
	      var t2l = sigma0l + majl
	      var t2 = sigma0h + maj + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0)

	      h  = g
	      hl = gl
	      g  = f
	      gl = fl
	      f  = e
	      fl = el
	      el = (dl + t1l) | 0
	      e  = (d + t1 + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0
	      d  = c
	      dl = cl
	      c  = b
	      cl = bl
	      b  = a
	      bl = al
	      al = (t1l + t2l) | 0
	      a  = (t1 + t2 + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0
	    }

	    this._al = (this._al + al) | 0
	    this._bl = (this._bl + bl) | 0
	    this._cl = (this._cl + cl) | 0
	    this._dl = (this._dl + dl) | 0
	    this._el = (this._el + el) | 0
	    this._fl = (this._fl + fl) | 0
	    this._gl = (this._gl + gl) | 0
	    this._hl = (this._hl + hl) | 0

	    this._a = (this._a + a + ((this._al >>> 0) < (al >>> 0) ? 1 : 0)) | 0
	    this._b = (this._b + b + ((this._bl >>> 0) < (bl >>> 0) ? 1 : 0)) | 0
	    this._c = (this._c + c + ((this._cl >>> 0) < (cl >>> 0) ? 1 : 0)) | 0
	    this._d = (this._d + d + ((this._dl >>> 0) < (dl >>> 0) ? 1 : 0)) | 0
	    this._e = (this._e + e + ((this._el >>> 0) < (el >>> 0) ? 1 : 0)) | 0
	    this._f = (this._f + f + ((this._fl >>> 0) < (fl >>> 0) ? 1 : 0)) | 0
	    this._g = (this._g + g + ((this._gl >>> 0) < (gl >>> 0) ? 1 : 0)) | 0
	    this._h = (this._h + h + ((this._hl >>> 0) < (hl >>> 0) ? 1 : 0)) | 0
	  }

	  Sha512.prototype._hash = function () {
	    var H = new Buffer(64)

	    function writeInt64BE(h, l, offset) {
	      H.writeInt32BE(h, offset)
	      H.writeInt32BE(l, offset + 4)
	    }

	    writeInt64BE(this._a, this._al, 0)
	    writeInt64BE(this._b, this._bl, 8)
	    writeInt64BE(this._c, this._cl, 16)
	    writeInt64BE(this._d, this._dl, 24)
	    writeInt64BE(this._e, this._el, 32)
	    writeInt64BE(this._f, this._fl, 40)
	    writeInt64BE(this._g, this._gl, 48)
	    writeInt64BE(this._h, this._hl, 56)

	    return H
	  }

	  return Sha512

	}


/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
	 * Digest Algorithm, as defined in RFC 1321.
	 * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 * Distributed under the BSD License
	 * See http://pajhome.org.uk/crypt/md5 for more info.
	 */

	var helpers = __webpack_require__(54);

	/*
	 * Calculate the MD5 of an array of little-endian words, and a bit length
	 */
	function core_md5(x, len)
	{
	  /* append padding */
	  x[len >> 5] |= 0x80 << ((len) % 32);
	  x[(((len + 64) >>> 9) << 4) + 14] = len;

	  var a =  1732584193;
	  var b = -271733879;
	  var c = -1732584194;
	  var d =  271733878;

	  for(var i = 0; i < x.length; i += 16)
	  {
	    var olda = a;
	    var oldb = b;
	    var oldc = c;
	    var oldd = d;

	    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);
	    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);
	    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);
	    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);
	    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);
	    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);
	    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);
	    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);
	    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);
	    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);
	    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);
	    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);
	    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);
	    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);
	    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);
	    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);

	    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);
	    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);
	    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);
	    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);
	    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);
	    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);
	    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);
	    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);
	    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);
	    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);
	    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);
	    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);
	    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);
	    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);
	    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);
	    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);

	    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);
	    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);
	    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);
	    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);
	    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);
	    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);
	    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);
	    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);
	    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);
	    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);
	    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);
	    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);
	    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);
	    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);
	    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);
	    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);

	    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);
	    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);
	    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);
	    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);
	    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);
	    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);
	    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);
	    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);
	    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);
	    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);
	    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);
	    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);
	    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);
	    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);
	    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);
	    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);

	    a = safe_add(a, olda);
	    b = safe_add(b, oldb);
	    c = safe_add(c, oldc);
	    d = safe_add(d, oldd);
	  }
	  return Array(a, b, c, d);

	}

	/*
	 * These functions implement the four basic operations the algorithm uses.
	 */
	function md5_cmn(q, a, b, x, s, t)
	{
	  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);
	}
	function md5_ff(a, b, c, d, x, s, t)
	{
	  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
	}
	function md5_gg(a, b, c, d, x, s, t)
	{
	  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
	}
	function md5_hh(a, b, c, d, x, s, t)
	{
	  return md5_cmn(b ^ c ^ d, a, b, x, s, t);
	}
	function md5_ii(a, b, c, d, x, s, t)
	{
	  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
	}

	/*
	 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
	 * to work around bugs in some JS interpreters.
	 */
	function safe_add(x, y)
	{
	  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
	  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
	  return (msw << 16) | (lsw & 0xFFFF);
	}

	/*
	 * Bitwise rotate a 32-bit number to the left.
	 */
	function bit_rol(num, cnt)
	{
	  return (num << cnt) | (num >>> (32 - cnt));
	}

	module.exports = function md5(buf) {
	  return helpers.hash(buf, core_md5, 16);
	};


/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var intSize = 4;
	var zeroBuffer = new Buffer(intSize); zeroBuffer.fill(0);
	var chrsz = 8;

	function toArray(buf, bigEndian) {
	  if ((buf.length % intSize) !== 0) {
	    var len = buf.length + (intSize - (buf.length % intSize));
	    buf = Buffer.concat([buf, zeroBuffer], len);
	  }

	  var arr = [];
	  var fn = bigEndian ? buf.readInt32BE : buf.readInt32LE;
	  for (var i = 0; i < buf.length; i += intSize) {
	    arr.push(fn.call(buf, i));
	  }
	  return arr;
	}

	function toBuffer(arr, size, bigEndian) {
	  var buf = new Buffer(size);
	  var fn = bigEndian ? buf.writeInt32BE : buf.writeInt32LE;
	  for (var i = 0; i < arr.length; i++) {
	    fn.call(buf, arr[i], i * 4, true);
	  }
	  return buf;
	}

	function hash(buf, fn, hashSize, bigEndian) {
	  if (!Buffer.isBuffer(buf)) buf = new Buffer(buf);
	  var arr = fn(toArray(buf, bigEndian), buf.length * chrsz);
	  return toBuffer(arr, hashSize, bigEndian);
	}

	module.exports = { hash: hash };

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38).Buffer))

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {
	module.exports = ripemd160



	/*
	CryptoJS v3.1.2
	code.google.com/p/crypto-js
	(c) 2009-2013 by Jeff Mott. All rights reserved.
	code.google.com/p/crypto-js/wiki/License
	*/
	/** @preserve
	(c) 2012 by Cédric Mesnil. All rights reserved.

	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
	    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/

	// Constants table
	var zl = [
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
	    7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,
	    3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,
	    1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,
	    4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13];
	var zr = [
	    5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,
	    6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,
	    15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,
	    8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,
	    12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11];
	var sl = [
	     11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,
	    7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,
	    11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,
	      11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,
	    9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ];
	var sr = [
	    8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,
	    9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,
	    9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,
	    15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,
	    8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ];

	var hl =  [ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E];
	var hr =  [ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000];

	var bytesToWords = function (bytes) {
	  var words = [];
	  for (var i = 0, b = 0; i < bytes.length; i++, b += 8) {
	    words[b >>> 5] |= bytes[i] << (24 - b % 32);
	  }
	  return words;
	};

	var wordsToBytes = function (words) {
	  var bytes = [];
	  for (var b = 0; b < words.length * 32; b += 8) {
	    bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);
	  }
	  return bytes;
	};

	var processBlock = function (H, M, offset) {

	  // Swap endian
	  for (var i = 0; i < 16; i++) {
	    var offset_i = offset + i;
	    var M_offset_i = M[offset_i];

	    // Swap
	    M[offset_i] = (
	        (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
	        (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
	    );
	  }

	  // Working variables
	  var al, bl, cl, dl, el;
	  var ar, br, cr, dr, er;

	  ar = al = H[0];
	  br = bl = H[1];
	  cr = cl = H[2];
	  dr = dl = H[3];
	  er = el = H[4];
	  // Computation
	  var t;
	  for (var i = 0; i < 80; i += 1) {
	    t = (al +  M[offset+zl[i]])|0;
	    if (i<16){
	        t +=  f1(bl,cl,dl) + hl[0];
	    } else if (i<32) {
	        t +=  f2(bl,cl,dl) + hl[1];
	    } else if (i<48) {
	        t +=  f3(bl,cl,dl) + hl[2];
	    } else if (i<64) {
	        t +=  f4(bl,cl,dl) + hl[3];
	    } else {// if (i<80) {
	        t +=  f5(bl,cl,dl) + hl[4];
	    }
	    t = t|0;
	    t =  rotl(t,sl[i]);
	    t = (t+el)|0;
	    al = el;
	    el = dl;
	    dl = rotl(cl, 10);
	    cl = bl;
	    bl = t;

	    t = (ar + M[offset+zr[i]])|0;
	    if (i<16){
	        t +=  f5(br,cr,dr) + hr[0];
	    } else if (i<32) {
	        t +=  f4(br,cr,dr) + hr[1];
	    } else if (i<48) {
	        t +=  f3(br,cr,dr) + hr[2];
	    } else if (i<64) {
	        t +=  f2(br,cr,dr) + hr[3];
	    } else {// if (i<80) {
	        t +=  f1(br,cr,dr) + hr[4];
	    }
	    t = t|0;
	    t =  rotl(t,sr[i]) ;
	    t = (t+er)|0;
	    ar = er;
	    er = dr;
	    dr = rotl(cr, 10);
	    cr = br;
	    br = t;
	  }
	  // Intermediate hash value
	  t    = (H[1] + cl + dr)|0;
	  H[1] = (H[2] + dl + er)|0;
	  H[2] = (H[3] + el + ar)|0;
	  H[3] = (H[4] + al + br)|0;
	  H[4] = (H[0] + bl + cr)|0;
	  H[0] =  t;
	};

	function f1(x, y, z) {
	  return ((x) ^ (y) ^ (z));
	}

	function f2(x, y, z) {
	  return (((x)&(y)) | ((~x)&(z)));
	}

	function f3(x, y, z) {
	  return (((x) | (~(y))) ^ (z));
	}

	function f4(x, y, z) {
	  return (((x) & (z)) | ((y)&(~(z))));
	}

	function f5(x, y, z) {
	  return ((x) ^ ((y) |(~(z))));
	}

	function rotl(x,n) {
	  return (x<<n) | (x>>>(32-n));
	}

	function ripemd160(message) {
	  var H = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0];

	  if (typeof message == 'string')
	    message = new Buffer(message, 'utf8');

	  var m = bytesToWords(message);

	  var nBitsLeft = message.length * 8;
	  var nBitsTotal = message.length * 8;

	  // Add padding
	  m[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	  m[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
	      (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |
	      (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)
	  );

	  for (var i=0 ; i<m.length; i += 16) {
	    processBlock(H, m, i);
	  }

	  // Swap endian
	  for (var i = 0; i < 5; i++) {
	      // Shortcut
	    var H_i = H[i];

	    // Swap
	    H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
	          (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);
	  }

	  var digestbytes = wordsToBytes(H);
	  return new Buffer(digestbytes);
	}



	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38).Buffer))

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(44)

	var zeroBuffer = new Buffer(128)
	zeroBuffer.fill(0)

	module.exports = Hmac

	function Hmac (alg, key) {
	  if(!(this instanceof Hmac)) return new Hmac(alg, key)
	  this._opad = opad
	  this._alg = alg

	  var blocksize = (alg === 'sha512') ? 128 : 64

	  key = this._key = !Buffer.isBuffer(key) ? new Buffer(key) : key

	  if(key.length > blocksize) {
	    key = createHash(alg).update(key).digest()
	  } else if(key.length < blocksize) {
	    key = Buffer.concat([key, zeroBuffer], blocksize)
	  }

	  var ipad = this._ipad = new Buffer(blocksize)
	  var opad = this._opad = new Buffer(blocksize)

	  for(var i = 0; i < blocksize; i++) {
	    ipad[i] = key[i] ^ 0x36
	    opad[i] = key[i] ^ 0x5C
	  }

	  this._hash = createHash(alg).update(ipad)
	}

	Hmac.prototype.update = function (data, enc) {
	  this._hash.update(data, enc)
	  return this
	}

	Hmac.prototype.digest = function (enc) {
	  var h = this._hash.digest()
	  return createHash(this._alg).update(this._opad).update(h).digest(enc)
	}


	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38).Buffer))

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	var pbkdf2Export = __webpack_require__(58)

	module.exports = function (crypto, exports) {
	  exports = exports || {}

	  var exported = pbkdf2Export(crypto)

	  exports.pbkdf2 = exported.pbkdf2
	  exports.pbkdf2Sync = exported.pbkdf2Sync

	  return exports
	}


/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {module.exports = function(crypto) {
	  function pbkdf2(password, salt, iterations, keylen, digest, callback) {
	    if ('function' === typeof digest) {
	      callback = digest
	      digest = undefined
	    }

	    if ('function' !== typeof callback)
	      throw new Error('No callback provided to pbkdf2')

	    setTimeout(function() {
	      var result

	      try {
	        result = pbkdf2Sync(password, salt, iterations, keylen, digest)
	      } catch (e) {
	        return callback(e)
	      }

	      callback(undefined, result)
	    })
	  }

	  function pbkdf2Sync(password, salt, iterations, keylen, digest) {
	    if ('number' !== typeof iterations)
	      throw new TypeError('Iterations not a number')

	    if (iterations < 0)
	      throw new TypeError('Bad iterations')

	    if ('number' !== typeof keylen)
	      throw new TypeError('Key length not a number')

	    if (keylen < 0)
	      throw new TypeError('Bad key length')

	    digest = digest || 'sha1'

	    if (!Buffer.isBuffer(password)) password = new Buffer(password)
	    if (!Buffer.isBuffer(salt)) salt = new Buffer(salt)

	    var hLen, l = 1, r, T
	    var DK = new Buffer(keylen)
	    var block1 = new Buffer(salt.length + 4)
	    salt.copy(block1, 0, 0, salt.length)

	    for (var i = 1; i <= l; i++) {
	      block1.writeUInt32BE(i, salt.length)

	      var U = crypto.createHmac(digest, password).update(block1).digest()

	      if (!hLen) {
	        hLen = U.length
	        T = new Buffer(hLen)
	        l = Math.ceil(keylen / hLen)
	        r = keylen - (l - 1) * hLen

	        if (keylen > (Math.pow(2, 32) - 1) * hLen)
	          throw new TypeError('keylen exceeds maximum length')
	      }

	      U.copy(T, 0, 0, hLen)

	      for (var j = 1; j < iterations; j++) {
	        U = crypto.createHmac(digest, password).update(U).digest()

	        for (var k = 0; k < hLen; k++) {
	          T[k] ^= U[k]
	        }
	      }

	      var destPos = (i - 1) * hLen
	      var len = (i == l ? r : hLen)
	      T.copy(DK, destPos, 0, len)
	    }

	    return DK
	  }

	  return {
	    pbkdf2: pbkdf2,
	    pbkdf2Sync: pbkdf2Sync
	  }
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38).Buffer))

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	if (process.env.NODE_ENV !== 'production') {
	  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
	    Symbol.for &&
	    Symbol.for('react.element')) ||
	    0xeac7;

	  var isValidElement = function(object) {
	    return typeof object === 'object' &&
	      object !== null &&
	      object.$$typeof === REACT_ELEMENT_TYPE;
	  };

	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  module.exports = __webpack_require__(60)(isValidElement, throwOnDirectAccess);
	} else {
	  // By explicitly using `prop-types` you are opting into new production behavior.
	  // http://fb.me/prop-types-in-prod
	  module.exports = __webpack_require__(61)();
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var assign = __webpack_require__(5);

	var ReactPropTypesSecret = __webpack_require__(12);
	var checkPropTypes = __webpack_require__(11);

	var printWarning = function() {};

	if (process.env.NODE_ENV !== 'production') {
	  printWarning = function(text) {
	    var message = 'Warning: ' + text;
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };
	}

	function emptyFunctionThatReturnsNull() {
	  return null;
	}

	module.exports = function(isValidElement, throwOnDirectAccess) {
	  /* global Symbol */
	  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	  /**
	   * Returns the iterator method function contained on the iterable object.
	   *
	   * Be sure to invoke the function with the iterable as context:
	   *
	   *     var iteratorFn = getIteratorFn(myIterable);
	   *     if (iteratorFn) {
	   *       var iterator = iteratorFn.call(myIterable);
	   *       ...
	   *     }
	   *
	   * @param {?object} maybeIterable
	   * @return {?function}
	   */
	  function getIteratorFn(maybeIterable) {
	    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  /**
	   * Collection of methods that allow declaration and validation of props that are
	   * supplied to React components. Example usage:
	   *
	   *   var Props = require('ReactPropTypes');
	   *   var MyArticle = React.createClass({
	   *     propTypes: {
	   *       // An optional string prop named "description".
	   *       description: Props.string,
	   *
	   *       // A required enum prop named "category".
	   *       category: Props.oneOf(['News','Photos']).isRequired,
	   *
	   *       // A prop named "dialog" that requires an instance of Dialog.
	   *       dialog: Props.instanceOf(Dialog).isRequired
	   *     },
	   *     render: function() { ... }
	   *   });
	   *
	   * A more formal specification of how these methods are used:
	   *
	   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	   *   decl := ReactPropTypes.{type}(.isRequired)?
	   *
	   * Each and every declaration produces a function with the same signature. This
	   * allows the creation of custom validation functions. For example:
	   *
	   *  var MyLink = React.createClass({
	   *    propTypes: {
	   *      // An optional string or URI prop named "href".
	   *      href: function(props, propName, componentName) {
	   *        var propValue = props[propName];
	   *        if (propValue != null && typeof propValue !== 'string' &&
	   *            !(propValue instanceof URI)) {
	   *          return new Error(
	   *            'Expected a string or an URI for ' + propName + ' in ' +
	   *            componentName
	   *          );
	   *        }
	   *      }
	   *    },
	   *    render: function() {...}
	   *  });
	   *
	   * @internal
	   */

	  var ANONYMOUS = '<<anonymous>>';

	  // Important!
	  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	  var ReactPropTypes = {
	    array: createPrimitiveTypeChecker('array'),
	    bool: createPrimitiveTypeChecker('boolean'),
	    func: createPrimitiveTypeChecker('function'),
	    number: createPrimitiveTypeChecker('number'),
	    object: createPrimitiveTypeChecker('object'),
	    string: createPrimitiveTypeChecker('string'),
	    symbol: createPrimitiveTypeChecker('symbol'),

	    any: createAnyTypeChecker(),
	    arrayOf: createArrayOfTypeChecker,
	    element: createElementTypeChecker(),
	    instanceOf: createInstanceTypeChecker,
	    node: createNodeChecker(),
	    objectOf: createObjectOfTypeChecker,
	    oneOf: createEnumTypeChecker,
	    oneOfType: createUnionTypeChecker,
	    shape: createShapeTypeChecker,
	    exact: createStrictShapeTypeChecker,
	  };

	  /**
	   * inlined Object.is polyfill to avoid requiring consumers ship their own
	   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	   */
	  /*eslint-disable no-self-compare*/
	  function is(x, y) {
	    // SameValue algorithm
	    if (x === y) {
	      // Steps 1-5, 7-10
	      // Steps 6.b-6.e: +0 != -0
	      return x !== 0 || 1 / x === 1 / y;
	    } else {
	      // Step 6.a: NaN == NaN
	      return x !== x && y !== y;
	    }
	  }
	  /*eslint-enable no-self-compare*/

	  /**
	   * We use an Error-like object for backward compatibility as people may call
	   * PropTypes directly and inspect their output. However, we don't use real
	   * Errors anymore. We don't inspect their stack anyway, and creating them
	   * is prohibitively expensive if they are created too often, such as what
	   * happens in oneOfType() for any type before the one that matched.
	   */
	  function PropTypeError(message) {
	    this.message = message;
	    this.stack = '';
	  }
	  // Make `instanceof Error` still work for returned errors.
	  PropTypeError.prototype = Error.prototype;

	  function createChainableTypeChecker(validate) {
	    if (process.env.NODE_ENV !== 'production') {
	      var manualPropTypeCallCache = {};
	      var manualPropTypeWarningCount = 0;
	    }
	    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	      componentName = componentName || ANONYMOUS;
	      propFullName = propFullName || propName;

	      if (secret !== ReactPropTypesSecret) {
	        if (throwOnDirectAccess) {
	          // New behavior only for users of `prop-types` package
	          var err = new Error(
	            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	            'Use `PropTypes.checkPropTypes()` to call them. ' +
	            'Read more at http://fb.me/use-check-prop-types'
	          );
	          err.name = 'Invariant Violation';
	          throw err;
	        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
	          // Old behavior for people using React.PropTypes
	          var cacheKey = componentName + ':' + propName;
	          if (
	            !manualPropTypeCallCache[cacheKey] &&
	            // Avoid spamming the console because they are often not actionable except for lib authors
	            manualPropTypeWarningCount < 3
	          ) {
	            printWarning(
	              'You are manually calling a React.PropTypes validation ' +
	              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
	              'and will throw in the standalone `prop-types` package. ' +
	              'You may be seeing this warning due to a third-party PropTypes ' +
	              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
	            );
	            manualPropTypeCallCache[cacheKey] = true;
	            manualPropTypeWarningCount++;
	          }
	        }
	      }
	      if (props[propName] == null) {
	        if (isRequired) {
	          if (props[propName] === null) {
	            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	          }
	          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	        }
	        return null;
	      } else {
	        return validate(props, propName, componentName, location, propFullName);
	      }
	    }

	    var chainedCheckType = checkType.bind(null, false);
	    chainedCheckType.isRequired = checkType.bind(null, true);

	    return chainedCheckType;
	  }

	  function createPrimitiveTypeChecker(expectedType) {
	    function validate(props, propName, componentName, location, propFullName, secret) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== expectedType) {
	        // `propValue` being instance of, say, date/regexp, pass the 'object'
	        // check, but we can offer a more precise error message here rather than
	        // 'of type `object`'.
	        var preciseType = getPreciseType(propValue);

	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createAnyTypeChecker() {
	    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
	  }

	  function createArrayOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	      }
	      var propValue = props[propName];
	      if (!Array.isArray(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	      }
	      for (var i = 0; i < propValue.length; i++) {
	        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createElementTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!isValidElement(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createInstanceTypeChecker(expectedClass) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!(props[propName] instanceof expectedClass)) {
	        var expectedClassName = expectedClass.name || ANONYMOUS;
	        var actualClassName = getClassName(props[propName]);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createEnumTypeChecker(expectedValues) {
	    if (!Array.isArray(expectedValues)) {
	      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	      return emptyFunctionThatReturnsNull;
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      for (var i = 0; i < expectedValues.length; i++) {
	        if (is(propValue, expectedValues[i])) {
	          return null;
	        }
	      }

	      var valuesString = JSON.stringify(expectedValues);
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createObjectOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	      }
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	      }
	      for (var key in propValue) {
	        if (propValue.hasOwnProperty(key)) {
	          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	          if (error instanceof Error) {
	            return error;
	          }
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createUnionTypeChecker(arrayOfTypeCheckers) {
	    if (!Array.isArray(arrayOfTypeCheckers)) {
	      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	      return emptyFunctionThatReturnsNull;
	    }

	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (typeof checker !== 'function') {
	        printWarning(
	          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
	          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
	        );
	        return emptyFunctionThatReturnsNull;
	      }
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	        var checker = arrayOfTypeCheckers[i];
	        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	          return null;
	        }
	      }

	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createNodeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!isNode(props[propName])) {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      for (var key in shapeTypes) {
	        var checker = shapeTypes[key];
	        if (!checker) {
	          continue;
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createStrictShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      // We need to check all keys in case some are required but missing from
	      // props.
	      var allKeys = assign({}, props[propName], shapeTypes);
	      for (var key in allKeys) {
	        var checker = shapeTypes[key];
	        if (!checker) {
	          return new PropTypeError(
	            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
	            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
	            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
	          );
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }

	    return createChainableTypeChecker(validate);
	  }

	  function isNode(propValue) {
	    switch (typeof propValue) {
	      case 'number':
	      case 'string':
	      case 'undefined':
	        return true;
	      case 'boolean':
	        return !propValue;
	      case 'object':
	        if (Array.isArray(propValue)) {
	          return propValue.every(isNode);
	        }
	        if (propValue === null || isValidElement(propValue)) {
	          return true;
	        }

	        var iteratorFn = getIteratorFn(propValue);
	        if (iteratorFn) {
	          var iterator = iteratorFn.call(propValue);
	          var step;
	          if (iteratorFn !== propValue.entries) {
	            while (!(step = iterator.next()).done) {
	              if (!isNode(step.value)) {
	                return false;
	              }
	            }
	          } else {
	            // Iterator will provide entry [k,v] tuples rather than values.
	            while (!(step = iterator.next()).done) {
	              var entry = step.value;
	              if (entry) {
	                if (!isNode(entry[1])) {
	                  return false;
	                }
	              }
	            }
	          }
	        } else {
	          return false;
	        }

	        return true;
	      default:
	        return false;
	    }
	  }

	  function isSymbol(propType, propValue) {
	    // Native Symbol.
	    if (propType === 'symbol') {
	      return true;
	    }

	    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	    if (propValue['@@toStringTag'] === 'Symbol') {
	      return true;
	    }

	    // Fallback for non-spec compliant Symbols which are polyfilled.
	    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	      return true;
	    }

	    return false;
	  }

	  // Equivalent of `typeof` but with special handling for array and regexp.
	  function getPropType(propValue) {
	    var propType = typeof propValue;
	    if (Array.isArray(propValue)) {
	      return 'array';
	    }
	    if (propValue instanceof RegExp) {
	      // Old webkits (at least until Android 4.0) return 'function' rather than
	      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	      // passes PropTypes.object.
	      return 'object';
	    }
	    if (isSymbol(propType, propValue)) {
	      return 'symbol';
	    }
	    return propType;
	  }

	  // This handles more types than `getPropType`. Only used for error messages.
	  // See `createPrimitiveTypeChecker`.
	  function getPreciseType(propValue) {
	    if (typeof propValue === 'undefined' || propValue === null) {
	      return '' + propValue;
	    }
	    var propType = getPropType(propValue);
	    if (propType === 'object') {
	      if (propValue instanceof Date) {
	        return 'date';
	      } else if (propValue instanceof RegExp) {
	        return 'regexp';
	      }
	    }
	    return propType;
	  }

	  // Returns a string that is postfixed to a warning about an invalid type.
	  // For example, "undefined" or "of type array"
	  function getPostfixForTypeWarning(value) {
	    var type = getPreciseType(value);
	    switch (type) {
	      case 'array':
	      case 'object':
	        return 'an ' + type;
	      case 'boolean':
	      case 'date':
	      case 'regexp':
	        return 'a ' + type;
	      default:
	        return type;
	    }
	  }

	  // Returns class name of the object, if any.
	  function getClassName(propValue) {
	    if (!propValue.constructor || !propValue.constructor.name) {
	      return ANONYMOUS;
	    }
	    return propValue.constructor.name;
	  }

	  ReactPropTypes.checkPropTypes = checkPropTypes;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var ReactPropTypesSecret = __webpack_require__(12);

	function emptyFunction() {}

	module.exports = function() {
	  function shim(props, propName, componentName, location, propFullName, secret) {
	    if (secret === ReactPropTypesSecret) {
	      // It is still safe when called from React.
	      return;
	    }
	    var err = new Error(
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	    err.name = 'Invariant Violation';
	    throw err;
	  };
	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  };
	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  var ReactPropTypes = {
	    array: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,

	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim,
	    exact: getShim
	  };

	  ReactPropTypes.checkPropTypes = emptyFunction;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};


/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {
		 true ? factory(exports, __webpack_require__(63), __webpack_require__(2), __webpack_require__(13)) :
		typeof define === 'function' && define.amd ? define(['exports', 'mobx', 'react', 'react-dom'], factory) :
		(factory((global.mobxReact = {}),global.mobx,global.React,global.ReactDOM));
	}(this, (function (exports,mobx,React,reactDom) { 'use strict';

	var React__default = 'default' in React ? React['default'] : React;

	// These functions can be stubbed out in specific environments
	var unstable_batchedUpdates$1 = undefined;

	var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};





	function createCommonjsModule(fn, module) {
		return module = { exports: {} }, fn(module, module.exports), module.exports;
	}

	var hoistNonReactStatics = createCommonjsModule(function (module, exports) {
	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	(function (global, factory) {
	    module.exports = factory();
	}(commonjsGlobal, (function () {
	    'use strict';
	    
	    var REACT_STATICS = {
	        childContextTypes: true,
	        contextTypes: true,
	        defaultProps: true,
	        displayName: true,
	        getDefaultProps: true,
	        getDerivedStateFromProps: true,
	        mixins: true,
	        propTypes: true,
	        type: true
	    };
	    
	    var KNOWN_STATICS = {
	        name: true,
	        length: true,
	        prototype: true,
	        caller: true,
	        callee: true,
	        arguments: true,
	        arity: true
	    };
	    
	    var defineProperty = Object.defineProperty;
	    var getOwnPropertyNames = Object.getOwnPropertyNames;
	    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
	    var getPrototypeOf = Object.getPrototypeOf;
	    var objectPrototype = getPrototypeOf && getPrototypeOf(Object);
	    
	    return function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
	        if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
	            
	            if (objectPrototype) {
	                var inheritedComponent = getPrototypeOf(sourceComponent);
	                if (inheritedComponent && inheritedComponent !== objectPrototype) {
	                    hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
	                }
	            }
	            
	            var keys = getOwnPropertyNames(sourceComponent);
	            
	            if (getOwnPropertySymbols) {
	                keys = keys.concat(getOwnPropertySymbols(sourceComponent));
	            }
	            
	            for (var i = 0; i < keys.length; ++i) {
	                var key = keys[i];
	                if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
	                    var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
	                    try { // Avoid failures from read-only properties
	                        defineProperty(targetComponent, key, descriptor);
	                    } catch (e) {}
	                }
	            }
	            
	            return targetComponent;
	        }
	        
	        return targetComponent;
	    };
	})));
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
	  return typeof obj;
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	};





	var asyncGenerator = function () {
	  function AwaitValue(value) {
	    this.value = value;
	  }

	  function AsyncGenerator(gen) {
	    var front, back;

	    function send(key, arg) {
	      return new Promise(function (resolve, reject) {
	        var request = {
	          key: key,
	          arg: arg,
	          resolve: resolve,
	          reject: reject,
	          next: null
	        };

	        if (back) {
	          back = back.next = request;
	        } else {
	          front = back = request;
	          resume(key, arg);
	        }
	      });
	    }

	    function resume(key, arg) {
	      try {
	        var result = gen[key](arg);
	        var value = result.value;

	        if (value instanceof AwaitValue) {
	          Promise.resolve(value.value).then(function (arg) {
	            resume("next", arg);
	          }, function (arg) {
	            resume("throw", arg);
	          });
	        } else {
	          settle(result.done ? "return" : "normal", result.value);
	        }
	      } catch (err) {
	        settle("throw", err);
	      }
	    }

	    function settle(type, value) {
	      switch (type) {
	        case "return":
	          front.resolve({
	            value: value,
	            done: true
	          });
	          break;

	        case "throw":
	          front.reject(value);
	          break;

	        default:
	          front.resolve({
	            value: value,
	            done: false
	          });
	          break;
	      }

	      front = front.next;

	      if (front) {
	        resume(front.key, front.arg);
	      } else {
	        back = null;
	      }
	    }

	    this._invoke = send;

	    if (typeof gen.return !== "function") {
	      this.return = undefined;
	    }
	  }

	  if (typeof Symbol === "function" && Symbol.asyncIterator) {
	    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {
	      return this;
	    };
	  }

	  AsyncGenerator.prototype.next = function (arg) {
	    return this._invoke("next", arg);
	  };

	  AsyncGenerator.prototype.throw = function (arg) {
	    return this._invoke("throw", arg);
	  };

	  AsyncGenerator.prototype.return = function (arg) {
	    return this._invoke("return", arg);
	  };

	  return {
	    wrap: function (fn) {
	      return function () {
	        return new AsyncGenerator(fn.apply(this, arguments));
	      };
	    },
	    await: function (value) {
	      return new AwaitValue(value);
	    }
	  };
	}();





	var classCallCheck = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

	var createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }

	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();









	var inherits = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
	  }

	  subClass.prototype = Object.create(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	};











	var possibleConstructorReturn = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }

	  return call && (typeof call === "object" || typeof call === "function") ? call : self;
	};

	var EventEmitter = function () {
	    function EventEmitter() {
	        classCallCheck(this, EventEmitter);
	        this.listeners = [];
	    }

	    createClass(EventEmitter, [{
	        key: "on",
	        value: function on(cb) {
	            var _this = this;

	            this.listeners.push(cb);
	            return function () {
	                var index = _this.listeners.indexOf(cb);
	                if (index !== -1) _this.listeners.splice(index, 1);
	            };
	        }
	    }, {
	        key: "emit",
	        value: function emit(data) {
	            this.listeners.forEach(function (fn) {
	                return fn(data);
	            });
	        }
	    }]);
	    return EventEmitter;
	}();

	// Copied from React.PropTypes
	function createChainableTypeChecker(validate) {
	    function checkType(isRequired, props, propName, componentName, location, propFullName) {
	        for (var _len = arguments.length, rest = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {
	            rest[_key - 6] = arguments[_key];
	        }

	        return mobx.untracked(function () {
	            componentName = componentName || "<<anonymous>>";
	            propFullName = propFullName || propName;
	            if (props[propName] == null) {
	                if (isRequired) {
	                    var actual = props[propName] === null ? "null" : "undefined";
	                    return new Error("The " + location + " `" + propFullName + "` is marked as required " + "in `" + componentName + "`, but its value is `" + actual + "`.");
	                }
	                return null;
	            } else {
	                return validate.apply(undefined, [props, propName, componentName, location, propFullName].concat(rest));
	            }
	        });
	    }

	    var chainedCheckType = checkType.bind(null, false);
	    chainedCheckType.isRequired = checkType.bind(null, true);
	    return chainedCheckType;
	}

	// Copied from React.PropTypes
	function isSymbol(propType, propValue) {
	    // Native Symbol.
	    if (propType === "symbol") {
	        return true;
	    }

	    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	    if (propValue["@@toStringTag"] === "Symbol") {
	        return true;
	    }

	    // Fallback for non-spec compliant Symbols which are polyfilled.
	    if (typeof Symbol === "function" && propValue instanceof Symbol) {
	        return true;
	    }

	    return false;
	}

	// Copied from React.PropTypes
	function getPropType(propValue) {
	    var propType = typeof propValue === "undefined" ? "undefined" : _typeof(propValue);
	    if (Array.isArray(propValue)) {
	        return "array";
	    }
	    if (propValue instanceof RegExp) {
	        // Old webkits (at least until Android 4.0) return 'function' rather than
	        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	        // passes PropTypes.object.
	        return "object";
	    }
	    if (isSymbol(propType, propValue)) {
	        return "symbol";
	    }
	    return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// Copied from React.PropTypes
	function getPreciseType(propValue) {
	    var propType = getPropType(propValue);
	    if (propType === "object") {
	        if (propValue instanceof Date) {
	            return "date";
	        } else if (propValue instanceof RegExp) {
	            return "regexp";
	        }
	    }
	    return propType;
	}

	function createObservableTypeCheckerCreator(allowNativeType, mobxType) {
	    return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {
	        return mobx.untracked(function () {
	            if (allowNativeType) {
	                if (getPropType(props[propName]) === mobxType.toLowerCase()) return null;
	            }
	            var mobxChecker = void 0;
	            switch (mobxType) {
	                case "Array":
	                    mobxChecker = mobx.isObservableArray;
	                    break;
	                case "Object":
	                    mobxChecker = mobx.isObservableObject;
	                    break;
	                case "Map":
	                    mobxChecker = mobx.isObservableMap;
	                    break;
	                default:
	                    throw new Error("Unexpected mobxType: " + mobxType);
	            }
	            var propValue = props[propName];
	            if (!mobxChecker(propValue)) {
	                var preciseType = getPreciseType(propValue);
	                var nativeTypeExpectationMessage = allowNativeType ? " or javascript `" + mobxType.toLowerCase() + "`" : "";
	                return new Error("Invalid prop `" + propFullName + "` of type `" + preciseType + "` supplied to" + " `" + componentName + "`, expected `mobx.Observable" + mobxType + "`" + nativeTypeExpectationMessage + ".");
	            }
	            return null;
	        });
	    });
	}

	function createObservableArrayOfTypeChecker(allowNativeType, typeChecker) {
	    return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {
	        for (var _len2 = arguments.length, rest = Array(_len2 > 5 ? _len2 - 5 : 0), _key2 = 5; _key2 < _len2; _key2++) {
	            rest[_key2 - 5] = arguments[_key2];
	        }

	        return mobx.untracked(function () {
	            if (typeof typeChecker !== "function") {
	                return new Error("Property `" + propFullName + "` of component `" + componentName + "` has " + "invalid PropType notation.");
	            }
	            var error = createObservableTypeCheckerCreator(allowNativeType, "Array")(props, propName, componentName);
	            if (error instanceof Error) return error;
	            var propValue = props[propName];
	            for (var i = 0; i < propValue.length; i++) {
	                error = typeChecker.apply(undefined, [propValue, i, componentName, location, propFullName + "[" + i + "]"].concat(rest));
	                if (error instanceof Error) return error;
	            }
	            return null;
	        });
	    });
	}

	var observableArray = createObservableTypeCheckerCreator(false, "Array");
	var observableArrayOf = createObservableArrayOfTypeChecker.bind(null, false);
	var observableMap = createObservableTypeCheckerCreator(false, "Map");
	var observableObject = createObservableTypeCheckerCreator(false, "Object");
	var arrayOrObservableArray = createObservableTypeCheckerCreator(true, "Array");
	var arrayOrObservableArrayOf = createObservableArrayOfTypeChecker.bind(null, true);
	var objectOrObservableObject = createObservableTypeCheckerCreator(true, "Object");



	var propTypes = Object.freeze({
		observableArray: observableArray,
		observableArrayOf: observableArrayOf,
		observableMap: observableMap,
		observableObject: observableObject,
		arrayOrObservableArray: arrayOrObservableArray,
		arrayOrObservableArrayOf: arrayOrObservableArrayOf,
		objectOrObservableObject: objectOrObservableObject
	});

	function isStateless(component) {
	    // `function() {}` has prototype, but `() => {}` doesn't
	    // `() => {}` via Babel has prototype too.
	    return !(component.prototype && component.prototype.render);
	}

	var injectorContextTypes = {
	    mobxStores: objectOrObservableObject
	};
	Object.seal(injectorContextTypes);

	var proxiedInjectorProps = {
	    contextTypes: {
	        get: function get$$1() {
	            return injectorContextTypes;
	        },
	        set: function set$$1(_) {
	            console.warn("Mobx Injector: you are trying to attach `contextTypes` on an component decorated with `inject` (or `observer`) HOC. Please specify the contextTypes on the wrapped component instead. It is accessible through the `wrappedComponent`");
	        },
	        configurable: true,
	        enumerable: false
	    },
	    isMobxInjector: {
	        value: true,
	        writable: true,
	        configurable: true,
	        enumerable: true
	    }

	    /**
	     * Store Injection
	     */
	};function createStoreInjector(grabStoresFn, component, injectNames) {
	    var _class, _temp2;

	    var displayName = "inject-" + (component.displayName || component.name || component.constructor && component.constructor.name || "Unknown");
	    if (injectNames) displayName += "-with-" + injectNames;

	    var Injector = (_temp2 = _class = function (_Component) {
	        inherits(Injector, _Component);

	        function Injector() {
	            var _ref;

	            var _temp, _this, _ret;

	            classCallCheck(this, Injector);

	            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	                args[_key] = arguments[_key];
	            }

	            return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Injector.__proto__ || Object.getPrototypeOf(Injector)).call.apply(_ref, [this].concat(args))), _this), _this.storeRef = function (instance) {
	                _this.wrappedInstance = instance;
	            }, _temp), possibleConstructorReturn(_this, _ret);
	        }

	        createClass(Injector, [{
	            key: "render",
	            value: function render() {
	                // Optimization: it might be more efficient to apply the mapper function *outside* the render method
	                // (if the mapper is a function), that could avoid expensive(?) re-rendering of the injector component
	                // See this test: 'using a custom injector is not too reactive' in inject.js
	                var newProps = {};
	                for (var key in this.props) {
	                    if (this.props.hasOwnProperty(key)) {
	                        newProps[key] = this.props[key];
	                    }
	                }var additionalProps = grabStoresFn(this.context.mobxStores || {}, newProps, this.context) || {};
	                for (var _key2 in additionalProps) {
	                    newProps[_key2] = additionalProps[_key2];
	                }

	                if (!isStateless(component)) {
	                    newProps.ref = this.storeRef;
	                }

	                return React.createElement(component, newProps);
	            }
	        }]);
	        return Injector;
	    }(React.Component), _class.displayName = displayName, _temp2);

	    // Static fields from component should be visible on the generated Injector

	    hoistNonReactStatics(Injector, component);

	    Injector.wrappedComponent = component;
	    Object.defineProperties(Injector, proxiedInjectorProps);

	    return Injector;
	}

	function grabStoresByName(storeNames) {
	    return function (baseStores, nextProps) {
	        storeNames.forEach(function (storeName) {
	            if (storeName in nextProps // prefer props over stores
	            ) return;
	            if (!(storeName in baseStores)) throw new Error("MobX injector: Store '" + storeName + "' is not available! Make sure it is provided by some Provider");
	            nextProps[storeName] = baseStores[storeName];
	        });
	        return nextProps;
	    };
	}

	/**
	 * higher order component that injects stores to a child.
	 * takes either a varargs list of strings, which are stores read from the context,
	 * or a function that manually maps the available stores from the context to props:
	 * storesToProps(mobxStores, props, context) => newProps
	 */
	function inject() /* fn(stores, nextProps) or ...storeNames */{
	    var grabStoresFn = void 0;
	    if (typeof arguments[0] === "function") {
	        grabStoresFn = arguments[0];
	        return function (componentClass) {
	            var injected = createStoreInjector(grabStoresFn, componentClass);
	            injected.isMobxInjector = false; // supress warning
	            // mark the Injector as observer, to make it react to expressions in `grabStoresFn`,
	            // see #111
	            injected = observer(injected);
	            injected.isMobxInjector = true; // restore warning
	            return injected;
	        };
	    } else {
	        var storeNames = [];
	        for (var i = 0; i < arguments.length; i++) {
	            storeNames[i] = arguments[i];
	        }grabStoresFn = grabStoresByName(storeNames);
	        return function (componentClass) {
	            return createStoreInjector(grabStoresFn, componentClass, storeNames.join("-"));
	        };
	    }
	}

	var mobxAdminProperty = mobx.$mobx || "$mobx";

	/**
	 * dev tool support
	 */
	var isDevtoolsEnabled = false;

	var isUsingStaticRendering = false;

	var warnedAboutObserverInjectDeprecation = false;

	// WeakMap<Node, Object>;
	var componentByNodeRegistry = typeof WeakMap !== "undefined" ? new WeakMap() : undefined;
	var renderReporter = new EventEmitter();

	var createdSymbols = {};

	function createRealSymbol(name) {
	    if (typeof Symbol === "function") {
	        return Symbol(name);
	    }
	    return "$mobxReactProp$" + name + Math.random();
	}

	function createSymbol(name) {
	    if (!createdSymbols[name]) {
	        createdSymbols[name] = createRealSymbol(name);
	    }
	    return createdSymbols[name];
	}

	var skipRenderKey = createSymbol("skipRender");
	var isForcingUpdateKey = createSymbol("isForcingUpdate");

	/**
	 * Helper to set `prop` to `this` as non-enumerable (hidden prop)
	 * @param target
	 * @param prop
	 * @param value
	 */
	function setHiddenProp(target, prop, value) {
	    if (!Object.hasOwnProperty(target, prop)) {
	        Object.defineProperty(target, prop, {
	            enumerable: false,
	            configurable: true,
	            writeable: true,
	            value: value
	        });
	    } else {
	        target[prop] = value;
	    }
	}

	function findDOMNode$2(component) {
	    if (reactDom.findDOMNode) {
	        try {
	            return reactDom.findDOMNode(component);
	        } catch (e) {
	            // findDOMNode will throw in react-test-renderer, see:
	            // See https://github.com/mobxjs/mobx-react/issues/216
	            // Is there a better heuristic?
	            return null;
	        }
	    }
	    return null;
	}

	function reportRendering(component) {
	    var node = findDOMNode$2(component);
	    if (node && componentByNodeRegistry) componentByNodeRegistry.set(node, component);

	    renderReporter.emit({
	        event: "render",
	        renderTime: component.__$mobRenderEnd - component.__$mobRenderStart,
	        totalTime: Date.now() - component.__$mobRenderStart,
	        component: component,
	        node: node
	    });
	}

	function trackComponents() {
	    if (typeof WeakMap === "undefined") throw new Error("[mobx-react] tracking components is not supported in this browser.");
	    if (!isDevtoolsEnabled) isDevtoolsEnabled = true;
	}

	function useStaticRendering(useStaticRendering) {
	    isUsingStaticRendering = useStaticRendering;
	}

	/**
	 * Errors reporter
	 */

	var errorsReporter = new EventEmitter();

	/**
	 * Utilities
	 */

	function patch(target, funcName) {
	    var runMixinFirst = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

	    var base = target[funcName];
	    var mixinFunc = reactiveMixin[funcName];
	    var f = !base ? mixinFunc : runMixinFirst === true ? function () {
	        mixinFunc.apply(this, arguments);
	        base.apply(this, arguments);
	    } : function () {
	        base.apply(this, arguments);
	        mixinFunc.apply(this, arguments);
	    };

	    // MWE: ideally we freeze here to protect against accidental overwrites in component instances, see #195
	    // ...but that breaks react-hot-loader, see #231...
	    target[funcName] = f;
	}

	function shallowEqual(objA, objB) {
	    //From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js
	    if (is(objA, objB)) return true;
	    if ((typeof objA === "undefined" ? "undefined" : _typeof(objA)) !== "object" || objA === null || (typeof objB === "undefined" ? "undefined" : _typeof(objB)) !== "object" || objB === null) {
	        return false;
	    }
	    var keysA = Object.keys(objA);
	    var keysB = Object.keys(objB);
	    if (keysA.length !== keysB.length) return false;
	    for (var i = 0; i < keysA.length; i++) {
	        if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	            return false;
	        }
	    }
	    return true;
	}

	function is(x, y) {
	    // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js
	    if (x === y) {
	        return x !== 0 || 1 / x === 1 / y;
	    } else {
	        return x !== x && y !== y;
	    }
	}

	function makeComponentReactive(render) {
	    var _this2 = this;

	    if (isUsingStaticRendering === true) return render.call(this);

	    function reactiveRender() {
	        var _this = this;

	        isRenderingPending = false;
	        var exception = undefined;
	        var rendering = undefined;
	        reaction.track(function () {
	            if (isDevtoolsEnabled) {
	                _this.__$mobRenderStart = Date.now();
	            }
	            try {
	                rendering = mobx._allowStateChanges(false, baseRender);
	            } catch (e) {
	                exception = e;
	            }
	            if (isDevtoolsEnabled) {
	                _this.__$mobRenderEnd = Date.now();
	            }
	        });
	        if (exception) {
	            errorsReporter.emit(exception);
	            throw exception;
	        }
	        return rendering;
	    }

	    // Generate friendly name for debugging
	    var initialName = this.displayName || this.name || this.constructor && (this.constructor.displayName || this.constructor.name) || "<component>";
	    var rootNodeID = this._reactInternalInstance && this._reactInternalInstance._rootNodeID || this._reactInternalInstance && this._reactInternalInstance._debugID || this._reactInternalFiber && this._reactInternalFiber._debugID;
	    /**
	     * If props are shallowly modified, react will render anyway,
	     * so atom.reportChanged() should not result in yet another re-render
	     */
	    setHiddenProp(this, skipRenderKey, false);
	    /**
	     * forceUpdate will re-assign this.props. We don't want that to cause a loop,
	     * so detect these changes
	     */
	    setHiddenProp(this, isForcingUpdateKey, false);

	    // wire up reactive render
	    var baseRender = render.bind(this);
	    var isRenderingPending = false;

	    var reaction = new mobx.Reaction(initialName + "#" + rootNodeID + ".render()", function () {
	        if (!isRenderingPending) {
	            // N.B. Getting here *before mounting* means that a component constructor has side effects (see the relevant test in misc.js)
	            // This unidiomatic React usage but React will correctly warn about this so we continue as usual
	            // See #85 / Pull #44
	            isRenderingPending = true;
	            if (typeof _this2.componentWillReact === "function") _this2.componentWillReact(); // TODO: wrap in action?
	            if (_this2.__$mobxIsUnmounted !== true) {
	                // If we are unmounted at this point, componentWillReact() had a side effect causing the component to unmounted
	                // TODO: remove this check? Then react will properly warn about the fact that this should not happen? See #73
	                // However, people also claim this migth happen during unit tests..
	                var hasError = true;
	                try {
	                    setHiddenProp(_this2, isForcingUpdateKey, true);
	                    if (!_this2[skipRenderKey]) React.Component.prototype.forceUpdate.call(_this2);
	                    hasError = false;
	                } finally {
	                    setHiddenProp(_this2, isForcingUpdateKey, false);
	                    if (hasError) reaction.dispose();
	                }
	            }
	        }
	    });
	    reaction.reactComponent = this;
	    reactiveRender[mobxAdminProperty] = reaction;
	    this.render = reactiveRender;
	    return reactiveRender.call(this);
	}

	/**
	 * ReactiveMixin
	 */
	var reactiveMixin = {
	    componentWillUnmount: function componentWillUnmount() {
	        if (isUsingStaticRendering === true) return;
	        this.render[mobxAdminProperty] && this.render[mobxAdminProperty].dispose();
	        this.__$mobxIsUnmounted = true;
	        if (isDevtoolsEnabled) {
	            var node = findDOMNode$2(this);
	            if (node && componentByNodeRegistry) {
	                componentByNodeRegistry.delete(node);
	            }
	            renderReporter.emit({
	                event: "destroy",
	                component: this,
	                node: node
	            });
	        }
	    },

	    componentDidMount: function componentDidMount() {
	        if (isDevtoolsEnabled) {
	            reportRendering(this);
	        }
	    },

	    componentDidUpdate: function componentDidUpdate() {
	        if (isDevtoolsEnabled) {
	            reportRendering(this);
	        }
	    },

	    shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	        if (isUsingStaticRendering) {
	            console.warn("[mobx-react] It seems that a re-rendering of a React component is triggered while in static (server-side) mode. Please make sure components are rendered only once server-side.");
	        }
	        // update on any state changes (as is the default)
	        if (this.state !== nextState) {
	            return true;
	        }
	        // update if props are shallowly not equal, inspired by PureRenderMixin
	        // we could return just 'false' here, and avoid the `skipRender` checks etc
	        // however, it is nicer if lifecycle events are triggered like usually,
	        // so we return true here if props are shallowly modified.
	        return !shallowEqual(this.props, nextProps);
	    }
	};

	function makeObservableProp(target, propName) {
	    var valueHolderKey = createSymbol(propName + " value holder");
	    var atomHolderKey = createSymbol(propName + " atom holder");
	    function getAtom() {
	        if (!this[atomHolderKey]) {
	            setHiddenProp(this, atomHolderKey, mobx.createAtom("reactive " + propName));
	        }
	        return this[atomHolderKey];
	    }
	    Object.defineProperty(target, propName, {
	        configurable: true,
	        enumerable: true,
	        get: function get$$1() {
	            getAtom.call(this).reportObserved();
	            return this[valueHolderKey];
	        },
	        set: function set$$1(v) {
	            if (!this[isForcingUpdateKey] && !shallowEqual(this[valueHolderKey], v)) {
	                setHiddenProp(this, valueHolderKey, v);
	                setHiddenProp(this, skipRenderKey, true);
	                getAtom.call(this).reportChanged();
	                setHiddenProp(this, skipRenderKey, false);
	            } else {
	                setHiddenProp(this, valueHolderKey, v);
	            }
	        }
	    });
	}

	/**
	 * Observer function / decorator
	 */
	function observer(arg1, arg2) {
	    if (typeof arg1 === "string") {
	        throw new Error("Store names should be provided as array");
	    }
	    if (Array.isArray(arg1)) {
	        // TODO: remove in next major
	        // component needs stores
	        if (!warnedAboutObserverInjectDeprecation) {
	            warnedAboutObserverInjectDeprecation = true;
	            console.warn('Mobx observer: Using observer to inject stores is deprecated since 4.0. Use `@inject("store1", "store2") @observer ComponentClass` or `inject("store1", "store2")(observer(componentClass))` instead of `@observer(["store1", "store2"]) ComponentClass`');
	        }
	        if (!arg2) {
	            // invoked as decorator
	            return function (componentClass) {
	                return observer(arg1, componentClass);
	            };
	        } else {
	            return inject.apply(null, arg1)(observer(arg2));
	        }
	    }
	    var componentClass = arg1;

	    if (componentClass.isMobxInjector === true) {
	        console.warn("Mobx observer: You are trying to use 'observer' on a component that already has 'inject'. Please apply 'observer' before applying 'inject'");
	    }
	    if (componentClass.__proto__ === React.PureComponent) {
	        console.warn("Mobx observer: You are using 'observer' on React.PureComponent. These two achieve two opposite goals and should not be used together");
	    }

	    // Stateless function component:
	    // If it is function but doesn't seem to be a react class constructor,
	    // wrap it to a react class automatically
	    if (typeof componentClass === "function" && (!componentClass.prototype || !componentClass.prototype.render) && !componentClass.isReactClass && !React.Component.isPrototypeOf(componentClass)) {
	        var _class, _temp;

	        var observerComponent = observer((_temp = _class = function (_Component) {
	            inherits(_class, _Component);

	            function _class() {
	                classCallCheck(this, _class);
	                return possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	            }

	            createClass(_class, [{
	                key: "render",
	                value: function render() {
	                    return componentClass.call(this, this.props, this.context);
	                }
	            }]);
	            return _class;
	        }(React.Component), _class.displayName = componentClass.displayName || componentClass.name, _class.contextTypes = componentClass.contextTypes, _class.propTypes = componentClass.propTypes, _class.defaultProps = componentClass.defaultProps, _temp));
	        hoistNonReactStatics(observerComponent, componentClass);
	        return observerComponent;
	    }

	    if (!componentClass) {
	        throw new Error("Please pass a valid component to 'observer'");
	    }

	    var target = componentClass.prototype || componentClass;
	    mixinLifecycleEvents(target);
	    componentClass.isMobXReactObserver = true;
	    makeObservableProp(target, "props");
	    makeObservableProp(target, "state");
	    var baseRender = target.render;
	    target.render = function () {
	        return makeComponentReactive.call(this, baseRender);
	    };
	    return componentClass;
	}

	function mixinLifecycleEvents(target) {
	    ["componentDidMount", "componentWillUnmount", "componentDidUpdate"].forEach(function (funcName) {
	        patch(target, funcName);
	    });
	    if (!target.shouldComponentUpdate) {
	        target.shouldComponentUpdate = reactiveMixin.shouldComponentUpdate;
	    } else {
	        if (target.shouldComponentUpdate !== reactiveMixin.shouldComponentUpdate) {
	            // TODO: make throw in next major
	            console.warn("Use `shouldComponentUpdate` in an `observer` based component breaks the behavior of `observer` and might lead to unexpected results. Manually implementing `sCU` should not be needed when using mobx-react.");
	        }
	    }
	}

	var Observer = observer(function (_ref) {
	    var children = _ref.children,
	        observerInject = _ref.inject,
	        render = _ref.render;

	    var component = children || render;
	    if (typeof component === "undefined") {
	        return null;
	    }
	    if (!observerInject) {
	        return component();
	    }
	    // TODO: remove in next major
	    console.warn("<Observer inject=.../> is no longer supported. Please use inject on the enclosing component instead");
	    var InjectComponent = inject(observerInject)(component);
	    return React__default.createElement(InjectComponent, null);
	});

	Observer.displayName = "Observer";

	var ObserverPropsCheck = function ObserverPropsCheck(props, key, componentName, location, propFullName) {
	    var extraKey = key === "children" ? "render" : "children";
	    if (typeof props[key] === "function" && typeof props[extraKey] === "function") {
	        return new Error("Invalid prop,do not use children and render in the same time in`" + componentName);
	    }

	    if (typeof props[key] === "function" || typeof props[extraKey] === "function") {
	        return;
	    }
	    return new Error("Invalid prop `" + propFullName + "` of type `" + _typeof(props[key]) + "` supplied to" + " `" + componentName + "`, expected `function`.");
	};

	Observer.propTypes = {
	    render: ObserverPropsCheck,
	    children: ObserverPropsCheck
	};

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	function componentWillMount() {
	  // Call this.constructor.gDSFP to support sub-classes.
	  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
	  if (state !== null && state !== undefined) {
	    this.setState(state);
	  }
	}

	function componentWillReceiveProps(nextProps) {
	  // Call this.constructor.gDSFP to support sub-classes.
	  var state = this.constructor.getDerivedStateFromProps(nextProps, this.state);
	  if (state !== null && state !== undefined) {
	    this.setState(state);
	  }
	}

	function componentWillUpdate(nextProps, nextState) {
	  try {
	    var prevProps = this.props;
	    var prevState = this.state;
	    this.props = nextProps;
	    this.state = nextState;
	    this.__reactInternalSnapshotFlag = true;
	    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
	      prevProps,
	      prevState
	    );
	  } finally {
	    this.props = prevProps;
	    this.state = prevState;
	  }
	}

	// React may warn about cWM/cWRP/cWU methods being deprecated.
	// Add a flag to suppress these warnings for this special case.
	componentWillMount.__suppressDeprecationWarning = true;
	componentWillReceiveProps.__suppressDeprecationWarning = true;
	componentWillUpdate.__suppressDeprecationWarning = true;

	function polyfill(Component$$1) {
	  var prototype = Component$$1.prototype;

	  if (!prototype || !prototype.isReactComponent) {
	    throw new Error('Can only polyfill class components');
	  }

	  if (
	    typeof Component$$1.getDerivedStateFromProps !== 'function' &&
	    typeof prototype.getSnapshotBeforeUpdate !== 'function'
	  ) {
	    return Component$$1;
	  }

	  // If new component APIs are defined, "unsafe" lifecycles won't be called.
	  // Error if any of these lifecycles are present,
	  // Because they would work differently between older and newer (16.3+) versions of React.
	  var foundWillMountName = null;
	  var foundWillReceivePropsName = null;
	  var foundWillUpdateName = null;
	  if (typeof prototype.componentWillMount === 'function') {
	    foundWillMountName = 'componentWillMount';
	  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
	    foundWillMountName = 'UNSAFE_componentWillMount';
	  }
	  if (typeof prototype.componentWillReceiveProps === 'function') {
	    foundWillReceivePropsName = 'componentWillReceiveProps';
	  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
	    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
	  }
	  if (typeof prototype.componentWillUpdate === 'function') {
	    foundWillUpdateName = 'componentWillUpdate';
	  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
	    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
	  }
	  if (
	    foundWillMountName !== null ||
	    foundWillReceivePropsName !== null ||
	    foundWillUpdateName !== null
	  ) {
	    var componentName = Component$$1.displayName || Component$$1.name;
	    var newApiName =
	      typeof Component$$1.getDerivedStateFromProps === 'function'
	        ? 'getDerivedStateFromProps()'
	        : 'getSnapshotBeforeUpdate()';

	    throw Error(
	      'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
	        componentName +
	        ' uses ' +
	        newApiName +
	        ' but also contains the following legacy lifecycles:' +
	        (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
	        (foundWillReceivePropsName !== null
	          ? '\n  ' + foundWillReceivePropsName
	          : '') +
	        (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
	        '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
	        'https://fb.me/react-async-component-lifecycle-hooks'
	    );
	  }

	  // React <= 16.2 does not support static getDerivedStateFromProps.
	  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
	  // Newer versions of React will ignore these lifecycles if gDSFP exists.
	  if (typeof Component$$1.getDerivedStateFromProps === 'function') {
	    prototype.componentWillMount = componentWillMount;
	    prototype.componentWillReceiveProps = componentWillReceiveProps;
	  }

	  // React <= 16.2 does not support getSnapshotBeforeUpdate.
	  // As a workaround, use cWU to invoke the new lifecycle.
	  // Newer versions of React will ignore that lifecycle if gSBU exists.
	  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
	    if (typeof prototype.componentDidUpdate !== 'function') {
	      throw new Error(
	        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
	      );
	    }

	    prototype.componentWillUpdate = componentWillUpdate;

	    var componentDidUpdate = prototype.componentDidUpdate;

	    prototype.componentDidUpdate = function componentDidUpdatePolyfill(
	      prevProps,
	      prevState,
	      maybeSnapshot
	    ) {
	      // 16.3+ will not execute our will-update method;
	      // It will pass a snapshot value to did-update though.
	      // Older versions will require our polyfilled will-update value.
	      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
	      // Because for <= 15.x versions this might be a "prevContext" object.
	      // We also can't just check "__reactInternalSnapshot",
	      // Because get-snapshot might return a falsy value.
	      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
	      var snapshot = this.__reactInternalSnapshotFlag
	        ? this.__reactInternalSnapshot
	        : maybeSnapshot;

	      componentDidUpdate.call(this, prevProps, prevState, snapshot);
	    };
	  }

	  return Component$$1;
	}

	var _class;
	var _temp;

	var specialReactKeys = { children: true, key: true, ref: true };

	var Provider = (_temp = _class = function (_Component) {
	    inherits(Provider, _Component);

	    function Provider(props, context) {
	        classCallCheck(this, Provider);

	        var _this = possibleConstructorReturn(this, (Provider.__proto__ || Object.getPrototypeOf(Provider)).call(this, props, context));

	        _this.state = props || {};
	        return _this;
	    }

	    createClass(Provider, [{
	        key: "render",
	        value: function render() {
	            return React.Children.only(this.props.children);
	        }
	    }, {
	        key: "getChildContext",
	        value: function getChildContext() {
	            var stores = {};
	            // inherit stores
	            var baseStores = this.context.mobxStores;
	            if (baseStores) for (var key in baseStores) {
	                stores[key] = baseStores[key];
	            }
	            // add own stores
	            for (var _key in this.state) {
	                if (!specialReactKeys[_key] && _key !== "suppressChangedStoreWarning") stores[_key] = this.props[_key];
	            }return {
	                mobxStores: stores
	            };
	        }
	    }], [{
	        key: "getDerivedStateFromProps",
	        value: function getDerivedStateFromProps(nextProps, prevState) {
	            if (!nextProps) return null;
	            if (!prevState) return nextProps;

	            // Maybe this warning is too aggressive?
	            if (Object.keys(nextProps).length !== Object.keys(prevState).length) console.warn("MobX Provider: The set of provided stores has changed. Please avoid changing stores as the change might not propagate to all children");
	            if (!nextProps.suppressChangedStoreWarning) for (var key in nextProps) {
	                if (!specialReactKeys[key] && prevState[key] !== nextProps[key]) console.warn("MobX Provider: Provided store '" + key + "' has changed. Please avoid replacing stores as the change might not propagate to all children");
	            }return nextProps;
	        }
	    }]);
	    return Provider;
	}(React.Component), _class.contextTypes = {
	    mobxStores: objectOrObservableObject
	}, _class.childContextTypes = {
	    mobxStores: objectOrObservableObject.isRequired
	}, _temp);

	// TODO: kill in next major

	polyfill(Provider);

	if (!React.Component) throw new Error("mobx-react requires React to be available");
	if (!mobx.spy) throw new Error("mobx-react requires mobx to be available");

	if (typeof reactDom.unstable_batchedUpdates === "function") mobx.configure({ reactionScheduler: reactDom.unstable_batchedUpdates });else if (typeof unstable_batchedUpdates$1 === "function") mobx.configure({ reactionScheduler: unstable_batchedUpdates$1 });

	var onError = function onError(fn) {
	    return errorsReporter.on(fn);
	};

	/* DevTool support */
	// See: https://github.com/andykog/mobx-devtools/blob/d8976c24b8cb727ed59f9a0bc905a009df79e221/src/backend/installGlobalHook.js

	if ((typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === "undefined" ? "undefined" : _typeof(__MOBX_DEVTOOLS_GLOBAL_HOOK__)) === "object") {
	    var mobx$1 = { spy: mobx.spy, extras: { getDebugName: mobx.getDebugName } };
	    var mobxReact = {
	        renderReporter: renderReporter,
	        componentByNodeRegistry: componentByNodeRegistry,
	        componentByNodeRegistery: componentByNodeRegistry,
	        trackComponents: trackComponents
	    };
	    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobxReact(mobxReact, mobx$1);
	}

	exports.propTypes = propTypes;
	exports.PropTypes = propTypes;
	exports.onError = onError;
	exports.observer = observer;
	exports.Observer = Observer;
	exports.renderReporter = renderReporter;
	exports.componentByNodeRegistery = componentByNodeRegistry;
	exports.componentByNodeRegistry = componentByNodeRegistry;
	exports.trackComponents = trackComponents;
	exports.useStaticRendering = useStaticRendering;
	exports.Provider = Provider;
	exports.inject = inject;

	Object.defineProperty(exports, '__esModule', { value: true });

	})));

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, global) {/** MobX - (c) Michel Weststrate 2015 - 2018 - MIT Licensed */
	'use strict';

	Object.defineProperty(exports, '__esModule', { value: true });

	/*! *****************************************************************************
	Copyright (c) Microsoft Corporation. All rights reserved.
	Licensed under the Apache License, Version 2.0 (the "License"); you may not use
	this file except in compliance with the License. You may obtain a copy of the
	License at http://www.apache.org/licenses/LICENSE-2.0

	THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
	KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
	WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
	MERCHANTABLITY OR NON-INFRINGEMENT.

	See the Apache Version 2.0 License for specific language governing permissions
	and limitations under the License.
	***************************************************************************** */
	/* global Reflect, Promise */

	var extendStatics = Object.setPrototypeOf ||
	    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };

	function __extends(d, b) {
	    extendStatics(d, b);
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	}

	var __assign = Object.assign || function __assign(t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	    }
	    return t;
	};















	function __values(o) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
	    if (m) return m.call(o);
	    return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	}

	function __read(o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	}

	function __spread() {
	    for (var ar = [], i = 0; i < arguments.length; i++)
	        ar = ar.concat(__read(arguments[i]));
	    return ar;
	}

	var OBFUSCATED_ERROR$$1 = "An invariant failed, however the error is obfuscated because this is an production build.";
	var EMPTY_ARRAY$$1 = [];
	Object.freeze(EMPTY_ARRAY$$1);
	var EMPTY_OBJECT$$1 = {};
	Object.freeze(EMPTY_OBJECT$$1);
	function getNextId$$1() {
	    return ++globalState$$1.mobxGuid;
	}
	function fail$$1(message) {
	    invariant$$1(false, message);
	    throw "X"; // unreachable
	}
	function invariant$$1(check, message) {
	    if (!check)
	        throw new Error("[mobx] " + (message || OBFUSCATED_ERROR$$1));
	}
	/**
	 * Prints a deprecation message, but only one time.
	 * Returns false if the deprecated message was already printed before
	 */
	var deprecatedMessages = [];
	function deprecated$$1(msg, thing) {
	    if (process.env.NODE_ENV === "production")
	        return false;
	    if (thing) {
	        return deprecated$$1("'" + msg + "', use '" + thing + "' instead.");
	    }
	    if (deprecatedMessages.indexOf(msg) !== -1)
	        return false;
	    deprecatedMessages.push(msg);
	    console.error("[mobx] Deprecated: " + msg);
	    return true;
	}
	/**
	 * Makes sure that the provided function is invoked at most once.
	 */
	function once$$1(func) {
	    var invoked = false;
	    return function () {
	        if (invoked)
	            return;
	        invoked = true;
	        return func.apply(this, arguments);
	    };
	}
	var noop$$1 = function () { };
	function unique$$1(list) {
	    var res = [];
	    list.forEach(function (item) {
	        if (res.indexOf(item) === -1)
	            res.push(item);
	    });
	    return res;
	}
	function isObject$$1(value) {
	    return value !== null && typeof value === "object";
	}
	function isPlainObject$$1(value) {
	    if (value === null || typeof value !== "object")
	        return false;
	    var proto = Object.getPrototypeOf(value);
	    return proto === Object.prototype || proto === null;
	}

	function addHiddenProp$$1(object, propName, value) {
	    Object.defineProperty(object, propName, {
	        enumerable: false,
	        writable: true,
	        configurable: true,
	        value: value
	    });
	}
	function addHiddenFinalProp$$1(object, propName, value) {
	    Object.defineProperty(object, propName, {
	        enumerable: false,
	        writable: false,
	        configurable: true,
	        value: value
	    });
	}
	function isPropertyConfigurable$$1(object, prop) {
	    var descriptor = Object.getOwnPropertyDescriptor(object, prop);
	    return !descriptor || (descriptor.configurable !== false && descriptor.writable !== false);
	}
	function assertPropertyConfigurable$$1(object, prop) {
	    if (process.env.NODE_ENV !== "production" && !isPropertyConfigurable$$1(object, prop))
	        fail$$1("Cannot make property '" + prop.toString() + "' observable, it is not configurable and writable in the target object");
	}
	function createInstanceofPredicate$$1(name, clazz) {
	    var propName = "isMobX" + name;
	    clazz.prototype[propName] = true;
	    return function (x) {
	        return isObject$$1(x) && x[propName] === true;
	    };
	}
	/**
	 * Returns whether the argument is an array, disregarding observability.
	 */
	function isArrayLike$$1(x) {
	    return Array.isArray(x) || isObservableArray$$1(x);
	}
	function isES6Map$$1(thing) {
	    return thing instanceof Map;
	}
	function getMapLikeKeys$$1(map) {
	    if (isPlainObject$$1(map))
	        return Object.keys(map);
	    if (Array.isArray(map))
	        return map.map(function (_a) {
	            var _b = __read(_a, 1), key = _b[0];
	            return key;
	        });
	    if (isES6Map$$1(map) || isObservableMap$$1(map))
	        return Array.from(map.keys());
	    return fail$$1("Cannot get keys from '" + map + "'");
	}
	function toPrimitive$$1(value) {
	    return value === null ? null : typeof value === "object" ? "" + value : value;
	}

	var $mobx$$1 = Symbol("mobx administration");
	var Atom$$1 = /** @class */ (function () {
	    /**
	     * Create a new atom. For debugging purposes it is recommended to give it a name.
	     * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.
	     */
	    function Atom$$1(name) {
	        if (name === void 0) { name = "Atom@" + getNextId$$1(); }
	        this.name = name;
	        this.isPendingUnobservation = false; // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed
	        this.isBeingObserved = false;
	        this.observers = new Set();
	        this.diffValue = 0;
	        this.lastAccessedBy = 0;
	        this.lowestObserverState = exports.IDerivationState.NOT_TRACKING;
	    }
	    Atom$$1.prototype.onBecomeUnobserved = function () {
	        // noop
	    };
	    Atom$$1.prototype.onBecomeObserved = function () {
	        /* noop */
	    };
	    /**
	     * Invoke this method to notify mobx that your atom has been used somehow.
	     * Returns true if there is currently a reactive context.
	     */
	    Atom$$1.prototype.reportObserved = function () {
	        return reportObserved$$1(this);
	    };
	    /**
	     * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.
	     */
	    Atom$$1.prototype.reportChanged = function () {
	        startBatch$$1();
	        propagateChanged$$1(this);
	        endBatch$$1();
	    };
	    Atom$$1.prototype.toString = function () {
	        return this.name;
	    };
	    return Atom$$1;
	}());
	var isAtom$$1 = createInstanceofPredicate$$1("Atom", Atom$$1);
	function createAtom$$1(name, onBecomeObservedHandler, onBecomeUnobservedHandler) {
	    if (onBecomeObservedHandler === void 0) { onBecomeObservedHandler = noop$$1; }
	    if (onBecomeUnobservedHandler === void 0) { onBecomeUnobservedHandler = noop$$1; }
	    var atom = new Atom$$1(name);
	    onBecomeObserved$$1(atom, onBecomeObservedHandler);
	    onBecomeUnobserved$$1(atom, onBecomeUnobservedHandler);
	    return atom;
	}

	function identityComparer(a, b) {
	    return a === b;
	}
	function structuralComparer(a, b) {
	    return deepEqual$$1(a, b);
	}
	function defaultComparer(a, b) {
	    return Object.is(a, b);
	}
	var comparer$$1 = {
	    identity: identityComparer,
	    structural: structuralComparer,
	    default: defaultComparer
	};

	var mobxDidRunLazyInitializersSymbol$$1 = Symbol("mobx did run lazy initializers");
	var mobxPendingDecorators$$1 = Symbol("mobx pending decorators");
	var enumerableDescriptorCache = {};
	var nonEnumerableDescriptorCache = {};
	function createPropertyInitializerDescriptor(prop, enumerable) {
	    var cache = enumerable ? enumerableDescriptorCache : nonEnumerableDescriptorCache;
	    return (cache[prop] ||
	        (cache[prop] = {
	            configurable: true,
	            enumerable: enumerable,
	            get: function () {
	                initializeInstance$$1(this);
	                return this[prop];
	            },
	            set: function (value) {
	                initializeInstance$$1(this);
	                this[prop] = value;
	            }
	        }));
	}
	function initializeInstance$$1(target) {
	    if (target[mobxDidRunLazyInitializersSymbol$$1] === true)
	        return;
	    var decorators = target[mobxPendingDecorators$$1];
	    if (decorators) {
	        addHiddenProp$$1(target, mobxDidRunLazyInitializersSymbol$$1, true);
	        for (var key in decorators) {
	            var d = decorators[key];
	            d.propertyCreator(target, d.prop, d.descriptor, d.decoratorTarget, d.decoratorArguments);
	        }
	    }
	}
	function createPropDecorator$$1(propertyInitiallyEnumerable, propertyCreator) {
	    return function decoratorFactory() {
	        var decoratorArguments;
	        var decorator = function decorate$$1(target, prop, descriptor, applyImmediately
	        // This is a special parameter to signal the direct application of a decorator, allow extendObservable to skip the entire type decoration part,
	        // as the instance to apply the decorator to equals the target
	        ) {
	            if (applyImmediately === true) {
	                propertyCreator(target, prop, descriptor, target, decoratorArguments);
	                return null;
	            }
	            if (process.env.NODE_ENV !== "production" && !quacksLikeADecorator$$1(arguments))
	                fail$$1("This function is a decorator, but it wasn't invoked like a decorator");
	            if (!Object.prototype.hasOwnProperty.call(target, mobxPendingDecorators$$1)) {
	                var inheritedDecorators = target[mobxPendingDecorators$$1];
	                addHiddenProp$$1(target, mobxPendingDecorators$$1, __assign({}, inheritedDecorators));
	            }
	            target[mobxPendingDecorators$$1][prop] = {
	                prop: prop,
	                propertyCreator: propertyCreator,
	                descriptor: descriptor,
	                decoratorTarget: target,
	                decoratorArguments: decoratorArguments
	            };
	            return createPropertyInitializerDescriptor(prop, propertyInitiallyEnumerable);
	        };
	        if (quacksLikeADecorator$$1(arguments)) {
	            // @decorator
	            decoratorArguments = EMPTY_ARRAY$$1;
	            return decorator.apply(null, arguments);
	        }
	        else {
	            // @decorator(args)
	            decoratorArguments = Array.prototype.slice.call(arguments);
	            return decorator;
	        }
	    };
	}
	function quacksLikeADecorator$$1(args) {
	    return (((args.length === 2 || args.length === 3) && typeof args[1] === "string") ||
	        (args.length === 4 && args[3] === true));
	}

	function deepEnhancer$$1(v, _, name) {
	    // it is an observable already, done
	    if (isObservable$$1(v))
	        return v;
	    // something that can be converted and mutated?
	    if (Array.isArray(v))
	        return observable$$1.array(v, { name: name });
	    if (isPlainObject$$1(v))
	        return observable$$1.object(v, undefined, { name: name });
	    if (isES6Map$$1(v))
	        return observable$$1.map(v, { name: name });
	    return v;
	}
	function shallowEnhancer$$1(v, _, name) {
	    if (v === undefined || v === null)
	        return v;
	    if (isObservableObject$$1(v) || isObservableArray$$1(v) || isObservableMap$$1(v))
	        return v;
	    if (Array.isArray(v))
	        return observable$$1.array(v, { name: name, deep: false });
	    if (isPlainObject$$1(v))
	        return observable$$1.object(v, undefined, { name: name, deep: false });
	    if (isES6Map$$1(v))
	        return observable$$1.map(v, { name: name, deep: false });
	    return fail$$1(process.env.NODE_ENV !== "production" &&
	        "The shallow modifier / decorator can only used in combination with arrays, objects and maps");
	}
	function referenceEnhancer$$1(newValue) {
	    // never turn into an observable
	    return newValue;
	}
	function refStructEnhancer$$1(v, oldValue, name) {
	    if (process.env.NODE_ENV !== "production" && isObservable$$1(v))
	        throw "observable.struct should not be used with observable values";
	    if (deepEqual$$1(v, oldValue))
	        return oldValue;
	    return v;
	}

	function createDecoratorForEnhancer$$1(enhancer) {
	    invariant$$1(enhancer);
	    var decorator = createPropDecorator$$1(true, function (target, propertyName, descriptor, _decoratorTarget, decoratorArgs) {
	        if (process.env.NODE_ENV !== "production") {
	            invariant$$1(!descriptor || !descriptor.get, "@observable cannot be used on getter (property \"" + propertyName + "\"), use @computed instead.");
	        }
	        var initialValue = descriptor
	            ? descriptor.initializer
	                ? descriptor.initializer.call(target)
	                : descriptor.value
	            : undefined;
	        asObservableObject$$1(target).addObservableProp(propertyName, initialValue, enhancer);
	    });
	    var res = 
	    // Extra process checks, as this happens during module initialization
	    typeof process !== "undefined" && process.env && process.env.NODE_ENV !== "production"
	        ? function observableDecorator() {
	            // This wrapper function is just to detect illegal decorator invocations, deprecate in a next version
	            // and simply return the created prop decorator
	            if (arguments.length < 2)
	                return fail$$1("Incorrect decorator invocation. @observable decorator doesn't expect any arguments");
	            return decorator.apply(null, arguments);
	        }
	        : decorator;
	    res.enhancer = enhancer;
	    return res;
	}

	// Predefined bags of create observable options, to avoid allocating temporarily option objects
	// in the majority of cases
	var defaultCreateObservableOptions$$1 = {
	    deep: true,
	    name: undefined,
	    defaultDecorator: undefined,
	    proxy: true
	};
	Object.freeze(defaultCreateObservableOptions$$1);
	function assertValidOption(key) {
	    if (!/^(deep|name|defaultDecorator|proxy)$/.test(key))
	        fail$$1("invalid option for (extend)observable: " + key);
	}
	function asCreateObservableOptions$$1(thing) {
	    if (thing === null || thing === undefined)
	        return defaultCreateObservableOptions$$1;
	    if (typeof thing === "string")
	        return { name: thing, deep: true, proxy: true };
	    if (process.env.NODE_ENV !== "production") {
	        if (typeof thing !== "object")
	            return fail$$1("expected options object");
	        Object.keys(thing).forEach(assertValidOption);
	    }
	    return thing;
	}
	var deepDecorator$$1 = createDecoratorForEnhancer$$1(deepEnhancer$$1);
	var shallowDecorator = createDecoratorForEnhancer$$1(shallowEnhancer$$1);
	var refDecorator$$1 = createDecoratorForEnhancer$$1(referenceEnhancer$$1);
	var refStructDecorator = createDecoratorForEnhancer$$1(refStructEnhancer$$1);
	function getEnhancerFromOptions(options) {
	    return options.defaultDecorator
	        ? options.defaultDecorator.enhancer
	        : options.deep === false
	            ? referenceEnhancer$$1
	            : deepEnhancer$$1;
	}
	/**
	 * Turns an object, array or function into a reactive structure.
	 * @param v the value which should become observable.
	 */
	function createObservable(v, arg2, arg3) {
	    // @observable someProp;
	    if (typeof arguments[1] === "string") {
	        return deepDecorator$$1.apply(null, arguments);
	    }
	    // it is an observable already, done
	    if (isObservable$$1(v))
	        return v;
	    // something that can be converted and mutated?
	    var res = isPlainObject$$1(v)
	        ? observable$$1.object(v, arg2, arg3)
	        : Array.isArray(v)
	            ? observable$$1.array(v, arg2)
	            : isES6Map$$1(v)
	                ? observable$$1.map(v, arg2)
	                : v;
	    // this value could be converted to a new observable data structure, return it
	    if (res !== v)
	        return res;
	    // otherwise, just box it
	    fail$$1(process.env.NODE_ENV !== "production" &&
	        "The provided value could not be converted into an observable. If you want just create an observable reference to the object use 'observable.box(value)'");
	}
	var observableFactories = {
	    box: function (value, options) {
	        if (arguments.length > 2)
	            incorrectlyUsedAsDecorator("box");
	        var o = asCreateObservableOptions$$1(options);
	        return new ObservableValue$$1(value, getEnhancerFromOptions(o), o.name);
	    },
	    array: function (initialValues, options) {
	        if (arguments.length > 2)
	            incorrectlyUsedAsDecorator("array");
	        var o = asCreateObservableOptions$$1(options);
	        return createObservableArray$$1(initialValues, getEnhancerFromOptions(o), o.name);
	    },
	    map: function (initialValues, options) {
	        if (arguments.length > 2)
	            incorrectlyUsedAsDecorator("map");
	        var o = asCreateObservableOptions$$1(options);
	        return new ObservableMap$$1(initialValues, getEnhancerFromOptions(o), o.name);
	    },
	    object: function (props, decorators, options) {
	        if (typeof arguments[1] === "string")
	            incorrectlyUsedAsDecorator("object");
	        var o = asCreateObservableOptions$$1(options);
	        if (o.proxy === false) {
	            return extendObservable$$1({}, props, decorators, o);
	        }
	        else {
	            var defaultDecorator = getDefaultDecoratorFromObjectOptions$$1(o);
	            var base = extendObservable$$1({}, undefined, undefined, o);
	            var proxy = createDynamicObservableObject$$1(base);
	            extendObservableObjectWithProperties$$1(proxy, props, decorators, defaultDecorator);
	            return proxy;
	        }
	    },
	    ref: refDecorator$$1,
	    shallow: shallowDecorator,
	    deep: deepDecorator$$1,
	    struct: refStructDecorator
	};
	var observable$$1 = createObservable;
	// weird trick to keep our typings nicely with our funcs, and still extend the observable function
	Object.keys(observableFactories).forEach(function (name) { return (observable$$1[name] = observableFactories[name]); });
	function incorrectlyUsedAsDecorator(methodName) {
	    fail$$1(
	    // process.env.NODE_ENV !== "production" &&
	    "Expected one or two arguments to observable." + methodName + ". Did you accidentally try to use observable." + methodName + " as decorator?");
	}

	var computedDecorator$$1 = createPropDecorator$$1(false, function (instance, propertyName, descriptor, decoratorTarget, decoratorArgs) {
	    var get$$1 = descriptor.get, set$$1 = descriptor.set; // initialValue is the descriptor for get / set props
	    // Optimization: faster on decorator target or instance? Assuming target
	    // Optimization: find out if declaring on instance isn't just faster. (also makes the property descriptor simpler). But, more memory usage..
	    var options = decoratorArgs[0] || {};
	    asObservableObject$$1(instance).addComputedProp(decoratorTarget, propertyName, __assign({ get: get$$1,
	        set: set$$1, context: instance }, options));
	});
	var computedStructDecorator = computedDecorator$$1({ equals: comparer$$1.structural });
	/**
	 * Decorator for class properties: @computed get value() { return expr; }.
	 * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;
	 */
	var computed$$1 = function computed$$1(arg1, arg2, arg3) {
	    if (typeof arg2 === "string") {
	        // @computed
	        return computedDecorator$$1.apply(null, arguments);
	    }
	    if (arg1 !== null && typeof arg1 === "object" && arguments.length === 1) {
	        // @computed({ options })
	        return computedDecorator$$1.apply(null, arguments);
	    }
	    // computed(expr, options?)
	    if (process.env.NODE_ENV !== "production") {
	        invariant$$1(typeof arg1 === "function", "First argument to `computed` should be an expression.");
	        invariant$$1(arguments.length < 3, "Computed takes one or two arguments if used as function");
	    }
	    var opts = typeof arg2 === "object" ? arg2 : {};
	    opts.get = arg1;
	    opts.set = typeof arg2 === "function" ? arg2 : opts.set;
	    opts.name = opts.name || arg1.name || ""; /* for generated name */
	    return new ComputedValue$$1(opts);
	};
	computed$$1.struct = computedStructDecorator;

	function createAction$$1(actionName, fn) {
	    if (process.env.NODE_ENV !== "production") {
	        invariant$$1(typeof fn === "function", "`action` can only be invoked on functions");
	        if (typeof actionName !== "string" || !actionName)
	            fail$$1("actions should have valid names, got: '" + actionName + "'");
	    }
	    var res = function () {
	        return executeAction$$1(actionName, fn, this, arguments);
	    };
	    res.isMobxAction = true;
	    return res;
	}
	function executeAction$$1(actionName, fn, scope, args) {
	    var runInfo = startAction(actionName, fn, scope, args);
	    try {
	        return fn.apply(scope, args);
	    }
	    finally {
	        endAction(runInfo);
	    }
	}
	function startAction(actionName, fn, scope, args) {
	    var notifySpy = isSpyEnabled$$1() && !!actionName;
	    var startTime = 0;
	    if (notifySpy && process.env.NODE_ENV !== "production") {
	        startTime = Date.now();
	        var l = (args && args.length) || 0;
	        var flattendArgs = new Array(l);
	        if (l > 0)
	            for (var i = 0; i < l; i++)
	                flattendArgs[i] = args[i];
	        spyReportStart$$1({
	            type: "action",
	            name: actionName,
	            object: scope,
	            arguments: flattendArgs
	        });
	    }
	    var prevDerivation = untrackedStart$$1();
	    startBatch$$1();
	    var prevAllowStateChanges = allowStateChangesStart$$1(true);
	    return {
	        prevDerivation: prevDerivation,
	        prevAllowStateChanges: prevAllowStateChanges,
	        notifySpy: notifySpy,
	        startTime: startTime
	    };
	}
	function endAction(runInfo) {
	    allowStateChangesEnd$$1(runInfo.prevAllowStateChanges);
	    endBatch$$1();
	    untrackedEnd$$1(runInfo.prevDerivation);
	    if (runInfo.notifySpy && process.env.NODE_ENV !== "production")
	        spyReportEnd$$1({ time: Date.now() - runInfo.startTime });
	}
	function allowStateChanges$$1(allowStateChanges$$1, func) {
	    var prev = allowStateChangesStart$$1(allowStateChanges$$1);
	    var res;
	    try {
	        res = func();
	    }
	    finally {
	        allowStateChangesEnd$$1(prev);
	    }
	    return res;
	}
	function allowStateChangesStart$$1(allowStateChanges$$1) {
	    var prev = globalState$$1.allowStateChanges;
	    globalState$$1.allowStateChanges = allowStateChanges$$1;
	    return prev;
	}
	function allowStateChangesEnd$$1(prev) {
	    globalState$$1.allowStateChanges = prev;
	}

	var UNCHANGED$$1 = {};
	var ObservableValue$$1 = /** @class */ (function (_super) {
	    __extends(ObservableValue$$1, _super);
	    function ObservableValue$$1(value, enhancer, name, notifySpy) {
	        if (name === void 0) { name = "ObservableValue@" + getNextId$$1(); }
	        if (notifySpy === void 0) { notifySpy = true; }
	        var _this = _super.call(this, name) || this;
	        _this.enhancer = enhancer;
	        _this.hasUnreportedChange = false;
	        _this.value = enhancer(value, undefined, name);
	        if (notifySpy && isSpyEnabled$$1() && process.env.NODE_ENV !== "production") {
	            // only notify spy if this is a stand-alone observable
	            spyReport$$1({ type: "create", name: _this.name, newValue: "" + _this.value });
	        }
	        return _this;
	    }
	    ObservableValue$$1.prototype.dehanceValue = function (value) {
	        if (this.dehancer !== undefined)
	            return this.dehancer(value);
	        return value;
	    };
	    ObservableValue$$1.prototype.set = function (newValue) {
	        var oldValue = this.value;
	        newValue = this.prepareNewValue(newValue);
	        if (newValue !== UNCHANGED$$1) {
	            var notifySpy = isSpyEnabled$$1();
	            if (notifySpy && process.env.NODE_ENV !== "production") {
	                spyReportStart$$1({
	                    type: "update",
	                    name: this.name,
	                    newValue: newValue,
	                    oldValue: oldValue
	                });
	            }
	            this.setNewValue(newValue);
	            if (notifySpy && process.env.NODE_ENV !== "production")
	                spyReportEnd$$1();
	        }
	    };
	    ObservableValue$$1.prototype.prepareNewValue = function (newValue) {
	        checkIfStateModificationsAreAllowed$$1(this);
	        if (hasInterceptors$$1(this)) {
	            var change = interceptChange$$1(this, {
	                object: this,
	                type: "update",
	                newValue: newValue
	            });
	            if (!change)
	                return UNCHANGED$$1;
	            newValue = change.newValue;
	        }
	        // apply modifier
	        newValue = this.enhancer(newValue, this.value, this.name);
	        return this.value !== newValue ? newValue : UNCHANGED$$1;
	    };
	    ObservableValue$$1.prototype.setNewValue = function (newValue) {
	        var oldValue = this.value;
	        this.value = newValue;
	        this.reportChanged();
	        if (hasListeners$$1(this)) {
	            notifyListeners$$1(this, {
	                type: "update",
	                object: this,
	                newValue: newValue,
	                oldValue: oldValue
	            });
	        }
	    };
	    ObservableValue$$1.prototype.get = function () {
	        this.reportObserved();
	        return this.dehanceValue(this.value);
	    };
	    ObservableValue$$1.prototype.intercept = function (handler) {
	        return registerInterceptor$$1(this, handler);
	    };
	    ObservableValue$$1.prototype.observe = function (listener, fireImmediately) {
	        if (fireImmediately)
	            listener({
	                object: this,
	                type: "update",
	                newValue: this.value,
	                oldValue: undefined
	            });
	        return registerListener$$1(this, listener);
	    };
	    ObservableValue$$1.prototype.toJSON = function () {
	        return this.get();
	    };
	    ObservableValue$$1.prototype.toString = function () {
	        return this.name + "[" + this.value + "]";
	    };
	    ObservableValue$$1.prototype.valueOf = function () {
	        return toPrimitive$$1(this.get());
	    };
	    ObservableValue$$1.prototype[Symbol.toPrimitive] = function () {
	        return this.valueOf();
	    };
	    return ObservableValue$$1;
	}(Atom$$1));
	var isObservableValue$$1 = createInstanceofPredicate$$1("ObservableValue", ObservableValue$$1);

	/**
	 * A node in the state dependency root that observes other nodes, and can be observed itself.
	 *
	 * ComputedValue will remember the result of the computation for the duration of the batch, or
	 * while being observed.
	 *
	 * During this time it will recompute only when one of its direct dependencies changed,
	 * but only when it is being accessed with `ComputedValue.get()`.
	 *
	 * Implementation description:
	 * 1. First time it's being accessed it will compute and remember result
	 *    give back remembered result until 2. happens
	 * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.
	 * 3. When it's being accessed, recompute if any shallow dependency changed.
	 *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.
	 *    go to step 2. either way
	 *
	 * If at any point it's outside batch and it isn't observed: reset everything and go to 1.
	 */
	var ComputedValue$$1 = /** @class */ (function () {
	    /**
	     * Create a new computed value based on a function expression.
	     *
	     * The `name` property is for debug purposes only.
	     *
	     * The `equals` property specifies the comparer function to use to determine if a newly produced
	     * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`
	     * compares based on identity comparison (===), and `structualComparer` deeply compares the structure.
	     * Structural comparison can be convenient if you always produce a new aggregated object and
	     * don't want to notify observers if it is structurally the same.
	     * This is useful for working with vectors, mouse coordinates etc.
	     */
	    function ComputedValue$$1(options) {
	        this.dependenciesState = exports.IDerivationState.NOT_TRACKING;
	        this.observing = []; // nodes we are looking at. Our value depends on these nodes
	        this.newObserving = null; // during tracking it's an array with new observed observers
	        this.isBeingObserved = false;
	        this.isPendingUnobservation = false;
	        this.observers = new Set();
	        this.diffValue = 0;
	        this.runId = 0;
	        this.lastAccessedBy = 0;
	        this.lowestObserverState = exports.IDerivationState.UP_TO_DATE;
	        this.unboundDepsCount = 0;
	        this.__mapid = "#" + getNextId$$1();
	        this.value = new CaughtException$$1(null);
	        this.isComputing = false; // to check for cycles
	        this.isRunningSetter = false;
	        this.isTracing = TraceMode$$1.NONE;
	        this.firstGet = true;
	        if (process.env.NODE_ENV !== "production" && !options.get)
	            throw "[mobx] missing option for computed: get";
	        this.derivation = options.get;
	        this.name = options.name || "ComputedValue@" + getNextId$$1();
	        if (options.set)
	            this.setter = createAction$$1(this.name + "-setter", options.set);
	        this.equals =
	            options.equals ||
	                (options.compareStructural || options.struct
	                    ? comparer$$1.structural
	                    : comparer$$1.default);
	        this.scope = options.context;
	        this.requiresReaction = !!options.requiresReaction;
	        this.keepAlive = !!options.keepAlive;
	    }
	    ComputedValue$$1.prototype.onBecomeStale = function () {
	        propagateMaybeChanged$$1(this);
	    };
	    ComputedValue$$1.prototype.onBecomeUnobserved = function () { };
	    ComputedValue$$1.prototype.onBecomeObserved = function () { };
	    /**
	     * Returns the current value of this computed value.
	     * Will evaluate its computation first if needed.
	     */
	    ComputedValue$$1.prototype.get = function () {
	        var _this = this;
	        if (this.keepAlive && this.firstGet) {
	            this.firstGet = false;
	            autorun$$1(function () { return _this.get(); });
	        }
	        if (this.isComputing)
	            fail$$1("Cycle detected in computation " + this.name + ": " + this.derivation);
	        if (globalState$$1.inBatch === 0 && this.observers.size === 0) {
	            if (shouldCompute$$1(this)) {
	                this.warnAboutUntrackedRead();
	                startBatch$$1(); // See perf test 'computed memoization'
	                this.value = this.computeValue(false);
	                endBatch$$1();
	            }
	        }
	        else {
	            reportObserved$$1(this);
	            if (shouldCompute$$1(this))
	                if (this.trackAndCompute())
	                    propagateChangeConfirmed$$1(this);
	        }
	        var result = this.value;
	        if (isCaughtException$$1(result))
	            throw result.cause;
	        return result;
	    };
	    ComputedValue$$1.prototype.peek = function () {
	        var res = this.computeValue(false);
	        if (isCaughtException$$1(res))
	            throw res.cause;
	        return res;
	    };
	    ComputedValue$$1.prototype.set = function (value) {
	        if (this.setter) {
	            invariant$$1(!this.isRunningSetter, "The setter of computed value '" + this.name + "' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?");
	            this.isRunningSetter = true;
	            try {
	                this.setter.call(this.scope, value);
	            }
	            finally {
	                this.isRunningSetter = false;
	            }
	        }
	        else
	            invariant$$1(false, process.env.NODE_ENV !== "production" &&
	                "[ComputedValue '" + this.name + "'] It is not possible to assign a new value to a computed value.");
	    };
	    ComputedValue$$1.prototype.trackAndCompute = function () {
	        if (isSpyEnabled$$1() && process.env.NODE_ENV !== "production") {
	            spyReport$$1({
	                object: this.scope,
	                type: "compute",
	                name: this.name
	            });
	        }
	        var oldValue = this.value;
	        var wasSuspended = 
	        /* see #1208 */ this.dependenciesState === exports.IDerivationState.NOT_TRACKING;
	        var newValue = this.computeValue(true);
	        var changed = wasSuspended ||
	            isCaughtException$$1(oldValue) ||
	            isCaughtException$$1(newValue) ||
	            !this.equals(oldValue, newValue);
	        if (changed) {
	            this.value = newValue;
	        }
	        return changed;
	    };
	    ComputedValue$$1.prototype.computeValue = function (track) {
	        this.isComputing = true;
	        globalState$$1.computationDepth++;
	        var res;
	        if (track) {
	            res = trackDerivedFunction$$1(this, this.derivation, this.scope);
	        }
	        else {
	            if (globalState$$1.disableErrorBoundaries === true) {
	                res = this.derivation.call(this.scope);
	            }
	            else {
	                try {
	                    res = this.derivation.call(this.scope);
	                }
	                catch (e) {
	                    res = new CaughtException$$1(e);
	                }
	            }
	        }
	        globalState$$1.computationDepth--;
	        this.isComputing = false;
	        return res;
	    };
	    ComputedValue$$1.prototype.suspend = function () {
	        clearObserving$$1(this);
	        this.value = undefined; // don't hold on to computed value!
	    };
	    ComputedValue$$1.prototype.observe = function (listener, fireImmediately) {
	        var _this = this;
	        var firstTime = true;
	        var prevValue = undefined;
	        return autorun$$1(function () {
	            var newValue = _this.get();
	            if (!firstTime || fireImmediately) {
	                var prevU = untrackedStart$$1();
	                listener({
	                    type: "update",
	                    object: _this,
	                    newValue: newValue,
	                    oldValue: prevValue
	                });
	                untrackedEnd$$1(prevU);
	            }
	            firstTime = false;
	            prevValue = newValue;
	        });
	    };
	    ComputedValue$$1.prototype.warnAboutUntrackedRead = function () {
	        if (process.env.NODE_ENV === "production")
	            return;
	        if (this.requiresReaction === true) {
	            fail$$1("[mobx] Computed value " + this.name + " is read outside a reactive context");
	        }
	        if (this.isTracing !== TraceMode$$1.NONE) {
	            console.log("[mobx.trace] '" + this.name + "' is being read outside a reactive context. Doing a full recompute");
	        }
	        if (globalState$$1.computedRequiresReaction) {
	            console.warn("[mobx] Computed value " + this.name + " is being read outside a reactive context. Doing a full recompute");
	        }
	    };
	    ComputedValue$$1.prototype.toJSON = function () {
	        return this.get();
	    };
	    ComputedValue$$1.prototype.toString = function () {
	        return this.name + "[" + this.derivation.toString() + "]";
	    };
	    ComputedValue$$1.prototype.valueOf = function () {
	        return toPrimitive$$1(this.get());
	    };
	    ComputedValue$$1.prototype[Symbol.toPrimitive] = function () {
	        return this.valueOf();
	    };
	    return ComputedValue$$1;
	}());
	var isComputedValue$$1 = createInstanceofPredicate$$1("ComputedValue", ComputedValue$$1);

	(function (IDerivationState$$1) {
	    // before being run or (outside batch and not being observed)
	    // at this point derivation is not holding any data about dependency tree
	    IDerivationState$$1[IDerivationState$$1["NOT_TRACKING"] = -1] = "NOT_TRACKING";
	    // no shallow dependency changed since last computation
	    // won't recalculate derivation
	    // this is what makes mobx fast
	    IDerivationState$$1[IDerivationState$$1["UP_TO_DATE"] = 0] = "UP_TO_DATE";
	    // some deep dependency changed, but don't know if shallow dependency changed
	    // will require to check first if UP_TO_DATE or POSSIBLY_STALE
	    // currently only ComputedValue will propagate POSSIBLY_STALE
	    //
	    // having this state is second big optimization:
	    // don't have to recompute on every dependency change, but only when it's needed
	    IDerivationState$$1[IDerivationState$$1["POSSIBLY_STALE"] = 1] = "POSSIBLY_STALE";
	    // A shallow dependency has changed since last computation and the derivation
	    // will need to recompute when it's needed next.
	    IDerivationState$$1[IDerivationState$$1["STALE"] = 2] = "STALE";
	})(exports.IDerivationState || (exports.IDerivationState = {}));
	var TraceMode$$1;
	(function (TraceMode$$1) {
	    TraceMode$$1[TraceMode$$1["NONE"] = 0] = "NONE";
	    TraceMode$$1[TraceMode$$1["LOG"] = 1] = "LOG";
	    TraceMode$$1[TraceMode$$1["BREAK"] = 2] = "BREAK";
	})(TraceMode$$1 || (TraceMode$$1 = {}));
	var CaughtException$$1 = /** @class */ (function () {
	    function CaughtException$$1(cause) {
	        this.cause = cause;
	        // Empty
	    }
	    return CaughtException$$1;
	}());
	function isCaughtException$$1(e) {
	    return e instanceof CaughtException$$1;
	}
	/**
	 * Finds out whether any dependency of the derivation has actually changed.
	 * If dependenciesState is 1 then it will recalculate dependencies,
	 * if any dependency changed it will propagate it by changing dependenciesState to 2.
	 *
	 * By iterating over the dependencies in the same order that they were reported and
	 * stopping on the first change, all the recalculations are only called for ComputedValues
	 * that will be tracked by derivation. That is because we assume that if the first x
	 * dependencies of the derivation doesn't change then the derivation should run the same way
	 * up until accessing x-th dependency.
	 */
	function shouldCompute$$1(derivation) {
	    switch (derivation.dependenciesState) {
	        case exports.IDerivationState.UP_TO_DATE:
	            return false;
	        case exports.IDerivationState.NOT_TRACKING:
	        case exports.IDerivationState.STALE:
	            return true;
	        case exports.IDerivationState.POSSIBLY_STALE: {
	            var prevUntracked = untrackedStart$$1(); // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.
	            var obs = derivation.observing, l = obs.length;
	            for (var i = 0; i < l; i++) {
	                var obj = obs[i];
	                if (isComputedValue$$1(obj)) {
	                    if (globalState$$1.disableErrorBoundaries) {
	                        obj.get();
	                    }
	                    else {
	                        try {
	                            obj.get();
	                        }
	                        catch (e) {
	                            // we are not interested in the value *or* exception at this moment, but if there is one, notify all
	                            untrackedEnd$$1(prevUntracked);
	                            return true;
	                        }
	                    }
	                    // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.
	                    // and `derivation` is an observer of `obj`
	                    // invariantShouldCompute(derivation)
	                    if (derivation.dependenciesState === exports.IDerivationState.STALE) {
	                        untrackedEnd$$1(prevUntracked);
	                        return true;
	                    }
	                }
	            }
	            changeDependenciesStateTo0$$1(derivation);
	            untrackedEnd$$1(prevUntracked);
	            return false;
	        }
	    }
	}
	// function invariantShouldCompute(derivation: IDerivation) {
	//     const newDepState = (derivation as any).dependenciesState
	//     if (
	//         process.env.NODE_ENV === "production" &&
	//         (newDepState === IDerivationState.POSSIBLY_STALE ||
	//             newDepState === IDerivationState.NOT_TRACKING)
	//     )
	//         fail("Illegal dependency state")
	// }
	function isComputingDerivation$$1() {
	    return globalState$$1.trackingDerivation !== null; // filter out actions inside computations
	}
	function checkIfStateModificationsAreAllowed$$1(atom) {
	    var hasObservers$$1 = atom.observers.size > 0;
	    // Should never be possible to change an observed observable from inside computed, see #798
	    if (globalState$$1.computationDepth > 0 && hasObservers$$1)
	        fail$$1(process.env.NODE_ENV !== "production" &&
	            "Computed values are not allowed to cause side effects by changing observables that are already being observed. Tried to modify: " + atom.name);
	    // Should not be possible to change observed state outside strict mode, except during initialization, see #563
	    if (!globalState$$1.allowStateChanges && (hasObservers$$1 || globalState$$1.enforceActions === "strict"))
	        fail$$1(process.env.NODE_ENV !== "production" &&
	            (globalState$$1.enforceActions
	                ? "Since strict-mode is enabled, changing observed observable values outside actions is not allowed. Please wrap the code in an `action` if this change is intended. Tried to modify: "
	                : "Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, the render function of a React component? Tried to modify: ") +
	                atom.name);
	}
	/**
	 * Executes the provided function `f` and tracks which observables are being accessed.
	 * The tracking information is stored on the `derivation` object and the derivation is registered
	 * as observer of any of the accessed observables.
	 */
	function trackDerivedFunction$$1(derivation, f, context) {
	    // pre allocate array allocation + room for variation in deps
	    // array will be trimmed by bindDependencies
	    changeDependenciesStateTo0$$1(derivation);
	    derivation.newObserving = new Array(derivation.observing.length + 100);
	    derivation.unboundDepsCount = 0;
	    derivation.runId = ++globalState$$1.runId;
	    var prevTracking = globalState$$1.trackingDerivation;
	    globalState$$1.trackingDerivation = derivation;
	    var result;
	    if (globalState$$1.disableErrorBoundaries === true) {
	        result = f.call(context);
	    }
	    else {
	        try {
	            result = f.call(context);
	        }
	        catch (e) {
	            result = new CaughtException$$1(e);
	        }
	    }
	    globalState$$1.trackingDerivation = prevTracking;
	    bindDependencies(derivation);
	    return result;
	}
	/**
	 * diffs newObserving with observing.
	 * update observing to be newObserving with unique observables
	 * notify observers that become observed/unobserved
	 */
	function bindDependencies(derivation) {
	    // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, "INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1");
	    var prevObserving = derivation.observing;
	    var observing = (derivation.observing = derivation.newObserving);
	    var lowestNewObservingDerivationState = exports.IDerivationState.UP_TO_DATE;
	    // Go through all new observables and check diffValue: (this list can contain duplicates):
	    //   0: first occurrence, change to 1 and keep it
	    //   1: extra occurrence, drop it
	    var i0 = 0, l = derivation.unboundDepsCount;
	    for (var i = 0; i < l; i++) {
	        var dep = observing[i];
	        if (dep.diffValue === 0) {
	            dep.diffValue = 1;
	            if (i0 !== i)
	                observing[i0] = dep;
	            i0++;
	        }
	        // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,
	        // not hitting the condition
	        if (dep.dependenciesState > lowestNewObservingDerivationState) {
	            lowestNewObservingDerivationState = dep.dependenciesState;
	        }
	    }
	    observing.length = i0;
	    derivation.newObserving = null; // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)
	    // Go through all old observables and check diffValue: (it is unique after last bindDependencies)
	    //   0: it's not in new observables, unobserve it
	    //   1: it keeps being observed, don't want to notify it. change to 0
	    l = prevObserving.length;
	    while (l--) {
	        var dep = prevObserving[l];
	        if (dep.diffValue === 0) {
	            removeObserver$$1(dep, derivation);
	        }
	        dep.diffValue = 0;
	    }
	    // Go through all new observables and check diffValue: (now it should be unique)
	    //   0: it was set to 0 in last loop. don't need to do anything.
	    //   1: it wasn't observed, let's observe it. set back to 0
	    while (i0--) {
	        var dep = observing[i0];
	        if (dep.diffValue === 1) {
	            dep.diffValue = 0;
	            addObserver$$1(dep, derivation);
	        }
	    }
	    // Some new observed derivations may become stale during this derivation computation
	    // so they have had no chance to propagate staleness (#916)
	    if (lowestNewObservingDerivationState !== exports.IDerivationState.UP_TO_DATE) {
	        derivation.dependenciesState = lowestNewObservingDerivationState;
	        derivation.onBecomeStale();
	    }
	}
	function clearObserving$$1(derivation) {
	    // invariant(globalState.inBatch > 0, "INTERNAL ERROR clearObserving should be called only inside batch");
	    var obs = derivation.observing;
	    derivation.observing = [];
	    var i = obs.length;
	    while (i--)
	        removeObserver$$1(obs[i], derivation);
	    derivation.dependenciesState = exports.IDerivationState.NOT_TRACKING;
	}
	function untracked$$1(action$$1) {
	    var prev = untrackedStart$$1();
	    try {
	        return action$$1();
	    }
	    finally {
	        untrackedEnd$$1(prev);
	    }
	}
	function untrackedStart$$1() {
	    var prev = globalState$$1.trackingDerivation;
	    globalState$$1.trackingDerivation = null;
	    return prev;
	}
	function untrackedEnd$$1(prev) {
	    globalState$$1.trackingDerivation = prev;
	}
	/**
	 * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0
	 *
	 */
	function changeDependenciesStateTo0$$1(derivation) {
	    if (derivation.dependenciesState === exports.IDerivationState.UP_TO_DATE)
	        return;
	    derivation.dependenciesState = exports.IDerivationState.UP_TO_DATE;
	    var obs = derivation.observing;
	    var i = obs.length;
	    while (i--)
	        obs[i].lowestObserverState = exports.IDerivationState.UP_TO_DATE;
	}

	/**
	 * These values will persist if global state is reset
	 */
	var persistentKeys = [
	    "mobxGuid",
	    "spyListeners",
	    "enforceActions",
	    "computedRequiresReaction",
	    "disableErrorBoundaries",
	    "runId"
	];
	var MobXGlobals$$1 = /** @class */ (function () {
	    function MobXGlobals$$1() {
	        /**
	         * MobXGlobals version.
	         * MobX compatiblity with other versions loaded in memory as long as this version matches.
	         * It indicates that the global state still stores similar information
	         *
	         * N.B: this version is unrelated to the package version of MobX, and is only the version of the
	         * internal state storage of MobX, and can be the same across many different package versions
	         */
	        this.version = 5;
	        /**
	         * Currently running derivation
	         */
	        this.trackingDerivation = null;
	        /**
	         * Are we running a computation currently? (not a reaction)
	         */
	        this.computationDepth = 0;
	        /**
	         * Each time a derivation is tracked, it is assigned a unique run-id
	         */
	        this.runId = 0;
	        /**
	         * 'guid' for general purpose. Will be persisted amongst resets.
	         */
	        this.mobxGuid = 0;
	        /**
	         * Are we in a batch block? (and how many of them)
	         */
	        this.inBatch = 0;
	        /**
	         * Observables that don't have observers anymore, and are about to be
	         * suspended, unless somebody else accesses it in the same batch
	         *
	         * @type {IObservable[]}
	         */
	        this.pendingUnobservations = [];
	        /**
	         * List of scheduled, not yet executed, reactions.
	         */
	        this.pendingReactions = [];
	        /**
	         * Are we currently processing reactions?
	         */
	        this.isRunningReactions = false;
	        /**
	         * Is it allowed to change observables at this point?
	         * In general, MobX doesn't allow that when running computations and React.render.
	         * To ensure that those functions stay pure.
	         */
	        this.allowStateChanges = true;
	        /**
	         * If strict mode is enabled, state changes are by default not allowed
	         */
	        this.enforceActions = false;
	        /**
	         * Spy callbacks
	         */
	        this.spyListeners = [];
	        /**
	         * Globally attached error handlers that react specifically to errors in reactions
	         */
	        this.globalReactionErrorHandlers = [];
	        /**
	         * Warn if computed values are accessed outside a reactive context
	         */
	        this.computedRequiresReaction = false;
	        /*
	         * Don't catch and rethrow exceptions. This is useful for inspecting the state of
	         * the stack when an exception occurs while debugging.
	         */
	        this.disableErrorBoundaries = false;
	    }
	    return MobXGlobals$$1;
	}());
	var canMergeGlobalState = true;
	var isolateCalled = false;
	var globalState$$1 = (function () {
	    var global = getGlobal$$1();
	    if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals)
	        canMergeGlobalState = false;
	    if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals$$1().version)
	        canMergeGlobalState = false;
	    if (!canMergeGlobalState) {
	        setTimeout(function () {
	            if (!isolateCalled) {
	                fail$$1("There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`");
	            }
	        }, 1);
	        return new MobXGlobals$$1();
	    }
	    else if (global.__mobxGlobals) {
	        global.__mobxInstanceCount += 1;
	        return global.__mobxGlobals;
	    }
	    else {
	        global.__mobxInstanceCount = 1;
	        return (global.__mobxGlobals = new MobXGlobals$$1());
	    }
	})();
	function isolateGlobalState$$1() {
	    if (globalState$$1.pendingReactions.length ||
	        globalState$$1.inBatch ||
	        globalState$$1.isRunningReactions)
	        fail$$1("isolateGlobalState should be called before MobX is running any reactions");
	    isolateCalled = true;
	    if (canMergeGlobalState) {
	        if (--getGlobal$$1().__mobxInstanceCount === 0)
	            getGlobal$$1().__mobxGlobals = undefined;
	        globalState$$1 = new MobXGlobals$$1();
	    }
	}
	function getGlobalState$$1() {
	    return globalState$$1;
	}
	/**
	 * For testing purposes only; this will break the internal state of existing observables,
	 * but can be used to get back at a stable state after throwing errors
	 */
	function resetGlobalState$$1() {
	    var defaultGlobals = new MobXGlobals$$1();
	    for (var key in defaultGlobals)
	        if (persistentKeys.indexOf(key) === -1)
	            globalState$$1[key] = defaultGlobals[key];
	    globalState$$1.allowStateChanges = !globalState$$1.enforceActions;
	}
	function getGlobal$$1() {
	    return typeof window !== "undefined" ? window : global;
	}

	function hasObservers$$1(observable$$1) {
	    return observable$$1.observers && observable$$1.observers.size > 0;
	}
	function getObservers$$1(observable$$1) {
	    return observable$$1.observers;
	}
	// function invariantObservers(observable: IObservable) {
	//     const list = observable.observers
	//     const map = observable.observersIndexes
	//     const l = list.length
	//     for (let i = 0; i < l; i++) {
	//         const id = list[i].__mapid
	//         if (i) {
	//             invariant(map[id] === i, "INTERNAL ERROR maps derivation.__mapid to index in list") // for performance
	//         } else {
	//             invariant(!(id in map), "INTERNAL ERROR observer on index 0 shouldn't be held in map.") // for performance
	//         }
	//     }
	//     invariant(
	//         list.length === 0 || Object.keys(map).length === list.length - 1,
	//         "INTERNAL ERROR there is no junk in map"
	//     )
	// }
	function addObserver$$1(observable$$1, node) {
	    // invariant(node.dependenciesState !== -1, "INTERNAL ERROR, can add only dependenciesState !== -1");
	    // invariant(observable._observers.indexOf(node) === -1, "INTERNAL ERROR add already added node");
	    // invariantObservers(observable);
	    observable$$1.observers.add(node);
	    if (observable$$1.lowestObserverState > node.dependenciesState)
	        observable$$1.lowestObserverState = node.dependenciesState;
	    // invariantObservers(observable);
	    // invariant(observable._observers.indexOf(node) !== -1, "INTERNAL ERROR didn't add node");
	}
	function removeObserver$$1(observable$$1, node) {
	    // invariant(globalState.inBatch > 0, "INTERNAL ERROR, remove should be called only inside batch");
	    // invariant(observable._observers.indexOf(node) !== -1, "INTERNAL ERROR remove already removed node");
	    // invariantObservers(observable);
	    observable$$1.observers.delete(node);
	    if (observable$$1.observers.size === 0) {
	        // deleting last observer
	        queueForUnobservation$$1(observable$$1);
	    }
	    // invariantObservers(observable);
	    // invariant(observable._observers.indexOf(node) === -1, "INTERNAL ERROR remove already removed node2");
	}
	function queueForUnobservation$$1(observable$$1) {
	    if (observable$$1.isPendingUnobservation === false) {
	        // invariant(observable._observers.length === 0, "INTERNAL ERROR, should only queue for unobservation unobserved observables");
	        observable$$1.isPendingUnobservation = true;
	        globalState$$1.pendingUnobservations.push(observable$$1);
	    }
	}
	/**
	 * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.
	 * During a batch `onBecomeUnobserved` will be called at most once per observable.
	 * Avoids unnecessary recalculations.
	 */
	function startBatch$$1() {
	    globalState$$1.inBatch++;
	}
	function endBatch$$1() {
	    if (--globalState$$1.inBatch === 0) {
	        runReactions$$1();
	        // the batch is actually about to finish, all unobserving should happen here.
	        var list = globalState$$1.pendingUnobservations;
	        for (var i = 0; i < list.length; i++) {
	            var observable$$1 = list[i];
	            observable$$1.isPendingUnobservation = false;
	            if (observable$$1.observers.size === 0) {
	                if (observable$$1.isBeingObserved) {
	                    // if this observable had reactive observers, trigger the hooks
	                    observable$$1.isBeingObserved = false;
	                    observable$$1.onBecomeUnobserved();
	                }
	                if (observable$$1 instanceof ComputedValue$$1) {
	                    // computed values are automatically teared down when the last observer leaves
	                    // this process happens recursively, this computed might be the last observabe of another, etc..
	                    observable$$1.suspend();
	                }
	            }
	        }
	        globalState$$1.pendingUnobservations = [];
	    }
	}
	function reportObserved$$1(observable$$1) {
	    var derivation = globalState$$1.trackingDerivation;
	    if (derivation !== null) {
	        /**
	         * Simple optimization, give each derivation run an unique id (runId)
	         * Check if last time this observable was accessed the same runId is used
	         * if this is the case, the relation is already known
	         */
	        if (derivation.runId !== observable$$1.lastAccessedBy) {
	            observable$$1.lastAccessedBy = derivation.runId;
	            // Tried storing newObserving, or observing, or both as Set, but performance didn't come close...
	            derivation.newObserving[derivation.unboundDepsCount++] = observable$$1;
	            if (!observable$$1.isBeingObserved) {
	                observable$$1.isBeingObserved = true;
	                observable$$1.onBecomeObserved();
	            }
	        }
	        return true;
	    }
	    else if (observable$$1.observers.size === 0 && globalState$$1.inBatch > 0) {
	        queueForUnobservation$$1(observable$$1);
	    }
	    return false;
	}
	// function invariantLOS(observable: IObservable, msg: string) {
	//     // it's expensive so better not run it in produciton. but temporarily helpful for testing
	//     const min = getObservers(observable).reduce((a, b) => Math.min(a, b.dependenciesState), 2)
	//     if (min >= observable.lowestObserverState) return // <- the only assumption about `lowestObserverState`
	//     throw new Error(
	//         "lowestObserverState is wrong for " +
	//             msg +
	//             " because " +
	//             min +
	//             " < " +
	//             observable.lowestObserverState
	//     )
	// }
	/**
	 * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly
	 * It will propagate changes to observers from previous run
	 * It's hard or maybe impossible (with reasonable perf) to get it right with current approach
	 * Hopefully self reruning autoruns aren't a feature people should depend on
	 * Also most basic use cases should be ok
	 */
	// Called by Atom when its value changes
	function propagateChanged$$1(observable$$1) {
	    // invariantLOS(observable, "changed start");
	    if (observable$$1.lowestObserverState === exports.IDerivationState.STALE)
	        return;
	    observable$$1.lowestObserverState = exports.IDerivationState.STALE;
	    // Ideally we use for..of here, but the downcompiled version is really slow...
	    observable$$1.observers.forEach(function (d) {
	        if (d.dependenciesState === exports.IDerivationState.UP_TO_DATE) {
	            if (d.isTracing !== TraceMode$$1.NONE) {
	                logTraceInfo(d, observable$$1);
	            }
	            d.onBecomeStale();
	        }
	        d.dependenciesState = exports.IDerivationState.STALE;
	    });
	    // invariantLOS(observable, "changed end");
	}
	// Called by ComputedValue when it recalculate and its value changed
	function propagateChangeConfirmed$$1(observable$$1) {
	    // invariantLOS(observable, "confirmed start");
	    if (observable$$1.lowestObserverState === exports.IDerivationState.STALE)
	        return;
	    observable$$1.lowestObserverState = exports.IDerivationState.STALE;
	    observable$$1.observers.forEach(function (d) {
	        if (d.dependenciesState === exports.IDerivationState.POSSIBLY_STALE)
	            d.dependenciesState = exports.IDerivationState.STALE;
	        else if (d.dependenciesState === exports.IDerivationState.UP_TO_DATE // this happens during computing of `d`, just keep lowestObserverState up to date.
	        )
	            observable$$1.lowestObserverState = exports.IDerivationState.UP_TO_DATE;
	    });
	    // invariantLOS(observable, "confirmed end");
	}
	// Used by computed when its dependency changed, but we don't wan't to immediately recompute.
	function propagateMaybeChanged$$1(observable$$1) {
	    // invariantLOS(observable, "maybe start");
	    if (observable$$1.lowestObserverState !== exports.IDerivationState.UP_TO_DATE)
	        return;
	    observable$$1.lowestObserverState = exports.IDerivationState.POSSIBLY_STALE;
	    observable$$1.observers.forEach(function (d) {
	        if (d.dependenciesState === exports.IDerivationState.UP_TO_DATE) {
	            d.dependenciesState = exports.IDerivationState.POSSIBLY_STALE;
	            if (d.isTracing !== TraceMode$$1.NONE) {
	                logTraceInfo(d, observable$$1);
	            }
	            d.onBecomeStale();
	        }
	    });
	    // invariantLOS(observable, "maybe end");
	}
	function logTraceInfo(derivation, observable$$1) {
	    console.log("[mobx.trace] '" + derivation.name + "' is invalidated due to a change in: '" + observable$$1.name + "'");
	    if (derivation.isTracing === TraceMode$$1.BREAK) {
	        var lines = [];
	        printDepTree(getDependencyTree$$1(derivation), lines, 1);
	        // prettier-ignore
	        new Function("debugger;\n/*\nTracing '" + derivation.name + "'\n\nYou are entering this break point because derivation '" + derivation.name + "' is being traced and '" + observable$$1.name + "' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n" + (derivation instanceof ComputedValue$$1 ? derivation.derivation.toString() : "") + "\n\nThe dependencies for this derivation are:\n\n" + lines.join("\n") + "\n*/\n    ")();
	    }
	}
	function printDepTree(tree, lines, depth) {
	    if (lines.length >= 1000) {
	        lines.push("(and many more)");
	        return;
	    }
	    lines.push("" + new Array(depth).join("\t") + tree.name); // MWE: not the fastest, but the easiest way :)
	    if (tree.dependencies)
	        tree.dependencies.forEach(function (child) { return printDepTree(child, lines, depth + 1); });
	}

	var Reaction$$1 = /** @class */ (function () {
	    function Reaction$$1(name, onInvalidate, errorHandler) {
	        if (name === void 0) { name = "Reaction@" + getNextId$$1(); }
	        this.name = name;
	        this.onInvalidate = onInvalidate;
	        this.errorHandler = errorHandler;
	        this.observing = []; // nodes we are looking at. Our value depends on these nodes
	        this.newObserving = [];
	        this.dependenciesState = exports.IDerivationState.NOT_TRACKING;
	        this.diffValue = 0;
	        this.runId = 0;
	        this.unboundDepsCount = 0;
	        this.__mapid = "#" + getNextId$$1();
	        this.isDisposed = false;
	        this._isScheduled = false;
	        this._isTrackPending = false;
	        this._isRunning = false;
	        this.isTracing = TraceMode$$1.NONE;
	    }
	    Reaction$$1.prototype.onBecomeStale = function () {
	        this.schedule();
	    };
	    Reaction$$1.prototype.schedule = function () {
	        if (!this._isScheduled) {
	            this._isScheduled = true;
	            globalState$$1.pendingReactions.push(this);
	            runReactions$$1();
	        }
	    };
	    Reaction$$1.prototype.isScheduled = function () {
	        return this._isScheduled;
	    };
	    /**
	     * internal, use schedule() if you intend to kick off a reaction
	     */
	    Reaction$$1.prototype.runReaction = function () {
	        if (!this.isDisposed) {
	            startBatch$$1();
	            this._isScheduled = false;
	            if (shouldCompute$$1(this)) {
	                this._isTrackPending = true;
	                try {
	                    this.onInvalidate();
	                    if (this._isTrackPending &&
	                        isSpyEnabled$$1() &&
	                        process.env.NODE_ENV !== "production") {
	                        // onInvalidate didn't trigger track right away..
	                        spyReport$$1({
	                            name: this.name,
	                            type: "scheduled-reaction"
	                        });
	                    }
	                }
	                catch (e) {
	                    this.reportExceptionInDerivation(e);
	                }
	            }
	            endBatch$$1();
	        }
	    };
	    Reaction$$1.prototype.track = function (fn) {
	        startBatch$$1();
	        var notify = isSpyEnabled$$1();
	        var startTime;
	        if (notify && process.env.NODE_ENV !== "production") {
	            startTime = Date.now();
	            spyReportStart$$1({
	                name: this.name,
	                type: "reaction"
	            });
	        }
	        this._isRunning = true;
	        var result = trackDerivedFunction$$1(this, fn, undefined);
	        this._isRunning = false;
	        this._isTrackPending = false;
	        if (this.isDisposed) {
	            // disposed during last run. Clean up everything that was bound after the dispose call.
	            clearObserving$$1(this);
	        }
	        if (isCaughtException$$1(result))
	            this.reportExceptionInDerivation(result.cause);
	        if (notify && process.env.NODE_ENV !== "production") {
	            spyReportEnd$$1({
	                time: Date.now() - startTime
	            });
	        }
	        endBatch$$1();
	    };
	    Reaction$$1.prototype.reportExceptionInDerivation = function (error) {
	        var _this = this;
	        if (this.errorHandler) {
	            this.errorHandler(error, this);
	            return;
	        }
	        if (globalState$$1.disableErrorBoundaries)
	            throw error;
	        var message = "[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '" + this;
	        console.error(message, error);
	        /** If debugging brought you here, please, read the above message :-). Tnx! */
	        if (isSpyEnabled$$1()) {
	            spyReport$$1({
	                type: "error",
	                name: this.name,
	                message: message,
	                error: "" + error
	            });
	        }
	        globalState$$1.globalReactionErrorHandlers.forEach(function (f) { return f(error, _this); });
	    };
	    Reaction$$1.prototype.dispose = function () {
	        if (!this.isDisposed) {
	            this.isDisposed = true;
	            if (!this._isRunning) {
	                // if disposed while running, clean up later. Maybe not optimal, but rare case
	                startBatch$$1();
	                clearObserving$$1(this);
	                endBatch$$1();
	            }
	        }
	    };
	    Reaction$$1.prototype.getDisposer = function () {
	        var r = this.dispose.bind(this);
	        r[$mobx$$1] = this;
	        return r;
	    };
	    Reaction$$1.prototype.toString = function () {
	        return "Reaction[" + this.name + "]";
	    };
	    Reaction$$1.prototype.trace = function (enterBreakPoint) {
	        if (enterBreakPoint === void 0) { enterBreakPoint = false; }
	        trace$$1(this, enterBreakPoint);
	    };
	    return Reaction$$1;
	}());
	function onReactionError$$1(handler) {
	    globalState$$1.globalReactionErrorHandlers.push(handler);
	    return function () {
	        var idx = globalState$$1.globalReactionErrorHandlers.indexOf(handler);
	        if (idx >= 0)
	            globalState$$1.globalReactionErrorHandlers.splice(idx, 1);
	    };
	}
	/**
	 * Magic number alert!
	 * Defines within how many times a reaction is allowed to re-trigger itself
	 * until it is assumed that this is gonna be a never ending loop...
	 */
	var MAX_REACTION_ITERATIONS = 100;
	var reactionScheduler = function (f) { return f(); };
	function runReactions$$1() {
	    // Trampolining, if runReactions are already running, new reactions will be picked up
	    if (globalState$$1.inBatch > 0 || globalState$$1.isRunningReactions)
	        return;
	    reactionScheduler(runReactionsHelper);
	}
	function runReactionsHelper() {
	    globalState$$1.isRunningReactions = true;
	    var allReactions = globalState$$1.pendingReactions;
	    var iterations = 0;
	    // While running reactions, new reactions might be triggered.
	    // Hence we work with two variables and check whether
	    // we converge to no remaining reactions after a while.
	    while (allReactions.length > 0) {
	        if (++iterations === MAX_REACTION_ITERATIONS) {
	            console.error("Reaction doesn't converge to a stable state after " + MAX_REACTION_ITERATIONS + " iterations." +
	                (" Probably there is a cycle in the reactive function: " + allReactions[0]));
	            allReactions.splice(0); // clear reactions
	        }
	        var remainingReactions = allReactions.splice(0);
	        for (var i = 0, l = remainingReactions.length; i < l; i++)
	            remainingReactions[i].runReaction();
	    }
	    globalState$$1.isRunningReactions = false;
	}
	var isReaction$$1 = createInstanceofPredicate$$1("Reaction", Reaction$$1);
	function setReactionScheduler$$1(fn) {
	    var baseScheduler = reactionScheduler;
	    reactionScheduler = function (f) { return fn(function () { return baseScheduler(f); }); };
	}

	function isSpyEnabled$$1() {
	    return process.env.NODE_ENV !== "production" && !!globalState$$1.spyListeners.length;
	}
	function spyReport$$1(event) {
	    if (process.env.NODE_ENV === "production")
	        return; // dead code elimination can do the rest
	    if (!globalState$$1.spyListeners.length)
	        return;
	    var listeners = globalState$$1.spyListeners;
	    for (var i = 0, l = listeners.length; i < l; i++)
	        listeners[i](event);
	}
	function spyReportStart$$1(event) {
	    if (process.env.NODE_ENV === "production")
	        return;
	    var change = __assign({}, event, { spyReportStart: true });
	    spyReport$$1(change);
	}
	var END_EVENT = { spyReportEnd: true };
	function spyReportEnd$$1(change) {
	    if (process.env.NODE_ENV === "production")
	        return;
	    if (change)
	        spyReport$$1(__assign({}, change, { spyReportEnd: true }));
	    else
	        spyReport$$1(END_EVENT);
	}
	function spy$$1(listener) {
	    if (process.env.NODE_ENV === "production") {
	        console.warn("[mobx.spy] Is a no-op in production builds");
	        return function () { };
	    }
	    else {
	        globalState$$1.spyListeners.push(listener);
	        return once$$1(function () {
	            globalState$$1.spyListeners = globalState$$1.spyListeners.filter(function (l) { return l !== listener; });
	        });
	    }
	}

	function dontReassignFields() {
	    fail$$1(process.env.NODE_ENV !== "production" && "@action fields are not reassignable");
	}
	function namedActionDecorator$$1(name) {
	    return function (target, prop, descriptor) {
	        if (descriptor) {
	            if (process.env.NODE_ENV !== "production" && descriptor.get !== undefined) {
	                return fail$$1("@action cannot be used with getters");
	            }
	            // babel / typescript
	            // @action method() { }
	            if (descriptor.value) {
	                // typescript
	                return {
	                    value: createAction$$1(name, descriptor.value),
	                    enumerable: false,
	                    configurable: true,
	                    writable: true // for typescript, this must be writable, otherwise it cannot inherit :/ (see inheritable actions test)
	                };
	            }
	            // babel only: @action method = () => {}
	            var initializer_1 = descriptor.initializer;
	            return {
	                enumerable: false,
	                configurable: true,
	                writable: true,
	                initializer: function () {
	                    // N.B: we can't immediately invoke initializer; this would be wrong
	                    return createAction$$1(name, initializer_1.call(this));
	                }
	            };
	        }
	        // bound instance methods
	        return actionFieldDecorator$$1(name).apply(this, arguments);
	    };
	}
	function actionFieldDecorator$$1(name) {
	    // Simple property that writes on first invocation to the current instance
	    return function (target, prop, descriptor) {
	        Object.defineProperty(target, prop, {
	            configurable: true,
	            enumerable: false,
	            get: function () {
	                return undefined;
	            },
	            set: function (value) {
	                addHiddenProp$$1(this, prop, action$$1(name, value));
	            }
	        });
	    };
	}
	function boundActionDecorator$$1(target, propertyName, descriptor, applyToInstance) {
	    if (applyToInstance === true) {
	        defineBoundAction$$1(target, propertyName, descriptor.value);
	        return null;
	    }
	    if (descriptor) {
	        // if (descriptor.value)
	        // Typescript / Babel: @action.bound method() { }
	        // also: babel @action.bound method = () => {}
	        return {
	            configurable: true,
	            enumerable: false,
	            get: function () {
	                defineBoundAction$$1(this, propertyName, descriptor.value || descriptor.initializer.call(this));
	                return this[propertyName];
	            },
	            set: dontReassignFields
	        };
	    }
	    // field decorator Typescript @action.bound method = () => {}
	    return {
	        enumerable: false,
	        configurable: true,
	        set: function (v) {
	            defineBoundAction$$1(this, propertyName, v);
	        },
	        get: function () {
	            return undefined;
	        }
	    };
	}

	var action$$1 = function action$$1(arg1, arg2, arg3, arg4) {
	    // action(fn() {})
	    if (arguments.length === 1 && typeof arg1 === "function")
	        return createAction$$1(arg1.name || "<unnamed action>", arg1);
	    // action("name", fn() {})
	    if (arguments.length === 2 && typeof arg2 === "function")
	        return createAction$$1(arg1, arg2);
	    // @action("name") fn() {}
	    if (arguments.length === 1 && typeof arg1 === "string")
	        return namedActionDecorator$$1(arg1);
	    // @action fn() {}
	    if (arg4 === true) {
	        // apply to instance immediately
	        addHiddenProp$$1(arg1, arg2, createAction$$1(arg1.name || arg2, arg3.value));
	    }
	    else {
	        return namedActionDecorator$$1(arg2).apply(null, arguments);
	    }
	};
	action$$1.bound = boundActionDecorator$$1;
	function runInAction$$1(arg1, arg2) {
	    var actionName = typeof arg1 === "string" ? arg1 : arg1.name || "<unnamed action>";
	    var fn = typeof arg1 === "function" ? arg1 : arg2;
	    if (process.env.NODE_ENV !== "production") {
	        invariant$$1(typeof fn === "function" && fn.length === 0, "`runInAction` expects a function without arguments");
	        if (typeof actionName !== "string" || !actionName)
	            fail$$1("actions should have valid names, got: '" + actionName + "'");
	    }
	    return executeAction$$1(actionName, fn, this, undefined);
	}
	function isAction$$1(thing) {
	    return typeof thing === "function" && thing.isMobxAction === true;
	}
	function defineBoundAction$$1(target, propertyName, fn) {
	    addHiddenProp$$1(target, propertyName, createAction$$1(propertyName, fn.bind(target)));
	}

	/**
	 * Creates a named reactive view and keeps it alive, so that the view is always
	 * updated if one of the dependencies changes, even when the view is not further used by something else.
	 * @param view The reactive view
	 * @returns disposer function, which can be used to stop the view from being updated in the future.
	 */
	function autorun$$1(view, opts) {
	    if (opts === void 0) { opts = EMPTY_OBJECT$$1; }
	    if (process.env.NODE_ENV !== "production") {
	        invariant$$1(typeof view === "function", "Autorun expects a function as first argument");
	        invariant$$1(isAction$$1(view) === false, "Autorun does not accept actions since actions are untrackable");
	    }
	    var name = (opts && opts.name) || view.name || "Autorun@" + getNextId$$1();
	    var runSync = !opts.scheduler && !opts.delay;
	    var reaction$$1;
	    if (runSync) {
	        // normal autorun
	        reaction$$1 = new Reaction$$1(name, function () {
	            this.track(reactionRunner);
	        }, opts.onError);
	    }
	    else {
	        var scheduler_1 = createSchedulerFromOptions(opts);
	        // debounced autorun
	        var isScheduled_1 = false;
	        reaction$$1 = new Reaction$$1(name, function () {
	            if (!isScheduled_1) {
	                isScheduled_1 = true;
	                scheduler_1(function () {
	                    isScheduled_1 = false;
	                    if (!reaction$$1.isDisposed)
	                        reaction$$1.track(reactionRunner);
	                });
	            }
	        }, opts.onError);
	    }
	    function reactionRunner() {
	        view(reaction$$1);
	    }
	    reaction$$1.schedule();
	    return reaction$$1.getDisposer();
	}
	var run = function (f) { return f(); };
	function createSchedulerFromOptions(opts) {
	    return opts.scheduler
	        ? opts.scheduler
	        : opts.delay
	            ? function (f) { return setTimeout(f, opts.delay); }
	            : run;
	}
	function reaction$$1(expression, effect, opts) {
	    if (opts === void 0) { opts = EMPTY_OBJECT$$1; }
	    if (process.env.NODE_ENV !== "production") {
	        invariant$$1(typeof expression === "function", "First argument to reaction should be a function");
	        invariant$$1(typeof opts === "object", "Third argument of reactions should be an object");
	    }
	    var name = opts.name || "Reaction@" + getNextId$$1();
	    var effectAction = action$$1(name, opts.onError ? wrapErrorHandler(opts.onError, effect) : effect);
	    var runSync = !opts.scheduler && !opts.delay;
	    var scheduler = createSchedulerFromOptions(opts);
	    var firstTime = true;
	    var isScheduled = false;
	    var value;
	    var equals = opts.compareStructural
	        ? comparer$$1.structural
	        : opts.equals || comparer$$1.default;
	    var r = new Reaction$$1(name, function () {
	        if (firstTime || runSync) {
	            reactionRunner();
	        }
	        else if (!isScheduled) {
	            isScheduled = true;
	            scheduler(reactionRunner);
	        }
	    }, opts.onError);
	    function reactionRunner() {
	        isScheduled = false; // Q: move into reaction runner?
	        if (r.isDisposed)
	            return;
	        var changed = false;
	        r.track(function () {
	            var nextValue = expression(r);
	            changed = firstTime || !equals(value, nextValue);
	            value = nextValue;
	        });
	        if (firstTime && opts.fireImmediately)
	            effectAction(value, r);
	        if (!firstTime && changed === true)
	            effectAction(value, r);
	        if (firstTime)
	            firstTime = false;
	    }
	    r.schedule();
	    return r.getDisposer();
	}
	function wrapErrorHandler(errorHandler, baseFn) {
	    return function () {
	        try {
	            return baseFn.apply(this, arguments);
	        }
	        catch (e) {
	            errorHandler.call(this, e);
	        }
	    };
	}

	function onBecomeObserved$$1(thing, arg2, arg3) {
	    return interceptHook("onBecomeObserved", thing, arg2, arg3);
	}
	function onBecomeUnobserved$$1(thing, arg2, arg3) {
	    return interceptHook("onBecomeUnobserved", thing, arg2, arg3);
	}
	function interceptHook(hook, thing, arg2, arg3) {
	    var atom = typeof arg2 === "string" ? getAtom$$1(thing, arg2) : getAtom$$1(thing);
	    var cb = typeof arg2 === "string" ? arg3 : arg2;
	    var orig = atom[hook];
	    if (typeof orig !== "function")
	        return fail$$1(process.env.NODE_ENV !== "production" && "Not an atom that can be (un)observed");
	    atom[hook] = function () {
	        orig.call(this);
	        cb.call(this);
	    };
	    return function () {
	        atom[hook] = orig;
	    };
	}

	function configure$$1(options) {
	    var enforceActions = options.enforceActions, computedRequiresReaction = options.computedRequiresReaction, disableErrorBoundaries = options.disableErrorBoundaries, reactionScheduler = options.reactionScheduler;
	    if (enforceActions !== undefined) {
	        if (typeof enforceActions === "boolean" || enforceActions === "strict")
	            deprecated$$1("Deprecated value for 'enforceActions', use 'false' => '\"never\"', 'true' => '\"observed\"', '\"strict\"' => \"'always'\" instead");
	        var ea = void 0;
	        switch (enforceActions) {
	            case true:
	            case "observed":
	                ea = true;
	                break;
	            case false:
	            case "never":
	                ea = false;
	                break;
	            case "strict":
	            case "always":
	                ea = "strict";
	                break;
	            default:
	                fail$$1("Invalid value for 'enforceActions': '" + enforceActions + "', expected 'never', 'always' or 'observed'");
	        }
	        globalState$$1.enforceActions = ea;
	        globalState$$1.allowStateChanges = ea === true || ea === "strict" ? false : true;
	    }
	    if (computedRequiresReaction !== undefined) {
	        globalState$$1.computedRequiresReaction = !!computedRequiresReaction;
	    }
	    if (options.isolateGlobalState === true) {
	        isolateGlobalState$$1();
	    }
	    if (disableErrorBoundaries !== undefined) {
	        if (disableErrorBoundaries === true)
	            console.warn("WARNING: Debug feature only. MobX will NOT recover from errors when `disableErrorBoundaries` is enabled.");
	        globalState$$1.disableErrorBoundaries = !!disableErrorBoundaries;
	    }
	    if (reactionScheduler) {
	        setReactionScheduler$$1(reactionScheduler);
	    }
	}

	function decorate$$1(thing, decorators) {
	    process.env.NODE_ENV !== "production" &&
	        invariant$$1(isPlainObject$$1(decorators), "Decorators should be a key value map");
	    var target = typeof thing === "function" ? thing.prototype : thing;
	    var _loop_1 = function (prop) {
	        var propertyDecorators = decorators[prop];
	        if (!Array.isArray(propertyDecorators)) {
	            propertyDecorators = [propertyDecorators];
	        }
	        process.env.NODE_ENV !== "production" &&
	            invariant$$1(propertyDecorators.every(function (decorator) { return typeof decorator === "function"; }), "Decorate: expected a decorator function or array of decorator functions for '" + prop + "'");
	        var descriptor = Object.getOwnPropertyDescriptor(target, prop);
	        var newDescriptor = propertyDecorators.reduce(function (accDescriptor, decorator) { return decorator(target, prop, accDescriptor); }, descriptor);
	        if (newDescriptor)
	            Object.defineProperty(target, prop, newDescriptor);
	    };
	    for (var prop in decorators) {
	        _loop_1(prop);
	    }
	    return thing;
	}

	function extendObservable$$1(target, properties, decorators, options) {
	    if (process.env.NODE_ENV !== "production") {
	        invariant$$1(arguments.length >= 2 && arguments.length <= 4, "'extendObservable' expected 2-4 arguments");
	        invariant$$1(typeof target === "object", "'extendObservable' expects an object as first argument");
	        invariant$$1(!isObservableMap$$1(target), "'extendObservable' should not be used on maps, use map.merge instead");
	    }
	    options = asCreateObservableOptions$$1(options);
	    var defaultDecorator = getDefaultDecoratorFromObjectOptions$$1(options);
	    asObservableObject$$1(target, options.name, defaultDecorator.enhancer); // make sure object is observable, even without initial props
	    if (properties)
	        extendObservableObjectWithProperties$$1(target, properties, decorators, defaultDecorator);
	    return target;
	}
	function getDefaultDecoratorFromObjectOptions$$1(options) {
	    return options.defaultDecorator || (options.deep === false ? refDecorator$$1 : deepDecorator$$1);
	}
	function extendObservableObjectWithProperties$$1(target, properties, decorators, defaultDecorator) {
	    if (process.env.NODE_ENV !== "production") {
	        invariant$$1(!isObservable$$1(properties), "Extending an object with another observable (object) is not supported. Please construct an explicit propertymap, using `toJS` if need. See issue #540");
	        if (decorators)
	            for (var key in decorators)
	                if (!(key in properties))
	                    fail$$1("Trying to declare a decorator for unspecified property '" + key + "'");
	    }
	    startBatch$$1();
	    try {
	        for (var key in properties) {
	            var descriptor = Object.getOwnPropertyDescriptor(properties, key);
	            if (process.env.NODE_ENV !== "production") {
	                if (Object.getOwnPropertyDescriptor(target, key))
	                    fail$$1("'extendObservable' can only be used to introduce new properties. Use 'set' or 'decorate' instead. The property '" + key + "' already exists on '" + target + "'");
	                if (isComputed$$1(descriptor.value))
	                    fail$$1("Passing a 'computed' as initial property value is no longer supported by extendObservable. Use a getter or decorator instead");
	            }
	            var decorator = decorators && key in decorators
	                ? decorators[key]
	                : descriptor.get
	                    ? computedDecorator$$1
	                    : defaultDecorator;
	            if (process.env.NODE_ENV !== "production" && typeof decorator !== "function")
	                fail$$1("Not a valid decorator for '" + key + "', got: " + decorator);
	            var resultDescriptor = decorator(target, key, descriptor, true);
	            if (resultDescriptor // otherwise, assume already applied, due to `applyToInstance`
	            )
	                Object.defineProperty(target, key, resultDescriptor);
	        }
	    }
	    finally {
	        endBatch$$1();
	    }
	}

	function getDependencyTree$$1(thing, property) {
	    return nodeToDependencyTree(getAtom$$1(thing, property));
	}
	function nodeToDependencyTree(node) {
	    var result = {
	        name: node.name
	    };
	    if (node.observing && node.observing.length > 0)
	        result.dependencies = unique$$1(node.observing).map(nodeToDependencyTree);
	    return result;
	}
	function getObserverTree$$1(thing, property) {
	    return nodeToObserverTree(getAtom$$1(thing, property));
	}
	function nodeToObserverTree(node) {
	    var result = {
	        name: node.name
	    };
	    if (hasObservers$$1(node))
	        result.observers = Array.from(getObservers$$1(node)).map(nodeToObserverTree);
	    return result;
	}

	var generatorId = 0;
	function flow$$1(generator) {
	    if (arguments.length !== 1)
	        fail$$1(process.env.NODE_ENV && "Flow expects one 1 argument and cannot be used as decorator");
	    var name = generator.name || "<unnamed flow>";
	    // Implementation based on https://github.com/tj/co/blob/master/index.js
	    return function () {
	        var ctx = this;
	        var args = arguments;
	        var runId = ++generatorId;
	        var gen = action$$1(name + " - runid: " + runId + " - init", generator).apply(ctx, args);
	        var rejector;
	        var pendingPromise = undefined;
	        var res = new Promise(function (resolve, reject) {
	            var stepId = 0;
	            rejector = reject;
	            function onFulfilled(res) {
	                pendingPromise = undefined;
	                var ret;
	                try {
	                    ret = action$$1(name + " - runid: " + runId + " - yield " + stepId++, gen.next).call(gen, res);
	                }
	                catch (e) {
	                    return reject(e);
	                }
	                next(ret);
	            }
	            function onRejected(err) {
	                pendingPromise = undefined;
	                var ret;
	                try {
	                    ret = action$$1(name + " - runid: " + runId + " - yield " + stepId++, gen.throw).call(gen, err);
	                }
	                catch (e) {
	                    return reject(e);
	                }
	                next(ret);
	            }
	            function next(ret) {
	                if (ret && typeof ret.then === "function") {
	                    // an async iterator
	                    ret.then(next, reject);
	                    return;
	                }
	                if (ret.done)
	                    return resolve(ret.value);
	                pendingPromise = Promise.resolve(ret.value);
	                return pendingPromise.then(onFulfilled, onRejected);
	            }
	            onFulfilled(undefined); // kick off the process
	        });
	        res.cancel = action$$1(name + " - runid: " + runId + " - cancel", function () {
	            try {
	                if (pendingPromise)
	                    cancelPromise(pendingPromise);
	                // Finally block can return (or yield) stuff..
	                var res_1 = gen.return();
	                // eat anything that promise would do, it's cancelled!
	                var yieldedPromise = Promise.resolve(res_1.value);
	                yieldedPromise.then(noop$$1, noop$$1);
	                cancelPromise(yieldedPromise); // maybe it can be cancelled :)
	                // reject our original promise
	                rejector(new Error("FLOW_CANCELLED"));
	            }
	            catch (e) {
	                rejector(e); // there could be a throwing finally block
	            }
	        });
	        return res;
	    };
	}
	function cancelPromise(promise) {
	    if (typeof promise.cancel === "function")
	        promise.cancel();
	}

	function interceptReads$$1(thing, propOrHandler, handler) {
	    var target;
	    if (isObservableMap$$1(thing) || isObservableArray$$1(thing) || isObservableValue$$1(thing)) {
	        target = getAdministration$$1(thing);
	    }
	    else if (isObservableObject$$1(thing)) {
	        if (typeof propOrHandler !== "string")
	            return fail$$1(process.env.NODE_ENV !== "production" &&
	                "InterceptReads can only be used with a specific property, not with an object in general");
	        target = getAdministration$$1(thing, propOrHandler);
	    }
	    else {
	        return fail$$1(process.env.NODE_ENV !== "production" &&
	            "Expected observable map, object or array as first array");
	    }
	    if (target.dehancer !== undefined)
	        return fail$$1(process.env.NODE_ENV !== "production" && "An intercept reader was already established");
	    target.dehancer = typeof propOrHandler === "function" ? propOrHandler : handler;
	    return function () {
	        target.dehancer = undefined;
	    };
	}

	function intercept$$1(thing, propOrHandler, handler) {
	    if (typeof handler === "function")
	        return interceptProperty(thing, propOrHandler, handler);
	    else
	        return interceptInterceptable(thing, propOrHandler);
	}
	function interceptInterceptable(thing, handler) {
	    return getAdministration$$1(thing).intercept(handler);
	}
	function interceptProperty(thing, property, handler) {
	    return getAdministration$$1(thing, property).intercept(handler);
	}

	function _isComputed$$1(value, property) {
	    if (value === null || value === undefined)
	        return false;
	    if (property !== undefined) {
	        if (isObservableObject$$1(value) === false)
	            return false;
	        if (!value[$mobx$$1].values.has(property))
	            return false;
	        var atom = getAtom$$1(value, property);
	        return isComputedValue$$1(atom);
	    }
	    return isComputedValue$$1(value);
	}
	function isComputed$$1(value) {
	    if (arguments.length > 1)
	        return fail$$1(process.env.NODE_ENV !== "production" &&
	            "isComputed expects only 1 argument. Use isObservableProp to inspect the observability of a property");
	    return _isComputed$$1(value);
	}
	function isComputedProp$$1(value, propName) {
	    if (typeof propName !== "string")
	        return fail$$1(process.env.NODE_ENV !== "production" &&
	            "isComputed expected a property name as second argument");
	    return _isComputed$$1(value, propName);
	}

	function _isObservable(value, property) {
	    if (value === null || value === undefined)
	        return false;
	    if (property !== undefined) {
	        if (process.env.NODE_ENV !== "production" &&
	            (isObservableMap$$1(value) || isObservableArray$$1(value)))
	            return fail$$1("isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.");
	        if (isObservableObject$$1(value)) {
	            return value[$mobx$$1].values.has(property);
	        }
	        return false;
	    }
	    // For first check, see #701
	    return (isObservableObject$$1(value) ||
	        !!value[$mobx$$1] ||
	        isAtom$$1(value) ||
	        isReaction$$1(value) ||
	        isComputedValue$$1(value));
	}
	function isObservable$$1(value) {
	    if (arguments.length !== 1)
	        fail$$1(process.env.NODE_ENV !== "production" &&
	            "isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property");
	    return _isObservable(value);
	}
	function isObservableProp$$1(value, propName) {
	    if (typeof propName !== "string")
	        return fail$$1(process.env.NODE_ENV !== "production" && "expected a property name as second argument");
	    return _isObservable(value, propName);
	}

	function keys$$1(obj) {
	    if (isObservableObject$$1(obj)) {
	        return obj[$mobx$$1].getKeys();
	    }
	    if (isObservableMap$$1(obj)) {
	        return Array.from(obj.keys());
	    }
	    if (isObservableArray$$1(obj)) {
	        return obj.map(function (_, index) { return index; });
	    }
	    return fail$$1(process.env.NODE_ENV !== "production" &&
	        "'keys()' can only be used on observable objects, arrays and maps");
	}
	function values$$1(obj) {
	    if (isObservableObject$$1(obj)) {
	        return keys$$1(obj).map(function (key) { return obj[key]; });
	    }
	    if (isObservableMap$$1(obj)) {
	        return keys$$1(obj).map(function (key) { return obj.get(key); });
	    }
	    if (isObservableArray$$1(obj)) {
	        return obj.slice();
	    }
	    return fail$$1(process.env.NODE_ENV !== "production" &&
	        "'values()' can only be used on observable objects, arrays and maps");
	}
	function entries$$1(obj) {
	    if (isObservableObject$$1(obj)) {
	        return keys$$1(obj).map(function (key) { return [key, obj[key]]; });
	    }
	    if (isObservableMap$$1(obj)) {
	        return keys$$1(obj).map(function (key) { return [key, obj.get(key)]; });
	    }
	    if (isObservableArray$$1(obj)) {
	        return obj.map(function (key, index) { return [index, key]; });
	    }
	    return fail$$1(process.env.NODE_ENV !== "production" &&
	        "'entries()' can only be used on observable objects, arrays and maps");
	}
	function set$$1(obj, key, value) {
	    if (arguments.length === 2) {
	        startBatch$$1();
	        var values_1 = key;
	        try {
	            for (var key_1 in values_1)
	                set$$1(obj, key_1, values_1[key_1]);
	        }
	        finally {
	            endBatch$$1();
	        }
	        return;
	    }
	    if (isObservableObject$$1(obj)) {
	        var adm = obj[$mobx$$1];
	        var existingObservable = adm.values.get(key);
	        if (existingObservable) {
	            adm.write(key, value);
	        }
	        else {
	            adm.addObservableProp(key, value, adm.defaultEnhancer);
	        }
	    }
	    else if (isObservableMap$$1(obj)) {
	        obj.set(key, value);
	    }
	    else if (isObservableArray$$1(obj)) {
	        if (typeof key !== "number")
	            key = parseInt(key, 10);
	        invariant$$1(key >= 0, "Not a valid index: '" + key + "'");
	        startBatch$$1();
	        if (key >= obj.length)
	            obj.length = key + 1;
	        obj[key] = value;
	        endBatch$$1();
	    }
	    else {
	        return fail$$1(process.env.NODE_ENV !== "production" &&
	            "'set()' can only be used on observable objects, arrays and maps");
	    }
	}
	function remove$$1(obj, key) {
	    if (isObservableObject$$1(obj)) {
	        
	        obj[$mobx$$1].remove(key);
	    }
	    else if (isObservableMap$$1(obj)) {
	        obj.delete(key);
	    }
	    else if (isObservableArray$$1(obj)) {
	        if (typeof key !== "number")
	            key = parseInt(key, 10);
	        invariant$$1(key >= 0, "Not a valid index: '" + key + "'");
	        obj.splice(key, 1);
	    }
	    else {
	        return fail$$1(process.env.NODE_ENV !== "production" &&
	            "'remove()' can only be used on observable objects, arrays and maps");
	    }
	}
	function has$$1(obj, key) {
	    if (isObservableObject$$1(obj)) {
	        // return keys(obj).indexOf(key) >= 0
	        var adm = getAdministration$$1(obj);
	        return adm.has(key);
	    }
	    else if (isObservableMap$$1(obj)) {
	        return obj.has(key);
	    }
	    else if (isObservableArray$$1(obj)) {
	        return key >= 0 && key < obj.length;
	    }
	    else {
	        return fail$$1(process.env.NODE_ENV !== "production" &&
	            "'has()' can only be used on observable objects, arrays and maps");
	    }
	}
	function get$$1(obj, key) {
	    if (!has$$1(obj, key))
	        return undefined;
	    if (isObservableObject$$1(obj)) {
	        return obj[key];
	    }
	    else if (isObservableMap$$1(obj)) {
	        return obj.get(key);
	    }
	    else if (isObservableArray$$1(obj)) {
	        return obj[key];
	    }
	    else {
	        return fail$$1(process.env.NODE_ENV !== "production" &&
	            "'get()' can only be used on observable objects, arrays and maps");
	    }
	}

	function observe$$1(thing, propOrCb, cbOrFire, fireImmediately) {
	    if (typeof cbOrFire === "function")
	        return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);
	    else
	        return observeObservable(thing, propOrCb, cbOrFire);
	}
	function observeObservable(thing, listener, fireImmediately) {
	    return getAdministration$$1(thing).observe(listener, fireImmediately);
	}
	function observeObservableProperty(thing, property, listener, fireImmediately) {
	    return getAdministration$$1(thing, property).observe(listener, fireImmediately);
	}

	var defaultOptions = {
	    detectCycles: true,
	    exportMapsAsObjects: true
	};
	function cache(map, key, value, options) {
	    if (options.detectCycles)
	        map.set(key, value);
	    return value;
	}
	function toJSHelper(source, options, __alreadySeen) {
	    if (!isObservable$$1(source))
	        return source;
	    var detectCycles = options.detectCycles === true;
	    if (detectCycles &&
	        source !== null &&
	        typeof source === "object" &&
	        __alreadySeen.has(source)) {
	        return __alreadySeen.get(source);
	    }
	    if (isObservableArray$$1(source)) {
	        var res = cache(__alreadySeen, source, [], options);
	        var toAdd = source.map(function (value) { return toJSHelper(value, options, __alreadySeen); });
	        res.length = toAdd.length;
	        for (var i = 0, l = toAdd.length; i < l; i++)
	            res[i] = toAdd[i];
	        return res;
	    }
	    if (isObservableObject$$1(source)) {
	        var res = cache(__alreadySeen, source, {}, options);
	        keys$$1(source); // make sure we track the keys of the object
	        for (var key in source) {
	            res[key] = toJSHelper(source[key], options, __alreadySeen);
	        }
	        return res;
	    }
	    if (isObservableMap$$1(source)) {
	        if (options.exportMapsAsObjects === false) {
	            var res_1 = cache(__alreadySeen, source, new Map(), options);
	            source.forEach(function (value, key) {
	                res_1.set(key, toJSHelper(value, options, __alreadySeen));
	            });
	            return res_1;
	        }
	        else {
	            var res_2 = cache(__alreadySeen, source, {}, options);
	            source.forEach(function (value, key) {
	                res_2[key] = toJSHelper(value, options, __alreadySeen);
	            });
	            return res_2;
	        }
	    }
	    if (isObservableValue$$1(source))
	        return toJSHelper(source.get(), options, __alreadySeen);
	    return source;
	}
	function toJS$$1(source, options) {
	    if (!isObservable$$1(source))
	        return source;
	    // backward compatibility
	    if (typeof options === "boolean")
	        options = { detectCycles: options };
	    if (!options)
	        options = defaultOptions;
	    var detectCycles = options.detectCycles === true;
	    var __alreadySeen;
	    if (detectCycles)
	        __alreadySeen = new Map();
	    return toJSHelper(source, options, __alreadySeen);
	}

	function trace$$1() {
	    var args = [];
	    for (var _i = 0; _i < arguments.length; _i++) {
	        args[_i] = arguments[_i];
	    }
	    var enterBreakPoint = false;
	    if (typeof args[args.length - 1] === "boolean")
	        enterBreakPoint = args.pop();
	    var derivation = getAtomFromArgs(args);
	    if (!derivation) {
	        return fail$$1(process.env.NODE_ENV !== "production" &&
	            "'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly");
	    }
	    if (derivation.isTracing === TraceMode$$1.NONE) {
	        console.log("[mobx.trace] '" + derivation.name + "' tracing enabled");
	    }
	    derivation.isTracing = enterBreakPoint ? TraceMode$$1.BREAK : TraceMode$$1.LOG;
	}
	function getAtomFromArgs(args) {
	    switch (args.length) {
	        case 0:
	            return globalState$$1.trackingDerivation;
	        case 1:
	            return getAtom$$1(args[0]);
	        case 2:
	            return getAtom$$1(args[0], args[1]);
	    }
	}

	/**
	 * During a transaction no views are updated until the end of the transaction.
	 * The transaction will be run synchronously nonetheless.
	 *
	 * @param action a function that updates some reactive state
	 * @returns any value that was returned by the 'action' parameter.
	 */
	function transaction$$1(action$$1, thisArg) {
	    if (thisArg === void 0) { thisArg = undefined; }
	    startBatch$$1();
	    try {
	        return action$$1.apply(thisArg);
	    }
	    finally {
	        endBatch$$1();
	    }
	}

	function when$$1(predicate, arg1, arg2) {
	    if (arguments.length === 1 || (arg1 && typeof arg1 === "object"))
	        return whenPromise(predicate, arg1);
	    return _when(predicate, arg1, arg2 || {});
	}
	function _when(predicate, effect, opts) {
	    var timeoutHandle;
	    if (typeof opts.timeout === "number") {
	        timeoutHandle = setTimeout(function () {
	            if (!disposer[$mobx$$1].isDisposed) {
	                disposer();
	                var error = new Error("WHEN_TIMEOUT");
	                if (opts.onError)
	                    opts.onError(error);
	                else
	                    throw error;
	            }
	        }, opts.timeout);
	    }
	    opts.name = opts.name || "When@" + getNextId$$1();
	    var effectAction = createAction$$1(opts.name + "-effect", effect);
	    var disposer = autorun$$1(function (r) {
	        if (predicate()) {
	            r.dispose();
	            if (timeoutHandle)
	                clearTimeout(timeoutHandle);
	            effectAction();
	        }
	    }, opts);
	    return disposer;
	}
	function whenPromise(predicate, opts) {
	    if (process.env.NODE_ENV !== "production" && opts && opts.onError)
	        return fail$$1("the options 'onError' and 'promise' cannot be combined");
	    var cancel;
	    var res = new Promise(function (resolve, reject) {
	        var disposer = _when(predicate, resolve, __assign({}, opts, { onError: reject }));
	        cancel = function () {
	            disposer();
	            reject("WHEN_CANCELLED");
	        };
	    });
	    res.cancel = cancel;
	    return res;
	}

	function getAdm(target) {
	    return target[$mobx$$1];
	}
	// Optimization: we don't need the intermediate objects and could have a completely custom administration for DynamicObjects,
	// and skip either the internal values map, or the base object with its property descriptors!
	var objectProxyTraps = {
	    has: function (target, name) {
	        if (name === $mobx$$1 || name === "constructor" || name === mobxDidRunLazyInitializersSymbol$$1)
	            return true;
	        var adm = getAdm(target);
	        if (adm.values.get(name))
	            return true;
	        if (typeof name === "string")
	            return adm.has(name);
	        return name in target;
	    },
	    get: function (target, name) {
	        if (name === $mobx$$1 || name === "constructor" || name === mobxDidRunLazyInitializersSymbol$$1)
	            return target[name];
	        var adm = getAdm(target);
	        var observable$$1 = adm.values.get(name);
	        if (observable$$1 instanceof Atom$$1)
	            return observable$$1.get();
	        // make sure we start listening to future keys
	        // note that we only do this here for optimization
	        if (typeof name === "string")
	            adm.has(name);
	        return target[name];
	    },
	    set: function (target, name, value) {
	        if (typeof name !== "string")
	            return false;
	        set$$1(target, name, value);
	        return true;
	    },
	    deleteProperty: function (target, name) {
	        if (typeof name !== "string")
	            return false;
	        var adm = getAdm(target);
	        adm.remove(name);
	        return true;
	    },
	    ownKeys: function (target) {
	        var adm = getAdm(target);
	        adm.keysAtom.reportObserved();
	        return Reflect.ownKeys(target);
	    },
	    preventExtensions: function (target) {
	        fail$$1("Dynamic observable objects cannot be frozen");
	        return false;
	    }
	};
	function createDynamicObservableObject$$1(base) {
	    var proxy = new Proxy(base, objectProxyTraps);
	    base[$mobx$$1].proxy = proxy;
	    return proxy;
	}

	function hasInterceptors$$1(interceptable) {
	    return interceptable.interceptors !== undefined && interceptable.interceptors.length > 0;
	}
	function registerInterceptor$$1(interceptable, handler) {
	    var interceptors = interceptable.interceptors || (interceptable.interceptors = []);
	    interceptors.push(handler);
	    return once$$1(function () {
	        var idx = interceptors.indexOf(handler);
	        if (idx !== -1)
	            interceptors.splice(idx, 1);
	    });
	}
	function interceptChange$$1(interceptable, change) {
	    var prevU = untrackedStart$$1();
	    try {
	        var interceptors = interceptable.interceptors;
	        if (interceptors)
	            for (var i = 0, l = interceptors.length; i < l; i++) {
	                change = interceptors[i](change);
	                invariant$$1(!change || change.type, "Intercept handlers should return nothing or a change object");
	                if (!change)
	                    break;
	            }
	        return change;
	    }
	    finally {
	        untrackedEnd$$1(prevU);
	    }
	}

	function hasListeners$$1(listenable) {
	    return listenable.changeListeners !== undefined && listenable.changeListeners.length > 0;
	}
	function registerListener$$1(listenable, handler) {
	    var listeners = listenable.changeListeners || (listenable.changeListeners = []);
	    listeners.push(handler);
	    return once$$1(function () {
	        var idx = listeners.indexOf(handler);
	        if (idx !== -1)
	            listeners.splice(idx, 1);
	    });
	}
	function notifyListeners$$1(listenable, change) {
	    var prevU = untrackedStart$$1();
	    var listeners = listenable.changeListeners;
	    if (!listeners)
	        return;
	    listeners = listeners.slice();
	    for (var i = 0, l = listeners.length; i < l; i++) {
	        listeners[i](change);
	    }
	    untrackedEnd$$1(prevU);
	}

	var MAX_SPLICE_SIZE = 10000; // See e.g. https://github.com/mobxjs/mobx/issues/859
	var arrayTraps = {
	    get: function (target, name) {
	        if (name === $mobx$$1)
	            return target[$mobx$$1];
	        if (name === "length")
	            return target[$mobx$$1].getArrayLength();
	        if (typeof name === "number") {
	            return arrayExtensions.get.call(target, name);
	        }
	        if (typeof name === "string" && !isNaN(name)) {
	            return arrayExtensions.get.call(target, parseInt(name));
	        }
	        if (arrayExtensions.hasOwnProperty(name)) {
	            return arrayExtensions[name];
	        }
	        return target[name];
	    },
	    set: function (target, name, value) {
	        if (name === "length") {
	            target[$mobx$$1].setArrayLength(value);
	            return true;
	        }
	        if (typeof name === "number") {
	            arrayExtensions.set.call(target, name, value);
	            return true;
	        }
	        if (!isNaN(name)) {
	            arrayExtensions.set.call(target, parseInt(name), value);
	            return true;
	        }
	        return false;
	    },
	    preventExtensions: function (target) {
	        fail$$1("Observable arrays cannot be frozen");
	        return false;
	    }
	};
	function createObservableArray$$1(initialValues, enhancer, name, owned) {
	    if (name === void 0) { name = "ObservableArray@" + getNextId$$1(); }
	    if (owned === void 0) { owned = false; }
	    var adm = new ObservableArrayAdministration(name, enhancer, owned);
	    addHiddenFinalProp$$1(adm.values, $mobx$$1, adm);
	    var proxy = new Proxy(adm.values, arrayTraps);
	    adm.proxy = proxy;
	    if (initialValues && initialValues.length) {
	        var prev = allowStateChangesStart$$1(true);
	        adm.spliceWithArray(0, 0, initialValues);
	        allowStateChangesEnd$$1(prev);
	    }
	    return proxy;
	}
	var ObservableArrayAdministration = /** @class */ (function () {
	    function ObservableArrayAdministration(name, enhancer, owned) {
	        this.owned = owned;
	        this.values = [];
	        this.proxy = undefined;
	        this.lastKnownLength = 0;
	        this.atom = new Atom$$1(name || "ObservableArray@" + getNextId$$1());
	        this.enhancer = function (newV, oldV) { return enhancer(newV, oldV, name + "[..]"); };
	    }
	    ObservableArrayAdministration.prototype.dehanceValue = function (value) {
	        if (this.dehancer !== undefined)
	            return this.dehancer(value);
	        return value;
	    };
	    ObservableArrayAdministration.prototype.dehanceValues = function (values$$1) {
	        if (this.dehancer !== undefined && this.values.length > 0)
	            return values$$1.map(this.dehancer);
	        return values$$1;
	    };
	    ObservableArrayAdministration.prototype.intercept = function (handler) {
	        return registerInterceptor$$1(this, handler);
	    };
	    ObservableArrayAdministration.prototype.observe = function (listener, fireImmediately) {
	        if (fireImmediately === void 0) { fireImmediately = false; }
	        if (fireImmediately) {
	            listener({
	                object: this.proxy,
	                type: "splice",
	                index: 0,
	                added: this.values.slice(),
	                addedCount: this.values.length,
	                removed: [],
	                removedCount: 0
	            });
	        }
	        return registerListener$$1(this, listener);
	    };
	    ObservableArrayAdministration.prototype.getArrayLength = function () {
	        this.atom.reportObserved();
	        return this.values.length;
	    };
	    ObservableArrayAdministration.prototype.setArrayLength = function (newLength) {
	        if (typeof newLength !== "number" || newLength < 0)
	            throw new Error("[mobx.array] Out of range: " + newLength);
	        var currentLength = this.values.length;
	        if (newLength === currentLength)
	            return;
	        else if (newLength > currentLength) {
	            var newItems = new Array(newLength - currentLength);
	            for (var i = 0; i < newLength - currentLength; i++)
	                newItems[i] = undefined; // No Array.fill everywhere...
	            this.spliceWithArray(currentLength, 0, newItems);
	        }
	        else
	            this.spliceWithArray(newLength, currentLength - newLength);
	    };
	    ObservableArrayAdministration.prototype.updateArrayLength = function (oldLength, delta) {
	        if (oldLength !== this.lastKnownLength)
	            throw new Error("[mobx] Modification exception: the internal structure of an observable array was changed.");
	        this.lastKnownLength += delta;
	    };
	    ObservableArrayAdministration.prototype.spliceWithArray = function (index, deleteCount, newItems) {
	        var _this = this;
	        checkIfStateModificationsAreAllowed$$1(this.atom);
	        var length = this.values.length;
	        if (index === undefined)
	            index = 0;
	        else if (index > length)
	            index = length;
	        else if (index < 0)
	            index = Math.max(0, length + index);
	        if (arguments.length === 1)
	            deleteCount = length - index;
	        else if (deleteCount === undefined || deleteCount === null)
	            deleteCount = 0;
	        else
	            deleteCount = Math.max(0, Math.min(deleteCount, length - index));
	        if (newItems === undefined)
	            newItems = EMPTY_ARRAY$$1;
	        if (hasInterceptors$$1(this)) {
	            var change = interceptChange$$1(this, {
	                object: this.proxy,
	                type: "splice",
	                index: index,
	                removedCount: deleteCount,
	                added: newItems
	            });
	            if (!change)
	                return EMPTY_ARRAY$$1;
	            deleteCount = change.removedCount;
	            newItems = change.added;
	        }
	        newItems = newItems.length === 0 ? newItems : newItems.map(function (v) { return _this.enhancer(v, undefined); });
	        if (process.env.NODE_ENV !== "production") {
	            var lengthDelta = newItems.length - deleteCount;
	            this.updateArrayLength(length, lengthDelta); // checks if internal array wasn't modified
	        }
	        var res = this.spliceItemsIntoValues(index, deleteCount, newItems);
	        if (deleteCount !== 0 || newItems.length !== 0)
	            this.notifyArraySplice(index, newItems, res);
	        return this.dehanceValues(res);
	    };
	    ObservableArrayAdministration.prototype.spliceItemsIntoValues = function (index, deleteCount, newItems) {
	        var _a;
	        if (newItems.length < MAX_SPLICE_SIZE) {
	            return (_a = this.values).splice.apply(_a, __spread([index, deleteCount], newItems));
	        }
	        else {
	            var res = this.values.slice(index, index + deleteCount);
	            this.values = this.values
	                .slice(0, index)
	                .concat(newItems, this.values.slice(index + deleteCount));
	            return res;
	        }
	    };
	    ObservableArrayAdministration.prototype.notifyArrayChildUpdate = function (index, newValue, oldValue) {
	        var notifySpy = !this.owned && isSpyEnabled$$1();
	        var notify = hasListeners$$1(this);
	        var change = notify || notifySpy
	            ? {
	                object: this.proxy,
	                type: "update",
	                index: index,
	                newValue: newValue,
	                oldValue: oldValue
	            }
	            : null;
	        // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't
	        // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled
	        if (notifySpy && process.env.NODE_ENV !== "production")
	            spyReportStart$$1(__assign({}, change, { name: this.atom.name }));
	        this.atom.reportChanged();
	        if (notify)
	            notifyListeners$$1(this, change);
	        if (notifySpy && process.env.NODE_ENV !== "production")
	            spyReportEnd$$1();
	    };
	    ObservableArrayAdministration.prototype.notifyArraySplice = function (index, added, removed) {
	        var notifySpy = !this.owned && isSpyEnabled$$1();
	        var notify = hasListeners$$1(this);
	        var change = notify || notifySpy
	            ? {
	                object: this.proxy,
	                type: "splice",
	                index: index,
	                removed: removed,
	                added: added,
	                removedCount: removed.length,
	                addedCount: added.length
	            }
	            : null;
	        if (notifySpy && process.env.NODE_ENV !== "production")
	            spyReportStart$$1(__assign({}, change, { name: this.atom.name }));
	        this.atom.reportChanged();
	        // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe
	        if (notify)
	            notifyListeners$$1(this, change);
	        if (notifySpy && process.env.NODE_ENV !== "production")
	            spyReportEnd$$1();
	    };
	    return ObservableArrayAdministration;
	}());
	var arrayExtensions = {
	    intercept: function (handler) {
	        return this[$mobx$$1].intercept(handler);
	    },
	    observe: function (listener, fireImmediately) {
	        if (fireImmediately === void 0) { fireImmediately = false; }
	        var adm = this[$mobx$$1];
	        return adm.observe(listener, fireImmediately);
	    },
	    clear: function () {
	        return this.splice(0);
	    },
	    replace: function (newItems) {
	        var adm = this[$mobx$$1];
	        return adm.spliceWithArray(0, adm.values.length, newItems);
	    },
	    /**
	     * Converts this array back to a (shallow) javascript structure.
	     * For a deep clone use mobx.toJS
	     */
	    toJS: function () {
	        return this.slice();
	    },
	    toJSON: function () {
	        // Used by JSON.stringify
	        return this.toJS();
	    },
	    /*
	     * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)
	     * since these functions alter the inner structure of the array, the have side effects.
	     * Because the have side effects, they should not be used in computed function,
	     * and for that reason the do not call dependencyState.notifyObserved
	     */
	    splice: function (index, deleteCount) {
	        var newItems = [];
	        for (var _i = 2; _i < arguments.length; _i++) {
	            newItems[_i - 2] = arguments[_i];
	        }
	        var adm = this[$mobx$$1];
	        switch (arguments.length) {
	            case 0:
	                return [];
	            case 1:
	                return adm.spliceWithArray(index);
	            case 2:
	                return adm.spliceWithArray(index, deleteCount);
	        }
	        return adm.spliceWithArray(index, deleteCount, newItems);
	    },
	    spliceWithArray: function (index, deleteCount, newItems) {
	        var adm = this[$mobx$$1];
	        return adm.spliceWithArray(index, deleteCount, newItems);
	    },
	    push: function () {
	        var items = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            items[_i] = arguments[_i];
	        }
	        var adm = this[$mobx$$1];
	        adm.spliceWithArray(adm.values.length, 0, items);
	        return adm.values.length;
	    },
	    pop: function () {
	        return this.splice(Math.max(this[$mobx$$1].values.length - 1, 0), 1)[0];
	    },
	    shift: function () {
	        return this.splice(0, 1)[0];
	    },
	    unshift: function () {
	        var items = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            items[_i] = arguments[_i];
	        }
	        var adm = this[$mobx$$1];
	        adm.spliceWithArray(0, 0, items);
	        return adm.values.length;
	    },
	    reverse: function () {
	        // reverse by default mutates in place before returning the result
	        // which makes it both a 'derivation' and a 'mutation'.
	        // so we deviate from the default and just make it an dervitation
	        if (process.env.NODE_ENV !== "production") {
	            console.warn("[mobx] `observableArray.reverse()` will not update the array in place. Use `observableArray.slice().reverse()` to supress this warning and perform the operation on a copy, or `observableArray.replace(observableArray.slice().reverse())` to reverse & update in place");
	        }
	        var clone = this.slice();
	        return clone.reverse.apply(clone, arguments);
	    },
	    sort: function (compareFn) {
	        // sort by default mutates in place before returning the result
	        // which goes against all good practices. Let's not change the array in place!
	        if (process.env.NODE_ENV !== "production") {
	            console.warn("[mobx] `observableArray.sort()` will not update the array in place. Use `observableArray.slice().sort()` to supress this warning and perform the operation on a copy, or `observableArray.replace(observableArray.slice().sort())` to sort & update in place");
	        }
	        var clone = this.slice();
	        return clone.sort.apply(clone, arguments);
	    },
	    remove: function (value) {
	        var adm = this[$mobx$$1];
	        var idx = adm.dehanceValues(adm.values).indexOf(value);
	        if (idx > -1) {
	            this.splice(idx, 1);
	            return true;
	        }
	        return false;
	    },
	    get: function (index) {
	        var adm = this[$mobx$$1];
	        if (adm) {
	            if (index < adm.values.length) {
	                adm.atom.reportObserved();
	                return adm.dehanceValue(adm.values[index]);
	            }
	            console.warn("[mobx.array] Attempt to read an array index (" + index + ") that is out of bounds (" + adm.values.length + "). Please check length first. Out of bound indices will not be tracked by MobX");
	        }
	        return undefined;
	    },
	    set: function (index, newValue) {
	        var adm = this[$mobx$$1];
	        var values$$1 = adm.values;
	        if (index < values$$1.length) {
	            // update at index in range
	            checkIfStateModificationsAreAllowed$$1(adm.atom);
	            var oldValue = values$$1[index];
	            if (hasInterceptors$$1(adm)) {
	                var change = interceptChange$$1(adm, {
	                    type: "update",
	                    object: this,
	                    index: index,
	                    newValue: newValue
	                });
	                if (!change)
	                    return;
	                newValue = change.newValue;
	            }
	            newValue = adm.enhancer(newValue, oldValue);
	            var changed = newValue !== oldValue;
	            if (changed) {
	                values$$1[index] = newValue;
	                adm.notifyArrayChildUpdate(index, newValue, oldValue);
	            }
	        }
	        else if (index === values$$1.length) {
	            // add a new item
	            adm.spliceWithArray(index, 0, [newValue]);
	        }
	        else {
	            // out of bounds
	            throw new Error("[mobx.array] Index out of bounds, " + index + " is larger than " + values$$1.length);
	        }
	    }
	};
	[
	    "concat",
	    "every",
	    "filter",
	    "forEach",
	    "indexOf",
	    "join",
	    "lastIndexOf",
	    "map",
	    "reduce",
	    "reduceRight",
	    "slice",
	    "some",
	    "toString",
	    "toLocaleString"
	].forEach(function (funcName) {
	    arrayExtensions[funcName] = function () {
	        var adm = this[$mobx$$1];
	        adm.atom.reportObserved();
	        var res = adm.dehanceValues(adm.values);
	        return res[funcName].apply(res, arguments);
	    };
	});
	var isObservableArrayAdministration = createInstanceofPredicate$$1("ObservableArrayAdministration", ObservableArrayAdministration);
	function isObservableArray$$1(thing) {
	    return isObject$$1(thing) && isObservableArrayAdministration(thing[$mobx$$1]);
	}

	var _a;
	var ObservableMapMarker = {};
	// just extend Map? See also https://gist.github.com/nestharus/13b4d74f2ef4a2f4357dbd3fc23c1e54
	// But: https://github.com/mobxjs/mobx/issues/1556
	var ObservableMap$$1 = /** @class */ (function () {
	    function ObservableMap$$1(initialData, enhancer, name) {
	        if (enhancer === void 0) { enhancer = deepEnhancer$$1; }
	        if (name === void 0) { name = "ObservableMap@" + getNextId$$1(); }
	        this.enhancer = enhancer;
	        this.name = name;
	        this[_a] = ObservableMapMarker;
	        this._keysAtom = createAtom$$1(this.name + ".keys()");
	        this[Symbol.toStringTag] = "Map";
	        if (typeof Map !== "function") {
	            throw new Error("mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js");
	        }
	        this._data = new Map();
	        this._hasMap = new Map();
	        this.merge(initialData);
	    }
	    ObservableMap$$1.prototype._has = function (key) {
	        return this._data.has(key);
	    };
	    ObservableMap$$1.prototype.has = function (key) {
	        if (this._hasMap.has(key))
	            return this._hasMap.get(key).get();
	        return this._updateHasMapEntry(key, false).get();
	    };
	    ObservableMap$$1.prototype.set = function (key, value) {
	        var hasKey = this._has(key);
	        if (hasInterceptors$$1(this)) {
	            var change = interceptChange$$1(this, {
	                type: hasKey ? "update" : "add",
	                object: this,
	                newValue: value,
	                name: key
	            });
	            if (!change)
	                return this;
	            value = change.newValue;
	        }
	        if (hasKey) {
	            this._updateValue(key, value);
	        }
	        else {
	            this._addValue(key, value);
	        }
	        return this;
	    };
	    ObservableMap$$1.prototype.delete = function (key) {
	        var _this = this;
	        if (hasInterceptors$$1(this)) {
	            var change = interceptChange$$1(this, {
	                type: "delete",
	                object: this,
	                name: key
	            });
	            if (!change)
	                return false;
	        }
	        if (this._has(key)) {
	            var notifySpy = isSpyEnabled$$1();
	            var notify = hasListeners$$1(this);
	            var change = notify || notifySpy
	                ? {
	                    type: "delete",
	                    object: this,
	                    oldValue: this._data.get(key).value,
	                    name: key
	                }
	                : null;
	            if (notifySpy && process.env.NODE_ENV !== "production")
	                spyReportStart$$1(__assign({}, change, { name: this.name, key: key }));
	            transaction$$1(function () {
	                _this._keysAtom.reportChanged();
	                _this._updateHasMapEntry(key, false);
	                var observable$$1 = _this._data.get(key);
	                observable$$1.setNewValue(undefined);
	                _this._data.delete(key);
	            });
	            if (notify)
	                notifyListeners$$1(this, change);
	            if (notifySpy && process.env.NODE_ENV !== "production")
	                spyReportEnd$$1();
	            return true;
	        }
	        return false;
	    };
	    ObservableMap$$1.prototype._updateHasMapEntry = function (key, value) {
	        // optimization; don't fill the hasMap if we are not observing, or remove entry if there are no observers anymore
	        var entry = this._hasMap.get(key);
	        if (entry) {
	            entry.setNewValue(value);
	        }
	        else {
	            entry = new ObservableValue$$1(value, referenceEnhancer$$1, this.name + "." + key + "?", false);
	            this._hasMap.set(key, entry);
	        }
	        return entry;
	    };
	    ObservableMap$$1.prototype._updateValue = function (key, newValue) {
	        var observable$$1 = this._data.get(key);
	        newValue = observable$$1.prepareNewValue(newValue);
	        if (newValue !== UNCHANGED$$1) {
	            var notifySpy = isSpyEnabled$$1();
	            var notify = hasListeners$$1(this);
	            var change = notify || notifySpy
	                ? {
	                    type: "update",
	                    object: this,
	                    oldValue: observable$$1.value,
	                    name: key,
	                    newValue: newValue
	                }
	                : null;
	            if (notifySpy && process.env.NODE_ENV !== "production")
	                spyReportStart$$1(__assign({}, change, { name: this.name, key: key }));
	            observable$$1.setNewValue(newValue);
	            if (notify)
	                notifyListeners$$1(this, change);
	            if (notifySpy && process.env.NODE_ENV !== "production")
	                spyReportEnd$$1();
	        }
	    };
	    ObservableMap$$1.prototype._addValue = function (key, newValue) {
	        var _this = this;
	        checkIfStateModificationsAreAllowed$$1(this._keysAtom);
	        transaction$$1(function () {
	            var observable$$1 = new ObservableValue$$1(newValue, _this.enhancer, _this.name + "." + key, false);
	            _this._data.set(key, observable$$1);
	            newValue = observable$$1.value; // value might have been changed
	            _this._updateHasMapEntry(key, true);
	            _this._keysAtom.reportChanged();
	        });
	        var notifySpy = isSpyEnabled$$1();
	        var notify = hasListeners$$1(this);
	        var change = notify || notifySpy
	            ? {
	                type: "add",
	                object: this,
	                name: key,
	                newValue: newValue
	            }
	            : null;
	        if (notifySpy && process.env.NODE_ENV !== "production")
	            spyReportStart$$1(__assign({}, change, { name: this.name, key: key }));
	        if (notify)
	            notifyListeners$$1(this, change);
	        if (notifySpy && process.env.NODE_ENV !== "production")
	            spyReportEnd$$1();
	    };
	    ObservableMap$$1.prototype.get = function (key) {
	        if (this.has(key))
	            return this.dehanceValue(this._data.get(key).get());
	        return this.dehanceValue(undefined);
	    };
	    ObservableMap$$1.prototype.dehanceValue = function (value) {
	        if (this.dehancer !== undefined) {
	            return this.dehancer(value);
	        }
	        return value;
	    };
	    ObservableMap$$1.prototype.keys = function () {
	        this._keysAtom.reportObserved();
	        return this._data.keys();
	    };
	    ObservableMap$$1.prototype.values = function () {
	        var self = this;
	        var nextIndex = 0;
	        var keys$$1 = Array.from(this.keys());
	        return makeIterable({
	            next: function () {
	                return nextIndex < keys$$1.length
	                    ? { value: self.get(keys$$1[nextIndex++]), done: false }
	                    : { done: true };
	            }
	        });
	    };
	    ObservableMap$$1.prototype.entries = function () {
	        var self = this;
	        var nextIndex = 0;
	        var keys$$1 = Array.from(this.keys());
	        return makeIterable({
	            next: function () {
	                if (nextIndex < keys$$1.length) {
	                    var key = keys$$1[nextIndex++];
	                    return {
	                        value: [key, self.get(key)],
	                        done: false
	                    };
	                }
	                return { done: true };
	            }
	        });
	    };
	    ObservableMap$$1.prototype[(_a = $mobx$$1, Symbol.iterator)] = function () {
	        return this.entries();
	    };
	    ObservableMap$$1.prototype.forEach = function (callback, thisArg) {
	        var e_1, _a;
	        try {
	            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];
	                callback.call(thisArg, value, key, this);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	    };
	    /** Merge another object into this object, returns this. */
	    ObservableMap$$1.prototype.merge = function (other) {
	        var _this = this;
	        if (isObservableMap$$1(other)) {
	            other = other.toJS();
	        }
	        transaction$$1(function () {
	            if (isPlainObject$$1(other))
	                Object.keys(other).forEach(function (key) { return _this.set(key, other[key]); });
	            else if (Array.isArray(other))
	                other.forEach(function (_a) {
	                    var _b = __read(_a, 2), key = _b[0], value = _b[1];
	                    return _this.set(key, value);
	                });
	            else if (isES6Map$$1(other))
	                other.forEach(function (value, key) { return _this.set(key, value); });
	            else if (other !== null && other !== undefined)
	                fail$$1("Cannot initialize map from " + other);
	        });
	        return this;
	    };
	    ObservableMap$$1.prototype.clear = function () {
	        var _this = this;
	        transaction$$1(function () {
	            untracked$$1(function () {
	                var e_2, _a;
	                try {
	                    for (var _b = __values(_this.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
	                        var key = _c.value;
	                        _this.delete(key);
	                    }
	                }
	                catch (e_2_1) { e_2 = { error: e_2_1 }; }
	                finally {
	                    try {
	                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                    }
	                    finally { if (e_2) throw e_2.error; }
	                }
	            });
	        });
	    };
	    ObservableMap$$1.prototype.replace = function (values$$1) {
	        var _this = this;
	        transaction$$1(function () {
	            // grab all the keys that are present in the new map but not present in the current map
	            // and delete them from the map, then merge the new map
	            // this will cause reactions only on changed values
	            var newKeys = getMapLikeKeys$$1(values$$1);
	            var oldKeys = Array.from(_this.keys());
	            var missingKeys = oldKeys.filter(function (k) { return newKeys.indexOf(k) === -1; });
	            missingKeys.forEach(function (k) { return _this.delete(k); });
	            _this.merge(values$$1);
	        });
	        return this;
	    };
	    Object.defineProperty(ObservableMap$$1.prototype, "size", {
	        get: function () {
	            this._keysAtom.reportObserved();
	            return this._data.size;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /**
	     * Returns a plain object that represents this map.
	     * Note that all the keys being stringified.
	     * If there are duplicating keys after converting them to strings, behaviour is undetermined.
	     */
	    ObservableMap$$1.prototype.toPOJO = function () {
	        var e_3, _a;
	        var res = {};
	        try {
	            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];
	                res["" + key] = value;
	            }
	        }
	        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_3) throw e_3.error; }
	        }
	        return res;
	    };
	    /**
	     * Returns a shallow non observable object clone of this map.
	     * Note that the values migth still be observable. For a deep clone use mobx.toJS.
	     */
	    ObservableMap$$1.prototype.toJS = function () {
	        return new Map(this);
	    };
	    ObservableMap$$1.prototype.toJSON = function () {
	        // Used by JSON.stringify
	        return this.toPOJO();
	    };
	    ObservableMap$$1.prototype.toString = function () {
	        var _this = this;
	        return (this.name +
	            "[{ " +
	            Array.from(this.keys())
	                .map(function (key) { return key + ": " + ("" + _this.get(key)); })
	                .join(", ") +
	            " }]");
	    };
	    /**
	     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.
	     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe
	     * for callback details
	     */
	    ObservableMap$$1.prototype.observe = function (listener, fireImmediately) {
	        process.env.NODE_ENV !== "production" &&
	            invariant$$1(fireImmediately !== true, "`observe` doesn't support fireImmediately=true in combination with maps.");
	        return registerListener$$1(this, listener);
	    };
	    ObservableMap$$1.prototype.intercept = function (handler) {
	        return registerInterceptor$$1(this, handler);
	    };
	    return ObservableMap$$1;
	}());
	/* 'var' fixes small-build issue */
	var isObservableMap$$1 = createInstanceofPredicate$$1("ObservableMap", ObservableMap$$1);

	var ObservableObjectAdministration$$1 = /** @class */ (function () {
	    function ObservableObjectAdministration$$1(target, values$$1, name, defaultEnhancer) {
	        if (values$$1 === void 0) { values$$1 = new Map(); }
	        this.target = target;
	        this.values = values$$1;
	        this.name = name;
	        this.defaultEnhancer = defaultEnhancer;
	        this.keysAtom = new Atom$$1(name + ".keys");
	    }
	    ObservableObjectAdministration$$1.prototype.read = function (key) {
	        return this.values.get(key).get();
	    };
	    ObservableObjectAdministration$$1.prototype.write = function (key, newValue) {
	        var instance = this.target;
	        var observable$$1 = this.values.get(key);
	        if (observable$$1 instanceof ComputedValue$$1) {
	            observable$$1.set(newValue);
	            return;
	        }
	        // intercept
	        if (hasInterceptors$$1(this)) {
	            var change = interceptChange$$1(this, {
	                type: "update",
	                object: this.proxy || instance,
	                name: key,
	                newValue: newValue
	            });
	            if (!change)
	                return;
	            newValue = change.newValue;
	        }
	        newValue = observable$$1.prepareNewValue(newValue);
	        // notify spy & observers
	        if (newValue !== UNCHANGED$$1) {
	            var notify = hasListeners$$1(this);
	            var notifySpy = isSpyEnabled$$1();
	            var change = notify || notifySpy
	                ? {
	                    type: "update",
	                    object: this.proxy || instance,
	                    oldValue: observable$$1.value,
	                    name: key,
	                    newValue: newValue
	                }
	                : null;
	            if (notifySpy && process.env.NODE_ENV !== "production")
	                spyReportStart$$1(__assign({}, change, { name: this.name, key: key }));
	            observable$$1.setNewValue(newValue);
	            if (notify)
	                notifyListeners$$1(this, change);
	            if (notifySpy && process.env.NODE_ENV !== "production")
	                spyReportEnd$$1();
	        }
	    };
	    ObservableObjectAdministration$$1.prototype.has = function (key) {
	        if (this.values.get(key) instanceof ObservableValue$$1)
	            return true;
	        else {
	            this.waitForKey(key);
	            return false;
	        }
	    };
	    ObservableObjectAdministration$$1.prototype.waitForKey = function (key) {
	        var map = this.pendingKeys || (this.pendingKeys = new Map());
	        var entry = map.get(key);
	        if (!entry) {
	            entry = new ObservableValue$$1(false, referenceEnhancer$$1, this.name + "." + key.toString() + "?", false);
	            map.set(key, entry);
	        }
	        entry.get(); // read to subscribe
	    };
	    ObservableObjectAdministration$$1.prototype.addObservableProp = function (propName, newValue, enhancer) {
	        if (enhancer === void 0) { enhancer = this.defaultEnhancer; }
	        var target = this.target;
	        assertPropertyConfigurable$$1(target, propName);
	        if (hasInterceptors$$1(this)) {
	            var change = interceptChange$$1(this, {
	                object: this.proxy || target,
	                name: propName,
	                type: "add",
	                newValue: newValue
	            });
	            if (!change)
	                return;
	            newValue = change.newValue;
	        }
	        var observable$$1 = new ObservableValue$$1(newValue, enhancer, this.name + "." + propName, false);
	        this.values.set(propName, observable$$1);
	        newValue = observable$$1.value; // observableValue might have changed it
	        Object.defineProperty(target, propName, generateObservablePropConfig$$1(propName));
	        this.notifyPropertyAddition(propName, newValue);
	    };
	    ObservableObjectAdministration$$1.prototype.addComputedProp = function (propertyOwner, // where is the property declared?
	    propName, options) {
	        var target = this.target;
	        options.name = options.name || this.name + "." + propName;
	        this.values.set(propName, new ComputedValue$$1(options));
	        if (propertyOwner === target || isPropertyConfigurable$$1(propertyOwner, propName))
	            Object.defineProperty(propertyOwner, propName, generateComputedPropConfig$$1(propName));
	    };
	    ObservableObjectAdministration$$1.prototype.remove = function (key) {
	        if (!this.values.has(key))
	            return;
	        var target = this.target;
	        if (hasInterceptors$$1(this)) {
	            var change = interceptChange$$1(this, {
	                object: this.proxy || target,
	                name: key,
	                type: "remove"
	            });
	            if (!change)
	                return;
	        }
	        try {
	            startBatch$$1();
	            var notify = hasListeners$$1(this);
	            var notifySpy = isSpyEnabled$$1();
	            var oldObservable = this.values.get(key);
	            var oldValue = oldObservable && oldObservable.get();
	            oldObservable && oldObservable.set(undefined);
	            this.keysAtom.reportChanged();
	            this.values.delete(key);
	            delete this.target[key];
	            var change = notify || notifySpy
	                ? {
	                    type: "remove",
	                    object: this.proxy || target,
	                    oldValue: oldValue,
	                    name: key
	                }
	                : null;
	            if (notifySpy && process.env.NODE_ENV !== "production")
	                spyReportStart$$1(__assign({}, change, { name: this.name, key: key }));
	            if (notify)
	                notifyListeners$$1(this, change);
	            if (notifySpy && process.env.NODE_ENV !== "production")
	                spyReportEnd$$1();
	        }
	        finally {
	            endBatch$$1();
	        }
	    };
	    ObservableObjectAdministration$$1.prototype.illegalAccess = function (owner, propName) {
	        /**
	         * This happens if a property is accessed through the prototype chain, but the property was
	         * declared directly as own property on the prototype.
	         *
	         * E.g.:
	         * class A {
	         * }
	         * extendObservable(A.prototype, { x: 1 })
	         *
	         * classB extens A {
	         * }
	         * console.log(new B().x)
	         *
	         * It is unclear whether the property should be considered 'static' or inherited.
	         * Either use `console.log(A.x)`
	         * or: decorate(A, { x: observable })
	         *
	         * When using decorate, the property will always be redeclared as own property on the actual instance
	         */
	        console.warn("Property '" + propName + "' of '" + owner + "' was accessed through the prototype chain. Use 'decorate' instead to declare the prop or access it statically through it's owner");
	    };
	    /**
	     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.
	     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe
	     * for callback details
	     */
	    ObservableObjectAdministration$$1.prototype.observe = function (callback, fireImmediately) {
	        process.env.NODE_ENV !== "production" &&
	            invariant$$1(fireImmediately !== true, "`observe` doesn't support the fire immediately property for observable objects.");
	        return registerListener$$1(this, callback);
	    };
	    ObservableObjectAdministration$$1.prototype.intercept = function (handler) {
	        return registerInterceptor$$1(this, handler);
	    };
	    ObservableObjectAdministration$$1.prototype.notifyPropertyAddition = function (key, newValue) {
	        var notify = hasListeners$$1(this);
	        var notifySpy = isSpyEnabled$$1();
	        var change = notify || notifySpy
	            ? {
	                type: "add",
	                object: this.proxy || this.target,
	                name: key,
	                newValue: newValue
	            }
	            : null;
	        if (notifySpy && process.env.NODE_ENV !== "production")
	            spyReportStart$$1(__assign({}, change, { name: this.name, key: key }));
	        if (notify)
	            notifyListeners$$1(this, change);
	        if (notifySpy && process.env.NODE_ENV !== "production")
	            spyReportEnd$$1();
	        if (this.pendingKeys) {
	            var entry = this.pendingKeys.get(key);
	            if (entry)
	                entry.set(true);
	        }
	        this.keysAtom.reportChanged();
	    };
	    ObservableObjectAdministration$$1.prototype.getKeys = function () {
	        var e_1, _a;
	        this.keysAtom.reportObserved();
	        // return Reflect.ownKeys(this.values) as any
	        var res = [];
	        try {
	            for (var _b = __values(this.values), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];
	                if (value instanceof ObservableValue$$1)
	                    res.push(key);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        return res;
	    };
	    return ObservableObjectAdministration$$1;
	}());
	function asObservableObject$$1(target, name, defaultEnhancer) {
	    if (name === void 0) { name = ""; }
	    if (defaultEnhancer === void 0) { defaultEnhancer = deepEnhancer$$1; }
	    if (Object.prototype.hasOwnProperty.call(target, $mobx$$1))
	        return target[$mobx$$1];
	    process.env.NODE_ENV !== "production" &&
	        invariant$$1(Object.isExtensible(target), "Cannot make the designated object observable; it is not extensible");
	    if (!isPlainObject$$1(target))
	        name = (target.constructor.name || "ObservableObject") + "@" + getNextId$$1();
	    if (!name)
	        name = "ObservableObject@" + getNextId$$1();
	    var adm = new ObservableObjectAdministration$$1(target, new Map(), name, defaultEnhancer);
	    addHiddenProp$$1(target, $mobx$$1, adm);
	    return adm;
	}
	var observablePropertyConfigs = {};
	var computedPropertyConfigs = {};
	function generateObservablePropConfig$$1(propName) {
	    return (observablePropertyConfigs[propName] ||
	        (observablePropertyConfigs[propName] = {
	            configurable: true,
	            enumerable: true,
	            get: function () {
	                return this[$mobx$$1].read(propName);
	            },
	            set: function (v) {
	                this[$mobx$$1].write(propName, v);
	            }
	        }));
	}
	function getAdministrationForComputedPropOwner(owner) {
	    var adm = owner[$mobx$$1];
	    if (!adm) {
	        // because computed props are declared on proty,
	        // the current instance might not have been initialized yet
	        initializeInstance$$1(owner);
	        return owner[$mobx$$1];
	    }
	    return adm;
	}
	function generateComputedPropConfig$$1(propName) {
	    return (computedPropertyConfigs[propName] ||
	        (computedPropertyConfigs[propName] = {
	            configurable: true,
	            enumerable: false,
	            get: function () {
	                return getAdministrationForComputedPropOwner(this).read(propName);
	            },
	            set: function (v) {
	                getAdministrationForComputedPropOwner(this).write(propName, v);
	            }
	        }));
	}
	var isObservableObjectAdministration = createInstanceofPredicate$$1("ObservableObjectAdministration", ObservableObjectAdministration$$1);
	function isObservableObject$$1(thing) {
	    if (isObject$$1(thing)) {
	        // Initializers run lazily when transpiling to babel, so make sure they are run...
	        initializeInstance$$1(thing);
	        return isObservableObjectAdministration(thing[$mobx$$1]);
	    }
	    return false;
	}

	function getAtom$$1(thing, property) {
	    if (typeof thing === "object" && thing !== null) {
	        if (isObservableArray$$1(thing)) {
	            if (property !== undefined)
	                fail$$1(process.env.NODE_ENV !== "production" &&
	                    "It is not possible to get index atoms from arrays");
	            return thing[$mobx$$1].atom;
	        }
	        if (isObservableMap$$1(thing)) {
	            var anyThing = thing;
	            if (property === undefined)
	                return anyThing._keysAtom;
	            var observable$$1 = anyThing._data.get(property) || anyThing._hasMap.get(property);
	            if (!observable$$1)
	                fail$$1(process.env.NODE_ENV !== "production" &&
	                    "the entry '" + property + "' does not exist in the observable map '" + getDebugName$$1(thing) + "'");
	            return observable$$1;
	        }
	        // Initializers run lazily when transpiling to babel, so make sure they are run...
	        initializeInstance$$1(thing);
	        if (property && !thing[$mobx$$1])
	            thing[property]; // See #1072
	        if (isObservableObject$$1(thing)) {
	            if (!property)
	                return fail$$1(process.env.NODE_ENV !== "production" && "please specify a property");
	            var observable$$1 = thing[$mobx$$1].values.get(property);
	            if (!observable$$1)
	                fail$$1(process.env.NODE_ENV !== "production" &&
	                    "no observable property '" + property + "' found on the observable object '" + getDebugName$$1(thing) + "'");
	            return observable$$1;
	        }
	        if (isAtom$$1(thing) || isComputedValue$$1(thing) || isReaction$$1(thing)) {
	            return thing;
	        }
	    }
	    else if (typeof thing === "function") {
	        if (isReaction$$1(thing[$mobx$$1])) {
	            // disposer function
	            return thing[$mobx$$1];
	        }
	    }
	    return fail$$1(process.env.NODE_ENV !== "production" && "Cannot obtain atom from " + thing);
	}
	function getAdministration$$1(thing, property) {
	    if (!thing)
	        fail$$1("Expecting some object");
	    if (property !== undefined)
	        return getAdministration$$1(getAtom$$1(thing, property));
	    if (isAtom$$1(thing) || isComputedValue$$1(thing) || isReaction$$1(thing))
	        return thing;
	    if (isObservableMap$$1(thing))
	        return thing;
	    // Initializers run lazily when transpiling to babel, so make sure they are run...
	    initializeInstance$$1(thing);
	    if (thing[$mobx$$1])
	        return thing[$mobx$$1];
	    fail$$1(process.env.NODE_ENV !== "production" && "Cannot obtain administration from " + thing);
	}
	function getDebugName$$1(thing, property) {
	    var named;
	    if (property !== undefined)
	        named = getAtom$$1(thing, property);
	    else if (isObservableObject$$1(thing) || isObservableMap$$1(thing))
	        named = getAdministration$$1(thing);
	    else
	        named = getAtom$$1(thing); // valid for arrays as well
	    return named.name;
	}

	var toString = Object.prototype.toString;
	function deepEqual$$1(a, b) {
	    return eq(a, b);
	}
	// Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289
	// Internal recursive comparison function for `isEqual`.
	function eq(a, b, aStack, bStack) {
	    // Identical objects are equal. `0 === -0`, but they aren't identical.
	    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
	    if (a === b)
	        return a !== 0 || 1 / a === 1 / b;
	    // `null` or `undefined` only equal to itself (strict comparison).
	    if (a == null || b == null)
	        return false;
	    // `NaN`s are equivalent, but non-reflexive.
	    if (a !== a)
	        return b !== b;
	    // Exhaust primitive checks
	    var type = typeof a;
	    if (type !== "function" && type !== "object" && typeof b != "object")
	        return false;
	    return deepEq(a, b, aStack, bStack);
	}
	// Internal recursive comparison function for `isEqual`.
	function deepEq(a, b, aStack, bStack) {
	    // Unwrap any wrapped objects.
	    a = unwrap(a);
	    b = unwrap(b);
	    // Compare `[[Class]]` names.
	    var className = toString.call(a);
	    if (className !== toString.call(b))
	        return false;
	    switch (className) {
	        // Strings, numbers, regular expressions, dates, and booleans are compared by value.
	        case "[object RegExp]":
	        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
	        case "[object String]":
	            // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
	            // equivalent to `new String("5")`.
	            return "" + a === "" + b;
	        case "[object Number]":
	            // `NaN`s are equivalent, but non-reflexive.
	            // Object(NaN) is equivalent to NaN.
	            if (+a !== +a)
	                return +b !== +b;
	            // An `egal` comparison is performed for other numeric values.
	            return +a === 0 ? 1 / +a === 1 / b : +a === +b;
	        case "[object Date]":
	        case "[object Boolean]":
	            // Coerce dates and booleans to numeric primitive values. Dates are compared by their
	            // millisecond representations. Note that invalid dates with millisecond representations
	            // of `NaN` are not equivalent.
	            return +a === +b;
	        case "[object Symbol]":
	            return (typeof Symbol !== "undefined" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b));
	    }
	    var areArrays = className === "[object Array]";
	    if (!areArrays) {
	        if (typeof a != "object" || typeof b != "object")
	            return false;
	        // Objects with different constructors are not equivalent, but `Object`s or `Array`s
	        // from different frames are.
	        var aCtor = a.constructor, bCtor = b.constructor;
	        if (aCtor !== bCtor &&
	            !(typeof aCtor === "function" &&
	                aCtor instanceof aCtor &&
	                typeof bCtor === "function" &&
	                bCtor instanceof bCtor) &&
	            ("constructor" in a && "constructor" in b)) {
	            return false;
	        }
	    }
	    // Assume equality for cyclic structures. The algorithm for detecting cyclic
	    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
	    // Initializing stack of traversed objects.
	    // It's done here since we only need them for objects and arrays comparison.
	    aStack = aStack || [];
	    bStack = bStack || [];
	    var length = aStack.length;
	    while (length--) {
	        // Linear search. Performance is inversely proportional to the number of
	        // unique nested structures.
	        if (aStack[length] === a)
	            return bStack[length] === b;
	    }
	    // Add the first object to the stack of traversed objects.
	    aStack.push(a);
	    bStack.push(b);
	    // Recursively compare objects and arrays.
	    if (areArrays) {
	        // Compare array lengths to determine if a deep comparison is necessary.
	        length = a.length;
	        if (length !== b.length)
	            return false;
	        // Deep compare the contents, ignoring non-numeric properties.
	        while (length--) {
	            if (!eq(a[length], b[length], aStack, bStack))
	                return false;
	        }
	    }
	    else {
	        // Deep compare objects.
	        var keys$$1 = Object.keys(a), key;
	        length = keys$$1.length;
	        // Ensure that both objects contain the same number of properties before comparing deep equality.
	        if (Object.keys(b).length !== length)
	            return false;
	        while (length--) {
	            // Deep compare each member
	            key = keys$$1[length];
	            if (!(has$1(b, key) && eq(a[key], b[key], aStack, bStack)))
	                return false;
	        }
	    }
	    // Remove the first object from the stack of traversed objects.
	    aStack.pop();
	    bStack.pop();
	    return true;
	}
	function unwrap(a) {
	    if (isObservableArray$$1(a))
	        return a.slice();
	    if (isES6Map$$1(a) || isObservableMap$$1(a))
	        return Array.from(a.entries());
	    return a;
	}
	function has$1(a, key) {
	    return Object.prototype.hasOwnProperty.call(a, key);
	}

	function makeIterable(iterator) {
	    iterator[Symbol.iterator] = self;
	    return iterator;
	}
	function self() {
	    return this;
	}

	/*
	The only reason for this file to exist is pure horror:
	Without it rollup can make the bundling fail at any point in time; when it rolls up the files in the wrong order
	it will cause undefined errors (for example because super classes or local variables not being hosted).
	With this file that will still happen,
	but at least in this file we can magically reorder the imports with trial and error until the build succeeds again.
	*/

	/**
	 * (c) Michel Weststrate 2015 - 2018
	 * MIT Licensed
	 *
	 * Welcome to the mobx sources! To get an global overview of how MobX internally works,
	 * this is a good place to start:
	 * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74
	 *
	 * Source folders:
	 * ===============
	 *
	 * - api/     Most of the public static methods exposed by the module can be found here.
	 * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.
	 * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.
	 * - utils/   Utility stuff.
	 *
	 */
	if (typeof Proxy === "undefined" || typeof Symbol === "undefined") {
	    throw new Error("[mobx] MobX 5+ requires Proxy and Symbol objects. If your environment doesn't support Proxy objects, please downgrade to MobX 4. For React Native Android, consider upgrading JSCore.");
	}
	try {
	    // define process.env if needed
	    // if this is not a production build in the first place
	    // (in which case the expression below would be substituted with 'production')
	    process.env.NODE_ENV;
	}
	catch (e) {
	    var g = typeof window !== "undefined" ? window : global;
	    if (typeof process === "undefined")
	        g.process = {};
	    g.process.env = {};
	}

	(function () {
	    function testCodeMinification() { }
	    if (testCodeMinification.name !== "testCodeMinification" &&
	        process.env.NODE_ENV !== "production") {
	        console.warn("[mobx] you are running a minified build, but 'process.env.NODE_ENV' was not set to 'production' in your bundler. This results in an unnecessarily large and slow bundle");
	    }
	})();
	// Devtools support
	if (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === "object") {
	    // See: https://github.com/andykog/mobx-devtools/
	    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({
	        spy: spy$$1,
	        extras: {
	            getDebugName: getDebugName$$1
	        },
	        $mobx: $mobx$$1
	    });
	}

	exports.Reaction = Reaction$$1;
	exports.untracked = untracked$$1;
	exports.createAtom = createAtom$$1;
	exports.spy = spy$$1;
	exports.comparer = comparer$$1;
	exports.isObservableObject = isObservableObject$$1;
	exports.isBoxedObservable = isObservableValue$$1;
	exports.isObservableArray = isObservableArray$$1;
	exports.ObservableMap = ObservableMap$$1;
	exports.isObservableMap = isObservableMap$$1;
	exports.transaction = transaction$$1;
	exports.observable = observable$$1;
	exports.computed = computed$$1;
	exports.isObservable = isObservable$$1;
	exports.isObservableProp = isObservableProp$$1;
	exports.isComputed = isComputed$$1;
	exports.isComputedProp = isComputedProp$$1;
	exports.extendObservable = extendObservable$$1;
	exports.observe = observe$$1;
	exports.intercept = intercept$$1;
	exports.autorun = autorun$$1;
	exports.reaction = reaction$$1;
	exports.when = when$$1;
	exports.action = action$$1;
	exports.isAction = isAction$$1;
	exports.runInAction = runInAction$$1;
	exports.keys = keys$$1;
	exports.values = values$$1;
	exports.entries = entries$$1;
	exports.set = set$$1;
	exports.remove = remove$$1;
	exports.has = has$$1;
	exports.get = get$$1;
	exports.decorate = decorate$$1;
	exports.configure = configure$$1;
	exports.onBecomeObserved = onBecomeObserved$$1;
	exports.onBecomeUnobserved = onBecomeUnobserved$$1;
	exports.flow = flow$$1;
	exports.toJS = toJS$$1;
	exports.trace = trace$$1;
	exports.getDependencyTree = getDependencyTree$$1;
	exports.getObserverTree = getObserverTree$$1;
	exports._resetGlobalState = resetGlobalState$$1;
	exports._getGlobalState = getGlobalState$$1;
	exports.getDebugName = getDebugName$$1;
	exports.getAtom = getAtom$$1;
	exports._getAdministration = getAdministration$$1;
	exports._allowStateChanges = allowStateChanges$$1;
	exports.isArrayLike = isArrayLike$$1;
	exports.$mobx = $mobx$$1;
	exports._isComputingDerivation = isComputingDerivation$$1;
	exports.onReactionError = onReactionError$$1;
	exports._interceptReads = interceptReads$$1;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), (function() { return this; }())))

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, module) {'use strict';

	Object.defineProperty(exports, '__esModule', { value: true });

	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

	var hyphenate = _interopDefault(__webpack_require__(22));
	var React = __webpack_require__(2);
	var React__default = _interopDefault(React);
	var Stylis = _interopDefault(__webpack_require__(66));
	var _insertRulePlugin = _interopDefault(__webpack_require__(67));
	var PropTypes = _interopDefault(__webpack_require__(59));
	var hoistStatics = _interopDefault(__webpack_require__(68));
	var reactIs = __webpack_require__(69);

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
	  return typeof obj;
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	};

	var classCallCheck = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

	var createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }

	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];

	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }

	  return target;
	};

	var inherits = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
	  }

	  subClass.prototype = Object.create(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	};

	var objectWithoutProperties = function (obj, keys) {
	  var target = {};

	  for (var i in obj) {
	    if (keys.indexOf(i) >= 0) continue;
	    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
	    target[i] = obj[i];
	  }

	  return target;
	};

	var possibleConstructorReturn = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }

	  return call && (typeof call === "object" || typeof call === "function") ? call : self;
	};

	// 
	var isPlainObject = (function (x) {
	  return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x.constructor === Object;
	});

	// 


	/**
	 * Parse errors.md and turn it into a simple hash of code: message
	 */
	var ERRORS = process.env.NODE_ENV !== 'production' ? {
	  "1": "Cannot create styled-component for component: %s.\n\n",
	  "2": "Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\n\n* Are you trying to reuse it across renders?\n* Are you accidentally calling collectStyles twice?\n\n",
	  "3": "Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\n\n",
	  "4": "The `StyleSheetManager` expects a valid target or sheet prop!\n\n* Does this error occur on the client and is your target falsy?\n* Does this error occur on the server and is the sheet falsy?\n\n",
	  "5": "The clone method cannot be used on the client!\n\n* Are you running in a client-like environment on the server?\n* Are you trying to run SSR on the client?\n\n",
	  "6": "Trying to insert a new style tag, but the given Node is unmounted!\n\n* Are you using a custom target that isn't mounted?\n* Does your document not have a valid head element?\n* Have you accidentally removed a style tag manually?\n\n",
	  "7": "ThemeProvider: Please return an object from your \"theme\" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n",
	  "8": "ThemeProvider: Please make your \"theme\" prop an object.\n\n",
	  "9": "Missing document `<head>`\n\n",
	  "10": "Cannot find sheet for given tag\n\n",
	  "11": "A plain React class (%s) has been interpolated into styles, probably as a component selector (https://www.styled-components.com/docs/advanced#referring-to-other-components). Only styled-component classes can be targeted in this fashion."
	} : {};

	/**
	 * super basic version of sprintf
	 */
	function format() {
	  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }

	  var a = args[0];
	  var b = [];
	  var c = void 0;

	  for (c = 1; c < args.length; c += 1) {
	    b.push(args[c]);
	  }

	  b.forEach(function (d) {
	    a = a.replace(/%[a-z]/, d);
	  });

	  return a;
	}

	/**
	 * Create an error file out of errors.md for development and a simple web link to the full errors
	 * in production mode.
	 */

	var StyledComponentsError = function (_Error) {
	  inherits(StyledComponentsError, _Error);

	  function StyledComponentsError(code) {
	    classCallCheck(this, StyledComponentsError);

	    for (var _len2 = arguments.length, interpolations = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	      interpolations[_key2 - 1] = arguments[_key2];
	    }

	    if (process.env.NODE_ENV === 'production') {
	      var _this = possibleConstructorReturn(this, _Error.call(this, 'An error occurred. See https://github.com/styled-components/styled-components/blob/master/src/utils/errors.md#' + code + ' for more information. ' + (interpolations ? 'Additional arguments: ' + interpolations.join(', ') : '')));
	    } else {
	      var _this = possibleConstructorReturn(this, _Error.call(this, format.apply(undefined, [ERRORS[code]].concat(interpolations))));
	    }
	    return possibleConstructorReturn(_this);
	  }

	  return StyledComponentsError;
	}(Error);

	// 

	var objToCss = function objToCss(obj, prevKey) {
	  var css = Object.keys(obj).filter(function (key) {
	    var chunk = obj[key];
	    return chunk !== undefined && chunk !== null && chunk !== false && chunk !== '';
	  }).map(function (key) {
	    if (isPlainObject(obj[key])) return objToCss(obj[key], key);
	    return hyphenate(key) + ': ' + obj[key] + ';';
	  }).join(' ');
	  return prevKey ? prevKey + ' {\n  ' + css + '\n}' : css;
	};

	var flatten = function flatten(chunks, executionContext) {
	  return chunks.reduce(function (ruleSet, chunk) {
	    /* Remove falsey values */
	    if (chunk === undefined || chunk === null || chunk === false || chunk === '') {
	      return ruleSet;
	    }

	    /* Flatten ruleSet */
	    if (Array.isArray(chunk)) {
	      ruleSet.push.apply(ruleSet, flatten(chunk, executionContext));
	      return ruleSet;
	    }

	    /* Handle other components */
	    if (chunk.hasOwnProperty('styledComponentId')) {
	      // $FlowFixMe not sure how to make this pass
	      ruleSet.push('.' + chunk.styledComponentId);
	      return ruleSet;
	    }

	    /* Either execute or defer the function */
	    if (typeof chunk === 'function') {
	      if (executionContext) {
	        var nextChunk = chunk(executionContext);
	        /* Throw if a React Element was given styles */
	        if (React__default.isValidElement(nextChunk)) {
	          var elementName = chunk.displayName || chunk.name;
	          throw new StyledComponentsError(11, elementName);
	        }
	        ruleSet.push.apply(ruleSet, flatten([nextChunk], executionContext));
	      } else ruleSet.push(chunk);

	      return ruleSet;
	    }

	    /* Handle objects */
	    ruleSet.push(
	    // $FlowFixMe have to add %checks somehow to isPlainObject
	    isPlainObject(chunk) ? objToCss(chunk) : chunk.toString());

	    return ruleSet;
	  }, []);
	};

	// 

	var COMMENT_REGEX = /^\s*\/\/.*$/gm;

	// NOTE: This stylis instance is only used to split rules from SSR'd style tags
	var stylisSplitter = new Stylis({
	  global: false,
	  cascade: true,
	  keyframe: false,
	  prefix: false,
	  compress: false,
	  semicolon: true
	});

	var stylis = new Stylis({
	  global: false,
	  cascade: true,
	  keyframe: false,
	  prefix: true,
	  compress: false,
	  semicolon: false // NOTE: This means "autocomplete missing semicolons"
	});

	// Wrap `insertRulePlugin to build a list of rules,
	// and then make our own plugin to return the rules. This
	// makes it easier to hook into the existing SSR architecture

	var parsingRules = [];
	// eslint-disable-next-line consistent-return
	var returnRulesPlugin = function returnRulesPlugin(context) {
	  if (context === -2) {
	    var parsedRules = parsingRules;
	    parsingRules = [];
	    return parsedRules;
	  }
	};

	var parseRulesPlugin = _insertRulePlugin(function (rule) {
	  parsingRules.push(rule);
	});

	stylis.use([parseRulesPlugin, returnRulesPlugin]);
	stylisSplitter.use([parseRulesPlugin, returnRulesPlugin]);

	var stringifyRules = function stringifyRules(rules, selector, prefix) {
	  var flatCSS = rules.join('').replace(COMMENT_REGEX, ''); // replace JS comments

	  var cssStr = selector && prefix ? prefix + ' ' + selector + ' { ' + flatCSS + ' }' : flatCSS;

	  return stylis(prefix || !selector ? '' : selector, cssStr);
	};

	var splitByRules = function splitByRules(css) {
	  return stylisSplitter('', css);
	};

	// 

	function isStyledComponent(target) /* : %checks */{
	  return (
	    // $FlowFixMe TODO: flow for styledComponentId
	    typeof target === 'function' && typeof target.styledComponentId === 'string'
	  );
	}

	// 

	/* This function is DEPRECATED and will be removed on the next major version release.
	 * It was needed to rehydrate all style blocks prepended to chunks before React
	 * tries to rehydrate its HTML stream. Since the master StyleSheet will now detect
	 * the use of streamed style tags and will perform the rehydration earlier when needed
	 * this function will not be needed anymore */
	function consolidateStreamedStyles() {
	  if (process.env.NODE_ENV !== 'production') {
	    // eslint-disable-next-line no-console
	    console.warn('styled-components automatically does streaming SSR rehydration now.\n' + 'Calling consolidateStreamedStyles manually is no longer necessary and a noop now.\n' + '- Please remove the consolidateStreamedStyles call from your client.');
	  }
	}

	// 
	/* eslint-disable no-bitwise */

	/* This is the "capacity" of our alphabet i.e. 2x26 for all letters plus their capitalised
	 * counterparts */
	var charsLength = 52;

	/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */
	var getAlphabeticChar = function getAlphabeticChar(code) {
	  return String.fromCharCode(code + (code > 25 ? 39 : 97));
	};

	/* input a number, usually a hash and convert it to base-52 */
	var generateAlphabeticName = function generateAlphabeticName(code) {
	  var name = '';
	  var x = void 0;

	  /* get a char and divide by alphabet-length */
	  for (x = code; x > charsLength; x = Math.floor(x / charsLength)) {
	    name = getAlphabeticChar(x % charsLength) + name;
	  }

	  return getAlphabeticChar(x % charsLength) + name;
	};

	// 

	var interleave = (function (strings, interpolations) {
	  var result = [strings[0]];

	  for (var i = 0, len = interpolations.length; i < len; i += 1) {
	    result.push(interpolations[i], strings[i + 1]);
	  }

	  return result;
	});

	// 
	var EMPTY_ARRAY = Object.freeze([]);
	var EMPTY_OBJECT = Object.freeze({});

	// 

	var css = (function (styles) {
	  for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	    interpolations[_key - 1] = arguments[_key];
	  }

	  if (typeof styles === 'function' || isPlainObject(styles)) {
	    // $FlowFixMe
	    return flatten(interleave(EMPTY_ARRAY, [styles].concat(interpolations)));
	  }

	  // $FlowFixMe
	  return flatten(interleave(styles, interpolations));
	});

	// 


	var SC_ATTR = typeof process !== 'undefined' && process.env.SC_ATTR || 'data-styled-components';
	var SC_STREAM_ATTR = 'data-styled-streamed';
	var CONTEXT_KEY = '__styled-components-stylesheet__';

	var IS_BROWSER = typeof window !== 'undefined' && 'HTMLElement' in window;

	var DISABLE_SPEEDY = process.env.NODE_ENV !== 'production';

	// 
	var SC_COMPONENT_ID = /^[^\S\n]*?\/\* sc-component-id:\s*(\S+)\s+\*\//gm;

	var extractComps = (function (maybeCSS) {
	  var css = '' + (maybeCSS || ''); // Definitely a string, and a clone
	  var existingComponents = [];
	  css.replace(SC_COMPONENT_ID, function (match, componentId, matchIndex) {
	    existingComponents.push({ componentId: componentId, matchIndex: matchIndex });
	    return match;
	  });
	  return existingComponents.map(function (_ref, i) {
	    var componentId = _ref.componentId,
	        matchIndex = _ref.matchIndex;

	    var nextComp = existingComponents[i + 1];
	    var cssFromDOM = nextComp ? css.slice(matchIndex, nextComp.matchIndex) : css.slice(matchIndex);
	    return { componentId: componentId, cssFromDOM: cssFromDOM };
	  });
	});

	// 
	/* eslint-disable camelcase, no-undef */

	var getNonce = (function () {
	  return typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;
	});

	// 
	// Helper to call a given function, only once
	var once = (function (cb) {
	  var called = false;

	  return function () {
	    if (!called) {
	      called = true;
	      cb();
	    }
	  };
	});

	// 
	/* These are helpers for the StyleTags to keep track of the injected
	 * rule names for each (component) ID that they're keeping track of.
	 * They're crucial for detecting whether a name has already been
	 * injected.
	 * (This excludes rehydrated names) */

	/* adds a new ID:name pairing to a names dictionary */
	var addNameForId = function addNameForId(names, id, name) {
	  if (name) {
	    // eslint-disable-next-line no-param-reassign
	    var namesForId = names[id] || (names[id] = Object.create(null));
	    namesForId[name] = true;
	  }
	};

	/* resets an ID entirely by overwriting it in the dictionary */
	var resetIdNames = function resetIdNames(names, id) {
	  // eslint-disable-next-line no-param-reassign
	  names[id] = Object.create(null);
	};

	/* factory for a names dictionary checking the existance of an ID:name pairing */
	var hasNameForId = function hasNameForId(names) {
	  return function (id, name) {
	    return names[id] !== undefined && names[id][name];
	  };
	};

	/* stringifies names for the html/element output */
	var stringifyNames = function stringifyNames(names) {
	  var str = '';
	  // eslint-disable-next-line guard-for-in
	  for (var id in names) {
	    str += Object.keys(names[id]).join(' ') + ' ';
	  }
	  return str.trim();
	};

	/* clones the nested names dictionary */
	var cloneNames = function cloneNames(names) {
	  var clone = Object.create(null);
	  // eslint-disable-next-line guard-for-in
	  for (var id in names) {
	    clone[id] = _extends({}, names[id]);
	  }
	  return clone;
	};

	// 

	/* These are helpers that deal with the insertRule (aka speedy) API
	 * They are used in the StyleTags and specifically the speedy tag
	 */

	/* retrieve a sheet for a given style tag */
	var sheetForTag = function sheetForTag(tag) {
	  // $FlowFixMe
	  if (tag.sheet) return tag.sheet;

	  /* Firefox quirk requires us to step through all stylesheets to find one owned by the given tag */
	  var size = document.styleSheets.length;
	  for (var i = 0; i < size; i += 1) {
	    var sheet = document.styleSheets[i];
	    // $FlowFixMe
	    if (sheet.ownerNode === tag) return sheet;
	  }

	  /* we should always be able to find a tag */
	  throw new StyledComponentsError(10);
	};

	/* insert a rule safely and return whether it was actually injected */
	var safeInsertRule = function safeInsertRule(sheet, cssRule, index) {
	  /* abort early if cssRule string is falsy */
	  if (!cssRule) return false;

	  var maxIndex = sheet.cssRules.length;

	  try {
	    /* use insertRule and cap passed index with maxIndex (no of cssRules) */
	    sheet.insertRule(cssRule, index <= maxIndex ? index : maxIndex);
	  } catch (err) {
	    /* any error indicates an invalid rule */
	    return false;
	  }

	  return true;
	};

	/* deletes `size` rules starting from `removalIndex` */
	var deleteRules = function deleteRules(sheet, removalIndex, size) {
	  var lowerBound = removalIndex - size;
	  for (var i = removalIndex; i > lowerBound; i -= 1) {
	    sheet.deleteRule(i);
	  }
	};

	// 

	/* this marker separates component styles and is important for rehydration */
	var makeTextMarker = function makeTextMarker(id) {
	  return '\n/* sc-component-id: ' + id + ' */\n';
	};

	/* add up all numbers in array up until and including the index */
	var addUpUntilIndex = function addUpUntilIndex(sizes, index) {
	  var totalUpToIndex = 0;
	  for (var i = 0; i <= index; i += 1) {
	    totalUpToIndex += sizes[i];
	  }

	  return totalUpToIndex;
	};

	/* create a new style tag after lastEl */
	var makeStyleTag = function makeStyleTag(target, tagEl, insertBefore) {
	  var el = document.createElement('style');
	  el.setAttribute(SC_ATTR, '');

	  var nonce = getNonce();
	  if (nonce) {
	    el.setAttribute('nonce', nonce);
	  }

	  /* Work around insertRule quirk in EdgeHTML */
	  el.appendChild(document.createTextNode(''));

	  if (target && !tagEl) {
	    /* Append to target when no previous element was passed */
	    target.appendChild(el);
	  } else {
	    if (!tagEl || !target || !tagEl.parentNode) {
	      throw new StyledComponentsError(6);
	    }

	    /* Insert new style tag after the previous one */
	    tagEl.parentNode.insertBefore(el, insertBefore ? tagEl : tagEl.nextSibling);
	  }

	  return el;
	};

	/* takes a css factory function and outputs an html styled tag factory */
	var wrapAsHtmlTag = function wrapAsHtmlTag(css, names) {
	  return function (additionalAttrs) {
	    var nonce = getNonce();
	    var attrs = [nonce && 'nonce="' + nonce + '"', SC_ATTR + '="' + stringifyNames(names) + '"', additionalAttrs];

	    var htmlAttr = attrs.filter(Boolean).join(' ');
	    return '<style ' + htmlAttr + '>' + css() + '</style>';
	  };
	};

	/* takes a css factory function and outputs an element factory */
	var wrapAsElement = function wrapAsElement(css, names) {
	  return function () {
	    var _props;

	    var props = (_props = {}, _props[SC_ATTR] = stringifyNames(names), _props);

	    var nonce = getNonce();
	    if (nonce) {
	      // $FlowFixMe
	      props.nonce = nonce;
	    }

	    // eslint-disable-next-line react/no-danger
	    return React__default.createElement('style', _extends({}, props, { dangerouslySetInnerHTML: { __html: css() } }));
	  };
	};

	var getIdsFromMarkersFactory = function getIdsFromMarkersFactory(markers) {
	  return function () {
	    return Object.keys(markers);
	  };
	};

	/* speedy tags utilise insertRule */
	var makeSpeedyTag = function makeSpeedyTag(el, getImportRuleTag) {
	  var names = Object.create(null);
	  var markers = Object.create(null);
	  var sizes = [];

	  var extractImport = getImportRuleTag !== undefined;
	  /* indicates whther getImportRuleTag was called */
	  var usedImportRuleTag = false;

	  var insertMarker = function insertMarker(id) {
	    var prev = markers[id];
	    if (prev !== undefined) {
	      return prev;
	    }

	    markers[id] = sizes.length;
	    sizes.push(0);
	    resetIdNames(names, id);

	    return markers[id];
	  };

	  var insertRules = function insertRules(id, cssRules, name) {
	    var marker = insertMarker(id);
	    var sheet = sheetForTag(el);
	    var insertIndex = addUpUntilIndex(sizes, marker);

	    var injectedRules = 0;
	    var importRules = [];
	    var cssRulesSize = cssRules.length;

	    for (var i = 0; i < cssRulesSize; i += 1) {
	      var cssRule = cssRules[i];
	      var mayHaveImport = extractImport; /* @import rules are reordered to appear first */
	      if (mayHaveImport && cssRule.indexOf('@import') !== -1) {
	        importRules.push(cssRule);
	      } else if (safeInsertRule(sheet, cssRule, insertIndex + injectedRules)) {
	        mayHaveImport = false;
	        injectedRules += 1;
	      }
	    }

	    if (extractImport && importRules.length > 0) {
	      usedImportRuleTag = true;
	      // $FlowFixMe
	      getImportRuleTag().insertRules(id + '-import', importRules);
	    }

	    sizes[marker] += injectedRules; /* add up no of injected rules */
	    addNameForId(names, id, name);
	  };

	  var removeRules = function removeRules(id) {
	    var marker = markers[id];
	    if (marker === undefined) return;

	    var size = sizes[marker];
	    var sheet = sheetForTag(el);
	    var removalIndex = addUpUntilIndex(sizes, marker);
	    deleteRules(sheet, removalIndex, size);
	    sizes[marker] = 0;
	    resetIdNames(names, id);

	    if (extractImport && usedImportRuleTag) {
	      // $FlowFixMe
	      getImportRuleTag().removeRules(id + '-import');
	    }
	  };

	  var css = function css() {
	    var _sheetForTag = sheetForTag(el),
	        cssRules = _sheetForTag.cssRules;

	    var str = '';

	    // eslint-disable-next-line guard-for-in
	    for (var id in markers) {
	      str += makeTextMarker(id);
	      var marker = markers[id];
	      var end = addUpUntilIndex(sizes, marker);
	      var size = sizes[marker];
	      for (var i = end - size; i < end; i += 1) {
	        var rule = cssRules[i];
	        if (rule !== undefined) {
	          str += rule.cssText;
	        }
	      }
	    }

	    return str;
	  };

	  return {
	    styleTag: el,
	    getIds: getIdsFromMarkersFactory(markers),
	    hasNameForId: hasNameForId(names),
	    insertMarker: insertMarker,
	    insertRules: insertRules,
	    removeRules: removeRules,
	    css: css,
	    toHTML: wrapAsHtmlTag(css, names),
	    toElement: wrapAsElement(css, names),
	    clone: function clone() {
	      throw new StyledComponentsError(5);
	    }
	  };
	};

	var makeTextNode = function makeTextNode(id) {
	  return document.createTextNode(makeTextMarker(id));
	};

	var makeBrowserTag = function makeBrowserTag(el, getImportRuleTag) {
	  var names = Object.create(null);
	  var markers = Object.create(null);

	  var extractImport = getImportRuleTag !== undefined;

	  /* indicates whther getImportRuleTag was called */
	  var usedImportRuleTag = false;

	  var insertMarker = function insertMarker(id) {
	    var prev = markers[id];
	    if (prev !== undefined) {
	      return prev;
	    }

	    markers[id] = makeTextNode(id);
	    el.appendChild(markers[id]);
	    names[id] = Object.create(null);

	    return markers[id];
	  };

	  var insertRules = function insertRules(id, cssRules, name) {
	    var marker = insertMarker(id);
	    var importRules = [];
	    var cssRulesSize = cssRules.length;

	    for (var i = 0; i < cssRulesSize; i += 1) {
	      var rule = cssRules[i];
	      var mayHaveImport = extractImport;
	      if (mayHaveImport && rule.indexOf('@import') !== -1) {
	        importRules.push(rule);
	      } else {
	        mayHaveImport = false;
	        var separator = i === cssRulesSize - 1 ? '' : ' ';
	        marker.appendData('' + rule + separator);
	      }
	    }

	    addNameForId(names, id, name);

	    if (extractImport && importRules.length > 0) {
	      usedImportRuleTag = true;
	      // $FlowFixMe
	      getImportRuleTag().insertRules(id + '-import', importRules);
	    }
	  };

	  var removeRules = function removeRules(id) {
	    var marker = markers[id];
	    if (marker === undefined) return;

	    /* create new empty text node and replace the current one */
	    var newMarker = makeTextNode(id);
	    el.replaceChild(newMarker, marker);
	    markers[id] = newMarker;
	    resetIdNames(names, id);

	    if (extractImport && usedImportRuleTag) {
	      // $FlowFixMe
	      getImportRuleTag().removeRules(id + '-import');
	    }
	  };

	  var css = function css() {
	    var str = '';
	    // eslint-disable-next-line guard-for-in
	    for (var id in markers) {
	      str += markers[id].data;
	    }
	    return str;
	  };

	  return {
	    clone: function clone() {
	      throw new StyledComponentsError(5);
	    },

	    css: css,
	    getIds: getIdsFromMarkersFactory(markers),
	    hasNameForId: hasNameForId(names),
	    insertMarker: insertMarker,
	    insertRules: insertRules,
	    removeRules: removeRules,
	    styleTag: el,
	    toElement: wrapAsElement(css, names),
	    toHTML: wrapAsHtmlTag(css, names)
	  };
	};

	var makeServerTagInternal = function makeServerTagInternal(namesArg, markersArg) {
	  var names = namesArg === undefined ? Object.create(null) : namesArg;
	  var markers = markersArg === undefined ? Object.create(null) : markersArg;

	  var insertMarker = function insertMarker(id) {
	    var prev = markers[id];
	    if (prev !== undefined) {
	      return prev;
	    }

	    return markers[id] = [''];
	  };

	  var insertRules = function insertRules(id, cssRules, name) {
	    var marker = insertMarker(id);
	    marker[0] += cssRules.join(' ');
	    addNameForId(names, id, name);
	  };

	  var removeRules = function removeRules(id) {
	    var marker = markers[id];
	    if (marker === undefined) return;
	    marker[0] = '';
	    resetIdNames(names, id);
	  };

	  var css = function css() {
	    var str = '';
	    // eslint-disable-next-line guard-for-in
	    for (var id in markers) {
	      var cssForId = markers[id][0];
	      if (cssForId) {
	        str += makeTextMarker(id) + cssForId;
	      }
	    }
	    return str;
	  };

	  var clone = function clone() {
	    var namesClone = cloneNames(names);
	    var markersClone = Object.create(null);

	    // eslint-disable-next-line guard-for-in
	    for (var id in markers) {
	      markersClone[id] = [markers[id][0]];
	    }

	    return makeServerTagInternal(namesClone, markersClone);
	  };

	  var tag = {
	    clone: clone,
	    css: css,
	    getIds: getIdsFromMarkersFactory(markers),
	    hasNameForId: hasNameForId(names),
	    insertMarker: insertMarker,
	    insertRules: insertRules,
	    removeRules: removeRules,
	    styleTag: null,
	    toElement: wrapAsElement(css, names),
	    toHTML: wrapAsHtmlTag(css, names)
	  };

	  return tag;
	};

	var makeServerTag = function makeServerTag() {
	  return makeServerTagInternal();
	};

	var makeTag = function makeTag(target, tagEl, forceServer, insertBefore, getImportRuleTag) {
	  if (IS_BROWSER && !forceServer) {
	    var el = makeStyleTag(target, tagEl, insertBefore);

	    if (DISABLE_SPEEDY) {
	      return makeBrowserTag(el, getImportRuleTag);
	    } else {
	      return makeSpeedyTag(el, getImportRuleTag);
	    }
	  }

	  return makeServerTag();
	};

	/* wraps a given tag so that rehydration is performed once when necessary */
	var makeRehydrationTag = function makeRehydrationTag(tag, els, extracted, immediateRehydration) {
	  /* rehydration function that adds all rules to the new tag */
	  var rehydrate = once(function () {
	    /* add all extracted components to the new tag */
	    for (var i = 0, len = extracted.length; i < len; i += 1) {
	      var _extracted$i = extracted[i],
	          componentId = _extracted$i.componentId,
	          cssFromDOM = _extracted$i.cssFromDOM;

	      var cssRules = splitByRules(cssFromDOM);
	      tag.insertRules(componentId, cssRules);
	    }

	    /* remove old HTMLStyleElements, since they have been rehydrated */
	    for (var _i = 0, _len = els.length; _i < _len; _i += 1) {
	      var el = els[_i];
	      if (el.parentNode) {
	        el.parentNode.removeChild(el);
	      }
	    }
	  });

	  if (immediateRehydration) rehydrate();

	  return _extends({}, tag, {
	    /* add rehydration hook to insertion methods */
	    insertMarker: function insertMarker(id) {
	      rehydrate();
	      return tag.insertMarker(id);
	    },
	    insertRules: function insertRules(id, cssRules, name) {
	      rehydrate();
	      return tag.insertRules(id, cssRules, name);
	    }
	  });
	};

	// 

	var SPLIT_REGEX = /\s+/;

	/* determine the maximum number of components before tags are sharded */
	var MAX_SIZE = void 0;
	if (IS_BROWSER) {
	  /* in speedy mode we can keep a lot more rules in a sheet before a slowdown can be expected */
	  MAX_SIZE = DISABLE_SPEEDY ? 40 : 1000;
	} else {
	  /* for servers we do not need to shard at all */
	  MAX_SIZE = -1;
	}

	var sheetRunningId = 0;
	var master = void 0;

	var StyleSheet = function () {
	  /* a map from ids to tags */
	  /* deferred rules for a given id */
	  /* this is used for not reinjecting rules via hasNameForId() */
	  /* when rules for an id are removed using remove() we have to ignore rehydratedNames for it */
	  /* a list of tags belonging to this StyleSheet */
	  /* a tag for import rules */
	  /* current capacity until a new tag must be created */
	  /* children (aka clones) of this StyleSheet inheriting all and future injections */

	  function StyleSheet() {
	    var _this = this;

	    var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : IS_BROWSER ? document.head : null;
	    var forceServer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	    classCallCheck(this, StyleSheet);

	    this.getImportRuleTag = function () {
	      var importRuleTag = _this.importRuleTag;

	      if (importRuleTag !== undefined) {
	        return importRuleTag;
	      }

	      var firstTag = _this.tags[0];
	      var insertBefore = true;

	      return _this.importRuleTag = makeTag(_this.target, firstTag ? firstTag.styleTag : null, _this.forceServer, insertBefore);
	    };

	    sheetRunningId += 1;
	    this.id = sheetRunningId;
	    this.sealed = false;
	    this.forceServer = forceServer;
	    this.target = forceServer ? null : target;
	    this.tagMap = {};
	    this.deferred = {};
	    this.rehydratedNames = {};
	    this.ignoreRehydratedNames = {};
	    this.tags = [];
	    this.capacity = 1;
	    this.clones = [];
	  }

	  /* rehydrate all SSR'd style tags */


	  StyleSheet.prototype.rehydrate = function rehydrate() {
	    if (!IS_BROWSER || this.forceServer) {
	      return this;
	    }

	    var els = [];
	    var extracted = [];
	    var isStreamed = false;

	    /* retrieve all of our SSR style elements from the DOM */
	    var nodes = document.querySelectorAll('style[' + SC_ATTR + ']');
	    var nodesSize = nodes.length;

	    /* abort rehydration if no previous style tags were found */
	    if (nodesSize === 0) {
	      return this;
	    }

	    for (var i = 0; i < nodesSize; i += 1) {
	      // $FlowFixMe: We can trust that all elements in this query are style elements
	      var el = nodes[i];

	      /* check if style tag is a streamed tag */
	      if (!isStreamed) isStreamed = !!el.getAttribute(SC_STREAM_ATTR);

	      /* retrieve all component names */
	      var elNames = (el.getAttribute(SC_ATTR) || '').trim().split(SPLIT_REGEX);
	      var elNamesSize = elNames.length;
	      for (var j = 0; j < elNamesSize; j += 1) {
	        var name = elNames[j];
	        /* add rehydrated name to sheet to avoid readding styles */
	        this.rehydratedNames[name] = true;
	      }

	      /* extract all components and their CSS */
	      extracted.push.apply(extracted, extractComps(el.textContent));

	      /* store original HTMLStyleElement */
	      els.push(el);
	    }

	    /* abort rehydration if nothing was extracted */
	    var extractedSize = extracted.length;
	    if (extractedSize === 0) {
	      return this;
	    }

	    /* create a tag to be used for rehydration */
	    var tag = this.makeTag(null);
	    var rehydrationTag = makeRehydrationTag(tag, els, extracted, isStreamed);

	    /* reset capacity and adjust MAX_SIZE by the initial size of the rehydration */
	    this.capacity = Math.max(1, MAX_SIZE - extractedSize);
	    this.tags.push(rehydrationTag);

	    /* retrieve all component ids */
	    for (var _j = 0; _j < extractedSize; _j += 1) {
	      this.tagMap[extracted[_j].componentId] = rehydrationTag;
	    }

	    return this;
	  };

	  /* retrieve a "master" instance of StyleSheet which is typically used when no other is available
	   * The master StyleSheet is targeted by injectGlobal, keyframes, and components outside of any
	    * StyleSheetManager's context */


	  /* reset the internal "master" instance */
	  StyleSheet.reset = function reset() {
	    var forceServer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	    master = new StyleSheet(undefined, forceServer).rehydrate();
	  };

	  /* adds "children" to the StyleSheet that inherit all of the parents' rules
	   * while their own rules do not affect the parent */


	  StyleSheet.prototype.clone = function clone() {
	    var sheet = new StyleSheet(this.target, this.forceServer);
	    /* add to clone array */
	    this.clones.push(sheet);

	    /* clone all tags */
	    sheet.tags = this.tags.map(function (tag) {
	      var ids = tag.getIds();
	      var newTag = tag.clone();

	      /* reconstruct tagMap */
	      for (var i = 0; i < ids.length; i += 1) {
	        sheet.tagMap[ids[i]] = newTag;
	      }

	      return newTag;
	    });

	    /* clone other maps */
	    sheet.rehydratedNames = _extends({}, this.rehydratedNames);
	    sheet.deferred = _extends({}, this.deferred);

	    return sheet;
	  };

	  /* force StyleSheet to create a new tag on the next injection */


	  StyleSheet.prototype.sealAllTags = function sealAllTags() {
	    this.capacity = 1;
	    this.sealed = true;
	  };

	  StyleSheet.prototype.makeTag = function makeTag$$1(tag) {
	    var lastEl = tag ? tag.styleTag : null;
	    var insertBefore = false;

	    return makeTag(this.target, lastEl, this.forceServer, insertBefore, this.getImportRuleTag);
	  };

	  /* get a tag for a given componentId, assign the componentId to one, or shard */
	  StyleSheet.prototype.getTagForId = function getTagForId(id) {
	    /* simply return a tag, when the componentId was already assigned one */
	    var prev = this.tagMap[id];
	    if (prev !== undefined && !this.sealed) {
	      return prev;
	    }

	    var tag = this.tags[this.tags.length - 1];

	    /* shard (create a new tag) if the tag is exhausted (See MAX_SIZE) */
	    this.capacity -= 1;
	    if (this.capacity === 0) {
	      this.capacity = MAX_SIZE;
	      this.sealed = false;
	      tag = this.makeTag(tag);
	      this.tags.push(tag);
	    }

	    return this.tagMap[id] = tag;
	  };

	  /* mainly for injectGlobal to check for its id */


	  StyleSheet.prototype.hasId = function hasId(id) {
	    return this.tagMap[id] !== undefined;
	  };

	  /* caching layer checking id+name to already have a corresponding tag and injected rules */


	  StyleSheet.prototype.hasNameForId = function hasNameForId(id, name) {
	    /* exception for rehydrated names which are checked separately */
	    if (this.ignoreRehydratedNames[id] === undefined && this.rehydratedNames[name]) {
	      return true;
	    }

	    var tag = this.tagMap[id];
	    return tag !== undefined && tag.hasNameForId(id, name);
	  };

	  /* registers a componentId and registers it on its tag */


	  StyleSheet.prototype.deferredInject = function deferredInject(id, cssRules) {
	    /* don't inject when the id is already registered */
	    if (this.tagMap[id] !== undefined) return;

	    var clones = this.clones;

	    for (var i = 0; i < clones.length; i += 1) {
	      clones[i].deferredInject(id, cssRules);
	    }

	    this.getTagForId(id).insertMarker(id);
	    this.deferred[id] = cssRules;
	  };

	  /* injects rules for a given id with a name that will need to be cached */


	  StyleSheet.prototype.inject = function inject(id, cssRules, name) {
	    var clones = this.clones;

	    for (var i = 0; i < clones.length; i += 1) {
	      clones[i].inject(id, cssRules, name);
	    }

	    var tag = this.getTagForId(id);

	    /* add deferred rules for component */
	    if (this.deferred[id] !== undefined) {
	      // Combine passed cssRules with previously deferred CSS rules
	      // NOTE: We cannot mutate the deferred array itself as all clones
	      // do the same (see clones[i].inject)
	      var rules = this.deferred[id].concat(cssRules);
	      tag.insertRules(id, rules, name);
	      this.deferred[id] = undefined;
	    } else {
	      tag.insertRules(id, cssRules, name);
	    }
	  };

	  /* removes all rules for a given id, which doesn't remove its marker but resets it */


	  StyleSheet.prototype.remove = function remove(id) {
	    var tag = this.tagMap[id];
	    if (tag === undefined) return;

	    var clones = this.clones;

	    for (var i = 0; i < clones.length; i += 1) {
	      clones[i].remove(id);
	    }

	    /* remove all rules from the tag */
	    tag.removeRules(id);
	    /* ignore possible rehydrated names */
	    this.ignoreRehydratedNames[id] = true;
	    /* delete possible deferred rules */
	    this.deferred[id] = undefined;
	  };

	  StyleSheet.prototype.toHTML = function toHTML() {
	    return this.tags.map(function (tag) {
	      return tag.toHTML();
	    }).join('');
	  };

	  StyleSheet.prototype.toReactElements = function toReactElements() {
	    var id = this.id;


	    return this.tags.map(function (tag, i) {
	      var key = 'sc-' + id + '-' + i;
	      return React.cloneElement(tag.toElement(), { key: key });
	    });
	  };

	  createClass(StyleSheet, null, [{
	    key: 'master',
	    get: function get$$1() {
	      return master || (master = new StyleSheet().rehydrate());
	    }

	    /* NOTE: This is just for backwards-compatibility with jest-styled-components */

	  }, {
	    key: 'instance',
	    get: function get$$1() {
	      return StyleSheet.master;
	    }
	  }]);
	  return StyleSheet;
	}();

	var _StyleSheetManager$ch;

	var StyleSheetManager = function (_Component) {
	  inherits(StyleSheetManager, _Component);

	  function StyleSheetManager() {
	    classCallCheck(this, StyleSheetManager);
	    return possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  StyleSheetManager.prototype.getChildContext = function getChildContext() {
	    var _ref;

	    return _ref = {}, _ref[CONTEXT_KEY] = this.sheetInstance, _ref;
	  };

	  StyleSheetManager.prototype.componentWillMount = function componentWillMount() {
	    if (this.props.sheet) {
	      this.sheetInstance = this.props.sheet;
	    } else if (this.props.target) {
	      this.sheetInstance = new StyleSheet(this.props.target);
	    } else {
	      throw new StyledComponentsError(4);
	    }
	  };

	  StyleSheetManager.prototype.render = function render() {
	    /* eslint-disable react/prop-types */
	    // Flow v0.43.1 will report an error accessing the `children` property,
	    // but v0.47.0 will not. It is necessary to use a type cast instead of
	    // a "fixme" comment to satisfy both Flow versions.
	    return React__default.Children.only(this.props.children);
	  };

	  return StyleSheetManager;
	}(React.Component);

	StyleSheetManager.childContextTypes = (_StyleSheetManager$ch = {}, _StyleSheetManager$ch[CONTEXT_KEY] = PropTypes.oneOfType([PropTypes.instanceOf(StyleSheet), PropTypes.instanceOf(ServerStyleSheet)]).isRequired, _StyleSheetManager$ch);
	process.env.NODE_ENV !== "production" ? StyleSheetManager.propTypes = {
	  sheet: PropTypes.oneOfType([PropTypes.instanceOf(StyleSheet), PropTypes.instanceOf(ServerStyleSheet)]),
	  target: PropTypes.shape({
	    appendChild: PropTypes.func.isRequired
	  })
	} : void 0;

	// 

	var ServerStyleSheet = function () {
	  function ServerStyleSheet() {
	    classCallCheck(this, ServerStyleSheet);

	    /* The master sheet might be reset, so keep a reference here */
	    this.masterSheet = StyleSheet.master;
	    this.instance = this.masterSheet.clone();
	    this.closed = false;
	  }

	  ServerStyleSheet.prototype.complete = function complete() {
	    if (!this.closed) {
	      /* Remove closed StyleSheets from the master sheet */
	      var index = this.masterSheet.clones.indexOf(this.instance);
	      this.masterSheet.clones.splice(index, 1);
	      this.closed = true;
	    }
	  };

	  ServerStyleSheet.prototype.collectStyles = function collectStyles(children) {
	    if (this.closed) {
	      throw new StyledComponentsError(2);
	    }

	    return React__default.createElement(
	      StyleSheetManager,
	      { sheet: this.instance },
	      children
	    );
	  };

	  ServerStyleSheet.prototype.getStyleTags = function getStyleTags() {
	    this.complete();
	    return this.instance.toHTML();
	  };

	  ServerStyleSheet.prototype.getStyleElement = function getStyleElement() {
	    this.complete();
	    return this.instance.toReactElements();
	  };

	  ServerStyleSheet.prototype.interleaveWithNodeStream = function interleaveWithNodeStream(readableStream) {
	    var _this = this;

	    {
	      throw new StyledComponentsError(3);
	    }

	    /* the tag index keeps track of which tags have already been emitted */
	    var instance = this.instance;

	    var instanceTagIndex = 0;

	    var streamAttr = SC_STREAM_ATTR + '="true"';

	    var transformer = new stream.Transform({
	      transform: function appendStyleChunks(chunk, /* encoding */_, callback) {
	        var tags = instance.tags;

	        var html = '';

	        /* retrieve html for each new style tag */
	        for (; instanceTagIndex < tags.length; instanceTagIndex += 1) {
	          var tag = tags[instanceTagIndex];
	          html += tag.toHTML(streamAttr);
	        }

	        /* force our StyleSheets to emit entirely new tags */
	        instance.sealAllTags();

	        /* prepend style html to chunk */
	        this.push(html + chunk);
	        callback();
	      }
	    });

	    readableStream.on('end', function () {
	      return _this.complete();
	    });
	    readableStream.on('error', function (err) {
	      _this.complete();

	      // forward the error to the transform stream
	      transformer.emit('error', err);
	    });

	    return readableStream.pipe(transformer);
	  };

	  return ServerStyleSheet;
	}();

	// 

	var LIMIT = 200;

	var createWarnTooManyClasses = (function (displayName) {
	  var generatedClasses = {};
	  var warningSeen = false;

	  return function (className) {
	    if (!warningSeen) {
	      generatedClasses[className] = true;
	      if (Object.keys(generatedClasses).length >= LIMIT) {
	        // Unable to find latestRule in test environment.
	        /* eslint-disable no-console, prefer-template */
	        console.warn('Over ' + LIMIT + ' classes were generated for component ' + displayName + '. \n' + 'Consider using the attrs method, together with a style object for frequently changed styles.\n' + 'Example:\n' + '  const Component = styled.div.attrs({\n' + '    style: ({ background }) => ({\n' + '      background,\n' + '    }),\n' + '  })`width: 100%;`\n\n' + '  <Component />');
	        warningSeen = true;
	        generatedClasses = {};
	      }
	    }
	  };
	});

	// 

	var determineTheme = (function (props, fallbackTheme, defaultProps) {
	  // Props should take precedence over ThemeProvider, which should take precedence over
	  // defaultProps, but React automatically puts defaultProps on props.

	  /* eslint-disable react/prop-types */
	  var isDefaultTheme = defaultProps && props.theme === defaultProps.theme;
	  var theme = props.theme && !isDefaultTheme ? props.theme : fallbackTheme;
	  /* eslint-enable */

	  return theme;
	});

	// 
	var escapeRegex = /[[\].#*$><+~=|^:(),"'`-]+/g;
	var dashesAtEnds = /(^-|-$)/g;

	/**
	 * TODO: Explore using CSS.escape when it becomes more available
	 * in evergreen browsers.
	 */
	function escape(str) {
	  return str
	  // Replace all possible CSS selectors
	  .replace(escapeRegex, '-')

	  // Remove extraneous hyphens at the start and end
	  .replace(dashesAtEnds, '');
	}

	// 

	function getComponentName(target) {
	  return target.displayName || target.name || 'Component';
	}

	// 

	function isTag(target) /* : %checks */{
	  return typeof target === 'string';
	}

	// 

	function generateDisplayName(target) {
	  return isTag(target) ? 'styled.' + target : 'Styled(' + getComponentName(target) + ')';
	}

	// 
	/* eslint-disable max-len */
	/**
	 * Trying to avoid the unknown-prop errors on styled components by filtering by
	 * React's attribute whitelist.
	 *
	 * To regenerate this regex:
	 *
	 * 1. `npm i -g regexgen` (https://github.com/devongovett/regexgen)
	 * 2. Run `regexgen` with the list of space-separated words below as input
	 * 3. Surround the emitted regex with this: `/^(GENERATED_REGEX)$/` -- this will ensure a full string match
	 *    and no false positives from partials
	 * */
	/*
	children dangerouslySetInnerHTML key ref autoFocus defaultValue valueLink defaultChecked checkedLink innerHTML suppressContentEditableWarning onFocusIn onFocusOut className onCopy onCut onPaste onCompositionEnd onCompositionStart onCompositionUpdate onKeyDown onKeyPress onKeyUp onFocus onBlur onChange onInput onInvalid onSubmit onReset onClick onContextMenu onDoubleClick onDrag onDragEnd onDragEnter onDragExit onDragLeave onDragOver onDragStart onDrop onMouseDown onMouseEnter onMouseLeave onMouseMove onMouseOut onMouseOver onMouseUp onSelect onTouchCancel onTouchEnd onTouchMove onTouchStart onScroll onWheel onAbort onCanPlay onCanPlayThrough onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting onLoad onAnimationStart onAnimationEnd onAnimationIteration onTransitionEnd onCopyCapture onCutCapture onPasteCapture onCompositionEndCapture onCompositionStartCapture onCompositionUpdateCapture onKeyDownCapture onKeyPressCapture onKeyUpCapture onFocusCapture onBlurCapture onChangeCapture onInputCapture onSubmitCapture onResetCapture onClickCapture onContextMenuCapture onDoubleClickCapture onDragCapture onDragEndCapture onDragEnterCapture onDragExitCapture onDragLeaveCapture onDragOverCapture onDragStartCapture onDropCapture onMouseDownCapture onMouseEnterCapture onMouseLeaveCapture onMouseMoveCapture onMouseOutCapture onMouseOverCapture onMouseUpCapture onSelectCapture onTouchCancelCapture onTouchEndCapture onTouchMoveCapture onTouchStartCapture onScrollCapture onWheelCapture onAbortCapture onCanPlayCapture onCanPlayThroughCapture onDurationChangeCapture onEmptiedCapture onEncryptedCapture onEndedCapture onErrorCapture onLoadedDataCapture onLoadedMetadataCapture onLoadStartCapture onPauseCapture onPlayCapture onPlayingCapture onProgressCapture onRateChangeCapture onSeekedCapture onSeekingCapture onStalledCapture onSuspendCapture onTimeUpdateCapture onVolumeChangeCapture onWaitingCapture onLoadCapture onAnimationStartCapture onAnimationEndCapture onAnimationIterationCapture onTransitionEndCapture accept acceptCharset accessKey action allowFullScreen allowTransparency alt as async autoComplete autoPlay capture cellPadding cellSpacing charSet challenge checked cite classID className cols colSpan content contentEditable contextMenu controlsList controls coords crossOrigin data dateTime default defer dir disabled download draggable encType form formAction formEncType formMethod formNoValidate formTarget frameBorder headers height hidden high href hrefLang htmlFor httpEquiv icon id inputMode integrity is keyParams keyType kind label lang list loop low manifest marginHeight marginWidth max maxLength media mediaGroup method min minLength multiple muted name nonce noValidate open optimum pattern placeholder playsInline poster preload profile radioGroup readOnly referrerPolicy rel required reversed role rows rowSpan sandbox scope scoped scrolling seamless selected shape size sizes span spellCheck src srcDoc srcLang srcSet start step style summary tabIndex target title type useMap value width wmode wrap about datatype inlist prefix property resource typeof vocab autoCapitalize autoCorrect autoSave color itemProp itemScope itemType itemID itemRef results security unselectable accentHeight accumulate additive alignmentBaseline allowReorder alphabetic amplitude arabicForm ascent attributeName attributeType autoReverse azimuth baseFrequency baseProfile baselineShift bbox begin bias by calcMode capHeight clip clipPath clipRule clipPathUnits colorInterpolation colorInterpolationFilters colorProfile colorRendering contentScriptType contentStyleType cursor cx cy d decelerate descent diffuseConstant direction display divisor dominantBaseline dur dx dy edgeMode elevation enableBackground end exponent externalResourcesRequired fill fillOpacity fillRule filter filterRes filterUnits floodColor floodOpacity focusable fontFamily fontSize fontSizeAdjust fontStretch fontStyle fontVariant fontWeight format from fx fy g1 g2 glyphName glyphOrientationHorizontal glyphOrientationVertical glyphRef gradientTransform gradientUnits hanging horizAdvX horizOriginX ideographic imageRendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lengthAdjust letterSpacing lightingColor limitingConeAngle local markerEnd markerMid markerStart markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical mode numOctaves offset opacity operator order orient orientation origin overflow overlinePosition overlineThickness paintOrder panose1 pathLength patternContentUnits patternTransform patternUnits pointerEvents points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY renderingIntent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shapeRendering slope spacing specularConstant specularExponent speed spreadMethod startOffset stdDeviation stemh stemv stitchTiles stopColor stopOpacity strikethroughPosition strikethroughThickness string stroke strokeDasharray strokeDashoffset strokeLinecap strokeLinejoin strokeMiterlimit strokeOpacity strokeWidth surfaceScale systemLanguage tableValues targetX targetY textAnchor textDecoration textRendering textLength to transform u1 u2 underlinePosition underlineThickness unicode unicodeBidi unicodeRange unitsPerEm vAlphabetic vHanging vIdeographic vMathematical values vectorEffect version vertAdvY vertOriginX vertOriginY viewBox viewTarget visibility widths wordSpacing writingMode x xHeight x1 x2 xChannelSelector xlinkActuate xlinkArcrole xlinkHref xlinkRole xlinkShow xlinkTitle xlinkType xmlBase xmlns xmlnsXlink xmlLang xmlSpace y y1 y2 yChannelSelector z zoomAndPan onPointerDown onPointerMove onPointerUp onPointerCancel onGotPointerCapture onLostPointerCapture onPointerEnter onPointerLeave onPointerOver onPointerOut class for autofocus
	*/
	/* eslint-enable max-len */

	var ATTRIBUTE_REGEX = /^((?:s(?:uppressContentEditableWarn|croll|pac)|(?:shape|image|text)Render|(?:letter|word)Spac|vHang|hang)ing|(?:on(?:AnimationIteration|C(?:o(?:mposition(?:Update|Start|End)|ntextMenu|py)|anPlayThrough|anPlay|hange|lick|ut)|(?:Animation|Touch|Load|Drag)Start|(?:(?:Duration|Volume|Rate)Chang|(?:MouseLea|(?:Touch|Mouse)Mo|DragLea)v|Paus)e|Loaded(?:Metad|D)ata|(?:(?:T(?:ransition|ouch)|Animation)E|Suspe)nd|DoubleClick|(?:TouchCanc|Whe)el|Lo(?:stPointer|ad)|TimeUpdate|(?:Mouse(?:Ent|Ov)e|Drag(?:Ent|Ov)e|Erro)r|GotPointer|MouseDown|(?:E(?:n(?:crypt|d)|mpti)|S(?:tall|eek))ed|KeyPress|(?:MouseOu|DragExi|S(?:elec|ubmi)|Rese|Inpu)t|P(?:rogress|laying)|DragEnd|Key(?:Down|Up)|(?:MouseU|Dro)p|(?:Wait|Seek)ing|Scroll|Focus|Paste|Abort|Drag|Play|Blur)Captur|alignmentBaselin|(?:limitingConeAng|xlink(?:(?:Arcr|R)o|Tit)|s(?:urfaceSca|ty|ca)|unselectab|baseProfi|fontSty|(?:focus|dragg)ab|multip|profi|tit)l|d(?:ominantBaselin|efaultValu)|onPointerLeav|a(?:uto(?:Capitaliz|Revers|Sav)|dditiv)|(?:(?:formNoValid|xlinkActu|noValid|accumul|rot)a|autoComple|decelera)t|(?:(?:attribute|item)T|datat)yp|onPointerMov|(?:attribute|glyph)Nam|playsInlin|(?:writing|input|edge)Mod|(?:formE|e)ncTyp|(?:amplitu|mo)d|(?:xlinkTy|itemSco|keyTy|slo)p|(?:xmlSpa|non)c|fillRul|(?:dateTi|na)m|r(?:esourc|ol)|xmlBas|wmod)e|(?:glyphOrientationHorizont|loc)al|(?:externalResourcesRequir|select|revers|mut)ed|c(?:o(?:lorInterpolationFilter|ord)s|o(?:lor(?:Interpolation)?|nt(?:rols|ent))|(?:ontentS(?:cript|tyle)Typ|o(?:ntentEditab|lorProfi)l|l(?:assNam|ipRul)|a(?:lcMod|ptur)|it)e|olorRendering|l(?:ipPathUnits|assID)|(?:ontrolsLis|apHeigh)t|h(?:eckedLink|a(?:llenge|rSet)|ildren|ecked)|ell(?:Spac|Padd)ing|o(?:ntextMenu|ls)|(?:rossOrigi|olSpa)n|l(?:ip(?:Path)?|ass)|ursor|[xy])|glyphOrientationVertical|d(?:angerouslySetInnerHTML|efaultChecked|ownload|isabled|isplay|[xy])|(?:s(?:trikethroughThickn|eaml)es|(?:und|ov)erlineThicknes|r(?:equiredExtension|adiu)|(?:requiredFeatur|tableValu|stitchTil|numOctav|filterR)e|key(?:(?:Splin|Tim)e|Param)|auto[Ff]ocu|header|bia)s|(?:(?:st(?:rikethroughPosi|dDevia)|(?:und|ov)erlinePosi|(?:textDecor|elev)a|orienta)tio|(?:strokeLinejo|orig)i|on(?:PointerDow|FocusI)|formActio|zoomAndPa|directio|(?:vers|act)io|rowSpa|begi|ico)n|o(?:n(?:AnimationIteration|C(?:o(?:mposition(?:Update|Start|End)|ntextMenu|py)|anPlayThrough|anPlay|hange|lick|ut)|(?:(?:Duration|Volume|Rate)Chang|(?:MouseLea|(?:Touch|Mouse)Mo|DragLea)v|Paus)e|Loaded(?:Metad|D)ata|(?:Animation|Touch|Load|Drag)Start|(?:(?:T(?:ransition|ouch)|Animation)E|Suspe)nd|DoubleClick|(?:TouchCanc|Whe)el|(?:Mouse(?:Ent|Ov)e|Drag(?:Ent|Ov)e|Erro)r|TimeUpdate|(?:E(?:n(?:crypt|d)|mpti)|S(?:tall|eek))ed|MouseDown|P(?:rogress|laying)|(?:MouseOu|DragExi|S(?:elec|ubmi)|Rese|Inpu)t|KeyPress|DragEnd|Key(?:Down|Up)|(?:Wait|Seek)ing|(?:MouseU|Dro)p|Scroll|Paste|Focus|Abort|Drag|Play|Load|Blur)|rient)|p(?:reserveA(?:spectRatio|lpha)|ointsAt[X-Z]|anose1)|(?:patternContent|ma(?:sk(?:Content)?|rker)|primitive|gradient|pattern|filter)Units|(?:(?:allowTranspar|baseFrequ)enc|re(?:ferrerPolic|adOnl)|(?:(?:st(?:roke|op)O|floodO|fillO|o)pac|integr|secur)it|visibilit|fontFamil|accessKe|propert|summar)y|(?:gradientT|patternT|t)ransform|(?:[xy]ChannelSelect|lightingCol|textAnch|floodCol|stopCol|operat|htmlF)or|(?:strokeMiterlimi|(?:specularConsta|repeatCou|fontVaria)n|(?:(?:specularE|e)xpon|renderingInt|asc)en|d(?:iffuseConsta|esce)n|(?:fontSizeAdju|lengthAdju|manife)s|baselineShif|onPointerOu|vectorEffec|(?:(?:mar(?:ker|gin)|x)H|accentH|fontW)eigh|markerStar|a(?:utoCorrec|bou)|onFocusOu|intercep|restar|forma|inlis|heigh|lis)t|(?:(?:st(?:rokeDasho|artO)|o)ffs|acceptChars|formTarg|viewTarg|srcS)et|k(?:ernel(?:UnitLength|Matrix)|[1-4])|(?:(?:enableBackgrou|markerE)n|s(?:p(?:readMetho|ee)|ee)|formMetho|(?:markerM|onInval)i|preloa|metho|kin)d|strokeDasharray|(?:onPointerCanc|lab)el|(?:allowFullScre|hidd)en|systemLanguage|(?:(?:o(?:nPointer(?:Ent|Ov)|rd)|allowReord|placehold|frameBord|paintOrd|post)e|repeatDu|d(?:efe|u))r|v(?:Mathematical|ert(?:Origin[XY]|AdvY)|alues|ocab)|(?:pointerEve|keyPoi)nts|(?:strokeLineca|onPointerU|itemPro|useMa|wra|loo)p|h(?:oriz(?:Origin|Adv)X|ttpEquiv)|(?:vI|i)deographic|unicodeRange|mathematical|vAlphabetic|u(?:nicodeBidi|[12])|(?:fontStretc|hig)h|(?:(?:mar(?:ker|gin)W|strokeW)id|azimu)th|(?:xmlnsXl|valueL)ink|mediaGroup|spellCheck|(?:text|m(?:in|ax))Length|(?:unitsPerE|optimu|fro)m|r(?:adioGroup|e(?:sults|f[XY]|l)|ows|[xy])|a(?:rabicForm|l(?:phabetic|t)|sync)|pathLength|innerHTML|xlinkShow|(?:xlinkHr|glyphR)ef|(?:tabInde|(?:sand|b)bo|viewBo)x|(?:(?:href|xml|src)La|kerni)ng|autoPlay|o(?:verflow|pen)|f(?:o(?:ntSize|rm?)|il(?:ter|l))|r(?:e(?:quired|sult|f))?|divisor|p(?:attern|oints)|unicode|d(?:efault|ata|ir)?|i(?:temRef|n2|s)|t(?:arget[XY]|o)|srcDoc|s(?:coped|te(?:m[hv]|p)|pan)|(?:width|size)s|prefix|typeof|itemID|s(?:t(?:roke|art)|hape|cope|rc)|t(?:arget|ype)|(?:stri|la)ng|a(?:ccept|s)|m(?:edia|a(?:sk|x)|in)|x(?:mlns)?|width|value|size|href|k(?:ey)?|end|low|by|i[dn]|y[12]|g[12]|x[12]|f[xy]|[yz])$/;

	/* From DOMProperty */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';
	var isCustomAttribute = RegExp.prototype.test.bind(new RegExp('^(x|data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'));

	var validAttr = (function (name) {
	  return ATTRIBUTE_REGEX.test(name) || isCustomAttribute(name.toLowerCase());
	});

	// 

	function hasInInheritanceChain(child, parent) {
	  var target = child;

	  while (target) {
	    target = Object.getPrototypeOf(target);

	    if (target && target === parent) {
	      return true;
	    }
	  }

	  return false;
	}

	// 
	/**
	 * Creates a broadcast that can be listened to, i.e. simple event emitter
	 *
	 * @see https://github.com/ReactTraining/react-broadcast
	 */

	var createBroadcast = function createBroadcast(initialState) {
	  var listeners = {};
	  var id = 0;
	  var state = initialState;

	  function publish(nextState) {
	    state = nextState;

	    // eslint-disable-next-line guard-for-in, no-restricted-syntax
	    for (var key in listeners) {
	      var listener = listeners[key];
	      if (listener === undefined) {
	        // eslint-disable-next-line no-continue
	        continue;
	      }

	      listener(state);
	    }
	  }

	  function subscribe(listener) {
	    var currentId = id;
	    listeners[currentId] = listener;
	    id += 1;
	    listener(state);
	    return currentId;
	  }

	  function unsubscribe(unsubID) {
	    listeners[unsubID] = undefined;
	  }

	  return { publish: publish, subscribe: subscribe, unsubscribe: unsubscribe };
	};

	var _contextShape, _ThemeProvider$contex;

	// NOTE: DO NOT CHANGE, changing this is a semver major change!
	var CHANNEL = '__styled-components__';
	var CHANNEL_NEXT = CHANNEL + 'next__';

	var CONTEXT_CHANNEL_SHAPE = PropTypes.shape({
	  getTheme: PropTypes.func,
	  subscribe: PropTypes.func,
	  unsubscribe: PropTypes.func
	});

	var contextShape = (_contextShape = {}, _contextShape[CHANNEL] = PropTypes.func, _contextShape[CHANNEL_NEXT] = CONTEXT_CHANNEL_SHAPE, _contextShape);

	var warnChannelDeprecated = void 0;
	if (process.env.NODE_ENV !== 'production') {
	  warnChannelDeprecated = once(function () {
	    // eslint-disable-next-line no-console
	    console.warn('Warning: Usage of `context.' + CHANNEL + '` as a function is deprecated. It will be replaced with the object on `.context.' + CHANNEL_NEXT + '` in a future version.');
	  });
	}

	var isFunction = function isFunction(test) {
	  return typeof test === 'function';
	};

	/**
	 * Provide a theme to an entire react component tree via context and event listeners (have to do
	 * both context and event emitter as pure components block context updates)
	 */

	var ThemeProvider = function (_Component) {
	  inherits(ThemeProvider, _Component);

	  function ThemeProvider() {
	    classCallCheck(this, ThemeProvider);

	    var _this = possibleConstructorReturn(this, _Component.call(this));

	    _this.unsubscribeToOuterId = -1;

	    _this.getTheme = _this.getTheme.bind(_this);
	    return _this;
	  }

	  ThemeProvider.prototype.componentWillMount = function componentWillMount() {
	    var _this2 = this;

	    // If there is a ThemeProvider wrapper anywhere around this theme provider, merge this theme
	    // with the outer theme
	    var outerContext = this.context[CHANNEL_NEXT];
	    if (outerContext !== undefined) {
	      this.unsubscribeToOuterId = outerContext.subscribe(function (theme) {
	        _this2.outerTheme = theme;

	        if (_this2.broadcast !== undefined) {
	          _this2.publish(_this2.props.theme);
	        }
	      });
	    }

	    this.broadcast = createBroadcast(this.getTheme());
	  };

	  ThemeProvider.prototype.getChildContext = function getChildContext() {
	    var _this3 = this,
	        _babelHelpers$extends;

	    return _extends({}, this.context, (_babelHelpers$extends = {}, _babelHelpers$extends[CHANNEL_NEXT] = {
	      getTheme: this.getTheme,
	      subscribe: this.broadcast.subscribe,
	      unsubscribe: this.broadcast.unsubscribe
	    }, _babelHelpers$extends[CHANNEL] = function (subscriber) {
	      if (process.env.NODE_ENV !== 'production') {
	        warnChannelDeprecated();
	      }

	      // Patch the old `subscribe` provide via `CHANNEL` for older clients.
	      var unsubscribeId = _this3.broadcast.subscribe(subscriber);
	      return function () {
	        return _this3.broadcast.unsubscribe(unsubscribeId);
	      };
	    }, _babelHelpers$extends));
	  };

	  ThemeProvider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (this.props.theme !== nextProps.theme) {
	      this.publish(nextProps.theme);
	    }
	  };

	  ThemeProvider.prototype.componentWillUnmount = function componentWillUnmount() {
	    if (this.unsubscribeToOuterId !== -1) {
	      this.context[CHANNEL_NEXT].unsubscribe(this.unsubscribeToOuterId);
	    }
	  };

	  // Get the theme from the props, supporting both (outerTheme) => {} as well as object notation


	  ThemeProvider.prototype.getTheme = function getTheme(passedTheme) {
	    var theme = passedTheme || this.props.theme;

	    if (isFunction(theme)) {
	      var mergedTheme = theme(this.outerTheme);

	      if (process.env.NODE_ENV !== 'production' && (mergedTheme === null || Array.isArray(mergedTheme) || (typeof mergedTheme === 'undefined' ? 'undefined' : _typeof(mergedTheme)) !== 'object')) {
	        throw new StyledComponentsError(7);
	      }

	      return mergedTheme;
	    }

	    if (theme === null || Array.isArray(theme) || (typeof theme === 'undefined' ? 'undefined' : _typeof(theme)) !== 'object') {
	      throw new StyledComponentsError(8);
	    }

	    return _extends({}, this.outerTheme, theme);
	  };

	  ThemeProvider.prototype.publish = function publish(theme) {
	    this.broadcast.publish(this.getTheme(theme));
	  };

	  ThemeProvider.prototype.render = function render() {
	    if (!this.props.children) {
	      return null;
	    }

	    return React__default.Children.only(this.props.children);
	  };

	  return ThemeProvider;
	}(React.Component);

	ThemeProvider.childContextTypes = contextShape;
	ThemeProvider.contextTypes = (_ThemeProvider$contex = {}, _ThemeProvider$contex[CHANNEL_NEXT] = CONTEXT_CHANNEL_SHAPE, _ThemeProvider$contex);

	var _babelHelpers$extends;

	// HACK for generating all static styles without needing to allocate
	// an empty execution context every single time...
	var STATIC_EXECUTION_CONTEXT = {};

	var modifiedContextShape = _extends({}, contextShape, (_babelHelpers$extends = {}, _babelHelpers$extends[CONTEXT_KEY] = PropTypes.oneOfType([PropTypes.instanceOf(StyleSheet), PropTypes.instanceOf(ServerStyleSheet)]), _babelHelpers$extends));

	var identifiers = {};

	/* We depend on components having unique IDs */
	var generateId = function generateId(ComponentStyle, _displayName, parentComponentId) {
	  var displayName = typeof _displayName !== 'string' ? 'sc' : escape(_displayName);

	  /**
	   * This ensures uniqueness if two components happen to share
	   * the same displayName.
	   */
	  var nr = (identifiers[displayName] || 0) + 1;
	  identifiers[displayName] = nr;

	  var componentId = displayName + '-' + ComponentStyle.generateName(displayName + nr);

	  return parentComponentId !== undefined ? parentComponentId + '-' + componentId : componentId;
	};

	var warnExtendDeprecated = function warnExtendDeprecated() {};
	if (process.env.NODE_ENV !== 'production') {
	  warnExtendDeprecated = once(function () {
	    // eslint-disable-next-line no-console
	    console.warn('Warning: The "extend" API will be removed in the upcoming v4.0 release. Use styled(StyledComponent) instead. You can find more information here: https://github.com/styled-components/styled-components/issues/1546');
	  });
	}

	// $FlowFixMe

	var BaseStyledComponent = function (_Component) {
	  inherits(BaseStyledComponent, _Component);

	  function BaseStyledComponent() {
	    var _temp, _this, _ret;

	    classCallCheck(this, BaseStyledComponent);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.attrs = {}, _this.state = {
	      theme: null,
	      generatedClassName: ''
	    }, _this.unsubscribeId = -1, _temp), possibleConstructorReturn(_this, _ret);
	  }

	  BaseStyledComponent.prototype.unsubscribeFromContext = function unsubscribeFromContext() {
	    if (this.unsubscribeId !== -1) {
	      this.context[CHANNEL_NEXT].unsubscribe(this.unsubscribeId);
	    }
	  };

	  BaseStyledComponent.prototype.buildExecutionContext = function buildExecutionContext(theme, props) {
	    var attrs = this.constructor.attrs;

	    var context = _extends({}, props, { theme: theme });
	    if (attrs === undefined) {
	      return context;
	    }

	    this.attrs = Object.keys(attrs).reduce(function (acc, key) {
	      var attr = attrs[key];

	      // eslint-disable-next-line no-param-reassign
	      acc[key] = typeof attr === 'function' && !hasInInheritanceChain(attr, React.Component) ? attr(context) : attr;
	      return acc;
	    }, {});

	    return _extends({}, context, this.attrs);
	  };

	  BaseStyledComponent.prototype.generateAndInjectStyles = function generateAndInjectStyles(theme, props) {
	    var _constructor = this.constructor,
	        attrs = _constructor.attrs,
	        componentStyle = _constructor.componentStyle,
	        warnTooManyClasses = _constructor.warnTooManyClasses;

	    var styleSheet = this.context[CONTEXT_KEY] || StyleSheet.master;

	    // statically styled-components don't need to build an execution context object,
	    // and shouldn't be increasing the number of class names
	    if (componentStyle.isStatic && attrs === undefined) {
	      return componentStyle.generateAndInjectStyles(STATIC_EXECUTION_CONTEXT, styleSheet);
	    } else {
	      var executionContext = this.buildExecutionContext(theme, props);
	      var className = componentStyle.generateAndInjectStyles(executionContext, styleSheet);

	      if (process.env.NODE_ENV !== 'production' && warnTooManyClasses !== undefined) {
	        warnTooManyClasses(className);
	      }

	      return className;
	    }
	  };

	  BaseStyledComponent.prototype.componentWillMount = function componentWillMount() {
	    var _this2 = this;

	    var componentStyle = this.constructor.componentStyle;

	    var styledContext = this.context[CHANNEL_NEXT];

	    // If this is a statically-styled component, we don't need to the theme
	    // to generate or build styles.
	    if (componentStyle.isStatic) {
	      var generatedClassName = this.generateAndInjectStyles(STATIC_EXECUTION_CONTEXT, this.props);
	      this.setState({ generatedClassName: generatedClassName });
	      // If there is a theme in the context, subscribe to the event emitter. This
	      // is necessary due to pure components blocking context updates, this circumvents
	      // that by updating when an event is emitted
	    } else if (styledContext !== undefined) {
	      var subscribe = styledContext.subscribe;

	      this.unsubscribeId = subscribe(function (nextTheme) {
	        // This will be called once immediately
	        var theme = determineTheme(_this2.props, nextTheme, _this2.constructor.defaultProps);

	        var generatedClassName = _this2.generateAndInjectStyles(theme, _this2.props);

	        _this2.setState({ theme: theme, generatedClassName: generatedClassName });
	      });
	    } else {
	      // eslint-disable-next-line react/prop-types
	      var theme = this.props.theme || EMPTY_OBJECT;
	      var _generatedClassName = this.generateAndInjectStyles(theme, this.props);
	      this.setState({ theme: theme, generatedClassName: _generatedClassName });
	    }
	  };

	  BaseStyledComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var _this3 = this;

	    // If this is a statically-styled component, we don't need to listen to
	    // props changes to update styles
	    var componentStyle = this.constructor.componentStyle;

	    if (componentStyle.isStatic) {
	      return;
	    }

	    this.setState(function (prevState) {
	      var theme = determineTheme(nextProps, prevState.theme, _this3.constructor.defaultProps);
	      var generatedClassName = _this3.generateAndInjectStyles(theme, nextProps);

	      return { theme: theme, generatedClassName: generatedClassName };
	    });
	  };

	  BaseStyledComponent.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.unsubscribeFromContext();
	  };

	  BaseStyledComponent.prototype.render = function render() {
	    // eslint-disable-next-line react/prop-types
	    var innerRef = this.props.innerRef;
	    var generatedClassName = this.state.generatedClassName;
	    var _constructor2 = this.constructor,
	        styledComponentId = _constructor2.styledComponentId,
	        target = _constructor2.target;


	    var isTargetTag = isTag(target);

	    var className = [
	    // eslint-disable-next-line react/prop-types
	    this.props.className, styledComponentId, this.attrs.className, generatedClassName].filter(Boolean).join(' ');

	    var baseProps = _extends({}, this.attrs, {
	      className: className
	    });

	    if (isStyledComponent(target)) {
	      baseProps.innerRef = innerRef;
	    } else {
	      baseProps.ref = innerRef;
	    }

	    var propsForElement = baseProps;
	    var key = void 0;

	    for (key in this.props) {
	      // Don't pass through non HTML tags through to HTML elements
	      // always omit innerRef
	      if (key !== 'innerRef' && key !== 'className' && (!isTargetTag || validAttr(key))) {
	        propsForElement[key] = key === 'style' && key in this.attrs ? _extends({}, this.attrs[key], this.props[key]) : this.props[key];
	      }
	    }

	    return React.createElement(target, propsForElement);
	  };

	  return BaseStyledComponent;
	}(React.Component);

	var _StyledComponent = (function (ComponentStyle, constructWithOptions) {
	  var createStyledComponent = function createStyledComponent(target, options, rules) {
	    var _options$isClass = options.isClass,
	        isClass = _options$isClass === undefined ? !isTag(target) : _options$isClass,
	        _options$displayName = options.displayName,
	        displayName = _options$displayName === undefined ? generateDisplayName(target) : _options$displayName,
	        _options$componentId = options.componentId,
	        componentId = _options$componentId === undefined ? generateId(ComponentStyle, options.displayName, options.parentComponentId) : _options$componentId,
	        _options$ParentCompon = options.ParentComponent,
	        ParentComponent = _options$ParentCompon === undefined ? BaseStyledComponent : _options$ParentCompon,
	        extendingRules = options.rules,
	        attrs = options.attrs;


	    var styledComponentId = options.displayName && options.componentId ? escape(options.displayName) + '-' + options.componentId : options.componentId || componentId;

	    var componentStyle = new ComponentStyle(extendingRules === undefined ? rules : extendingRules.concat(rules), attrs, styledComponentId);

	    var StyledComponent = function (_ParentComponent) {
	      inherits(StyledComponent, _ParentComponent);

	      function StyledComponent() {
	        classCallCheck(this, StyledComponent);
	        return possibleConstructorReturn(this, _ParentComponent.apply(this, arguments));
	      }

	      StyledComponent.withComponent = function withComponent(tag) {
	        var previousComponentId = options.componentId,
	            optionsToCopy = objectWithoutProperties(options, ['componentId']);


	        var newComponentId = previousComponentId && previousComponentId + '-' + (isTag(tag) ? tag : escape(getComponentName(tag)));

	        var newOptions = _extends({}, optionsToCopy, {
	          componentId: newComponentId,
	          ParentComponent: StyledComponent
	        });

	        return createStyledComponent(tag, newOptions, rules);
	      };

	      createClass(StyledComponent, null, [{
	        key: 'extend',
	        get: function get$$1() {
	          var rulesFromOptions = options.rules,
	              parentComponentId = options.componentId,
	              optionsToCopy = objectWithoutProperties(options, ['rules', 'componentId']);


	          var newRules = rulesFromOptions === undefined ? rules : rulesFromOptions.concat(rules);

	          var newOptions = _extends({}, optionsToCopy, {
	            rules: newRules,
	            parentComponentId: parentComponentId,
	            ParentComponent: StyledComponent
	          });

	          warnExtendDeprecated();

	          return constructWithOptions(createStyledComponent, target, newOptions);
	        }
	      }]);
	      return StyledComponent;
	    }(ParentComponent);

	    StyledComponent.attrs = attrs;
	    StyledComponent.componentStyle = componentStyle;
	    StyledComponent.contextTypes = modifiedContextShape;
	    StyledComponent.displayName = displayName;
	    StyledComponent.styledComponentId = styledComponentId;
	    StyledComponent.target = target;


	    if (process.env.NODE_ENV !== 'production') {
	      StyledComponent.warnTooManyClasses = createWarnTooManyClasses(displayName);
	    }

	    if (isClass) {
	      hoistStatics(StyledComponent, target, {
	        // all SC-specific things should not be hoisted
	        attrs: true,
	        componentStyle: true,
	        displayName: true,
	        extend: true,
	        styledComponentId: true,
	        target: true,
	        warnTooManyClasses: true,
	        withComponent: true
	      });
	    }

	    return StyledComponent;
	  };

	  return createStyledComponent;
	});

	// Source: https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js
	function murmurhash(str) {
	  var l = str.length | 0,
	      h = l | 0,
	      i = 0,
	      k;

	  while (l >= 4) {
	    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;

	    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);
	    k ^= k >>> 24;
	    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);

	    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;

	    l -= 4;
	    ++i;
	  }

	  switch (l) {
	    case 3:
	      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;
	    case 2:
	      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;
	    case 1:
	      h ^= str.charCodeAt(i) & 0xff;
	      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);
	  }

	  h ^= h >>> 13;
	  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);
	  h ^= h >>> 15;

	  return h >>> 0;
	}

	// 

	var areStylesCacheable = IS_BROWSER;

	var isStaticRules = function isStaticRules(rules, attrs) {
	  for (var i = 0, len = rules.length; i < len; i += 1) {
	    var rule = rules[i];

	    // recursive case
	    if (Array.isArray(rule) && !isStaticRules(rule)) {
	      return false;
	    } else if (typeof rule === 'function' && !isStyledComponent(rule)) {
	      // functions are allowed to be static if they're just being
	      // used to get the classname of a nested styled component
	      return false;
	    }
	  }

	  if (attrs !== undefined) {
	    // eslint-disable-next-line guard-for-in, no-restricted-syntax
	    for (var key in attrs) {
	      if (typeof attrs[key] === 'function') {
	        return false;
	      }
	    }
	  }

	  return true;
	};

	var isHMREnabled = typeof module !== 'undefined' && module.hot && process.env.NODE_ENV !== 'production';

	/*
	 ComponentStyle is all the CSS-specific stuff, not
	 the React-specific stuff.
	 */
	var _ComponentStyle = (function (nameGenerator, flatten, stringifyRules) {
	  /* combines hashStr (murmurhash) and nameGenerator for convenience */
	  var generateRuleHash = function generateRuleHash(str) {
	    return nameGenerator(murmurhash(str));
	  };

	  var ComponentStyle = function () {
	    function ComponentStyle(rules, attrs, componentId) {
	      classCallCheck(this, ComponentStyle);

	      this.rules = rules;
	      this.isStatic = !isHMREnabled && isStaticRules(rules, attrs);
	      this.componentId = componentId;

	      if (!StyleSheet.master.hasId(componentId)) {
	        var placeholder = process.env.NODE_ENV !== 'production' ? ['.' + componentId + ' {}'] : [];

	        StyleSheet.master.deferredInject(componentId, placeholder);
	      }
	    }

	    /*
	     * Flattens a rule set into valid CSS
	     * Hashes it, wraps the whole chunk in a .hash1234 {}
	     * Returns the hash to be injected on render()
	     * */


	    ComponentStyle.prototype.generateAndInjectStyles = function generateAndInjectStyles(executionContext, styleSheet) {
	      var isStatic = this.isStatic,
	          componentId = this.componentId,
	          lastClassName = this.lastClassName;

	      if (areStylesCacheable && isStatic && lastClassName !== undefined && styleSheet.hasNameForId(componentId, lastClassName)) {
	        return lastClassName;
	      }

	      var flatCSS = flatten(this.rules, executionContext);
	      var name = generateRuleHash(this.componentId + flatCSS.join(''));

	      if (!styleSheet.hasNameForId(componentId, name)) {
	        styleSheet.inject(this.componentId, stringifyRules(flatCSS, '.' + name), name);
	      }

	      this.lastClassName = name;
	      return name;
	    };

	    ComponentStyle.generateName = function generateName(str) {
	      return generateRuleHash(str);
	    };

	    return ComponentStyle;
	  }();

	  return ComponentStyle;
	});

	// 
	// Thanks to ReactDOMFactories for this handy list!

	var domElements = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr',

	// SVG
	'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];

	// 

	var _styled = (function (styledComponent, constructWithOptions) {
	  var styled = function styled(tag) {
	    return constructWithOptions(styledComponent, tag);
	  };

	  // Shorthands for all valid HTML Elements
	  domElements.forEach(function (domElement) {
	    styled[domElement] = styled(domElement);
	  });

	  return styled;
	});

	// 

	var replaceWhitespace = function replaceWhitespace(str) {
	  return str.replace(/\s|\\n/g, '');
	};

	var _keyframes = (function (nameGenerator, stringifyRules, css) {
	  return function () {
	    var styleSheet = StyleSheet.master;
	    var rules = css.apply(undefined, arguments);
	    var name = nameGenerator(murmurhash(replaceWhitespace(JSON.stringify(rules))));
	    var id = 'sc-keyframes-' + name;

	    if (!styleSheet.hasNameForId(id, name)) {
	      styleSheet.inject(id, stringifyRules(rules, name, '@keyframes'), name);
	    }

	    return name;
	  };
	});

	// 

	var _injectGlobal = (function (stringifyRules, css) {
	  var injectGlobal = function injectGlobal() {
	    var styleSheet = StyleSheet.master;
	    var rules = css.apply(undefined, arguments);
	    var hash = murmurhash(JSON.stringify(rules));
	    var id = 'sc-global-' + hash;

	    if (!styleSheet.hasId(id)) {
	      styleSheet.inject(id, stringifyRules(rules));
	    }
	  };

	  return injectGlobal;
	});

	// 

	var _constructWithOptions = (function (css) {
	  var constructWithOptions = function constructWithOptions(componentConstructor, tag) {
	    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;

	    if (!reactIs.isValidElementType(tag)) {
	      throw new StyledComponentsError(1, String(tag));
	    }

	    /* This is callable directly as a template function */
	    // $FlowFixMe: Not typed to avoid destructuring arguments
	    var templateFunction = function templateFunction() {
	      return componentConstructor(tag, options, css.apply(undefined, arguments));
	    };

	    /* If config methods are called, wrap up a new template function and merge options */
	    templateFunction.withConfig = function (config) {
	      return constructWithOptions(componentConstructor, tag, _extends({}, options, config));
	    };
	    templateFunction.attrs = function (attrs) {
	      return constructWithOptions(componentConstructor, tag, _extends({}, options, {
	        attrs: _extends({}, options.attrs || EMPTY_OBJECT, attrs)
	      }));
	    };

	    return templateFunction;
	  };

	  return constructWithOptions;
	});

	// 

	var withTheme = (function (Component) {
	  var isStatelessFunctionalComponent = typeof Component === 'function' &&
	  // $FlowFixMe TODO: flow for prototype
	  !(Component.prototype && 'isReactComponent' in Component.prototype);

	  // NOTE: We can't pass a ref to a stateless functional component
	  var shouldSetInnerRef = isStyledComponent(Component) || isStatelessFunctionalComponent;

	  var WithTheme = function (_React$Component) {
	    inherits(WithTheme, _React$Component);

	    function WithTheme() {
	      var _temp, _this, _ret;

	      classCallCheck(this, WithTheme);

	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }

	      return _ret = (_temp = (_this = possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = EMPTY_OBJECT, _this.unsubscribeId = -1, _temp), possibleConstructorReturn(_this, _ret);
	    }

	    // NOTE: This is so that isStyledComponent passes for the innerRef unwrapping


	    WithTheme.prototype.componentWillMount = function componentWillMount() {
	      var _this2 = this;

	      var defaultProps = this.constructor.defaultProps;

	      var styledContext = this.context[CHANNEL_NEXT];
	      var themeProp = determineTheme(this.props, undefined, defaultProps);
	      if (styledContext === undefined && themeProp === undefined && process.env.NODE_ENV !== 'production') {
	        // eslint-disable-next-line no-console
	        console.warn('[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps');
	      } else if (styledContext === undefined && themeProp !== undefined) {
	        this.setState({ theme: themeProp });
	      } else {
	        var subscribe = styledContext.subscribe;

	        this.unsubscribeId = subscribe(function (nextTheme) {
	          var theme = determineTheme(_this2.props, nextTheme, defaultProps);
	          _this2.setState({ theme: theme });
	        });
	      }
	    };

	    WithTheme.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	      var defaultProps = this.constructor.defaultProps;

	      this.setState(function (oldState) {
	        var theme = determineTheme(nextProps, oldState.theme, defaultProps);

	        return { theme: theme };
	      });
	    };

	    WithTheme.prototype.componentWillUnmount = function componentWillUnmount() {
	      if (this.unsubscribeId !== -1) {
	        this.context[CHANNEL_NEXT].unsubscribe(this.unsubscribeId);
	      }
	    };

	    WithTheme.prototype.render = function render() {
	      var props = _extends({
	        theme: this.state.theme
	      }, this.props);

	      if (!shouldSetInnerRef) {
	        props.ref = props.innerRef;
	        delete props.innerRef;
	      }

	      return React__default.createElement(Component, props);
	    };

	    return WithTheme;
	  }(React__default.Component);

	  WithTheme.contextTypes = contextShape;
	  WithTheme.displayName = 'WithTheme(' + getComponentName(Component) + ')';
	  WithTheme.styledComponentId = 'withTheme';


	  return hoistStatics(WithTheme, Component);
	});

	// 

	/* eslint-disable */
	var __DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS = {
	  StyleSheet: StyleSheet
	};

	// 

	/* Warning if you've imported this file on React Native */
	if (process.env.NODE_ENV !== 'production' && typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
	  // eslint-disable-next-line no-console
	  console.warn("It looks like you've imported 'styled-components' on React Native.\n" + "Perhaps you're looking to import 'styled-components/native'?\n" + 'Read more about this at https://www.styled-components.com/docs/basics#react-native');
	}

	/* Warning if there are several instances of styled-components */
	if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test' && typeof window !== 'undefined' && typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Node.js') === -1 && navigator.userAgent.indexOf('jsdom') === -1) {
	  window['__styled-components-init__'] = window['__styled-components-init__'] || 0;

	  if (window['__styled-components-init__'] === 1) {
	    // eslint-disable-next-line no-console
	    console.warn("It looks like there are several instances of 'styled-components' initialized in this application. " + 'This may cause dynamic styles not rendering properly, errors happening during rehydration process ' + 'and makes your application bigger without a good reason.\n\n' + 'See https://s-c.sh/2BAXzed for more info.');
	  }

	  window['__styled-components-init__'] += 1;
	}

	/* Instantiate singletons */
	var ComponentStyle = _ComponentStyle(generateAlphabeticName, flatten, stringifyRules);
	var constructWithOptions = _constructWithOptions(css);
	var StyledComponent = _StyledComponent(ComponentStyle, constructWithOptions);

	/* Instantiate exported singletons */
	var keyframes = _keyframes(generateAlphabeticName, stringifyRules, css);
	var injectGlobal = _injectGlobal(stringifyRules, css);
	var styled = _styled(StyledComponent, constructWithOptions);

	exports.default = styled;
	exports.css = css;
	exports.keyframes = keyframes;
	exports.injectGlobal = injectGlobal;
	exports.isStyledComponent = isStyledComponent;
	exports.consolidateStreamedStyles = consolidateStreamedStyles;
	exports.ThemeProvider = ThemeProvider;
	exports.withTheme = withTheme;
	exports.ServerStyleSheet = ServerStyleSheet;
	exports.StyleSheetManager = StyleSheetManager;
	exports.__DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS = __DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS;
	//# sourceMappingURL=styled-components.browser.cjs.js.map

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(65)(module)))

/***/ },
/* 65 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/*
	 *          __        ___
	 *    _____/ /___  __/ (_)____
	 *   / ___/ __/ / / / / / ___/
	 *  (__  ) /_/ /_/ / / (__  )
	 * /____/\__/\__, /_/_/____/
	 *          /____/
	 *
	 * light - weight css preprocessor @licence MIT
	 */
	(function (factory) {/* eslint-disable */
		 true ? (module['exports'] = factory(null)) :
			typeof define === 'function' && define['amd'] ? define(factory(null)) :
				(window['stylis'] = factory(null))
	}(/** @param {*=} options */function factory (options) {/* eslint-disable */

		'use strict'

		/**
		 * Notes
		 *
		 * The ['<method name>'] pattern is used to support closure compiler
		 * the jsdoc signatures are also used to the same effect
		 *
		 * ----
		 *
		 * int + int + int === n4 [faster]
		 *
		 * vs
		 *
		 * int === n1 && int === n2 && int === n3
		 *
		 * ----
		 *
		 * switch (int) { case ints...} [faster]
		 *
		 * vs
		 *
		 * if (int == 1 && int === 2 ...)
		 *
		 * ----
		 *
		 * The (first*n1 + second*n2 + third*n3) format used in the property parser
		 * is a simple way to hash the sequence of characters
		 * taking into account the index they occur in
		 * since any number of 3 character sequences could produce duplicates.
		 *
		 * On the other hand sequences that are directly tied to the index of the character
		 * resolve a far more accurate measure, it's also faster
		 * to evaluate one condition in a switch statement
		 * than three in an if statement regardless of the added math.
		 *
		 * This allows the vendor prefixer to be both small and fast.
		 */

		var nullptn = /^\0+/g /* matches leading null characters */
		var formatptn = /[\0\r\f]/g /* matches new line, null and formfeed characters */
		var colonptn = /: */g /* splits animation rules */
		var cursorptn = /zoo|gra/ /* assert cursor varient */
		var transformptn = /([,: ])(transform)/g /* vendor prefix transform, older webkit */
		var animationptn = /,+\s*(?![^(]*[)])/g /* splits multiple shorthand notation animations */
		var propertiesptn = / +\s*(?![^(]*[)])/g /* animation properties */
		var elementptn = / *[\0] */g /* selector elements */
		var selectorptn = /,\r+?/g /* splits selectors */
		var andptn = /([\t\r\n ])*\f?&/g /* match & */
		var escapeptn = /:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g /* matches :global(.*) */
		var invalidptn = /\W+/g /* removes invalid characters from keyframes */
		var keyframeptn = /@(k\w+)\s*(\S*)\s*/ /* matches @keyframes $1 */
		var plcholdrptn = /::(place)/g /* match ::placeholder varient */
		var readonlyptn = /:(read-only)/g /* match :read-only varient */
		var beforeptn = /\s+(?=[{\];=:>])/g /* matches \s before ] ; = : */
		var afterptn = /([[}=:>])\s+/g /* matches \s after characters [ } = : */
		var tailptn = /(\{[^{]+?);(?=\})/g /* matches tail semi-colons ;} */
		var whiteptn = /\s{2,}/g /* matches repeating whitespace */
		var pseudoptn = /([^\(])(:+) */g /* pseudo element */
		var writingptn = /[svh]\w+-[tblr]{2}/ /* match writing mode property values */
		var gradientptn = /([\w-]+t\()/g /* match *gradient property */
		var supportsptn = /\(\s*(.*)\s*\)/g /* match supports (groups) */
		var propertyptn = /([\s\S]*?);/g /* match properties leading semicolon */
		var selfptn = /-self|flex-/g /* match flex- and -self in align-self: flex-*; */
		var pseudofmt = /[^]*?(:[rp][el]a[\w-]+)[^]*/ /* extrats :readonly or :placholder from selector */
		var trimptn = /[ \t]+$/ /* match tail whitspace */
		var dimensionptn = /stretch|:\s*\w+\-(?:conte|avail)/ /* match max/min/fit-content, fill-available */
		var imgsrcptn = /([^-])(image-set\()/

		/* vendors */
		var webkit = '-webkit-'
		var moz = '-moz-'
		var ms = '-ms-'

		/* character codes */
		var SEMICOLON = 59 /* ; */
		var CLOSEBRACES = 125 /* } */
		var OPENBRACES = 123 /* { */
		var OPENPARENTHESES = 40 /* ( */
		var CLOSEPARENTHESES = 41 /* ) */
		var OPENBRACKET = 91 /* [ */
		var CLOSEBRACKET = 93 /* ] */
		var NEWLINE = 10 /* \n */
		var CARRIAGE = 13 /* \r */
		var TAB = 9 /* \t */
		var AT = 64 /* @ */
		var SPACE = 32 /*   */
		var AND = 38 /* & */
		var DASH = 45 /* - */
		var UNDERSCORE = 95 /* _ */
		var STAR = 42 /* * */
		var COMMA = 44 /* , */
		var COLON = 58 /* : */
		var SINGLEQUOTE = 39 /* ' */
		var DOUBLEQUOTE = 34 /* " */
		var FOWARDSLASH = 47 /* / */
		var GREATERTHAN = 62 /* > */
		var PLUS = 43 /* + */
		var TILDE = 126 /* ~ */
		var NULL = 0 /* \0 */
		var FORMFEED = 12 /* \f */
		var VERTICALTAB = 11 /* \v */

		/* special identifiers */
		var KEYFRAME = 107 /* k */
		var MEDIA = 109 /* m */
		var SUPPORTS = 115 /* s */
		var PLACEHOLDER = 112 /* p */
		var READONLY = 111 /* o */
		var IMPORT = 105 /* <at>i */
		var CHARSET = 99 /* <at>c */
		var DOCUMENT = 100 /* <at>d */
		var PAGE = 112 /* <at>p */

		var column = 1 /* current column */
		var line = 1 /* current line numebr */
		var pattern = 0 /* :pattern */

		var cascade = 1 /* #id h1 h2 vs h1#id h2#id  */
		var prefix = 1 /* vendor prefix */
		var escape = 1 /* escape :global() pattern */
		var compress = 0 /* compress output */
		var semicolon = 0 /* no/semicolon option */
		var preserve = 0 /* preserve empty selectors */

		/* empty reference */
		var array = []

		/* plugins */
		var plugins = []
		var plugged = 0
		var should = null

		/* plugin context */
		var POSTS = -2
		var PREPS = -1
		var UNKWN = 0
		var PROPS = 1
		var BLCKS = 2
		var ATRUL = 3

		/* plugin newline context */
		var unkwn = 0

		/* keyframe animation */
		var keyed = 1
		var key = ''

		/* selector namespace */
		var nscopealt = ''
		var nscope = ''

		/**
		 * Compile
		 *
		 * @param {Array<string>} parent
		 * @param {Array<string>} current
		 * @param {string} body
		 * @param {number} id
		 * @param {number} depth
		 * @return {string}
		 */
		function compile (parent, current, body, id, depth) {
			var bracket = 0 /* brackets [] */
			var comment = 0 /* comments /* // or /* */
			var parentheses = 0 /* functions () */
			var quote = 0 /* quotes '', "" */

			var first = 0 /* first character code */
			var second = 0 /* second character code */
			var code = 0 /* current character code */
			var tail = 0 /* previous character code */
			var trail = 0 /* character before previous code */
			var peak = 0 /* previous non-whitespace code */

			var counter = 0 /* count sequence termination */
			var context = 0 /* track current context */
			var atrule = 0 /* track @at-rule context */
			var pseudo = 0 /* track pseudo token index */
			var caret = 0 /* current character index */
			var format = 0 /* control character formating context */
			var insert = 0 /* auto semicolon insertion */
			var invert = 0 /* inverted selector pattern */
			var length = 0 /* generic length address */
			var eof = body.length /* end of file(length) */
			var eol = eof - 1 /* end of file(characters) */

			var char = '' /* current character */
			var chars = '' /* current buffer of characters */
			var child = '' /* next buffer of characters */
			var out = '' /* compiled body */
			var children = '' /* compiled children */
			var flat = '' /* compiled leafs */
			var selector /* generic selector address */
			var result /* generic address */

			// ...build body
			while (caret < eof) {
				code = body.charCodeAt(caret)

				// eof varient
				if (caret === eol) {
					// last character + noop context, add synthetic padding for noop context to terminate
					if (comment + quote + parentheses + bracket !== 0) {
						if (comment !== 0) {
							code = comment === FOWARDSLASH ? NEWLINE : FOWARDSLASH
						}

						quote = parentheses = bracket = 0
						eof++
						eol++
					}
				}

				if (comment + quote + parentheses + bracket === 0) {
					// eof varient
					if (caret === eol) {
						if (format > 0) {
							chars = chars.replace(formatptn, '')
						}

						if (chars.trim().length > 0) {
							switch (code) {
								case SPACE:
								case TAB:
								case SEMICOLON:
								case CARRIAGE:
								case NEWLINE: {
									break
								}
								default: {
									chars += body.charAt(caret)
								}
							}

							code = SEMICOLON
						}
					}

					// auto semicolon insertion
					if (insert === 1) {
						switch (code) {
							// false flags
							case OPENBRACES:
							case CLOSEBRACES:
							case SEMICOLON:
							case DOUBLEQUOTE:
							case SINGLEQUOTE:
							case OPENPARENTHESES:
							case CLOSEPARENTHESES:
							case COMMA: {
								insert = 0
							}
							// ignore
							case TAB:
							case CARRIAGE:
							case NEWLINE:
							case SPACE: {
								break
							}
							// valid
							default: {
								insert = 0
								length = caret
								first = code
								caret--
								code = SEMICOLON

								while (length < eof) {
									switch (body.charCodeAt(length++)) {
										case NEWLINE:
										case CARRIAGE:
										case SEMICOLON: {
											++caret
											code = first
											length = eof
											break
										}
										case COLON: {
											if (format > 0) {
												++caret
												code = first
											}
										}
										case OPENBRACES: {
											length = eof
										}
									}
								}
							}
						}
					}

					// token varient
					switch (code) {
						case OPENBRACES: {
							chars = chars.trim()
							first = chars.charCodeAt(0)
							counter = 1
							length = ++caret

							while (caret < eof) {
								switch (code = body.charCodeAt(caret)) {
									case OPENBRACES: {
										counter++
										break
									}
									case CLOSEBRACES: {
										counter--
										break
									}
									case FOWARDSLASH: {
										switch (second = body.charCodeAt(caret + 1)) {
											// /*, //
											case STAR:
											case FOWARDSLASH: {
												caret = delimited(second, caret, eol, body)
											}
										}
										break
									}
									// given "[" === 91 & "]" === 93 hence forth 91 + 1 + 1 === 93
									case OPENBRACKET: {
										code++
									}
									// given "(" === 40 & ")" === 41 hence forth 40 + 1 === 41
									case OPENPARENTHESES: {
										code++
									}
									// quote tail delimiter is identical to the head delimiter hence noop,
									// fallthrough clauses have been shited to the correct tail delimiter
									case DOUBLEQUOTE:
									case SINGLEQUOTE: {
										while (caret++ < eol) {
											if (body.charCodeAt(caret) === code) {
												break
											}
										}
									}
								}

								if (counter === 0) {
									break
								}

								caret++
							}

							child = body.substring(length, caret)

							if (first === NULL) {
								first = (chars = chars.replace(nullptn, '').trim()).charCodeAt(0)
							}

							switch (first) {
								// @at-rule
								case AT: {
									if (format > 0) {
										chars = chars.replace(formatptn, '')
									}

									second = chars.charCodeAt(1)

									switch (second) {
										case DOCUMENT:
										case MEDIA:
										case SUPPORTS:
										case DASH: {
											selector = current
											break
										}
										default: {
											selector = array
										}
									}

									child = compile(current, selector, child, second, depth+1)
									length = child.length

									// preserve empty @at-rule
									if (preserve > 0 && length === 0) {
										length = chars.length
									}

									// execute plugins, @at-rule context
									if (plugged > 0) {
										selector = select(array, chars, invert)
										result = proxy(ATRUL, child, selector, current, line, column, length, second, depth, id)
										chars = selector.join('')

										if (result !== void 0) {
											if ((length = (child = result.trim()).length) === 0) {
												second = 0
												child = ''
											}
										}
									}

									if (length > 0) {
										switch (second) {
											case SUPPORTS: {
												chars = chars.replace(supportsptn, supports)
											}
											case DOCUMENT:
											case MEDIA:
											case DASH: {
												child = chars + '{' + child + '}'
												break
											}
											case KEYFRAME: {
												chars = chars.replace(keyframeptn, '$1 $2' + (keyed > 0 ? key : ''))
												child = chars + '{' + child + '}'

												if (prefix === 1 || (prefix === 2 && vendor('@'+child, 3))) {
													child = '@' + webkit + child + '@' + child
												} else {
													child = '@' + child
												}
												break
											}
											default: {
												child = chars + child

												if (id === PAGE) {
													child = (out += child, '')
												}
											}
										}
									} else {
										child = ''
									}

									break
								}
								// selector
								default: {
									child = compile(current, select(current, chars, invert), child, id, depth+1)
								}
							}

							children += child

							// reset
							context = 0
							insert = 0
							pseudo = 0
							format = 0
							invert = 0
							atrule = 0
							chars = ''
							child = ''
							code = body.charCodeAt(++caret)
							break
						}
						case CLOSEBRACES:
						case SEMICOLON: {
							chars = (format > 0 ? chars.replace(formatptn, '') : chars).trim()

							if ((length = chars.length) > 1) {
								// monkey-patch missing colon
								if (pseudo === 0) {
									first = chars.charCodeAt(0)

									// first character is a letter or dash, buffer has a space character
									if ((first === DASH || first > 96 && first < 123)) {
										length = (chars = chars.replace(' ', ':')).length
									}
								}

								// execute plugins, property context
								if (plugged > 0) {
									if ((result = proxy(PROPS, chars, current, parent, line, column, out.length, id, depth, id)) !== void 0) {
										if ((length = (chars = result.trim()).length) === 0) {
											chars = '\0\0'
										}
									}
								}

								first = chars.charCodeAt(0)
								second = chars.charCodeAt(1)

								switch (first) {
									case NULL: {
										break
									}
									case AT: {
										if (second === IMPORT || second === CHARSET) {
											flat += chars + body.charAt(caret)
											break
										}
									}
									default: {
										if (chars.charCodeAt(length-1) === COLON) {
											break
										}

										out += property(chars, first, second, chars.charCodeAt(2))
									}
								}
							}

							// reset
							context = 0
							insert = 0
							pseudo = 0
							format = 0
							invert = 0
							chars = ''
							code = body.charCodeAt(++caret)
							break
						}
					}
				}

				// parse characters
				switch (code) {
					case CARRIAGE:
					case NEWLINE: {
						// auto insert semicolon
						if (comment + quote + parentheses + bracket + semicolon === 0) {
							// valid non-whitespace characters that
							// may precede a newline
							switch (peak) {
								case CLOSEPARENTHESES:
								case SINGLEQUOTE:
								case DOUBLEQUOTE:
								case AT:
								case TILDE:
								case GREATERTHAN:
								case STAR:
								case PLUS:
								case FOWARDSLASH:
								case DASH:
								case COLON:
								case COMMA:
								case SEMICOLON:
								case OPENBRACES:
								case CLOSEBRACES: {
									break
								}
								default: {
									// current buffer has a colon
									if (pseudo > 0) {
										insert = 1
									}
								}
							}
						}

						// terminate line comment
						if (comment === FOWARDSLASH) {
							comment = 0
						} else if (cascade + context === 0 && id !== KEYFRAME && chars.length > 0) {
							format = 1
							chars += '\0'
						}

						// execute plugins, newline context
						if (plugged * unkwn > 0) {
							proxy(UNKWN, chars, current, parent, line, column, out.length, id, depth, id)
						}

						// next line, reset column position
						column = 1
						line++
						break
					}
					case SEMICOLON:
					case CLOSEBRACES: {
						if (comment + quote + parentheses + bracket === 0) {
							column++
							break
						}
					}
					default: {
						// increment column position
						column++

						// current character
						char = body.charAt(caret)

						// remove comments, escape functions, strings, attributes and prepare selectors
						switch (code) {
							case TAB:
							case SPACE: {
								if (quote + bracket + comment === 0) {
									switch (tail) {
										case COMMA:
										case COLON:
										case TAB:
										case SPACE: {
											char = ''
											break
										}
										default: {
											if (code !== SPACE) {
												char = ' '
											}
										}
									}
								}
								break
							}
							// escape breaking control characters
							case NULL: {
								char = '\\0'
								break
							}
							case FORMFEED: {
								char = '\\f'
								break
							}
							case VERTICALTAB: {
								char = '\\v'
								break
							}
							// &
							case AND: {
								// inverted selector pattern i.e html &
								if (quote + comment + bracket === 0 && cascade > 0) {
									invert = 1
									format = 1
									char = '\f' + char
								}
								break
							}
							// ::p<l>aceholder, l
							// :read-on<l>y, l
							case 108: {
								if (quote + comment + bracket + pattern === 0 && pseudo > 0) {
									switch (caret - pseudo) {
										// ::placeholder
										case 2: {
											if (tail === PLACEHOLDER && body.charCodeAt(caret-3) === COLON) {
												pattern = tail
											}
										}
										// :read-only
										case 8: {
											if (trail === READONLY) {
												pattern = trail
											}
										}
									}
								}
								break
							}
							// :<pattern>
							case COLON: {
								if (quote + comment + bracket === 0) {
									pseudo = caret
								}
								break
							}
							// selectors
							case COMMA: {
								if (comment + parentheses + quote + bracket === 0) {
									format = 1
									char += '\r'
								}
								break
							}
							// quotes
							case DOUBLEQUOTE: {
								if (comment === 0) {
									quote = quote === code ? 0 : (quote === 0 ? code : quote)
								}
								break
							}
							case SINGLEQUOTE: {
								if (comment === 0) {
									quote = quote === code ? 0 : (quote === 0 ? code : quote)
								}
								break
							}
							// attributes
							case OPENBRACKET: {
								if (quote + comment + parentheses === 0) {
									bracket++
								}
								break
							}
							case CLOSEBRACKET: {
								if (quote + comment + parentheses === 0) {
									bracket--
								}
								break
							}
							// functions
							case CLOSEPARENTHESES: {
								if (quote + comment + bracket === 0) {
									parentheses--
								}
								break
							}
							case OPENPARENTHESES: {
								if (quote + comment + bracket === 0) {
									if (context === 0) {
										switch (tail*2 + trail*3) {
											// :matches
											case 533: {
												break
											}
											// :global, :not, :nth-child etc...
											default: {
												counter = 0
												context = 1
											}
										}
									}

									parentheses++
								}
								break
							}
							case AT: {
								if (comment + parentheses + quote + bracket + pseudo + atrule === 0) {
									atrule = 1
								}
								break
							}
							// block/line comments
							case STAR:
							case FOWARDSLASH: {
								if (quote + bracket + parentheses > 0) {
									break
								}

								switch (comment) {
									// initialize line/block comment context
									case 0: {
										switch (code*2 + body.charCodeAt(caret+1)*3) {
											// //
											case 235: {
												comment = FOWARDSLASH
												break
											}
											// /*
											case 220: {
												length = caret
												comment = STAR
												break
											}
										}
										break
									}
									// end block comment context
									case STAR: {
										if (code === FOWARDSLASH && tail === STAR && length + 2 !== caret) {
											// /*<!> ... */, !
											if (body.charCodeAt(length+2) === 33) {
												out += body.substring(length, caret+1)
											}
											char = ''
											comment = 0
										}
									}
								}
							}
						}

						// ignore comment blocks
						if (comment === 0) {
							// aggressive isolation mode, divide each individual selector
							// including selectors in :not function but excluding selectors in :global function
							if (cascade + quote + bracket + atrule === 0 && id !== KEYFRAME && code !== SEMICOLON) {
								switch (code) {
									case COMMA:
									case TILDE:
									case GREATERTHAN:
									case PLUS:
									case CLOSEPARENTHESES:
									case OPENPARENTHESES: {
										if (context === 0) {
											// outside of an isolated context i.e nth-child(<...>)
											switch (tail) {
												case TAB:
												case SPACE:
												case NEWLINE:
												case CARRIAGE: {
													char = char + '\0'
													break
												}
												default: {
													char = '\0' + char + (code === COMMA ? '' : '\0')
												}
											}
											format = 1
										} else {
											// within an isolated context, sleep untill it's terminated
											switch (code) {
												case OPENPARENTHESES: {
													// :globa<l>(
													if (pseudo + 7 === caret && tail === 108) {
														pseudo = 0
													}
													context = ++counter
													break
												}
												case CLOSEPARENTHESES: {
													if ((context = --counter) === 0) {
														format = 1
														char += '\0'
													}
													break
												}
											}
										}
										break
									}
									case TAB:
									case SPACE: {
										switch (tail) {
											case NULL:
											case OPENBRACES:
											case CLOSEBRACES:
											case SEMICOLON:
											case COMMA:
											case FORMFEED:
											case TAB:
											case SPACE:
											case NEWLINE:
											case CARRIAGE: {
												break
											}
											default: {
												// ignore in isolated contexts
												if (context === 0) {
													format = 1
													char += '\0'
												}
											}
										}
									}
								}
							}

							// concat buffer of characters
							chars += char

							// previous non-whitespace character code
							if (code !== SPACE && code !== TAB) {
								peak = code
							}
						}
					}
				}

				// tail character codes
				trail = tail
				tail = code

				// visit every character
				caret++
			}

			length = out.length

			// preserve empty selector
	 		if (preserve > 0) {
	 			if (length === 0 && children.length === 0 && (current[0].length === 0) === false) {
	 				if (id !== MEDIA || (current.length === 1 && (cascade > 0 ? nscopealt : nscope) === current[0])) {
						length = current.join(',').length + 2
	 				}
	 			}
			}

			if (length > 0) {
				// cascade isolation mode?
				selector = cascade === 0 && id !== KEYFRAME ? isolate(current) : current

				// execute plugins, block context
				if (plugged > 0) {
					result = proxy(BLCKS, out, selector, parent, line, column, length, id, depth, id)

					if (result !== void 0 && (out = result).length === 0) {
						return flat + out + children
					}
				}

				out = selector.join(',') + '{' + out + '}'

				if (prefix*pattern !== 0) {
					if (prefix === 2 && !vendor(out, 2))
						pattern = 0

					switch (pattern) {
						// ::read-only
						case READONLY: {
							out = out.replace(readonlyptn, ':'+moz+'$1')+out
							break
						}
						// ::placeholder
						case PLACEHOLDER: {
							out = (
								out.replace(plcholdrptn, '::' + webkit + 'input-$1') +
								out.replace(plcholdrptn, '::' + moz + '$1') +
								out.replace(plcholdrptn, ':' + ms + 'input-$1') + out
							)
							break
						}
					}

					pattern = 0
				}
			}

			return flat + out + children
		}

		/**
		 * Select
		 *
		 * @param {Array<string>} parent
		 * @param {string} current
		 * @param {number} invert
		 * @return {Array<string>}
		 */
		function select (parent, current, invert) {
			var selectors = current.trim().split(selectorptn)
			var out = selectors

			var length = selectors.length
			var l = parent.length

			switch (l) {
				// 0-1 parent selectors
				case 0:
				case 1: {
					for (var i = 0, selector = l === 0 ? '' : parent[0] + ' '; i < length; ++i) {
						out[i] = scope(selector, out[i], invert, l).trim()
					}
					break
				}
				// >2 parent selectors, nested
				default: {
					for (var i = 0, j = 0, out = []; i < length; ++i) {
						for (var k = 0; k < l; ++k) {
							out[j++] = scope(parent[k] + ' ', selectors[i], invert, l).trim()
						}
					}
				}
			}

			return out
		}

		/**
		 * Scope
		 *
		 * @param {string} parent
		 * @param {string} current
		 * @param {number} invert
		 * @param {number} level
		 * @return {string}
		 */
		function scope (parent, current, invert, level) {
			var selector = current
			var code = selector.charCodeAt(0)

			// trim leading whitespace
			if (code < 33) {
				code = (selector = selector.trim()).charCodeAt(0)
			}

			switch (code) {
				// &
				case AND: {
					switch (cascade + level) {
						case 0:
						case 1: {
							if (parent.trim().length === 0) {
								break
							}
						}
						default: {
							return selector.replace(andptn, '$1'+parent.trim())
						}
					}
					break
				}
				// :
				case COLON: {
					switch (selector.charCodeAt(1)) {
						// g in :global
						case 103: {
							if (escape > 0 && cascade > 0) {
								return selector.replace(escapeptn, '$1').replace(andptn, '$1'+nscope)
							}
							break
						}
						default: {
							// :hover
							return parent.trim() + selector.replace(andptn, '$1'+parent.trim())
						}
					}
				}
				default: {
					// html &
					if (invert*cascade > 0 && selector.indexOf('\f') > 0) {
						return selector.replace(andptn, (parent.charCodeAt(0) === COLON ? '' : '$1')+parent.trim())
					}
				}
			}

			return parent + selector
		}

		/**
		 * Property
		 *
		 * @param {string} input
		 * @param {number} first
		 * @param {number} second
		 * @param {number} third
		 * @return {string}
		 */
		function property (input, first, second, third) {
			var index = 0
			var out = input + ';'
			var hash = (first*2) + (second*3) + (third*4)
			var cache

			// animation: a, n, i characters
			if (hash === 944) {
				return animation(out)
			} else if (prefix === 0 || (prefix === 2 && !vendor(out, 1))) {
				return out
			}

			// vendor prefix
			switch (hash) {
				// text-decoration/text-size-adjust/text-shadow/text-align/text-transform: t, e, x
				case 1015: {
					// text-shadow/text-align/text-transform, a
					return out.charCodeAt(10) === 97 ? webkit + out + out : out
				}
				// filter/fill f, i, l
				case 951: {
					// filter, t
					return out.charCodeAt(3) === 116 ? webkit + out + out : out
				}
				// color/column, c, o, l
				case 963: {
					// column, n
					return out.charCodeAt(5) === 110 ? webkit + out + out : out
				}
				// box-decoration-break, b, o, x
				case 1009: {
					if (out.charCodeAt(4) !== 100) {
						break
					}
				}
				// mask, m, a, s
				// clip-path, c, l, i
				case 969:
				case 942: {
					return webkit + out + out
				}
				// appearance: a, p, p
				case 978: {
					return webkit + out + moz + out + out
				}
				// hyphens: h, y, p
				// user-select: u, s, e
				case 1019:
				case 983: {
					return webkit + out + moz + out + ms + out + out
				}
				// background/backface-visibility, b, a, c
				case 883: {
					// backface-visibility, -
					if (out.charCodeAt(8) === DASH) {
						return webkit + out + out
					}

					// image-set(...)
					if (out.indexOf('image-set(', 11) > 0) {
						return out.replace(imgsrcptn, '$1'+webkit+'$2') + out
					}

					return out
				}
				// flex: f, l, e
				case 932: {
					if (out.charCodeAt(4) === DASH) {
						switch (out.charCodeAt(5)) {
							// flex-grow, g
							case 103: {
								return webkit + 'box-' + out.replace('-grow', '') + webkit + out + ms + out.replace('grow', 'positive') + out
							}
							// flex-shrink, s
							case 115: {
								return webkit + out + ms + out.replace('shrink', 'negative') + out
							}
							// flex-basis, b
							case 98: {
								return webkit + out + ms + out.replace('basis', 'preferred-size') + out
							}
						}
					}

					return webkit + out + ms + out + out
				}
				// order: o, r, d
				case 964: {
					return webkit + out + ms + 'flex' + '-' + out + out
				}
				// justify-items/justify-content, j, u, s
				case 1023: {
					// justify-content, c
					if (out.charCodeAt(8) !== 99) {
						break
					}

					cache = out.substring(out.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify')
					return webkit + 'box-pack' + cache + webkit + out + ms + 'flex-pack' + cache + out
				}
				// cursor, c, u, r
				case 1005: {
					return cursorptn.test(out) ? out.replace(colonptn, ':' + webkit) + out.replace(colonptn, ':' + moz) + out : out
				}
				// writing-mode, w, r, i
				case 1000: {
					cache = out.substring(13).trim()
					index = cache.indexOf('-') + 1

					switch (cache.charCodeAt(0)+cache.charCodeAt(index)) {
						// vertical-lr
						case 226: {
							cache = out.replace(writingptn, 'tb')
							break
						}
						// vertical-rl
						case 232: {
							cache = out.replace(writingptn, 'tb-rl')
							break
						}
						// horizontal-tb
						case 220: {
							cache = out.replace(writingptn, 'lr')
							break
						}
						default: {
							return out
						}
					}

					return webkit + out + ms + cache + out
				}
				// position: sticky
				case 1017: {
					if (out.indexOf('sticky', 9) === -1) {
						return out
					}
				}
				// display(flex/inline-flex/inline-box): d, i, s
				case 975: {
					index = (out = input).length - 10
					cache = (out.charCodeAt(index) === 33 ? out.substring(0, index) : out).substring(input.indexOf(':', 7) + 1).trim()

					switch (hash = cache.charCodeAt(0) + (cache.charCodeAt(7)|0)) {
						// inline-
						case 203: {
							// inline-box
							if (cache.charCodeAt(8) < 111) {
								break
							}
						}
						// inline-box/sticky
						case 115: {
							out = out.replace(cache, webkit+cache)+';'+out
							break
						}
						// inline-flex
						// flex
						case 207:
						case 102: {
							out = (
								out.replace(cache, webkit+(hash > 102 ? 'inline-' : '')+'box')+';'+
								out.replace(cache, webkit+cache)+';'+
								out.replace(cache, ms+cache+'box')+';'+
								out
							)
						}
					}

					return out + ';'
				}
				// align-items, align-center, align-self: a, l, i, -
				case 938: {
					if (out.charCodeAt(5) === DASH) {
						switch (out.charCodeAt(6)) {
							// align-items, i
							case 105: {
								cache = out.replace('-items', '')
								return webkit + out + webkit + 'box-' + cache + ms + 'flex-' + cache + out
							}
							// align-self, s
							case 115: {
								return webkit + out + ms + 'flex-item-' + out.replace(selfptn, '') + out
							}
							// align-content
							default: {
								return webkit + out + ms + 'flex-line-pack' + out.replace('align-content', '').replace(selfptn, '') + out
							}
						}
					}
					break
				}
				// min/max
				case 973:
				case 989: {
					// min-/max- height/width/block-size/inline-size
					if (out.charCodeAt(3) !== DASH || out.charCodeAt(4) === 122) {
						break
					}
				}
				// height/width: min-content / width: max-content
				case 931:
				case 953: {
					if (dimensionptn.test(input) === true) {
						// stretch
						if ((cache = input.substring(input.indexOf(':') + 1)).charCodeAt(0) === 115)
							return property(input.replace('stretch', 'fill-available'), first, second, third).replace(':fill-available', ':stretch')
						else
							return out.replace(cache, webkit + cache) + out.replace(cache, moz + cache.replace('fill-', '')) + out
					}
					break
				}
				// transform, transition: t, r, a
				case 962: {
					out = webkit + out + (out.charCodeAt(5) === 102 ? ms + out : '') + out

					// transitions
					if (second + third === 211 && out.charCodeAt(13) === 105 && out.indexOf('transform', 10) > 0) {
						return out.substring(0, out.indexOf(';', 27) + 1).replace(transformptn, '$1' + webkit + '$2') + out
					}

					break
				}
			}

			return out
		}

		/**
		 * Vendor
		 *
		 * @param {string} content
		 * @param {number} context
		 * @return {boolean}
		 */
		function vendor (content, context) {
			var index = content.indexOf(context === 1 ? ':' : '{')
			var key = content.substring(0, context !== 3 ? index : 10)
			var value = content.substring(index + 1, content.length - 1)

			return should(context !== 2 ? key : key.replace(pseudofmt, '$1'), value, context)
		}

		/**
		 * Supports
		 *
		 * @param {string} match
		 * @param {string} group
		 * @return {string}
		 */
		function supports (match, group) {
			var out = property(group, group.charCodeAt(0), group.charCodeAt(1), group.charCodeAt(2))

			return out !== group+';' ? out.replace(propertyptn, ' or ($1)').substring(4) : '('+group+')'
		}

		/**
		 * Animation
		 *
		 * @param {string} input
		 * @return {string}
		 */
		function animation (input) {
			var length = input.length
			var index = input.indexOf(':', 9) + 1
			var declare = input.substring(0, index).trim()
			var out = input.substring(index, length-1).trim()

			switch (input.charCodeAt(9)*keyed) {
				case 0: {
					break
				}
				// animation-*, -
				case DASH: {
					// animation-name, n
					if (input.charCodeAt(10) !== 110) {
						break
					}
				}
				// animation/animation-name
				default: {
					// split in case of multiple animations
					var list = out.split((out = '', animationptn))

					for (var i = 0, index = 0, length = list.length; i < length; index = 0, ++i) {
						var value = list[i]
						var items = value.split(propertiesptn)

						while (value = items[index]) {
							var peak = value.charCodeAt(0)

							if (keyed === 1 && (
								// letters
								(peak > AT && peak < 90) || (peak > 96 && peak < 123) || peak === UNDERSCORE ||
								// dash but not in sequence i.e --
								(peak === DASH && value.charCodeAt(1) !== DASH)
							)) {
								// not a number/function
								switch (isNaN(parseFloat(value)) + (value.indexOf('(') !== -1)) {
									case 1: {
										switch (value) {
											// not a valid reserved keyword
											case 'infinite': case 'alternate': case 'backwards': case 'running':
											case 'normal': case 'forwards': case 'both': case 'none': case 'linear':
											case 'ease': case 'ease-in': case 'ease-out': case 'ease-in-out':
											case 'paused': case 'reverse': case 'alternate-reverse': case 'inherit':
											case 'initial': case 'unset': case 'step-start': case 'step-end': {
												break
											}
											default: {
												value += key
											}
										}
									}
								}
							}

							items[index++] = value
						}

						out += (i === 0 ? '' : ',') + items.join(' ')
					}
				}
			}

			out = declare + out + ';'

			if (prefix === 1 || (prefix === 2 && vendor(out, 1)))
				return webkit + out + out

			return out
		}

		/**
		 * Isolate
		 *
		 * @param {Array<string>} current
		 */
		function isolate (current) {
			for (var i = 0, length = current.length, selector = Array(length), padding, element; i < length; ++i) {
				// split individual elements in a selector i.e h1 h2 === [h1, h2]
				var elements = current[i].split(elementptn)
				var out = ''

				for (var j = 0, size = 0, tail = 0, code = 0, l = elements.length; j < l; ++j) {
					// empty element
					if ((size = (element = elements[j]).length) === 0 && l > 1) {
						continue
					}

					tail = out.charCodeAt(out.length-1)
					code = element.charCodeAt(0)
					padding = ''

					if (j !== 0) {
						// determine if we need padding
						switch (tail) {
							case STAR:
							case TILDE:
							case GREATERTHAN:
							case PLUS:
							case SPACE:
							case OPENPARENTHESES:  {
								break
							}
							default: {
								padding = ' '
							}
						}
					}

					switch (code) {
						case AND: {
							element = padding + nscopealt
						}
						case TILDE:
						case GREATERTHAN:
						case PLUS:
						case SPACE:
						case CLOSEPARENTHESES:
						case OPENPARENTHESES: {
							break
						}
						case OPENBRACKET: {
							element = padding + element + nscopealt
							break
						}
						case COLON: {
							switch (element.charCodeAt(1)*2 + element.charCodeAt(2)*3) {
								// :global
								case 530: {
									if (escape > 0) {
										element = padding + element.substring(8, size - 1)
										break
									}
								}
								// :hover, :nth-child(), ...
								default: {
									if (j < 1 || elements[j-1].length < 1) {
										element = padding + nscopealt + element
									}
								}
							}
							break
						}
						case COMMA: {
							padding = ''
						}
						default: {
							if (size > 1 && element.indexOf(':') > 0) {
								element = padding + element.replace(pseudoptn, '$1' + nscopealt + '$2')
							} else {
								element = padding + element + nscopealt
							}
						}
					}

					out += element
				}

				selector[i] = out.replace(formatptn, '').trim()
			}

			return selector
		}

		/**
		 * Proxy
		 *
		 * @param {number} context
		 * @param {string} content
		 * @param {Array<string>} selectors
		 * @param {Array<string>} parents
		 * @param {number} line
		 * @param {number} column
		 * @param {number} length
		 * @param {number} id
		 * @param {number} depth
		 * @param {number} at
		 * @return {(string|void|*)}
		 */
		function proxy (context, content, selectors, parents, line, column, length, id, depth, at) {
			for (var i = 0, out = content, next; i < plugged; ++i) {
				switch (next = plugins[i].call(stylis, context, out, selectors, parents, line, column, length, id, depth, at)) {
					case void 0:
					case false:
					case true:
					case null: {
						break
					}
					default: {
						out = next
					}
				}
			}

			switch (out) {
				case void 0:
				case false:
				case true:
				case null:
				case content: {
					break
				}
				default: {
					return out
				}
			}
		}

		/**
		 * @param {number} code
		 * @param {number} index
		 * @param {number} length
		 * @param {string} body
		 * @return {number}
		 */
		function delimited (code, index, length, body) {
			for (var i = index + 1; i < length; ++i) {
				switch (body.charCodeAt(i)) {
					// /*
					case FOWARDSLASH: {
						if (code === STAR) {
							if (body.charCodeAt(i - 1) === STAR &&  index + 2 !== i) {
								return i + 1
							}
						}
						break
					}
					// //
					case NEWLINE: {
						if (code === FOWARDSLASH) {
							return i + 1
						}
					}
				}
			}

			return i
		}

		/**
		 * @param {number} type
		 * @param {number} index
		 * @param {number} length
		 * @param {number} find
		 * @param {string} body
		 * @return {number}
		 */
		function match (type, index, length, body) {
			for (var i = index + 1; i < length; ++i) {
				switch (body.charCodeAt(i)) {
					case type: {
						return i
					}
				}
			}

			return i
		}

		/**
		 * Minify
		 *
		 * @param {(string|*)} output
		 * @return {string}
		 */
		function minify (output) {
			return output
				.replace(formatptn, '')
				.replace(beforeptn, '')
				.replace(afterptn, '$1')
				.replace(tailptn, '$1')
				.replace(whiteptn, ' ')
		}

		/**
		 * Use
		 *
		 * @param {(Array<function(...?)>|function(...?)|number|void)?} plugin
		 */
		function use (plugin) {
			switch (plugin) {
				case void 0:
				case null: {
					plugged = plugins.length = 0
					break
				}
				default: {
					switch (plugin.constructor) {
						case Array: {
							for (var i = 0, length = plugin.length; i < length; ++i) {
								use(plugin[i])
							}
							break
						}
						case Function: {
							plugins[plugged++] = plugin
							break
						}
						case Boolean: {
							unkwn = !!plugin|0
						}
					}
				}
	 		}

	 		return use
		}

		/**
		 * Set
		 *
		 * @param {*} options
		 */
		function set (options) {
			for (var name in options) {
				var value = options[name]
				switch (name) {
					case 'keyframe': keyed = value|0; break
					case 'global': escape = value|0; break
					case 'cascade': cascade = value|0; break
					case 'compress': compress = value|0; break
					case 'semicolon': semicolon = value|0; break
					case 'preserve': preserve = value|0; break
					case 'prefix':
						should = null

						if (!value) {
							prefix = 0
						} else if (typeof value !== 'function') {
							prefix = 1
						} else {
							prefix = 2
							should = value
						}
				}
			}

			return set
		}

		/**
		 * Stylis
		 *
		 * @param {string} selector
		 * @param {string} input
		 * @return {*}
		 */
		function stylis (selector, input) {
			if (this !== void 0 && this.constructor === stylis) {
				return factory(selector)
			}

			// setup
			var ns = selector
			var code = ns.charCodeAt(0)

			// trim leading whitespace
			if (code < 33) {
				code = (ns = ns.trim()).charCodeAt(0)
			}

			// keyframe/animation namespace
			if (keyed > 0) {
				key = ns.replace(invalidptn, code === OPENBRACKET ? '' : '-')
			}

			// reset, used to assert if a plugin is moneky-patching the return value
			code = 1

			// cascade/isolate
			if (cascade === 1) {
				nscope = ns
			} else {
				nscopealt = ns
			}

			var selectors = [nscope]
			var result

			// execute plugins, pre-process context
			if (plugged > 0) {
				result = proxy(PREPS, input, selectors, selectors, line, column, 0, 0, 0, 0)

				if (result !== void 0 && typeof result === 'string') {
					input = result
				}
			}

			// build
			var output = compile(array, selectors, input, 0, 0)

			// execute plugins, post-process context
			if (plugged > 0) {
				result = proxy(POSTS, output, selectors, selectors, line, column, output.length, 0, 0, 0)

				// bypass minification
				if (result !== void 0 && typeof(output = result) !== 'string') {
					code = 0
				}
			}

			// reset
			key = ''
			nscope = ''
			nscopealt = ''
			pattern = 0
			line = 1
			column = 1

			return compress*code === 0 ? output : minify(output)
		}

		stylis['use'] = use
		stylis['set'] = set

		if (options !== void 0) {
			set(options)
		}

		return stylis
	}));

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(65)(module)))

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {(function (factory) {
		 true ? (module['exports'] = factory()) :
			typeof define === 'function' && define['amd'] ? define(factory()) :
				(window['stylisRuleSheet'] = factory())
	}(function () {

		'use strict'

		return function (insertRule) {
			var delimiter = '/*|*/'
			var needle = delimiter+'}'

			function toSheet (block) {
				if (block)
					try {
						insertRule(block + '}')
					} catch (e) {}
			}

			return function ruleSheet (context, content, selectors, parents, line, column, length, ns, depth, at) {
				switch (context) {
					// property
					case 1:
						// @import
						if (depth === 0 && content.charCodeAt(0) === 64)
							return insertRule(content+';'), ''
						break
					// selector
					case 2:
						if (ns === 0)
							return content + delimiter
						break
					// at-rule
					case 3:
						switch (ns) {
							// @font-face, @page
							case 102:
							case 112:
								return insertRule(selectors[0]+content), ''
							default:
								return content + (at === 0 ? delimiter : '')
						}
					case -2:
						content.split(needle).forEach(toSheet)
				}
			}
		}
	}))

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(65)(module)))

/***/ },
/* 68 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    getDerivedStateFromProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};

	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    callee: true,
	    arguments: true,
	    arity: true
	};

	var defineProperty = Object.defineProperty;
	var getOwnPropertyNames = Object.getOwnPropertyNames;
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
	var getPrototypeOf = Object.getPrototypeOf;
	var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

	function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
	    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components

	        if (objectPrototype) {
	            var inheritedComponent = getPrototypeOf(sourceComponent);
	            if (inheritedComponent && inheritedComponent !== objectPrototype) {
	                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
	            }
	        }

	        var keys = getOwnPropertyNames(sourceComponent);

	        if (getOwnPropertySymbols) {
	            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
	        }

	        for (var i = 0; i < keys.length; ++i) {
	            var key = keys[i];
	            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
	                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
	                try { // Avoid failures from read-only properties
	                    defineProperty(targetComponent, key, descriptor);
	                } catch (e) {}
	            }
	        }

	        return targetComponent;
	    }

	    return targetComponent;
	}

	module.exports = hoistNonReactStatics;


/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	if (process.env.NODE_ENV === 'production') {
	  module.exports = __webpack_require__(70);
	} else {
	  module.exports = __webpack_require__(71);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 70 */
/***/ function(module, exports) {

	/** @license React v16.4.2
	 * react-is.production.min.js
	 *
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';Object.defineProperty(exports,"__esModule",{value:!0});var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.forward_ref"):60112,n=b?Symbol.for("react.timeout"):60113;
	function q(a){if("object"===typeof a&&null!==a){var p=a.$$typeof;switch(p){case c:switch(a=a.type,a){case l:case e:case g:case f:return a;default:switch(a=a&&a.$$typeof,a){case k:case m:case h:return a;default:return p}}case d:return p}}}exports.typeOf=q;exports.AsyncMode=l;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=m;exports.Fragment=e;exports.Profiler=g;exports.Portal=d;exports.StrictMode=f;
	exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===l||a===g||a===f||a===n||"object"===typeof a&&null!==a&&(a.$$typeof===h||a.$$typeof===k||a.$$typeof===m)};exports.isAsyncMode=function(a){return q(a)===l};exports.isContextConsumer=function(a){return q(a)===k};exports.isContextProvider=function(a){return q(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return q(a)===m};
	exports.isFragment=function(a){return q(a)===e};exports.isProfiler=function(a){return q(a)===g};exports.isPortal=function(a){return q(a)===d};exports.isStrictMode=function(a){return q(a)===f};


/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.4.2
	 * react-is.development.js
	 *
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';



	if (process.env.NODE_ENV !== "production") {
	  (function() {
	'use strict';

	Object.defineProperty(exports, '__esModule', { value: true });

	// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var hasSymbol = typeof Symbol === 'function' && Symbol.for;

	var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
	var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
	var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
	var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
	var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
	var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
	var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
	var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
	var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
	var REACT_TIMEOUT_TYPE = hasSymbol ? Symbol.for('react.timeout') : 0xead1;

	function isValidElementType(type) {
	  return typeof type === 'string' || typeof type === 'function' ||
	  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
	  type === REACT_FRAGMENT_TYPE || type === REACT_ASYNC_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_TIMEOUT_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
	}

	function typeOf(object) {
	  if (typeof object === 'object' && object !== null) {
	    var $$typeof = object.$$typeof;

	    switch ($$typeof) {
	      case REACT_ELEMENT_TYPE:
	        var type = object.type;

	        switch (type) {
	          case REACT_ASYNC_MODE_TYPE:
	          case REACT_FRAGMENT_TYPE:
	          case REACT_PROFILER_TYPE:
	          case REACT_STRICT_MODE_TYPE:
	            return type;
	          default:
	            var $$typeofType = type && type.$$typeof;

	            switch ($$typeofType) {
	              case REACT_CONTEXT_TYPE:
	              case REACT_FORWARD_REF_TYPE:
	              case REACT_PROVIDER_TYPE:
	                return $$typeofType;
	              default:
	                return $$typeof;
	            }
	        }
	      case REACT_PORTAL_TYPE:
	        return $$typeof;
	    }
	  }

	  return undefined;
	}

	var AsyncMode = REACT_ASYNC_MODE_TYPE;
	var ContextConsumer = REACT_CONTEXT_TYPE;
	var ContextProvider = REACT_PROVIDER_TYPE;
	var Element = REACT_ELEMENT_TYPE;
	var ForwardRef = REACT_FORWARD_REF_TYPE;
	var Fragment = REACT_FRAGMENT_TYPE;
	var Profiler = REACT_PROFILER_TYPE;
	var Portal = REACT_PORTAL_TYPE;
	var StrictMode = REACT_STRICT_MODE_TYPE;

	function isAsyncMode(object) {
	  return typeOf(object) === REACT_ASYNC_MODE_TYPE;
	}
	function isContextConsumer(object) {
	  return typeOf(object) === REACT_CONTEXT_TYPE;
	}
	function isContextProvider(object) {
	  return typeOf(object) === REACT_PROVIDER_TYPE;
	}
	function isElement(object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	}
	function isForwardRef(object) {
	  return typeOf(object) === REACT_FORWARD_REF_TYPE;
	}
	function isFragment(object) {
	  return typeOf(object) === REACT_FRAGMENT_TYPE;
	}
	function isProfiler(object) {
	  return typeOf(object) === REACT_PROFILER_TYPE;
	}
	function isPortal(object) {
	  return typeOf(object) === REACT_PORTAL_TYPE;
	}
	function isStrictMode(object) {
	  return typeOf(object) === REACT_STRICT_MODE_TYPE;
	}

	exports.typeOf = typeOf;
	exports.AsyncMode = AsyncMode;
	exports.ContextConsumer = ContextConsumer;
	exports.ContextProvider = ContextProvider;
	exports.Element = Element;
	exports.ForwardRef = ForwardRef;
	exports.Fragment = Fragment;
	exports.Profiler = Profiler;
	exports.Portal = Portal;
	exports.StrictMode = StrictMode;
	exports.isValidElementType = isValidElementType;
	exports.isAsyncMode = isAsyncMode;
	exports.isContextConsumer = isContextConsumer;
	exports.isContextProvider = isContextProvider;
	exports.isElement = isElement;
	exports.isForwardRef = isForwardRef;
	exports.isFragment = isFragment;
	exports.isProfiler = isProfiler;
	exports.isPortal = isPortal;
	exports.isStrictMode = isStrictMode;
	  })();
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

	var React = _interopDefault(__webpack_require__(2));
	var PropTypes = _interopDefault(__webpack_require__(59));
	var Prefixer = _interopDefault(__webpack_require__(73));
	var stylePropType = _interopDefault(__webpack_require__(112));

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	function componentWillMount() {
	  // Call this.constructor.gDSFP to support sub-classes.
	  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
	  if (state !== null && state !== undefined) {
	    this.setState(state);
	  }
	}

	function componentWillReceiveProps(nextProps) {
	  // Call this.constructor.gDSFP to support sub-classes.
	  // Use the setState() updater to ensure state isn't stale in certain edge cases.
	  function updater(prevState) {
	    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
	    return state !== null && state !== undefined ? state : null;
	  }
	  // Binding "this" is important for shallow renderer support.
	  this.setState(updater.bind(this));
	}

	function componentWillUpdate(nextProps, nextState) {
	  try {
	    var prevProps = this.props;
	    var prevState = this.state;
	    this.props = nextProps;
	    this.state = nextState;
	    this.__reactInternalSnapshotFlag = true;
	    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
	      prevProps,
	      prevState
	    );
	  } finally {
	    this.props = prevProps;
	    this.state = prevState;
	  }
	}

	// React may warn about cWM/cWRP/cWU methods being deprecated.
	// Add a flag to suppress these warnings for this special case.
	componentWillMount.__suppressDeprecationWarning = true;
	componentWillReceiveProps.__suppressDeprecationWarning = true;
	componentWillUpdate.__suppressDeprecationWarning = true;

	function polyfill(Component) {
	  var prototype = Component.prototype;

	  if (!prototype || !prototype.isReactComponent) {
	    throw new Error('Can only polyfill class components');
	  }

	  if (
	    typeof Component.getDerivedStateFromProps !== 'function' &&
	    typeof prototype.getSnapshotBeforeUpdate !== 'function'
	  ) {
	    return Component;
	  }

	  // If new component APIs are defined, "unsafe" lifecycles won't be called.
	  // Error if any of these lifecycles are present,
	  // Because they would work differently between older and newer (16.3+) versions of React.
	  var foundWillMountName = null;
	  var foundWillReceivePropsName = null;
	  var foundWillUpdateName = null;
	  if (typeof prototype.componentWillMount === 'function') {
	    foundWillMountName = 'componentWillMount';
	  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
	    foundWillMountName = 'UNSAFE_componentWillMount';
	  }
	  if (typeof prototype.componentWillReceiveProps === 'function') {
	    foundWillReceivePropsName = 'componentWillReceiveProps';
	  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
	    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
	  }
	  if (typeof prototype.componentWillUpdate === 'function') {
	    foundWillUpdateName = 'componentWillUpdate';
	  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
	    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
	  }
	  if (
	    foundWillMountName !== null ||
	    foundWillReceivePropsName !== null ||
	    foundWillUpdateName !== null
	  ) {
	    var componentName = Component.displayName || Component.name;
	    var newApiName =
	      typeof Component.getDerivedStateFromProps === 'function'
	        ? 'getDerivedStateFromProps()'
	        : 'getSnapshotBeforeUpdate()';

	    throw Error(
	      'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
	        componentName +
	        ' uses ' +
	        newApiName +
	        ' but also contains the following legacy lifecycles:' +
	        (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
	        (foundWillReceivePropsName !== null
	          ? '\n  ' + foundWillReceivePropsName
	          : '') +
	        (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
	        '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
	        'https://fb.me/react-async-component-lifecycle-hooks'
	    );
	  }

	  // React <= 16.2 does not support static getDerivedStateFromProps.
	  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
	  // Newer versions of React will ignore these lifecycles if gDSFP exists.
	  if (typeof Component.getDerivedStateFromProps === 'function') {
	    prototype.componentWillMount = componentWillMount;
	    prototype.componentWillReceiveProps = componentWillReceiveProps;
	  }

	  // React <= 16.2 does not support getSnapshotBeforeUpdate.
	  // As a workaround, use cWU to invoke the new lifecycle.
	  // Newer versions of React will ignore that lifecycle if gSBU exists.
	  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
	    if (typeof prototype.componentDidUpdate !== 'function') {
	      throw new Error(
	        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
	      );
	    }

	    prototype.componentWillUpdate = componentWillUpdate;

	    var componentDidUpdate = prototype.componentDidUpdate;

	    prototype.componentDidUpdate = function componentDidUpdatePolyfill(
	      prevProps,
	      prevState,
	      maybeSnapshot
	    ) {
	      // 16.3+ will not execute our will-update method;
	      // It will pass a snapshot value to did-update though.
	      // Older versions will require our polyfilled will-update value.
	      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
	      // Because for <= 15.x versions this might be a "prevContext" object.
	      // We also can't just check "__reactInternalSnapshot",
	      // Because get-snapshot might return a falsy value.
	      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
	      var snapshot = this.__reactInternalSnapshotFlag
	        ? this.__reactInternalSnapshot
	        : maybeSnapshot;

	      componentDidUpdate.call(this, prevProps, prevState, snapshot);
	    };
	  }

	  return Component;
	}

	var classCallCheck = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

	var createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }

	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();

	var defineProperty = function (obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }

	  return obj;
	};

	var inherits = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
	  }

	  subClass.prototype = Object.create(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	};

	var possibleConstructorReturn = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }

	  return call && (typeof call === "object" || typeof call === "function") ? call : self;
	};

	var DEFAULT_USER_AGENT = 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.2 (KHTML, like Gecko) Safari/537.2';
	var USER_AGENT = typeof navigator !== 'undefined' ? navigator.userAgent : DEFAULT_USER_AGENT;

	var Pane = function (_React$PureComponent) {
	  inherits(Pane, _React$PureComponent);

	  function Pane() {
	    classCallCheck(this, Pane);
	    return possibleConstructorReturn(this, (Pane.__proto__ || Object.getPrototypeOf(Pane)).apply(this, arguments));
	  }

	  createClass(Pane, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          className = _props.className,
	          prefixer = _props.prefixer,
	          split = _props.split,
	          styleProps = _props.style,
	          size = _props.size,
	          eleRef = _props.eleRef;


	      var classes = ['Pane', split, className];

	      var style = Object.assign({}, styleProps || {}, {
	        flex: 1,
	        position: 'relative',
	        outline: 'none'
	      });

	      if (size !== undefined) {
	        if (split === 'vertical') {
	          style.width = size;
	        } else {
	          style.height = size;
	          style.display = 'flex';
	        }
	        style.flex = 'none';
	      }

	      return React.createElement(
	        'div',
	        {
	          ref: eleRef,
	          className: classes.join(' '),
	          style: prefixer.prefix(style)
	        },
	        children
	      );
	    }
	  }]);
	  return Pane;
	}(React.PureComponent);

	Pane.propTypes = {
	  className: PropTypes.string.isRequired,
	  children: PropTypes.node.isRequired,
	  prefixer: PropTypes.instanceOf(Prefixer).isRequired,
	  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
	  split: PropTypes.oneOf(['vertical', 'horizontal']),
	  style: stylePropType,
	  eleRef: PropTypes.func
	};

	Pane.defaultProps = {
	  prefixer: new Prefixer({ userAgent: USER_AGENT })
	};

	var DEFAULT_USER_AGENT$1 = 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.2 (KHTML, like Gecko) Safari/537.2';
	var USER_AGENT$1 = typeof navigator !== 'undefined' ? navigator.userAgent : DEFAULT_USER_AGENT$1;
	var RESIZER_DEFAULT_CLASSNAME = 'Resizer';

	var Resizer = function (_React$Component) {
	  inherits(Resizer, _React$Component);

	  function Resizer() {
	    classCallCheck(this, Resizer);
	    return possibleConstructorReturn(this, (Resizer.__proto__ || Object.getPrototypeOf(Resizer)).apply(this, arguments));
	  }

	  createClass(Resizer, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          className = _props.className,
	          _onClick = _props.onClick,
	          _onDoubleClick = _props.onDoubleClick,
	          _onMouseDown = _props.onMouseDown,
	          _onTouchEnd = _props.onTouchEnd,
	          _onTouchStart = _props.onTouchStart,
	          prefixer = _props.prefixer,
	          resizerClassName = _props.resizerClassName,
	          split = _props.split,
	          style = _props.style;

	      var classes = [resizerClassName, split, className];

	      return React.createElement('span', {
	        className: classes.join(' '),
	        style: prefixer.prefix(style) || {},
	        onMouseDown: function onMouseDown(event) {
	          return _onMouseDown(event);
	        },
	        onTouchStart: function onTouchStart(event) {
	          event.preventDefault();
	          _onTouchStart(event);
	        },
	        onTouchEnd: function onTouchEnd(event) {
	          event.preventDefault();
	          _onTouchEnd(event);
	        },
	        onClick: function onClick(event) {
	          if (_onClick) {
	            event.preventDefault();
	            _onClick(event);
	          }
	        },
	        onDoubleClick: function onDoubleClick(event) {
	          if (_onDoubleClick) {
	            event.preventDefault();
	            _onDoubleClick(event);
	          }
	        }
	      });
	    }
	  }]);
	  return Resizer;
	}(React.Component);

	Resizer.propTypes = {
	  className: PropTypes.string.isRequired,
	  onClick: PropTypes.func,
	  onDoubleClick: PropTypes.func,
	  onMouseDown: PropTypes.func.isRequired,
	  onTouchStart: PropTypes.func.isRequired,
	  onTouchEnd: PropTypes.func.isRequired,
	  prefixer: PropTypes.instanceOf(Prefixer).isRequired,
	  split: PropTypes.oneOf(['vertical', 'horizontal']),
	  style: stylePropType,
	  resizerClassName: PropTypes.string.isRequired
	};

	Resizer.defaultProps = {
	  prefixer: new Prefixer({ userAgent: USER_AGENT$1 }),
	  resizerClassName: RESIZER_DEFAULT_CLASSNAME
	};

	var DEFAULT_USER_AGENT$2 = 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.2 (KHTML, like Gecko) Safari/537.2';
	var USER_AGENT$2 = typeof navigator !== 'undefined' ? navigator.userAgent : DEFAULT_USER_AGENT$2;

	function unFocus(document, window) {
	  if (document.selection) {
	    document.selection.empty();
	  } else {
	    try {
	      window.getSelection().removeAllRanges();
	      // eslint-disable-next-line no-empty
	    } catch (e) {}
	  }
	}

	function getDefaultSize(defaultSize, minSize, maxSize, draggedSize) {
	  if (typeof draggedSize === 'number') {
	    var min = typeof minSize === 'number' ? minSize : 0;
	    var max = typeof maxSize === 'number' && maxSize >= 0 ? maxSize : Infinity;
	    return Math.max(min, Math.min(max, draggedSize));
	  }
	  if (defaultSize !== undefined) {
	    return defaultSize;
	  }
	  return minSize;
	}

	var SplitPane = function (_React$Component) {
	  inherits(SplitPane, _React$Component);

	  function SplitPane(props) {
	    classCallCheck(this, SplitPane);

	    var _this = possibleConstructorReturn(this, (SplitPane.__proto__ || Object.getPrototypeOf(SplitPane)).call(this, props));

	    _this.onMouseDown = _this.onMouseDown.bind(_this);
	    _this.onTouchStart = _this.onTouchStart.bind(_this);
	    _this.onMouseMove = _this.onMouseMove.bind(_this);
	    _this.onTouchMove = _this.onTouchMove.bind(_this);
	    _this.onMouseUp = _this.onMouseUp.bind(_this);

	    // order of setting panel sizes.
	    // 1. size
	    // 2. getDefaultSize(defaultSize, minsize, maxSize)

	    var size = props.size,
	        defaultSize = props.defaultSize,
	        minSize = props.minSize,
	        maxSize = props.maxSize,
	        primary = props.primary;


	    var initialSize = size !== undefined ? size : getDefaultSize(defaultSize, minSize, maxSize, null);

	    _this.state = {
	      active: false,
	      resized: false,
	      pane1Size: primary === 'first' ? initialSize : undefined,
	      pane2Size: primary === 'second' ? initialSize : undefined,

	      // previous props that we need in static methods
	      instanceProps: {
	        primary: primary,
	        size: size,
	        defaultSize: defaultSize,
	        minSize: minSize,
	        maxSize: maxSize
	      }
	    };
	    return _this;
	  }

	  createClass(SplitPane, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      document.addEventListener('mouseup', this.onMouseUp);
	      document.addEventListener('mousemove', this.onMouseMove);
	      document.addEventListener('touchmove', this.onTouchMove);
	      this.setState(SplitPane.setSize(this.props, this.state));
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      document.removeEventListener('mouseup', this.onMouseUp);
	      document.removeEventListener('mousemove', this.onMouseMove);
	      document.removeEventListener('touchmove', this.onTouchMove);
	    }
	  }, {
	    key: 'onMouseDown',
	    value: function onMouseDown(event) {
	      var eventWithTouches = Object.assign({}, event, {
	        touches: [{ clientX: event.clientX, clientY: event.clientY }]
	      });
	      this.onTouchStart(eventWithTouches);
	    }
	  }, {
	    key: 'onTouchStart',
	    value: function onTouchStart(event) {
	      var _props = this.props,
	          allowResize = _props.allowResize,
	          onDragStarted = _props.onDragStarted,
	          split = _props.split;

	      if (allowResize) {
	        unFocus(document, window);
	        var position = split === 'vertical' ? event.touches[0].clientX : event.touches[0].clientY;

	        if (typeof onDragStarted === 'function') {
	          onDragStarted();
	        }
	        this.setState({
	          active: true,
	          position: position
	        });
	      }
	    }
	  }, {
	    key: 'onMouseMove',
	    value: function onMouseMove(event) {
	      var eventWithTouches = Object.assign({}, event, {
	        touches: [{ clientX: event.clientX, clientY: event.clientY }]
	      });
	      this.onTouchMove(eventWithTouches);
	    }
	  }, {
	    key: 'onTouchMove',
	    value: function onTouchMove(event) {
	      var _props2 = this.props,
	          allowResize = _props2.allowResize,
	          maxSize = _props2.maxSize,
	          minSize = _props2.minSize,
	          onChange = _props2.onChange,
	          split = _props2.split,
	          step = _props2.step;
	      var _state = this.state,
	          active = _state.active,
	          position = _state.position;


	      if (allowResize && active) {
	        unFocus(document, window);
	        var isPrimaryFirst = this.props.primary === 'first';
	        var ref = isPrimaryFirst ? this.pane1 : this.pane2;
	        var ref2 = isPrimaryFirst ? this.pane2 : this.pane1;
	        if (ref) {
	          var node = ref;
	          var node2 = ref2;

	          if (node.getBoundingClientRect) {
	            var width = node.getBoundingClientRect().width;
	            var height = node.getBoundingClientRect().height;
	            var current = split === 'vertical' ? event.touches[0].clientX : event.touches[0].clientY;
	            var size = split === 'vertical' ? width : height;
	            var positionDelta = position - current;
	            if (step) {
	              if (Math.abs(positionDelta) < step) {
	                return;
	              }
	              // Integer division
	              // eslint-disable-next-line no-bitwise
	              positionDelta = ~~(positionDelta / step) * step;
	            }
	            var sizeDelta = isPrimaryFirst ? positionDelta : -positionDelta;

	            var pane1Order = parseInt(window.getComputedStyle(node).order);
	            var pane2Order = parseInt(window.getComputedStyle(node2).order);
	            if (pane1Order > pane2Order) {
	              sizeDelta = -sizeDelta;
	            }

	            var newMaxSize = maxSize;
	            if (maxSize !== undefined && maxSize <= 0) {
	              var splitPane = this.splitPane;
	              if (split === 'vertical') {
	                newMaxSize = splitPane.getBoundingClientRect().width + maxSize;
	              } else {
	                newMaxSize = splitPane.getBoundingClientRect().height + maxSize;
	              }
	            }

	            var newSize = size - sizeDelta;
	            var newPosition = position - positionDelta;

	            if (newSize < minSize) {
	              newSize = minSize;
	            } else if (maxSize !== undefined && newSize > newMaxSize) {
	              newSize = newMaxSize;
	            } else {
	              this.setState({
	                position: newPosition,
	                resized: true
	              });
	            }

	            if (onChange) onChange(newSize);

	            this.setState(defineProperty({
	              draggedSize: newSize
	            }, isPrimaryFirst ? 'pane1Size' : 'pane2Size', newSize));
	          }
	        }
	      }
	    }
	  }, {
	    key: 'onMouseUp',
	    value: function onMouseUp() {
	      var _props3 = this.props,
	          allowResize = _props3.allowResize,
	          onDragFinished = _props3.onDragFinished;
	      var _state2 = this.state,
	          active = _state2.active,
	          draggedSize = _state2.draggedSize;

	      if (allowResize && active) {
	        if (typeof onDragFinished === 'function') {
	          onDragFinished(draggedSize);
	        }
	        this.setState({ active: false });
	      }
	    }

	    // TODO: find a more elegant way to fix this. memoize calls to setSize?
	    // we have to check values since gDSFP is called on every render

	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props4 = this.props,
	          allowResize = _props4.allowResize,
	          children = _props4.children,
	          className = _props4.className,
	          onResizerClick = _props4.onResizerClick,
	          onResizerDoubleClick = _props4.onResizerDoubleClick,
	          paneClassName = _props4.paneClassName,
	          pane1ClassName = _props4.pane1ClassName,
	          pane2ClassName = _props4.pane2ClassName,
	          paneStyle = _props4.paneStyle,
	          pane1StyleProps = _props4.pane1Style,
	          pane2StyleProps = _props4.pane2Style,
	          prefixer = _props4.prefixer,
	          resizerClassName = _props4.resizerClassName,
	          resizerStyle = _props4.resizerStyle,
	          split = _props4.split,
	          styleProps = _props4.style;
	      var _state3 = this.state,
	          pane1Size = _state3.pane1Size,
	          pane2Size = _state3.pane2Size;


	      var disabledClass = allowResize ? '' : 'disabled';
	      var resizerClassNamesIncludingDefault = resizerClassName ? resizerClassName + ' ' + RESIZER_DEFAULT_CLASSNAME : resizerClassName;

	      var style = Object.assign({}, {
	        display: 'flex',
	        flex: 1,
	        height: '100%',
	        position: 'absolute',
	        outline: 'none',
	        overflow: 'hidden',
	        MozUserSelect: 'text',
	        WebkitUserSelect: 'text',
	        msUserSelect: 'text',
	        userSelect: 'text'
	      }, styleProps || {});

	      if (split === 'vertical') {
	        Object.assign(style, {
	          flexDirection: 'row',
	          left: 0,
	          right: 0
	        });
	      } else {
	        Object.assign(style, {
	          bottom: 0,
	          flexDirection: 'column',
	          minHeight: '100%',
	          top: 0,
	          width: '100%'
	        });
	      }

	      var classes = ['SplitPane', className, split, disabledClass];
	      var pane1Style = prefixer.prefix(Object.assign({}, paneStyle || {}, pane1StyleProps || {}));
	      var pane2Style = prefixer.prefix(Object.assign({}, paneStyle || {}, pane2StyleProps || {}));

	      var pane1Classes = ['Pane1', paneClassName, pane1ClassName].join(' ');
	      var pane2Classes = ['Pane2', paneClassName, pane2ClassName].join(' ');

	      return React.createElement(
	        'div',
	        {
	          className: classes.join(' '),
	          ref: function ref(node) {
	            _this2.splitPane = node;
	          },
	          style: prefixer.prefix(style)
	        },
	        React.createElement(
	          Pane,
	          {
	            className: pane1Classes,
	            key: 'pane1',
	            eleRef: function eleRef(node) {
	              _this2.pane1 = node;
	            },
	            size: pane1Size,
	            split: split,
	            style: pane1Style
	          },
	          children[0]
	        ),
	        React.createElement(Resizer, {
	          className: disabledClass,
	          onClick: onResizerClick,
	          onDoubleClick: onResizerDoubleClick,
	          onMouseDown: this.onMouseDown,
	          onTouchStart: this.onTouchStart,
	          onTouchEnd: this.onMouseUp,
	          key: 'resizer',
	          resizerClassName: resizerClassNamesIncludingDefault,
	          split: split,
	          style: resizerStyle || {}
	        }),
	        React.createElement(
	          Pane,
	          {
	            className: pane2Classes,
	            key: 'pane2',
	            eleRef: function eleRef(node) {
	              _this2.pane2 = node;
	            },
	            size: pane2Size,
	            split: split,
	            style: pane2Style
	          },
	          children[1]
	        )
	      );
	    }
	  }], [{
	    key: 'getDerivedStateFromProps',
	    value: function getDerivedStateFromProps(nextProps, prevState) {
	      return SplitPane.setSize(nextProps, prevState);
	    }
	  }, {
	    key: 'setSize',
	    value: function setSize(props, state) {
	      var instanceProps = state.instanceProps;

	      var newState = {};

	      var newSize = props.size !== undefined ? props.size : getDefaultSize(props.defaultSize, props.minSize, props.maxSize, state.draggedSize);

	      var defaultSizeChanged = props.defaultSize !== instanceProps.defaultSize || props.minSize !== instanceProps.minSize || props.maxSize !== instanceProps.maxSize;

	      var shouldUpdateSize = props.size !== undefined ? props.size !== instanceProps.size : defaultSizeChanged;

	      if (props.size !== undefined && props.size !== state.draggedSize && shouldUpdateSize) {
	        newState.draggedSize = newSize;
	      }

	      var isPanel1Primary = props.primary === 'first';

	      if (shouldUpdateSize || props.primary !== state.instanceProps.primary) {
	        newState[isPanel1Primary ? 'pane1Size' : 'pane2Size'] = newSize;
	      }

	      // unset the size on the non primary panel
	      if (props.primary !== state.instanceProps.primary) {
	        newState[isPanel1Primary ? 'pane2Size' : 'pane1Size'] = undefined;
	      }

	      // update the values in instanceProps
	      instanceProps.primary = props.primary;
	      instanceProps.size = props.size;
	      instanceProps.defaultSize = props.defaultSize;
	      instanceProps.minSize = props.minSize;
	      instanceProps.maxSize = props.maxSize;

	      newState.instanceProps = instanceProps;

	      return newState;
	    }
	  }]);
	  return SplitPane;
	}(React.Component);

	SplitPane.propTypes = {
	  allowResize: PropTypes.bool,
	  children: PropTypes.arrayOf(PropTypes.node).isRequired,
	  className: PropTypes.string,
	  primary: PropTypes.oneOf(['first', 'second']),
	  minSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
	  maxSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
	  // eslint-disable-next-line react/no-unused-prop-types
	  defaultSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
	  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
	  split: PropTypes.oneOf(['vertical', 'horizontal']),
	  onDragStarted: PropTypes.func,
	  onDragFinished: PropTypes.func,
	  onChange: PropTypes.func,
	  onResizerClick: PropTypes.func,
	  onResizerDoubleClick: PropTypes.func,
	  prefixer: PropTypes.instanceOf(Prefixer).isRequired,
	  style: stylePropType,
	  resizerStyle: stylePropType,
	  paneClassName: PropTypes.string,
	  pane1ClassName: PropTypes.string,
	  pane2ClassName: PropTypes.string,
	  paneStyle: stylePropType,
	  pane1Style: stylePropType,
	  pane2Style: stylePropType,
	  resizerClassName: PropTypes.string,
	  step: PropTypes.number
	};

	SplitPane.defaultProps = {
	  allowResize: true,
	  minSize: 50,
	  prefixer: new Prefixer({ userAgent: USER_AGENT$2 }),
	  primary: 'first',
	  split: 'vertical',
	  paneClassName: '',
	  pane1ClassName: '',
	  pane2ClassName: ''
	};

	polyfill(SplitPane);

	module.exports = SplitPane;


/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createPrefixer = __webpack_require__(74);

	var _createPrefixer2 = _interopRequireDefault(_createPrefixer);

	var _cursor = __webpack_require__(83);

	var _cursor2 = _interopRequireDefault(_cursor);

	var _crossFade = __webpack_require__(85);

	var _crossFade2 = _interopRequireDefault(_crossFade);

	var _filter = __webpack_require__(86);

	var _filter2 = _interopRequireDefault(_filter);

	var _flex = __webpack_require__(87);

	var _flex2 = _interopRequireDefault(_flex);

	var _flexboxOld = __webpack_require__(88);

	var _flexboxOld2 = _interopRequireDefault(_flexboxOld);

	var _gradient = __webpack_require__(89);

	var _gradient2 = _interopRequireDefault(_gradient);

	var _imageSet = __webpack_require__(90);

	var _imageSet2 = _interopRequireDefault(_imageSet);

	var _position = __webpack_require__(91);

	var _position2 = _interopRequireDefault(_position);

	var _sizing = __webpack_require__(92);

	var _sizing2 = _interopRequireDefault(_sizing);

	var _transition = __webpack_require__(93);

	var _transition2 = _interopRequireDefault(_transition);

	var _static = __webpack_require__(96);

	var _static2 = _interopRequireDefault(_static);

	var _dynamicData = __webpack_require__(111);

	var _dynamicData2 = _interopRequireDefault(_dynamicData);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var plugins = [_crossFade2.default, _cursor2.default, _filter2.default, _flexboxOld2.default, _gradient2.default, _imageSet2.default, _position2.default, _sizing2.default, _transition2.default, _flex2.default];

	var Prefixer = (0, _createPrefixer2.default)({
	  prefixMap: _dynamicData2.default.prefixMap,
	  plugins: plugins
	}, _static2.default);
	exports.default = Prefixer;
	module.exports = exports['default'];

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	exports.default = createPrefixer;

	var _getBrowserInformation = __webpack_require__(75);

	var _getBrowserInformation2 = _interopRequireDefault(_getBrowserInformation);

	var _getPrefixedKeyframes = __webpack_require__(78);

	var _getPrefixedKeyframes2 = _interopRequireDefault(_getPrefixedKeyframes);

	var _capitalizeString = __webpack_require__(79);

	var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

	var _addNewValuesOnly = __webpack_require__(80);

	var _addNewValuesOnly2 = _interopRequireDefault(_addNewValuesOnly);

	var _isObject = __webpack_require__(81);

	var _isObject2 = _interopRequireDefault(_isObject);

	var _prefixValue = __webpack_require__(82);

	var _prefixValue2 = _interopRequireDefault(_prefixValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function createPrefixer(_ref) {
	  var prefixMap = _ref.prefixMap,
	      plugins = _ref.plugins;
	  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (style) {
	    return style;
	  };

	  return function () {
	    /**
	    * Instantiante a new prefixer
	    * @param {string} userAgent - userAgent to gather prefix information according to caniuse.com
	    * @param {string} keepUnprefixed - keeps unprefixed properties and values
	    */
	    function Prefixer() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	      _classCallCheck(this, Prefixer);

	      var defaultUserAgent = typeof navigator !== 'undefined' ? navigator.userAgent : undefined;

	      this._userAgent = options.userAgent || defaultUserAgent;
	      this._keepUnprefixed = options.keepUnprefixed || false;

	      if (this._userAgent) {
	        this._browserInfo = (0, _getBrowserInformation2.default)(this._userAgent);
	      }

	      // Checks if the userAgent was resolved correctly
	      if (this._browserInfo && this._browserInfo.cssPrefix) {
	        this.prefixedKeyframes = (0, _getPrefixedKeyframes2.default)(this._browserInfo.browserName, this._browserInfo.browserVersion, this._browserInfo.cssPrefix);
	      } else {
	        this._useFallback = true;
	        return false;
	      }

	      var prefixData = this._browserInfo.browserName && prefixMap[this._browserInfo.browserName];
	      if (prefixData) {
	        this._requiresPrefix = {};

	        for (var property in prefixData) {
	          if (prefixData[property] >= this._browserInfo.browserVersion) {
	            this._requiresPrefix[property] = true;
	          }
	        }

	        this._hasPropsRequiringPrefix = Object.keys(this._requiresPrefix).length > 0;
	      } else {
	        this._useFallback = true;
	      }

	      this._metaData = {
	        browserVersion: this._browserInfo.browserVersion,
	        browserName: this._browserInfo.browserName,
	        cssPrefix: this._browserInfo.cssPrefix,
	        jsPrefix: this._browserInfo.jsPrefix,
	        keepUnprefixed: this._keepUnprefixed,
	        requiresPrefix: this._requiresPrefix
	      };
	    }

	    _createClass(Prefixer, [{
	      key: 'prefix',
	      value: function prefix(style) {
	        // use static prefixer as fallback if userAgent can not be resolved
	        if (this._useFallback) {
	          return fallback(style);
	        }

	        // only add prefixes if needed
	        if (!this._hasPropsRequiringPrefix) {
	          return style;
	        }

	        return this._prefixStyle(style);
	      }
	    }, {
	      key: '_prefixStyle',
	      value: function _prefixStyle(style) {
	        for (var property in style) {
	          var value = style[property];

	          // handle nested objects
	          if ((0, _isObject2.default)(value)) {
	            style[property] = this.prefix(value);
	            // handle array values
	          } else if (Array.isArray(value)) {
	            var combinedValue = [];

	            for (var i = 0, len = value.length; i < len; ++i) {
	              var processedValue = (0, _prefixValue2.default)(plugins, property, value[i], style, this._metaData);
	              (0, _addNewValuesOnly2.default)(combinedValue, processedValue || value[i]);
	            }

	            // only modify the value if it was touched
	            // by any plugin to prevent unnecessary mutations
	            if (combinedValue.length > 0) {
	              style[property] = combinedValue;
	            }
	          } else {
	            var _processedValue = (0, _prefixValue2.default)(plugins, property, value, style, this._metaData);

	            // only modify the value if it was touched
	            // by any plugin to prevent unnecessary mutations
	            if (_processedValue) {
	              style[property] = _processedValue;
	            }

	            // add prefixes to properties
	            if (this._requiresPrefix.hasOwnProperty(property)) {
	              style[this._browserInfo.jsPrefix + (0, _capitalizeString2.default)(property)] = value;
	              if (!this._keepUnprefixed) {
	                delete style[property];
	              }
	            }
	          }
	        }

	        return style;
	      }

	      /**
	      * Returns a prefixed version of the style object using all vendor prefixes
	      * @param {Object} styles - Style object that gets prefixed properties added
	      * @returns {Object} - Style object with prefixed properties and values
	      */

	    }], [{
	      key: 'prefixAll',
	      value: function prefixAll(styles) {
	        return fallback(styles);
	      }
	    }]);

	    return Prefixer;
	  }();
	}
	module.exports = exports['default'];

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = getBrowserInformation;

	var _bowser = __webpack_require__(76);

	var _bowser2 = _interopRequireDefault(_bowser);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var prefixByBrowser = {
	  chrome: 'Webkit',
	  safari: 'Webkit',
	  ios: 'Webkit',
	  android: 'Webkit',
	  phantom: 'Webkit',
	  opera: 'Webkit',
	  webos: 'Webkit',
	  blackberry: 'Webkit',
	  bada: 'Webkit',
	  tizen: 'Webkit',
	  chromium: 'Webkit',
	  vivaldi: 'Webkit',
	  firefox: 'Moz',
	  seamoney: 'Moz',
	  sailfish: 'Moz',
	  msie: 'ms',
	  msedge: 'ms'
	};


	var browserByCanIuseAlias = {
	  chrome: 'chrome',
	  chromium: 'chrome',
	  safari: 'safari',
	  firfox: 'firefox',
	  msedge: 'edge',
	  opera: 'opera',
	  vivaldi: 'opera',
	  msie: 'ie'
	};

	function getBrowserName(browserInfo) {
	  if (browserInfo.firefox) {
	    return 'firefox';
	  }

	  if (browserInfo.mobile || browserInfo.tablet) {
	    if (browserInfo.ios) {
	      return 'ios_saf';
	    } else if (browserInfo.android) {
	      return 'android';
	    } else if (browserInfo.opera) {
	      return 'op_mini';
	    }
	  }

	  for (var browser in browserByCanIuseAlias) {
	    if (browserInfo.hasOwnProperty(browser)) {
	      return browserByCanIuseAlias[browser];
	    }
	  }
	}

	/**
	 * Uses bowser to get default browser browserInformation such as version and name
	 * Evaluates bowser browserInfo and adds vendorPrefix browserInformation
	 * @param {string} userAgent - userAgent that gets evaluated
	 */
	function getBrowserInformation(userAgent) {
	  var browserInfo = _bowser2.default._detect(userAgent);

	  if (browserInfo.yandexbrowser) {
	    browserInfo = _bowser2.default._detect(userAgent.replace(/YaBrowser\/[0-9.]*/, ''));
	  }

	  for (var browser in prefixByBrowser) {
	    if (browserInfo.hasOwnProperty(browser)) {
	      var prefix = prefixByBrowser[browser];

	      browserInfo.jsPrefix = prefix;
	      browserInfo.cssPrefix = '-' + prefix.toLowerCase() + '-';
	      break;
	    }
	  }

	  browserInfo.browserName = getBrowserName(browserInfo);

	  // For cordova IOS 8 the version is missing, set truncated osversion to prevent NaN
	  if (browserInfo.version) {
	    browserInfo.browserVersion = parseFloat(browserInfo.version);
	  } else {
	    browserInfo.browserVersion = parseInt(parseFloat(browserInfo.osversion), 10);
	  }

	  browserInfo.osVersion = parseFloat(browserInfo.osversion);

	  // iOS forces all browsers to use Safari under the hood
	  // as the Safari version seems to match the iOS version
	  // we just explicitely use the osversion instead
	  // https://github.com/rofrischmann/inline-style-prefixer/issues/72
	  if (browserInfo.browserName === 'ios_saf' && browserInfo.browserVersion > browserInfo.osVersion) {
	    browserInfo.browserVersion = browserInfo.osVersion;
	  }

	  // seperate native android chrome
	  // https://github.com/rofrischmann/inline-style-prefixer/issues/45
	  if (browserInfo.browserName === 'android' && browserInfo.chrome && browserInfo.browserVersion > 37) {
	    browserInfo.browserName = 'and_chr';
	  }

	  // For android < 4.4 we want to check the osversion
	  // not the chrome version, see issue #26
	  // https://github.com/rofrischmann/inline-style-prefixer/issues/26
	  if (browserInfo.browserName === 'android' && browserInfo.osVersion < 5) {
	    browserInfo.browserVersion = browserInfo.osVersion;
	  }

	  // Samsung browser are basically build on Chrome > 44
	  // https://github.com/rofrischmann/inline-style-prefixer/issues/102
	  if (browserInfo.browserName === 'android' && browserInfo.samsungBrowser) {
	    browserInfo.browserName = 'and_chr';
	    browserInfo.browserVersion = 44;
	  }

	  return browserInfo;
	}
	module.exports = exports['default'];

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Bowser - a browser detector
	 * https://github.com/ded/bowser
	 * MIT License | (c) Dustin Diaz 2015
	 */

	!function (root, name, definition) {
	  if (typeof module != 'undefined' && module.exports) module.exports = definition()
	  else if (true) __webpack_require__(77)(name, definition)
	  else root[name] = definition()
	}(this, 'bowser', function () {
	  /**
	    * See useragents.js for examples of navigator.userAgent
	    */

	  var t = true

	  function detect(ua) {

	    function getFirstMatch(regex) {
	      var match = ua.match(regex);
	      return (match && match.length > 1 && match[1]) || '';
	    }

	    function getSecondMatch(regex) {
	      var match = ua.match(regex);
	      return (match && match.length > 1 && match[2]) || '';
	    }

	    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()
	      , likeAndroid = /like android/i.test(ua)
	      , android = !likeAndroid && /android/i.test(ua)
	      , nexusMobile = /nexus\s*[0-6]\s*/i.test(ua)
	      , nexusTablet = !nexusMobile && /nexus\s*[0-9]+/i.test(ua)
	      , chromeos = /CrOS/.test(ua)
	      , silk = /silk/i.test(ua)
	      , sailfish = /sailfish/i.test(ua)
	      , tizen = /tizen/i.test(ua)
	      , webos = /(web|hpw)(o|0)s/i.test(ua)
	      , windowsphone = /windows phone/i.test(ua)
	      , samsungBrowser = /SamsungBrowser/i.test(ua)
	      , windows = !windowsphone && /windows/i.test(ua)
	      , mac = !iosdevice && !silk && /macintosh/i.test(ua)
	      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)
	      , edgeVersion = getSecondMatch(/edg([ea]|ios)\/(\d+(\.\d+)?)/i)
	      , versionIdentifier = getFirstMatch(/version\/(\d+(\.\d+)?)/i)
	      , tablet = /tablet/i.test(ua) && !/tablet pc/i.test(ua)
	      , mobile = !tablet && /[^-]mobi/i.test(ua)
	      , xbox = /xbox/i.test(ua)
	      , result

	    if (/opera/i.test(ua)) {
	      //  an old Opera
	      result = {
	        name: 'Opera'
	      , opera: t
	      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\s\/](\d+(\.\d+)?)/i)
	      }
	    } else if (/opr\/|opios/i.test(ua)) {
	      // a new Opera
	      result = {
	        name: 'Opera'
	        , opera: t
	        , version: getFirstMatch(/(?:opr|opios)[\s\/](\d+(\.\d+)?)/i) || versionIdentifier
	      }
	    }
	    else if (/SamsungBrowser/i.test(ua)) {
	      result = {
	        name: 'Samsung Internet for Android'
	        , samsungBrowser: t
	        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\s\/](\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/Whale/i.test(ua)) {
	      result = {
	        name: 'NAVER Whale browser'
	        , whale: t
	        , version: getFirstMatch(/(?:whale)[\s\/](\d+(?:\.\d+)+)/i)
	      }
	    }
	    else if (/MZBrowser/i.test(ua)) {
	      result = {
	        name: 'MZ Browser'
	        , mzbrowser: t
	        , version: getFirstMatch(/(?:MZBrowser)[\s\/](\d+(?:\.\d+)+)/i)
	      }
	    }
	    else if (/coast/i.test(ua)) {
	      result = {
	        name: 'Opera Coast'
	        , coast: t
	        , version: versionIdentifier || getFirstMatch(/(?:coast)[\s\/](\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/focus/i.test(ua)) {
	      result = {
	        name: 'Focus'
	        , focus: t
	        , version: getFirstMatch(/(?:focus)[\s\/](\d+(?:\.\d+)+)/i)
	      }
	    }
	    else if (/yabrowser/i.test(ua)) {
	      result = {
	        name: 'Yandex Browser'
	      , yandexbrowser: t
	      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\s\/](\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/ucbrowser/i.test(ua)) {
	      result = {
	          name: 'UC Browser'
	        , ucbrowser: t
	        , version: getFirstMatch(/(?:ucbrowser)[\s\/](\d+(?:\.\d+)+)/i)
	      }
	    }
	    else if (/mxios/i.test(ua)) {
	      result = {
	        name: 'Maxthon'
	        , maxthon: t
	        , version: getFirstMatch(/(?:mxios)[\s\/](\d+(?:\.\d+)+)/i)
	      }
	    }
	    else if (/epiphany/i.test(ua)) {
	      result = {
	        name: 'Epiphany'
	        , epiphany: t
	        , version: getFirstMatch(/(?:epiphany)[\s\/](\d+(?:\.\d+)+)/i)
	      }
	    }
	    else if (/puffin/i.test(ua)) {
	      result = {
	        name: 'Puffin'
	        , puffin: t
	        , version: getFirstMatch(/(?:puffin)[\s\/](\d+(?:\.\d+)?)/i)
	      }
	    }
	    else if (/sleipnir/i.test(ua)) {
	      result = {
	        name: 'Sleipnir'
	        , sleipnir: t
	        , version: getFirstMatch(/(?:sleipnir)[\s\/](\d+(?:\.\d+)+)/i)
	      }
	    }
	    else if (/k-meleon/i.test(ua)) {
	      result = {
	        name: 'K-Meleon'
	        , kMeleon: t
	        , version: getFirstMatch(/(?:k-meleon)[\s\/](\d+(?:\.\d+)+)/i)
	      }
	    }
	    else if (windowsphone) {
	      result = {
	        name: 'Windows Phone'
	      , osname: 'Windows Phone'
	      , windowsphone: t
	      }
	      if (edgeVersion) {
	        result.msedge = t
	        result.version = edgeVersion
	      }
	      else {
	        result.msie = t
	        result.version = getFirstMatch(/iemobile\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/msie|trident/i.test(ua)) {
	      result = {
	        name: 'Internet Explorer'
	      , msie: t
	      , version: getFirstMatch(/(?:msie |rv:)(\d+(\.\d+)?)/i)
	      }
	    } else if (chromeos) {
	      result = {
	        name: 'Chrome'
	      , osname: 'Chrome OS'
	      , chromeos: t
	      , chromeBook: t
	      , chrome: t
	      , version: getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)
	      }
	    } else if (/edg([ea]|ios)/i.test(ua)) {
	      result = {
	        name: 'Microsoft Edge'
	      , msedge: t
	      , version: edgeVersion
	      }
	    }
	    else if (/vivaldi/i.test(ua)) {
	      result = {
	        name: 'Vivaldi'
	        , vivaldi: t
	        , version: getFirstMatch(/vivaldi\/(\d+(\.\d+)?)/i) || versionIdentifier
	      }
	    }
	    else if (sailfish) {
	      result = {
	        name: 'Sailfish'
	      , osname: 'Sailfish OS'
	      , sailfish: t
	      , version: getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/seamonkey\//i.test(ua)) {
	      result = {
	        name: 'SeaMonkey'
	      , seamonkey: t
	      , version: getFirstMatch(/seamonkey\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/firefox|iceweasel|fxios/i.test(ua)) {
	      result = {
	        name: 'Firefox'
	      , firefox: t
	      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \/](\d+(\.\d+)?)/i)
	      }
	      if (/\((mobile|tablet);[^\)]*rv:[\d\.]+\)/i.test(ua)) {
	        result.firefoxos = t
	        result.osname = 'Firefox OS'
	      }
	    }
	    else if (silk) {
	      result =  {
	        name: 'Amazon Silk'
	      , silk: t
	      , version : getFirstMatch(/silk\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/phantom/i.test(ua)) {
	      result = {
	        name: 'PhantomJS'
	      , phantom: t
	      , version: getFirstMatch(/phantomjs\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/slimerjs/i.test(ua)) {
	      result = {
	        name: 'SlimerJS'
	        , slimer: t
	        , version: getFirstMatch(/slimerjs\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/blackberry|\bbb\d+/i.test(ua) || /rim\stablet/i.test(ua)) {
	      result = {
	        name: 'BlackBerry'
	      , osname: 'BlackBerry OS'
	      , blackberry: t
	      , version: versionIdentifier || getFirstMatch(/blackberry[\d]+\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (webos) {
	      result = {
	        name: 'WebOS'
	      , osname: 'WebOS'
	      , webos: t
	      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\/(\d+(\.\d+)?)/i)
	      };
	      /touchpad\//i.test(ua) && (result.touchpad = t)
	    }
	    else if (/bada/i.test(ua)) {
	      result = {
	        name: 'Bada'
	      , osname: 'Bada'
	      , bada: t
	      , version: getFirstMatch(/dolfin\/(\d+(\.\d+)?)/i)
	      };
	    }
	    else if (tizen) {
	      result = {
	        name: 'Tizen'
	      , osname: 'Tizen'
	      , tizen: t
	      , version: getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.\d+)?)/i) || versionIdentifier
	      };
	    }
	    else if (/qupzilla/i.test(ua)) {
	      result = {
	        name: 'QupZilla'
	        , qupzilla: t
	        , version: getFirstMatch(/(?:qupzilla)[\s\/](\d+(?:\.\d+)+)/i) || versionIdentifier
	      }
	    }
	    else if (/chromium/i.test(ua)) {
	      result = {
	        name: 'Chromium'
	        , chromium: t
	        , version: getFirstMatch(/(?:chromium)[\s\/](\d+(?:\.\d+)?)/i) || versionIdentifier
	      }
	    }
	    else if (/chrome|crios|crmo/i.test(ua)) {
	      result = {
	        name: 'Chrome'
	        , chrome: t
	        , version: getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (android) {
	      result = {
	        name: 'Android'
	        , version: versionIdentifier
	      }
	    }
	    else if (/safari|applewebkit/i.test(ua)) {
	      result = {
	        name: 'Safari'
	      , safari: t
	      }
	      if (versionIdentifier) {
	        result.version = versionIdentifier
	      }
	    }
	    else if (iosdevice) {
	      result = {
	        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'
	      }
	      // WTF: version is not part of user agent in web apps
	      if (versionIdentifier) {
	        result.version = versionIdentifier
	      }
	    }
	    else if(/googlebot/i.test(ua)) {
	      result = {
	        name: 'Googlebot'
	      , googlebot: t
	      , version: getFirstMatch(/googlebot\/(\d+(\.\d+))/i) || versionIdentifier
	      }
	    }
	    else {
	      result = {
	        name: getFirstMatch(/^(.*)\/(.*) /),
	        version: getSecondMatch(/^(.*)\/(.*) /)
	     };
	   }

	    // set webkit or gecko flag for browsers based on these engines
	    if (!result.msedge && /(apple)?webkit/i.test(ua)) {
	      if (/(apple)?webkit\/537\.36/i.test(ua)) {
	        result.name = result.name || "Blink"
	        result.blink = t
	      } else {
	        result.name = result.name || "Webkit"
	        result.webkit = t
	      }
	      if (!result.version && versionIdentifier) {
	        result.version = versionIdentifier
	      }
	    } else if (!result.opera && /gecko\//i.test(ua)) {
	      result.name = result.name || "Gecko"
	      result.gecko = t
	      result.version = result.version || getFirstMatch(/gecko\/(\d+(\.\d+)?)/i)
	    }

	    // set OS flags for platforms that have multiple browsers
	    if (!result.windowsphone && (android || result.silk)) {
	      result.android = t
	      result.osname = 'Android'
	    } else if (!result.windowsphone && iosdevice) {
	      result[iosdevice] = t
	      result.ios = t
	      result.osname = 'iOS'
	    } else if (mac) {
	      result.mac = t
	      result.osname = 'macOS'
	    } else if (xbox) {
	      result.xbox = t
	      result.osname = 'Xbox'
	    } else if (windows) {
	      result.windows = t
	      result.osname = 'Windows'
	    } else if (linux) {
	      result.linux = t
	      result.osname = 'Linux'
	    }

	    function getWindowsVersion (s) {
	      switch (s) {
	        case 'NT': return 'NT'
	        case 'XP': return 'XP'
	        case 'NT 5.0': return '2000'
	        case 'NT 5.1': return 'XP'
	        case 'NT 5.2': return '2003'
	        case 'NT 6.0': return 'Vista'
	        case 'NT 6.1': return '7'
	        case 'NT 6.2': return '8'
	        case 'NT 6.3': return '8.1'
	        case 'NT 10.0': return '10'
	        default: return undefined
	      }
	    }

	    // OS version extraction
	    var osVersion = '';
	    if (result.windows) {
	      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i))
	    } else if (result.windowsphone) {
	      osVersion = getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i);
	    } else if (result.mac) {
	      osVersion = getFirstMatch(/Mac OS X (\d+([_\.\s]\d+)*)/i);
	      osVersion = osVersion.replace(/[_\s]/g, '.');
	    } else if (iosdevice) {
	      osVersion = getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i);
	      osVersion = osVersion.replace(/[_\s]/g, '.');
	    } else if (android) {
	      osVersion = getFirstMatch(/android[ \/-](\d+(\.\d+)*)/i);
	    } else if (result.webos) {
	      osVersion = getFirstMatch(/(?:web|hpw)os\/(\d+(\.\d+)*)/i);
	    } else if (result.blackberry) {
	      osVersion = getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i);
	    } else if (result.bada) {
	      osVersion = getFirstMatch(/bada\/(\d+(\.\d+)*)/i);
	    } else if (result.tizen) {
	      osVersion = getFirstMatch(/tizen[\/\s](\d+(\.\d+)*)/i);
	    }
	    if (osVersion) {
	      result.osversion = osVersion;
	    }

	    // device type extraction
	    var osMajorVersion = !result.windows && osVersion.split('.')[0];
	    if (
	         tablet
	      || nexusTablet
	      || iosdevice == 'ipad'
	      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))
	      || result.silk
	    ) {
	      result.tablet = t
	    } else if (
	         mobile
	      || iosdevice == 'iphone'
	      || iosdevice == 'ipod'
	      || android
	      || nexusMobile
	      || result.blackberry
	      || result.webos
	      || result.bada
	    ) {
	      result.mobile = t
	    }

	    // Graded Browser Support
	    // http://developer.yahoo.com/yui/articles/gbs
	    if (result.msedge ||
	        (result.msie && result.version >= 10) ||
	        (result.yandexbrowser && result.version >= 15) ||
			    (result.vivaldi && result.version >= 1.0) ||
	        (result.chrome && result.version >= 20) ||
	        (result.samsungBrowser && result.version >= 4) ||
	        (result.whale && compareVersions([result.version, '1.0']) === 1) ||
	        (result.mzbrowser && compareVersions([result.version, '6.0']) === 1) ||
	        (result.focus && compareVersions([result.version, '1.0']) === 1) ||
	        (result.firefox && result.version >= 20.0) ||
	        (result.safari && result.version >= 6) ||
	        (result.opera && result.version >= 10.0) ||
	        (result.ios && result.osversion && result.osversion.split(".")[0] >= 6) ||
	        (result.blackberry && result.version >= 10.1)
	        || (result.chromium && result.version >= 20)
	        ) {
	      result.a = t;
	    }
	    else if ((result.msie && result.version < 10) ||
	        (result.chrome && result.version < 20) ||
	        (result.firefox && result.version < 20.0) ||
	        (result.safari && result.version < 6) ||
	        (result.opera && result.version < 10.0) ||
	        (result.ios && result.osversion && result.osversion.split(".")[0] < 6)
	        || (result.chromium && result.version < 20)
	        ) {
	      result.c = t
	    } else result.x = t

	    return result
	  }

	  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')

	  bowser.test = function (browserList) {
	    for (var i = 0; i < browserList.length; ++i) {
	      var browserItem = browserList[i];
	      if (typeof browserItem=== 'string') {
	        if (browserItem in bowser) {
	          return true;
	        }
	      }
	    }
	    return false;
	  }

	  /**
	   * Get version precisions count
	   *
	   * @example
	   *   getVersionPrecision("1.10.3") // 3
	   *
	   * @param  {string} version
	   * @return {number}
	   */
	  function getVersionPrecision(version) {
	    return version.split(".").length;
	  }

	  /**
	   * Array::map polyfill
	   *
	   * @param  {Array} arr
	   * @param  {Function} iterator
	   * @return {Array}
	   */
	  function map(arr, iterator) {
	    var result = [], i;
	    if (Array.prototype.map) {
	      return Array.prototype.map.call(arr, iterator);
	    }
	    for (i = 0; i < arr.length; i++) {
	      result.push(iterator(arr[i]));
	    }
	    return result;
	  }

	  /**
	   * Calculate browser version weight
	   *
	   * @example
	   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1
	   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1
	   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0
	   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1
	   *
	   * @param  {Array<String>} versions versions to compare
	   * @return {Number} comparison result
	   */
	  function compareVersions(versions) {
	    // 1) get common precision for both versions, for example for "10.0" and "9" it should be 2
	    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));
	    var chunks = map(versions, function (version) {
	      var delta = precision - getVersionPrecision(version);

	      // 2) "9" -> "9.0" (for precision = 2)
	      version = version + new Array(delta + 1).join(".0");

	      // 3) "9.0" -> ["000000000"", "000000009"]
	      return map(version.split("."), function (chunk) {
	        return new Array(20 - chunk.length).join("0") + chunk;
	      }).reverse();
	    });

	    // iterate in reverse order by reversed chunks array
	    while (--precision >= 0) {
	      // 4) compare: "000000009" > "000000010" = false (but "9" > "10" = true)
	      if (chunks[0][precision] > chunks[1][precision]) {
	        return 1;
	      }
	      else if (chunks[0][precision] === chunks[1][precision]) {
	        if (precision === 0) {
	          // all version chunks are same
	          return 0;
	        }
	      }
	      else {
	        return -1;
	      }
	    }
	  }

	  /**
	   * Check if browser is unsupported
	   *
	   * @example
	   *   bowser.isUnsupportedBrowser({
	   *     msie: "10",
	   *     firefox: "23",
	   *     chrome: "29",
	   *     safari: "5.1",
	   *     opera: "16",
	   *     phantom: "534"
	   *   });
	   *
	   * @param  {Object}  minVersions map of minimal version to browser
	   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map
	   * @param  {String}  [ua] user agent string
	   * @return {Boolean}
	   */
	  function isUnsupportedBrowser(minVersions, strictMode, ua) {
	    var _bowser = bowser;

	    // make strictMode param optional with ua param usage
	    if (typeof strictMode === 'string') {
	      ua = strictMode;
	      strictMode = void(0);
	    }

	    if (strictMode === void(0)) {
	      strictMode = false;
	    }
	    if (ua) {
	      _bowser = detect(ua);
	    }

	    var version = "" + _bowser.version;
	    for (var browser in minVersions) {
	      if (minVersions.hasOwnProperty(browser)) {
	        if (_bowser[browser]) {
	          if (typeof minVersions[browser] !== 'string') {
	            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));
	          }

	          // browser version and min supported version.
	          return compareVersions([version, minVersions[browser]]) < 0;
	        }
	      }
	    }

	    return strictMode; // not found
	  }

	  /**
	   * Check if browser is supported
	   *
	   * @param  {Object} minVersions map of minimal version to browser
	   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map
	   * @param  {String}  [ua] user agent string
	   * @return {Boolean}
	   */
	  function check(minVersions, strictMode, ua) {
	    return !isUnsupportedBrowser(minVersions, strictMode, ua);
	  }

	  bowser.isUnsupportedBrowser = isUnsupportedBrowser;
	  bowser.compareVersions = compareVersions;
	  bowser.check = check;

	  /*
	   * Set our detect method to the main bowser object so we can
	   * reuse it to test other user agents.
	   * This is needed to implement future tests.
	   */
	  bowser._detect = detect;

	  /*
	   * Set our detect public method to the main bowser object
	   * This is needed to implement bowser in server side
	   */
	  bowser.detect = detect;
	  return bowser
	});


/***/ },
/* 77 */
/***/ function(module, exports) {

	module.exports = function() { throw new Error("define cannot be used indirect"); };


/***/ },
/* 78 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = getPrefixedKeyframes;
	function getPrefixedKeyframes(browserName, browserVersion, cssPrefix) {
	  var prefixedKeyframes = 'keyframes';

	  if (browserName === 'chrome' && browserVersion < 43 || (browserName === 'safari' || browserName === 'ios_saf') && browserVersion < 9 || browserName === 'opera' && browserVersion < 30 || browserName === 'android' && browserVersion <= 4.4 || browserName === 'and_uc') {
	    return cssPrefix + prefixedKeyframes;
	  }
	  return prefixedKeyframes;
	}
	module.exports = exports['default'];

/***/ },
/* 79 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = capitalizeString;
	function capitalizeString(str) {
	  return str.charAt(0).toUpperCase() + str.slice(1);
	}
	module.exports = exports["default"];

/***/ },
/* 80 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = addNewValuesOnly;
	function addIfNew(list, value) {
	  if (list.indexOf(value) === -1) {
	    list.push(value);
	  }
	}

	function addNewValuesOnly(list, values) {
	  if (Array.isArray(values)) {
	    for (var i = 0, len = values.length; i < len; ++i) {
	      addIfNew(list, values[i]);
	    }
	  } else {
	    addIfNew(list, values);
	  }
	}
	module.exports = exports["default"];

/***/ },
/* 81 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isObject;
	function isObject(value) {
	  return value instanceof Object && !Array.isArray(value);
	}
	module.exports = exports["default"];

/***/ },
/* 82 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prefixValue;
	function prefixValue(plugins, property, value, style, metaData) {
	  for (var i = 0, len = plugins.length; i < len; ++i) {
	    var processedValue = plugins[i](property, value, style, metaData);

	    // we can stop processing if a value is returned
	    // as all plugin criteria are unique
	    if (processedValue) {
	      return processedValue;
	    }
	  }
	}
	module.exports = exports["default"];

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = cursor;

	var _getPrefixedValue = __webpack_require__(84);

	var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var grabValues = {
	  grab: true,
	  grabbing: true
	};


	var zoomValues = {
	  'zoom-in': true,
	  'zoom-out': true
	};

	function cursor(property, value, style, _ref) {
	  var browserName = _ref.browserName,
	      browserVersion = _ref.browserVersion,
	      cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed;

	  // adds prefixes for firefox, chrome, safari, and opera regardless of
	  // version until a reliable browser support info can be found
	  // see: https://github.com/rofrischmann/inline-style-prefixer/issues/79
	  if (property === 'cursor' && grabValues[value] && (browserName === 'firefox' || browserName === 'chrome' || browserName === 'safari' || browserName === 'opera')) {
	    return (0, _getPrefixedValue2.default)(cssPrefix + value, value, keepUnprefixed);
	  }

	  if (property === 'cursor' && zoomValues[value] && (browserName === 'firefox' && browserVersion < 24 || browserName === 'chrome' && browserVersion < 37 || browserName === 'safari' && browserVersion < 9 || browserName === 'opera' && browserVersion < 24)) {
	    return (0, _getPrefixedValue2.default)(cssPrefix + value, value, keepUnprefixed);
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 84 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = getPrefixedValue;
	function getPrefixedValue(prefixedValue, value, keepUnprefixed) {
	  if (keepUnprefixed) {
	    return [prefixedValue, value];
	  }
	  return prefixedValue;
	}
	module.exports = exports["default"];

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = crossFade;

	var _getPrefixedValue = __webpack_require__(84);

	var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function crossFade(property, value, style, _ref) {
	  var browserName = _ref.browserName,
	      browserVersion = _ref.browserVersion,
	      cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed;

	  if (typeof value === 'string' && value.indexOf('cross-fade(') > -1 && (browserName === 'chrome' || browserName === 'opera' || browserName === 'and_chr' || (browserName === 'ios_saf' || browserName === 'safari') && browserVersion < 10)) {
	    return (0, _getPrefixedValue2.default)(value.replace(/cross-fade\(/g, cssPrefix + 'cross-fade('), value, keepUnprefixed);
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = filter;

	var _getPrefixedValue = __webpack_require__(84);

	var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function filter(property, value, style, _ref) {
	  var browserName = _ref.browserName,
	      browserVersion = _ref.browserVersion,
	      cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed;

	  if (typeof value === 'string' && value.indexOf('filter(') > -1 && (browserName === 'ios_saf' || browserName === 'safari' && browserVersion < 9.1)) {
	    return (0, _getPrefixedValue2.default)(value.replace(/filter\(/g, cssPrefix + 'filter('), value, keepUnprefixed);
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = flex;

	var _getPrefixedValue = __webpack_require__(84);

	var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var values = {
	  flex: true,
	  'inline-flex': true
	};
	function flex(property, value, style, _ref) {
	  var browserName = _ref.browserName,
	      browserVersion = _ref.browserVersion,
	      cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed;

	  if (property === 'display' && values[value] && (browserName === 'chrome' && browserVersion < 29 && browserVersion > 20 || (browserName === 'safari' || browserName === 'ios_saf') && browserVersion < 9 && browserVersion > 6 || browserName === 'opera' && (browserVersion === 15 || browserVersion === 16))) {
	    return (0, _getPrefixedValue2.default)(cssPrefix + value, value, keepUnprefixed);
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = flexboxOld;

	var _getPrefixedValue = __webpack_require__(84);

	var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var alternativeValues = {
	  'space-around': 'justify',
	  'space-between': 'justify',
	  'flex-start': 'start',
	  'flex-end': 'end',
	  'wrap-reverse': 'multiple',
	  wrap: 'multiple',
	  flex: 'box',
	  'inline-flex': 'inline-box'
	};


	var alternativeProps = {
	  alignItems: 'WebkitBoxAlign',
	  justifyContent: 'WebkitBoxPack',
	  flexWrap: 'WebkitBoxLines'
	};

	var otherProps = ['alignContent', 'alignSelf', 'order', 'flexGrow', 'flexShrink', 'flexBasis', 'flexDirection'];
	var properties = Object.keys(alternativeProps).concat(otherProps);

	function flexboxOld(property, value, style, _ref) {
	  var browserName = _ref.browserName,
	      browserVersion = _ref.browserVersion,
	      cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed,
	      requiresPrefix = _ref.requiresPrefix;

	  if ((properties.indexOf(property) > -1 || property === 'display' && typeof value === 'string' && value.indexOf('flex') > -1) && (browserName === 'firefox' && browserVersion < 22 || browserName === 'chrome' && browserVersion < 21 || (browserName === 'safari' || browserName === 'ios_saf') && browserVersion <= 6.1 || browserName === 'android' && browserVersion < 4.4 || browserName === 'and_uc')) {
	    delete requiresPrefix[property];

	    if (!keepUnprefixed && !Array.isArray(style[property])) {
	      delete style[property];
	    }
	    if (property === 'flexDirection' && typeof value === 'string') {
	      if (value.indexOf('column') > -1) {
	        style.WebkitBoxOrient = 'vertical';
	      } else {
	        style.WebkitBoxOrient = 'horizontal';
	      }
	      if (value.indexOf('reverse') > -1) {
	        style.WebkitBoxDirection = 'reverse';
	      } else {
	        style.WebkitBoxDirection = 'normal';
	      }
	    }
	    if (property === 'display' && alternativeValues.hasOwnProperty(value)) {
	      return (0, _getPrefixedValue2.default)(cssPrefix + alternativeValues[value], value, keepUnprefixed);
	    }
	    if (alternativeProps.hasOwnProperty(property)) {
	      style[alternativeProps[property]] = alternativeValues[value] || value;
	    }
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = gradient;

	var _getPrefixedValue = __webpack_require__(84);

	var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;
	function gradient(property, value, style, _ref) {
	  var browserName = _ref.browserName,
	      browserVersion = _ref.browserVersion,
	      cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed;

	  if (typeof value === 'string' && values.test(value) && (browserName === 'firefox' && browserVersion < 16 || browserName === 'chrome' && browserVersion < 26 || (browserName === 'safari' || browserName === 'ios_saf') && browserVersion < 7 || (browserName === 'opera' || browserName === 'op_mini') && browserVersion < 12.1 || browserName === 'android' && browserVersion < 4.4 || browserName === 'and_uc')) {
	    return (0, _getPrefixedValue2.default)(cssPrefix + value, value, keepUnprefixed);
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = imageSet;

	var _getPrefixedValue = __webpack_require__(84);

	var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function imageSet(property, value, style, _ref) {
	  var browserName = _ref.browserName,
	      cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed;

	  if (typeof value === 'string' && value.indexOf('image-set(') > -1 && (browserName === 'chrome' || browserName === 'opera' || browserName === 'and_chr' || browserName === 'and_uc' || browserName === 'ios_saf' || browserName === 'safari')) {
	    return (0, _getPrefixedValue2.default)(value.replace(/image-set\(/g, cssPrefix + 'image-set('), value, keepUnprefixed);
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = position;

	var _getPrefixedValue = __webpack_require__(84);

	var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function position(property, value, style, _ref) {
	  var browserName = _ref.browserName,
	      cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed;

	  if (property === 'position' && value === 'sticky' && (browserName === 'safari' || browserName === 'ios_saf')) {
	    return (0, _getPrefixedValue2.default)(cssPrefix + value, value, keepUnprefixed);
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = sizing;

	var _getPrefixedValue = __webpack_require__(84);

	var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var properties = {
	  maxHeight: true,
	  maxWidth: true,
	  width: true,
	  height: true,
	  columnWidth: true,
	  minWidth: true,
	  minHeight: true
	};

	var values = {
	  'min-content': true,
	  'max-content': true,
	  'fill-available': true,
	  'fit-content': true,
	  'contain-floats': true

	  // TODO: chrome & opera support it
	};function sizing(property, value, style, _ref) {
	  var cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed;

	  // This might change in the future
	  // Keep an eye on it
	  if (properties.hasOwnProperty(property) && values.hasOwnProperty(value)) {
	    return (0, _getPrefixedValue2.default)(cssPrefix + value, value, keepUnprefixed);
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = transition;

	var _hyphenateProperty = __webpack_require__(94);

	var _hyphenateProperty2 = _interopRequireDefault(_hyphenateProperty);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var properties = {
	  transition: true,
	  transitionProperty: true,
	  WebkitTransition: true,
	  WebkitTransitionProperty: true,
	  MozTransition: true,
	  MozTransitionProperty: true
	};


	var requiresPrefixDashCased = void 0;

	function transition(property, value, style, _ref) {
	  var cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed,
	      requiresPrefix = _ref.requiresPrefix;

	  if (typeof value === 'string' && properties.hasOwnProperty(property)) {
	    // memoize the prefix array for later use
	    if (!requiresPrefixDashCased) {
	      requiresPrefixDashCased = Object.keys(requiresPrefix).map(function (prop) {
	        return (0, _hyphenateProperty2.default)(prop);
	      });
	    }

	    // only split multi values, not cubic beziers
	    var multipleValues = value.split(/,(?![^()]*(?:\([^()]*\))?\))/g);

	    requiresPrefixDashCased.forEach(function (prop) {
	      multipleValues.forEach(function (val, index) {
	        if (val.indexOf(prop) > -1 && prop !== 'order') {
	          multipleValues[index] = val.replace(prop, cssPrefix + prop) + (keepUnprefixed ? ',' + val : '');
	        }
	      });
	    });

	    return multipleValues.join(',');
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = hyphenateProperty;

	var _hyphenateStyleName = __webpack_require__(95);

	var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function hyphenateProperty(property) {
	  return (0, _hyphenateStyleName2.default)(property);
	}
	module.exports = exports['default'];

/***/ },
/* 95 */
/***/ function(module, exports) {

	'use strict';

	var uppercasePattern = /[A-Z]/g;
	var msPattern = /^ms-/;
	var cache = {};

	function hyphenateStyleName(string) {
	    return string in cache
	    ? cache[string]
	    : cache[string] = string
	      .replace(uppercasePattern, '-$&')
	      .toLowerCase()
	      .replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;


/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createPrefixer = __webpack_require__(97);

	var _createPrefixer2 = _interopRequireDefault(_createPrefixer);

	var _staticData = __webpack_require__(99);

	var _staticData2 = _interopRequireDefault(_staticData);

	var _cursor = __webpack_require__(100);

	var _cursor2 = _interopRequireDefault(_cursor);

	var _crossFade = __webpack_require__(101);

	var _crossFade2 = _interopRequireDefault(_crossFade);

	var _filter = __webpack_require__(103);

	var _filter2 = _interopRequireDefault(_filter);

	var _flex = __webpack_require__(104);

	var _flex2 = _interopRequireDefault(_flex);

	var _flexboxOld = __webpack_require__(105);

	var _flexboxOld2 = _interopRequireDefault(_flexboxOld);

	var _gradient = __webpack_require__(106);

	var _gradient2 = _interopRequireDefault(_gradient);

	var _imageSet = __webpack_require__(107);

	var _imageSet2 = _interopRequireDefault(_imageSet);

	var _position = __webpack_require__(108);

	var _position2 = _interopRequireDefault(_position);

	var _sizing = __webpack_require__(109);

	var _sizing2 = _interopRequireDefault(_sizing);

	var _transition = __webpack_require__(110);

	var _transition2 = _interopRequireDefault(_transition);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var plugins = [_crossFade2.default, _cursor2.default, _filter2.default, _flexboxOld2.default, _gradient2.default, _imageSet2.default, _position2.default, _sizing2.default, _transition2.default, _flex2.default];

	exports.default = (0, _createPrefixer2.default)({
	  prefixMap: _staticData2.default.prefixMap,
	  plugins: plugins
	});
	module.exports = exports['default'];

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createPrefixer;

	var _prefixProperty = __webpack_require__(98);

	var _prefixProperty2 = _interopRequireDefault(_prefixProperty);

	var _prefixValue = __webpack_require__(82);

	var _prefixValue2 = _interopRequireDefault(_prefixValue);

	var _addNewValuesOnly = __webpack_require__(80);

	var _addNewValuesOnly2 = _interopRequireDefault(_addNewValuesOnly);

	var _isObject = __webpack_require__(81);

	var _isObject2 = _interopRequireDefault(_isObject);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function createPrefixer(_ref) {
	  var prefixMap = _ref.prefixMap,
	      plugins = _ref.plugins;

	  function prefixAll(style) {
	    for (var property in style) {
	      var value = style[property];

	      // handle nested objects
	      if ((0, _isObject2.default)(value)) {
	        style[property] = prefixAll(value);
	        // handle array values
	      } else if (Array.isArray(value)) {
	        var combinedValue = [];

	        for (var i = 0, len = value.length; i < len; ++i) {
	          var processedValue = (0, _prefixValue2.default)(plugins, property, value[i], style, prefixMap);
	          (0, _addNewValuesOnly2.default)(combinedValue, processedValue || value[i]);
	        }

	        // only modify the value if it was touched
	        // by any plugin to prevent unnecessary mutations
	        if (combinedValue.length > 0) {
	          style[property] = combinedValue;
	        }
	      } else {
	        var _processedValue = (0, _prefixValue2.default)(plugins, property, value, style, prefixMap);

	        // only modify the value if it was touched
	        // by any plugin to prevent unnecessary mutations
	        if (_processedValue) {
	          style[property] = _processedValue;
	        }

	        (0, _prefixProperty2.default)(prefixMap, property, style);
	      }
	    }

	    return style;
	  }

	  return prefixAll;
	}
	module.exports = exports['default'];

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prefixProperty;

	var _capitalizeString = __webpack_require__(79);

	var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function prefixProperty(prefixProperties, property, style) {
	  if (prefixProperties.hasOwnProperty(property)) {
	    var requiredPrefixes = prefixProperties[property];
	    for (var i = 0, len = requiredPrefixes.length; i < len; ++i) {
	      style[requiredPrefixes[i] + (0, _capitalizeString2.default)(property)] = style[property];
	    }
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 99 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var w = ["Webkit"];
	var m = ["Moz"];
	var ms = ["ms"];
	var wm = ["Webkit", "Moz"];
	var wms = ["Webkit", "ms"];
	var wmms = ["Webkit", "Moz", "ms"];

	exports.default = {
	  plugins: [],
	  prefixMap: { "appearance": wm, "userSelect": wmms, "textEmphasisPosition": w, "textEmphasis": w, "textEmphasisStyle": w, "textEmphasisColor": w, "boxDecorationBreak": w, "clipPath": w, "maskImage": w, "maskMode": w, "maskRepeat": w, "maskPosition": w, "maskClip": w, "maskOrigin": w, "maskSize": w, "maskComposite": w, "mask": w, "maskBorderSource": w, "maskBorderMode": w, "maskBorderSlice": w, "maskBorderWidth": w, "maskBorderOutset": w, "maskBorderRepeat": w, "maskBorder": w, "maskType": w, "textDecorationStyle": w, "textDecorationSkip": w, "textDecorationLine": w, "textDecorationColor": w, "filter": w, "fontFeatureSettings": w, "breakAfter": wmms, "breakBefore": wmms, "breakInside": wmms, "columnCount": wm, "columnFill": wm, "columnGap": wm, "columnRule": wm, "columnRuleColor": wm, "columnRuleStyle": wm, "columnRuleWidth": wm, "columns": wm, "columnSpan": wm, "columnWidth": wm, "writingMode": wms, "flex": w, "flexBasis": w, "flexDirection": w, "flexGrow": w, "flexFlow": w, "flexShrink": w, "flexWrap": w, "alignContent": w, "alignItems": w, "alignSelf": w, "justifyContent": w, "order": w, "transform": w, "transformOrigin": w, "transformOriginX": w, "transformOriginY": w, "backfaceVisibility": w, "perspective": w, "perspectiveOrigin": w, "transformStyle": w, "transformOriginZ": w, "animation": w, "animationDelay": w, "animationDirection": w, "animationFillMode": w, "animationDuration": w, "animationIterationCount": w, "animationName": w, "animationPlayState": w, "animationTimingFunction": w, "backdropFilter": w, "fontKerning": w, "scrollSnapType": wms, "scrollSnapPointsX": wms, "scrollSnapPointsY": wms, "scrollSnapDestination": wms, "scrollSnapCoordinate": wms, "shapeImageThreshold": w, "shapeImageMargin": w, "shapeImageOutside": w, "hyphens": wmms, "flowInto": wms, "flowFrom": wms, "regionFragment": wms, "textAlignLast": m, "tabSize": m, "wrapFlow": ms, "wrapThrough": ms, "wrapMargin": ms, "gridTemplateColumns": ms, "gridTemplateRows": ms, "gridTemplateAreas": ms, "gridTemplate": ms, "gridAutoColumns": ms, "gridAutoRows": ms, "gridAutoFlow": ms, "grid": ms, "gridRowStart": ms, "gridColumnStart": ms, "gridRowEnd": ms, "gridRow": ms, "gridColumn": ms, "gridColumnEnd": ms, "gridColumnGap": ms, "gridRowGap": ms, "gridArea": ms, "gridGap": ms, "textSizeAdjust": wms, "borderImage": w, "borderImageOutset": w, "borderImageRepeat": w, "borderImageSlice": w, "borderImageSource": w, "borderImageWidth": w, "transitionDelay": w, "transitionDuration": w, "transitionProperty": w, "transitionTimingFunction": w }
	};
	module.exports = exports["default"];

/***/ },
/* 100 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = cursor;
	var prefixes = ['-webkit-', '-moz-', ''];

	var values = {
	  'zoom-in': true,
	  'zoom-out': true,
	  grab: true,
	  grabbing: true
	};

	function cursor(property, value) {
	  if (property === 'cursor' && values.hasOwnProperty(value)) {
	    return prefixes.map(function (prefix) {
	      return prefix + value;
	    });
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = crossFade;

	var _isPrefixedValue = __webpack_require__(102);

	var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// http://caniuse.com/#search=cross-fade
	var prefixes = ['-webkit-', ''];
	function crossFade(property, value) {
	  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('cross-fade(') > -1) {
	    return prefixes.map(function (prefix) {
	      return value.replace(/cross-fade\(/g, prefix + 'cross-fade(');
	    });
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 102 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isPrefixedValue;
	var regex = /-webkit-|-moz-|-ms-/;

	function isPrefixedValue(value) {
	  return typeof value === 'string' && regex.test(value);
	}
	module.exports = exports['default'];

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = filter;

	var _isPrefixedValue = __webpack_require__(102);

	var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// http://caniuse.com/#feat=css-filter-function
	var prefixes = ['-webkit-', ''];
	function filter(property, value) {
	  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('filter(') > -1) {
	    return prefixes.map(function (prefix) {
	      return value.replace(/filter\(/g, prefix + 'filter(');
	    });
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 104 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = flex;
	var values = {
	  flex: ['-webkit-box', '-moz-box', '-ms-flexbox', '-webkit-flex', 'flex'],
	  'inline-flex': ['-webkit-inline-box', '-moz-inline-box', '-ms-inline-flexbox', '-webkit-inline-flex', 'inline-flex']
	};

	function flex(property, value) {
	  if (property === 'display' && values.hasOwnProperty(value)) {
	    return values[value];
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 105 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = flexboxOld;
	var alternativeValues = {
	  'space-around': 'justify',
	  'space-between': 'justify',
	  'flex-start': 'start',
	  'flex-end': 'end',
	  'wrap-reverse': 'multiple',
	  wrap: 'multiple'
	};

	var alternativeProps = {
	  alignItems: 'WebkitBoxAlign',
	  justifyContent: 'WebkitBoxPack',
	  flexWrap: 'WebkitBoxLines'
	};

	function flexboxOld(property, value, style) {
	  if (property === 'flexDirection' && typeof value === 'string') {
	    if (value.indexOf('column') > -1) {
	      style.WebkitBoxOrient = 'vertical';
	    } else {
	      style.WebkitBoxOrient = 'horizontal';
	    }
	    if (value.indexOf('reverse') > -1) {
	      style.WebkitBoxDirection = 'reverse';
	    } else {
	      style.WebkitBoxDirection = 'normal';
	    }
	  }
	  if (alternativeProps.hasOwnProperty(property)) {
	    style[alternativeProps[property]] = alternativeValues[value] || value;
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = gradient;

	var _isPrefixedValue = __webpack_require__(102);

	var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var prefixes = ['-webkit-', '-moz-', ''];

	var values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;

	function gradient(property, value) {
	  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && values.test(value)) {
	    return prefixes.map(function (prefix) {
	      return prefix + value;
	    });
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = imageSet;

	var _isPrefixedValue = __webpack_require__(102);

	var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// http://caniuse.com/#feat=css-image-set
	var prefixes = ['-webkit-', ''];
	function imageSet(property, value) {
	  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('image-set(') > -1) {
	    return prefixes.map(function (prefix) {
	      return value.replace(/image-set\(/g, prefix + 'image-set(');
	    });
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 108 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = position;
	function position(property, value) {
	  if (property === 'position' && value === 'sticky') {
	    return ['-webkit-sticky', 'sticky'];
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 109 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = sizing;
	var prefixes = ['-webkit-', '-moz-', ''];

	var properties = {
	  maxHeight: true,
	  maxWidth: true,
	  width: true,
	  height: true,
	  columnWidth: true,
	  minWidth: true,
	  minHeight: true
	};
	var values = {
	  'min-content': true,
	  'max-content': true,
	  'fill-available': true,
	  'fit-content': true,
	  'contain-floats': true
	};

	function sizing(property, value) {
	  if (properties.hasOwnProperty(property) && values.hasOwnProperty(value)) {
	    return prefixes.map(function (prefix) {
	      return prefix + value;
	    });
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = transition;

	var _hyphenateProperty = __webpack_require__(94);

	var _hyphenateProperty2 = _interopRequireDefault(_hyphenateProperty);

	var _isPrefixedValue = __webpack_require__(102);

	var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

	var _capitalizeString = __webpack_require__(79);

	var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var properties = {
	  transition: true,
	  transitionProperty: true,
	  WebkitTransition: true,
	  WebkitTransitionProperty: true,
	  MozTransition: true,
	  MozTransitionProperty: true
	};


	var prefixMapping = {
	  Webkit: '-webkit-',
	  Moz: '-moz-',
	  ms: '-ms-'
	};

	function prefixValue(value, propertyPrefixMap) {
	  if ((0, _isPrefixedValue2.default)(value)) {
	    return value;
	  }

	  // only split multi values, not cubic beziers
	  var multipleValues = value.split(/,(?![^()]*(?:\([^()]*\))?\))/g);

	  for (var i = 0, len = multipleValues.length; i < len; ++i) {
	    var singleValue = multipleValues[i];
	    var values = [singleValue];
	    for (var property in propertyPrefixMap) {
	      var dashCaseProperty = (0, _hyphenateProperty2.default)(property);

	      if (singleValue.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== 'order') {
	        var prefixes = propertyPrefixMap[property];
	        for (var j = 0, pLen = prefixes.length; j < pLen; ++j) {
	          // join all prefixes and create a new value
	          values.unshift(singleValue.replace(dashCaseProperty, prefixMapping[prefixes[j]] + dashCaseProperty));
	        }
	      }
	    }

	    multipleValues[i] = values.join(',');
	  }

	  return multipleValues.join(',');
	}

	function transition(property, value, style, propertyPrefixMap) {
	  // also check for already prefixed transitions
	  if (typeof value === 'string' && properties.hasOwnProperty(property)) {
	    var outputValue = prefixValue(value, propertyPrefixMap);
	    // if the property is already prefixed
	    var webkitOutput = outputValue.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function (val) {
	      return !/-moz-|-ms-/.test(val);
	    }).join(',');

	    if (property.indexOf('Webkit') > -1) {
	      return webkitOutput;
	    }

	    var mozOutput = outputValue.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function (val) {
	      return !/-webkit-|-ms-/.test(val);
	    }).join(',');

	    if (property.indexOf('Moz') > -1) {
	      return mozOutput;
	    }

	    style['Webkit' + (0, _capitalizeString2.default)(property)] = webkitOutput;
	    style['Moz' + (0, _capitalizeString2.default)(property)] = mozOutput;
	    return outputValue;
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 111 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  plugins: [],
	  prefixMap: { "chrome": { "appearance": 64, "userSelect": 53, "textEmphasisPosition": 64, "textEmphasis": 64, "textEmphasisStyle": 64, "textEmphasisColor": 64, "boxDecorationBreak": 64, "clipPath": 54, "maskImage": 64, "maskMode": 64, "maskRepeat": 64, "maskPosition": 64, "maskClip": 64, "maskOrigin": 64, "maskSize": 64, "maskComposite": 64, "mask": 64, "maskBorderSource": 64, "maskBorderMode": 64, "maskBorderSlice": 64, "maskBorderWidth": 64, "maskBorderOutset": 64, "maskBorderRepeat": 64, "maskBorder": 64, "maskType": 64, "textDecorationStyle": 56, "textDecorationSkip": 56, "textDecorationLine": 56, "textDecorationColor": 56, "filter": 52, "fontFeatureSettings": 47, "breakAfter": 49, "breakBefore": 49, "breakInside": 49, "columnCount": 49, "columnFill": 49, "columnGap": 49, "columnRule": 49, "columnRuleColor": 49, "columnRuleStyle": 49, "columnRuleWidth": 49, "columns": 49, "columnSpan": 49, "columnWidth": 49, "writingMode": 47 }, "safari": { "flex": 8, "flexBasis": 8, "flexDirection": 8, "flexGrow": 8, "flexFlow": 8, "flexShrink": 8, "flexWrap": 8, "alignContent": 8, "alignItems": 8, "alignSelf": 8, "justifyContent": 8, "order": 8, "transform": 8, "transformOrigin": 8, "transformOriginX": 8, "transformOriginY": 8, "backfaceVisibility": 8, "perspective": 8, "perspectiveOrigin": 8, "transformStyle": 8, "transformOriginZ": 8, "animation": 8, "animationDelay": 8, "animationDirection": 8, "animationFillMode": 8, "animationDuration": 8, "animationIterationCount": 8, "animationName": 8, "animationPlayState": 8, "animationTimingFunction": 8, "appearance": 11, "userSelect": 11, "backdropFilter": 11, "fontKerning": 9, "scrollSnapType": 10.1, "scrollSnapPointsX": 10.1, "scrollSnapPointsY": 10.1, "scrollSnapDestination": 10.1, "scrollSnapCoordinate": 10.1, "boxDecorationBreak": 11, "clipPath": 11, "maskImage": 11, "maskMode": 11, "maskRepeat": 11, "maskPosition": 11, "maskClip": 11, "maskOrigin": 11, "maskSize": 11, "maskComposite": 11, "mask": 11, "maskBorderSource": 11, "maskBorderMode": 11, "maskBorderSlice": 11, "maskBorderWidth": 11, "maskBorderOutset": 11, "maskBorderRepeat": 11, "maskBorder": 11, "maskType": 11, "textDecorationStyle": 11, "textDecorationSkip": 11, "textDecorationLine": 11, "textDecorationColor": 11, "shapeImageThreshold": 10, "shapeImageMargin": 10, "shapeImageOutside": 10, "filter": 9, "hyphens": 11, "flowInto": 11, "flowFrom": 11, "breakBefore": 8, "breakAfter": 8, "breakInside": 8, "regionFragment": 11, "columnCount": 8, "columnFill": 8, "columnGap": 8, "columnRule": 8, "columnRuleColor": 8, "columnRuleStyle": 8, "columnRuleWidth": 8, "columns": 8, "columnSpan": 8, "columnWidth": 8, "writingMode": 11 }, "firefox": { "appearance": 58, "userSelect": 58, "textAlignLast": 48, "tabSize": 58, "hyphens": 42, "breakAfter": 51, "breakBefore": 51, "breakInside": 51, "columnCount": 51, "columnFill": 51, "columnGap": 51, "columnRule": 51, "columnRuleColor": 51, "columnRuleStyle": 51, "columnRuleWidth": 51, "columns": 51, "columnSpan": 51, "columnWidth": 51 }, "opera": { "flex": 16, "flexBasis": 16, "flexDirection": 16, "flexGrow": 16, "flexFlow": 16, "flexShrink": 16, "flexWrap": 16, "alignContent": 16, "alignItems": 16, "alignSelf": 16, "justifyContent": 16, "order": 16, "transform": 22, "transformOrigin": 22, "transformOriginX": 22, "transformOriginY": 22, "backfaceVisibility": 22, "perspective": 22, "perspectiveOrigin": 22, "transformStyle": 22, "transformOriginZ": 22, "animation": 29, "animationDelay": 29, "animationDirection": 29, "animationFillMode": 29, "animationDuration": 29, "animationIterationCount": 29, "animationName": 29, "animationPlayState": 29, "animationTimingFunction": 29, "appearance": 49, "userSelect": 40, "fontKerning": 19, "textEmphasisPosition": 49, "textEmphasis": 49, "textEmphasisStyle": 49, "textEmphasisColor": 49, "boxDecorationBreak": 49, "clipPath": 41, "maskImage": 49, "maskMode": 49, "maskRepeat": 49, "maskPosition": 49, "maskClip": 49, "maskOrigin": 49, "maskSize": 49, "maskComposite": 49, "mask": 49, "maskBorderSource": 49, "maskBorderMode": 49, "maskBorderSlice": 49, "maskBorderWidth": 49, "maskBorderOutset": 49, "maskBorderRepeat": 49, "maskBorder": 49, "maskType": 49, "textDecorationStyle": 43, "textDecorationSkip": 43, "textDecorationLine": 43, "textDecorationColor": 43, "filter": 39, "fontFeatureSettings": 34, "breakAfter": 36, "breakBefore": 36, "breakInside": 36, "columnCount": 36, "columnFill": 36, "columnGap": 36, "columnRule": 36, "columnRuleColor": 36, "columnRuleStyle": 36, "columnRuleWidth": 36, "columns": 36, "columnSpan": 36, "columnWidth": 36, "writingMode": 34 }, "ie": { "userSelect": 11, "wrapFlow": 11, "wrapThrough": 11, "wrapMargin": 11, "scrollSnapType": 11, "scrollSnapPointsX": 11, "scrollSnapPointsY": 11, "scrollSnapDestination": 11, "scrollSnapCoordinate": 11, "hyphens": 11, "flowInto": 11, "flowFrom": 11, "breakBefore": 11, "breakAfter": 11, "breakInside": 11, "regionFragment": 11, "gridTemplateColumns": 11, "gridTemplateRows": 11, "gridTemplateAreas": 11, "gridTemplate": 11, "gridAutoColumns": 11, "gridAutoRows": 11, "gridAutoFlow": 11, "grid": 11, "gridRowStart": 11, "gridColumnStart": 11, "gridRowEnd": 11, "gridRow": 11, "gridColumn": 11, "gridColumnEnd": 11, "gridColumnGap": 11, "gridRowGap": 11, "gridArea": 11, "gridGap": 11, "textSizeAdjust": 11, "writingMode": 11 }, "edge": { "userSelect": 16, "wrapFlow": 16, "wrapThrough": 16, "wrapMargin": 16, "scrollSnapType": 16, "scrollSnapPointsX": 16, "scrollSnapPointsY": 16, "scrollSnapDestination": 16, "scrollSnapCoordinate": 16, "hyphens": 16, "flowInto": 16, "flowFrom": 16, "breakBefore": 16, "breakAfter": 16, "breakInside": 16, "regionFragment": 16, "gridTemplateColumns": 15, "gridTemplateRows": 15, "gridTemplateAreas": 15, "gridTemplate": 15, "gridAutoColumns": 15, "gridAutoRows": 15, "gridAutoFlow": 15, "grid": 15, "gridRowStart": 15, "gridColumnStart": 15, "gridRowEnd": 15, "gridRow": 15, "gridColumn": 15, "gridColumnEnd": 15, "gridColumnGap": 15, "gridRowGap": 15, "gridArea": 15, "gridGap": 15 }, "ios_saf": { "flex": 8.1, "flexBasis": 8.1, "flexDirection": 8.1, "flexGrow": 8.1, "flexFlow": 8.1, "flexShrink": 8.1, "flexWrap": 8.1, "alignContent": 8.1, "alignItems": 8.1, "alignSelf": 8.1, "justifyContent": 8.1, "order": 8.1, "transform": 8.1, "transformOrigin": 8.1, "transformOriginX": 8.1, "transformOriginY": 8.1, "backfaceVisibility": 8.1, "perspective": 8.1, "perspectiveOrigin": 8.1, "transformStyle": 8.1, "transformOriginZ": 8.1, "animation": 8.1, "animationDelay": 8.1, "animationDirection": 8.1, "animationFillMode": 8.1, "animationDuration": 8.1, "animationIterationCount": 8.1, "animationName": 8.1, "animationPlayState": 8.1, "animationTimingFunction": 8.1, "appearance": 11, "userSelect": 11, "backdropFilter": 11, "fontKerning": 11, "scrollSnapType": 11, "scrollSnapPointsX": 11, "scrollSnapPointsY": 11, "scrollSnapDestination": 11, "scrollSnapCoordinate": 11, "boxDecorationBreak": 11, "clipPath": 11, "maskImage": 11, "maskMode": 11, "maskRepeat": 11, "maskPosition": 11, "maskClip": 11, "maskOrigin": 11, "maskSize": 11, "maskComposite": 11, "mask": 11, "maskBorderSource": 11, "maskBorderMode": 11, "maskBorderSlice": 11, "maskBorderWidth": 11, "maskBorderOutset": 11, "maskBorderRepeat": 11, "maskBorder": 11, "maskType": 11, "textSizeAdjust": 11, "textDecorationStyle": 11, "textDecorationSkip": 11, "textDecorationLine": 11, "textDecorationColor": 11, "shapeImageThreshold": 10, "shapeImageMargin": 10, "shapeImageOutside": 10, "filter": 9, "hyphens": 11, "flowInto": 11, "flowFrom": 11, "breakBefore": 8.1, "breakAfter": 8.1, "breakInside": 8.1, "regionFragment": 11, "columnCount": 8.1, "columnFill": 8.1, "columnGap": 8.1, "columnRule": 8.1, "columnRuleColor": 8.1, "columnRuleStyle": 8.1, "columnRuleWidth": 8.1, "columns": 8.1, "columnSpan": 8.1, "columnWidth": 8.1, "writingMode": 11 }, "android": { "borderImage": 4.2, "borderImageOutset": 4.2, "borderImageRepeat": 4.2, "borderImageSlice": 4.2, "borderImageSource": 4.2, "borderImageWidth": 4.2, "flex": 4.2, "flexBasis": 4.2, "flexDirection": 4.2, "flexGrow": 4.2, "flexFlow": 4.2, "flexShrink": 4.2, "flexWrap": 4.2, "alignContent": 4.2, "alignItems": 4.2, "alignSelf": 4.2, "justifyContent": 4.2, "order": 4.2, "transition": 4.2, "transitionDelay": 4.2, "transitionDuration": 4.2, "transitionProperty": 4.2, "transitionTimingFunction": 4.2, "transform": 4.4, "transformOrigin": 4.4, "transformOriginX": 4.4, "transformOriginY": 4.4, "backfaceVisibility": 4.4, "perspective": 4.4, "perspectiveOrigin": 4.4, "transformStyle": 4.4, "transformOriginZ": 4.4, "animation": 4.4, "animationDelay": 4.4, "animationDirection": 4.4, "animationFillMode": 4.4, "animationDuration": 4.4, "animationIterationCount": 4.4, "animationName": 4.4, "animationPlayState": 4.4, "animationTimingFunction": 4.4, "appearance": 56, "userSelect": 4.4, "fontKerning": 4.4, "textEmphasisPosition": 56, "textEmphasis": 56, "textEmphasisStyle": 56, "textEmphasisColor": 56, "boxDecorationBreak": 56, "clipPath": 4.4, "maskImage": 56, "maskMode": 56, "maskRepeat": 56, "maskPosition": 56, "maskClip": 56, "maskOrigin": 56, "maskSize": 56, "maskComposite": 56, "mask": 56, "maskBorderSource": 56, "maskBorderMode": 56, "maskBorderSlice": 56, "maskBorderWidth": 56, "maskBorderOutset": 56, "maskBorderRepeat": 56, "maskBorder": 56, "maskType": 56, "filter": 4.4, "fontFeatureSettings": 4.4, "breakAfter": 4.4, "breakBefore": 4.4, "breakInside": 4.4, "columnCount": 4.4, "columnFill": 4.4, "columnGap": 4.4, "columnRule": 4.4, "columnRuleColor": 4.4, "columnRuleStyle": 4.4, "columnRuleWidth": 4.4, "columns": 4.4, "columnSpan": 4.4, "columnWidth": 4.4, "writingMode": 4.4 }, "and_chr": { "appearance": 61, "textEmphasisPosition": 61, "textEmphasis": 61, "textEmphasisStyle": 61, "textEmphasisColor": 61, "boxDecorationBreak": 61, "maskImage": 61, "maskMode": 61, "maskRepeat": 61, "maskPosition": 61, "maskClip": 61, "maskOrigin": 61, "maskSize": 61, "maskComposite": 61, "mask": 61, "maskBorderSource": 61, "maskBorderMode": 61, "maskBorderSlice": 61, "maskBorderWidth": 61, "maskBorderOutset": 61, "maskBorderRepeat": 61, "maskBorder": 61, "maskType": 61 }, "and_uc": { "flex": 11.4, "flexBasis": 11.4, "flexDirection": 11.4, "flexGrow": 11.4, "flexFlow": 11.4, "flexShrink": 11.4, "flexWrap": 11.4, "alignContent": 11.4, "alignItems": 11.4, "alignSelf": 11.4, "justifyContent": 11.4, "order": 11.4, "transform": 11.4, "transformOrigin": 11.4, "transformOriginX": 11.4, "transformOriginY": 11.4, "backfaceVisibility": 11.4, "perspective": 11.4, "perspectiveOrigin": 11.4, "transformStyle": 11.4, "transformOriginZ": 11.4, "animation": 11.4, "animationDelay": 11.4, "animationDirection": 11.4, "animationFillMode": 11.4, "animationDuration": 11.4, "animationIterationCount": 11.4, "animationName": 11.4, "animationPlayState": 11.4, "animationTimingFunction": 11.4, "appearance": 11.4, "userSelect": 11.4, "textEmphasisPosition": 11.4, "textEmphasis": 11.4, "textEmphasisStyle": 11.4, "textEmphasisColor": 11.4, "clipPath": 11.4, "maskImage": 11.4, "maskMode": 11.4, "maskRepeat": 11.4, "maskPosition": 11.4, "maskClip": 11.4, "maskOrigin": 11.4, "maskSize": 11.4, "maskComposite": 11.4, "mask": 11.4, "maskBorderSource": 11.4, "maskBorderMode": 11.4, "maskBorderSlice": 11.4, "maskBorderWidth": 11.4, "maskBorderOutset": 11.4, "maskBorderRepeat": 11.4, "maskBorder": 11.4, "maskType": 11.4, "textSizeAdjust": 11.4, "filter": 11.4, "hyphens": 11.4, "fontFeatureSettings": 11.4, "breakAfter": 11.4, "breakBefore": 11.4, "breakInside": 11.4, "columnCount": 11.4, "columnFill": 11.4, "columnGap": 11.4, "columnRule": 11.4, "columnRuleColor": 11.4, "columnRuleStyle": 11.4, "columnRuleWidth": 11.4, "columns": 11.4, "columnSpan": 11.4, "columnWidth": 11.4, "writingMode": 11.4 }, "op_mini": {} }
	};
	module.exports = exports["default"];

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	var properties = __webpack_require__(113);
	var PropTypes = __webpack_require__(59);

	module.exports = function(props, propName, componentName) {
	  var styles = props[propName];
	  if (!styles) {
	    return;
	  }

	  var failures = [];
	  Object.keys(styles).forEach(function(styleKey){
	    if (properties.indexOf(styleKey) === -1) {
	      failures.push(styleKey);
	    }
	  });
	  if (failures.length) {
	    throw new Error('Prop ' + propName + ' passed to ' + componentName + '. Has invalid keys ' + failures.join(', '));
	  }
	};

	module.exports.isRequired = function(props, propName, componentName) {
	  if (!props[propName]) {
	    throw new Error('Prop ' + propName + ' passed to ' + componentName + ' is required');
	  }
	  return module.exports(props, propName, componentName);
	};

	module.exports.supportingArrays = PropTypes.oneOfType([
	  PropTypes.arrayOf(module.exports),
	  module.exports
	]);


/***/ },
/* 113 */
/***/ function(module, exports) {

	// GENERATED DO NOT EDIT
	module.exports = [
	  "alignContent",
	  "MozAlignContent",
	  "WebkitAlignContent",
	  "MSAlignContent",
	  "OAlignContent",
	  "alignItems",
	  "MozAlignItems",
	  "WebkitAlignItems",
	  "MSAlignItems",
	  "OAlignItems",
	  "alignSelf",
	  "MozAlignSelf",
	  "WebkitAlignSelf",
	  "MSAlignSelf",
	  "OAlignSelf",
	  "all",
	  "MozAll",
	  "WebkitAll",
	  "MSAll",
	  "OAll",
	  "animation",
	  "MozAnimation",
	  "WebkitAnimation",
	  "MSAnimation",
	  "OAnimation",
	  "animationDelay",
	  "MozAnimationDelay",
	  "WebkitAnimationDelay",
	  "MSAnimationDelay",
	  "OAnimationDelay",
	  "animationDirection",
	  "MozAnimationDirection",
	  "WebkitAnimationDirection",
	  "MSAnimationDirection",
	  "OAnimationDirection",
	  "animationDuration",
	  "MozAnimationDuration",
	  "WebkitAnimationDuration",
	  "MSAnimationDuration",
	  "OAnimationDuration",
	  "animationFillMode",
	  "MozAnimationFillMode",
	  "WebkitAnimationFillMode",
	  "MSAnimationFillMode",
	  "OAnimationFillMode",
	  "animationIterationCount",
	  "MozAnimationIterationCount",
	  "WebkitAnimationIterationCount",
	  "MSAnimationIterationCount",
	  "OAnimationIterationCount",
	  "animationName",
	  "MozAnimationName",
	  "WebkitAnimationName",
	  "MSAnimationName",
	  "OAnimationName",
	  "animationPlayState",
	  "MozAnimationPlayState",
	  "WebkitAnimationPlayState",
	  "MSAnimationPlayState",
	  "OAnimationPlayState",
	  "animationTimingFunction",
	  "MozAnimationTimingFunction",
	  "WebkitAnimationTimingFunction",
	  "MSAnimationTimingFunction",
	  "OAnimationTimingFunction",
	  "backfaceVisibility",
	  "MozBackfaceVisibility",
	  "WebkitBackfaceVisibility",
	  "MSBackfaceVisibility",
	  "OBackfaceVisibility",
	  "background",
	  "MozBackground",
	  "WebkitBackground",
	  "MSBackground",
	  "OBackground",
	  "backgroundAttachment",
	  "MozBackgroundAttachment",
	  "WebkitBackgroundAttachment",
	  "MSBackgroundAttachment",
	  "OBackgroundAttachment",
	  "backgroundBlendMode",
	  "MozBackgroundBlendMode",
	  "WebkitBackgroundBlendMode",
	  "MSBackgroundBlendMode",
	  "OBackgroundBlendMode",
	  "backgroundClip",
	  "MozBackgroundClip",
	  "WebkitBackgroundClip",
	  "MSBackgroundClip",
	  "OBackgroundClip",
	  "backgroundColor",
	  "MozBackgroundColor",
	  "WebkitBackgroundColor",
	  "MSBackgroundColor",
	  "OBackgroundColor",
	  "backgroundImage",
	  "MozBackgroundImage",
	  "WebkitBackgroundImage",
	  "MSBackgroundImage",
	  "OBackgroundImage",
	  "backgroundOrigin",
	  "MozBackgroundOrigin",
	  "WebkitBackgroundOrigin",
	  "MSBackgroundOrigin",
	  "OBackgroundOrigin",
	  "backgroundPosition",
	  "MozBackgroundPosition",
	  "WebkitBackgroundPosition",
	  "MSBackgroundPosition",
	  "OBackgroundPosition",
	  "backgroundRepeat",
	  "MozBackgroundRepeat",
	  "WebkitBackgroundRepeat",
	  "MSBackgroundRepeat",
	  "OBackgroundRepeat",
	  "backgroundSize",
	  "MozBackgroundSize",
	  "WebkitBackgroundSize",
	  "MSBackgroundSize",
	  "OBackgroundSize",
	  "blockSize",
	  "MozBlockSize",
	  "WebkitBlockSize",
	  "MSBlockSize",
	  "OBlockSize",
	  "border",
	  "MozBorder",
	  "WebkitBorder",
	  "MSBorder",
	  "OBorder",
	  "borderBlockEnd",
	  "MozBorderBlockEnd",
	  "WebkitBorderBlockEnd",
	  "MSBorderBlockEnd",
	  "OBorderBlockEnd",
	  "borderBlockEndColor",
	  "MozBorderBlockEndColor",
	  "WebkitBorderBlockEndColor",
	  "MSBorderBlockEndColor",
	  "OBorderBlockEndColor",
	  "borderBlockEndStyle",
	  "MozBorderBlockEndStyle",
	  "WebkitBorderBlockEndStyle",
	  "MSBorderBlockEndStyle",
	  "OBorderBlockEndStyle",
	  "borderBlockEndWidth",
	  "MozBorderBlockEndWidth",
	  "WebkitBorderBlockEndWidth",
	  "MSBorderBlockEndWidth",
	  "OBorderBlockEndWidth",
	  "borderBlockStart",
	  "MozBorderBlockStart",
	  "WebkitBorderBlockStart",
	  "MSBorderBlockStart",
	  "OBorderBlockStart",
	  "borderBlockStartColor",
	  "MozBorderBlockStartColor",
	  "WebkitBorderBlockStartColor",
	  "MSBorderBlockStartColor",
	  "OBorderBlockStartColor",
	  "borderBlockStartStyle",
	  "MozBorderBlockStartStyle",
	  "WebkitBorderBlockStartStyle",
	  "MSBorderBlockStartStyle",
	  "OBorderBlockStartStyle",
	  "borderBlockStartWidth",
	  "MozBorderBlockStartWidth",
	  "WebkitBorderBlockStartWidth",
	  "MSBorderBlockStartWidth",
	  "OBorderBlockStartWidth",
	  "borderBottom",
	  "MozBorderBottom",
	  "WebkitBorderBottom",
	  "MSBorderBottom",
	  "OBorderBottom",
	  "borderBottomColor",
	  "MozBorderBottomColor",
	  "WebkitBorderBottomColor",
	  "MSBorderBottomColor",
	  "OBorderBottomColor",
	  "borderBottomLeftRadius",
	  "MozBorderBottomLeftRadius",
	  "WebkitBorderBottomLeftRadius",
	  "MSBorderBottomLeftRadius",
	  "OBorderBottomLeftRadius",
	  "borderBottomRightRadius",
	  "MozBorderBottomRightRadius",
	  "WebkitBorderBottomRightRadius",
	  "MSBorderBottomRightRadius",
	  "OBorderBottomRightRadius",
	  "borderBottomStyle",
	  "MozBorderBottomStyle",
	  "WebkitBorderBottomStyle",
	  "MSBorderBottomStyle",
	  "OBorderBottomStyle",
	  "borderBottomWidth",
	  "MozBorderBottomWidth",
	  "WebkitBorderBottomWidth",
	  "MSBorderBottomWidth",
	  "OBorderBottomWidth",
	  "borderCollapse",
	  "MozBorderCollapse",
	  "WebkitBorderCollapse",
	  "MSBorderCollapse",
	  "OBorderCollapse",
	  "borderColor",
	  "MozBorderColor",
	  "WebkitBorderColor",
	  "MSBorderColor",
	  "OBorderColor",
	  "borderImage",
	  "MozBorderImage",
	  "WebkitBorderImage",
	  "MSBorderImage",
	  "OBorderImage",
	  "borderImageOutset",
	  "MozBorderImageOutset",
	  "WebkitBorderImageOutset",
	  "MSBorderImageOutset",
	  "OBorderImageOutset",
	  "borderImageRepeat",
	  "MozBorderImageRepeat",
	  "WebkitBorderImageRepeat",
	  "MSBorderImageRepeat",
	  "OBorderImageRepeat",
	  "borderImageSlice",
	  "MozBorderImageSlice",
	  "WebkitBorderImageSlice",
	  "MSBorderImageSlice",
	  "OBorderImageSlice",
	  "borderImageSource",
	  "MozBorderImageSource",
	  "WebkitBorderImageSource",
	  "MSBorderImageSource",
	  "OBorderImageSource",
	  "borderImageWidth",
	  "MozBorderImageWidth",
	  "WebkitBorderImageWidth",
	  "MSBorderImageWidth",
	  "OBorderImageWidth",
	  "borderInlineEnd",
	  "MozBorderInlineEnd",
	  "WebkitBorderInlineEnd",
	  "MSBorderInlineEnd",
	  "OBorderInlineEnd",
	  "borderInlineEndColor",
	  "MozBorderInlineEndColor",
	  "WebkitBorderInlineEndColor",
	  "MSBorderInlineEndColor",
	  "OBorderInlineEndColor",
	  "borderInlineEndStyle",
	  "MozBorderInlineEndStyle",
	  "WebkitBorderInlineEndStyle",
	  "MSBorderInlineEndStyle",
	  "OBorderInlineEndStyle",
	  "borderInlineEndWidth",
	  "MozBorderInlineEndWidth",
	  "WebkitBorderInlineEndWidth",
	  "MSBorderInlineEndWidth",
	  "OBorderInlineEndWidth",
	  "borderInlineStart",
	  "MozBorderInlineStart",
	  "WebkitBorderInlineStart",
	  "MSBorderInlineStart",
	  "OBorderInlineStart",
	  "borderInlineStartColor",
	  "MozBorderInlineStartColor",
	  "WebkitBorderInlineStartColor",
	  "MSBorderInlineStartColor",
	  "OBorderInlineStartColor",
	  "borderInlineStartStyle",
	  "MozBorderInlineStartStyle",
	  "WebkitBorderInlineStartStyle",
	  "MSBorderInlineStartStyle",
	  "OBorderInlineStartStyle",
	  "borderInlineStartWidth",
	  "MozBorderInlineStartWidth",
	  "WebkitBorderInlineStartWidth",
	  "MSBorderInlineStartWidth",
	  "OBorderInlineStartWidth",
	  "borderLeft",
	  "MozBorderLeft",
	  "WebkitBorderLeft",
	  "MSBorderLeft",
	  "OBorderLeft",
	  "borderLeftColor",
	  "MozBorderLeftColor",
	  "WebkitBorderLeftColor",
	  "MSBorderLeftColor",
	  "OBorderLeftColor",
	  "borderLeftStyle",
	  "MozBorderLeftStyle",
	  "WebkitBorderLeftStyle",
	  "MSBorderLeftStyle",
	  "OBorderLeftStyle",
	  "borderLeftWidth",
	  "MozBorderLeftWidth",
	  "WebkitBorderLeftWidth",
	  "MSBorderLeftWidth",
	  "OBorderLeftWidth",
	  "borderRadius",
	  "MozBorderRadius",
	  "WebkitBorderRadius",
	  "MSBorderRadius",
	  "OBorderRadius",
	  "borderRight",
	  "MozBorderRight",
	  "WebkitBorderRight",
	  "MSBorderRight",
	  "OBorderRight",
	  "borderRightColor",
	  "MozBorderRightColor",
	  "WebkitBorderRightColor",
	  "MSBorderRightColor",
	  "OBorderRightColor",
	  "borderRightStyle",
	  "MozBorderRightStyle",
	  "WebkitBorderRightStyle",
	  "MSBorderRightStyle",
	  "OBorderRightStyle",
	  "borderRightWidth",
	  "MozBorderRightWidth",
	  "WebkitBorderRightWidth",
	  "MSBorderRightWidth",
	  "OBorderRightWidth",
	  "borderSpacing",
	  "MozBorderSpacing",
	  "WebkitBorderSpacing",
	  "MSBorderSpacing",
	  "OBorderSpacing",
	  "borderStyle",
	  "MozBorderStyle",
	  "WebkitBorderStyle",
	  "MSBorderStyle",
	  "OBorderStyle",
	  "borderTop",
	  "MozBorderTop",
	  "WebkitBorderTop",
	  "MSBorderTop",
	  "OBorderTop",
	  "borderTopColor",
	  "MozBorderTopColor",
	  "WebkitBorderTopColor",
	  "MSBorderTopColor",
	  "OBorderTopColor",
	  "borderTopLeftRadius",
	  "MozBorderTopLeftRadius",
	  "WebkitBorderTopLeftRadius",
	  "MSBorderTopLeftRadius",
	  "OBorderTopLeftRadius",
	  "borderTopRightRadius",
	  "MozBorderTopRightRadius",
	  "WebkitBorderTopRightRadius",
	  "MSBorderTopRightRadius",
	  "OBorderTopRightRadius",
	  "borderTopStyle",
	  "MozBorderTopStyle",
	  "WebkitBorderTopStyle",
	  "MSBorderTopStyle",
	  "OBorderTopStyle",
	  "borderTopWidth",
	  "MozBorderTopWidth",
	  "WebkitBorderTopWidth",
	  "MSBorderTopWidth",
	  "OBorderTopWidth",
	  "borderWidth",
	  "MozBorderWidth",
	  "WebkitBorderWidth",
	  "MSBorderWidth",
	  "OBorderWidth",
	  "bottom",
	  "MozBottom",
	  "WebkitBottom",
	  "MSBottom",
	  "OBottom",
	  "boxDecorationBreak",
	  "MozBoxDecorationBreak",
	  "WebkitBoxDecorationBreak",
	  "MSBoxDecorationBreak",
	  "OBoxDecorationBreak",
	  "boxShadow",
	  "MozBoxShadow",
	  "WebkitBoxShadow",
	  "MSBoxShadow",
	  "OBoxShadow",
	  "boxSizing",
	  "MozBoxSizing",
	  "WebkitBoxSizing",
	  "MSBoxSizing",
	  "OBoxSizing",
	  "breakAfter",
	  "MozBreakAfter",
	  "WebkitBreakAfter",
	  "MSBreakAfter",
	  "OBreakAfter",
	  "breakBefore",
	  "MozBreakBefore",
	  "WebkitBreakBefore",
	  "MSBreakBefore",
	  "OBreakBefore",
	  "breakInside",
	  "MozBreakInside",
	  "WebkitBreakInside",
	  "MSBreakInside",
	  "OBreakInside",
	  "captionSide",
	  "MozCaptionSide",
	  "WebkitCaptionSide",
	  "MSCaptionSide",
	  "OCaptionSide",
	  "caretColor",
	  "MozCaretColor",
	  "WebkitCaretColor",
	  "MSCaretColor",
	  "OCaretColor",
	  "ch",
	  "MozCh",
	  "WebkitCh",
	  "MSCh",
	  "OCh",
	  "clear",
	  "MozClear",
	  "WebkitClear",
	  "MSClear",
	  "OClear",
	  "clip",
	  "MozClip",
	  "WebkitClip",
	  "MSClip",
	  "OClip",
	  "clipPath",
	  "MozClipPath",
	  "WebkitClipPath",
	  "MSClipPath",
	  "OClipPath",
	  "cm",
	  "MozCm",
	  "WebkitCm",
	  "MSCm",
	  "OCm",
	  "color",
	  "MozColor",
	  "WebkitColor",
	  "MSColor",
	  "OColor",
	  "columnCount",
	  "MozColumnCount",
	  "WebkitColumnCount",
	  "MSColumnCount",
	  "OColumnCount",
	  "columnFill",
	  "MozColumnFill",
	  "WebkitColumnFill",
	  "MSColumnFill",
	  "OColumnFill",
	  "columnGap",
	  "MozColumnGap",
	  "WebkitColumnGap",
	  "MSColumnGap",
	  "OColumnGap",
	  "columnRule",
	  "MozColumnRule",
	  "WebkitColumnRule",
	  "MSColumnRule",
	  "OColumnRule",
	  "columnRuleColor",
	  "MozColumnRuleColor",
	  "WebkitColumnRuleColor",
	  "MSColumnRuleColor",
	  "OColumnRuleColor",
	  "columnRuleStyle",
	  "MozColumnRuleStyle",
	  "WebkitColumnRuleStyle",
	  "MSColumnRuleStyle",
	  "OColumnRuleStyle",
	  "columnRuleWidth",
	  "MozColumnRuleWidth",
	  "WebkitColumnRuleWidth",
	  "MSColumnRuleWidth",
	  "OColumnRuleWidth",
	  "columnSpan",
	  "MozColumnSpan",
	  "WebkitColumnSpan",
	  "MSColumnSpan",
	  "OColumnSpan",
	  "columnWidth",
	  "MozColumnWidth",
	  "WebkitColumnWidth",
	  "MSColumnWidth",
	  "OColumnWidth",
	  "columns",
	  "MozColumns",
	  "WebkitColumns",
	  "MSColumns",
	  "OColumns",
	  "content",
	  "MozContent",
	  "WebkitContent",
	  "MSContent",
	  "OContent",
	  "counterIncrement",
	  "MozCounterIncrement",
	  "WebkitCounterIncrement",
	  "MSCounterIncrement",
	  "OCounterIncrement",
	  "counterReset",
	  "MozCounterReset",
	  "WebkitCounterReset",
	  "MSCounterReset",
	  "OCounterReset",
	  "cursor",
	  "MozCursor",
	  "WebkitCursor",
	  "MSCursor",
	  "OCursor",
	  "deg",
	  "MozDeg",
	  "WebkitDeg",
	  "MSDeg",
	  "ODeg",
	  "direction",
	  "MozDirection",
	  "WebkitDirection",
	  "MSDirection",
	  "ODirection",
	  "display",
	  "MozDisplay",
	  "WebkitDisplay",
	  "MSDisplay",
	  "ODisplay",
	  "dpcm",
	  "MozDpcm",
	  "WebkitDpcm",
	  "MSDpcm",
	  "ODpcm",
	  "dpi",
	  "MozDpi",
	  "WebkitDpi",
	  "MSDpi",
	  "ODpi",
	  "dppx",
	  "MozDppx",
	  "WebkitDppx",
	  "MSDppx",
	  "ODppx",
	  "em",
	  "MozEm",
	  "WebkitEm",
	  "MSEm",
	  "OEm",
	  "emptyCells",
	  "MozEmptyCells",
	  "WebkitEmptyCells",
	  "MSEmptyCells",
	  "OEmptyCells",
	  "ex",
	  "MozEx",
	  "WebkitEx",
	  "MSEx",
	  "OEx",
	  "filter",
	  "MozFilter",
	  "WebkitFilter",
	  "MSFilter",
	  "OFilter",
	  "flexBasis",
	  "MozFlexBasis",
	  "WebkitFlexBasis",
	  "MSFlexBasis",
	  "OFlexBasis",
	  "flexDirection",
	  "MozFlexDirection",
	  "WebkitFlexDirection",
	  "MSFlexDirection",
	  "OFlexDirection",
	  "flexFlow",
	  "MozFlexFlow",
	  "WebkitFlexFlow",
	  "MSFlexFlow",
	  "OFlexFlow",
	  "flexGrow",
	  "MozFlexGrow",
	  "WebkitFlexGrow",
	  "MSFlexGrow",
	  "OFlexGrow",
	  "flexShrink",
	  "MozFlexShrink",
	  "WebkitFlexShrink",
	  "MSFlexShrink",
	  "OFlexShrink",
	  "flexWrap",
	  "MozFlexWrap",
	  "WebkitFlexWrap",
	  "MSFlexWrap",
	  "OFlexWrap",
	  "float",
	  "MozFloat",
	  "WebkitFloat",
	  "MSFloat",
	  "OFloat",
	  "font",
	  "MozFont",
	  "WebkitFont",
	  "MSFont",
	  "OFont",
	  "fontFamily",
	  "MozFontFamily",
	  "WebkitFontFamily",
	  "MSFontFamily",
	  "OFontFamily",
	  "fontFeatureSettings",
	  "MozFontFeatureSettings",
	  "WebkitFontFeatureSettings",
	  "MSFontFeatureSettings",
	  "OFontFeatureSettings",
	  "fontKerning",
	  "MozFontKerning",
	  "WebkitFontKerning",
	  "MSFontKerning",
	  "OFontKerning",
	  "fontLanguageOverride",
	  "MozFontLanguageOverride",
	  "WebkitFontLanguageOverride",
	  "MSFontLanguageOverride",
	  "OFontLanguageOverride",
	  "fontSize",
	  "MozFontSize",
	  "WebkitFontSize",
	  "MSFontSize",
	  "OFontSize",
	  "fontSizeAdjust",
	  "MozFontSizeAdjust",
	  "WebkitFontSizeAdjust",
	  "MSFontSizeAdjust",
	  "OFontSizeAdjust",
	  "fontStretch",
	  "MozFontStretch",
	  "WebkitFontStretch",
	  "MSFontStretch",
	  "OFontStretch",
	  "fontStyle",
	  "MozFontStyle",
	  "WebkitFontStyle",
	  "MSFontStyle",
	  "OFontStyle",
	  "fontSynthesis",
	  "MozFontSynthesis",
	  "WebkitFontSynthesis",
	  "MSFontSynthesis",
	  "OFontSynthesis",
	  "fontVariant",
	  "MozFontVariant",
	  "WebkitFontVariant",
	  "MSFontVariant",
	  "OFontVariant",
	  "fontVariantAlternates",
	  "MozFontVariantAlternates",
	  "WebkitFontVariantAlternates",
	  "MSFontVariantAlternates",
	  "OFontVariantAlternates",
	  "fontVariantCaps",
	  "MozFontVariantCaps",
	  "WebkitFontVariantCaps",
	  "MSFontVariantCaps",
	  "OFontVariantCaps",
	  "fontVariantEastAsian",
	  "MozFontVariantEastAsian",
	  "WebkitFontVariantEastAsian",
	  "MSFontVariantEastAsian",
	  "OFontVariantEastAsian",
	  "fontVariantLigatures",
	  "MozFontVariantLigatures",
	  "WebkitFontVariantLigatures",
	  "MSFontVariantLigatures",
	  "OFontVariantLigatures",
	  "fontVariantNumeric",
	  "MozFontVariantNumeric",
	  "WebkitFontVariantNumeric",
	  "MSFontVariantNumeric",
	  "OFontVariantNumeric",
	  "fontVariantPosition",
	  "MozFontVariantPosition",
	  "WebkitFontVariantPosition",
	  "MSFontVariantPosition",
	  "OFontVariantPosition",
	  "fontWeight",
	  "MozFontWeight",
	  "WebkitFontWeight",
	  "MSFontWeight",
	  "OFontWeight",
	  "fr",
	  "MozFr",
	  "WebkitFr",
	  "MSFr",
	  "OFr",
	  "grad",
	  "MozGrad",
	  "WebkitGrad",
	  "MSGrad",
	  "OGrad",
	  "grid",
	  "MozGrid",
	  "WebkitGrid",
	  "MSGrid",
	  "OGrid",
	  "gridArea",
	  "MozGridArea",
	  "WebkitGridArea",
	  "MSGridArea",
	  "OGridArea",
	  "gridAutoColumns",
	  "MozGridAutoColumns",
	  "WebkitGridAutoColumns",
	  "MSGridAutoColumns",
	  "OGridAutoColumns",
	  "gridAutoFlow",
	  "MozGridAutoFlow",
	  "WebkitGridAutoFlow",
	  "MSGridAutoFlow",
	  "OGridAutoFlow",
	  "gridAutoRows",
	  "MozGridAutoRows",
	  "WebkitGridAutoRows",
	  "MSGridAutoRows",
	  "OGridAutoRows",
	  "gridColumn",
	  "MozGridColumn",
	  "WebkitGridColumn",
	  "MSGridColumn",
	  "OGridColumn",
	  "gridColumnEnd",
	  "MozGridColumnEnd",
	  "WebkitGridColumnEnd",
	  "MSGridColumnEnd",
	  "OGridColumnEnd",
	  "gridColumnGap",
	  "MozGridColumnGap",
	  "WebkitGridColumnGap",
	  "MSGridColumnGap",
	  "OGridColumnGap",
	  "gridColumnStart",
	  "MozGridColumnStart",
	  "WebkitGridColumnStart",
	  "MSGridColumnStart",
	  "OGridColumnStart",
	  "gridGap",
	  "MozGridGap",
	  "WebkitGridGap",
	  "MSGridGap",
	  "OGridGap",
	  "gridRow",
	  "MozGridRow",
	  "WebkitGridRow",
	  "MSGridRow",
	  "OGridRow",
	  "gridRowEnd",
	  "MozGridRowEnd",
	  "WebkitGridRowEnd",
	  "MSGridRowEnd",
	  "OGridRowEnd",
	  "gridRowGap",
	  "MozGridRowGap",
	  "WebkitGridRowGap",
	  "MSGridRowGap",
	  "OGridRowGap",
	  "gridRowStart",
	  "MozGridRowStart",
	  "WebkitGridRowStart",
	  "MSGridRowStart",
	  "OGridRowStart",
	  "gridTemplate",
	  "MozGridTemplate",
	  "WebkitGridTemplate",
	  "MSGridTemplate",
	  "OGridTemplate",
	  "gridTemplateAreas",
	  "MozGridTemplateAreas",
	  "WebkitGridTemplateAreas",
	  "MSGridTemplateAreas",
	  "OGridTemplateAreas",
	  "gridTemplateColumns",
	  "MozGridTemplateColumns",
	  "WebkitGridTemplateColumns",
	  "MSGridTemplateColumns",
	  "OGridTemplateColumns",
	  "gridTemplateRows",
	  "MozGridTemplateRows",
	  "WebkitGridTemplateRows",
	  "MSGridTemplateRows",
	  "OGridTemplateRows",
	  "height",
	  "MozHeight",
	  "WebkitHeight",
	  "MSHeight",
	  "OHeight",
	  "hyphens",
	  "MozHyphens",
	  "WebkitHyphens",
	  "MSHyphens",
	  "OHyphens",
	  "hz",
	  "MozHz",
	  "WebkitHz",
	  "MSHz",
	  "OHz",
	  "imageOrientation",
	  "MozImageOrientation",
	  "WebkitImageOrientation",
	  "MSImageOrientation",
	  "OImageOrientation",
	  "imageRendering",
	  "MozImageRendering",
	  "WebkitImageRendering",
	  "MSImageRendering",
	  "OImageRendering",
	  "imageResolution",
	  "MozImageResolution",
	  "WebkitImageResolution",
	  "MSImageResolution",
	  "OImageResolution",
	  "imeMode",
	  "MozImeMode",
	  "WebkitImeMode",
	  "MSImeMode",
	  "OImeMode",
	  "in",
	  "MozIn",
	  "WebkitIn",
	  "MSIn",
	  "OIn",
	  "inherit",
	  "MozInherit",
	  "WebkitInherit",
	  "MSInherit",
	  "OInherit",
	  "initial",
	  "MozInitial",
	  "WebkitInitial",
	  "MSInitial",
	  "OInitial",
	  "inlineSize",
	  "MozInlineSize",
	  "WebkitInlineSize",
	  "MSInlineSize",
	  "OInlineSize",
	  "isolation",
	  "MozIsolation",
	  "WebkitIsolation",
	  "MSIsolation",
	  "OIsolation",
	  "justifyContent",
	  "MozJustifyContent",
	  "WebkitJustifyContent",
	  "MSJustifyContent",
	  "OJustifyContent",
	  "khz",
	  "MozKhz",
	  "WebkitKhz",
	  "MSKhz",
	  "OKhz",
	  "left",
	  "MozLeft",
	  "WebkitLeft",
	  "MSLeft",
	  "OLeft",
	  "letterSpacing",
	  "MozLetterSpacing",
	  "WebkitLetterSpacing",
	  "MSLetterSpacing",
	  "OLetterSpacing",
	  "lineBreak",
	  "MozLineBreak",
	  "WebkitLineBreak",
	  "MSLineBreak",
	  "OLineBreak",
	  "lineHeight",
	  "MozLineHeight",
	  "WebkitLineHeight",
	  "MSLineHeight",
	  "OLineHeight",
	  "listStyle",
	  "MozListStyle",
	  "WebkitListStyle",
	  "MSListStyle",
	  "OListStyle",
	  "listStyleImage",
	  "MozListStyleImage",
	  "WebkitListStyleImage",
	  "MSListStyleImage",
	  "OListStyleImage",
	  "listStylePosition",
	  "MozListStylePosition",
	  "WebkitListStylePosition",
	  "MSListStylePosition",
	  "OListStylePosition",
	  "listStyleType",
	  "MozListStyleType",
	  "WebkitListStyleType",
	  "MSListStyleType",
	  "OListStyleType",
	  "margin",
	  "MozMargin",
	  "WebkitMargin",
	  "MSMargin",
	  "OMargin",
	  "marginBlockEnd",
	  "MozMarginBlockEnd",
	  "WebkitMarginBlockEnd",
	  "MSMarginBlockEnd",
	  "OMarginBlockEnd",
	  "marginBlockStart",
	  "MozMarginBlockStart",
	  "WebkitMarginBlockStart",
	  "MSMarginBlockStart",
	  "OMarginBlockStart",
	  "marginBottom",
	  "MozMarginBottom",
	  "WebkitMarginBottom",
	  "MSMarginBottom",
	  "OMarginBottom",
	  "marginInlineEnd",
	  "MozMarginInlineEnd",
	  "WebkitMarginInlineEnd",
	  "MSMarginInlineEnd",
	  "OMarginInlineEnd",
	  "marginInlineStart",
	  "MozMarginInlineStart",
	  "WebkitMarginInlineStart",
	  "MSMarginInlineStart",
	  "OMarginInlineStart",
	  "marginLeft",
	  "MozMarginLeft",
	  "WebkitMarginLeft",
	  "MSMarginLeft",
	  "OMarginLeft",
	  "marginRight",
	  "MozMarginRight",
	  "WebkitMarginRight",
	  "MSMarginRight",
	  "OMarginRight",
	  "marginTop",
	  "MozMarginTop",
	  "WebkitMarginTop",
	  "MSMarginTop",
	  "OMarginTop",
	  "mask",
	  "MozMask",
	  "WebkitMask",
	  "MSMask",
	  "OMask",
	  "maskClip",
	  "MozMaskClip",
	  "WebkitMaskClip",
	  "MSMaskClip",
	  "OMaskClip",
	  "maskComposite",
	  "MozMaskComposite",
	  "WebkitMaskComposite",
	  "MSMaskComposite",
	  "OMaskComposite",
	  "maskImage",
	  "MozMaskImage",
	  "WebkitMaskImage",
	  "MSMaskImage",
	  "OMaskImage",
	  "maskMode",
	  "MozMaskMode",
	  "WebkitMaskMode",
	  "MSMaskMode",
	  "OMaskMode",
	  "maskOrigin",
	  "MozMaskOrigin",
	  "WebkitMaskOrigin",
	  "MSMaskOrigin",
	  "OMaskOrigin",
	  "maskPosition",
	  "MozMaskPosition",
	  "WebkitMaskPosition",
	  "MSMaskPosition",
	  "OMaskPosition",
	  "maskRepeat",
	  "MozMaskRepeat",
	  "WebkitMaskRepeat",
	  "MSMaskRepeat",
	  "OMaskRepeat",
	  "maskSize",
	  "MozMaskSize",
	  "WebkitMaskSize",
	  "MSMaskSize",
	  "OMaskSize",
	  "maskType",
	  "MozMaskType",
	  "WebkitMaskType",
	  "MSMaskType",
	  "OMaskType",
	  "maxHeight",
	  "MozMaxHeight",
	  "WebkitMaxHeight",
	  "MSMaxHeight",
	  "OMaxHeight",
	  "maxWidth",
	  "MozMaxWidth",
	  "WebkitMaxWidth",
	  "MSMaxWidth",
	  "OMaxWidth",
	  "minBlockSize",
	  "MozMinBlockSize",
	  "WebkitMinBlockSize",
	  "MSMinBlockSize",
	  "OMinBlockSize",
	  "minHeight",
	  "MozMinHeight",
	  "WebkitMinHeight",
	  "MSMinHeight",
	  "OMinHeight",
	  "minInlineSize",
	  "MozMinInlineSize",
	  "WebkitMinInlineSize",
	  "MSMinInlineSize",
	  "OMinInlineSize",
	  "minWidth",
	  "MozMinWidth",
	  "WebkitMinWidth",
	  "MSMinWidth",
	  "OMinWidth",
	  "mixBlendMode",
	  "MozMixBlendMode",
	  "WebkitMixBlendMode",
	  "MSMixBlendMode",
	  "OMixBlendMode",
	  "mm",
	  "MozMm",
	  "WebkitMm",
	  "MSMm",
	  "OMm",
	  "ms",
	  "MozMs",
	  "WebkitMs",
	  "MSMs",
	  "OMs",
	  "objectFit",
	  "MozObjectFit",
	  "WebkitObjectFit",
	  "MSObjectFit",
	  "OObjectFit",
	  "objectPosition",
	  "MozObjectPosition",
	  "WebkitObjectPosition",
	  "MSObjectPosition",
	  "OObjectPosition",
	  "offsetBlockEnd",
	  "MozOffsetBlockEnd",
	  "WebkitOffsetBlockEnd",
	  "MSOffsetBlockEnd",
	  "OOffsetBlockEnd",
	  "offsetBlockStart",
	  "MozOffsetBlockStart",
	  "WebkitOffsetBlockStart",
	  "MSOffsetBlockStart",
	  "OOffsetBlockStart",
	  "offsetInlineEnd",
	  "MozOffsetInlineEnd",
	  "WebkitOffsetInlineEnd",
	  "MSOffsetInlineEnd",
	  "OOffsetInlineEnd",
	  "offsetInlineStart",
	  "MozOffsetInlineStart",
	  "WebkitOffsetInlineStart",
	  "MSOffsetInlineStart",
	  "OOffsetInlineStart",
	  "opacity",
	  "MozOpacity",
	  "WebkitOpacity",
	  "MSOpacity",
	  "OOpacity",
	  "order",
	  "MozOrder",
	  "WebkitOrder",
	  "MSOrder",
	  "OOrder",
	  "orphans",
	  "MozOrphans",
	  "WebkitOrphans",
	  "MSOrphans",
	  "OOrphans",
	  "outline",
	  "MozOutline",
	  "WebkitOutline",
	  "MSOutline",
	  "OOutline",
	  "outlineColor",
	  "MozOutlineColor",
	  "WebkitOutlineColor",
	  "MSOutlineColor",
	  "OOutlineColor",
	  "outlineOffset",
	  "MozOutlineOffset",
	  "WebkitOutlineOffset",
	  "MSOutlineOffset",
	  "OOutlineOffset",
	  "outlineStyle",
	  "MozOutlineStyle",
	  "WebkitOutlineStyle",
	  "MSOutlineStyle",
	  "OOutlineStyle",
	  "outlineWidth",
	  "MozOutlineWidth",
	  "WebkitOutlineWidth",
	  "MSOutlineWidth",
	  "OOutlineWidth",
	  "overflow",
	  "MozOverflow",
	  "WebkitOverflow",
	  "MSOverflow",
	  "OOverflow",
	  "overflowWrap",
	  "MozOverflowWrap",
	  "WebkitOverflowWrap",
	  "MSOverflowWrap",
	  "OOverflowWrap",
	  "overflowX",
	  "MozOverflowX",
	  "WebkitOverflowX",
	  "MSOverflowX",
	  "OOverflowX",
	  "overflowY",
	  "MozOverflowY",
	  "WebkitOverflowY",
	  "MSOverflowY",
	  "OOverflowY",
	  "padding",
	  "MozPadding",
	  "WebkitPadding",
	  "MSPadding",
	  "OPadding",
	  "paddingBlockEnd",
	  "MozPaddingBlockEnd",
	  "WebkitPaddingBlockEnd",
	  "MSPaddingBlockEnd",
	  "OPaddingBlockEnd",
	  "paddingBlockStart",
	  "MozPaddingBlockStart",
	  "WebkitPaddingBlockStart",
	  "MSPaddingBlockStart",
	  "OPaddingBlockStart",
	  "paddingBottom",
	  "MozPaddingBottom",
	  "WebkitPaddingBottom",
	  "MSPaddingBottom",
	  "OPaddingBottom",
	  "paddingInlineEnd",
	  "MozPaddingInlineEnd",
	  "WebkitPaddingInlineEnd",
	  "MSPaddingInlineEnd",
	  "OPaddingInlineEnd",
	  "paddingInlineStart",
	  "MozPaddingInlineStart",
	  "WebkitPaddingInlineStart",
	  "MSPaddingInlineStart",
	  "OPaddingInlineStart",
	  "paddingLeft",
	  "MozPaddingLeft",
	  "WebkitPaddingLeft",
	  "MSPaddingLeft",
	  "OPaddingLeft",
	  "paddingRight",
	  "MozPaddingRight",
	  "WebkitPaddingRight",
	  "MSPaddingRight",
	  "OPaddingRight",
	  "paddingTop",
	  "MozPaddingTop",
	  "WebkitPaddingTop",
	  "MSPaddingTop",
	  "OPaddingTop",
	  "pageBreakAfter",
	  "MozPageBreakAfter",
	  "WebkitPageBreakAfter",
	  "MSPageBreakAfter",
	  "OPageBreakAfter",
	  "pageBreakBefore",
	  "MozPageBreakBefore",
	  "WebkitPageBreakBefore",
	  "MSPageBreakBefore",
	  "OPageBreakBefore",
	  "pageBreakInside",
	  "MozPageBreakInside",
	  "WebkitPageBreakInside",
	  "MSPageBreakInside",
	  "OPageBreakInside",
	  "pc",
	  "MozPc",
	  "WebkitPc",
	  "MSPc",
	  "OPc",
	  "perspective",
	  "MozPerspective",
	  "WebkitPerspective",
	  "MSPerspective",
	  "OPerspective",
	  "perspectiveOrigin",
	  "MozPerspectiveOrigin",
	  "WebkitPerspectiveOrigin",
	  "MSPerspectiveOrigin",
	  "OPerspectiveOrigin",
	  "pointerEvents",
	  "MozPointerEvents",
	  "WebkitPointerEvents",
	  "MSPointerEvents",
	  "OPointerEvents",
	  "position",
	  "MozPosition",
	  "WebkitPosition",
	  "MSPosition",
	  "OPosition",
	  "pt",
	  "MozPt",
	  "WebkitPt",
	  "MSPt",
	  "OPt",
	  "px",
	  "MozPx",
	  "WebkitPx",
	  "MSPx",
	  "OPx",
	  "q",
	  "MozQ",
	  "WebkitQ",
	  "MSQ",
	  "OQ",
	  "quotes",
	  "MozQuotes",
	  "WebkitQuotes",
	  "MSQuotes",
	  "OQuotes",
	  "rad",
	  "MozRad",
	  "WebkitRad",
	  "MSRad",
	  "ORad",
	  "rem",
	  "MozRem",
	  "WebkitRem",
	  "MSRem",
	  "ORem",
	  "resize",
	  "MozResize",
	  "WebkitResize",
	  "MSResize",
	  "OResize",
	  "revert",
	  "MozRevert",
	  "WebkitRevert",
	  "MSRevert",
	  "ORevert",
	  "right",
	  "MozRight",
	  "WebkitRight",
	  "MSRight",
	  "ORight",
	  "rubyAlign",
	  "MozRubyAlign",
	  "WebkitRubyAlign",
	  "MSRubyAlign",
	  "ORubyAlign",
	  "rubyMerge",
	  "MozRubyMerge",
	  "WebkitRubyMerge",
	  "MSRubyMerge",
	  "ORubyMerge",
	  "rubyPosition",
	  "MozRubyPosition",
	  "WebkitRubyPosition",
	  "MSRubyPosition",
	  "ORubyPosition",
	  "s",
	  "MozS",
	  "WebkitS",
	  "MSS",
	  "OS",
	  "scrollBehavior",
	  "MozScrollBehavior",
	  "WebkitScrollBehavior",
	  "MSScrollBehavior",
	  "OScrollBehavior",
	  "scrollSnapCoordinate",
	  "MozScrollSnapCoordinate",
	  "WebkitScrollSnapCoordinate",
	  "MSScrollSnapCoordinate",
	  "OScrollSnapCoordinate",
	  "scrollSnapDestination",
	  "MozScrollSnapDestination",
	  "WebkitScrollSnapDestination",
	  "MSScrollSnapDestination",
	  "OScrollSnapDestination",
	  "scrollSnapType",
	  "MozScrollSnapType",
	  "WebkitScrollSnapType",
	  "MSScrollSnapType",
	  "OScrollSnapType",
	  "shapeImageThreshold",
	  "MozShapeImageThreshold",
	  "WebkitShapeImageThreshold",
	  "MSShapeImageThreshold",
	  "OShapeImageThreshold",
	  "shapeMargin",
	  "MozShapeMargin",
	  "WebkitShapeMargin",
	  "MSShapeMargin",
	  "OShapeMargin",
	  "shapeOutside",
	  "MozShapeOutside",
	  "WebkitShapeOutside",
	  "MSShapeOutside",
	  "OShapeOutside",
	  "tabSize",
	  "MozTabSize",
	  "WebkitTabSize",
	  "MSTabSize",
	  "OTabSize",
	  "tableLayout",
	  "MozTableLayout",
	  "WebkitTableLayout",
	  "MSTableLayout",
	  "OTableLayout",
	  "textAlign",
	  "MozTextAlign",
	  "WebkitTextAlign",
	  "MSTextAlign",
	  "OTextAlign",
	  "textAlignLast",
	  "MozTextAlignLast",
	  "WebkitTextAlignLast",
	  "MSTextAlignLast",
	  "OTextAlignLast",
	  "textCombineUpright",
	  "MozTextCombineUpright",
	  "WebkitTextCombineUpright",
	  "MSTextCombineUpright",
	  "OTextCombineUpright",
	  "textDecoration",
	  "MozTextDecoration",
	  "WebkitTextDecoration",
	  "MSTextDecoration",
	  "OTextDecoration",
	  "textDecorationColor",
	  "MozTextDecorationColor",
	  "WebkitTextDecorationColor",
	  "MSTextDecorationColor",
	  "OTextDecorationColor",
	  "textDecorationLine",
	  "MozTextDecorationLine",
	  "WebkitTextDecorationLine",
	  "MSTextDecorationLine",
	  "OTextDecorationLine",
	  "textDecorationStyle",
	  "MozTextDecorationStyle",
	  "WebkitTextDecorationStyle",
	  "MSTextDecorationStyle",
	  "OTextDecorationStyle",
	  "textEmphasis",
	  "MozTextEmphasis",
	  "WebkitTextEmphasis",
	  "MSTextEmphasis",
	  "OTextEmphasis",
	  "textEmphasisColor",
	  "MozTextEmphasisColor",
	  "WebkitTextEmphasisColor",
	  "MSTextEmphasisColor",
	  "OTextEmphasisColor",
	  "textEmphasisPosition",
	  "MozTextEmphasisPosition",
	  "WebkitTextEmphasisPosition",
	  "MSTextEmphasisPosition",
	  "OTextEmphasisPosition",
	  "textEmphasisStyle",
	  "MozTextEmphasisStyle",
	  "WebkitTextEmphasisStyle",
	  "MSTextEmphasisStyle",
	  "OTextEmphasisStyle",
	  "textIndent",
	  "MozTextIndent",
	  "WebkitTextIndent",
	  "MSTextIndent",
	  "OTextIndent",
	  "textOrientation",
	  "MozTextOrientation",
	  "WebkitTextOrientation",
	  "MSTextOrientation",
	  "OTextOrientation",
	  "textOverflow",
	  "MozTextOverflow",
	  "WebkitTextOverflow",
	  "MSTextOverflow",
	  "OTextOverflow",
	  "textRendering",
	  "MozTextRendering",
	  "WebkitTextRendering",
	  "MSTextRendering",
	  "OTextRendering",
	  "textShadow",
	  "MozTextShadow",
	  "WebkitTextShadow",
	  "MSTextShadow",
	  "OTextShadow",
	  "textTransform",
	  "MozTextTransform",
	  "WebkitTextTransform",
	  "MSTextTransform",
	  "OTextTransform",
	  "textUnderlinePosition",
	  "MozTextUnderlinePosition",
	  "WebkitTextUnderlinePosition",
	  "MSTextUnderlinePosition",
	  "OTextUnderlinePosition",
	  "top",
	  "MozTop",
	  "WebkitTop",
	  "MSTop",
	  "OTop",
	  "touchAction",
	  "MozTouchAction",
	  "WebkitTouchAction",
	  "MSTouchAction",
	  "OTouchAction",
	  "transform",
	  "MozTransform",
	  "WebkitTransform",
	  "msTransform",
	  "OTransform",
	  "transformBox",
	  "MozTransformBox",
	  "WebkitTransformBox",
	  "MSTransformBox",
	  "OTransformBox",
	  "transformOrigin",
	  "MozTransformOrigin",
	  "WebkitTransformOrigin",
	  "MSTransformOrigin",
	  "OTransformOrigin",
	  "transformStyle",
	  "MozTransformStyle",
	  "WebkitTransformStyle",
	  "MSTransformStyle",
	  "OTransformStyle",
	  "transition",
	  "MozTransition",
	  "WebkitTransition",
	  "MSTransition",
	  "OTransition",
	  "transitionDelay",
	  "MozTransitionDelay",
	  "WebkitTransitionDelay",
	  "MSTransitionDelay",
	  "OTransitionDelay",
	  "transitionDuration",
	  "MozTransitionDuration",
	  "WebkitTransitionDuration",
	  "MSTransitionDuration",
	  "OTransitionDuration",
	  "transitionProperty",
	  "MozTransitionProperty",
	  "WebkitTransitionProperty",
	  "MSTransitionProperty",
	  "OTransitionProperty",
	  "transitionTimingFunction",
	  "MozTransitionTimingFunction",
	  "WebkitTransitionTimingFunction",
	  "MSTransitionTimingFunction",
	  "OTransitionTimingFunction",
	  "turn",
	  "MozTurn",
	  "WebkitTurn",
	  "MSTurn",
	  "OTurn",
	  "unicodeBidi",
	  "MozUnicodeBidi",
	  "WebkitUnicodeBidi",
	  "MSUnicodeBidi",
	  "OUnicodeBidi",
	  "unset",
	  "MozUnset",
	  "WebkitUnset",
	  "MSUnset",
	  "OUnset",
	  "verticalAlign",
	  "MozVerticalAlign",
	  "WebkitVerticalAlign",
	  "MSVerticalAlign",
	  "OVerticalAlign",
	  "vh",
	  "MozVh",
	  "WebkitVh",
	  "MSVh",
	  "OVh",
	  "visibility",
	  "MozVisibility",
	  "WebkitVisibility",
	  "MSVisibility",
	  "OVisibility",
	  "vmax",
	  "MozVmax",
	  "WebkitVmax",
	  "MSVmax",
	  "OVmax",
	  "vmin",
	  "MozVmin",
	  "WebkitVmin",
	  "MSVmin",
	  "OVmin",
	  "vw",
	  "MozVw",
	  "WebkitVw",
	  "MSVw",
	  "OVw",
	  "whiteSpace",
	  "MozWhiteSpace",
	  "WebkitWhiteSpace",
	  "MSWhiteSpace",
	  "OWhiteSpace",
	  "widows",
	  "MozWidows",
	  "WebkitWidows",
	  "MSWidows",
	  "OWidows",
	  "width",
	  "MozWidth",
	  "WebkitWidth",
	  "MSWidth",
	  "OWidth",
	  "willChange",
	  "MozWillChange",
	  "WebkitWillChange",
	  "MSWillChange",
	  "OWillChange",
	  "wordBreak",
	  "MozWordBreak",
	  "WebkitWordBreak",
	  "MSWordBreak",
	  "OWordBreak",
	  "wordSpacing",
	  "MozWordSpacing",
	  "WebkitWordSpacing",
	  "MSWordSpacing",
	  "OWordSpacing",
	  "wordWrap",
	  "MozWordWrap",
	  "WebkitWordWrap",
	  "MSWordWrap",
	  "OWordWrap",
	  "writingMode",
	  "MozWritingMode",
	  "WebkitWritingMode",
	  "MSWritingMode",
	  "OWritingMode",
	  "zIndex",
	  "MozZIndex",
	  "WebkitZIndex",
	  "MSZIndex",
	  "OZIndex",
	  "fontSize",
	  "MozFontSize",
	  "WebkitFontSize",
	  "MSFontSize",
	  "OFontSize",
	  "flex",
	  "MozFlex",
	  "WebkitFlex",
	  "MSFlex",
	  "OFlex",
	  "fr",
	  "MozFr",
	  "WebkitFr",
	  "MSFr",
	  "OFr",
	  "overflowScrolling",
	  "MozOverflowScrolling",
	  "WebkitOverflowScrolling",
	  "MSOverflowScrolling",
	  "OOverflowScrolling",
	  "userSelect",
	  "MozUserSelect",
	  "WebkitUserSelect",
	  "MSUserSelect",
	  "OUserSelect"
	]


/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {
	/**
	 * @license
	 *
	 * chroma.js - JavaScript library for color conversions
	 * 
	 * Copyright (c) 2011-2017, Gregor Aisch
	 * All rights reserved.
	 * 
	 * Redistribution and use in source and binary forms, with or without
	 * modification, are permitted provided that the following conditions are met:
	 * 
	 * 1. Redistributions of source code must retain the above copyright notice, this
	 *    list of conditions and the following disclaimer.
	 * 
	 * 2. Redistributions in binary form must reproduce the above copyright notice,
	 *    this list of conditions and the following disclaimer in the documentation
	 *    and/or other materials provided with the distribution.
	 * 
	 * 3. The name Gregor Aisch may not be used to endorse or promote products
	 *    derived from this software without specific prior written permission.
	 * 
	 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
	 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
	 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
	 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
	 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
	 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
	 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
	 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 *
	 */

	(function() {
	  var Color, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs, atan2, bezier, blend, blend_f, brewer, burn, chroma, clip_rgb, cmyk2rgb, colors, cos, css2rgb, darken, dodge, each, floor, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log, luminance_x, m, max, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb,
	    slice = [].slice;

	  type = (function() {

	    /*
	    for browser-safe type checking+
	    ported from jQuery's $.type
	     */
	    var classToType, len, name, o, ref;
	    classToType = {};
	    ref = "Boolean Number String Function Array Date RegExp Undefined Null".split(" ");
	    for (o = 0, len = ref.length; o < len; o++) {
	      name = ref[o];
	      classToType["[object " + name + "]"] = name.toLowerCase();
	    }
	    return function(obj) {
	      var strType;
	      strType = Object.prototype.toString.call(obj);
	      return classToType[strType] || "object";
	    };
	  })();

	  limit = function(x, min, max) {
	    if (min == null) {
	      min = 0;
	    }
	    if (max == null) {
	      max = 1;
	    }
	    if (x < min) {
	      x = min;
	    }
	    if (x > max) {
	      x = max;
	    }
	    return x;
	  };

	  unpack = function(args) {
	    if (args.length >= 3) {
	      return Array.prototype.slice.call(args);
	    } else {
	      return args[0];
	    }
	  };

	  clip_rgb = function(rgb) {
	    var i, o;
	    rgb._clipped = false;
	    rgb._unclipped = rgb.slice(0);
	    for (i = o = 0; o < 3; i = ++o) {
	      if (i < 3) {
	        if (rgb[i] < 0 || rgb[i] > 255) {
	          rgb._clipped = true;
	        }
	        if (rgb[i] < 0) {
	          rgb[i] = 0;
	        }
	        if (rgb[i] > 255) {
	          rgb[i] = 255;
	        }
	      } else if (i === 3) {
	        if (rgb[i] < 0) {
	          rgb[i] = 0;
	        }
	        if (rgb[i] > 1) {
	          rgb[i] = 1;
	        }
	      }
	    }
	    if (!rgb._clipped) {
	      delete rgb._unclipped;
	    }
	    return rgb;
	  };

	  PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;

	  TWOPI = PI * 2;

	  PITHIRD = PI / 3;

	  DEG2RAD = PI / 180;

	  RAD2DEG = 180 / PI;

	  chroma = function() {
	    if (arguments[0] instanceof Color) {
	      return arguments[0];
	    }
	    return (function(func, args, ctor) {
	      ctor.prototype = func.prototype;
	      var child = new ctor, result = func.apply(child, args);
	      return Object(result) === result ? result : child;
	    })(Color, arguments, function(){});
	  };

	  chroma["default"] = chroma;

	  _interpolators = [];

	  if ((typeof module !== "undefined" && module !== null) && (module.exports != null)) {
	    module.exports = chroma;
	  }

	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
	      return chroma;
	    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else {
	    root = typeof exports !== "undefined" && exports !== null ? exports : this;
	    root.chroma = chroma;
	  }

	  chroma.version = '1.3.7';

	  _input = {};

	  _guess_formats = [];

	  _guess_formats_sorted = false;

	  Color = (function() {
	    function Color() {
	      var arg, args, chk, len, len1, me, mode, o, w;
	      me = this;
	      args = [];
	      for (o = 0, len = arguments.length; o < len; o++) {
	        arg = arguments[o];
	        if (arg != null) {
	          args.push(arg);
	        }
	      }
	      if (args.length > 1) {
	        mode = args[args.length - 1];
	      }
	      if (_input[mode] != null) {
	        me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));
	      } else {
	        if (!_guess_formats_sorted) {
	          _guess_formats = _guess_formats.sort(function(a, b) {
	            return b.p - a.p;
	          });
	          _guess_formats_sorted = true;
	        }
	        for (w = 0, len1 = _guess_formats.length; w < len1; w++) {
	          chk = _guess_formats[w];
	          mode = chk.test.apply(chk, args);
	          if (mode) {
	            break;
	          }
	        }
	        if (mode) {
	          me._rgb = clip_rgb(_input[mode].apply(_input, args));
	        }
	      }
	      if (me._rgb == null) {
	        console.warn('unknown format: ' + args);
	      }
	      if (me._rgb == null) {
	        me._rgb = [0, 0, 0];
	      }
	      if (me._rgb.length === 3) {
	        me._rgb.push(1);
	      }
	    }

	    Color.prototype.toString = function() {
	      return this.hex();
	    };

	    Color.prototype.clone = function() {
	      return chroma(me._rgb);
	    };

	    return Color;

	  })();

	  chroma._input = _input;


	  /**
	  	ColorBrewer colors for chroma.js
	  
	  	Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The 
	  	Pennsylvania State University.
	  
	  	Licensed under the Apache License, Version 2.0 (the "License"); 
	  	you may not use this file except in compliance with the License.
	  	You may obtain a copy of the License at	
	  	http://www.apache.org/licenses/LICENSE-2.0
	  
	  	Unless required by applicable law or agreed to in writing, software distributed
	  	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
	  	CONDITIONS OF ANY KIND, either express or implied. See the License for the
	  	specific language governing permissions and limitations under the License.
	  
	      @preserve
	   */

	  chroma.brewer = brewer = {
	    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],
	    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],
	    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],
	    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],
	    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],
	    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],
	    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],
	    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],
	    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],
	    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],
	    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],
	    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],
	    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],
	    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],
	    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],
	    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],
	    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],
	    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],
	    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],
	    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],
	    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],
	    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],
	    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],
	    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],
	    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],
	    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],
	    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],
	    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],
	    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],
	    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],
	    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],
	    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],
	    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],
	    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],
	    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],
	    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']
	  };

	  (function() {
	    var key, results;
	    results = [];
	    for (key in brewer) {
	      results.push(brewer[key.toLowerCase()] = brewer[key]);
	    }
	    return results;
	  })();


	  /**
	  	X11 color names
	  
	  	http://www.w3.org/TR/css3-color/#svg-color
	   */

	  w3cx11 = {
	    aliceblue: '#f0f8ff',
	    antiquewhite: '#faebd7',
	    aqua: '#00ffff',
	    aquamarine: '#7fffd4',
	    azure: '#f0ffff',
	    beige: '#f5f5dc',
	    bisque: '#ffe4c4',
	    black: '#000000',
	    blanchedalmond: '#ffebcd',
	    blue: '#0000ff',
	    blueviolet: '#8a2be2',
	    brown: '#a52a2a',
	    burlywood: '#deb887',
	    cadetblue: '#5f9ea0',
	    chartreuse: '#7fff00',
	    chocolate: '#d2691e',
	    coral: '#ff7f50',
	    cornflower: '#6495ed',
	    cornflowerblue: '#6495ed',
	    cornsilk: '#fff8dc',
	    crimson: '#dc143c',
	    cyan: '#00ffff',
	    darkblue: '#00008b',
	    darkcyan: '#008b8b',
	    darkgoldenrod: '#b8860b',
	    darkgray: '#a9a9a9',
	    darkgreen: '#006400',
	    darkgrey: '#a9a9a9',
	    darkkhaki: '#bdb76b',
	    darkmagenta: '#8b008b',
	    darkolivegreen: '#556b2f',
	    darkorange: '#ff8c00',
	    darkorchid: '#9932cc',
	    darkred: '#8b0000',
	    darksalmon: '#e9967a',
	    darkseagreen: '#8fbc8f',
	    darkslateblue: '#483d8b',
	    darkslategray: '#2f4f4f',
	    darkslategrey: '#2f4f4f',
	    darkturquoise: '#00ced1',
	    darkviolet: '#9400d3',
	    deeppink: '#ff1493',
	    deepskyblue: '#00bfff',
	    dimgray: '#696969',
	    dimgrey: '#696969',
	    dodgerblue: '#1e90ff',
	    firebrick: '#b22222',
	    floralwhite: '#fffaf0',
	    forestgreen: '#228b22',
	    fuchsia: '#ff00ff',
	    gainsboro: '#dcdcdc',
	    ghostwhite: '#f8f8ff',
	    gold: '#ffd700',
	    goldenrod: '#daa520',
	    gray: '#808080',
	    green: '#008000',
	    greenyellow: '#adff2f',
	    grey: '#808080',
	    honeydew: '#f0fff0',
	    hotpink: '#ff69b4',
	    indianred: '#cd5c5c',
	    indigo: '#4b0082',
	    ivory: '#fffff0',
	    khaki: '#f0e68c',
	    laserlemon: '#ffff54',
	    lavender: '#e6e6fa',
	    lavenderblush: '#fff0f5',
	    lawngreen: '#7cfc00',
	    lemonchiffon: '#fffacd',
	    lightblue: '#add8e6',
	    lightcoral: '#f08080',
	    lightcyan: '#e0ffff',
	    lightgoldenrod: '#fafad2',
	    lightgoldenrodyellow: '#fafad2',
	    lightgray: '#d3d3d3',
	    lightgreen: '#90ee90',
	    lightgrey: '#d3d3d3',
	    lightpink: '#ffb6c1',
	    lightsalmon: '#ffa07a',
	    lightseagreen: '#20b2aa',
	    lightskyblue: '#87cefa',
	    lightslategray: '#778899',
	    lightslategrey: '#778899',
	    lightsteelblue: '#b0c4de',
	    lightyellow: '#ffffe0',
	    lime: '#00ff00',
	    limegreen: '#32cd32',
	    linen: '#faf0e6',
	    magenta: '#ff00ff',
	    maroon: '#800000',
	    maroon2: '#7f0000',
	    maroon3: '#b03060',
	    mediumaquamarine: '#66cdaa',
	    mediumblue: '#0000cd',
	    mediumorchid: '#ba55d3',
	    mediumpurple: '#9370db',
	    mediumseagreen: '#3cb371',
	    mediumslateblue: '#7b68ee',
	    mediumspringgreen: '#00fa9a',
	    mediumturquoise: '#48d1cc',
	    mediumvioletred: '#c71585',
	    midnightblue: '#191970',
	    mintcream: '#f5fffa',
	    mistyrose: '#ffe4e1',
	    moccasin: '#ffe4b5',
	    navajowhite: '#ffdead',
	    navy: '#000080',
	    oldlace: '#fdf5e6',
	    olive: '#808000',
	    olivedrab: '#6b8e23',
	    orange: '#ffa500',
	    orangered: '#ff4500',
	    orchid: '#da70d6',
	    palegoldenrod: '#eee8aa',
	    palegreen: '#98fb98',
	    paleturquoise: '#afeeee',
	    palevioletred: '#db7093',
	    papayawhip: '#ffefd5',
	    peachpuff: '#ffdab9',
	    peru: '#cd853f',
	    pink: '#ffc0cb',
	    plum: '#dda0dd',
	    powderblue: '#b0e0e6',
	    purple: '#800080',
	    purple2: '#7f007f',
	    purple3: '#a020f0',
	    rebeccapurple: '#663399',
	    red: '#ff0000',
	    rosybrown: '#bc8f8f',
	    royalblue: '#4169e1',
	    saddlebrown: '#8b4513',
	    salmon: '#fa8072',
	    sandybrown: '#f4a460',
	    seagreen: '#2e8b57',
	    seashell: '#fff5ee',
	    sienna: '#a0522d',
	    silver: '#c0c0c0',
	    skyblue: '#87ceeb',
	    slateblue: '#6a5acd',
	    slategray: '#708090',
	    slategrey: '#708090',
	    snow: '#fffafa',
	    springgreen: '#00ff7f',
	    steelblue: '#4682b4',
	    tan: '#d2b48c',
	    teal: '#008080',
	    thistle: '#d8bfd8',
	    tomato: '#ff6347',
	    turquoise: '#40e0d0',
	    violet: '#ee82ee',
	    wheat: '#f5deb3',
	    white: '#ffffff',
	    whitesmoke: '#f5f5f5',
	    yellow: '#ffff00',
	    yellowgreen: '#9acd32'
	  };

	  chroma.colors = colors = w3cx11;

	  lab2rgb = function() {
	    var a, args, b, g, l, r, x, y, z;
	    args = unpack(arguments);
	    l = args[0], a = args[1], b = args[2];
	    y = (l + 16) / 116;
	    x = isNaN(a) ? y : y + a / 500;
	    z = isNaN(b) ? y : y - b / 200;
	    y = LAB_CONSTANTS.Yn * lab_xyz(y);
	    x = LAB_CONSTANTS.Xn * lab_xyz(x);
	    z = LAB_CONSTANTS.Zn * lab_xyz(z);
	    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);
	    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);
	    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);
	    return [r, g, b, args.length > 3 ? args[3] : 1];
	  };

	  xyz_rgb = function(r) {
	    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055);
	  };

	  lab_xyz = function(t) {
	    if (t > LAB_CONSTANTS.t1) {
	      return t * t * t;
	    } else {
	      return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);
	    }
	  };

	  LAB_CONSTANTS = {
	    Kn: 18,
	    Xn: 0.950470,
	    Yn: 1,
	    Zn: 1.088830,
	    t0: 0.137931034,
	    t1: 0.206896552,
	    t2: 0.12841855,
	    t3: 0.008856452
	  };

	  rgb2lab = function() {
	    var b, g, r, ref, ref1, x, y, z;
	    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];
	    ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];
	    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];
	  };

	  rgb_xyz = function(r) {
	    if ((r /= 255) <= 0.04045) {
	      return r / 12.92;
	    } else {
	      return pow((r + 0.055) / 1.055, 2.4);
	    }
	  };

	  xyz_lab = function(t) {
	    if (t > LAB_CONSTANTS.t3) {
	      return pow(t, 1 / 3);
	    } else {
	      return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;
	    }
	  };

	  rgb2xyz = function() {
	    var b, g, r, ref, x, y, z;
	    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];
	    r = rgb_xyz(r);
	    g = rgb_xyz(g);
	    b = rgb_xyz(b);
	    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);
	    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);
	    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);
	    return [x, y, z];
	  };

	  chroma.lab = function() {
	    return (function(func, args, ctor) {
	      ctor.prototype = func.prototype;
	      var child = new ctor, result = func.apply(child, args);
	      return Object(result) === result ? result : child;
	    })(Color, slice.call(arguments).concat(['lab']), function(){});
	  };

	  _input.lab = lab2rgb;

	  Color.prototype.lab = function() {
	    return rgb2lab(this._rgb);
	  };

	  bezier = function(colors) {
	    var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;
	    colors = (function() {
	      var len, o, results;
	      results = [];
	      for (o = 0, len = colors.length; o < len; o++) {
	        c = colors[o];
	        results.push(chroma(c));
	      }
	      return results;
	    })();
	    if (colors.length === 2) {
	      ref = (function() {
	        var len, o, results;
	        results = [];
	        for (o = 0, len = colors.length; o < len; o++) {
	          c = colors[o];
	          results.push(c.lab());
	        }
	        return results;
	      })(), lab0 = ref[0], lab1 = ref[1];
	      I = function(t) {
	        var i, lab;
	        lab = (function() {
	          var o, results;
	          results = [];
	          for (i = o = 0; o <= 2; i = ++o) {
	            results.push(lab0[i] + t * (lab1[i] - lab0[i]));
	          }
	          return results;
	        })();
	        return chroma.lab.apply(chroma, lab);
	      };
	    } else if (colors.length === 3) {
	      ref1 = (function() {
	        var len, o, results;
	        results = [];
	        for (o = 0, len = colors.length; o < len; o++) {
	          c = colors[o];
	          results.push(c.lab());
	        }
	        return results;
	      })(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];
	      I = function(t) {
	        var i, lab;
	        lab = (function() {
	          var o, results;
	          results = [];
	          for (i = o = 0; o <= 2; i = ++o) {
	            results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);
	          }
	          return results;
	        })();
	        return chroma.lab.apply(chroma, lab);
	      };
	    } else if (colors.length === 4) {
	      ref2 = (function() {
	        var len, o, results;
	        results = [];
	        for (o = 0, len = colors.length; o < len; o++) {
	          c = colors[o];
	          results.push(c.lab());
	        }
	        return results;
	      })(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];
	      I = function(t) {
	        var i, lab;
	        lab = (function() {
	          var o, results;
	          results = [];
	          for (i = o = 0; o <= 2; i = ++o) {
	            results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);
	          }
	          return results;
	        })();
	        return chroma.lab.apply(chroma, lab);
	      };
	    } else if (colors.length === 5) {
	      I0 = bezier(colors.slice(0, 3));
	      I1 = bezier(colors.slice(2, 5));
	      I = function(t) {
	        if (t < 0.5) {
	          return I0(t * 2);
	        } else {
	          return I1((t - 0.5) * 2);
	        }
	      };
	    }
	    return I;
	  };

	  chroma.bezier = function(colors) {
	    var f;
	    f = bezier(colors);
	    f.scale = function() {
	      return chroma.scale(f);
	    };
	    return f;
	  };


	  /*
	      chroma.js
	  
	      Copyright (c) 2011-2013, Gregor Aisch
	      All rights reserved.
	  
	      Redistribution and use in source and binary forms, with or without
	      modification, are permitted provided that the following conditions are met:
	  
	      * Redistributions of source code must retain the above copyright notice, this
	        list of conditions and the following disclaimer.
	  
	      * Redistributions in binary form must reproduce the above copyright notice,
	        this list of conditions and the following disclaimer in the documentation
	        and/or other materials provided with the distribution.
	  
	      * The name Gregor Aisch may not be used to endorse or promote products
	        derived from this software without specific prior written permission.
	  
	      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
	      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
	      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
	      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
	      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
	      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
	      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
	      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
	      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	  
	      @source: https://github.com/gka/chroma.js
	   */

	  chroma.cubehelix = function(start, rotations, hue, gamma, lightness) {
	    var dh, dl, f;
	    if (start == null) {
	      start = 300;
	    }
	    if (rotations == null) {
	      rotations = -1.5;
	    }
	    if (hue == null) {
	      hue = 1;
	    }
	    if (gamma == null) {
	      gamma = 1;
	    }
	    if (lightness == null) {
	      lightness = [0, 1];
	    }
	    dh = 0;
	    if (type(lightness) === 'array') {
	      dl = lightness[1] - lightness[0];
	    } else {
	      dl = 0;
	      lightness = [lightness, lightness];
	    }
	    f = function(fract) {
	      var a, amp, b, cos_a, g, h, l, r, sin_a;
	      a = TWOPI * ((start + 120) / 360 + rotations * fract);
	      l = pow(lightness[0] + dl * fract, gamma);
	      h = dh !== 0 ? hue[0] + fract * dh : hue;
	      amp = h * l * (1 - l) / 2;
	      cos_a = cos(a);
	      sin_a = sin(a);
	      r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);
	      g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);
	      b = l + amp * (+1.97294 * cos_a);
	      return chroma(clip_rgb([r * 255, g * 255, b * 255]));
	    };
	    f.start = function(s) {
	      if (s == null) {
	        return start;
	      }
	      start = s;
	      return f;
	    };
	    f.rotations = function(r) {
	      if (r == null) {
	        return rotations;
	      }
	      rotations = r;
	      return f;
	    };
	    f.gamma = function(g) {
	      if (g == null) {
	        return gamma;
	      }
	      gamma = g;
	      return f;
	    };
	    f.hue = function(h) {
	      if (h == null) {
	        return hue;
	      }
	      hue = h;
	      if (type(hue) === 'array') {
	        dh = hue[1] - hue[0];
	        if (dh === 0) {
	          hue = hue[1];
	        }
	      } else {
	        dh = 0;
	      }
	      return f;
	    };
	    f.lightness = function(h) {
	      if (h == null) {
	        return lightness;
	      }
	      if (type(h) === 'array') {
	        lightness = h;
	        dl = h[1] - h[0];
	      } else {
	        lightness = [h, h];
	        dl = 0;
	      }
	      return f;
	    };
	    f.scale = function() {
	      return chroma.scale(f);
	    };
	    f.hue(hue);
	    return f;
	  };

	  chroma.random = function() {
	    var code, digits, i, o;
	    digits = '0123456789abcdef';
	    code = '#';
	    for (i = o = 0; o < 6; i = ++o) {
	      code += digits.charAt(floor(Math.random() * 16));
	    }
	    return new Color(code);
	  };

	  _interpolators = [];

	  interpolate = function(col1, col2, f, m) {
	    var interpol, len, o, res;
	    if (f == null) {
	      f = 0.5;
	    }
	    if (m == null) {
	      m = 'rgb';
	    }

	    /*
	    interpolates between colors
	    f = 0 --> me
	    f = 1 --> col
	     */
	    if (type(col1) !== 'object') {
	      col1 = chroma(col1);
	    }
	    if (type(col2) !== 'object') {
	      col2 = chroma(col2);
	    }
	    for (o = 0, len = _interpolators.length; o < len; o++) {
	      interpol = _interpolators[o];
	      if (m === interpol[0]) {
	        res = interpol[1](col1, col2, f, m);
	        break;
	      }
	    }
	    if (res == null) {
	      throw "color mode " + m + " is not supported";
	    }
	    return res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));
	  };

	  chroma.interpolate = interpolate;

	  Color.prototype.interpolate = function(col2, f, m) {
	    return interpolate(this, col2, f, m);
	  };

	  chroma.mix = interpolate;

	  Color.prototype.mix = Color.prototype.interpolate;

	  _input.rgb = function() {
	    var k, ref, results, v;
	    ref = unpack(arguments);
	    results = [];
	    for (k in ref) {
	      v = ref[k];
	      results.push(v);
	    }
	    return results;
	  };

	  chroma.rgb = function() {
	    return (function(func, args, ctor) {
	      ctor.prototype = func.prototype;
	      var child = new ctor, result = func.apply(child, args);
	      return Object(result) === result ? result : child;
	    })(Color, slice.call(arguments).concat(['rgb']), function(){});
	  };

	  Color.prototype.rgb = function(round) {
	    if (round == null) {
	      round = true;
	    }
	    if (round) {
	      return this._rgb.map(Math.round).slice(0, 3);
	    } else {
	      return this._rgb.slice(0, 3);
	    }
	  };

	  Color.prototype.rgba = function(round) {
	    if (round == null) {
	      round = true;
	    }
	    if (!round) {
	      return this._rgb.slice(0);
	    }
	    return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];
	  };

	  _guess_formats.push({
	    p: 3,
	    test: function(n) {
	      var a;
	      a = unpack(arguments);
	      if (type(a) === 'array' && a.length === 3) {
	        return 'rgb';
	      }
	      if (a.length === 4 && type(a[3]) === "number" && a[3] >= 0 && a[3] <= 1) {
	        return 'rgb';
	      }
	    }
	  });

	  _input.lrgb = _input.rgb;

	  interpolate_lrgb = function(col1, col2, f, m) {
	    var xyz0, xyz1;
	    xyz0 = col1._rgb;
	    xyz1 = col2._rgb;
	    return new Color(sqrt(pow(xyz0[0], 2) * (1 - f) + pow(xyz1[0], 2) * f), sqrt(pow(xyz0[1], 2) * (1 - f) + pow(xyz1[1], 2) * f), sqrt(pow(xyz0[2], 2) * (1 - f) + pow(xyz1[2], 2) * f), m);
	  };

	  _average_lrgb = function(colors) {
	    var col, f, len, o, rgb, xyz;
	    f = 1 / colors.length;
	    xyz = [0, 0, 0, 0];
	    for (o = 0, len = colors.length; o < len; o++) {
	      col = colors[o];
	      rgb = col._rgb;
	      xyz[0] += pow(rgb[0], 2) * f;
	      xyz[1] += pow(rgb[1], 2) * f;
	      xyz[2] += pow(rgb[2], 2) * f;
	      xyz[3] += rgb[3] * f;
	    }
	    xyz[0] = sqrt(xyz[0]);
	    xyz[1] = sqrt(xyz[1]);
	    xyz[2] = sqrt(xyz[2]);
	    return new Color(xyz);
	  };

	  _interpolators.push(['lrgb', interpolate_lrgb]);

	  chroma.average = function(colors, mode) {
	    var A, alpha, c, cnt, dx, dy, first, i, l, len, o, xyz, xyz2;
	    if (mode == null) {
	      mode = 'rgb';
	    }
	    l = colors.length;
	    colors = colors.map(function(c) {
	      return chroma(c);
	    });
	    first = colors.splice(0, 1)[0];
	    if (mode === 'lrgb') {
	      return _average_lrgb(colors);
	    }
	    xyz = first.get(mode);
	    cnt = [];
	    dx = 0;
	    dy = 0;
	    for (i in xyz) {
	      xyz[i] = xyz[i] || 0;
	      cnt.push(isNaN(xyz[i]) ? 0 : 1);
	      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {
	        A = xyz[i] / 180 * PI;
	        dx += cos(A);
	        dy += sin(A);
	      }
	    }
	    alpha = first.alpha();
	    for (o = 0, len = colors.length; o < len; o++) {
	      c = colors[o];
	      xyz2 = c.get(mode);
	      alpha += c.alpha();
	      for (i in xyz) {
	        if (!isNaN(xyz2[i])) {
	          cnt[i] += 1;
	          if (mode.charAt(i) === 'h') {
	            A = xyz2[i] / 180 * PI;
	            dx += cos(A);
	            dy += sin(A);
	          } else {
	            xyz[i] += xyz2[i];
	          }
	        }
	      }
	    }
	    for (i in xyz) {
	      if (mode.charAt(i) === 'h') {
	        A = atan2(dy / cnt[i], dx / cnt[i]) / PI * 180;
	        while (A < 0) {
	          A += 360;
	        }
	        while (A >= 360) {
	          A -= 360;
	        }
	        xyz[i] = A;
	      } else {
	        xyz[i] = xyz[i] / cnt[i];
	      }
	    }
	    return chroma(xyz, mode).alpha(alpha / l);
	  };

	  hex2rgb = function(hex) {
	    var a, b, g, r, rgb, u;
	    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {
	      if (hex.length === 4 || hex.length === 7) {
	        hex = hex.substr(1);
	      }
	      if (hex.length === 3) {
	        hex = hex.split("");
	        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];
	      }
	      u = parseInt(hex, 16);
	      r = u >> 16;
	      g = u >> 8 & 0xFF;
	      b = u & 0xFF;
	      return [r, g, b, 1];
	    }
	    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {
	      if (hex.length === 9) {
	        hex = hex.substr(1);
	      }
	      u = parseInt(hex, 16);
	      r = u >> 24 & 0xFF;
	      g = u >> 16 & 0xFF;
	      b = u >> 8 & 0xFF;
	      a = round((u & 0xFF) / 0xFF * 100) / 100;
	      return [r, g, b, a];
	    }
	    if ((_input.css != null) && (rgb = _input.css(hex))) {
	      return rgb;
	    }
	    throw "unknown color: " + hex;
	  };

	  rgb2hex = function(channels, mode) {
	    var a, b, g, hxa, r, str, u;
	    if (mode == null) {
	      mode = 'rgb';
	    }
	    r = channels[0], g = channels[1], b = channels[2], a = channels[3];
	    r = Math.round(r);
	    g = Math.round(g);
	    b = Math.round(b);
	    u = r << 16 | g << 8 | b;
	    str = "000000" + u.toString(16);
	    str = str.substr(str.length - 6);
	    hxa = '0' + round(a * 255).toString(16);
	    hxa = hxa.substr(hxa.length - 2);
	    return "#" + (function() {
	      switch (mode.toLowerCase()) {
	        case 'rgba':
	          return str + hxa;
	        case 'argb':
	          return hxa + str;
	        default:
	          return str;
	      }
	    })();
	  };

	  _input.hex = function(h) {
	    return hex2rgb(h);
	  };

	  chroma.hex = function() {
	    return (function(func, args, ctor) {
	      ctor.prototype = func.prototype;
	      var child = new ctor, result = func.apply(child, args);
	      return Object(result) === result ? result : child;
	    })(Color, slice.call(arguments).concat(['hex']), function(){});
	  };

	  Color.prototype.hex = function(mode) {
	    if (mode == null) {
	      mode = 'rgb';
	    }
	    return rgb2hex(this._rgb, mode);
	  };

	  _guess_formats.push({
	    p: 4,
	    test: function(n) {
	      if (arguments.length === 1 && type(n) === "string") {
	        return 'hex';
	      }
	    }
	  });

	  hsl2rgb = function() {
	    var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;
	    args = unpack(arguments);
	    h = args[0], s = args[1], l = args[2];
	    if (s === 0) {
	      r = g = b = l * 255;
	    } else {
	      t3 = [0, 0, 0];
	      c = [0, 0, 0];
	      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;
	      t1 = 2 * l - t2;
	      h /= 360;
	      t3[0] = h + 1 / 3;
	      t3[1] = h;
	      t3[2] = h - 1 / 3;
	      for (i = o = 0; o <= 2; i = ++o) {
	        if (t3[i] < 0) {
	          t3[i] += 1;
	        }
	        if (t3[i] > 1) {
	          t3[i] -= 1;
	        }
	        if (6 * t3[i] < 1) {
	          c[i] = t1 + (t2 - t1) * 6 * t3[i];
	        } else if (2 * t3[i] < 1) {
	          c[i] = t2;
	        } else if (3 * t3[i] < 2) {
	          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;
	        } else {
	          c[i] = t1;
	        }
	      }
	      ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];
	    }
	    if (args.length > 3) {
	      return [r, g, b, args[3]];
	    } else {
	      return [r, g, b];
	    }
	  };

	  rgb2hsl = function(r, g, b) {
	    var h, l, min, ref, s;
	    if (r !== void 0 && r.length >= 3) {
	      ref = r, r = ref[0], g = ref[1], b = ref[2];
	    }
	    r /= 255;
	    g /= 255;
	    b /= 255;
	    min = Math.min(r, g, b);
	    max = Math.max(r, g, b);
	    l = (max + min) / 2;
	    if (max === min) {
	      s = 0;
	      h = Number.NaN;
	    } else {
	      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);
	    }
	    if (r === max) {
	      h = (g - b) / (max - min);
	    } else if (g === max) {
	      h = 2 + (b - r) / (max - min);
	    } else if (b === max) {
	      h = 4 + (r - g) / (max - min);
	    }
	    h *= 60;
	    if (h < 0) {
	      h += 360;
	    }
	    return [h, s, l];
	  };

	  chroma.hsl = function() {
	    return (function(func, args, ctor) {
	      ctor.prototype = func.prototype;
	      var child = new ctor, result = func.apply(child, args);
	      return Object(result) === result ? result : child;
	    })(Color, slice.call(arguments).concat(['hsl']), function(){});
	  };

	  _input.hsl = hsl2rgb;

	  Color.prototype.hsl = function() {
	    return rgb2hsl(this._rgb);
	  };

	  hsv2rgb = function() {
	    var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;
	    args = unpack(arguments);
	    h = args[0], s = args[1], v = args[2];
	    v *= 255;
	    if (s === 0) {
	      r = g = b = v;
	    } else {
	      if (h === 360) {
	        h = 0;
	      }
	      if (h > 360) {
	        h -= 360;
	      }
	      if (h < 0) {
	        h += 360;
	      }
	      h /= 60;
	      i = floor(h);
	      f = h - i;
	      p = v * (1 - s);
	      q = v * (1 - s * f);
	      t = v * (1 - s * (1 - f));
	      switch (i) {
	        case 0:
	          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];
	          break;
	        case 1:
	          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];
	          break;
	        case 2:
	          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];
	          break;
	        case 3:
	          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];
	          break;
	        case 4:
	          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];
	          break;
	        case 5:
	          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];
	      }
	    }
	    return [r, g, b, args.length > 3 ? args[3] : 1];
	  };

	  rgb2hsv = function() {
	    var b, delta, g, h, min, r, ref, s, v;
	    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];
	    min = Math.min(r, g, b);
	    max = Math.max(r, g, b);
	    delta = max - min;
	    v = max / 255.0;
	    if (max === 0) {
	      h = Number.NaN;
	      s = 0;
	    } else {
	      s = delta / max;
	      if (r === max) {
	        h = (g - b) / delta;
	      }
	      if (g === max) {
	        h = 2 + (b - r) / delta;
	      }
	      if (b === max) {
	        h = 4 + (r - g) / delta;
	      }
	      h *= 60;
	      if (h < 0) {
	        h += 360;
	      }
	    }
	    return [h, s, v];
	  };

	  chroma.hsv = function() {
	    return (function(func, args, ctor) {
	      ctor.prototype = func.prototype;
	      var child = new ctor, result = func.apply(child, args);
	      return Object(result) === result ? result : child;
	    })(Color, slice.call(arguments).concat(['hsv']), function(){});
	  };

	  _input.hsv = hsv2rgb;

	  Color.prototype.hsv = function() {
	    return rgb2hsv(this._rgb);
	  };

	  num2rgb = function(num) {
	    var b, g, r;
	    if (type(num) === "number" && num >= 0 && num <= 0xFFFFFF) {
	      r = num >> 16;
	      g = (num >> 8) & 0xFF;
	      b = num & 0xFF;
	      return [r, g, b, 1];
	    }
	    console.warn("unknown num color: " + num);
	    return [0, 0, 0, 1];
	  };

	  rgb2num = function() {
	    var b, g, r, ref;
	    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];
	    return (r << 16) + (g << 8) + b;
	  };

	  chroma.num = function(num) {
	    return new Color(num, 'num');
	  };

	  Color.prototype.num = function(mode) {
	    if (mode == null) {
	      mode = 'rgb';
	    }
	    return rgb2num(this._rgb, mode);
	  };

	  _input.num = num2rgb;

	  _guess_formats.push({
	    p: 1,
	    test: function(n) {
	      if (arguments.length === 1 && type(n) === "number" && n >= 0 && n <= 0xFFFFFF) {
	        return 'num';
	      }
	    }
	  });

	  hcg2rgb = function() {
	    var _c, _g, args, b, c, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, v;
	    args = unpack(arguments);
	    h = args[0], c = args[1], _g = args[2];
	    c = c / 100;
	    g = g / 100 * 255;
	    _c = c * 255;
	    if (c === 0) {
	      r = g = b = _g;
	    } else {
	      if (h === 360) {
	        h = 0;
	      }
	      if (h > 360) {
	        h -= 360;
	      }
	      if (h < 0) {
	        h += 360;
	      }
	      h /= 60;
	      i = floor(h);
	      f = h - i;
	      p = _g * (1 - c);
	      q = p + _c * (1 - f);
	      t = p + _c * f;
	      v = p + _c;
	      switch (i) {
	        case 0:
	          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];
	          break;
	        case 1:
	          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];
	          break;
	        case 2:
	          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];
	          break;
	        case 3:
	          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];
	          break;
	        case 4:
	          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];
	          break;
	        case 5:
	          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];
	      }
	    }
	    return [r, g, b, args.length > 3 ? args[3] : 1];
	  };

	  rgb2hcg = function() {
	    var _g, b, c, delta, g, h, min, r, ref;
	    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];
	    min = Math.min(r, g, b);
	    max = Math.max(r, g, b);
	    delta = max - min;
	    c = delta * 100 / 255;
	    _g = min / (255 - delta) * 100;
	    if (delta === 0) {
	      h = Number.NaN;
	    } else {
	      if (r === max) {
	        h = (g - b) / delta;
	      }
	      if (g === max) {
	        h = 2 + (b - r) / delta;
	      }
	      if (b === max) {
	        h = 4 + (r - g) / delta;
	      }
	      h *= 60;
	      if (h < 0) {
	        h += 360;
	      }
	    }
	    return [h, c, _g];
	  };

	  chroma.hcg = function() {
	    return (function(func, args, ctor) {
	      ctor.prototype = func.prototype;
	      var child = new ctor, result = func.apply(child, args);
	      return Object(result) === result ? result : child;
	    })(Color, slice.call(arguments).concat(['hcg']), function(){});
	  };

	  _input.hcg = hcg2rgb;

	  Color.prototype.hcg = function() {
	    return rgb2hcg(this._rgb);
	  };

	  css2rgb = function(css) {
	    var aa, ab, hsl, i, m, o, rgb, w;
	    css = css.toLowerCase();
	    if ((chroma.colors != null) && chroma.colors[css]) {
	      return hex2rgb(chroma.colors[css]);
	    }
	    if (m = css.match(/rgb\(\s*(\-?\d+),\s*(\-?\d+)\s*,\s*(\-?\d+)\s*\)/)) {
	      rgb = m.slice(1, 4);
	      for (i = o = 0; o <= 2; i = ++o) {
	        rgb[i] = +rgb[i];
	      }
	      rgb[3] = 1;
	    } else if (m = css.match(/rgba\(\s*(\-?\d+),\s*(\-?\d+)\s*,\s*(\-?\d+)\s*,\s*([01]|[01]?\.\d+)\)/)) {
	      rgb = m.slice(1, 5);
	      for (i = w = 0; w <= 3; i = ++w) {
	        rgb[i] = +rgb[i];
	      }
	    } else if (m = css.match(/rgb\(\s*(\-?\d+(?:\.\d+)?)%,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*\)/)) {
	      rgb = m.slice(1, 4);
	      for (i = aa = 0; aa <= 2; i = ++aa) {
	        rgb[i] = round(rgb[i] * 2.55);
	      }
	      rgb[3] = 1;
	    } else if (m = css.match(/rgba\(\s*(\-?\d+(?:\.\d+)?)%,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)/)) {
	      rgb = m.slice(1, 5);
	      for (i = ab = 0; ab <= 2; i = ++ab) {
	        rgb[i] = round(rgb[i] * 2.55);
	      }
	      rgb[3] = +rgb[3];
	    } else if (m = css.match(/hsl\(\s*(\-?\d+(?:\.\d+)?),\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*\)/)) {
	      hsl = m.slice(1, 4);
	      hsl[1] *= 0.01;
	      hsl[2] *= 0.01;
	      rgb = hsl2rgb(hsl);
	      rgb[3] = 1;
	    } else if (m = css.match(/hsla\(\s*(\-?\d+(?:\.\d+)?),\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)/)) {
	      hsl = m.slice(1, 4);
	      hsl[1] *= 0.01;
	      hsl[2] *= 0.01;
	      rgb = hsl2rgb(hsl);
	      rgb[3] = +m[4];
	    }
	    return rgb;
	  };

	  rgb2css = function(rgba) {
	    var mode;
	    mode = rgba[3] < 1 ? 'rgba' : 'rgb';
	    if (mode === 'rgb') {
	      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';
	    } else if (mode === 'rgba') {
	      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';
	    } else {

	    }
	  };

	  rnd = function(a) {
	    return round(a * 100) / 100;
	  };

	  hsl2css = function(hsl, alpha) {
	    var mode;
	    mode = alpha < 1 ? 'hsla' : 'hsl';
	    hsl[0] = rnd(hsl[0] || 0);
	    hsl[1] = rnd(hsl[1] * 100) + '%';
	    hsl[2] = rnd(hsl[2] * 100) + '%';
	    if (mode === 'hsla') {
	      hsl[3] = alpha;
	    }
	    return mode + '(' + hsl.join(',') + ')';
	  };

	  _input.css = function(h) {
	    return css2rgb(h);
	  };

	  chroma.css = function() {
	    return (function(func, args, ctor) {
	      ctor.prototype = func.prototype;
	      var child = new ctor, result = func.apply(child, args);
	      return Object(result) === result ? result : child;
	    })(Color, slice.call(arguments).concat(['css']), function(){});
	  };

	  Color.prototype.css = function(mode) {
	    if (mode == null) {
	      mode = 'rgb';
	    }
	    if (mode.slice(0, 3) === 'rgb') {
	      return rgb2css(this._rgb);
	    } else if (mode.slice(0, 3) === 'hsl') {
	      return hsl2css(this.hsl(), this.alpha());
	    }
	  };

	  _input.named = function(name) {
	    return hex2rgb(w3cx11[name]);
	  };

	  _guess_formats.push({
	    p: 5,
	    test: function(n) {
	      if (arguments.length === 1 && (w3cx11[n] != null)) {
	        return 'named';
	      }
	    }
	  });

	  Color.prototype.name = function(n) {
	    var h, k;
	    if (arguments.length) {
	      if (w3cx11[n]) {
	        this._rgb = hex2rgb(w3cx11[n]);
	      }
	      this._rgb[3] = 1;
	      this;
	    }
	    h = this.hex();
	    for (k in w3cx11) {
	      if (h === w3cx11[k]) {
	        return k;
	      }
	    }
	    return h;
	  };

	  lch2lab = function() {

	    /*
	    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.
	    These formulas were invented by David Dalrymple to obtain maximum contrast without going
	    out of gamut if the parameters are in the range 0-1.
	    
	    A saturation multiplier was added by Gregor Aisch
	     */
	    var c, h, l, ref;
	    ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];
	    h = h * DEG2RAD;
	    return [l, cos(h) * c, sin(h) * c];
	  };

	  lch2rgb = function() {
	    var L, a, args, b, c, g, h, l, r, ref, ref1;
	    args = unpack(arguments);
	    l = args[0], c = args[1], h = args[2];
	    ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];
	    ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];
	    return [r, g, b, args.length > 3 ? args[3] : 1];
	  };

	  lab2lch = function() {
	    var a, b, c, h, l, ref;
	    ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];
	    c = sqrt(a * a + b * b);
	    h = (atan2(b, a) * RAD2DEG + 360) % 360;
	    if (round(c * 10000) === 0) {
	      h = Number.NaN;
	    }
	    return [l, c, h];
	  };

	  rgb2lch = function() {
	    var a, b, g, l, r, ref, ref1;
	    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];
	    ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];
	    return lab2lch(l, a, b);
	  };

	  chroma.lch = function() {
	    var args;
	    args = unpack(arguments);
	    return new Color(args, 'lch');
	  };

	  chroma.hcl = function() {
	    var args;
	    args = unpack(arguments);
	    return new Color(args, 'hcl');
	  };

	  _input.lch = lch2rgb;

	  _input.hcl = function() {
	    var c, h, l, ref;
	    ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];
	    return lch2rgb([l, c, h]);
	  };

	  Color.prototype.lch = function() {
	    return rgb2lch(this._rgb);
	  };

	  Color.prototype.hcl = function() {
	    return rgb2lch(this._rgb).reverse();
	  };

	  rgb2cmyk = function(mode) {
	    var b, c, f, g, k, m, r, ref, y;
	    if (mode == null) {
	      mode = 'rgb';
	    }
	    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];
	    r = r / 255;
	    g = g / 255;
	    b = b / 255;
	    k = 1 - Math.max(r, Math.max(g, b));
	    f = k < 1 ? 1 / (1 - k) : 0;
	    c = (1 - r - k) * f;
	    m = (1 - g - k) * f;
	    y = (1 - b - k) * f;
	    return [c, m, y, k];
	  };

	  cmyk2rgb = function() {
	    var alpha, args, b, c, g, k, m, r, y;
	    args = unpack(arguments);
	    c = args[0], m = args[1], y = args[2], k = args[3];
	    alpha = args.length > 4 ? args[4] : 1;
	    if (k === 1) {
	      return [0, 0, 0, alpha];
	    }
	    r = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);
	    g = m >= 1 ? 0 : 255 * (1 - m) * (1 - k);
	    b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);
	    return [r, g, b, alpha];
	  };

	  _input.cmyk = function() {
	    return cmyk2rgb(unpack(arguments));
	  };

	  chroma.cmyk = function() {
	    return (function(func, args, ctor) {
	      ctor.prototype = func.prototype;
	      var child = new ctor, result = func.apply(child, args);
	      return Object(result) === result ? result : child;
	    })(Color, slice.call(arguments).concat(['cmyk']), function(){});
	  };

	  Color.prototype.cmyk = function() {
	    return rgb2cmyk(this._rgb);
	  };

	  _input.gl = function() {
	    var i, k, o, rgb, v;
	    rgb = (function() {
	      var ref, results;
	      ref = unpack(arguments);
	      results = [];
	      for (k in ref) {
	        v = ref[k];
	        results.push(v);
	      }
	      return results;
	    }).apply(this, arguments);
	    for (i = o = 0; o <= 2; i = ++o) {
	      rgb[i] *= 255;
	    }
	    return rgb;
	  };

	  chroma.gl = function() {
	    return (function(func, args, ctor) {
	      ctor.prototype = func.prototype;
	      var child = new ctor, result = func.apply(child, args);
	      return Object(result) === result ? result : child;
	    })(Color, slice.call(arguments).concat(['gl']), function(){});
	  };

	  Color.prototype.gl = function() {
	    var rgb;
	    rgb = this._rgb;
	    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];
	  };

	  rgb2luminance = function(r, g, b) {
	    var ref;
	    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];
	    r = luminance_x(r);
	    g = luminance_x(g);
	    b = luminance_x(b);
	    return 0.2126 * r + 0.7152 * g + 0.0722 * b;
	  };

	  luminance_x = function(x) {
	    x /= 255;
	    if (x <= 0.03928) {
	      return x / 12.92;
	    } else {
	      return pow((x + 0.055) / 1.055, 2.4);
	    }
	  };

	  interpolate_rgb = function(col1, col2, f, m) {
	    var xyz0, xyz1;
	    xyz0 = col1._rgb;
	    xyz1 = col2._rgb;
	    return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);
	  };

	  _interpolators.push(['rgb', interpolate_rgb]);

	  Color.prototype.luminance = function(lum, mode) {
	    var cur_lum, eps, max_iter, rgba, test;
	    if (mode == null) {
	      mode = 'rgb';
	    }
	    if (!arguments.length) {
	      return rgb2luminance(this._rgb);
	    }
	    rgba = this._rgb;
	    if (lum === 0) {
	      rgba = [0, 0, 0, this._rgb[3]];
	    } else if (lum === 1) {
	      rgba = [255, 255, 255, this[3]];
	    } else {
	      cur_lum = rgb2luminance(this._rgb);
	      eps = 1e-7;
	      max_iter = 20;
	      test = function(l, h) {
	        var lm, m;
	        m = l.interpolate(h, 0.5, mode);
	        lm = m.luminance();
	        if (Math.abs(lum - lm) < eps || !max_iter--) {
	          return m;
	        }
	        if (lm > lum) {
	          return test(l, m);
	        }
	        return test(m, h);
	      };
	      if (cur_lum > lum) {
	        rgba = test(chroma('black'), this).rgba();
	      } else {
	        rgba = test(this, chroma('white')).rgba();
	      }
	    }
	    return chroma(rgba).alpha(this.alpha());
	  };

	  temperature2rgb = function(kelvin) {
	    var b, g, r, temp;
	    temp = kelvin / 100;
	    if (temp < 66) {
	      r = 255;
	      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);
	      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);
	    } else {
	      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);
	      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);
	      b = 255;
	    }
	    return [r, g, b];
	  };

	  rgb2temperature = function() {
	    var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;
	    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];
	    minTemp = 1000;
	    maxTemp = 40000;
	    eps = 0.4;
	    while (maxTemp - minTemp > eps) {
	      temp = (maxTemp + minTemp) * 0.5;
	      rgb = temperature2rgb(temp);
	      if ((rgb[2] / rgb[0]) >= (b / r)) {
	        maxTemp = temp;
	      } else {
	        minTemp = temp;
	      }
	    }
	    return round(temp);
	  };

	  chroma.temperature = chroma.kelvin = function() {
	    return (function(func, args, ctor) {
	      ctor.prototype = func.prototype;
	      var child = new ctor, result = func.apply(child, args);
	      return Object(result) === result ? result : child;
	    })(Color, slice.call(arguments).concat(['temperature']), function(){});
	  };

	  _input.temperature = _input.kelvin = _input.K = temperature2rgb;

	  Color.prototype.temperature = function() {
	    return rgb2temperature(this._rgb);
	  };

	  Color.prototype.kelvin = Color.prototype.temperature;

	  chroma.contrast = function(a, b) {
	    var l1, l2, ref, ref1;
	    if ((ref = type(a)) === 'string' || ref === 'number') {
	      a = new Color(a);
	    }
	    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {
	      b = new Color(b);
	    }
	    l1 = a.luminance();
	    l2 = b.luminance();
	    if (l1 > l2) {
	      return (l1 + 0.05) / (l2 + 0.05);
	    } else {
	      return (l2 + 0.05) / (l1 + 0.05);
	    }
	  };

	  chroma.distance = function(a, b, mode) {
	    var d, i, l1, l2, ref, ref1, sum_sq;
	    if (mode == null) {
	      mode = 'lab';
	    }
	    if ((ref = type(a)) === 'string' || ref === 'number') {
	      a = new Color(a);
	    }
	    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {
	      b = new Color(b);
	    }
	    l1 = a.get(mode);
	    l2 = b.get(mode);
	    sum_sq = 0;
	    for (i in l1) {
	      d = (l1[i] || 0) - (l2[i] || 0);
	      sum_sq += d * d;
	    }
	    return Math.sqrt(sum_sq);
	  };

	  chroma.deltaE = function(a, b, L, C) {
	    var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f, h1, ref, ref1, ref2, ref3, sc, sh, sl, t, v1, v2, v3;
	    if (L == null) {
	      L = 1;
	    }
	    if (C == null) {
	      C = 1;
	    }
	    if ((ref = type(a)) === 'string' || ref === 'number') {
	      a = new Color(a);
	    }
	    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {
	      b = new Color(b);
	    }
	    ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];
	    ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];
	    c1 = sqrt(a1 * a1 + b1 * b1);
	    c2 = sqrt(a2 * a2 + b2 * b2);
	    sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1);
	    sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638;
	    h1 = c1 < 0.000001 ? 0.0 : (atan2(b1, a1) * 180.0) / PI;
	    while (h1 < 0) {
	      h1 += 360;
	    }
	    while (h1 >= 360) {
	      h1 -= 360;
	    }
	    t = (h1 >= 164.0) && (h1 <= 345.0) ? 0.56 + abs(0.2 * cos((PI * (h1 + 168.0)) / 180.0)) : 0.36 + abs(0.4 * cos((PI * (h1 + 35.0)) / 180.0));
	    c4 = c1 * c1 * c1 * c1;
	    f = sqrt(c4 / (c4 + 1900.0));
	    sh = sc * (f * t + 1.0 - f);
	    delL = L1 - L2;
	    delC = c1 - c2;
	    delA = a1 - a2;
	    delB = b1 - b2;
	    dH2 = delA * delA + delB * delB - delC * delC;
	    v1 = delL / (L * sl);
	    v2 = delC / (C * sc);
	    v3 = sh;
	    return sqrt(v1 * v1 + v2 * v2 + (dH2 / (v3 * v3)));
	  };

	  Color.prototype.get = function(modechan) {
	    var channel, i, me, mode, ref, src;
	    me = this;
	    ref = modechan.split('.'), mode = ref[0], channel = ref[1];
	    src = me[mode]();
	    if (channel) {
	      i = mode.indexOf(channel);
	      if (i > -1) {
	        return src[i];
	      } else {
	        return console.warn('unknown channel ' + channel + ' in mode ' + mode);
	      }
	    } else {
	      return src;
	    }
	  };

	  Color.prototype.set = function(modechan, value) {
	    var channel, i, me, mode, ref, src;
	    me = this;
	    ref = modechan.split('.'), mode = ref[0], channel = ref[1];
	    if (channel) {
	      src = me[mode]();
	      i = mode.indexOf(channel);
	      if (i > -1) {
	        if (type(value) === 'string') {
	          switch (value.charAt(0)) {
	            case '+':
	              src[i] += +value;
	              break;
	            case '-':
	              src[i] += +value;
	              break;
	            case '*':
	              src[i] *= +(value.substr(1));
	              break;
	            case '/':
	              src[i] /= +(value.substr(1));
	              break;
	            default:
	              src[i] = +value;
	          }
	        } else {
	          src[i] = value;
	        }
	      } else {
	        console.warn('unknown channel ' + channel + ' in mode ' + mode);
	      }
	    } else {
	      src = value;
	    }
	    return chroma(src, mode).alpha(me.alpha());
	  };

	  Color.prototype.clipped = function() {
	    return this._rgb._clipped || false;
	  };

	  Color.prototype.alpha = function(a) {
	    if (arguments.length) {
	      return chroma.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);
	    }
	    return this._rgb[3];
	  };

	  Color.prototype.darken = function(amount) {
	    var lab, me;
	    if (amount == null) {
	      amount = 1;
	    }
	    me = this;
	    lab = me.lab();
	    lab[0] -= LAB_CONSTANTS.Kn * amount;
	    return chroma.lab(lab).alpha(me.alpha());
	  };

	  Color.prototype.brighten = function(amount) {
	    if (amount == null) {
	      amount = 1;
	    }
	    return this.darken(-amount);
	  };

	  Color.prototype.darker = Color.prototype.darken;

	  Color.prototype.brighter = Color.prototype.brighten;

	  Color.prototype.saturate = function(amount) {
	    var lch, me;
	    if (amount == null) {
	      amount = 1;
	    }
	    me = this;
	    lch = me.lch();
	    lch[1] += amount * LAB_CONSTANTS.Kn;
	    if (lch[1] < 0) {
	      lch[1] = 0;
	    }
	    return chroma.lch(lch).alpha(me.alpha());
	  };

	  Color.prototype.desaturate = function(amount) {
	    if (amount == null) {
	      amount = 1;
	    }
	    return this.saturate(-amount);
	  };

	  Color.prototype.premultiply = function() {
	    var a, rgb;
	    rgb = this.rgb();
	    a = this.alpha();
	    return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);
	  };

	  blend = function(bottom, top, mode) {
	    if (!blend[mode]) {
	      throw 'unknown blend mode ' + mode;
	    }
	    return blend[mode](bottom, top);
	  };

	  blend_f = function(f) {
	    return function(bottom, top) {
	      var c0, c1;
	      c0 = chroma(top).rgb();
	      c1 = chroma(bottom).rgb();
	      return chroma(f(c0, c1), 'rgb');
	    };
	  };

	  each = function(f) {
	    return function(c0, c1) {
	      var i, o, out;
	      out = [];
	      for (i = o = 0; o <= 3; i = ++o) {
	        out[i] = f(c0[i], c1[i]);
	      }
	      return out;
	    };
	  };

	  normal = function(a, b) {
	    return a;
	  };

	  multiply = function(a, b) {
	    return a * b / 255;
	  };

	  darken = function(a, b) {
	    if (a > b) {
	      return b;
	    } else {
	      return a;
	    }
	  };

	  lighten = function(a, b) {
	    if (a > b) {
	      return a;
	    } else {
	      return b;
	    }
	  };

	  screen = function(a, b) {
	    return 255 * (1 - (1 - a / 255) * (1 - b / 255));
	  };

	  overlay = function(a, b) {
	    if (b < 128) {
	      return 2 * a * b / 255;
	    } else {
	      return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));
	    }
	  };

	  burn = function(a, b) {
	    return 255 * (1 - (1 - b / 255) / (a / 255));
	  };

	  dodge = function(a, b) {
	    if (a === 255) {
	      return 255;
	    }
	    a = 255 * (b / 255) / (1 - a / 255);
	    if (a > 255) {
	      return 255;
	    } else {
	      return a;
	    }
	  };

	  blend.normal = blend_f(each(normal));

	  blend.multiply = blend_f(each(multiply));

	  blend.screen = blend_f(each(screen));

	  blend.overlay = blend_f(each(overlay));

	  blend.darken = blend_f(each(darken));

	  blend.lighten = blend_f(each(lighten));

	  blend.dodge = blend_f(each(dodge));

	  blend.burn = blend_f(each(burn));

	  chroma.blend = blend;

	  chroma.analyze = function(data) {
	    var len, o, r, val;
	    r = {
	      min: Number.MAX_VALUE,
	      max: Number.MAX_VALUE * -1,
	      sum: 0,
	      values: [],
	      count: 0
	    };
	    for (o = 0, len = data.length; o < len; o++) {
	      val = data[o];
	      if ((val != null) && !isNaN(val)) {
	        r.values.push(val);
	        r.sum += val;
	        if (val < r.min) {
	          r.min = val;
	        }
	        if (val > r.max) {
	          r.max = val;
	        }
	        r.count += 1;
	      }
	    }
	    r.domain = [r.min, r.max];
	    r.limits = function(mode, num) {
	      return chroma.limits(r, mode, num);
	    };
	    return r;
	  };

	  chroma.scale = function(colors, positions) {
	    var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;
	    _mode = 'rgb';
	    _nacol = chroma('#ccc');
	    _spread = 0;
	    _fixed = false;
	    _domain = [0, 1];
	    _pos = [];
	    _padding = [0, 0];
	    _classes = false;
	    _colors = [];
	    _out = false;
	    _min = 0;
	    _max = 1;
	    _correctLightness = false;
	    _colorCache = {};
	    _useCache = true;
	    _gamma = 1;
	    setColors = function(colors) {
	      var c, col, o, ref, ref1, w;
	      if (colors == null) {
	        colors = ['#fff', '#000'];
	      }
	      if ((colors != null) && type(colors) === 'string' && (chroma.brewer != null)) {
	        colors = chroma.brewer[colors] || chroma.brewer[colors.toLowerCase()] || colors;
	      }
	      if (type(colors) === 'array') {
	        colors = colors.slice(0);
	        for (c = o = 0, ref = colors.length - 1; 0 <= ref ? o <= ref : o >= ref; c = 0 <= ref ? ++o : --o) {
	          col = colors[c];
	          if (type(col) === "string") {
	            colors[c] = chroma(col);
	          }
	        }
	        _pos.length = 0;
	        for (c = w = 0, ref1 = colors.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {
	          _pos.push(c / (colors.length - 1));
	        }
	      }
	      resetCache();
	      return _colors = colors;
	    };
	    getClass = function(value) {
	      var i, n;
	      if (_classes != null) {
	        n = _classes.length - 1;
	        i = 0;
	        while (i < n && value >= _classes[i]) {
	          i++;
	        }
	        return i - 1;
	      }
	      return 0;
	    };
	    tmap = function(t) {
	      return t;
	    };
	    classifyValue = function(value) {
	      var i, maxc, minc, n, val;
	      val = value;
	      if (_classes.length > 2) {
	        n = _classes.length - 1;
	        i = getClass(value);
	        minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);
	        maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);
	        val = _min + ((_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);
	      }
	      return val;
	    };
	    getColor = function(val, bypassMap) {
	      var c, col, i, k, o, p, ref, t;
	      if (bypassMap == null) {
	        bypassMap = false;
	      }
	      if (isNaN(val)) {
	        return _nacol;
	      }
	      if (!bypassMap) {
	        if (_classes && _classes.length > 2) {
	          c = getClass(val);
	          t = c / (_classes.length - 2);
	        } else if (_max !== _min) {
	          t = (val - _min) / (_max - _min);
	        } else {
	          t = 1;
	        }
	      } else {
	        t = val;
	      }
	      if (!bypassMap) {
	        t = tmap(t);
	      }
	      if (_gamma !== 1) {
	        t = pow(t, _gamma);
	      }
	      t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));
	      t = Math.min(1, Math.max(0, t));
	      k = Math.floor(t * 10000);
	      if (_useCache && _colorCache[k]) {
	        col = _colorCache[k];
	      } else {
	        if (type(_colors) === 'array') {
	          for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {
	            p = _pos[i];
	            if (t <= p) {
	              col = _colors[i];
	              break;
	            }
	            if (t >= p && i === _pos.length - 1) {
	              col = _colors[i];
	              break;
	            }
	            if (t > p && t < _pos[i + 1]) {
	              t = (t - p) / (_pos[i + 1] - p);
	              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);
	              break;
	            }
	          }
	        } else if (type(_colors) === 'function') {
	          col = _colors(t);
	        }
	        if (_useCache) {
	          _colorCache[k] = col;
	        }
	      }
	      return col;
	    };
	    resetCache = function() {
	      return _colorCache = {};
	    };
	    setColors(colors);
	    f = function(v) {
	      var c;
	      c = chroma(getColor(v));
	      if (_out && c[_out]) {
	        return c[_out]();
	      } else {
	        return c;
	      }
	    };
	    f.classes = function(classes) {
	      var d;
	      if (classes != null) {
	        if (type(classes) === 'array') {
	          _classes = classes;
	          _domain = [classes[0], classes[classes.length - 1]];
	        } else {
	          d = chroma.analyze(_domain);
	          if (classes === 0) {
	            _classes = [d.min, d.max];
	          } else {
	            _classes = chroma.limits(d, 'e', classes);
	          }
	        }
	        return f;
	      }
	      return _classes;
	    };
	    f.domain = function(domain) {
	      var c, d, k, len, o, ref, w;
	      if (!arguments.length) {
	        return _domain;
	      }
	      _min = domain[0];
	      _max = domain[domain.length - 1];
	      _pos = [];
	      k = _colors.length;
	      if (domain.length === k && _min !== _max) {
	        for (o = 0, len = domain.length; o < len; o++) {
	          d = domain[o];
	          _pos.push((d - _min) / (_max - _min));
	        }
	      } else {
	        for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {
	          _pos.push(c / (k - 1));
	        }
	      }
	      _domain = [_min, _max];
	      return f;
	    };
	    f.mode = function(_m) {
	      if (!arguments.length) {
	        return _mode;
	      }
	      _mode = _m;
	      resetCache();
	      return f;
	    };
	    f.range = function(colors, _pos) {
	      setColors(colors, _pos);
	      return f;
	    };
	    f.out = function(_o) {
	      _out = _o;
	      return f;
	    };
	    f.spread = function(val) {
	      if (!arguments.length) {
	        return _spread;
	      }
	      _spread = val;
	      return f;
	    };
	    f.correctLightness = function(v) {
	      if (v == null) {
	        v = true;
	      }
	      _correctLightness = v;
	      resetCache();
	      if (_correctLightness) {
	        tmap = function(t) {
	          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;
	          L0 = getColor(0, true).lab()[0];
	          L1 = getColor(1, true).lab()[0];
	          pol = L0 > L1;
	          L_actual = getColor(t, true).lab()[0];
	          L_ideal = L0 + (L1 - L0) * t;
	          L_diff = L_actual - L_ideal;
	          t0 = 0;
	          t1 = 1;
	          max_iter = 20;
	          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {
	            (function() {
	              if (pol) {
	                L_diff *= -1;
	              }
	              if (L_diff < 0) {
	                t0 = t;
	                t += (t1 - t) * 0.5;
	              } else {
	                t1 = t;
	                t += (t0 - t) * 0.5;
	              }
	              L_actual = getColor(t, true).lab()[0];
	              return L_diff = L_actual - L_ideal;
	            })();
	          }
	          return t;
	        };
	      } else {
	        tmap = function(t) {
	          return t;
	        };
	      }
	      return f;
	    };
	    f.padding = function(p) {
	      if (p != null) {
	        if (type(p) === 'number') {
	          p = [p, p];
	        }
	        _padding = p;
	        return f;
	      } else {
	        return _padding;
	      }
	    };
	    f.colors = function(numColors, out) {
	      var dd, dm, i, o, ref, result, results, samples, w;
	      if (arguments.length < 2) {
	        out = 'hex';
	      }
	      result = [];
	      if (arguments.length === 0) {
	        result = _colors.slice(0);
	      } else if (numColors === 1) {
	        result = [f(0.5)];
	      } else if (numColors > 1) {
	        dm = _domain[0];
	        dd = _domain[1] - dm;
	        result = (function() {
	          results = [];
	          for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--){ results.push(o); }
	          return results;
	        }).apply(this).map(function(i) {
	          return f(dm + i / (numColors - 1) * dd);
	        });
	      } else {
	        colors = [];
	        samples = [];
	        if (_classes && _classes.length > 2) {
	          for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {
	            samples.push((_classes[i - 1] + _classes[i]) * 0.5);
	          }
	        } else {
	          samples = _domain;
	        }
	        result = samples.map(function(v) {
	          return f(v);
	        });
	      }
	      if (chroma[out]) {
	        result = result.map(function(c) {
	          return c[out]();
	        });
	      }
	      return result;
	    };
	    f.cache = function(c) {
	      if (c != null) {
	        _useCache = c;
	        return f;
	      } else {
	        return _useCache;
	      }
	    };
	    f.gamma = function(g) {
	      if (g != null) {
	        _gamma = g;
	        return f;
	      } else {
	        return _gamma;
	      }
	    };
	    return f;
	  };

	  if (chroma.scales == null) {
	    chroma.scales = {};
	  }

	  chroma.scales.cool = function() {
	    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);
	  };

	  chroma.scales.hot = function() {
	    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');
	  };

	  chroma.analyze = function(data, key, filter) {
	    var add, k, len, o, r, val, visit;
	    r = {
	      min: Number.MAX_VALUE,
	      max: Number.MAX_VALUE * -1,
	      sum: 0,
	      values: [],
	      count: 0
	    };
	    if (filter == null) {
	      filter = function() {
	        return true;
	      };
	    }
	    add = function(val) {
	      if ((val != null) && !isNaN(val)) {
	        r.values.push(val);
	        r.sum += val;
	        if (val < r.min) {
	          r.min = val;
	        }
	        if (val > r.max) {
	          r.max = val;
	        }
	        r.count += 1;
	      }
	    };
	    visit = function(val, k) {
	      if (filter(val, k)) {
	        if ((key != null) && type(key) === 'function') {
	          return add(key(val));
	        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {
	          return add(val[key]);
	        } else {
	          return add(val);
	        }
	      }
	    };
	    if (type(data) === 'array') {
	      for (o = 0, len = data.length; o < len; o++) {
	        val = data[o];
	        visit(val);
	      }
	    } else {
	      for (k in data) {
	        val = data[k];
	        visit(val, k);
	      }
	    }
	    r.domain = [r.min, r.max];
	    r.limits = function(mode, num) {
	      return chroma.limits(r, mode, num);
	    };
	    return r;
	  };

	  chroma.limits = function(data, mode, num) {
	    var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;
	    if (mode == null) {
	      mode = 'equal';
	    }
	    if (num == null) {
	      num = 7;
	    }
	    if (type(data) === 'array') {
	      data = chroma.analyze(data);
	    }
	    min = data.min;
	    max = data.max;
	    sum = data.sum;
	    values = data.values.sort(function(a, b) {
	      return a - b;
	    });
	    if (num === 1) {
	      return [min, max];
	    }
	    limits = [];
	    if (mode.substr(0, 1) === 'c') {
	      limits.push(min);
	      limits.push(max);
	    }
	    if (mode.substr(0, 1) === 'e') {
	      limits.push(min);
	      for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {
	        limits.push(min + (i / num) * (max - min));
	      }
	      limits.push(max);
	    } else if (mode.substr(0, 1) === 'l') {
	      if (min <= 0) {
	        throw 'Logarithmic scales are only possible for values > 0';
	      }
	      min_log = Math.LOG10E * log(min);
	      max_log = Math.LOG10E * log(max);
	      limits.push(min);
	      for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {
	        limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));
	      }
	      limits.push(max);
	    } else if (mode.substr(0, 1) === 'q') {
	      limits.push(min);
	      for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {
	        p = (values.length - 1) * i / num;
	        pb = floor(p);
	        if (pb === p) {
	          limits.push(values[pb]);
	        } else {
	          pr = p - pb;
	          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);
	        }
	      }
	      limits.push(max);
	    } else if (mode.substr(0, 1) === 'k') {

	      /*
	      implementation based on
	      http://code.google.com/p/figue/source/browse/trunk/figue.js#336
	      simplified for 1-d input values
	       */
	      n = values.length;
	      assignments = new Array(n);
	      clusterSizes = new Array(num);
	      repeat = true;
	      nb_iters = 0;
	      centroids = null;
	      centroids = [];
	      centroids.push(min);
	      for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {
	        centroids.push(min + (i / num) * (max - min));
	      }
	      centroids.push(max);
	      while (repeat) {
	        for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {
	          clusterSizes[j] = 0;
	        }
	        for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {
	          value = values[i];
	          mindist = Number.MAX_VALUE;
	          for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {
	            dist = abs(centroids[j] - value);
	            if (dist < mindist) {
	              mindist = dist;
	              best = j;
	            }
	          }
	          clusterSizes[best]++;
	          assignments[i] = best;
	        }
	        newCentroids = new Array(num);
	        for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {
	          newCentroids[j] = null;
	        }
	        for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {
	          cluster = assignments[i];
	          if (newCentroids[cluster] === null) {
	            newCentroids[cluster] = values[i];
	          } else {
	            newCentroids[cluster] += values[i];
	          }
	        }
	        for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {
	          newCentroids[j] *= 1 / clusterSizes[j];
	        }
	        repeat = false;
	        for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {
	          if (newCentroids[j] !== centroids[i]) {
	            repeat = true;
	            break;
	          }
	        }
	        centroids = newCentroids;
	        nb_iters++;
	        if (nb_iters > 200) {
	          repeat = false;
	        }
	      }
	      kClusters = {};
	      for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {
	        kClusters[j] = [];
	      }
	      for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {
	        cluster = assignments[i];
	        kClusters[cluster].push(values[i]);
	      }
	      tmpKMeansBreaks = [];
	      for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {
	        tmpKMeansBreaks.push(kClusters[j][0]);
	        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);
	      }
	      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {
	        return a - b;
	      });
	      limits.push(tmpKMeansBreaks[0]);
	      for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {
	        v = tmpKMeansBreaks[i];
	        if (!isNaN(v) && limits.indexOf(v) === -1) {
	          limits.push(v);
	        }
	      }
	    }
	    return limits;
	  };

	  hsi2rgb = function(h, s, i) {

	    /*
	    borrowed from here:
	    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp
	     */
	    var args, b, g, r;
	    args = unpack(arguments);
	    h = args[0], s = args[1], i = args[2];
	    if (isNaN(h)) {
	      h = 0;
	    }
	    h /= 360;
	    if (h < 1 / 3) {
	      b = (1 - s) / 3;
	      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;
	      g = 1 - (b + r);
	    } else if (h < 2 / 3) {
	      h -= 1 / 3;
	      r = (1 - s) / 3;
	      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;
	      b = 1 - (r + g);
	    } else {
	      h -= 2 / 3;
	      g = (1 - s) / 3;
	      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;
	      r = 1 - (g + b);
	    }
	    r = limit(i * r * 3);
	    g = limit(i * g * 3);
	    b = limit(i * b * 3);
	    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];
	  };

	  rgb2hsi = function() {

	    /*
	    borrowed from here:
	    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp
	     */
	    var b, g, h, i, min, r, ref, s;
	    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];
	    TWOPI = Math.PI * 2;
	    r /= 255;
	    g /= 255;
	    b /= 255;
	    min = Math.min(r, g, b);
	    i = (r + g + b) / 3;
	    s = 1 - min / i;
	    if (s === 0) {
	      h = 0;
	    } else {
	      h = ((r - g) + (r - b)) / 2;
	      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));
	      h = Math.acos(h);
	      if (b > g) {
	        h = TWOPI - h;
	      }
	      h /= TWOPI;
	    }
	    return [h * 360, s, i];
	  };

	  chroma.hsi = function() {
	    return (function(func, args, ctor) {
	      ctor.prototype = func.prototype;
	      var child = new ctor, result = func.apply(child, args);
	      return Object(result) === result ? result : child;
	    })(Color, slice.call(arguments).concat(['hsi']), function(){});
	  };

	  _input.hsi = hsi2rgb;

	  Color.prototype.hsi = function() {
	    return rgb2hsi(this._rgb);
	  };

	  interpolate_hsx = function(col1, col2, f, m) {
	    var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;
	    if (m === 'hsl') {
	      xyz0 = col1.hsl();
	      xyz1 = col2.hsl();
	    } else if (m === 'hsv') {
	      xyz0 = col1.hsv();
	      xyz1 = col2.hsv();
	    } else if (m === 'hcg') {
	      xyz0 = col1.hcg();
	      xyz1 = col2.hcg();
	    } else if (m === 'hsi') {
	      xyz0 = col1.hsi();
	      xyz1 = col2.hsi();
	    } else if (m === 'lch' || m === 'hcl') {
	      m = 'hcl';
	      xyz0 = col1.hcl();
	      xyz1 = col2.hcl();
	    }
	    if (m.substr(0, 1) === 'h') {
	      hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];
	      hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];
	    }
	    if (!isNaN(hue0) && !isNaN(hue1)) {
	      if (hue1 > hue0 && hue1 - hue0 > 180) {
	        dh = hue1 - (hue0 + 360);
	      } else if (hue1 < hue0 && hue0 - hue1 > 180) {
	        dh = hue1 + 360 - hue0;
	      } else {
	        dh = hue1 - hue0;
	      }
	      hue = hue0 + f * dh;
	    } else if (!isNaN(hue0)) {
	      hue = hue0;
	      if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {
	        sat = sat0;
	      }
	    } else if (!isNaN(hue1)) {
	      hue = hue1;
	      if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {
	        sat = sat1;
	      }
	    } else {
	      hue = Number.NaN;
	    }
	    if (sat == null) {
	      sat = sat0 + f * (sat1 - sat0);
	    }
	    lbv = lbv0 + f * (lbv1 - lbv0);
	    return res = chroma[m](hue, sat, lbv);
	  };

	  _interpolators = _interpolators.concat((function() {
	    var len, o, ref, results;
	    ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch', 'hcg'];
	    results = [];
	    for (o = 0, len = ref.length; o < len; o++) {
	      m = ref[o];
	      results.push([m, interpolate_hsx]);
	    }
	    return results;
	  })());

	  interpolate_num = function(col1, col2, f, m) {
	    var n1, n2;
	    n1 = col1.num();
	    n2 = col2.num();
	    return chroma.num(n1 + (n2 - n1) * f, 'num');
	  };

	  _interpolators.push(['num', interpolate_num]);

	  interpolate_lab = function(col1, col2, f, m) {
	    var res, xyz0, xyz1;
	    xyz0 = col1.lab();
	    xyz1 = col2.lab();
	    return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);
	  };

	  _interpolators.push(['lab', interpolate_lab]);

	}).call(this);

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(65)(module)))

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	// THIS FILE IS AUTO GENERATED
	const { GenIcon } = __webpack_require__(116)
	module.exports.Md3dRotation = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7.52 21.48C4.25 19.94 1.91 16.76 1.55 13H.05C.56 19.16 5.71 24 12 24l.66-.03-3.81-3.81-1.33 1.32zm.89-6.52c-.19 0-.37-.03-.52-.08-.16-.06-.29-.13-.4-.24-.11-.1-.2-.22-.26-.37-.06-.14-.09-.3-.09-.47h-1.3c0 .36.07.68.21.95.14.27.33.5.56.69.24.18.51.32.82.41.3.1.62.15.96.15.37 0 .72-.05 1.03-.15.32-.1.6-.25.83-.44s.42-.43.55-.72c.13-.29.2-.61.2-.97 0-.19-.02-.38-.07-.56-.05-.18-.12-.35-.23-.51-.1-.16-.24-.3-.4-.43-.17-.13-.37-.23-.61-.31.2-.09.37-.2.52-.33.15-.13.27-.27.37-.42.1-.15.17-.3.22-.46.05-.16.07-.32.07-.48 0-.36-.06-.68-.18-.96-.12-.28-.29-.51-.51-.69-.2-.19-.47-.33-.77-.43C9.1 8.05 8.76 8 8.39 8c-.36 0-.69.05-1 .16-.3.11-.57.26-.79.45-.21.19-.38.41-.51.67-.12.26-.18.54-.18.85h1.3c0-.17.03-.32.09-.45s.14-.25.25-.34c.11-.09.23-.17.38-.22.15-.05.3-.08.48-.08.4 0 .7.1.89.31.19.2.29.49.29.86 0 .18-.03.34-.08.49-.05.15-.14.27-.25.37-.11.1-.25.18-.41.24-.16.06-.36.09-.58.09H7.5v1.03h.77c.22 0 .42.02.6.07s.33.13.45.23c.12.11.22.24.29.4.07.16.1.35.1.57 0 .41-.12.72-.35.93-.23.23-.55.33-.95.33zm8.55-5.92c-.32-.33-.7-.59-1.14-.77-.43-.18-.92-.27-1.46-.27H12v8h2.3c.55 0 1.06-.09 1.51-.27.45-.18.84-.43 1.16-.76.32-.33.57-.73.74-1.19.17-.47.26-.99.26-1.57v-.4c0-.58-.09-1.1-.26-1.57-.18-.47-.43-.87-.75-1.2zm-.39 3.16c0 .42-.05.79-.14 1.13-.1.33-.24.62-.43.85-.19.23-.43.41-.71.53-.29.12-.62.18-.99.18h-.91V9.12h.97c.72 0 1.27.23 1.64.69.38.46.57 1.12.57 1.99v.4zM12 0l-.66.03 3.81 3.81 1.33-1.33c3.27 1.55 5.61 4.72 5.96 8.48h1.5C23.44 4.84 18.29 0 12 0z"}}]})(props);
	};
	module.exports.MdAccessibility = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm9 7h-6v13h-2v-6h-2v6H9V9H3V7h18v2z"}}]})(props);
	};
	module.exports.MdAccessible = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"12","cy":"4","r":"2"}},{"tag":"path","attr":{"d":"M19 13v-2c-1.54.02-3.09-.75-4.07-1.83l-1.29-1.43c-.17-.19-.38-.34-.61-.45-.01 0-.01-.01-.02-.01H13c-.35-.2-.75-.3-1.19-.26C10.76 7.11 10 8.04 10 9.09V15c0 1.1.9 2 2 2h5v5h2v-5.5c0-1.1-.9-2-2-2h-3v-3.45c1.29 1.07 3.25 1.94 5 1.95zm-6.17 5c-.41 1.16-1.52 2-2.83 2-1.66 0-3-1.34-3-3 0-1.31.84-2.41 2-2.83V12.1c-2.28.46-4 2.48-4 4.9 0 2.76 2.24 5 5 5 2.42 0 4.44-1.72 4.9-4h-2.07z"}}]})(props);
	};
	module.exports.MdAccountBalance = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 10v7h3v-7H4zm6 0v7h3v-7h-3zM2 22h19v-3H2v3zm14-12v7h3v-7h-3zm-4.5-9L2 6v2h19V6l-9.5-5z"}}]})(props);
	};
	module.exports.MdAccountBalanceWallet = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 18v1c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2V5c0-1.1.89-2 2-2h14c1.1 0 2 .9 2 2v1h-9c-1.11 0-2 .9-2 2v8c0 1.1.89 2 2 2h9zm-9-2h10V8H12v8zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}}]})(props);
	};
	module.exports.MdAccountBox = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 5v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2H5c-1.11 0-2 .9-2 2zm12 4c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3zm-9 8c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1H6v-1z"}}]})(props);
	};
	module.exports.MdAccountCircle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"}}]})(props);
	};
	module.exports.MdAddShoppingCart = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z"}}]})(props);
	};
	module.exports.MdAlarm = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"}}]})(props);
	};
	module.exports.MdAlarmAdd = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm1-11h-2v3H8v2h3v3h2v-3h3v-2h-3V9z"}}]})(props);
	};
	module.exports.MdAlarmOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 6c3.87 0 7 3.13 7 7 0 .84-.16 1.65-.43 2.4l1.52 1.52c.58-1.19.91-2.51.91-3.92 0-4.97-4.03-9-9-9-1.41 0-2.73.33-3.92.91L9.6 6.43C10.35 6.16 11.16 6 12 6zm10-.28l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM2.92 2.29L1.65 3.57 2.98 4.9l-1.11.93 1.42 1.42 1.11-.94.8.8C3.83 8.69 3 10.75 3 13c0 4.97 4.02 9 9 9 2.25 0 4.31-.83 5.89-2.2l2.2 2.2 1.27-1.27L3.89 3.27l-.97-.98zm13.55 16.1C15.26 19.39 13.7 20 12 20c-3.87 0-7-3.13-7-7 0-1.7.61-3.26 1.61-4.47l9.86 9.86zM8.02 3.28L6.6 1.86l-.86.71 1.42 1.42.86-.71z"}}]})(props);
	};
	module.exports.MdAlarmOn = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-1.46-5.47L8.41 12.4l-1.06 1.06 3.18 3.18 6-6-1.06-1.06-4.93 4.95z"}}]})(props);
	};
	module.exports.MdAllOut = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.21 4.16l4 4v-4zm4 12l-4 4h4zm-12 4l-4-4v4zm-4-12l4-4h-4zm12.95-.95c-2.73-2.73-7.17-2.73-9.9 0s-2.73 7.17 0 9.9 7.17 2.73 9.9 0 2.73-7.16 0-9.9zm-1.1 8.8c-2.13 2.13-5.57 2.13-7.7 0s-2.13-5.57 0-7.7 5.57-2.13 7.7 0 2.13 5.57 0 7.7z","fill":"#010101"}}]})(props);
	};
	module.exports.MdAndroid = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 18c0 .55.45 1 1 1h1v3.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V19h2v3.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V19h1c.55 0 1-.45 1-1V8H6v10zM3.5 8C2.67 8 2 8.67 2 9.5v7c0 .83.67 1.5 1.5 1.5S5 17.33 5 16.5v-7C5 8.67 4.33 8 3.5 8zm17 0c-.83 0-1.5.67-1.5 1.5v7c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5v-7c0-.83-.67-1.5-1.5-1.5zm-4.97-5.84l1.3-1.3c.2-.2.2-.51 0-.71-.2-.2-.51-.2-.71 0l-1.48 1.48C13.85 1.23 12.95 1 12 1c-.96 0-1.86.23-2.66.63L7.85.15c-.2-.2-.51-.2-.71 0-.2.2-.2.51 0 .71l1.31 1.31C6.97 3.26 6 5.01 6 7h12c0-1.99-.97-3.75-2.47-4.84zM10 5H9V4h1v1zm5 0h-1V4h1v1z"}}]})(props);
	};
	module.exports.MdAnnouncement = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 9h-2V5h2v6zm0 4h-2v-2h2v2z"}}]})(props);
	};
	module.exports.MdAspectRatio = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 12h-2v3h-3v2h5v-5zM7 9h3V7H5v5h2V9zm14-6H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02z"}}]})(props);
	};
	module.exports.MdAssessment = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z"}}]})(props);
	};
	module.exports.MdAssignment = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm2 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z"}}]})(props);
	};
	module.exports.MdAssignmentInd = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 4c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H6v-1.4c0-2 4-3.1 6-3.1s6 1.1 6 3.1V19z"}}]})(props);
	};
	module.exports.MdAssignmentLate = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-6 15h-2v-2h2v2zm0-4h-2V8h2v6zm-1-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"}}]})(props);
	};
	module.exports.MdAssignmentReturn = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm4 12h-4v3l-5-5 5-5v3h4v4z"}}]})(props);
	};
	module.exports.MdAssignmentReturned = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 15l-5-5h3V9h4v4h3l-5 5z"}}]})(props);
	};
	module.exports.MdAssignmentTurnedIn = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm-2 14l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z"}}]})(props);
	};
	module.exports.MdAutorenew = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z"}}]})(props);
	};
	module.exports.MdBackup = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z"}}]})(props);
	};
	module.exports.MdBook = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 2H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 4h5v8l-2.5-1.5L6 12V4z"}}]})(props);
	};
	module.exports.MdBookmark = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdBookmarkBorder = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z"}}]})(props);
	};
	module.exports.MdBugReport = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8zm-6 8h-4v-2h4v2zm0-4h-4v-2h4v2z"}}]})(props);
	};
	module.exports.MdBuild = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22.7 19l-9.1-9.1c.9-2.3.4-5-1.5-6.9-2-2-5-2.4-7.4-1.3L9 6 6 9 1.6 4.7C.4 7.1.9 10.1 2.9 12.1c1.9 1.9 4.6 2.4 6.9 1.5l9.1 9.1c.4.4 1 .4 1.4 0l2.3-2.3c.5-.4.5-1.1.1-1.4z"}}]})(props);
	};
	module.exports.MdCached = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z"}}]})(props);
	};
	module.exports.MdCameraEnhance = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 3L7.17 5H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2h-3.17L15 3H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-1l1.25-2.75L16 13l-2.75-1.25L12 9l-1.25 2.75L8 13l2.75 1.25z"}}]})(props);
	};
	module.exports.MdCardGiftcard = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 6h-2.18c.11-.31.18-.65.18-1 0-1.66-1.34-3-3-3-1.05 0-1.96.54-2.5 1.35l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z"}}]})(props);
	};
	module.exports.MdCardMembership = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h4v5l4-2 4 2v-5h4c1.11 0 2-.89 2-2V4c0-1.11-.89-2-2-2zm0 13H4v-2h16v2zm0-5H4V4h16v6z"}}]})(props);
	};
	module.exports.MdCardTravel = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 6h-3V4c0-1.11-.89-2-2-2H9c-1.11 0-2 .89-2 2v2H4c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zM9 4h6v2H9V4zm11 15H4v-2h16v2zm0-5H4V8h3v2h2V8h6v2h2V8h3v6z"}}]})(props);
	};
	module.exports.MdChangeHistory = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 7.77L18.39 18H5.61L12 7.77M12 4L2 20h20L12 4z"}}]})(props);
	};
	module.exports.MdCheckCircle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"}}]})(props);
	};
	module.exports.MdChromeReaderMode = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 12h7v1.5h-7zm0-2.5h7V11h-7zm0 5h7V16h-7zM21 4H3c-1.1 0-2 .9-2 2v13c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 15h-9V6h9v13z"}}]})(props);
	};
	module.exports.MdClass = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 2H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 4h5v8l-2.5-1.5L6 12V4z"}}]})(props);
	};
	module.exports.MdCode = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z"}}]})(props);
	};
	module.exports.MdCompareArrows = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9.01 14H2v2h7.01v3L13 15l-3.99-4v3zm5.98-1v-3H22V8h-7.01V5L11 9l3.99 4z"}}]})(props);
	};
	module.exports.MdCopyright = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10.08 10.86c.05-.33.16-.62.3-.87s.34-.46.59-.62c.24-.15.54-.22.91-.23.23.01.44.05.63.13.2.09.38.21.52.36s.25.33.34.53.13.42.14.64h1.79c-.02-.47-.11-.9-.28-1.29s-.4-.73-.7-1.01-.66-.5-1.08-.66-.88-.23-1.39-.23c-.65 0-1.22.11-1.7.34s-.88.53-1.2.92-.56.84-.71 1.36S8 11.29 8 11.87v.27c0 .58.08 1.12.23 1.64s.39.97.71 1.35.72.69 1.2.91 1.05.34 1.7.34c.47 0 .91-.08 1.32-.23s.77-.36 1.08-.63.56-.58.74-.94.29-.74.3-1.15h-1.79c-.01.21-.06.4-.15.58s-.21.33-.36.46-.32.23-.52.3c-.19.07-.39.09-.6.1-.36-.01-.66-.08-.89-.23-.25-.16-.45-.37-.59-.62s-.25-.55-.3-.88-.08-.67-.08-1v-.27c0-.35.03-.68.08-1.01zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"}}]})(props);
	};
	module.exports.MdCreditCard = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z"}}]})(props);
	};
	module.exports.MdDashboard = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z"}}]})(props);
	};
	module.exports.MdDateRange = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"}}]})(props);
	};
	module.exports.MdDelete = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"}}]})(props);
	};
	module.exports.MdDeleteForever = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z"}}]})(props);
	};
	module.exports.MdDescription = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z"}}]})(props);
	};
	module.exports.MdDns = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 13H4c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zM7 19c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM20 3H4c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zM7 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"}}]})(props);
	};
	module.exports.MdDone = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"}}]})(props);
	};
	module.exports.MdDoneAll = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z"}}]})(props);
	};
	module.exports.MdDonutLarge = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 5.08V2c-5 .5-9 4.81-9 10s4 9.5 9 10v-3.08c-3-.48-6-3.4-6-6.92s3-6.44 6-6.92zM18.97 11H22c-.47-5-4-8.53-9-9v3.08C16 5.51 18.54 8 18.97 11zM13 18.92V22c5-.47 8.53-4 9-9h-3.03c-.43 3-2.97 5.49-5.97 5.92z"}}]})(props);
	};
	module.exports.MdDonutSmall = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 9.16V2c-5 .5-9 4.79-9 10s4 9.5 9 10v-7.16c-1-.41-2-1.52-2-2.84s1-2.43 2-2.84zM14.86 11H22c-.48-4.75-4-8.53-9-9v7.16c1 .3 1.52.98 1.86 1.84zM13 14.84V22c5-.47 8.52-4.25 9-9h-7.14c-.34.86-.86 1.54-1.86 1.84z"}}]})(props);
	};
	module.exports.MdEject = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 17h14v2H5zm7-12L5.33 15h13.34z"}}]})(props);
	};
	module.exports.MdEuroSymbol = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 18.5c-2.51 0-4.68-1.42-5.76-3.5H15v-2H8.58c-.05-.33-.08-.66-.08-1s.03-.67.08-1H15V9H9.24C10.32 6.92 12.5 5.5 15 5.5c1.61 0 3.09.59 4.23 1.57L21 5.3C19.41 3.87 17.3 3 15 3c-3.92 0-7.24 2.51-8.48 6H3v2h3.06c-.04.33-.06.66-.06 1 0 .34.02.67.06 1H3v2h3.52c1.24 3.49 4.56 6 8.48 6 2.31 0 4.41-.87 6-2.3l-1.78-1.77c-1.13.98-2.6 1.57-4.22 1.57z"}}]})(props);
	};
	module.exports.MdEvent = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"}}]})(props);
	};
	module.exports.MdEventSeat = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 18v3h3v-3h10v3h3v-6H4zm15-8h3v3h-3zM2 10h3v3H2zm15 3H7V5c0-1.1.9-2 2-2h6c1.1 0 2 .9 2 2v8z"}}]})(props);
	};
	module.exports.MdExitToApp = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdExplore = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 10.9c-.61 0-1.1.49-1.1 1.1s.49 1.1 1.1 1.1c.61 0 1.1-.49 1.1-1.1s-.49-1.1-1.1-1.1zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm2.19 12.19L6 18l3.81-8.19L18 6l-3.81 8.19z"}}]})(props);
	};
	module.exports.MdExtension = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.5 11H19V7c0-1.1-.9-2-2-2h-4V3.5C13 2.12 11.88 1 10.5 1S8 2.12 8 3.5V5H4c-1.1 0-1.99.9-1.99 2v3.8H3.5c1.49 0 2.7 1.21 2.7 2.7s-1.21 2.7-2.7 2.7H2V20c0 1.1.9 2 2 2h3.8v-1.5c0-1.49 1.21-2.7 2.7-2.7 1.49 0 2.7 1.21 2.7 2.7V22H17c1.1 0 2-.9 2-2v-4h1.5c1.38 0 2.5-1.12 2.5-2.5S21.88 11 20.5 11z"}}]})(props);
	};
	module.exports.MdFace = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 11.75c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zm6 0c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8 0-.29.02-.58.05-.86 2.36-1.05 4.23-2.98 5.21-5.37C11.07 8.33 14.05 10 17.42 10c.78 0 1.53-.09 2.25-.26.21.71.33 1.47.33 2.26 0 4.41-3.59 8-8 8z"}}]})(props);
	};
	module.exports.MdFavorite = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"}}]})(props);
	};
	module.exports.MdFavoriteBorder = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"}}]})(props);
	};
	module.exports.MdFeedback = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 12h-2v-2h2v2zm0-4h-2V6h2v4z"}}]})(props);
	};
	module.exports.MdFindInPage = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 19.59V8l-6-6H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c.45 0 .85-.15 1.19-.4l-4.43-4.43c-.8.52-1.74.83-2.76.83-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5c0 1.02-.31 1.96-.83 2.75L20 19.59zM9 13c0 1.66 1.34 3 3 3s3-1.34 3-3-1.34-3-3-3-3 1.34-3 3z"}}]})(props);
	};
	module.exports.MdFindReplace = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 6c1.38 0 2.63.56 3.54 1.46L12 10h6V4l-2.05 2.05C14.68 4.78 12.93 4 11 4c-3.53 0-6.43 2.61-6.92 6H6.1c.46-2.28 2.48-4 4.9-4zm5.64 9.14c.66-.9 1.12-1.97 1.28-3.14H15.9c-.46 2.28-2.48 4-4.9 4-1.38 0-2.63-.56-3.54-1.46L10 12H4v6l2.05-2.05C7.32 17.22 9.07 18 11 18c1.55 0 2.98-.51 4.14-1.36L20 21.49 21.49 20l-4.85-4.86z"}}]})(props);
	};
	module.exports.MdFingerprint = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.81 4.47c-.08 0-.16-.02-.23-.06C15.66 3.42 14 3 12.01 3c-1.98 0-3.86.47-5.57 1.41-.24.13-.54.04-.68-.2-.13-.24-.04-.55.2-.68C7.82 2.52 9.86 2 12.01 2c2.13 0 3.99.47 6.03 1.52.25.13.34.43.21.67-.09.18-.26.28-.44.28zM3.5 9.72c-.1 0-.2-.03-.29-.09-.23-.16-.28-.47-.12-.7.99-1.4 2.25-2.5 3.75-3.27C9.98 4.04 14 4.03 17.15 5.65c1.5.77 2.76 1.86 3.75 3.25.16.22.11.54-.12.7-.23.16-.54.11-.7-.12-.9-1.26-2.04-2.25-3.39-2.94-2.87-1.47-6.54-1.47-9.4.01-1.36.7-2.5 1.7-3.4 2.96-.08.14-.23.21-.39.21zm6.25 12.07c-.13 0-.26-.05-.35-.15-.87-.87-1.34-1.43-2.01-2.64-.69-1.23-1.05-2.73-1.05-4.34 0-2.97 2.54-5.39 5.66-5.39s5.66 2.42 5.66 5.39c0 .28-.22.5-.5.5s-.5-.22-.5-.5c0-2.42-2.09-4.39-4.66-4.39-2.57 0-4.66 1.97-4.66 4.39 0 1.44.32 2.77.93 3.85.64 1.15 1.08 1.64 1.85 2.42.19.2.19.51 0 .71-.11.1-.24.15-.37.15zm7.17-1.85c-1.19 0-2.24-.3-3.1-.89-1.49-1.01-2.38-2.65-2.38-4.39 0-.28.22-.5.5-.5s.5.22.5.5c0 1.41.72 2.74 1.94 3.56.71.48 1.54.71 2.54.71.24 0 .64-.03 1.04-.1.27-.05.53.13.58.41.05.27-.13.53-.41.58-.57.11-1.07.12-1.21.12zM14.91 22c-.04 0-.09-.01-.13-.02-1.59-.44-2.63-1.03-3.72-2.1-1.4-1.39-2.17-3.24-2.17-5.22 0-1.62 1.38-2.94 3.08-2.94 1.7 0 3.08 1.32 3.08 2.94 0 1.07.93 1.94 2.08 1.94s2.08-.87 2.08-1.94c0-3.77-3.25-6.83-7.25-6.83-2.84 0-5.44 1.58-6.61 4.03-.39.81-.59 1.76-.59 2.8 0 .78.07 2.01.67 3.61.1.26-.03.55-.29.64-.26.1-.55-.04-.64-.29-.49-1.31-.73-2.61-.73-3.96 0-1.2.23-2.29.68-3.24 1.33-2.79 4.28-4.6 7.51-4.6 4.55 0 8.25 3.51 8.25 7.83 0 1.62-1.38 2.94-3.08 2.94s-3.08-1.32-3.08-2.94c0-1.07-.93-1.94-2.08-1.94s-2.08.87-2.08 1.94c0 1.71.66 3.31 1.87 4.51.95.94 1.86 1.46 3.27 1.85.27.07.42.35.35.61-.05.23-.26.38-.47.38z"}}]})(props);
	};
	module.exports.MdFlightLand = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2.5 19h19v2h-19zm7.18-5.73l4.35 1.16 5.31 1.42c.8.21 1.62-.26 1.84-1.06.21-.8-.26-1.62-1.06-1.84l-5.31-1.42-2.76-9.02L10.12 2v8.28L5.15 8.95l-.93-2.32-1.45-.39v5.17l1.6.43 5.31 1.43z"}}]})(props);
	};
	module.exports.MdFlightTakeoff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2.5 19h19v2h-19zm19.57-9.36c-.21-.8-1.04-1.28-1.84-1.06L14.92 10l-6.9-6.43-1.93.51 4.14 7.17-4.97 1.33-1.97-1.54-1.45.39 1.82 3.16.77 1.33 1.6-.43 5.31-1.42 4.35-1.16L21 11.49c.81-.23 1.28-1.05 1.07-1.85z"}}]})(props);
	};
	module.exports.MdFlipToBack = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 7H7v2h2V7zm0 4H7v2h2v-2zm0-8c-1.11 0-2 .9-2 2h2V3zm4 12h-2v2h2v-2zm6-12v2h2c0-1.1-.9-2-2-2zm-6 0h-2v2h2V3zM9 17v-2H7c0 1.1.89 2 2 2zm10-4h2v-2h-2v2zm0-4h2V7h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zM5 7H3v12c0 1.1.89 2 2 2h12v-2H5V7zm10-2h2V3h-2v2zm0 12h2v-2h-2v2z"}}]})(props);
	};
	module.exports.MdFlipToFront = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm2 4v-2H3c0 1.1.89 2 2 2zM3 9h2V7H3v2zm12 12h2v-2h-2v2zm4-18H9c-1.11 0-2 .9-2 2v10c0 1.1.89 2 2 2h10c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2z"}}]})(props);
	};
	module.exports.MdGTranslate = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 5h-9.12L10 2H4c-1.1 0-2 .9-2 2v13c0 1.1.9 2 2 2h7l1 3h8c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zM7.17 14.59c-2.25 0-4.09-1.83-4.09-4.09s1.83-4.09 4.09-4.09c1.04 0 1.99.37 2.74 1.07l.07.06-1.23 1.18-.06-.05c-.29-.27-.78-.59-1.52-.59-1.31 0-2.38 1.09-2.38 2.42s1.07 2.42 2.38 2.42c1.37 0 1.96-.87 2.12-1.46H7.08V9.91h3.95l.01.07c.04.21.05.4.05.61 0 2.35-1.61 4-3.92 4zm6.03-1.71c.33.6.74 1.18 1.19 1.7l-.54.53-.65-2.23zm.77-.76h-.99l-.31-1.04h3.99s-.34 1.31-1.56 2.74c-.52-.62-.89-1.23-1.13-1.7zM21 20c0 .55-.45 1-1 1h-7l2-2-.81-2.77.92-.92L17.79 18l.73-.73-2.71-2.68c.9-1.03 1.6-2.25 1.92-3.51H19v-1.04h-3.64V9h-1.04v1.04h-1.96L11.18 6H20c.55 0 1 .45 1 1v13z"}}]})(props);
	};
	module.exports.MdGavel = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M1 21h12v2H1zM5.245 8.07l2.83-2.827 14.14 14.142-2.828 2.828zM12.317 1l5.657 5.656-2.83 2.83-5.654-5.66zM3.825 9.485l5.657 5.657-2.828 2.828-5.657-5.657z"}}]})(props);
	};
	module.exports.MdGetApp = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"}}]})(props);
	};
	module.exports.MdGif = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.5 9H13v6h-1.5zM9 9H6c-.6 0-1 .5-1 1v4c0 .5.4 1 1 1h3c.6 0 1-.5 1-1v-2H8.5v1.5h-2v-3H10V10c0-.5-.4-1-1-1zm10 1.5V9h-4.5v6H16v-2h2v-1.5h-2v-1z"}}]})(props);
	};
	module.exports.MdGrade = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"}}]})(props);
	};
	module.exports.MdGroupWork = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM8 17.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5zM9.5 8c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5S9.5 9.38 9.5 8zm6.5 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"}}]})(props);
	};
	module.exports.MdHelp = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z"}}]})(props);
	};
	module.exports.MdHelpOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z"}}]})(props);
	};
	module.exports.MdHighlightOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"}}]})(props);
	};
	module.exports.MdHistory = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z"}}]})(props);
	};
	module.exports.MdHome = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"}}]})(props);
	};
	module.exports.MdHourglassEmpty = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6zm10 14.5V20H8v-3.5l4-4 4 4zm-4-5l-4-4V4h8v3.5l-4 4z"}}]})(props);
	};
	module.exports.MdHourglassFull = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6z"}}]})(props);
	};
	module.exports.MdHttp = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4.5 11h-2V9H1v6h1.5v-2.5h2V15H6V9H4.5v2zm2.5-.5h1.5V15H10v-4.5h1.5V9H7v1.5zm5.5 0H14V15h1.5v-4.5H17V9h-4.5v1.5zm9-1.5H18v6h1.5v-2h2c.8 0 1.5-.7 1.5-1.5v-1c0-.8-.7-1.5-1.5-1.5zm0 2.5h-2v-1h2v1z"}}]})(props);
	};
	module.exports.MdHttps = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"}}]})(props);
	};
	module.exports.MdImportantDevices = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M23 11.01L18 11c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-9c0-.55-.45-.99-1-.99zM23 20h-5v-7h5v7zM20 2H2C.89 2 0 2.89 0 4v12c0 1.1.89 2 2 2h7v2H7v2h8v-2h-2v-2h2v-2H2V4h18v5h2V4c0-1.11-.9-2-2-2zm-8.03 7L11 6l-.97 3H7l2.47 1.76-.94 2.91 2.47-1.8 2.47 1.8-.94-2.91L15 9h-3.03z"}}]})(props);
	};
	module.exports.MdInfo = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"}}]})(props);
	};
	module.exports.MdInfoOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z"}}]})(props);
	};
	module.exports.MdInput = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3.01H3c-1.1 0-2 .9-2 2V9h2V4.99h18v14.03H3V15H1v4.01c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98v-14c0-1.11-.9-2-2-2zM11 16l4-4-4-4v3H1v2h10v3z"}}]})(props);
	};
	module.exports.MdInvertColors = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.66 7.93L12 2.27 6.34 7.93c-3.12 3.12-3.12 8.19 0 11.31C7.9 20.8 9.95 21.58 12 21.58c2.05 0 4.1-.78 5.66-2.34 3.12-3.12 3.12-8.19 0-11.31zM12 19.59c-1.6 0-3.11-.62-4.24-1.76C6.62 16.69 6 15.19 6 13.59s.62-3.11 1.76-4.24L12 5.1v14.49z"}}]})(props);
	};
	module.exports.MdLabel = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16z"}}]})(props);
	};
	module.exports.MdLabelOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16zM16 17H5V7h11l3.55 5L16 17z"}}]})(props);
	};
	module.exports.MdLanguage = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z"}}]})(props);
	};
	module.exports.MdLaunch = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z"}}]})(props);
	};
	module.exports.MdLightbulbOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6C7.8 12.16 7 10.63 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z"}}]})(props);
	};
	module.exports.MdLineStyle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 16h5v-2H3v2zm6.5 0h5v-2h-5v2zm6.5 0h5v-2h-5v2zM3 20h2v-2H3v2zm4 0h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM3 12h8v-2H3v2zm10 0h8v-2h-8v2zM3 4v4h18V4H3z"}}]})(props);
	};
	module.exports.MdLineWeight = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 17h18v-2H3v2zm0 3h18v-1H3v1zm0-7h18v-3H3v3zm0-9v4h18V4H3z"}}]})(props);
	};
	module.exports.MdList = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z"}}]})(props);
	};
	module.exports.MdLock = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"}}]})(props);
	};
	module.exports.MdLockOpen = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z"}}]})(props);
	};
	module.exports.MdLockOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM8.9 6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2H8.9V6zM18 20H6V10h12v10z"}}]})(props);
	};
	module.exports.MdLoyalty = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7zm11.77 8.27L13 19.54l-4.27-4.27C8.28 14.81 8 14.19 8 13.5c0-1.38 1.12-2.5 2.5-2.5.69 0 1.32.28 1.77.74l.73.72.73-.73c.45-.45 1.08-.73 1.77-.73 1.38 0 2.5 1.12 2.5 2.5 0 .69-.28 1.32-.73 1.77z"}}]})(props);
	};
	module.exports.MdMarkunreadMailbox = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 6H10v6H8V4h6V0H6v6H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdMotorcycle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.44 9.03L15.41 5H11v2h3.59l2 2H5c-2.8 0-5 2.2-5 5s2.2 5 5 5c2.46 0 4.45-1.69 4.9-4h1.65l2.77-2.77c-.21.54-.32 1.14-.32 1.77 0 2.8 2.2 5 5 5s5-2.2 5-5c0-2.65-1.97-4.77-4.56-4.97zM7.82 15C7.4 16.15 6.28 17 5 17c-1.63 0-3-1.37-3-3s1.37-3 3-3c1.28 0 2.4.85 2.82 2H5v2h2.82zM19 17c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"}}]})(props);
	};
	module.exports.MdNoteAdd = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 14h-3v3h-2v-3H8v-2h3v-3h2v3h3v2zm-3-7V3.5L18.5 9H13z"}}]})(props);
	};
	module.exports.MdOfflinePin = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm5 16H7v-2h10v2zm-6.7-4L7 10.7l1.4-1.4 1.9 1.9 5.3-5.3L17 7.3 10.3 14z"}}]})(props);
	};
	module.exports.MdOpacity = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.66 8L12 2.35 6.34 8C4.78 9.56 4 11.64 4 13.64s.78 4.11 2.34 5.67 3.61 2.35 5.66 2.35 4.1-.79 5.66-2.35S20 15.64 20 13.64 19.22 9.56 17.66 8zM6 14c.01-2 .62-3.27 1.76-4.4L12 5.27l4.24 4.38C17.38 10.77 17.99 12 18 14H6z"}}]})(props);
	};
	module.exports.MdOpenInBrowser = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h4v-2H5V8h14v10h-4v2h4c1.1 0 2-.9 2-2V6c0-1.1-.89-2-2-2zm-7 6l-4 4h3v6h2v-6h3l-4-4z"}}]})(props);
	};
	module.exports.MdOpenInNew = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z"}}]})(props);
	};
	module.exports.MdOpenWith = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 9h4V6h3l-5-5-5 5h3v3zm-1 1H6V7l-5 5 5 5v-3h3v-4zm14 2l-5-5v3h-3v4h3v3l5-5zm-9 3h-4v3H7l5 5 5-5h-3v-3z"}}]})(props);
	};
	module.exports.MdPageview = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.5 9C10.12 9 9 10.12 9 11.5s1.12 2.5 2.5 2.5 2.5-1.12 2.5-2.5S12.88 9 11.5 9zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-3.21 14.21l-2.91-2.91c-.69.44-1.51.7-2.39.7C9.01 16 7 13.99 7 11.5S9.01 7 11.5 7 16 9.01 16 11.5c0 .88-.26 1.69-.7 2.39l2.91 2.9-1.42 1.42z"}}]})(props);
	};
	module.exports.MdPanTool = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"}}]})(props);
	};
	module.exports.MdPayment = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z"}}]})(props);
	};
	module.exports.MdPermCameraMic = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 5h-3.17L15 3H9L7.17 5H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7v-2.09c-2.83-.48-5-2.94-5-5.91h2c0 2.21 1.79 4 4 4s4-1.79 4-4h2c0 2.97-2.17 5.43-5 5.91V21h7c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-6 8c0 1.1-.9 2-2 2s-2-.9-2-2V9c0-1.1.9-2 2-2s2 .9 2 2v4z"}}]})(props);
	};
	module.exports.MdPermContactCalendar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H6v-1c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1z"}}]})(props);
	};
	module.exports.MdPermDataSetting = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.99 11.5c.34 0 .67.03 1 .07L20 0 0 20h11.56c-.04-.33-.07-.66-.07-1 0-4.14 3.36-7.5 7.5-7.5zm3.71 7.99c.02-.16.04-.32.04-.49 0-.17-.01-.33-.04-.49l1.06-.83c.09-.08.12-.21.06-.32l-1-1.73c-.06-.11-.19-.15-.31-.11l-1.24.5c-.26-.2-.54-.37-.85-.49l-.19-1.32c-.01-.12-.12-.21-.24-.21h-2c-.12 0-.23.09-.25.21l-.19 1.32c-.3.13-.59.29-.85.49l-1.24-.5c-.11-.04-.24 0-.31.11l-1 1.73c-.06.11-.04.24.06.32l1.06.83c-.02.16-.03.32-.03.49 0 .17.01.33.03.49l-1.06.83c-.09.08-.12.21-.06.32l1 1.73c.06.11.19.15.31.11l1.24-.5c.26.2.54.37.85.49l.19 1.32c.02.12.12.21.25.21h2c.12 0 .23-.09.25-.21l.19-1.32c.3-.13.59-.29.84-.49l1.25.5c.11.04.24 0 .31-.11l1-1.73c.06-.11.03-.24-.06-.32l-1.07-.83zm-3.71 1.01c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}}]})(props);
	};
	module.exports.MdPermDeviceInformation = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 7h-2v2h2V7zm0 4h-2v6h2v-6zm4-9.99L7 1c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM17 19H7V5h10v14z"}}]})(props);
	};
	module.exports.MdPermIdentity = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 5.9c1.16 0 2.1.94 2.1 2.1s-.94 2.1-2.1 2.1S9.9 9.16 9.9 8s.94-2.1 2.1-2.1m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z"}}]})(props);
	};
	module.exports.MdPermMedia = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2 6H0v5h.01L0 20c0 1.1.9 2 2 2h18v-2H2V6zm20-2h-8l-2-2H6c-1.1 0-1.99.9-1.99 2L4 16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM7 15l4.5-6 3.5 4.51 2.5-3.01L21 15H7z"}}]})(props);
	};
	module.exports.MdPermPhoneMsg = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 15.5c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.02.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.58l2.2-2.21c.28-.27.36-.66.25-1.01C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM12 3v10l3-3h6V3h-9z"}}]})(props);
	};
	module.exports.MdPermScanWifi = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 3C6.95 3 3.15 4.85 0 7.23L12 22 24 7.25C20.85 4.87 17.05 3 12 3zm1 13h-2v-6h2v6zm-2-8V6h2v2h-2z"}}]})(props);
	};
	module.exports.MdPets = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"4.5","cy":"9.5","r":"2.5"}},{"tag":"circle","attr":{"cx":"9","cy":"5.5","r":"2.5"}},{"tag":"circle","attr":{"cx":"15","cy":"5.5","r":"2.5"}},{"tag":"circle","attr":{"cx":"19.5","cy":"9.5","r":"2.5"}},{"tag":"path","attr":{"d":"M17.34 14.86c-.87-1.02-1.6-1.89-2.48-2.91-.46-.54-1.05-1.08-1.75-1.32-.11-.04-.22-.07-.33-.09-.25-.04-.52-.04-.78-.04s-.53 0-.79.05c-.11.02-.22.05-.33.09-.7.24-1.28.78-1.75 1.32-.87 1.02-1.6 1.89-2.48 2.91-1.31 1.31-2.92 2.76-2.62 4.79.29 1.02 1.02 2.03 2.33 2.32.73.15 3.06-.44 5.54-.44h.18c2.48 0 4.81.58 5.54.44 1.31-.29 2.04-1.31 2.33-2.32.31-2.04-1.3-3.49-2.61-4.8z"}}]})(props);
	};
	module.exports.MdPictureInPicture = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 7h-8v6h8V7zm2-4H3c-1.1 0-2 .9-2 2v14c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98V5c0-1.1-.9-2-2-2zm0 16.01H3V4.98h18v14.03z"}}]})(props);
	};
	module.exports.MdPictureInPictureAlt = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 11h-8v6h8v-6zm4 8V4.98C23 3.88 22.1 3 21 3H3c-1.1 0-2 .88-2 1.98V19c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zm-2 .02H3V4.97h18v14.05z"}}]})(props);
	};
	module.exports.MdPlayForWork = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 5v5.59H7.5l4.5 4.5 4.5-4.5H13V5h-2zm-5 9c0 3.31 2.69 6 6 6s6-2.69 6-6h-2c0 2.21-1.79 4-4 4s-4-1.79-4-4H6z"}}]})(props);
	};
	module.exports.MdPolymer = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 4h-4L7.11 16.63 4.5 12 9 4H5L.5 12 5 20h4l7.89-12.63L19.5 12 15 20h4l4.5-8z"}}]})(props);
	};
	module.exports.MdPowerSettingsNew = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 3h-2v10h2V3zm4.83 2.17l-1.42 1.42C17.99 7.86 19 9.81 19 12c0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.19 1.01-4.14 2.58-5.42L6.17 5.17C4.23 6.82 3 9.26 3 12c0 4.97 4.03 9 9 9s9-4.03 9-9c0-2.74-1.23-5.18-3.17-6.83z"}}]})(props);
	};
	module.exports.MdPregnantWoman = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 4c0-1.11.89-2 2-2s2 .89 2 2-.89 2-2 2-2-.89-2-2zm7 9c-.01-1.34-.83-2.51-2-3 0-1.66-1.34-3-3-3s-3 1.34-3 3v7h2v5h3v-5h3v-4z"}}]})(props);
	};
	module.exports.MdPrint = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z"}}]})(props);
	};
	module.exports.MdQueryBuilder = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z"}}]})(props);
	};
	module.exports.MdQuestionAnswer = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 6h-2v9H6v2c0 .55.45 1 1 1h11l4 4V7c0-.55-.45-1-1-1zm-4 6V3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v14l4-4h10c.55 0 1-.45 1-1z"}}]})(props);
	};
	module.exports.MdReceipt = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 17H6v-2h12v2zm0-4H6v-2h12v2zm0-4H6V7h12v2zM3 22l1.5-1.5L6 22l1.5-1.5L9 22l1.5-1.5L12 22l1.5-1.5L15 22l1.5-1.5L18 22l1.5-1.5L21 22V2l-1.5 1.5L18 2l-1.5 1.5L15 2l-1.5 1.5L12 2l-1.5 1.5L9 2 7.5 3.5 6 2 4.5 3.5 3 2v20z"}}]})(props);
	};
	module.exports.MdRecordVoiceOver = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"9","cy":"9","r":"4"}},{"tag":"path","attr":{"d":"M9 15c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4zm7.76-9.64l-1.68 1.69c.84 1.18.84 2.71 0 3.89l1.68 1.69c2.02-2.02 2.02-5.07 0-7.27zM20.07 2l-1.63 1.63c2.77 3.02 2.77 7.56 0 10.74L20.07 16c3.9-3.89 3.91-9.95 0-14z"}}]})(props);
	};
	module.exports.MdRedeem = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 6h-2.18c.11-.31.18-.65.18-1 0-1.66-1.34-3-3-3-1.05 0-1.96.54-2.5 1.35l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z"}}]})(props);
	};
	module.exports.MdRemoveShoppingCart = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22.73 22.73L2.77 2.77 2 2l-.73-.73L0 2.54l4.39 4.39 2.21 4.66-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h7.46l1.38 1.38c-.5.36-.83.95-.83 1.62 0 1.1.89 2 1.99 2 .67 0 1.26-.33 1.62-.84L21.46 24l1.27-1.27zM7.42 15c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h2.36l2 2H7.42zm8.13-2c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H6.54l9.01 9zM7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdReorder = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 15h18v-2H3v2zm0 4h18v-2H3v2zm0-8h18V9H3v2zm0-6v2h18V5H3z"}}]})(props);
	};
	module.exports.MdReportProblem = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"}}]})(props);
	};
	module.exports.MdRestore = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z"}}]})(props);
	};
	module.exports.MdRestorePage = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm-2 16c-2.05 0-3.81-1.24-4.58-3h1.71c.63.9 1.68 1.5 2.87 1.5 1.93 0 3.5-1.57 3.5-3.5S13.93 9.5 12 9.5c-1.35 0-2.52.78-3.1 1.9l1.6 1.6h-4V9l1.3 1.3C8.69 8.92 10.23 8 12 8c2.76 0 5 2.24 5 5s-2.24 5-5 5z"}}]})(props);
	};
	module.exports.MdRoom = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"}}]})(props);
	};
	module.exports.MdRoundedCorner = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 19h2v2h-2v-2zm0-2h2v-2h-2v2zM3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm0-4h2V3H3v2zm4 0h2V3H7v2zm8 16h2v-2h-2v2zm-4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm-8 0h2v-2H7v2zm-4 0h2v-2H3v2zM21 8c0-2.76-2.24-5-5-5h-5v2h5c1.65 0 3 1.35 3 3v5h2V8z"}}]})(props);
	};
	module.exports.MdRowing = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8.5 14.5L4 19l1.5 1.5L9 17h2l-2.5-2.5zM15 1c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 20.01L18 24l-2.99-3.01V19.5l-7.1-7.09c-.31.05-.61.07-.91.07v-2.16c1.66.03 3.61-.87 4.67-2.04l1.4-1.55c.19-.21.43-.38.69-.5.29-.14.62-.23.96-.23h.03C15.99 6.01 17 7.02 17 8.26v5.75c0 .84-.35 1.61-.92 2.16l-3.58-3.58v-2.27c-.63.52-1.43 1.02-2.29 1.39L16.5 18H18l3 3.01z"}}]})(props);
	};
	module.exports.MdSchedule = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z"}}]})(props);
	};
	module.exports.MdSearch = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"}}]})(props);
	};
	module.exports.MdSettings = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z"}}]})(props);
	};
	module.exports.MdSettingsApplications = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm7-7H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-1.75 9c0 .23-.02.46-.05.68l1.48 1.16c.13.11.17.3.08.45l-1.4 2.42c-.09.15-.27.21-.43.15l-1.74-.7c-.36.28-.76.51-1.18.69l-.26 1.85c-.03.17-.18.3-.35.3h-2.8c-.17 0-.32-.13-.35-.29l-.26-1.85c-.43-.18-.82-.41-1.18-.69l-1.74.7c-.16.06-.34 0-.43-.15l-1.4-2.42c-.09-.15-.05-.34.08-.45l1.48-1.16c-.03-.23-.05-.46-.05-.69 0-.23.02-.46.05-.68l-1.48-1.16c-.13-.11-.17-.3-.08-.45l1.4-2.42c.09-.15.27-.21.43-.15l1.74.7c.36-.28.76-.51 1.18-.69l.26-1.85c.03-.17.18-.3.35-.3h2.8c.17 0 .32.13.35.29l.26 1.85c.43.18.82.41 1.18.69l1.74-.7c.16-.06.34 0 .43.15l1.4 2.42c.09.15.05.34-.08.45l-1.48 1.16c.03.23.05.46.05.69z"}}]})(props);
	};
	module.exports.MdSettingsBackupRestore = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 12c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2 2-.9 2-2zm-2-9c-4.97 0-9 4.03-9 9H0l4 4 4-4H5c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.51 0-2.91-.49-4.06-1.3l-1.42 1.44C8.04 20.3 9.94 21 12 21c4.97 0 9-4.03 9-9s-4.03-9-9-9z"}}]})(props);
	};
	module.exports.MdSettingsBluetooth = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 24h2v-2h-2v2zm-4 0h2v-2H7v2zm8 0h2v-2h-2v2zm2.71-18.29L12 0h-1v7.59L6.41 3 5 4.41 10.59 10 5 15.59 6.41 17 11 12.41V20h1l5.71-5.71-4.3-4.29 4.3-4.29zM13 3.83l1.88 1.88L13 7.59V3.83zm1.88 10.46L13 16.17v-3.76l1.88 1.88z"}}]})(props);
	};
	module.exports.MdSettingsBrightness = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02zM8 16h2.5l1.5 1.5 1.5-1.5H16v-2.5l1.5-1.5-1.5-1.5V8h-2.5L12 6.5 10.5 8H8v2.5L6.5 12 8 13.5V16zm4-7c1.66 0 3 1.34 3 3s-1.34 3-3 3V9z"}}]})(props);
	};
	module.exports.MdSettingsCell = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 24h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM16 .01L8 0C6.9 0 6 .9 6 2v16c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V2c0-1.1-.9-1.99-2-1.99zM16 16H8V4h8v12z"}}]})(props);
	};
	module.exports.MdSettingsEthernet = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7.77 6.76L6.23 5.48.82 12l5.41 6.52 1.54-1.28L3.42 12l4.35-5.24zM7 13h2v-2H7v2zm10-2h-2v2h2v-2zm-6 2h2v-2h-2v2zm6.77-7.52l-1.54 1.28L20.58 12l-4.35 5.24 1.54 1.28L23.18 12l-5.41-6.52z"}}]})(props);
	};
	module.exports.MdSettingsInputAntenna = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 5c-3.87 0-7 3.13-7 7h2c0-2.76 2.24-5 5-5s5 2.24 5 5h2c0-3.87-3.13-7-7-7zm1 9.29c.88-.39 1.5-1.26 1.5-2.29 0-1.38-1.12-2.5-2.5-2.5S9.5 10.62 9.5 12c0 1.02.62 1.9 1.5 2.29v3.3L7.59 21 9 22.41l3-3 3 3L16.41 21 13 17.59v-3.3zM12 1C5.93 1 1 5.93 1 12h2c0-4.97 4.03-9 9-9s9 4.03 9 9h2c0-6.07-4.93-11-11-11z"}}]})(props);
	};
	module.exports.MdSettingsInputComponent = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 2c0-.55-.45-1-1-1s-1 .45-1 1v4H1v6h6V6H5V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2H9v2zm-8 0c0 1.3.84 2.4 2 2.82V23h2v-4.18C6.16 18.4 7 17.3 7 16v-2H1v2zM21 6V2c0-.55-.45-1-1-1s-1 .45-1 1v4h-2v6h6V6h-2zm-8-4c0-.55-.45-1-1-1s-1 .45-1 1v4H9v6h6V6h-2V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2h-6v2z"}}]})(props);
	};
	module.exports.MdSettingsInputComposite = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 2c0-.55-.45-1-1-1s-1 .45-1 1v4H1v6h6V6H5V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2H9v2zm-8 0c0 1.3.84 2.4 2 2.82V23h2v-4.18C6.16 18.4 7 17.3 7 16v-2H1v2zM21 6V2c0-.55-.45-1-1-1s-1 .45-1 1v4h-2v6h6V6h-2zm-8-4c0-.55-.45-1-1-1s-1 .45-1 1v4H9v6h6V6h-2V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2h-6v2z"}}]})(props);
	};
	module.exports.MdSettingsInputHdmi = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 7V4c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v3H5v6l3 6v3h8v-3l3-6V7h-1zM8 4h8v3h-2V5h-1v2h-2V5h-1v2H8V4z"}}]})(props);
	};
	module.exports.MdSettingsInputSvideo = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8 11.5c0-.83-.67-1.5-1.5-1.5S5 10.67 5 11.5 5.67 13 6.5 13 8 12.33 8 11.5zm7-5c0-.83-.67-1.5-1.5-1.5h-3C9.67 5 9 5.67 9 6.5S9.67 8 10.5 8h3c.83 0 1.5-.67 1.5-1.5zM8.5 15c-.83 0-1.5.67-1.5 1.5S7.67 18 8.5 18s1.5-.67 1.5-1.5S9.33 15 8.5 15zM12 1C5.93 1 1 5.93 1 12s4.93 11 11 11 11-4.93 11-11S18.07 1 12 1zm0 20c-4.96 0-9-4.04-9-9s4.04-9 9-9 9 4.04 9 9-4.04 9-9 9zm5.5-11c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-2 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"}}]})(props);
	};
	module.exports.MdSettingsOverscan = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12.01 5.5L10 8h4l-1.99-2.5zM18 10v4l2.5-1.99L18 10zM6 10l-2.5 2.01L6 14v-4zm8 6h-4l2.01 2.5L14 16zm7-13H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02z"}}]})(props);
	};
	module.exports.MdSettingsPhone = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 9h-2v2h2V9zm4 0h-2v2h2V9zm3 6.5c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.02.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.58l2.2-2.21c.28-.27.36-.66.25-1.01C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM19 9v2h2V9h-2z"}}]})(props);
	};
	module.exports.MdSettingsPower = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 24h2v-2H7v2zm4 0h2v-2h-2v2zm2-22h-2v10h2V2zm3.56 2.44l-1.45 1.45C16.84 6.94 18 8.83 18 11c0 3.31-2.69 6-6 6s-6-2.69-6-6c0-2.17 1.16-4.06 2.88-5.12L7.44 4.44C5.36 5.88 4 8.28 4 11c0 4.42 3.58 8 8 8s8-3.58 8-8c0-2.72-1.36-5.12-3.44-6.56zM15 24h2v-2h-2v2z"}}]})(props);
	};
	module.exports.MdSettingsRemote = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 9H9c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V10c0-.55-.45-1-1-1zm-3 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM7.05 6.05l1.41 1.41C9.37 6.56 10.62 6 12 6s2.63.56 3.54 1.46l1.41-1.41C15.68 4.78 13.93 4 12 4s-3.68.78-4.95 2.05zM12 0C8.96 0 6.21 1.23 4.22 3.22l1.41 1.41C7.26 3.01 9.51 2 12 2s4.74 1.01 6.36 2.64l1.41-1.41C17.79 1.23 15.04 0 12 0z"}}]})(props);
	};
	module.exports.MdSettingsVoice = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 24h2v-2H7v2zm5-11c1.66 0 2.99-1.34 2.99-3L15 4c0-1.66-1.34-3-3-3S9 2.34 9 4v6c0 1.66 1.34 3 3 3zm-1 11h2v-2h-2v2zm4 0h2v-2h-2v2zm4-14h-1.7c0 3-2.54 5.1-5.3 5.1S6.7 13 6.7 10H5c0 3.41 2.72 6.23 6 6.72V20h2v-3.28c3.28-.49 6-3.31 6-6.72z"}}]})(props);
	};
	module.exports.MdShop = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 6V4c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H2v13c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6h-6zm-6-2h4v2h-4V4zM9 18V9l7.5 4L9 18z"}}]})(props);
	};
	module.exports.MdShopTwo = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 9H1v11c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2H3V9zm15-4V3c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H5v11c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2V5h-5zm-6-2h4v2h-4V3zm0 12V8l5.5 3-5.5 4z"}}]})(props);
	};
	module.exports.MdShoppingBasket = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.21 9l-4.38-6.56c-.19-.28-.51-.42-.83-.42-.32 0-.64.14-.83.43L6.79 9H2c-.55 0-1 .45-1 1 0 .09.01.18.04.27l2.54 9.27c.23.84 1 1.46 1.92 1.46h13c.92 0 1.69-.62 1.93-1.46l2.54-9.27L23 10c0-.55-.45-1-1-1h-4.79zM9 9l3-4.4L15 9H9zm3 8c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"}}]})(props);
	};
	module.exports.MdShoppingCart = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdSpeakerNotes = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 14H6v-2h2v2zm0-3H6V9h2v2zm0-3H6V6h2v2zm7 6h-5v-2h5v2zm3-3h-8V9h8v2zm0-3h-8V6h8v2z"}}]})(props);
	};
	module.exports.MdSpeakerNotesOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10.54 11l-.54-.54L7.54 8 6 6.46 2.38 2.84 1.27 1.73 0 3l2.01 2.01L2 22l4-4h9l5.73 5.73L22 22.46 17.54 18l-7-7zM8 14H6v-2h2v2zm-2-3V9l2 2H6zm14-9H4.08L10 7.92V6h8v2h-7.92l1 1H18v2h-4.92l6.99 6.99C21.14 17.95 22 17.08 22 16V4c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdSpellcheck = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12.45 16h2.09L9.43 3H7.57L2.46 16h2.09l1.12-3h5.64l1.14 3zm-6.02-5L8.5 5.48 10.57 11H6.43zm15.16.59l-8.09 8.09L9.83 16l-1.41 1.41 5.09 5.09L23 13l-1.41-1.41z"}}]})(props);
	};
	module.exports.MdStars = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm4.24 16L12 15.45 7.77 18l1.12-4.81-3.73-3.23 4.92-.42L12 5l1.92 4.53 4.92.42-3.73 3.23L16.23 18z"}}]})(props);
	};
	module.exports.MdStore = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 4H4v2h16V4zm1 10v-2l-1-5H4l-1 5v2h1v6h10v-6h4v6h2v-6h1zm-9 4H6v-4h6v4z"}}]})(props);
	};
	module.exports.MdSubject = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 17H4v2h10v-2zm6-8H4v2h16V9zM4 15h16v-2H4v2zM4 5v2h16V5H4z"}}]})(props);
	};
	module.exports.MdSupervisorAccount = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.5 12c1.38 0 2.49-1.12 2.49-2.5S17.88 7 16.5 7C15.12 7 14 8.12 14 9.5s1.12 2.5 2.5 2.5zM9 11c1.66 0 2.99-1.34 2.99-3S10.66 5 9 5C7.34 5 6 6.34 6 8s1.34 3 3 3zm7.5 3c-1.83 0-5.5.92-5.5 2.75V19h11v-2.25c0-1.83-3.67-2.75-5.5-2.75zM9 13c-2.33 0-7 1.17-7 3.5V19h7v-2.25c0-.85.33-2.34 2.37-3.47C10.5 13.1 9.66 13 9 13z"}}]})(props);
	};
	module.exports.MdSwapHoriz = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6.99 11L3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z"}}]})(props);
	};
	module.exports.MdSwapVert = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 17.01V10h-2v7.01h-3L15 21l4-3.99h-3zM9 3L5 6.99h3V14h2V6.99h3L9 3z"}}]})(props);
	};
	module.exports.MdSwapVerticalCircle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM6.5 9L10 5.5 13.5 9H11v4H9V9H6.5zm11 6L14 18.5 10.5 15H13v-4h2v4h2.5z"}}]})(props);
	};
	module.exports.MdSystemUpdateAlt = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 16.5l4-4h-3v-9h-2v9H8l4 4zm9-13h-6v1.99h6v14.03H3V5.49h6V3.5H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2v-14c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdTab = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3V5h10v4h8v10z"}}]})(props);
	};
	module.exports.MdTabUnselected = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M1 9h2V7H1v2zm0 4h2v-2H1v2zm0-8h2V3c-1.1 0-2 .9-2 2zm8 16h2v-2H9v2zm-8-4h2v-2H1v2zm2 4v-2H1c0 1.1.9 2 2 2zM21 3h-8v6h10V5c0-1.1-.9-2-2-2zm0 14h2v-2h-2v2zM9 5h2V3H9v2zM5 21h2v-2H5v2zM5 5h2V3H5v2zm16 16c1.1 0 2-.9 2-2h-2v2zm0-8h2v-2h-2v2zm-8 8h2v-2h-2v2zm4 0h2v-2h-2v2z"}}]})(props);
	};
	module.exports.MdTheaters = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 3v2h-2V3H8v2H6V3H4v18h2v-2h2v2h8v-2h2v2h2V3h-2zM8 17H6v-2h2v2zm0-4H6v-2h2v2zm0-4H6V7h2v2zm10 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V7h2v2z"}}]})(props);
	};
	module.exports.MdThumbDown = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v1.91l.01.01L1 14c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"}}]})(props);
	};
	module.exports.MdThumbUp = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-1.91l-.01-.01L23 10z"}}]})(props);
	};
	module.exports.MdThumbsUpDown = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 6c0-.55-.45-1-1-1H5.82l.66-3.18.02-.23c0-.31-.13-.59-.33-.8L5.38 0 .44 4.94C.17 5.21 0 5.59 0 6v6.5c0 .83.67 1.5 1.5 1.5h6.75c.62 0 1.15-.38 1.38-.91l2.26-5.29c.07-.17.11-.36.11-.55V6zm10.5 4h-6.75c-.62 0-1.15.38-1.38.91l-2.26 5.29c-.07.17-.11.36-.11.55V18c0 .55.45 1 1 1h5.18l-.66 3.18-.02.24c0 .31.13.59.33.8l.79.78 4.94-4.94c.27-.27.44-.65.44-1.06v-6.5c0-.83-.67-1.5-1.5-1.5z"}}]})(props);
	};
	module.exports.MdTimeline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M23 8c0 1.1-.9 2-2 2-.18 0-.35-.02-.51-.07l-3.56 3.55c.05.16.07.34.07.52 0 1.1-.9 2-2 2s-2-.9-2-2c0-.18.02-.36.07-.52l-2.55-2.55c-.16.05-.34.07-.52.07s-.36-.02-.52-.07l-4.55 4.56c.05.16.07.33.07.51 0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2c.18 0 .35.02.51.07l4.56-4.55C8.02 9.36 8 9.18 8 9c0-1.1.9-2 2-2s2 .9 2 2c0 .18-.02.36-.07.52l2.55 2.55c.16-.05.34-.07.52-.07s.36.02.52.07l3.55-3.56C19.02 8.35 19 8.18 19 8c0-1.1.9-2 2-2s2 .9 2 2z"}}]})(props);
	};
	module.exports.MdToc = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z"}}]})(props);
	};
	module.exports.MdToday = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"}}]})(props);
	};
	module.exports.MdToll = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zM3 12c0-2.61 1.67-4.83 4-5.65V4.26C3.55 5.15 1 8.27 1 12s2.55 6.85 6 7.74v-2.09c-2.33-.82-4-3.04-4-5.65z"}}]})(props);
	};
	module.exports.MdTouchApp = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 11.24V7.5C9 6.12 10.12 5 11.5 5S14 6.12 14 7.5v3.74c1.21-.81 2-2.18 2-3.74C16 5.01 13.99 3 11.5 3S7 5.01 7 7.5c0 1.56.79 2.93 2 3.74zm9.84 4.63l-4.54-2.26c-.17-.07-.35-.11-.54-.11H13v-6c0-.83-.67-1.5-1.5-1.5S10 6.67 10 7.5v10.74l-3.43-.72c-.08-.01-.15-.03-.24-.03-.31 0-.59.13-.79.33l-.79.8 4.94 4.94c.27.27.65.44 1.06.44h6.79c.75 0 1.33-.55 1.44-1.28l.75-5.27c.01-.07.02-.14.02-.2 0-.62-.38-1.16-.91-1.38z"}}]})(props);
	};
	module.exports.MdTrackChanges = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.07 4.93l-1.41 1.41C19.1 7.79 20 9.79 20 12c0 4.42-3.58 8-8 8s-8-3.58-8-8c0-4.08 3.05-7.44 7-7.93v2.02C8.16 6.57 6 9.03 6 12c0 3.31 2.69 6 6 6s6-2.69 6-6c0-1.66-.67-3.16-1.76-4.24l-1.41 1.41C15.55 9.9 16 10.9 16 12c0 2.21-1.79 4-4 4s-4-1.79-4-4c0-1.86 1.28-3.41 3-3.86v2.14c-.6.35-1 .98-1 1.72 0 1.1.9 2 2 2s2-.9 2-2c0-.74-.4-1.38-1-1.72V2h-1C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10c0-2.76-1.12-5.26-2.93-7.07z"}}]})(props);
	};
	module.exports.MdTranslate = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z"}}]})(props);
	};
	module.exports.MdTrendingDown = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 18l2.29-2.29-4.88-4.88-4 4L2 7.41 3.41 6l6 6 4-4 6.3 6.29L22 12v6z"}}]})(props);
	};
	module.exports.MdTrendingFlat = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 12l-4-4v3H3v2h15v3z"}}]})(props);
	};
	module.exports.MdTrendingUp = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 6l2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z"}}]})(props);
	};
	module.exports.MdTurnedIn = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdTurnedInNot = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z"}}]})(props);
	};
	module.exports.MdUpdate = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 10.12h-6.78l2.74-2.82c-2.73-2.7-7.15-2.8-9.88-.1-2.73 2.71-2.73 7.08 0 9.79 2.73 2.71 7.15 2.71 9.88 0C18.32 15.65 19 14.08 19 12.1h2c0 1.98-.88 4.55-2.64 6.29-3.51 3.48-9.21 3.48-12.72 0-3.5-3.47-3.53-9.11-.02-12.58 3.51-3.47 9.14-3.47 12.65 0L21 3v7.12zM12.5 8v4.25l3.5 2.08-.72 1.21L11 13V8h1.5z"}}]})(props);
	};
	module.exports.MdVerifiedUser = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm-2 16l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z"}}]})(props);
	};
	module.exports.MdViewAgenda = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 13H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h17c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zm0-10H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h17c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"}}]})(props);
	};
	module.exports.MdViewArray = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 18h3V5H4v13zM18 5v13h3V5h-3zM8 18h9V5H8v13z"}}]})(props);
	};
	module.exports.MdViewCarousel = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 19h10V4H7v15zm-5-2h4V6H2v11zM18 6v11h4V6h-4z"}}]})(props);
	};
	module.exports.MdViewColumn = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 18h5V5h-5v13zm-6 0h5V5H4v13zM16 5v13h5V5h-5z"}}]})(props);
	};
	module.exports.MdViewDay = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2 21h19v-3H2v3zM20 8H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h17c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zM2 3v3h19V3H2z"}}]})(props);
	};
	module.exports.MdViewHeadline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z"}}]})(props);
	};
	module.exports.MdViewList = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 14h4v-4H4v4zm0 5h4v-4H4v4zM4 9h4V5H4v4zm5 5h12v-4H9v4zm0 5h12v-4H9v4zM9 5v4h12V5H9z"}}]})(props);
	};
	module.exports.MdViewModule = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 11h5V5H4v6zm0 7h5v-6H4v6zm6 0h5v-6h-5v6zm6 0h5v-6h-5v6zm-6-7h5V5h-5v6zm6-6v6h5V5h-5z"}}]})(props);
	};
	module.exports.MdViewQuilt = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 18h5v-6h-5v6zm-6 0h5V5H4v13zm12 0h5v-6h-5v6zM10 5v6h11V5H10z"}}]})(props);
	};
	module.exports.MdViewStream = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 18h17v-6H4v6zM4 5v6h17V5H4z"}}]})(props);
	};
	module.exports.MdViewWeek = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"}}]})(props);
	};
	module.exports.MdVisibility = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"}}]})(props);
	};
	module.exports.MdVisibilityOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z"}}]})(props);
	};
	module.exports.MdWatchLater = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm4.2 14.2L11 13V7h1.5v5.2l4.5 2.7-.8 1.3z"}}]})(props);
	};
	module.exports.MdWork = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 6h-4V4c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-6 0h-4V4h4v2z"}}]})(props);
	};
	module.exports.MdYoutubeSearchedFor = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.01 14h-.8l-.27-.27c.98-1.14 1.57-2.61 1.57-4.23 0-3.59-2.91-6.5-6.5-6.5s-6.5 3-6.5 6.5H2l3.84 4 4.16-4H6.51C6.51 7 8.53 5 11.01 5s4.5 2.01 4.5 4.5c0 2.48-2.02 4.5-4.5 4.5-.65 0-1.26-.14-1.82-.38L7.71 15.1c.97.57 2.09.9 3.3.9 1.61 0 3.08-.59 4.22-1.57l.27.27v.79l5.01 4.99L22 19l-4.99-5z"}}]})(props);
	};
	module.exports.MdZoomIn = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zm2.5-4h-2v2H9v-2H7V9h2V7h1v2h2v1z"}}]})(props);
	};
	module.exports.MdZoomOut = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z"}}]})(props);
	};
	module.exports.MdAddAlert = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10.01 21.01c0 1.1.89 1.99 1.99 1.99s1.99-.89 1.99-1.99h-3.98zm8.87-4.19V11c0-3.25-2.25-5.97-5.29-6.69v-.72C13.59 2.71 12.88 2 12 2s-1.59.71-1.59 1.59v.72C7.37 5.03 5.12 7.75 5.12 11v5.82L3 18.94V20h18v-1.06l-2.12-2.12zM16 13.01h-3v3h-2v-3H8V11h3V8h2v3h3v2.01z"}}]})(props);
	};
	module.exports.MdError = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"}}]})(props);
	};
	module.exports.MdErrorOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}}]})(props);
	};
	module.exports.MdWarning = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"}}]})(props);
	};
	module.exports.MdAddToQueue = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.11 0-2 .89-2 2v12c0 1.1.89 2 2 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5c0-1.11-.9-2-2-2zm0 14H3V5h18v12zm-5-7v2h-3v3h-2v-3H8v-2h3V7h2v3h3z"}}]})(props);
	};
	module.exports.MdAirplay = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 22h12l-6-6zM21 3H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4v-2H3V5h18v12h-4v2h4c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdAlbum = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 14.5c-2.49 0-4.5-2.01-4.5-4.5S9.51 7.5 12 7.5s4.5 2.01 4.5 4.5-2.01 4.5-4.5 4.5zm0-5.5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"}}]})(props);
	};
	module.exports.MdArtTrack = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"#010101","d":"M22 13h-8v-2h8v2zm0-6h-8v2h8V7zm-8 10h8v-2h-8v2zm-2-8v6c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V9c0-1.1.9-2 2-2h6c1.1 0 2 .9 2 2zm-1.5 6l-2.25-3-1.75 2.26-1.25-1.51L3.5 15h7z"}}]})(props);
	};
	module.exports.MdAvTimer = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 17c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1-1 .45-1 1zm0-14v4h2V5.08c3.39.49 6 3.39 6 6.92 0 3.87-3.13 7-7 7s-7-3.13-7-7c0-1.68.59-3.22 1.58-4.42L12 13l1.41-1.41-6.8-6.8v.02C4.42 6.45 3 9.05 3 12c0 4.97 4.02 9 9 9 4.97 0 9-4.03 9-9s-4.03-9-9-9h-1zm7 9c0-.55-.45-1-1-1s-1 .45-1 1 .45 1 1 1 1-.45 1-1zM6 12c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1-1 .45-1 1z"}}]})(props);
	};
	module.exports.MdBrandingWatermark = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16h-9v-6h9v6z"}}]})(props);
	};
	module.exports.MdCallToAction = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3v-3h18v3z"}}]})(props);
	};
	module.exports.MdClosedCaption = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 7H9.5v-.5h-2v3h2V13H11v1c0 .55-.45 1-1 1H7c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v1zm7 0h-1.5v-.5h-2v3h2V13H18v1c0 .55-.45 1-1 1h-3c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v1z"}}]})(props);
	};
	module.exports.MdEqualizer = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 20h4V4h-4v16zm-6 0h4v-8H4v8zM16 9v11h4V9h-4z"}}]})(props);
	};
	module.exports.MdExplicit = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 6h-4v2h4v2h-4v2h4v2H9V7h6v2z"}}]})(props);
	};
	module.exports.MdFastForward = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z"}}]})(props);
	};
	module.exports.MdFastRewind = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 18V6l-8.5 6 8.5 6zm.5-6l8.5 6V6l-8.5 6z"}}]})(props);
	};
	module.exports.MdFeaturedPlayList = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-9 8H3V9h9v2zm0-4H3V5h9v2z"}}]})(props);
	};
	module.exports.MdFeaturedVideo = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-9 9H3V5h9v7z"}}]})(props);
	};
	module.exports.MdFiberDvr = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.5 10.5h2v1h-2zm-13 0h2v3h-2zM21 3H3c-1.11 0-2 .89-2 2v14c0 1.1.89 2 2 2h18c1.11 0 2-.9 2-2V5c0-1.11-.89-2-2-2zM8 13.5c0 .85-.65 1.5-1.5 1.5H3V9h3.5c.85 0 1.5.65 1.5 1.5v3zm4.62 1.5h-1.5L9.37 9h1.5l1 3.43 1-3.43h1.5l-1.75 6zM21 11.5c0 .6-.4 1.15-.9 1.4L21 15h-1.5l-.85-2H17.5v2H16V9h3.5c.85 0 1.5.65 1.5 1.5v1z"}}]})(props);
	};
	module.exports.MdFiberManualRecord = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"fill":"#010101","cx":"12","cy":"12","r":"8"}}]})(props);
	};
	module.exports.MdFiberNew = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zM8.5 15H7.3l-2.55-3.5V15H3.5V9h1.25l2.5 3.5V9H8.5v6zm5-4.74H11v1.12h2.5v1.26H11v1.11h2.5V15h-4V9h4v1.26zm7 3.74c0 .55-.45 1-1 1h-4c-.55 0-1-.45-1-1V9h1.25v4.51h1.13V9.99h1.25v3.51h1.12V9h1.25v5z"}}]})(props);
	};
	module.exports.MdFiberPin = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5.5 10.5h2v1h-2zM20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zM9 11.5c0 .85-.65 1.5-1.5 1.5h-2v2H4V9h3.5c.85 0 1.5.65 1.5 1.5v1zm3.5 3.5H11V9h1.5v6zm7.5 0h-1.2l-2.55-3.5V15H15V9h1.25l2.5 3.5V9H20v6z"}}]})(props);
	};
	module.exports.MdFiberSmartRecord = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{"fill":"#010101"},"child":[{"tag":"circle","attr":{"cx":"9","cy":"12","r":"8"}},{"tag":"path","attr":{"d":"M17 4.26v2.09c2.33.82 4 3.04 4 5.65s-1.67 4.83-4 5.65v2.09c3.45-.89 6-4.01 6-7.74s-2.55-6.85-6-7.74z"}}]}]})(props);
	};
	module.exports.MdForward10 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 13c0 4.4 3.6 8 8 8s8-3.6 8-8h-2c0 3.3-2.7 6-6 6s-6-2.7-6-6 2.7-6 6-6v4l5-5-5-5v4c-4.4 0-8 3.6-8 8zm6.8 3H10v-3.3L9 13v-.7l1.8-.6h.1V16zm4.3-1.8c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1.3.2.5.3.2.3.3.6.1.5.1.8v.7zm-.8-.8v-.5s-.1-.2-.1-.3-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5z"}}]})(props);
	};
	module.exports.MdForward30 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9.6 13.5h.4c.2 0 .4-.1.5-.2s.2-.2.2-.4v-.2s-.1-.1-.1-.2-.1-.1-.2-.1h-.5s-.1.1-.2.1-.1.1-.1.2v.2h-1c0-.2 0-.3.1-.5s.2-.3.3-.4.3-.2.4-.2.4-.1.5-.1c.2 0 .4 0 .6.1s.3.1.5.2.2.2.3.4.1.3.1.5v.3s-.1.2-.1.3-.1.2-.2.2-.2.1-.3.2c.2.1.4.2.5.4s.2.4.2.6c0 .2 0 .4-.1.5s-.2.3-.3.4-.3.2-.5.2-.4.1-.6.1c-.2 0-.4 0-.5-.1s-.3-.1-.5-.2-.2-.2-.3-.4-.1-.4-.1-.6h.8v.2s.1.1.1.2.1.1.2.1h.5s.1-.1.2-.1.1-.1.1-.2v-.5s-.1-.1-.1-.2-.1-.1-.2-.1h-.6v-.7zm5.7.7c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1.3.2.5.3.2.3.3.6.1.5.1.8v.7zm-.9-.8v-.5s-.1-.2-.1-.3-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5zM4 13c0 4.4 3.6 8 8 8s8-3.6 8-8h-2c0 3.3-2.7 6-6 6s-6-2.7-6-6 2.7-6 6-6v4l5-5-5-5v4c-4.4 0-8 3.6-8 8z"}}]})(props);
	};
	module.exports.MdForward5 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 13c0 4.4 3.6 8 8 8s8-3.6 8-8h-2c0 3.3-2.7 6-6 6s-6-2.7-6-6 2.7-6 6-6v4l5-5-5-5v4c-4.4 0-8 3.6-8 8zm6.7.9l.2-2.2h2.4v.7h-1.7l-.1.9s.1 0 .1-.1.1 0 .1-.1.1 0 .2 0h.2c.2 0 .4 0 .5.1s.3.2.4.3.2.3.3.5.1.4.1.6c0 .2 0 .4-.1.5s-.1.3-.3.5-.3.2-.5.3-.4.1-.6.1c-.2 0-.4 0-.5-.1s-.3-.1-.5-.2-.2-.2-.3-.4-.1-.3-.1-.5h.8c0 .2.1.3.2.4s.2.1.4.1c.1 0 .2 0 .3-.1l.2-.2s.1-.2.1-.3v-.6l-.1-.2-.2-.2s-.2-.1-.3-.1h-.2s-.1 0-.2.1-.1 0-.1.1-.1.1-.1.1h-.6z"}}]})(props);
	};
	module.exports.MdGames = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 7.5V2H9v5.5l3 3 3-3zM7.5 9H2v6h5.5l3-3-3-3zM9 16.5V22h6v-5.5l-3-3-3 3zM16.5 9l-3 3 3 3H22V9h-5.5z"}}]})(props);
	};
	module.exports.MdHd = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-8 12H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm2-6h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1h-4V9zm1.5 4.5h2v-3h-2v3z"}}]})(props);
	};
	module.exports.MdHearing = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 20c-.29 0-.56-.06-.76-.15-.71-.37-1.21-.88-1.71-2.38-.51-1.56-1.47-2.29-2.39-3-.79-.61-1.61-1.24-2.32-2.53C9.29 10.98 9 9.93 9 9c0-2.8 2.2-5 5-5s5 2.2 5 5h2c0-3.93-3.07-7-7-7S7 5.07 7 9c0 1.26.38 2.65 1.07 3.9.91 1.65 1.98 2.48 2.85 3.15.81.62 1.39 1.07 1.71 2.05.6 1.82 1.37 2.84 2.73 3.55.51.23 1.07.35 1.64.35 2.21 0 4-1.79 4-4h-2c0 1.1-.9 2-2 2zM7.64 2.64L6.22 1.22C4.23 3.21 3 5.96 3 9s1.23 5.79 3.22 7.78l1.41-1.41C6.01 13.74 5 11.49 5 9s1.01-4.74 2.64-6.36zM11.5 9c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5-1.12-2.5-2.5-2.5-2.5 1.12-2.5 2.5z"}}]})(props);
	};
	module.exports.MdHighQuality = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 11H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm7-1c0 .55-.45 1-1 1h-.75v1.5h-1.5V15H14c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v4zm-3.5-.5h2v-3h-2v3z"}}]})(props);
	};
	module.exports.MdLibraryAdd = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9h-4v4h-2v-4H9V9h4V5h2v4h4v2z"}}]})(props);
	};
	module.exports.MdLibraryBooks = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9H9V9h10v2zm-4 4H9v-2h6v2zm4-8H9V5h10v2z"}}]})(props);
	};
	module.exports.MdLibraryMusic = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 5h-3v5.5c0 1.38-1.12 2.5-2.5 2.5S10 13.88 10 12.5s1.12-2.5 2.5-2.5c.57 0 1.08.19 1.5.51V5h4v2zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6z"}}]})(props);
	};
	module.exports.MdLoop = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z"}}]})(props);
	};
	module.exports.MdMic = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z"}}]})(props);
	};
	module.exports.MdMicNone = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1.2-9.1c0-.66.54-1.2 1.2-1.2.66 0 1.2.54 1.2 1.2l-.01 6.2c0 .66-.53 1.2-1.19 1.2-.66 0-1.2-.54-1.2-1.2V4.9zm6.5 6.1c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z"}}]})(props);
	};
	module.exports.MdMicOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 11h-1.7c0 .74-.16 1.43-.43 2.05l1.23 1.23c.56-.98.9-2.09.9-3.28zm-4.02.17c0-.06.02-.11.02-.17V5c0-1.66-1.34-3-3-3S9 3.34 9 5v.18l5.98 5.99zM4.27 3L3 4.27l6.01 6.01V11c0 1.66 1.33 3 2.99 3 .22 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.54-.9L19.73 21 21 19.73 4.27 3z"}}]})(props);
	};
	module.exports.MdMovie = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 4l2 4h-3l-2-4h-2l2 4h-3l-2-4H8l2 4H7L5 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4h-4z"}}]})(props);
	};
	module.exports.MdMusicVideo = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3V5h18v14zM8 15c0-1.66 1.34-3 3-3 .35 0 .69.07 1 .18V6h5v2h-3v7.03c-.02 1.64-1.35 2.97-3 2.97-1.66 0-3-1.34-3-3z"}}]})(props);
	};
	module.exports.MdNewReleases = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M23 12l-2.44-2.78.34-3.68-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68L23 12zm-10 5h-2v-2h2v2zm0-4h-2V7h2v6z"}}]})(props);
	};
	module.exports.MdNotInterested = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z"}}]})(props);
	};
	module.exports.MdNote = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 10l-6-6H4c-1.1 0-2 .9-2 2v12.01c0 1.1.9 1.99 2 1.99l16-.01c1.1 0 2-.89 2-1.99v-8zm-7-4.5l5.5 5.5H15V5.5z"}}]})(props);
	};
	module.exports.MdPause = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 19h4V5H6v14zm8-14v14h4V5h-4z"}}]})(props);
	};
	module.exports.MdPauseCircleFilled = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 14H9V8h2v8zm4 0h-2V8h2v8z"}}]})(props);
	};
	module.exports.MdPauseCircleOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 16h2V8H9v8zm3-14C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm1-4h2V8h-2v8z"}}]})(props);
	};
	module.exports.MdPlayArrow = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8 5v14l11-7z"}}]})(props);
	};
	module.exports.MdPlayCircleFilled = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z"}}]})(props);
	};
	module.exports.MdPlayCircleOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"}}]})(props);
	};
	module.exports.MdPlaylistAdd = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"}}]})(props);
	};
	module.exports.MdPlaylistAddCheck = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 10H2v2h12v-2zm0-4H2v2h12V6zM2 16h8v-2H2v2zm19.5-4.5L23 13l-6.99 7-4.51-4.5L13 14l3.01 3 5.49-5.5z"}}]})(props);
	};
	module.exports.MdPlaylistPlay = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 9H2v2h17V9zm0-4H2v2h17V5zM2 15h13v-2H2v2zm15-2v6l5-3-5-3z"}}]})(props);
	};
	module.exports.MdQueue = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9h-4v4h-2v-4H9V9h4V5h2v4h4v2z"}}]})(props);
	};
	module.exports.MdQueueMusic = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 6H3v2h12V6zm0 4H3v2h12v-2zM3 16h8v-2H3v2zM17 6v8.18c-.31-.11-.65-.18-1-.18-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3V8h3V6h-5z"}}]})(props);
	};
	module.exports.MdQueuePlayNext = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.11 0-2 .89-2 2v12c0 1.1.89 2 2 2h5v2h8v-2h2v-2H3V5h18v8h2V5c0-1.11-.9-2-2-2zm-8 7V7h-2v3H8v2h3v3h2v-3h3v-2h-3zm11 8l-4.5 4.5L18 21l3-3-3-3 1.5-1.5L24 18z"}}]})(props);
	};
	module.exports.MdRadio = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3.24 6.15C2.51 6.43 2 7.17 2 8v12c0 1.1.89 2 2 2h16c1.11 0 2-.9 2-2V8c0-1.11-.89-2-2-2H8.3l8.26-3.34L15.88 1 3.24 6.15zM7 20c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm13-8h-2v-2h-2v2H4V8h16v4z"}}]})(props);
	};
	module.exports.MdRecentActors = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 5v14h2V5h-2zm-4 14h2V5h-2v14zM14 5H2c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zM8 7.75c1.24 0 2.25 1.01 2.25 2.25S9.24 12.25 8 12.25 5.75 11.24 5.75 10 6.76 7.75 8 7.75zM12.5 17h-9v-.75c0-1.5 3-2.25 4.5-2.25s4.5.75 4.5 2.25V17z"}}]})(props);
	};
	module.exports.MdRemoveFromQueue = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.11 0-2 .89-2 2v12c0 1.1.89 2 2 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5c0-1.11-.9-2-2-2zm0 14H3V5h18v12zm-5-7v2H8v-2h8z"}}]})(props);
	};
	module.exports.MdRepeat = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4z"}}]})(props);
	};
	module.exports.MdRepeatOne = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4zm-4-2V9h-1l-2 1v1h1.5v4H13z"}}]})(props);
	};
	module.exports.MdReplay10 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 5V1L7 6l5 5V7c3.3 0 6 2.7 6 6s-2.7 6-6 6-6-2.7-6-6H4c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8zm-1.1 11H10v-3.3L9 13v-.7l1.8-.6h.1V16zm4.3-1.8c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1c.2.1.3.2.5.3s.2.3.3.6.1.5.1.8v.7zm-.9-.8v-.5s-.1-.2-.1-.3-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5z"}}]})(props);
	};
	module.exports.MdReplay = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z"}}]})(props);
	};
	module.exports.MdReplay30 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 5V1L7 6l5 5V7c3.3 0 6 2.7 6 6s-2.7 6-6 6-6-2.7-6-6H4c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8zm-2.4 8.5h.4c.2 0 .4-.1.5-.2s.2-.2.2-.4v-.2s-.1-.1-.1-.2-.1-.1-.2-.1h-.5s-.1.1-.2.1-.1.1-.1.2v.2h-1c0-.2 0-.3.1-.5s.2-.3.3-.4.3-.2.4-.2.4-.1.5-.1c.2 0 .4 0 .6.1s.3.1.5.2.2.2.3.4.1.3.1.5v.3s-.1.2-.1.3-.1.2-.2.2-.2.1-.3.2c.2.1.4.2.5.4s.2.4.2.6c0 .2 0 .4-.1.5s-.2.3-.3.4-.3.2-.5.2-.4.1-.6.1c-.2 0-.4 0-.5-.1s-.3-.1-.5-.2-.2-.2-.3-.4-.1-.4-.1-.6h.8v.2s.1.1.1.2.1.1.2.1h.5s.1-.1.2-.1.1-.1.1-.2v-.5s-.1-.1-.1-.2-.1-.1-.2-.1h-.6v-.7zm5.7.7c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1.3.2.5.3.2.3.3.6.1.5.1.8v.7zm-.8-.8v-.5c0-.1-.1-.2-.1-.3s-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5z"}}]})(props);
	};
	module.exports.MdReplay5 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 5V1L7 6l5 5V7c3.3 0 6 2.7 6 6s-2.7 6-6 6-6-2.7-6-6H4c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8zm-1.3 8.9l.2-2.2h2.4v.7h-1.7l-.1.9s.1 0 .1-.1.1 0 .1-.1.1 0 .2 0h.2c.2 0 .4 0 .5.1s.3.2.4.3.2.3.3.5.1.4.1.6c0 .2 0 .4-.1.5s-.1.3-.3.5-.3.2-.4.3-.4.1-.6.1c-.2 0-.4 0-.5-.1s-.3-.1-.5-.2-.2-.2-.3-.4-.1-.3-.1-.5h.8c0 .2.1.3.2.4s.2.1.4.1c.1 0 .2 0 .3-.1l.2-.2s.1-.2.1-.3v-.6l-.1-.2-.2-.2s-.2-.1-.3-.1h-.2s-.1 0-.2.1-.1 0-.1.1-.1.1-.1.1h-.7z"}}]})(props);
	};
	module.exports.MdShuffle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10.59 9.17L5.41 4 4 5.41l5.17 5.17 1.42-1.41zM14.5 4l2.04 2.04L4 18.59 5.41 20 17.96 7.46 20 9.5V4h-5.5zm.33 9.41l-1.41 1.41 3.13 3.13L14.5 20H20v-5.5l-2.04 2.04-3.13-3.13z"}}]})(props);
	};
	module.exports.MdSkipNext = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z"}}]})(props);
	};
	module.exports.MdSkipPrevious = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 6h2v12H6zm3.5 6l8.5 6V6z"}}]})(props);
	};
	module.exports.MdSlowMotionVideo = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13.05 9.79L10 7.5v9l3.05-2.29L16 12zm0 0L10 7.5v9l3.05-2.29L16 12zm0 0L10 7.5v9l3.05-2.29L16 12zM11 4.07V2.05c-2.01.2-3.84 1-5.32 2.21L7.1 5.69c1.11-.86 2.44-1.44 3.9-1.62zM5.69 7.1L4.26 5.68C3.05 7.16 2.25 8.99 2.05 11h2.02c.18-1.46.76-2.79 1.62-3.9zM4.07 13H2.05c.2 2.01 1 3.84 2.21 5.32l1.43-1.43c-.86-1.1-1.44-2.43-1.62-3.89zm1.61 6.74C7.16 20.95 9 21.75 11 21.95v-2.02c-1.46-.18-2.79-.76-3.9-1.62l-1.42 1.43zM22 12c0 5.16-3.92 9.42-8.95 9.95v-2.02C16.97 19.41 20 16.05 20 12s-3.03-7.41-6.95-7.93V2.05C18.08 2.58 22 6.84 22 12z"}}]})(props);
	};
	module.exports.MdSnooze = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-3-9h3.63L9 15.2V17h6v-2h-3.63L15 10.8V9H9v2z"}}]})(props);
	};
	module.exports.MdSortByAlpha = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14.94 4.66h-4.72l2.36-2.36zm-4.69 14.71h4.66l-2.33 2.33zM6.1 6.27L1.6 17.73h1.84l.92-2.45h5.11l.92 2.45h1.84L7.74 6.27H6.1zm-1.13 7.37l1.94-5.18 1.94 5.18H4.97zm10.76 2.5h6.12v1.59h-8.53v-1.29l5.92-8.56h-5.88v-1.6h8.3v1.26l-5.93 8.6z"}}]})(props);
	};
	module.exports.MdStop = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 6h12v12H6z"}}]})(props);
	};
	module.exports.MdSubscriptions = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 8H4V6h16v2zm-2-6H6v2h12V2zm4 10v8c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2v-8c0-1.1.9-2 2-2h16c1.1 0 2 .9 2 2zm-6 4l-6-3.27v6.53L16 16z"}}]})(props);
	};
	module.exports.MdSubtitles = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM4 12h4v2H4v-2zm10 6H4v-2h10v2zm6 0h-4v-2h4v2zm0-4H10v-2h10v2z"}}]})(props);
	};
	module.exports.MdSurroundSound = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM7.76 16.24l-1.41 1.41C4.78 16.1 4 14.05 4 12c0-2.05.78-4.1 2.34-5.66l1.41 1.41C6.59 8.93 6 10.46 6 12s.59 3.07 1.76 4.24zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm5.66 1.66l-1.41-1.41C17.41 15.07 18 13.54 18 12s-.59-3.07-1.76-4.24l1.41-1.41C19.22 7.9 20 9.95 20 12c0 2.05-.78 4.1-2.34 5.66zM12 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdVideoCall = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4zM14 13h-3v3H9v-3H6v-2h3V8h2v3h3v2z"}}]})(props);
	};
	module.exports.MdVideoLabel = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 13H3V5h18v11z"}}]})(props);
	};
	module.exports.MdVideoLibrary = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8 12.5v-9l6 4.5-6 4.5z"}}]})(props);
	};
	module.exports.MdVideocam = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z"}}]})(props);
	};
	module.exports.MdVideocamOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 6.5l-4 4V7c0-.55-.45-1-1-1H9.82L21 17.18V6.5zM3.27 2L2 3.27 4.73 6H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.21 0 .39-.08.54-.18L19.73 21 21 19.73 3.27 2z"}}]})(props);
	};
	module.exports.MdVolumeDown = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.5 12c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM5 9v6h4l5 5V4L9 9H5z"}}]})(props);
	};
	module.exports.MdVolumeMute = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 9v6h4l5 5V4l-5 5H7z"}}]})(props);
	};
	module.exports.MdVolumeOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z"}}]})(props);
	};
	module.exports.MdVolumeUp = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"}}]})(props);
	};
	module.exports.MdWeb = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-5 14H4v-4h11v4zm0-5H4V9h11v4zm5 5h-4V9h4v9z"}}]})(props);
	};
	module.exports.MdWebAsset = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"#010101","d":"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.89-2-2-2zm0 14H5V8h14v10z"}}]})(props);
	};
	module.exports.MdBusiness = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z"}}]})(props);
	};
	module.exports.MdCall = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z"}}]})(props);
	};
	module.exports.MdCallEnd = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 9c-1.6 0-3.15.25-4.6.72v3.1c0 .39-.23.74-.56.9-.98.49-1.87 1.12-2.66 1.85-.18.18-.43.28-.7.28-.28 0-.53-.11-.71-.29L.29 13.08c-.18-.17-.29-.42-.29-.7 0-.28.11-.53.29-.71C3.34 8.78 7.46 7 12 7s8.66 1.78 11.71 4.67c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-2.48 2.48c-.18.18-.43.29-.71.29-.27 0-.52-.11-.7-.28-.79-.74-1.69-1.36-2.67-1.85-.33-.16-.56-.5-.56-.9v-3.1C15.15 9.25 13.6 9 12 9z"}}]})(props);
	};
	module.exports.MdCallMade = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 5v2h6.59L4 18.59 5.41 20 17 8.41V15h2V5z"}}]})(props);
	};
	module.exports.MdCallMerge = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 20.41L18.41 19 15 15.59 13.59 17 17 20.41zM7.5 8H11v5.59L5.59 19 7 20.41l6-6V8h3.5L12 3.5 7.5 8z"}}]})(props);
	};
	module.exports.MdCallMissed = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.59 7L12 14.59 6.41 9H11V7H3v8h2v-4.59l7 7 9-9z"}}]})(props);
	};
	module.exports.MdCallMissedOutgoing = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 8.41l9 9 7-7V15h2V7h-8v2h4.59L12 14.59 4.41 7 3 8.41z"}}]})(props);
	};
	module.exports.MdCallReceived = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 5.41L18.59 4 7 15.59V9H5v10h10v-2H8.41z"}}]})(props);
	};
	module.exports.MdCallSplit = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 4l2.29 2.29-2.88 2.88 1.42 1.42 2.88-2.88L20 10V4zm-4 0H4v6l2.29-2.29 4.71 4.7V20h2v-8.41l-5.29-5.3z"}}]})(props);
	};
	module.exports.MdChat = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 9h12v2H6V9zm8 5H6v-2h8v2zm4-6H6V6h12v2z"}}]})(props);
	};
	module.exports.MdChatBubble = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdChatBubbleOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H6l-2 2V4h16v12z"}}]})(props);
	};
	module.exports.MdClearAll = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 13h14v-2H5v2zm-2 4h14v-2H3v2zM7 7v2h14V7H7z"}}]})(props);
	};
	module.exports.MdComment = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.99 4c0-1.1-.89-2-1.99-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4-.01-18zM18 14H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"}}]})(props);
	};
	module.exports.MdContactMail = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 8V7l-3 2-3-2v1l3 2 3-2zm1-5H2C.9 3 0 3.9 0 5v14c0 1.1.9 2 2 2h20c1.1 0 1.99-.9 1.99-2L24 5c0-1.1-.9-2-2-2zM8 6c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H2v-1c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1zm8-6h-8V6h8v6z"}}]})(props);
	};
	module.exports.MdContactPhone = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 3H2C.9 3 0 3.9 0 5v14c0 1.1.9 2 2 2h20c1.1 0 1.99-.9 1.99-2L24 5c0-1.1-.9-2-2-2zM8 6c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H2v-1c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1zm3.85-4h1.64L21 16l-1.99 1.99c-1.31-.98-2.28-2.38-2.73-3.99-.18-.64-.28-1.31-.28-2s.1-1.36.28-2c.45-1.62 1.42-3.01 2.73-3.99L21 8l-1.51 2h-1.64c-.22.63-.35 1.3-.35 2s.13 1.37.35 2z"}}]})(props);
	};
	module.exports.MdContacts = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 0H4v2h16V0zM4 24h16v-2H4v2zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 2.75c1.24 0 2.25 1.01 2.25 2.25s-1.01 2.25-2.25 2.25S9.75 10.24 9.75 9 10.76 6.75 12 6.75zM17 17H7v-1.5c0-1.67 3.33-2.5 5-2.5s5 .83 5 2.5V17z"}}]})(props);
	};
	module.exports.MdDialerSip = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 3h-1v5h1V3zm-2 2h-2V4h2V3h-3v3h2v1h-2v1h3V5zm3-2v5h1V6h2V3h-3zm2 2h-1V4h1v1zm0 10.5c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.01.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.59l2.2-2.21c.27-.26.35-.65.24-1C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1z"}}]})(props);
	};
	module.exports.MdDialpad = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 19c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM6 1c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12-8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-6 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdEmail = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"}}]})(props);
	};
	module.exports.MdForum = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 6h-2v9H6v2c0 .55.45 1 1 1h11l4 4V7c0-.55-.45-1-1-1zm-4 6V3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v14l4-4h10c.55 0 1-.45 1-1z"}}]})(props);
	};
	module.exports.MdImportContacts = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 5c-1.11-.35-2.33-.5-3.5-.5-1.95 0-4.05.4-5.5 1.5-1.45-1.1-3.55-1.5-5.5-1.5S2.45 4.9 1 6v14.65c0 .25.25.5.5.5.1 0 .15-.05.25-.05C3.1 20.45 5.05 20 6.5 20c1.95 0 4.05.4 5.5 1.5 1.35-.85 3.8-1.5 5.5-1.5 1.65 0 3.35.3 4.75 1.05.1.05.15.05.25.05.25 0 .5-.25.5-.5V6c-.6-.45-1.25-.75-2-1zm0 13.5c-1.1-.35-2.3-.5-3.5-.5-1.7 0-4.15.65-5.5 1.5V8c1.35-.85 3.8-1.5 5.5-1.5 1.2 0 2.4.15 3.5.5v11.5z"}}]})(props);
	};
	module.exports.MdImportExport = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 3L5 6.99h3V14h2V6.99h3L9 3zm7 14.01V10h-2v7.01h-3L15 21l4-3.99h-3z"}}]})(props);
	};
	module.exports.MdInvertColorsOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.65 20.87l-2.35-2.35-6.3-6.29-3.56-3.57-1.42-1.41L4.27 4.5 3 5.77l2.78 2.78c-2.55 3.14-2.36 7.76.56 10.69C7.9 20.8 9.95 21.58 12 21.58c1.79 0 3.57-.59 5.03-1.78l2.7 2.7L21 21.23l-.35-.36zM12 19.59c-1.6 0-3.11-.62-4.24-1.76C6.62 16.69 6 15.19 6 13.59c0-1.32.43-2.57 1.21-3.6L12 14.77v4.82zM12 5.1v4.58l7.25 7.26c1.37-2.96.84-6.57-1.6-9.01L12 2.27l-3.7 3.7 1.41 1.41L12 5.1z"}}]})(props);
	};
	module.exports.MdLiveHelp = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 2H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h4l3 3 3-3h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-6 16h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 11.9 13 12.5 13 14h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z"}}]})(props);
	};
	module.exports.MdLocationOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 6.5c1.38 0 2.5 1.12 2.5 2.5 0 .74-.33 1.39-.83 1.85l3.63 3.63c.98-1.86 1.7-3.8 1.7-5.48 0-3.87-3.13-7-7-7-1.98 0-3.76.83-5.04 2.15l3.19 3.19c.46-.52 1.11-.84 1.85-.84zm4.37 9.6l-4.63-4.63-.11-.11L3.27 3 2 4.27l3.18 3.18C5.07 7.95 5 8.47 5 9c0 5.25 7 13 7 13s1.67-1.85 3.38-4.35L18.73 21 20 19.73l-3.63-3.63z"}}]})(props);
	};
	module.exports.MdLocationOn = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"}}]})(props);
	};
	module.exports.MdMailOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z"}}]})(props);
	};
	module.exports.MdMessage = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"}}]})(props);
	};
	module.exports.MdNoSim = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.99 5c0-1.1-.89-2-1.99-2h-7L7.66 5.34 19 16.68 18.99 5zM3.65 3.88L2.38 5.15 5 7.77V19c0 1.1.9 2 2 2h10.01c.35 0 .67-.1.96-.26l1.88 1.88 1.27-1.27L3.65 3.88z"}}]})(props);
	};
	module.exports.MdPhone = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z"}}]})(props);
	};
	module.exports.MdPhonelinkErase = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 8.2l-1-1-4 4-4-4-1 1 4 4-4 4 1 1 4-4 4 4 1-1-4-4 4-4zM19 1H9c-1.1 0-2 .9-2 2v3h2V4h10v16H9v-2H7v3c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdPhonelinkLock = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 1H9c-1.1 0-2 .9-2 2v3h2V4h10v16H9v-2H7v3c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm-8.2 10V9.5C10.8 8.1 9.4 7 8 7S5.2 8.1 5.2 9.5V11c-.6 0-1.2.6-1.2 1.2v3.5c0 .7.6 1.3 1.2 1.3h5.5c.7 0 1.3-.6 1.3-1.2v-3.5c0-.7-.6-1.3-1.2-1.3zm-1.3 0h-3V9.5c0-.8.7-1.3 1.5-1.3s1.5.5 1.5 1.3V11z"}}]})(props);
	};
	module.exports.MdPhonelinkRing = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.1 7.7l-1 1c1.8 1.8 1.8 4.6 0 6.5l1 1c2.5-2.3 2.5-6.1 0-8.5zM18 9.8l-1 1c.5.7.5 1.6 0 2.3l1 1c1.2-1.2 1.2-3 0-4.3zM14 1H4c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 19H4V4h10v16z"}}]})(props);
	};
	module.exports.MdPhonelinkSetup = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.8 12.5v-1l1.1-.8c.1-.1.1-.2.1-.3l-1-1.7c-.1-.1-.2-.2-.3-.1l-1.3.4c-.3-.2-.6-.4-.9-.5l-.2-1.3c0-.1-.1-.2-.3-.2H7c-.1 0-.2.1-.3.2l-.2 1.3c-.3.1-.6.3-.9.5l-1.3-.5c-.1 0-.2 0-.3.1l-1 1.7c-.1.1 0 .2.1.3l1.1.8v1l-1.1.8c-.1.2-.1.3-.1.4l1 1.7c.1.1.2.2.3.1l1.4-.4c.3.2.6.4.9.5l.2 1.3c-.1.1.1.2.2.2h2c.1 0 .2-.1.3-.2l.2-1.3c.3-.1.6-.3.9-.5l1.3.5c.1 0 .2 0 .3-.1l1-1.7c.1-.1 0-.2-.1-.3l-1.1-.9zM8 14c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM19 1H9c-1.1 0-2 .9-2 2v3h2V4h10v16H9v-2H7v3c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdPortableWifiOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.56 14.24c.28-.69.44-1.45.44-2.24 0-3.31-2.69-6-6-6-.79 0-1.55.16-2.24.44l1.62 1.62c.2-.03.41-.06.62-.06 2.21 0 4 1.79 4 4 0 .21-.02.42-.05.63l1.61 1.61zM12 4c4.42 0 8 3.58 8 8 0 1.35-.35 2.62-.95 3.74l1.47 1.47C21.46 15.69 22 13.91 22 12c0-5.52-4.48-10-10-10-1.91 0-3.69.55-5.21 1.47l1.46 1.46C9.37 4.34 10.65 4 12 4zM3.27 2.5L2 3.77l2.1 2.1C2.79 7.57 2 9.69 2 12c0 3.7 2.01 6.92 4.99 8.65l1-1.73C5.61 17.53 4 14.96 4 12c0-1.76.57-3.38 1.53-4.69l1.43 1.44C6.36 9.68 6 10.8 6 12c0 2.22 1.21 4.15 3 5.19l1-1.74c-1.19-.7-2-1.97-2-3.45 0-.65.17-1.25.44-1.79l1.58 1.58L10 12c0 1.1.9 2 2 2l.21-.02.01.01 7.51 7.51L21 20.23 4.27 3.5l-1-1z"}}]})(props);
	};
	module.exports.MdPresentToAll = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.11 0-2 .89-2 2v14c0 1.11.89 2 2 2h18c1.11 0 2-.89 2-2V5c0-1.11-.89-2-2-2zm0 16.02H3V4.98h18v14.04zM10 12H8l4-4 4 4h-2v4h-4v-4z"}}]})(props);
	};
	module.exports.MdRingVolume = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M23.71 16.67C20.66 13.78 16.54 12 12 12 7.46 12 3.34 13.78.29 16.67c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l2.48 2.48c.18.18.43.29.71.29.27 0 .52-.11.7-.28.79-.74 1.69-1.36 2.66-1.85.33-.16.56-.5.56-.9v-3.1c1.45-.48 3-.73 4.6-.73s3.15.25 4.6.72v3.1c0 .39.23.74.56.9.98.49 1.87 1.12 2.66 1.85.18.18.43.28.7.28.28 0 .53-.11.71-.29l2.48-2.48c.18-.18.29-.43.29-.71 0-.27-.11-.52-.29-.7zM21.16 6.26l-1.41-1.41-3.56 3.55 1.41 1.41s3.45-3.52 3.56-3.55zM13 2h-2v5h2V2zM6.4 9.81L7.81 8.4 4.26 4.84 2.84 6.26c.11.03 3.56 3.55 3.56 3.55z"}}]})(props);
	};
	module.exports.MdRssFeed = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"6.18","cy":"17.82","r":"2.18"}},{"tag":"path","attr":{"d":"M4 4.44v2.83c7.03 0 12.73 5.7 12.73 12.73h2.83c0-8.59-6.97-15.56-15.56-15.56zm0 5.66v2.83c3.9 0 7.07 3.17 7.07 7.07h2.83c0-5.47-4.43-9.9-9.9-9.9z"}}]})(props);
	};
	module.exports.MdScreenShare = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.11-.9-2-2-2H4c-1.11 0-2 .89-2 2v10c0 1.1.89 2 2 2H0v2h24v-2h-4zm-7-3.53v-2.19c-2.78 0-4.61.85-6 2.72.56-2.67 2.11-5.33 6-5.87V7l4 3.73-4 3.74z"}}]})(props);
	};
	module.exports.MdSpeakerPhone = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 7.07L8.43 8.5c.91-.91 2.18-1.48 3.57-1.48s2.66.57 3.57 1.48L17 7.07C15.72 5.79 13.95 5 12 5s-3.72.79-5 2.07zM12 1C8.98 1 6.24 2.23 4.25 4.21l1.41 1.41C7.28 4 9.53 3 12 3s4.72 1 6.34 2.62l1.41-1.41C17.76 2.23 15.02 1 12 1zm2.86 9.01L9.14 10C8.51 10 8 10.51 8 11.14v9.71c0 .63.51 1.14 1.14 1.14h5.71c.63 0 1.14-.51 1.14-1.14v-9.71c.01-.63-.5-1.13-1.13-1.13zM15 20H9v-8h6v8z"}}]})(props);
	};
	module.exports.MdStayCurrentLandscape = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M1.01 7L1 17c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2H3c-1.1 0-1.99.9-1.99 2zM19 7v10H5V7h14z"}}]})(props);
	};
	module.exports.MdStayCurrentPortrait = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 1.01L7 1c-1.1 0-1.99.9-1.99 2v18c0 1.1.89 2 1.99 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM17 19H7V5h10v14z"}}]})(props);
	};
	module.exports.MdStayPrimaryLandscape = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M1.01 7L1 17c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2H3c-1.1 0-1.99.9-1.99 2zM19 7v10H5V7h14z"}}]})(props);
	};
	module.exports.MdStayPrimaryPortrait = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 1.01L7 1c-1.1 0-1.99.9-1.99 2v18c0 1.1.89 2 1.99 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM17 19H7V5h10v14z"}}]})(props);
	};
	module.exports.MdStopScreenShare = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.22 18.02l2 2H24v-2h-2.78zm.77-2l.01-10c0-1.11-.9-2-2-2H7.22l5.23 5.23c.18-.04.36-.07.55-.1V7.02l4 3.73-1.58 1.47 5.54 5.54c.61-.33 1.03-.99 1.03-1.74zM2.39 1.73L1.11 3l1.54 1.54c-.4.36-.65.89-.65 1.48v10c0 1.1.89 2 2 2H0v2h18.13l2.71 2.71 1.27-1.27L2.39 1.73zM7 15.02c.31-1.48.92-2.95 2.07-4.06l1.59 1.59c-1.54.38-2.7 1.18-3.66 2.47z"}}]})(props);
	};
	module.exports.MdSwapCalls = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 4l-4 4h3v7c0 1.1-.9 2-2 2s-2-.9-2-2V8c0-2.21-1.79-4-4-4S5 5.79 5 8v7H2l4 4 4-4H7V8c0-1.1.9-2 2-2s2 .9 2 2v7c0 2.21 1.79 4 4 4s4-1.79 4-4V8h3l-4-4z"}}]})(props);
	};
	module.exports.MdTextsms = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM9 11H7V9h2v2zm4 0h-2V9h2v2zm4 0h-2V9h2v2z"}}]})(props);
	};
	module.exports.MdVoicemail = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.5 6C15.46 6 13 8.46 13 11.5c0 1.33.47 2.55 1.26 3.5H9.74c.79-.95 1.26-2.17 1.26-3.5C11 8.46 8.54 6 5.5 6S0 8.46 0 11.5 2.46 17 5.5 17h13c3.04 0 5.5-2.46 5.5-5.5S21.54 6 18.5 6zm-13 9C3.57 15 2 13.43 2 11.5S3.57 8 5.5 8 9 9.57 9 11.5 7.43 15 5.5 15zm13 0c-1.93 0-3.5-1.57-3.5-3.5S16.57 8 18.5 8 22 9.57 22 11.5 20.43 15 18.5 15z"}}]})(props);
	};
	module.exports.MdVpnKey = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12.65 10C11.83 7.67 9.61 6 7 6c-3.31 0-6 2.69-6 6s2.69 6 6 6c2.61 0 4.83-1.67 5.65-4H17v4h4v-4h2v-4H12.65zM7 14c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"}}]})(props);
	};
	module.exports.MdAdd = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"}}]})(props);
	};
	module.exports.MdAddBox = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z"}}]})(props);
	};
	module.exports.MdAddCircle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z"}}]})(props);
	};
	module.exports.MdAddCircleOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"}}]})(props);
	};
	module.exports.MdArchive = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM12 17.5L6.5 12H10v-2h4v2h3.5L12 17.5zM5.12 5l.81-1h12l.94 1H5.12z"}}]})(props);
	};
	module.exports.MdBackspace = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"}}]})(props);
	};
	module.exports.MdBlock = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z"}}]})(props);
	};
	module.exports.MdClear = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"}}]})(props);
	};
	module.exports.MdContentCopy = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z"}}]})(props);
	};
	module.exports.MdContentCut = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9.64 7.64c.23-.5.36-1.05.36-1.64 0-2.21-1.79-4-4-4S2 3.79 2 6s1.79 4 4 4c.59 0 1.14-.13 1.64-.36L10 12l-2.36 2.36C7.14 14.13 6.59 14 6 14c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4c0-.59-.13-1.14-.36-1.64L12 14l7 7h3v-1L9.64 7.64zM6 8c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm0 12c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm6-7.5c-.28 0-.5-.22-.5-.5s.22-.5.5-.5.5.22.5.5-.22.5-.5.5zM19 3l-6 6 2 2 7-7V3z"}}]})(props);
	};
	module.exports.MdContentPaste = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 2h-4.18C14.4.84 13.3 0 12 0c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 18H5V4h2v3h10V4h2v16z"}}]})(props);
	};
	module.exports.MdCreate = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"}}]})(props);
	};
	module.exports.MdDeleteSweep = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 16h4v2h-4zm0-8h7v2h-7zm0 4h6v2h-6zM3 18c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V8H3v10zM14 5h-3l-1-1H6L5 5H2v2h12z"}}]})(props);
	};
	module.exports.MdDrafts = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.99 8c0-.72-.37-1.35-.94-1.7L12 1 2.95 6.3C2.38 6.65 2 7.28 2 8v10c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2l-.01-10zM12 13L3.74 7.84 12 3l8.26 4.84L12 13z"}}]})(props);
	};
	module.exports.MdFilterList = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"}}]})(props);
	};
	module.exports.MdFlag = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14.4 6L14 4H5v17h2v-7h5.6l.4 2h7V6z"}}]})(props);
	};
	module.exports.MdFontDownload = function (props) {
	  return GenIcon({"tag":"svg","attr":{"baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9.93 13.5h4.14L12 7.98zM20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-4.05 16.5l-1.14-3H9.17l-1.12 3H5.96l5.11-13h1.86l5.11 13h-2.09z"}}]})(props);
	};
	module.exports.MdForward = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 8V4l8 8-8 8v-4H4V8z"}}]})(props);
	};
	module.exports.MdGesture = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4.59 6.89c.7-.71 1.4-1.35 1.71-1.22.5.2 0 1.03-.3 1.52-.25.42-2.86 3.89-2.86 6.31 0 1.28.48 2.34 1.34 2.98.75.56 1.74.73 2.64.46 1.07-.31 1.95-1.4 3.06-2.77 1.21-1.49 2.83-3.44 4.08-3.44 1.63 0 1.65 1.01 1.76 1.79-3.78.64-5.38 3.67-5.38 5.37 0 1.7 1.44 3.09 3.21 3.09 1.63 0 4.29-1.33 4.69-6.1H21v-2.5h-2.47c-.15-1.65-1.09-4.2-4.03-4.2-2.25 0-4.18 1.91-4.94 2.84-.58.73-2.06 2.48-2.29 2.72-.25.3-.68.84-1.11.84-.45 0-.72-.83-.36-1.92.35-1.09 1.4-2.86 1.85-3.52.78-1.14 1.3-1.92 1.3-3.28C8.95 3.69 7.31 3 6.44 3 5.12 3 3.97 4 3.72 4.25c-.36.36-.66.66-.88.93l1.75 1.71zm9.29 11.66c-.31 0-.74-.26-.74-.72 0-.6.73-2.2 2.87-2.76-.3 2.69-1.43 3.48-2.13 3.48z"}}]})(props);
	};
	module.exports.MdInbox = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H4.99c-1.11 0-1.98.89-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.11-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10z"}}]})(props);
	};
	module.exports.MdLink = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"}}]})(props);
	};
	module.exports.MdLowPriority = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 5h8v2h-8zm0 5.5h8v2h-8zm0 5.5h8v2h-8zM2 11.5C2 15.08 4.92 18 8.5 18H9v2l3-3-3-3v2h-.5C6.02 16 4 13.98 4 11.5S6.02 7 8.5 7H12V5H8.5C4.92 5 2 7.92 2 11.5z"}}]})(props);
	};
	module.exports.MdMail = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"}}]})(props);
	};
	module.exports.MdMarkunread = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"}}]})(props);
	};
	module.exports.MdMoveToInbox = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H4.99c-1.11 0-1.98.9-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10zm-3-5h-2V7h-4v3H8l4 4 4-4z"}}]})(props);
	};
	module.exports.MdNextWeek = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"#010101","d":"M20 7h-4V5c0-.55-.22-1.05-.59-1.41C15.05 3.22 14.55 3 14 3h-4c-1.1 0-2 .9-2 2v2H4c-1.1 0-2 .9-2 2v11c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zM10 5h4v2h-4V5zm1 13.5l-1-1 3-3-3-3 1-1 4 4-4 4z"}}]})(props);
	};
	module.exports.MdRedo = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.65 0-8.58 3.03-9.96 7.22L3.9 16c1.05-3.19 4.05-5.5 7.6-5.5 1.95 0 3.73.72 5.12 1.88L13 16h9V7l-3.6 3.6z"}}]})(props);
	};
	module.exports.MdRemove = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 13H5v-2h14v2z"}}]})(props);
	};
	module.exports.MdRemoveCircle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z"}}]})(props);
	};
	module.exports.MdRemoveCircleOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"}}]})(props);
	};
	module.exports.MdReply = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"}}]})(props);
	};
	module.exports.MdReplyAll = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 8V5l-7 7 7 7v-3l-4-4 4-4zm6 1V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"}}]})(props);
	};
	module.exports.MdReport = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.73 3H8.27L3 8.27v7.46L8.27 21h7.46L21 15.73V8.27L15.73 3zM12 17.3c-.72 0-1.3-.58-1.3-1.3 0-.72.58-1.3 1.3-1.3.72 0 1.3.58 1.3 1.3 0 .72-.58 1.3-1.3 1.3zm1-4.3h-2V7h2v6z"}}]})(props);
	};
	module.exports.MdSave = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"}}]})(props);
	};
	module.exports.MdSelectAll = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2zM7 17h10V7H7v10zm2-8h6v6H9V9z"}}]})(props);
	};
	module.exports.MdSend = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"}}]})(props);
	};
	module.exports.MdSort = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z"}}]})(props);
	};
	module.exports.MdTextFormat = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 17v2h14v-2H5zm4.5-4.2h5l.9 2.2h2.1L12.75 4h-1.5L6.5 15h2.1l.9-2.2zM12 5.98L13.87 11h-3.74L12 5.98z"}}]})(props);
	};
	module.exports.MdUnarchive = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.55 5.22l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.15.55L3.46 5.22C3.17 5.57 3 6.01 3 6.5V19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.49-.17-.93-.45-1.28zM12 9.5l5.5 5.5H14v2h-4v-2H6.5L12 9.5zM5.12 5l.82-1h12l.93 1H5.12z"}}]})(props);
	};
	module.exports.MdUndo = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z"}}]})(props);
	};
	module.exports.MdWeekend = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 10c-1.1 0-2 .9-2 2v3H5v-3c0-1.1-.9-2-2-2s-2 .9-2 2v5c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2v-5c0-1.1-.9-2-2-2zm-3-5H6c-1.1 0-2 .9-2 2v2.15c1.16.41 2 1.51 2 2.82V14h12v-2.03c0-1.3.84-2.4 2-2.82V7c0-1.1-.9-2-2-2z","fill":"#010101"}}]})(props);
	};
	module.exports.MdAccessAlarm = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"}}]})(props);
	};
	module.exports.MdAccessAlarms = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 5.7l-4.6-3.9-1.3 1.5 4.6 3.9L22 5.7zM7.9 3.4L6.6 1.9 2 5.7l1.3 1.5 4.6-3.8zM12.5 8H11v6l4.7 2.9.8-1.2-4-2.4V8zM12 4c-5 0-9 4-9 9s4 9 9 9 9-4 9-9-4-9-9-9zm0 16c-3.9 0-7-3.1-7-7s3.1-7 7-7 7 3.1 7 7-3.1 7-7 7z"}}]})(props);
	};
	module.exports.MdAccessTime = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z"}}]})(props);
	};
	module.exports.MdAddAlarm = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm1-11h-2v3H8v2h3v3h2v-3h3v-2h-3V9z"}}]})(props);
	};
	module.exports.MdAirplanemodeActive = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10.18 9"}},{"tag":"path","attr":{"d":"M21 16v-2l-8-5V3.5c0-.83-.67-1.5-1.5-1.5S10 2.67 10 3.5V9l-8 5v2l8-2.5V19l-2 1.5V22l3.5-1 3.5 1v-1.5L13 19v-5.5l8 2.5z"}}]})(props);
	};
	module.exports.MdAirplanemodeInactive = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 9V3.5c0-.83-.67-1.5-1.5-1.5S10 2.67 10 3.5v3.68l7.83 7.83L21 16v-2l-8-5zM3 5.27l4.99 4.99L2 14v2l8-2.5V19l-2 1.5V22l3.5-1 3.5 1v-1.5L13 19v-3.73L18.73 21 20 19.73 4.27 4 3 5.27z"}}]})(props);
	};
	module.exports.MdBattery20 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 17v3.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V17H7z"}},{"tag":"path","attr":{"fillOpacity":".3","d":"M17 5.33C17 4.6 16.4 4 15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V17h10V5.33z"}}]})(props);
	};
	module.exports.MdBattery30 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M17 5.33C17 4.6 16.4 4 15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V15h10V5.33z"}},{"tag":"path","attr":{"d":"M7 15v5.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V15H7z"}}]})(props);
	};
	module.exports.MdBattery50 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M17 5.33C17 4.6 16.4 4 15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V13h10V5.33z"}},{"tag":"path","attr":{"d":"M7 13v7.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V13H7z"}}]})(props);
	};
	module.exports.MdBattery60 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M17 5.33C17 4.6 16.4 4 15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V11h10V5.33z"}},{"tag":"path","attr":{"d":"M7 11v9.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V11H7z"}}]})(props);
	};
	module.exports.MdBattery80 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M17 5.33C17 4.6 16.4 4 15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V9h10V5.33z"}},{"tag":"path","attr":{"d":"M7 9v11.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V9H7z"}}]})(props);
	};
	module.exports.MdBattery90 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M17 5.33C17 4.6 16.4 4 15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V8h10V5.33z"}},{"tag":"path","attr":{"d":"M7 8v12.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V8H7z"}}]})(props);
	};
	module.exports.MdBatteryAlert = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v15.33C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V5.33C17 4.6 16.4 4 15.67 4zM13 18h-2v-2h2v2zm0-4h-2V9h2v5z"}}]})(props);
	};
	module.exports.MdBatteryCharging20 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 20v-3H7v3.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V17h-4.4L11 20z"}},{"tag":"path","attr":{"fillOpacity":".3","d":"M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V17h4v-2.5H9L13 7v5.5h2L12.6 17H17V5.33C17 4.6 16.4 4 15.67 4z"}}]})(props);
	};
	module.exports.MdBatteryCharging30 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v9.17h2L13 7v5.5h2l-1.07 2H17V5.33C17 4.6 16.4 4 15.67 4z"}},{"tag":"path","attr":{"d":"M11 20v-5.5H7v6.17C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V14.5h-3.07L11 20z"}}]})(props);
	};
	module.exports.MdBatteryCharging50 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14.47 13.5L11 20v-5.5H9l.53-1H7v7.17C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V13.5h-2.53z"}},{"tag":"path","attr":{"fillOpacity":".3","d":"M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v8.17h2.53L13 7v5.5h2l-.53 1H17V5.33C17 4.6 16.4 4 15.67 4z"}}]})(props);
	};
	module.exports.MdBatteryCharging60 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V11h3.87L13 7v4h4V5.33C17 4.6 16.4 4 15.67 4z"}},{"tag":"path","attr":{"d":"M13 12.5h2L11 20v-5.5H9l1.87-3.5H7v9.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V11h-4v1.5z"}}]})(props);
	};
	module.exports.MdBatteryCharging80 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V9h4.93L13 7v2h4V5.33C17 4.6 16.4 4 15.67 4z"}},{"tag":"path","attr":{"d":"M13 12.5h2L11 20v-5.5H9L11.93 9H7v11.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V9h-4v3.5z"}}]})(props);
	};
	module.exports.MdBatteryCharging90 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V8h5.47L13 7v1h4V5.33C17 4.6 16.4 4 15.67 4z"}},{"tag":"path","attr":{"d":"M13 12.5h2L11 20v-5.5H9L12.47 8H7v12.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V8h-4v4.5z"}}]})(props);
	};
	module.exports.MdBatteryChargingFull = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v15.33C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V5.33C17 4.6 16.4 4 15.67 4zM11 20v-5.5H9L13 7v5.5h2L11 20z"}}]})(props);
	};
	module.exports.MdBatteryFull = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v15.33C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V5.33C17 4.6 16.4 4 15.67 4z"}}]})(props);
	};
	module.exports.MdBatteryStd = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v15.33C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V5.33C17 4.6 16.4 4 15.67 4z"}}]})(props);
	};
	module.exports.MdBatteryUnknown = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v15.33C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V5.33C17 4.6 16.4 4 15.67 4zm-2.72 13.95h-1.9v-1.9h1.9v1.9zm1.35-5.26s-.38.42-.67.71c-.48.48-.83 1.15-.83 1.6h-1.6c0-.83.46-1.52.93-2l.93-.94c.27-.27.44-.65.44-1.06 0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5H9c0-1.66 1.34-3 3-3s3 1.34 3 3c0 .66-.27 1.26-.7 1.69z"}}]})(props);
	};
	module.exports.MdBluetooth = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.71 7.71L12 2h-1v7.59L6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 11 14.41V22h1l5.71-5.71-4.3-4.29 4.3-4.29zM13 5.83l1.88 1.88L13 9.59V5.83zm1.88 10.46L13 18.17v-3.76l1.88 1.88z"}}]})(props);
	};
	module.exports.MdBluetoothConnected = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 12l-2-2-2 2 2 2 2-2zm10.71-4.29L12 2h-1v7.59L6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 11 14.41V22h1l5.71-5.71-4.3-4.29 4.3-4.29zM13 5.83l1.88 1.88L13 9.59V5.83zm1.88 10.46L13 18.17v-3.76l1.88 1.88zM19 10l-2 2 2 2 2-2-2-2z"}}]})(props);
	};
	module.exports.MdBluetoothDisabled = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 5.83l1.88 1.88-1.6 1.6 1.41 1.41 3.02-3.02L12 2h-1v5.03l2 2v-3.2zM5.41 4L4 5.41 10.59 12 5 17.59 6.41 19 11 14.41V22h1l4.29-4.29 2.3 2.29L20 18.59 5.41 4zM13 18.17v-3.76l1.88 1.88L13 18.17z"}}]})(props);
	};
	module.exports.MdBluetoothSearching = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14.24 12.01l2.32 2.32c.28-.72.44-1.51.44-2.33 0-.82-.16-1.59-.43-2.31l-2.33 2.32zm5.29-5.3l-1.26 1.26c.63 1.21.98 2.57.98 4.02s-.36 2.82-.98 4.02l1.2 1.2c.97-1.54 1.54-3.36 1.54-5.31-.01-1.89-.55-3.67-1.48-5.19zm-3.82 1L10 2H9v7.59L4.41 5 3 6.41 8.59 12 3 17.59 4.41 19 9 14.41V22h1l5.71-5.71-4.3-4.29 4.3-4.29zM11 5.83l1.88 1.88L11 9.59V5.83zm1.88 10.46L11 18.17v-3.76l1.88 1.88z"}}]})(props);
	};
	module.exports.MdBrightnessAuto = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10.85 12.65h2.3L12 9l-1.15 3.65zM20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM14.3 16l-.7-2h-3.2l-.7 2H7.8L11 7h2l3.2 9h-1.9z"}}]})(props);
	};
	module.exports.MdBrightnessHigh = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm0-10c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z"}}]})(props);
	};
	module.exports.MdBrightnessLow = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 15.31L23.31 12 20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"}}]})(props);
	};
	module.exports.MdBrightnessMedium = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 15.31L23.31 12 20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69zM12 18V6c3.31 0 6 2.69 6 6s-2.69 6-6 6z"}}]})(props);
	};
	module.exports.MdDataUsage = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 2.05v3.03c3.39.49 6 3.39 6 6.92 0 .9-.18 1.75-.48 2.54l2.6 1.53c.56-1.24.88-2.62.88-4.07 0-5.18-3.95-9.45-9-9.95zM12 19c-3.87 0-7-3.13-7-7 0-3.53 2.61-6.43 6-6.92V2.05c-5.06.5-9 4.76-9 9.95 0 5.52 4.47 10 9.99 10 3.31 0 6.24-1.61 8.06-4.09l-2.6-1.53C16.17 17.98 14.21 19 12 19z"}}]})(props);
	};
	module.exports.MdDeveloperMode = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 5h10v2h2V3c0-1.1-.9-1.99-2-1.99L7 1c-1.1 0-2 .9-2 2v4h2V5zm8.41 11.59L20 12l-4.59-4.59L14 8.83 17.17 12 14 15.17l1.41 1.42zM10 15.17L6.83 12 10 8.83 8.59 7.41 4 12l4.59 4.59L10 15.17zM17 19H7v-2H5v4c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2v-4h-2v2z"}}]})(props);
	};
	module.exports.MdDevices = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 6h18V4H4c-1.1 0-2 .9-2 2v11H0v3h14v-3H4V6zm19 2h-6c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-1 9h-4v-7h4v7z"}}]})(props);
	};
	module.exports.MdDvr = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5c0-1.1-.9-2-2-2zm0 14H3V5h18v12zm-2-9H8v2h11V8zm0 4H8v2h11v-2zM7 8H5v2h2V8zm0 4H5v2h2v-2z"}}]})(props);
	};
	module.exports.MdGpsFixed = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"}}]})(props);
	};
	module.exports.MdGpsNotFixed = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.94 11c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"}}]})(props);
	};
	module.exports.MdGpsOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.94 11c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06c-1.13.12-2.19.46-3.16.97l1.5 1.5C10.16 5.19 11.06 5 12 5c3.87 0 7 3.13 7 7 0 .94-.19 1.84-.52 2.65l1.5 1.5c.5-.96.84-2.02.97-3.15H23v-2h-2.06zM3 4.27l2.04 2.04C3.97 7.62 3.25 9.23 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c1.77-.2 3.38-.91 4.69-1.98L19.73 21 21 19.73 4.27 3 3 4.27zm13.27 13.27C15.09 18.45 13.61 19 12 19c-3.87 0-7-3.13-7-7 0-1.61.55-3.09 1.46-4.27l9.81 9.81z"}}]})(props);
	};
	module.exports.MdGraphicEq = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 18h2V6H7v12zm4 4h2V2h-2v20zm-8-8h2v-4H3v4zm12 4h2V6h-2v12zm4-8v4h2v-4h-2z"}}]})(props);
	};
	module.exports.MdLocationDisabled = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.94 11c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06c-1.13.12-2.19.46-3.16.97l1.5 1.5C10.16 5.19 11.06 5 12 5c3.87 0 7 3.13 7 7 0 .94-.19 1.84-.52 2.65l1.5 1.5c.5-.96.84-2.02.97-3.15H23v-2h-2.06zM3 4.27l2.04 2.04C3.97 7.62 3.25 9.23 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c1.77-.2 3.38-.91 4.69-1.98L19.73 21 21 19.73 4.27 3 3 4.27zm13.27 13.27C15.09 18.45 13.61 19 12 19c-3.87 0-7-3.13-7-7 0-1.61.55-3.09 1.46-4.27l9.81 9.81z"}}]})(props);
	};
	module.exports.MdLocationSearching = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.94 11c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"}}]})(props);
	};
	module.exports.MdNetworkCell = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M2 22h20V2z"}},{"tag":"path","attr":{"d":"M17 7L2 22h15z"}}]})(props);
	};
	module.exports.MdNetworkWifi = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M12.01 21.49L23.64 7c-.45-.34-4.93-4-11.64-4C5.28 3 .81 6.66.36 7l11.63 14.49.01.01.01-.01z"}},{"tag":"path","attr":{"d":"M3.53 10.95l8.46 10.54.01.01.01-.01 8.46-10.54C20.04 10.62 16.81 8 12 8c-4.81 0-8.04 2.62-8.47 2.95z"}}]})(props);
	};
	module.exports.MdNfc = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 18H4V4h16v16zM18 6h-5c-1.1 0-2 .9-2 2v2.28c-.6.35-1 .98-1 1.72 0 1.1.9 2 2 2s2-.9 2-2c0-.74-.4-1.38-1-1.72V8h3v8H8V8h2V6H6v12h12V6z"}}]})(props);
	};
	module.exports.MdScreenLockLandscape = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 5H3c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-2 12H5V7h14v10zm-9-1h4c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1v-1c0-1.11-.9-2-2-2-1.11 0-2 .9-2 2v1c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1zm.8-6c0-.66.54-1.2 1.2-1.2.66 0 1.2.54 1.2 1.2v1h-2.4v-1z"}}]})(props);
	};
	module.exports.MdScreenLockPortrait = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 16h4c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1v-1c0-1.11-.9-2-2-2-1.11 0-2 .9-2 2v1c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1zm.8-6c0-.66.54-1.2 1.2-1.2.66 0 1.2.54 1.2 1.2v1h-2.4v-1zM17 1H7c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 18H7V5h10v14z"}}]})(props);
	};
	module.exports.MdScreenLockRotation = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M23.25 12.77l-2.57-2.57-1.41 1.41 2.22 2.22-5.66 5.66L4.51 8.17l5.66-5.66 2.1 2.1 1.41-1.41L11.23.75c-.59-.59-1.54-.59-2.12 0L2.75 7.11c-.59.59-.59 1.54 0 2.12l12.02 12.02c.59.59 1.54.59 2.12 0l6.36-6.36c.59-.59.59-1.54 0-2.12zM8.47 20.48C5.2 18.94 2.86 15.76 2.5 12H1c.51 6.16 5.66 11 11.95 11l.66-.03-3.81-3.82-1.33 1.33zM16 9h5c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1v-.5C21 1.12 19.88 0 18.5 0S16 1.12 16 2.5V3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm.8-6.5c0-.94.76-1.7 1.7-1.7s1.7.76 1.7 1.7V3h-3.4v-.5z"}}]})(props);
	};
	module.exports.MdScreenRotation = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.48 2.52c3.27 1.55 5.61 4.72 5.97 8.48h1.5C23.44 4.84 18.29 0 12 0l-.66.03 3.81 3.81 1.33-1.32zm-6.25-.77c-.59-.59-1.54-.59-2.12 0L1.75 8.11c-.59.59-.59 1.54 0 2.12l12.02 12.02c.59.59 1.54.59 2.12 0l6.36-6.36c.59-.59.59-1.54 0-2.12L10.23 1.75zm4.6 19.44L2.81 9.17l6.36-6.36 12.02 12.02-6.36 6.36zm-7.31.29C4.25 19.94 1.91 16.76 1.55 13H.05C.56 19.16 5.71 24 12 24l.66-.03-3.81-3.81-1.33 1.32z"}}]})(props);
	};
	module.exports.MdSdStorage = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 2h-8L4.02 8 4 20c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-6 6h-2V4h2v4zm3 0h-2V4h2v4zm3 0h-2V4h2v4z"}}]})(props);
	};
	module.exports.MdSettingsSystemDaydream = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 16h6.5c1.38 0 2.5-1.12 2.5-2.5S16.88 11 15.5 11h-.05c-.24-1.69-1.69-3-3.45-3-1.4 0-2.6.83-3.16 2.02h-.16C7.17 10.18 6 11.45 6 13c0 1.66 1.34 3 3 3zM21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02z"}}]})(props);
	};
	module.exports.MdSignalCellular0Bar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M2 22h20V2z"}}]})(props);
	};
	module.exports.MdSignalCellular1Bar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M2 22h20V2z"}},{"tag":"path","attr":{"d":"M12 12L2 22h10z"}}]})(props);
	};
	module.exports.MdSignalCellular2Bar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M2 22h20V2z"}},{"tag":"path","attr":{"d":"M14 10L2 22h12z"}}]})(props);
	};
	module.exports.MdSignalCellular3Bar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M2 22h20V2z"}},{"tag":"path","attr":{"d":"M17 7L2 22h15z"}}]})(props);
	};
	module.exports.MdSignalCellular4Bar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2 22h20V2z"}}]})(props);
	};
	module.exports.MdSignalCellularConnectedNoInternet0Bar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M22 8V2L2 22h16V8z"}},{"tag":"path","attr":{"d":"M20 22h2v-2h-2v2zm0-12v8h2v-8h-2z"}}]})(props);
	};
	module.exports.MdSignalCellularConnectedNoInternet1Bar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M22 8V2L2 22h16V8z"}},{"tag":"path","attr":{"d":"M20 10v8h2v-8h-2zm-8 12V12L2 22h10zm8 0h2v-2h-2v2z"}}]})(props);
	};
	module.exports.MdSignalCellularConnectedNoInternet2Bar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M22 8V2L2 22h16V8z"}},{"tag":"path","attr":{"d":"M14 22V10L2 22h12zm6-12v8h2v-8h-2zm0 12h2v-2h-2v2z"}}]})(props);
	};
	module.exports.MdSignalCellularConnectedNoInternet3Bar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M22 8V2L2 22h16V8z"}},{"tag":"path","attr":{"d":"M17 22V7L2 22h15zm3-12v8h2v-8h-2zm0 12h2v-2h-2v2z"}}]})(props);
	};
	module.exports.MdSignalCellularConnectedNoInternet4Bar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 18h2v-8h-2v8zm0 4h2v-2h-2v2zM2 22h16V8h4V2L2 22z"}}]})(props);
	};
	module.exports.MdSignalCellularNoSim = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.99 5c0-1.1-.89-2-1.99-2h-7L7.66 5.34 19 16.68 18.99 5zM3.65 3.88L2.38 5.15 5 7.77V19c0 1.1.9 2 2 2h10.01c.35 0 .67-.1.96-.26l1.88 1.88 1.27-1.27L3.65 3.88z"}}]})(props);
	};
	module.exports.MdSignalCellularNull = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 6.83V20H6.83L20 6.83M22 2L2 22h20V2z"}}]})(props);
	};
	module.exports.MdSignalCellularOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 1l-8.59 8.59L21 18.18V1zM4.77 4.5L3.5 5.77l6.36 6.36L1 21h17.73l2 2L22 21.73 4.77 4.5z"}}]})(props);
	};
	module.exports.MdSignalWifi0Bar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M12.01 21.49L23.64 7c-.45-.34-4.93-4-11.64-4C5.28 3 .81 6.66.36 7l11.63 14.49.01.01.01-.01z"}}]})(props);
	};
	module.exports.MdSignalWifi1Bar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M12.01 21.49L23.64 7c-.45-.34-4.93-4-11.64-4C5.28 3 .81 6.66.36 7l11.63 14.49.01.01.01-.01z"}},{"tag":"path","attr":{"d":"M6.67 14.86L12 21.49v.01l.01-.01 5.33-6.63C17.06 14.65 15.03 13 12 13s-5.06 1.65-5.33 1.86z"}}]})(props);
	};
	module.exports.MdSignalWifi1BarLock = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M23 16v-1.5c0-1.4-1.1-2.5-2.5-2.5S18 13.1 18 14.5V16c-.5 0-1 .5-1 1v4c0 .5.5 1 1 1h5c.5 0 1-.5 1-1v-4c0-.5-.5-1-1-1zm-1 0h-3v-1.5c0-.8.7-1.5 1.5-1.5s1.5.7 1.5 1.5V16z"}},{"tag":"path","attr":{"d":"M15.5 14.5c0-2.8 2.2-5 5-5 .4 0 .7 0 1 .1L23.6 7c-.4-.3-4.9-4-11.6-4C5.3 3 .8 6.7.4 7L12 21.5l3.5-4.3v-2.7z","opacity":".3"}},{"tag":"path","attr":{"d":"M6.7 14.9l5.3 6.6 3.5-4.3v-2.6c0-.2 0-.5.1-.7-.9-.5-2.2-.9-3.6-.9-3 0-5.1 1.7-5.3 1.9z"}}]})(props);
	};
	module.exports.MdSignalWifi2Bar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M12.01 21.49L23.64 7c-.45-.34-4.93-4-11.64-4C5.28 3 .81 6.66.36 7l11.63 14.49.01.01.01-.01z"}},{"tag":"path","attr":{"d":"M4.79 12.52l7.2 8.98H12l.01-.01 7.2-8.98C18.85 12.24 16.1 10 12 10s-6.85 2.24-7.21 2.52z"}}]})(props);
	};
	module.exports.MdSignalWifi2BarLock = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M23 16v-1.5c0-1.4-1.1-2.5-2.5-2.5S18 13.1 18 14.5V16c-.5 0-1 .5-1 1v4c0 .5.5 1 1 1h5c.5 0 1-.5 1-1v-4c0-.5-.5-1-1-1zm-1 0h-3v-1.5c0-.8.7-1.5 1.5-1.5s1.5.7 1.5 1.5V16z"}},{"tag":"path","attr":{"d":"M15.5 14.5c0-2.8 2.2-5 5-5 .4 0 .7 0 1 .1L23.6 7c-.4-.3-4.9-4-11.6-4C5.3 3 .8 6.7.4 7L12 21.5l3.5-4.3v-2.7z","opacity":".3"}},{"tag":"path","attr":{"d":"M4.8 12.5l7.2 9 3.5-4.4v-2.6c0-1.3.5-2.5 1.4-3.4C15.6 10.5 14 10 12 10c-4.1 0-6.8 2.2-7.2 2.5z"}}]})(props);
	};
	module.exports.MdSignalWifi3Bar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".3","d":"M12.01 21.49L23.64 7c-.45-.34-4.93-4-11.64-4C5.28 3 .81 6.66.36 7l11.63 14.49.01.01.01-.01z"}},{"tag":"path","attr":{"d":"M3.53 10.95l8.46 10.54.01.01.01-.01 8.46-10.54C20.04 10.62 16.81 8 12 8c-4.81 0-8.04 2.62-8.47 2.95z"}}]})(props);
	};
	module.exports.MdSignalWifi3BarLock = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"opacity":".3","d":"M12 3C5.3 3 .8 6.7.4 7l3.2 3.9L12 21.5l3.5-4.3v-2.6c0-2.2 1.4-4 3.3-4.7.3-.1.5-.2.8-.2.3-.1.6-.1.9-.1.4 0 .7 0 1 .1L23.6 7c-.4-.3-4.9-4-11.6-4z"}},{"tag":"path","attr":{"d":"M23 16v-1.5c0-1.4-1.1-2.5-2.5-2.5S18 13.1 18 14.5V16c-.5 0-1 .5-1 1v4c0 .5.5 1 1 1h5c.5 0 1-.5 1-1v-4c0-.5-.5-1-1-1zm-1 0h-3v-1.5c0-.8.7-1.5 1.5-1.5s1.5.7 1.5 1.5V16zm-10 5.5l3.5-4.3v-2.6c0-2.2 1.4-4 3.3-4.7C17.3 9 14.9 8 12 8c-4.8 0-8 2.6-8.5 2.9"}}]})(props);
	};
	module.exports.MdSignalWifi4Bar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12.01 21.49L23.64 7c-.45-.34-4.93-4-11.64-4C5.28 3 .81 6.66.36 7l11.63 14.49.01.01.01-.01z"}}]})(props);
	};
	module.exports.MdSignalWifi4BarLock = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M23 16v-1.5c0-1.4-1.1-2.5-2.5-2.5S18 13.1 18 14.5V16c-.5 0-1 .5-1 1v4c0 .5.5 1 1 1h5c.5 0 1-.5 1-1v-4c0-.5-.5-1-1-1zm-1 0h-3v-1.5c0-.8.7-1.5 1.5-1.5s1.5.7 1.5 1.5V16zm-6.5-1.5c0-2.8 2.2-5 5-5 .4 0 .7 0 1 .1L23.6 7c-.4-.3-4.9-4-11.6-4C5.3 3 .8 6.7.4 7L12 21.5l3.5-4.4v-2.6z"}}]})(props);
	};
	module.exports.MdSignalWifiOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M23.64 7c-.45-.34-4.93-4-11.64-4-1.5 0-2.89.19-4.15.48L18.18 13.8 23.64 7zm-6.6 8.22L3.27 1.44 2 2.72l2.05 2.06C1.91 5.76.59 6.82.36 7l11.63 14.49.01.01.01-.01 3.9-4.86 3.32 3.32 1.27-1.27-3.46-3.46z"}}]})(props);
	};
	module.exports.MdStorage = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2 20h20v-4H2v4zm2-3h2v2H4v-2zM2 4v4h20V4H2zm4 3H4V5h2v2zm-4 7h20v-4H2v4zm2-3h2v2H4v-2z"}}]})(props);
	};
	module.exports.MdUsb = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 7v4h1v2h-3V5h2l-3-4-3 4h2v8H8v-2.07c.7-.37 1.2-1.08 1.2-1.93 0-1.21-.99-2.2-2.2-2.2-1.21 0-2.2.99-2.2 2.2 0 .85.5 1.56 1.2 1.93V13c0 1.11.89 2 2 2h3v3.05c-.71.37-1.2 1.1-1.2 1.95 0 1.22.99 2.2 2.2 2.2 1.21 0 2.2-.98 2.2-2.2 0-.85-.49-1.58-1.2-1.95V15h3c1.11 0 2-.89 2-2v-2h1V7h-4z"}}]})(props);
	};
	module.exports.MdWallpaper = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 4h7V2H4c-1.1 0-2 .9-2 2v7h2V4zm6 9l-4 5h12l-3-4-2.03 2.71L10 13zm7-4.5c0-.83-.67-1.5-1.5-1.5S14 7.67 14 8.5s.67 1.5 1.5 1.5S17 9.33 17 8.5zM20 2h-7v2h7v7h2V4c0-1.1-.9-2-2-2zm0 18h-7v2h7c1.1 0 2-.9 2-2v-7h-2v7zM4 13H2v7c0 1.1.9 2 2 2h7v-2H4v-7z"}}]})(props);
	};
	module.exports.MdWidgets = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 13v8h8v-8h-8zM3 21h8v-8H3v8zM3 3v8h8V3H3zm13.66-1.31L11 7.34 16.66 13l5.66-5.66-5.66-5.65z"}}]})(props);
	};
	module.exports.MdWifiLock = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.5 9.5c.28 0 .55.04.81.08L24 6c-3.34-2.51-7.5-4-12-4S3.34 3.49 0 6l12 16 3.5-4.67V14.5c0-2.76 2.24-5 5-5zM23 16v-1.5c0-1.38-1.12-2.5-2.5-2.5S18 13.12 18 14.5V16c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm-1 0h-3v-1.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V16z"}}]})(props);
	};
	module.exports.MdWifiTethering = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 2c0-3.31-2.69-6-6-6s-6 2.69-6 6c0 2.22 1.21 4.15 3 5.19l1-1.74c-1.19-.7-2-1.97-2-3.45 0-2.21 1.79-4 4-4s4 1.79 4 4c0 1.48-.81 2.75-2 3.45l1 1.74c1.79-1.04 3-2.97 3-5.19zM12 3C6.48 3 2 7.48 2 13c0 3.7 2.01 6.92 4.99 8.65l1-1.73C5.61 18.53 4 15.96 4 13c0-4.42 3.58-8 8-8s8 3.58 8 8c0 2.96-1.61 5.53-4 6.92l1 1.73c2.99-1.73 5-4.95 5-8.65 0-5.52-4.48-10-10-10z"}}]})(props);
	};
	module.exports.MdAttachFile = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z"}}]})(props);
	};
	module.exports.MdAttachMoney = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.8 10.9c-2.27-.59-3-1.2-3-2.15 0-1.09 1.01-1.85 2.7-1.85 1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-1.94.42-3.5 1.68-3.5 3.61 0 2.31 1.91 3.46 4.7 4.13 2.5.6 3 1.48 3 2.41 0 .69-.49 1.79-2.7 1.79-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c1.95-.37 3.5-1.5 3.5-3.55 0-2.84-2.43-3.81-4.7-4.4z"}}]})(props);
	};
	module.exports.MdBorderAll = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 3v18h18V3H3zm8 16H5v-6h6v6zm0-8H5V5h6v6zm8 8h-6v-6h6v6zm0-8h-6V5h6v6z"}}]})(props);
	};
	module.exports.MdBorderBottom = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 11H7v2h2v-2zm4 4h-2v2h2v-2zM9 3H7v2h2V3zm4 8h-2v2h2v-2zM5 3H3v2h2V3zm8 4h-2v2h2V7zm4 4h-2v2h2v-2zm-4-8h-2v2h2V3zm4 0h-2v2h2V3zm2 10h2v-2h-2v2zm0 4h2v-2h-2v2zM5 7H3v2h2V7zm14-4v2h2V3h-2zm0 6h2V7h-2v2zM5 11H3v2h2v-2zM3 21h18v-2H3v2zm2-6H3v2h2v-2z"}}]})(props);
	};
	module.exports.MdBorderClear = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 5h2V3H7v2zm0 8h2v-2H7v2zm0 8h2v-2H7v2zm4-4h2v-2h-2v2zm0 4h2v-2h-2v2zm-8 0h2v-2H3v2zm0-4h2v-2H3v2zm0-4h2v-2H3v2zm0-4h2V7H3v2zm0-4h2V3H3v2zm8 8h2v-2h-2v2zm8 4h2v-2h-2v2zm0-4h2v-2h-2v2zm0 8h2v-2h-2v2zm0-12h2V7h-2v2zm-8 0h2V7h-2v2zm8-6v2h2V3h-2zm-8 2h2V3h-2v2zm4 16h2v-2h-2v2zm0-8h2v-2h-2v2zm0-8h2V3h-2v2z"}}]})(props);
	};
	module.exports.MdBorderColor = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.75 7L14 3.25l-10 10V17h3.75l10-10zm2.96-2.96c.39-.39.39-1.02 0-1.41L18.37.29c-.39-.39-1.02-.39-1.41 0L15 2.25 18.75 6l1.96-1.96z"}},{"tag":"path","attr":{"fillOpacity":".36","d":"M0 20h24v4H0z"}}]})(props);
	};
	module.exports.MdBorderHorizontal = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 21h2v-2H3v2zM5 7H3v2h2V7zM3 17h2v-2H3v2zm4 4h2v-2H7v2zM5 3H3v2h2V3zm4 0H7v2h2V3zm8 0h-2v2h2V3zm-4 4h-2v2h2V7zm0-4h-2v2h2V3zm6 14h2v-2h-2v2zm-8 4h2v-2h-2v2zm-8-8h18v-2H3v2zM19 3v2h2V3h-2zm0 6h2V7h-2v2zm-8 8h2v-2h-2v2zm4 4h2v-2h-2v2zm4 0h2v-2h-2v2z"}}]})(props);
	};
	module.exports.MdBorderInner = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 21h2v-2H3v2zm4 0h2v-2H7v2zM5 7H3v2h2V7zM3 17h2v-2H3v2zM9 3H7v2h2V3zM5 3H3v2h2V3zm12 0h-2v2h2V3zm2 6h2V7h-2v2zm0-6v2h2V3h-2zm-4 18h2v-2h-2v2zM13 3h-2v8H3v2h8v8h2v-8h8v-2h-8V3zm6 18h2v-2h-2v2zm0-4h2v-2h-2v2z"}}]})(props);
	};
	module.exports.MdBorderLeft = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 21h2v-2h-2v2zm0-4h2v-2h-2v2zm0-12h2V3h-2v2zm0 4h2V7h-2v2zm0 4h2v-2h-2v2zm-4 8h2v-2H7v2zM7 5h2V3H7v2zm0 8h2v-2H7v2zm-4 8h2V3H3v18zM19 9h2V7h-2v2zm-4 12h2v-2h-2v2zm4-4h2v-2h-2v2zm0-14v2h2V3h-2zm0 10h2v-2h-2v2zm0 8h2v-2h-2v2zm-4-8h2v-2h-2v2zm0-8h2V3h-2v2z"}}]})(props);
	};
	module.exports.MdBorderOuter = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 7h-2v2h2V7zm0 4h-2v2h2v-2zm4 0h-2v2h2v-2zM3 3v18h18V3H3zm16 16H5V5h14v14zm-6-4h-2v2h2v-2zm-4-4H7v2h2v-2z"}}]})(props);
	};
	module.exports.MdBorderRight = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 21h2v-2H7v2zM3 5h2V3H3v2zm4 0h2V3H7v2zm0 8h2v-2H7v2zm-4 8h2v-2H3v2zm8 0h2v-2h-2v2zm-8-8h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm8 8h2v-2h-2v2zm4-4h2v-2h-2v2zm4-10v18h2V3h-2zm-4 18h2v-2h-2v2zm0-16h2V3h-2v2zm-4 8h2v-2h-2v2zm0-8h2V3h-2v2zm0 4h2V7h-2v2z"}}]})(props);
	};
	module.exports.MdBorderStyle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 21h2v-2h-2v2zm4 0h2v-2h-2v2zM7 21h2v-2H7v2zm4 0h2v-2h-2v2zm8-4h2v-2h-2v2zm0-4h2v-2h-2v2zM3 3v18h2V5h16V3H3zm16 6h2V7h-2v2z"}}]})(props);
	};
	module.exports.MdBorderTop = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 21h2v-2H7v2zm0-8h2v-2H7v2zm4 0h2v-2h-2v2zm0 8h2v-2h-2v2zm-8-4h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2v-2H3v2zm0-4h2V7H3v2zm8 8h2v-2h-2v2zm8-8h2V7h-2v2zm0 4h2v-2h-2v2zM3 3v2h18V3H3zm16 14h2v-2h-2v2zm-4 4h2v-2h-2v2zM11 9h2V7h-2v2zm8 12h2v-2h-2v2zm-4-8h2v-2h-2v2z"}}]})(props);
	};
	module.exports.MdBorderVertical = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 9h2V7H3v2zm0-4h2V3H3v2zm4 16h2v-2H7v2zm0-8h2v-2H7v2zm-4 0h2v-2H3v2zm0 8h2v-2H3v2zm0-4h2v-2H3v2zM7 5h2V3H7v2zm12 12h2v-2h-2v2zm-8 4h2V3h-2v18zm8 0h2v-2h-2v2zm0-8h2v-2h-2v2zm0-10v2h2V3h-2zm0 6h2V7h-2v2zm-4-4h2V3h-2v2zm0 16h2v-2h-2v2zm0-8h2v-2h-2v2z"}}]})(props);
	};
	module.exports.MdBubbleChart = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"7.2","cy":"14.4","r":"3.2"}},{"tag":"circle","attr":{"cx":"14.8","cy":"18","r":"2"}},{"tag":"circle","attr":{"cx":"15.2","cy":"8.8","r":"4.8"}}]})(props);
	};
	module.exports.MdDragHandle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 9H4v2h16V9zM4 15h16v-2H4v2z"}}]})(props);
	};
	module.exports.MdFormatAlignCenter = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z"}}]})(props);
	};
	module.exports.MdFormatAlignJustify = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z"}}]})(props);
	};
	module.exports.MdFormatAlignLeft = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z"}}]})(props);
	};
	module.exports.MdFormatAlignRight = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z"}}]})(props);
	};
	module.exports.MdFormatBold = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z"}}]})(props);
	};
	module.exports.MdFormatClear = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3.27 5L2 6.27l6.97 6.97L6.5 19h3l1.57-3.66L16.73 21 18 19.73 3.55 5.27 3.27 5zM6 5v.18L8.82 8h2.4l-.72 1.68 2.1 2.1L14.21 8H20V5H6z"}}]})(props);
	};
	module.exports.MdFormatColorFill = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.56 8.94L7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10L10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5z"}},{"tag":"path","attr":{"fillOpacity":".36","d":"M0 20h24v4H0z"}}]})(props);
	};
	module.exports.MdFormatColorReset = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 14c0-4-6-10.8-6-10.8s-1.33 1.51-2.73 3.52l8.59 8.59c.09-.42.14-.86.14-1.31zm-.88 3.12L12.5 12.5 5.27 5.27 4 6.55l3.32 3.32C6.55 11.32 6 12.79 6 14c0 3.31 2.69 6 6 6 1.52 0 2.9-.57 3.96-1.5l2.63 2.63 1.27-1.27-2.74-2.74z"}}]})(props);
	};
	module.exports.MdFormatColorText = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fillOpacity":".36","d":"M0 20h24v4H0z"}},{"tag":"path","attr":{"d":"M11 3L5.5 17h2.25l1.12-3h6.25l1.12 3h2.25L13 3h-2zm-1.38 9L12 5.67 14.38 12H9.62z"}}]})(props);
	};
	module.exports.MdFormatIndentDecrease = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 17h10v-2H11v2zm-8-5l4 4V8l-4 4zm0 9h18v-2H3v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z"}}]})(props);
	};
	module.exports.MdFormatIndentIncrease = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 21h18v-2H3v2zM3 8v8l4-4-4-4zm8 9h10v-2H11v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z"}}]})(props);
	};
	module.exports.MdFormatItalic = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z"}}]})(props);
	};
	module.exports.MdFormatLineSpacing = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 7h2.5L5 3.5 1.5 7H4v10H1.5L5 20.5 8.5 17H6V7zm4-2v2h12V5H10zm0 14h12v-2H10v2zm0-6h12v-2H10v2z"}}]})(props);
	};
	module.exports.MdFormatListBulleted = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z"}}]})(props);
	};
	module.exports.MdFormatListNumbered = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z"}}]})(props);
	};
	module.exports.MdFormatPaint = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 4V3c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6h1v4H9v11c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-9h8V4h-3z"}}]})(props);
	};
	module.exports.MdFormatQuote = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z"}}]})(props);
	};
	module.exports.MdFormatShapes = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M23 7V1h-6v2H7V1H1v6h2v10H1v6h6v-2h10v2h6v-6h-2V7h2zM3 3h2v2H3V3zm2 18H3v-2h2v2zm12-2H7v-2H5V7h2V5h10v2h2v10h-2v2zm4 2h-2v-2h2v2zM19 5V3h2v2h-2zm-5.27 9h-3.49l-.73 2H7.89l3.4-9h1.4l3.41 9h-1.63l-.74-2zm-3.04-1.26h2.61L12 8.91l-1.31 3.83z"}}]})(props);
	};
	module.exports.MdFormatSize = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 4v3h5v12h3V7h5V4H9zm-6 8h3v7h3v-7h3V9H3v3z"}}]})(props);
	};
	module.exports.MdFormatStrikethrough = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 19h4v-3h-4v3zM5 4v3h5v3h4V7h5V4H5zM3 14h18v-2H3v2z"}}]})(props);
	};
	module.exports.MdFormatTextdirectionLToR = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 10v5h2V4h2v11h2V4h2V2H9C6.79 2 5 3.79 5 6s1.79 4 4 4zm12 8l-4-4v3H5v2h12v3l4-4z"}}]})(props);
	};
	module.exports.MdFormatTextdirectionRToL = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 10v5h2V4h2v11h2V4h2V2h-8C7.79 2 6 3.79 6 6s1.79 4 4 4zm-2 7v-3l-4 4 4 4v-3h12v-2H8z"}}]})(props);
	};
	module.exports.MdFormatUnderlined = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z"}}]})(props);
	};
	module.exports.MdFunctions = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 4H6v2l6.5 6L6 18v2h12v-3h-7l5-5-5-5h7z"}}]})(props);
	};
	module.exports.MdHighlight = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 14l3 3v5h6v-5l3-3V9H6zm5-12h2v3h-2zM3.5 5.875L4.914 4.46l2.12 2.122L5.62 7.997zm13.46.71l2.123-2.12 1.414 1.414L18.375 8z"}}]})(props);
	};
	module.exports.MdInsertChart = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z"}}]})(props);
	};
	module.exports.MdInsertComment = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"}}]})(props);
	};
	module.exports.MdInsertDriveFile = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z"}}]})(props);
	};
	module.exports.MdInsertEmoticon = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z"}}]})(props);
	};
	module.exports.MdInsertInvitation = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"}}]})(props);
	};
	module.exports.MdInsertLink = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"}}]})(props);
	};
	module.exports.MdInsertPhoto = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"}}]})(props);
	};
	module.exports.MdLinearScale = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.5 9.5c-1.03 0-1.9.62-2.29 1.5h-2.92c-.39-.88-1.26-1.5-2.29-1.5s-1.9.62-2.29 1.5H6.79c-.39-.88-1.26-1.5-2.29-1.5C3.12 9.5 2 10.62 2 12s1.12 2.5 2.5 2.5c1.03 0 1.9-.62 2.29-1.5h2.92c.39.88 1.26 1.5 2.29 1.5s1.9-.62 2.29-1.5h2.92c.39.88 1.26 1.5 2.29 1.5 1.38 0 2.5-1.12 2.5-2.5s-1.12-2.5-2.5-2.5z"}}]})(props);
	};
	module.exports.MdMergeType = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 20.41L18.41 19 15 15.59 13.59 17 17 20.41zM7.5 8H11v5.59L5.59 19 7 20.41l6-6V8h3.5L12 3.5 7.5 8z"}}]})(props);
	};
	module.exports.MdModeComment = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.99 4c0-1.1-.89-2-1.99-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4-.01-18z"}}]})(props);
	};
	module.exports.MdModeEdit = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"}}]})(props);
	};
	module.exports.MdMonetizationOn = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1.41 16.09V20h-2.67v-1.93c-1.71-.36-3.16-1.46-3.27-3.4h1.96c.1 1.05.82 1.87 2.65 1.87 1.96 0 2.4-.98 2.4-1.59 0-.83-.44-1.61-2.67-2.14-2.48-.6-4.18-1.62-4.18-3.67 0-1.72 1.39-2.84 3.11-3.21V4h2.67v1.95c1.86.45 2.79 1.86 2.85 3.39H14.3c-.05-1.11-.64-1.87-2.22-1.87-1.5 0-2.4.68-2.4 1.64 0 .84.65 1.39 2.67 1.91s4.18 1.39 4.18 3.91c-.01 1.83-1.38 2.83-3.12 3.16z"}}]})(props);
	};
	module.exports.MdMoneyOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12.5 6.9c1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-.53.12-1.03.3-1.48.54l1.47 1.47c.41-.17.91-.27 1.51-.27zM5.33 4.06L4.06 5.33 7.5 8.77c0 2.08 1.56 3.21 3.91 3.91l3.51 3.51c-.34.48-1.05.91-2.42.91-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c.96-.18 1.82-.55 2.45-1.12l2.22 2.22 1.27-1.27L5.33 4.06z"}}]})(props);
	};
	module.exports.MdMultilineChart = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 6.92l-1.41-1.41-2.85 3.21C15.68 6.4 12.83 5 9.61 5 6.72 5 4.07 6.16 2 8l1.42 1.42C5.12 7.93 7.27 7 9.61 7c2.74 0 5.09 1.26 6.77 3.24l-2.88 3.24-4-4L2 16.99l1.5 1.5 6-6.01 4 4 4.05-4.55c.75 1.35 1.25 2.9 1.44 4.55H21c-.22-2.3-.95-4.39-2.04-6.14L22 6.92z"}}]})(props);
	};
	module.exports.MdPieChart = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 2v20c-5.07-.5-9-4.79-9-10s3.93-9.5 9-10zm2.03 0v8.99H22c-.47-4.74-4.24-8.52-8.97-8.99zm0 11.01V22c4.74-.47 8.5-4.25 8.97-8.99h-8.97z"}}]})(props);
	};
	module.exports.MdPieChartOutlined = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm1 2.07c3.61.45 6.48 3.33 6.93 6.93H13V4.07zM4 12c0-4.06 3.07-7.44 7-7.93v15.87c-3.93-.5-7-3.88-7-7.94zm9 7.93V13h6.93c-.45 3.61-3.32 6.48-6.93 6.93z"}}]})(props);
	};
	module.exports.MdPublish = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 4v2h14V4H5zm0 10h4v6h6v-6h4l-7-7-7 7z"}}]})(props);
	};
	module.exports.MdShortText = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 9h16v2H4zm0 4h10v2H4z"}}]})(props);
	};
	module.exports.MdShowChart = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3.5 18.49l6-6.01 4 4L22 6.92l-1.41-1.41-7.09 7.97-4-4L2 16.99z"}}]})(props);
	};
	module.exports.MdSpaceBar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 9v4H6V9H4v6h16V9z"}}]})(props);
	};
	module.exports.MdStrikethroughS = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"#010101","d":"M7.24 8.75c-.26-.48-.39-1.03-.39-1.67 0-.61.13-1.16.4-1.67.26-.5.63-.93 1.11-1.29.48-.35 1.05-.63 1.7-.83.66-.19 1.39-.29 2.18-.29.81 0 1.54.11 2.21.34.66.22 1.23.54 1.69.94.47.4.83.88 1.08 1.43.25.55.38 1.15.38 1.81h-3.01c0-.31-.05-.59-.15-.85-.09-.27-.24-.49-.44-.68-.2-.19-.45-.33-.75-.44-.3-.1-.66-.16-1.06-.16-.39 0-.74.04-1.03.13-.29.09-.53.21-.72.36-.19.16-.34.34-.44.55-.1.21-.15.43-.15.66 0 .48.25.88.74 1.21.38.25.77.48 1.41.7H7.39c-.05-.08-.11-.17-.15-.25zM21 12v-2H3v2h9.62c.18.07.4.14.55.2.37.17.66.34.87.51.21.17.35.36.43.57.07.2.11.43.11.69 0 .23-.05.45-.14.66-.09.2-.23.38-.42.53-.19.15-.42.26-.71.35-.29.08-.63.13-1.01.13-.43 0-.83-.04-1.18-.13s-.66-.23-.91-.42c-.25-.19-.45-.44-.59-.75-.14-.31-.25-.76-.25-1.21H6.4c0 .55.08 1.13.24 1.58.16.45.37.85.65 1.21.28.35.6.66.98.92.37.26.78.48 1.22.65.44.17.9.3 1.38.39.48.08.96.13 1.44.13.8 0 1.53-.09 2.18-.28s1.21-.45 1.67-.79c.46-.34.82-.77 1.07-1.27s.38-1.07.38-1.71c0-.6-.1-1.14-.31-1.61-.05-.11-.11-.23-.17-.33H21z"}}]})(props);
	};
	module.exports.MdTextFields = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2.5 4v3h5v12h3V7h5V4h-13zm19 5h-9v3h3v7h3v-7h3V9z"}}]})(props);
	};
	module.exports.MdTitle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 4v3h5.5v12h3V7H19V4z"}}]})(props);
	};
	module.exports.MdVerticalAlignBottom = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 13h-3V3h-2v10H8l4 4 4-4zM4 19v2h16v-2H4z"}}]})(props);
	};
	module.exports.MdVerticalAlignCenter = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8 19h3v4h2v-4h3l-4-4-4 4zm8-14h-3V1h-2v4H8l4 4 4-4zM4 11v2h16v-2H4z"}}]})(props);
	};
	module.exports.MdVerticalAlignTop = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8 11h3v10h2V11h3l-4-4-4 4zM4 3v2h16V3H4z"}}]})(props);
	};
	module.exports.MdWrapText = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 19h6v-2H4v2zM20 5H4v2h16V5zm-3 6H4v2h13.25c1.1 0 2 .9 2 2s-.9 2-2 2H15v-2l-3 3 3 3v-2h2c2.21 0 4-1.79 4-4s-1.79-4-4-4z"}}]})(props);
	};
	module.exports.MdAttachment = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5C8.12 15 7 13.88 7 12.5S8.12 10 9.5 10H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"}}]})(props);
	};
	module.exports.MdCloud = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"}}]})(props);
	};
	module.exports.MdCloudCircle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4.5 14H8c-1.66 0-3-1.34-3-3s1.34-3 3-3l.14.01C8.58 8.28 10.13 7 12 7c2.21 0 4 1.79 4 4h.5c1.38 0 2.5 1.12 2.5 2.5S17.88 16 16.5 16z"}}]})(props);
	};
	module.exports.MdCloudDone = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM10 17l-3.5-3.5 1.41-1.41L10 14.17 15.18 9l1.41 1.41L10 17z"}}]})(props);
	};
	module.exports.MdCloudDownload = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z"}}]})(props);
	};
	module.exports.MdCloudOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.35 10.04C18.67 6.59 15.64 4 12 4c-1.48 0-2.85.43-4.01 1.17l1.46 1.46C10.21 6.23 11.08 6 12 6c3.04 0 5.5 2.46 5.5 5.5v.5H19c1.66 0 3 1.34 3 3 0 1.13-.64 2.11-1.56 2.62l1.45 1.45C23.16 18.16 24 16.68 24 15c0-2.64-2.05-4.78-4.65-4.96zM3 5.27l2.75 2.74C2.56 8.15 0 10.77 0 14c0 3.31 2.69 6 6 6h11.73l2 2L21 20.73 4.27 4 3 5.27zM7.73 10l8 8H6c-2.21 0-4-1.79-4-4s1.79-4 4-4h1.73z"}}]})(props);
	};
	module.exports.MdCloudQueue = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM19 18H6c-2.21 0-4-1.79-4-4s1.79-4 4-4h.71C7.37 7.69 9.48 6 12 6c3.04 0 5.5 2.46 5.5 5.5v.5H19c1.66 0 3 1.34 3 3s-1.34 3-3 3z"}}]})(props);
	};
	module.exports.MdCloudUpload = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z"}}]})(props);
	};
	module.exports.MdCreateNewFolder = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 6h-8l-2-2H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-1 8h-3v3h-2v-3h-3v-2h3V9h2v3h3v2z"}}]})(props);
	};
	module.exports.MdFileDownload = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"}}]})(props);
	};
	module.exports.MdFileUpload = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z"}}]})(props);
	};
	module.exports.MdFolder = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"}}]})(props);
	};
	module.exports.MdFolderOpen = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z"}}]})(props);
	};
	module.exports.MdFolderShared = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-5 3c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm4 8h-8v-1c0-1.33 2.67-2 4-2s4 .67 4 2v1z"}}]})(props);
	};
	module.exports.MdCast = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.1 0-2 .9-2 2v3h2V5h18v14h-7v2h7c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM1 18v3h3c0-1.66-1.34-3-3-3zm0-4v2c2.76 0 5 2.24 5 5h2c0-3.87-3.13-7-7-7zm0-4v2c4.97 0 9 4.03 9 9h2c0-6.08-4.93-11-11-11z"}}]})(props);
	};
	module.exports.MdCastConnected = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M1 18v3h3c0-1.66-1.34-3-3-3zm0-4v2c2.76 0 5 2.24 5 5h2c0-3.87-3.13-7-7-7zm18-7H5v1.63c3.96 1.28 7.09 4.41 8.37 8.37H19V7zM1 10v2c4.97 0 9 4.03 9 9h2c0-6.08-4.93-11-11-11zm20-7H3c-1.1 0-2 .9-2 2v3h2V5h18v14h-7v2h7c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdComputer = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z"}}]})(props);
	};
	module.exports.MdDesktopMac = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7l-2 3v1h8v-1l-2-3h7c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 12H3V4h18v10z"}}]})(props);
	};
	module.exports.MdDesktopWindows = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7v2H8v2h8v-2h-2v-2h7c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H3V4h18v12z"}}]})(props);
	};
	module.exports.MdDeveloperBoard = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 9V7h-2V5c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-2h2v-2h-2v-2h2v-2h-2V9h2zm-4 10H4V5h14v14zM6 13h5v4H6zm6-6h4v3h-4zM6 7h5v5H6zm6 4h4v6h-4z"}}]})(props);
	};
	module.exports.MdDeviceHub = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 16l-4-4V8.82C14.16 8.4 15 7.3 15 6c0-1.66-1.34-3-3-3S9 4.34 9 6c0 1.3.84 2.4 2 2.82V12l-4 4H3v5h5v-3.05l4-4.2 4 4.2V21h5v-5h-4z"}}]})(props);
	};
	module.exports.MdDevicesOther = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 6h18V4H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4v-2H3V6zm10 6H9v1.78c-.61.55-1 1.33-1 2.22s.39 1.67 1 2.22V20h4v-1.78c.61-.55 1-1.34 1-2.22s-.39-1.67-1-2.22V12zm-2 5.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM22 8h-6c-.5 0-1 .5-1 1v10c0 .5.5 1 1 1h6c.5 0 1-.5 1-1V9c0-.5-.5-1-1-1zm-1 10h-4v-8h4v8z"}}]})(props);
	};
	module.exports.MdDock = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8 23h8v-2H8v2zm8-21.99L8 1c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM16 15H8V5h8v10z"}}]})(props);
	};
	module.exports.MdGamepad = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 7.5V2H9v5.5l3 3 3-3zM7.5 9H2v6h5.5l3-3-3-3zM9 16.5V22h6v-5.5l-3-3-3 3zM16.5 9l-3 3 3 3H22V9h-5.5z"}}]})(props);
	};
	module.exports.MdHeadset = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 1c-4.97 0-9 4.03-9 9v7c0 1.66 1.34 3 3 3h3v-8H5v-2c0-3.87 3.13-7 7-7s7 3.13 7 7v2h-4v8h3c1.66 0 3-1.34 3-3v-7c0-4.97-4.03-9-9-9z"}}]})(props);
	};
	module.exports.MdHeadsetMic = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 1c-4.97 0-9 4.03-9 9v7c0 1.66 1.34 3 3 3h3v-8H5v-2c0-3.87 3.13-7 7-7s7 3.13 7 7v2h-4v8h4v1h-7v2h6c1.66 0 3-1.34 3-3V10c0-4.97-4.03-9-9-9z"}}]})(props);
	};
	module.exports.MdKeyboard = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 5H4c-1.1 0-1.99.9-1.99 2L2 17c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-9 3h2v2h-2V8zm0 3h2v2h-2v-2zM8 8h2v2H8V8zm0 3h2v2H8v-2zm-1 2H5v-2h2v2zm0-3H5V8h2v2zm9 7H8v-2h8v2zm0-4h-2v-2h2v2zm0-3h-2V8h2v2zm3 3h-2v-2h2v2zm0-3h-2V8h2v2z"}}]})(props);
	};
	module.exports.MdKeyboardArrowDown = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z"}}]})(props);
	};
	module.exports.MdKeyboardArrowLeft = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"}}]})(props);
	};
	module.exports.MdKeyboardArrowRight = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"}}]})(props);
	};
	module.exports.MdKeyboardArrowUp = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z"}}]})(props);
	};
	module.exports.MdKeyboardBackspace = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z"}}]})(props);
	};
	module.exports.MdKeyboardCapslock = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 8.41L16.59 13 18 11.59l-6-6-6 6L7.41 13 12 8.41zM6 18h12v-2H6v2z"}}]})(props);
	};
	module.exports.MdKeyboardHide = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 3H4c-1.1 0-1.99.9-1.99 2L2 15c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-9 3h2v2h-2V6zm0 3h2v2h-2V9zM8 6h2v2H8V6zm0 3h2v2H8V9zm-1 2H5V9h2v2zm0-3H5V6h2v2zm9 7H8v-2h8v2zm0-4h-2V9h2v2zm0-3h-2V6h2v2zm3 3h-2V9h2v2zm0-3h-2V6h2v2zm-7 15l4-4H8l4 4z"}}]})(props);
	};
	module.exports.MdKeyboardReturn = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"}}]})(props);
	};
	module.exports.MdKeyboardTab = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.59 7.41L15.17 11H1v2h14.17l-3.59 3.59L13 18l6-6-6-6-1.41 1.41zM20 6v12h2V6h-2z"}}]})(props);
	};
	module.exports.MdKeyboardVoice = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 15c1.66 0 2.99-1.34 2.99-3L15 6c0-1.66-1.34-3-3-3S9 4.34 9 6v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 15 6.7 12H5c0 3.42 2.72 6.23 6 6.72V22h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z"}}]})(props);
	};
	module.exports.MdLaptop = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 18c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z"}}]})(props);
	};
	module.exports.MdLaptopChromebook = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 18V3H2v15H0v2h24v-2h-2zm-8 0h-4v-1h4v1zm6-3H4V5h16v10z"}}]})(props);
	};
	module.exports.MdLaptopMac = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 18c1.1 0 1.99-.9 1.99-2L22 5c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v11c0 1.1.9 2 2 2H0c0 1.1.9 2 2 2h20c1.1 0 2-.9 2-2h-4zM4 5h16v11H4V5zm8 14c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"}}]})(props);
	};
	module.exports.MdLaptopWindows = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 18v-1c1.1 0 1.99-.9 1.99-2L22 5c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2v1H0v2h24v-2h-4zM4 5h16v10H4V5z"}}]})(props);
	};
	module.exports.MdMemory = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 9H9v6h6V9zm-2 4h-2v-2h2v2zm8-2V9h-2V7c0-1.1-.9-2-2-2h-2V3h-2v2h-2V3H9v2H7c-1.1 0-2 .9-2 2v2H3v2h2v2H3v2h2v2c0 1.1.9 2 2 2h2v2h2v-2h2v2h2v-2h2c1.1 0 2-.9 2-2v-2h2v-2h-2v-2h2zm-4 6H7V7h10v10z"}}]})(props);
	};
	module.exports.MdMouse = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 1.07V9h7c0-4.08-3.05-7.44-7-7.93zM4 15c0 4.42 3.58 8 8 8s8-3.58 8-8v-4H4v4zm7-13.93C7.05 1.56 4 4.92 4 9h7V1.07z"}}]})(props);
	};
	module.exports.MdPhoneAndroid = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 1H8C6.34 1 5 2.34 5 4v16c0 1.66 1.34 3 3 3h8c1.66 0 3-1.34 3-3V4c0-1.66-1.34-3-3-3zm-2 20h-4v-1h4v1zm3.25-3H6.75V4h10.5v14z"}}]})(props);
	};
	module.exports.MdPhoneIphone = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.5 1h-8C6.12 1 5 2.12 5 3.5v17C5 21.88 6.12 23 7.5 23h8c1.38 0 2.5-1.12 2.5-2.5v-17C18 2.12 16.88 1 15.5 1zm-4 21c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5-4H7V4h9v14z"}}]})(props);
	};
	module.exports.MdPhonelink = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 6h18V4H4c-1.1 0-2 .9-2 2v11H0v3h14v-3H4V6zm19 2h-6c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-1 9h-4v-7h4v7z"}}]})(props);
	};
	module.exports.MdPhonelinkOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 6V4H6.82l2 2H22zM1.92 1.65L.65 2.92l1.82 1.82C2.18 5.08 2 5.52 2 6v11H0v3h17.73l2.35 2.35 1.27-1.27L3.89 3.62 1.92 1.65zM4 6.27L14.73 17H4V6.27zM23 8h-6c-.55 0-1 .45-1 1v4.18l2 2V10h4v7h-2.18l3 3H23c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1z"}}]})(props);
	};
	module.exports.MdPowerInput = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2 9v2h19V9H2zm0 6h5v-2H2v2zm7 0h5v-2H9v2zm7 0h5v-2h-5v2z"}}]})(props);
	};
	module.exports.MdRouter = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.2 5.9l.8-.8C19.6 3.7 17.8 3 16 3s-3.6.7-5 2.1l.8.8C13 4.8 14.5 4.2 16 4.2s3 .6 4.2 1.7zm-.9.8c-.9-.9-2.1-1.4-3.3-1.4s-2.4.5-3.3 1.4l.8.8c.7-.7 1.6-1 2.5-1 .9 0 1.8.3 2.5 1l.8-.8zM19 13h-2V9h-2v4H5c-1.1 0-2 .9-2 2v4c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-4c0-1.1-.9-2-2-2zM8 18H6v-2h2v2zm3.5 0h-2v-2h2v2zm3.5 0h-2v-2h2v2z"}}]})(props);
	};
	module.exports.MdScanner = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.8 10.7L4.2 5l-.7 1.9L17.6 12H5c-1.1 0-2 .9-2 2v4c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5.5c0-.8-.5-1.6-1.2-1.8zM7 17H5v-2h2v2zm12 0H9v-2h10v2z"}}]})(props);
	};
	module.exports.MdSecurity = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11v8.8z"}}]})(props);
	};
	module.exports.MdSimCard = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.99 4c0-1.1-.89-2-1.99-2h-8L4 8v12c0 1.1.9 2 2 2h12.01c1.1 0 1.99-.9 1.99-2l-.01-16zM9 19H7v-2h2v2zm8 0h-2v-2h2v2zm-8-4H7v-4h2v4zm4 4h-2v-4h2v4zm0-6h-2v-2h2v2zm4 2h-2v-4h2v4z"}}]})(props);
	};
	module.exports.MdSmartphone = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 1.01L7 1c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM17 19H7V5h10v14z"}}]})(props);
	};
	module.exports.MdSpeaker = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 2H7c-1.1 0-2 .9-2 2v16c0 1.1.9 1.99 2 1.99L17 22c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-5 2c1.1 0 2 .9 2 2s-.9 2-2 2c-1.11 0-2-.9-2-2s.89-2 2-2zm0 16c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"}}]})(props);
	};
	module.exports.MdSpeakerGroup = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.2 1H9.8C8.81 1 8 1.81 8 2.8v14.4c0 .99.81 1.79 1.8 1.79l8.4.01c.99 0 1.8-.81 1.8-1.8V2.8c0-.99-.81-1.8-1.8-1.8zM14 3c1.1 0 2 .89 2 2s-.9 2-2 2-2-.89-2-2 .9-2 2-2zm0 13.5c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"}},{"tag":"circle","attr":{"cx":"14","cy":"12.5","r":"2.5"}},{"tag":"path","attr":{"d":"M6 5H4v16c0 1.1.89 2 2 2h10v-2H6V5z"}}]})(props);
	};
	module.exports.MdTablet = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 4H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h18c1.1 0 1.99-.9 1.99-2L23 6c0-1.1-.9-2-2-2zm-2 14H5V6h14v12z"}}]})(props);
	};
	module.exports.MdTabletAndroid = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 0H6C4.34 0 3 1.34 3 3v18c0 1.66 1.34 3 3 3h12c1.66 0 3-1.34 3-3V3c0-1.66-1.34-3-3-3zm-4 22h-4v-1h4v1zm5.25-3H4.75V3h14.5v16z"}}]})(props);
	};
	module.exports.MdTabletMac = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.5 0h-14C3.12 0 2 1.12 2 2.5v19C2 22.88 3.12 24 4.5 24h14c1.38 0 2.5-1.12 2.5-2.5v-19C21 1.12 19.88 0 18.5 0zm-7 23c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm7.5-4H4V3h15v16z"}}]})(props);
	};
	module.exports.MdToys = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 12c0-3 2.5-5.5 5.5-5.5S23 9 23 12H12zm0 0c0 3-2.5 5.5-5.5 5.5S1 15 1 12h11zm0 0c-3 0-5.5-2.5-5.5-5.5S9 1 12 1v11zm0 0c3 0 5.5 2.5 5.5 5.5S15 23 12 23V12z"}}]})(props);
	};
	module.exports.MdTv = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5c0-1.1-.9-2-2-2zm0 14H3V5h18v12z"}}]})(props);
	};
	module.exports.MdVideogameAsset = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 6H3c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-10 7H8v3H6v-3H3v-2h3V8h2v3h3v2zm4.5 2c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4-3c-.83 0-1.5-.67-1.5-1.5S18.67 9 19.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}}]})(props);
	};
	module.exports.MdWatch = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 12c0-2.54-1.19-4.81-3.04-6.27L16 0H8l-.95 5.73C5.19 7.19 4 9.45 4 12s1.19 4.81 3.05 6.27L8 24h8l.96-5.73C18.81 16.81 20 14.54 20 12zM6 12c0-3.31 2.69-6 6-6s6 2.69 6 6-2.69 6-6 6-6-2.69-6-6z"}}]})(props);
	};
	module.exports.MdAddAPhoto = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 4V1h2v3h3v2H5v3H3V6H0V4h3zm3 6V7h3V4h7l1.83 2H21c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2V10h3zm7 9c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-3.2-5c0 1.77 1.43 3.2 3.2 3.2s3.2-1.43 3.2-3.2-1.43-3.2-3.2-3.2-3.2 1.43-3.2 3.2z"}}]})(props);
	};
	module.exports.MdAddToPhotos = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9h-4v4h-2v-4H9V9h4V5h2v4h4v2z"}}]})(props);
	};
	module.exports.MdAdjust = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm3-8c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3z"}}]})(props);
	};
	module.exports.MdAssistant = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h4l3 3 3-3h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-5.12 10.88L12 17l-1.88-4.12L6 11l4.12-1.88L12 5l1.88 4.12L18 11l-4.12 1.88z"}}]})(props);
	};
	module.exports.MdAssistantPhoto = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14.4 6L14 4H5v17h2v-7h5.6l.4 2h7V6z"}}]})(props);
	};
	module.exports.MdAudiotrack = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 3v9.28c-.47-.17-.97-.28-1.5-.28C8.01 12 6 14.01 6 16.5S8.01 21 10.5 21c2.31 0 4.2-1.75 4.45-4H15V6h4V3h-7z"}}]})(props);
	};
	module.exports.MdBlurCircular = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM7 9.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm3 7c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm-3-3c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm3-6c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM14 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-1.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm3 6c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm0-4c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm2-3.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm0-3.5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"}}]})(props);
	};
	module.exports.MdBlurLinear = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 17.5c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM9 13c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zM3 21h18v-2H3v2zM5 9.5c.83 0 1.5-.67 1.5-1.5S5.83 6.5 5 6.5 3.5 7.17 3.5 8 4.17 9.5 5 9.5zm0 4c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM9 17c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm8-.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM3 3v2h18V3H3zm14 5.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm0 4c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM13 9c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1z"}}]})(props);
	};
	module.exports.MdBlurOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm-.2 4.48l.2.02c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5l.02.2c.09.67.61 1.19 1.28 1.28zM14 3.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm-4 0c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm11 7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM10 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm8 8c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm-4 13.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM2.5 5.27l3.78 3.78L6 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1c0-.1-.03-.19-.06-.28l2.81 2.81c-.71.11-1.25.73-1.25 1.47 0 .83.67 1.5 1.5 1.5.74 0 1.36-.54 1.47-1.25l2.81 2.81c-.09-.03-.18-.06-.28-.06-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1c0-.1-.03-.19-.06-.28l3.78 3.78L20 20.23 3.77 4 2.5 5.27zM10 17c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm11-3.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM6 13c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM3 9.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm7 11c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM6 17c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm-3-3.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5z"}}]})(props);
	};
	module.exports.MdBlurOn = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 13c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm-3 .5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM6 5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm15 5.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM14 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-3.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm-11 10c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm7 7c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm0-17c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM10 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 5.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm8 .5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm3 8.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM14 17c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 3.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm-4-12c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0 8.5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4-4.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-4c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"}}]})(props);
	};
	module.exports.MdBrightness1 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"12","cy":"12","r":"10"}}]})(props);
	};
	module.exports.MdBrightness2 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 2c-1.82 0-3.53.5-5 1.35C7.99 5.08 10 8.3 10 12s-2.01 6.92-5 8.65C6.47 21.5 8.18 22 10 22c5.52 0 10-4.48 10-10S15.52 2 10 2z"}}]})(props);
	};
	module.exports.MdBrightness3 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 2c-1.05 0-2.05.16-3 .46 4.06 1.27 7 5.06 7 9.54 0 4.48-2.94 8.27-7 9.54.95.3 1.95.46 3 .46 5.52 0 10-4.48 10-10S14.52 2 9 2z"}}]})(props);
	};
	module.exports.MdBrightness4 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-.89 0-1.74-.2-2.5-.55C11.56 16.5 13 14.42 13 12s-1.44-4.5-3.5-5.45C10.26 6.2 11.11 6 12 6c3.31 0 6 2.69 6 6s-2.69 6-6 6z"}}]})(props);
	};
	module.exports.MdBrightness5 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 15.31L23.31 12 20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"}}]})(props);
	};
	module.exports.MdBrightness6 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 15.31L23.31 12 20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69zM12 18V6c3.31 0 6 2.69 6 6s-2.69 6-6 6z"}}]})(props);
	};
	module.exports.MdBrightness7 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm0-10c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z"}}]})(props);
	};
	module.exports.MdBrokenImage = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 5v6.59l-3-3.01-4 4.01-4-4-4 4-3-3.01V5c0-1.1.9-2 2-2h14c1.1 0 2 .9 2 2zm-3 6.42l3 3.01V19c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2v-6.58l3 2.99 4-4 4 4 4-3.99z"}}]})(props);
	};
	module.exports.MdBrush = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 14c-1.66 0-3 1.34-3 3 0 1.31-1.16 2-2 2 .92 1.22 2.49 2 4 2 2.21 0 4-1.79 4-4 0-1.66-1.34-3-3-3zm13.71-9.37l-1.34-1.34c-.39-.39-1.02-.39-1.41 0L9 12.25 11.75 15l8.96-8.96c.39-.39.39-1.02 0-1.41z"}}]})(props);
	};
	module.exports.MdBurstMode = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M1 5h2v14H1zm4 0h2v14H5zm17 0H10c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zM11 17l2.5-3.15L15.29 16l2.5-3.22L21 17H11z"}}]})(props);
	};
	module.exports.MdCamera = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9.4 10.5l4.77-8.26C13.47 2.09 12.75 2 12 2c-2.4 0-4.6.85-6.32 2.25l3.66 6.35.06-.1zM21.54 9c-.92-2.92-3.15-5.26-6-6.34L11.88 9h9.66zm.26 1h-7.49l.29.5 4.76 8.25C21 16.97 22 14.61 22 12c0-.69-.07-1.35-.2-2zM8.54 12l-3.9-6.75C3.01 7.03 2 9.39 2 12c0 .69.07 1.35.2 2h7.49l-1.15-2zm-6.08 3c.92 2.92 3.15 5.26 6 6.34L12.12 15H2.46zm11.27 0l-3.9 6.76c.7.15 1.42.24 2.17.24 2.4 0 4.6-.85 6.32-2.25l-3.66-6.35-.93 1.6z"}}]})(props);
	};
	module.exports.MdCameraAlt = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"12","cy":"12","r":"3.2"}},{"tag":"path","attr":{"d":"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"}}]})(props);
	};
	module.exports.MdCameraFront = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 20H5v2h5v2l3-3-3-3v2zm4 0v2h5v-2h-5zM12 8c1.1 0 2-.9 2-2s-.9-2-2-2-1.99.9-1.99 2S10.9 8 12 8zm5-8H7C5.9 0 5 .9 5 2v14c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V2c0-1.1-.9-2-2-2zM7 2h10v10.5c0-1.67-3.33-2.5-5-2.5s-5 .83-5 2.5V2z"}}]})(props);
	};
	module.exports.MdCameraRear = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 20H5v2h5v2l3-3-3-3v2zm4 0v2h5v-2h-5zm3-20H7C5.9 0 5 .9 5 2v14c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V2c0-1.1-.9-2-2-2zm-5 6c-1.11 0-2-.9-2-2s.89-2 1.99-2 2 .9 2 2C14 5.1 13.1 6 12 6z"}}]})(props);
	};
	module.exports.MdCameraRoll = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 5c0-1.1-.9-2-2-2h-1V2c0-.55-.45-1-1-1H6c-.55 0-1 .45-1 1v1H4c-1.1 0-2 .9-2 2v15c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2h8V5h-8zm-2 13h-2v-2h2v2zm0-9h-2V7h2v2zm4 9h-2v-2h2v2zm0-9h-2V7h2v2zm4 9h-2v-2h2v2zm0-9h-2V7h2v2z"}}]})(props);
	};
	module.exports.MdCenterFocusStrong = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm-7 7H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4z"}}]})(props);
	};
	module.exports.MdCenterFocusWeak = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 15H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"}}]})(props);
	};
	module.exports.MdCollections = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 16V4c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2zm-11-4l2.03 2.71L16 11l4 5H8l3-4zM2 6v14c0 1.1.9 2 2 2h14v-2H4V6H2z"}}]})(props);
	};
	module.exports.MdCollectionsBookmark = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 10l-2.5-1.5L15 12V4h5v8z"}}]})(props);
	};
	module.exports.MdColorLens = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9c.83 0 1.5-.67 1.5-1.5 0-.39-.15-.74-.39-1.01-.23-.26-.38-.61-.38-.99 0-.83.67-1.5 1.5-1.5H16c2.76 0 5-2.24 5-5 0-4.42-4.03-8-9-8zm-5.5 9c-.83 0-1.5-.67-1.5-1.5S5.67 9 6.5 9 8 9.67 8 10.5 7.33 12 6.5 12zm3-4C8.67 8 8 7.33 8 6.5S8.67 5 9.5 5s1.5.67 1.5 1.5S10.33 8 9.5 8zm5 0c-.83 0-1.5-.67-1.5-1.5S13.67 5 14.5 5s1.5.67 1.5 1.5S15.33 8 14.5 8zm3 4c-.83 0-1.5-.67-1.5-1.5S16.67 9 17.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}}]})(props);
	};
	module.exports.MdColorize = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.71 5.63l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-3.12 3.12-1.93-1.91-1.41 1.41 1.42 1.42L3 16.25V21h4.75l8.92-8.92 1.42 1.42 1.41-1.41-1.92-1.92 3.12-3.12c.4-.4.4-1.03.01-1.42zM6.92 19L5 17.08l8.06-8.06 1.92 1.92L6.92 19z"}}]})(props);
	};
	module.exports.MdCompare = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h5v2h2V1h-2v2zm0 15H5l5-6v6zm9-15h-5v2h5v13l-5-6v9h5c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdControlPoint = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"}}]})(props);
	};
	module.exports.MdControlPointDuplicate = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 8h-2v3h-3v2h3v3h2v-3h3v-2h-3zM2 12c0-2.79 1.64-5.2 4.01-6.32V3.52C2.52 4.76 0 8.09 0 12s2.52 7.24 6.01 8.48v-2.16C3.64 17.2 2 14.79 2 12zm13-9c-4.96 0-9 4.04-9 9s4.04 9 9 9 9-4.04 9-9-4.04-9-9-9zm0 16c-3.86 0-7-3.14-7-7s3.14-7 7-7 7 3.14 7 7-3.14 7-7 7z"}}]})(props);
	};
	module.exports.MdCrop169 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 6H5c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 10H5V8h14v8z"}}]})(props);
	};
	module.exports.MdCrop = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 15h2V7c0-1.1-.9-2-2-2H9v2h8v8zM7 17V1H5v4H1v2h4v10c0 1.1.9 2 2 2h10v4h2v-4h4v-2H7z"}}]})(props);
	};
	module.exports.MdCrop32 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 4H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H5V6h14v12z"}}]})(props);
	};
	module.exports.MdCrop54 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 5H5c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 12H5V7h14v10z"}}]})(props);
	};
	module.exports.MdCrop75 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 7H5c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm0 8H5V9h14v6z"}}]})(props);
	};
	module.exports.MdCropDin = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z"}}]})(props);
	};
	module.exports.MdCropFree = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 5v4h2V5h4V3H5c-1.1 0-2 .9-2 2zm2 10H3v4c0 1.1.9 2 2 2h4v-2H5v-4zm14 4h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zm0-16h-4v2h4v4h2V5c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdCropLandscape = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 5H5c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 12H5V7h14v10z"}}]})(props);
	};
	module.exports.MdCropOriginal = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14zm-5.04-6.71l-2.75 3.54-1.96-2.36L6.5 17h11l-3.54-4.71z"}}]})(props);
	};
	module.exports.MdCropPortrait = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 3H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7V5h10v14z"}}]})(props);
	};
	module.exports.MdCropRotate = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7.47 21.49C4.2 19.93 1.86 16.76 1.5 13H0c.51 6.16 5.66 11 11.95 11 .23 0 .44-.02.66-.03L8.8 20.15l-1.33 1.34zM12.05 0c-.23 0-.44.02-.66.04l3.81 3.81 1.33-1.33C19.8 4.07 22.14 7.24 22.5 11H24c-.51-6.16-5.66-11-11.95-11zM16 14h2V8c0-1.11-.9-2-2-2h-6v2h6v6zm-8 2V4H6v2H4v2h2v8c0 1.1.89 2 2 2h8v2h2v-2h2v-2H8z"}}]})(props);
	};
	module.exports.MdCropSquare = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 4H6c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H6V6h12v12z"}}]})(props);
	};
	module.exports.MdDehaze = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2 15.5v2h20v-2H2zm0-5v2h20v-2H2zm0-5v2h20v-2H2z"}}]})(props);
	};
	module.exports.MdDetails = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 4l9 16 9-16H3zm3.38 2h11.25L12 16 6.38 6z"}}]})(props);
	};
	module.exports.MdEdit = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"}}]})(props);
	};
	module.exports.MdExposure = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 17v2h2v-2h2v-2h-2v-2h-2v2h-2v2h2zm5-15H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM5 5h6v2H5V5zm15 15H4L20 4v16z"}}]})(props);
	};
	module.exports.MdExposureNeg1 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 11v2h8v-2H4zm15 7h-2V7.38L14 8.4V6.7L18.7 5h.3v13z"}}]})(props);
	};
	module.exports.MdExposureNeg2 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.05 16.29l2.86-3.07c.38-.39.72-.79 1.04-1.18.32-.39.59-.78.82-1.17.23-.39.41-.78.54-1.17s.19-.79.19-1.18c0-.53-.09-1.02-.27-1.46-.18-.44-.44-.81-.78-1.11-.34-.31-.77-.54-1.26-.71-.51-.16-1.08-.24-1.72-.24-.69 0-1.31.11-1.85.32-.54.21-1 .51-1.36.88-.37.37-.65.8-.84 1.3-.18.47-.27.97-.28 1.5h2.14c.01-.31.05-.6.13-.87.09-.29.23-.54.4-.75.18-.21.41-.37.68-.49.27-.12.6-.18.96-.18.31 0 .58.05.81.15.23.1.43.25.59.43.16.18.28.4.37.65.08.25.13.52.13.81 0 .22-.03.43-.08.65-.06.22-.15.45-.29.7-.14.25-.32.53-.56.83-.23.3-.52.65-.88 1.03l-4.17 4.55V18H21v-1.71h-5.95zM2 11v2h8v-2H2z"}}]})(props);
	};
	module.exports.MdExposurePlus1 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 7H8v4H4v2h4v4h2v-4h4v-2h-4V7zm10 11h-2V7.38L15 8.4V6.7L19.7 5h.3v13z"}}]})(props);
	};
	module.exports.MdExposurePlus2 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.05 16.29l2.86-3.07c.38-.39.72-.79 1.04-1.18.32-.39.59-.78.82-1.17.23-.39.41-.78.54-1.17.13-.39.19-.79.19-1.18 0-.53-.09-1.02-.27-1.46-.18-.44-.44-.81-.78-1.11-.34-.31-.77-.54-1.26-.71-.51-.16-1.08-.24-1.72-.24-.69 0-1.31.11-1.85.32-.54.21-1 .51-1.36.88-.37.37-.65.8-.84 1.3-.18.47-.27.97-.28 1.5h2.14c.01-.31.05-.6.13-.87.09-.29.23-.54.4-.75.18-.21.41-.37.68-.49.27-.12.6-.18.96-.18.31 0 .58.05.81.15.23.1.43.25.59.43.16.18.28.4.37.65.08.25.13.52.13.81 0 .22-.03.43-.08.65-.06.22-.15.45-.29.7-.14.25-.32.53-.56.83-.23.3-.52.65-.88 1.03l-4.17 4.55V18H22v-1.71h-5.95zM8 7H6v4H2v2h4v4h2v-4h4v-2H8V7z"}}]})(props);
	};
	module.exports.MdExposureZero = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.14 12.5c0 1-.1 1.85-.3 2.55-.2.7-.48 1.27-.83 1.7-.36.44-.79.75-1.3.95-.51.2-1.07.3-1.7.3-.62 0-1.18-.1-1.69-.3-.51-.2-.95-.51-1.31-.95-.36-.44-.65-1.01-.85-1.7-.2-.7-.3-1.55-.3-2.55v-2.04c0-1 .1-1.85.3-2.55.2-.7.48-1.26.84-1.69.36-.43.8-.74 1.31-.93C10.81 5.1 11.38 5 12 5c.63 0 1.19.1 1.7.29.51.19.95.5 1.31.93.36.43.64.99.84 1.69.2.7.3 1.54.3 2.55v2.04zm-2.11-2.36c0-.64-.05-1.18-.13-1.62-.09-.44-.22-.79-.4-1.06-.17-.27-.39-.46-.64-.58-.25-.13-.54-.19-.86-.19-.32 0-.61.06-.86.18s-.47.31-.64.58c-.17.27-.31.62-.4 1.06s-.13.98-.13 1.62v2.67c0 .64.05 1.18.14 1.62.09.45.23.81.4 1.09s.39.48.64.61.54.19.87.19c.33 0 .62-.06.87-.19s.46-.33.63-.61c.17-.28.3-.64.39-1.09.09-.45.13-.99.13-1.62v-2.66z"}}]})(props);
	};
	module.exports.MdFilter1 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm11 10h2V5h-4v2h2v8zm7-14H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z"}}]})(props);
	};
	module.exports.MdFilter2 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zm-4-4h-4v-2h2c1.1 0 2-.89 2-2V7c0-1.11-.9-2-2-2h-4v2h4v2h-2c-1.1 0-2 .89-2 2v4h6v-2z"}}]})(props);
	};
	module.exports.MdFilter = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.96 10.29l-2.75 3.54-1.96-2.36L8.5 15h11l-3.54-4.71zM3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z"}}]})(props);
	};
	module.exports.MdFilter3 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 1H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zM3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm14 8v-1.5c0-.83-.67-1.5-1.5-1.5.83 0 1.5-.67 1.5-1.5V7c0-1.11-.9-2-2-2h-4v2h4v2h-2v2h2v2h-4v2h4c1.1 0 2-.89 2-2z"}}]})(props);
	};
	module.exports.MdFilter4 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm12 10h2V5h-2v4h-2V5h-2v6h4v4zm6-14H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z"}}]})(props);
	};
	module.exports.MdFilter5 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 1H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zM3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm14 8v-2c0-1.11-.9-2-2-2h-2V7h4V5h-6v6h4v2h-4v2h4c1.1 0 2-.89 2-2z"}}]})(props);
	};
	module.exports.MdFilter6 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zm-8-2h2c1.1 0 2-.89 2-2v-2c0-1.11-.9-2-2-2h-2V7h4V5h-4c-1.1 0-2 .89-2 2v6c0 1.11.9 2 2 2zm0-4h2v2h-2v-2z"}}]})(props);
	};
	module.exports.MdFilter7 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zm-8-2l4-8V5h-6v2h4l-4 8h2z"}}]})(props);
	};
	module.exports.MdFilter8 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zm-8-2h2c1.1 0 2-.89 2-2v-1.5c0-.83-.67-1.5-1.5-1.5.83 0 1.5-.67 1.5-1.5V7c0-1.11-.9-2-2-2h-2c-1.1 0-2 .89-2 2v1.5c0 .83.67 1.5 1.5 1.5-.83 0-1.5.67-1.5 1.5V13c0 1.11.9 2 2 2zm0-8h2v2h-2V7zm0 4h2v2h-2v-2z"}}]})(props);
	};
	module.exports.MdFilter9 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zM15 5h-2c-1.1 0-2 .89-2 2v2c0 1.11.9 2 2 2h2v2h-4v2h4c1.1 0 2-.89 2-2V7c0-1.11-.9-2-2-2zm0 4h-2V7h2v2z"}}]})(props);
	};
	module.exports.MdFilter9Plus = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm11 7V8c0-1.11-.9-2-2-2h-1c-1.1 0-2 .89-2 2v1c0 1.11.9 2 2 2h1v1H9v2h3c1.1 0 2-.89 2-2zm-3-3V8h1v1h-1zm10-8H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 8h-2V7h-2v2h-2v2h2v2h2v-2h2v6H7V3h14v6z"}}]})(props);
	};
	module.exports.MdFilterBAndW = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16l-7-8v8H5l7-8V5h7v14z"}}]})(props);
	};
	module.exports.MdFilterCenterFocus = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 15H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zM12 9c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"}}]})(props);
	};
	module.exports.MdFilterDrama = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.61 5.64 5.36 8.04 2.35 8.36 0 10.9 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM19 18H6c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4h2c0-2.76-1.86-5.08-4.4-5.78C8.61 6.88 10.2 6 12 6c3.03 0 5.5 2.47 5.5 5.5v.5H19c1.65 0 3 1.35 3 3s-1.35 3-3 3z"}}]})(props);
	};
	module.exports.MdFilterFrames = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 4h-4l-4-4-4 4H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H4V6h4.52l3.52-3.5L15.52 6H20v14zM18 8H6v10h12"}}]})(props);
	};
	module.exports.MdFilterHdr = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 6l-3.75 5 2.85 3.8-1.6 1.2C9.81 13.75 7 10 7 10l-6 8h22L14 6z"}}]})(props);
	};
	module.exports.MdFilterNone = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z"}}]})(props);
	};
	module.exports.MdFilterTiltShift = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 4.07V2.05c-2.01.2-3.84 1-5.32 2.21L7.1 5.69c1.11-.86 2.44-1.44 3.9-1.62zm7.32.19C16.84 3.05 15.01 2.25 13 2.05v2.02c1.46.18 2.79.76 3.9 1.62l1.42-1.43zM19.93 11h2.02c-.2-2.01-1-3.84-2.21-5.32L18.31 7.1c.86 1.11 1.44 2.44 1.62 3.9zM5.69 7.1L4.26 5.68C3.05 7.16 2.25 8.99 2.05 11h2.02c.18-1.46.76-2.79 1.62-3.9zM4.07 13H2.05c.2 2.01 1 3.84 2.21 5.32l1.43-1.43c-.86-1.1-1.44-2.43-1.62-3.89zM15 12c0-1.66-1.34-3-3-3s-3 1.34-3 3 1.34 3 3 3 3-1.34 3-3zm3.31 4.9l1.43 1.43c1.21-1.48 2.01-3.32 2.21-5.32h-2.02c-.18 1.45-.76 2.78-1.62 3.89zM13 19.93v2.02c2.01-.2 3.84-1 5.32-2.21l-1.43-1.43c-1.1.86-2.43 1.44-3.89 1.62zm-7.32-.19C7.16 20.95 9 21.75 11 21.95v-2.02c-1.46-.18-2.79-.76-3.9-1.62l-1.42 1.43z"}}]})(props);
	};
	module.exports.MdFilterVintage = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.7 12.4c-.28-.16-.57-.29-.86-.4.29-.11.58-.24.86-.4 1.92-1.11 2.99-3.12 3-5.19-1.79-1.03-4.07-1.11-6 0-.28.16-.54.35-.78.54.05-.31.08-.63.08-.95 0-2.22-1.21-4.15-3-5.19C10.21 1.85 9 3.78 9 6c0 .32.03.64.08.95-.24-.2-.5-.39-.78-.55-1.92-1.11-4.2-1.03-6 0 0 2.07 1.07 4.08 3 5.19.28.16.57.29.86.4-.29.11-.58.24-.86.4-1.92 1.11-2.99 3.12-3 5.19 1.79 1.03 4.07 1.11 6 0 .28-.16.54-.35.78-.54-.05.32-.08.64-.08.96 0 2.22 1.21 4.15 3 5.19 1.79-1.04 3-2.97 3-5.19 0-.32-.03-.64-.08-.95.24.2.5.38.78.54 1.92 1.11 4.2 1.03 6 0-.01-2.07-1.08-4.08-3-5.19zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"}}]})(props);
	};
	module.exports.MdFlare = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 11H1v2h6v-2zm2.17-3.24L7.05 5.64 5.64 7.05l2.12 2.12 1.41-1.41zM13 1h-2v6h2V1zm5.36 6.05l-1.41-1.41-2.12 2.12 1.41 1.41 2.12-2.12zM17 11v2h6v-2h-6zm-5-2c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zm2.83 7.24l2.12 2.12 1.41-1.41-2.12-2.12-1.41 1.41zm-9.19.71l1.41 1.41 2.12-2.12-1.41-1.41-2.12 2.12zM11 23h2v-6h-2v6z"}}]})(props);
	};
	module.exports.MdFlashAuto = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 2v12h3v9l7-12H9l4-9H3zm16 0h-2l-3.2 9h1.9l.7-2h3.2l.7 2h1.9L19 2zm-2.15 5.65L18 4l1.15 3.65h-2.3z"}}]})(props);
	};
	module.exports.MdFlashOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3.27 3L2 4.27l5 5V13h3v9l3.58-6.14L17.73 20 19 18.73 3.27 3zM17 10h-4l4-8H7v2.18l8.46 8.46L17 10z"}}]})(props);
	};
	module.exports.MdFlashOn = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 2v11h3v9l7-12h-4l4-8z"}}]})(props);
	};
	module.exports.MdFlip = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 21h2v-2h-2v2zm4-12h2V7h-2v2zM3 5v14c0 1.1.9 2 2 2h4v-2H5V5h4V3H5c-1.1 0-2 .9-2 2zm16-2v2h2c0-1.1-.9-2-2-2zm-8 20h2V1h-2v22zm8-6h2v-2h-2v2zM15 5h2V3h-2v2zm4 8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2z"}}]})(props);
	};
	module.exports.MdGradient = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 9h2v2h-2zm-2 2h2v2H9zm4 0h2v2h-2zm2-2h2v2h-2zM7 9h2v2H7zm12-6H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 18H7v-2h2v2zm4 0h-2v-2h2v2zm4 0h-2v-2h2v2zm2-7h-2v2h2v2h-2v-2h-2v2h-2v-2h-2v2H9v-2H7v2H5v-2h2v-2H5V5h14v6z"}}]})(props);
	};
	module.exports.MdGrain = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM6 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12-8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-4 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdGridOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8 4v1.45l2 2V4h4v4h-3.45l2 2H14v1.45l2 2V10h4v4h-3.45l2 2H20v1.45l2 2V4c0-1.1-.9-2-2-2H4.55l2 2H8zm8 0h4v4h-4V4zM1.27 1.27L0 2.55l2 2V20c0 1.1.9 2 2 2h15.46l2 2 1.27-1.27L1.27 1.27zM10 12.55L11.45 14H10v-1.45zm-6-6L5.45 8H4V6.55zM8 20H4v-4h4v4zm0-6H4v-4h3.45l.55.55V14zm6 6h-4v-4h3.45l.55.54V20zm2 0v-1.46L17.46 20H16z"}}]})(props);
	};
	module.exports.MdGridOn = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z"}}]})(props);
	};
	module.exports.MdHdrOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.5 15v-2h1.1l.9 2H21l-.9-2.1c.5-.2.9-.8.9-1.4v-1c0-.8-.7-1.5-1.5-1.5H16v4.9l1.1 1.1h.4zm0-4.5h2v1h-2v-1zm-4.5 0v.4l1.5 1.5v-1.9c0-.8-.7-1.5-1.5-1.5h-1.9l1.5 1.5h.4zm-3.5-1l-7-7-1.1 1L6.9 9h-.4v2h-2V9H3v6h1.5v-2.5h2V15H8v-4.9l1.5 1.5V15h3.4l7.6 7.6 1.1-1.1-12.1-12z"}}]})(props);
	};
	module.exports.MdHdrOn = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 11.5v-1c0-.8-.7-1.5-1.5-1.5H16v6h1.5v-2h1.1l.9 2H21l-.9-2.1c.5-.3.9-.8.9-1.4zm-1.5 0h-2v-1h2v1zm-13-.5h-2V9H3v6h1.5v-2.5h2V15H8V9H6.5v2zM13 9H9.5v6H13c.8 0 1.5-.7 1.5-1.5v-3c0-.8-.7-1.5-1.5-1.5zm0 4.5h-2v-3h2v3z"}}]})(props);
	};
	module.exports.MdHdrStrong = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 6c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zM5 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"}}]})(props);
	};
	module.exports.MdHdrWeak = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm12-2c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"}}]})(props);
	};
	module.exports.MdHealing = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.73 12.02l3.98-3.98c.39-.39.39-1.02 0-1.41l-4.34-4.34c-.39-.39-1.02-.39-1.41 0l-3.98 3.98L8 2.29C7.8 2.1 7.55 2 7.29 2c-.25 0-.51.1-.7.29L2.25 6.63c-.39.39-.39 1.02 0 1.41l3.98 3.98L2.25 16c-.39.39-.39 1.02 0 1.41l4.34 4.34c.39.39 1.02.39 1.41 0l3.98-3.98 3.98 3.98c.2.2.45.29.71.29.26 0 .51-.1.71-.29l4.34-4.34c.39-.39.39-1.02 0-1.41l-3.99-3.98zM12 9c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm-4.71 1.96L3.66 7.34l3.63-3.63 3.62 3.62-3.62 3.63zM10 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm2 2c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm2-4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm2.66 9.34l-3.63-3.62 3.63-3.63 3.62 3.62-3.62 3.63z"}}]})(props);
	};
	module.exports.MdImage = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"}}]})(props);
	};
	module.exports.MdImageAspectRatio = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 10h-2v2h2v-2zm0 4h-2v2h2v-2zm-8-4H6v2h2v-2zm4 0h-2v2h2v-2zm8-6H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V6h16v12z"}}]})(props);
	};
	module.exports.MdIso = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM5.5 7.5h2v-2H9v2h2V9H9v2H7.5V9h-2V7.5zM19 19H5L19 5v14zm-2-2v-1.5h-5V17h5z"}}]})(props);
	};
	module.exports.MdLandscape = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 6l-3.75 5 2.85 3.8-1.6 1.2C9.81 13.75 7 10 7 10l-6 8h22L14 6z"}}]})(props);
	};
	module.exports.MdLeakAdd = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 3H3v3c1.66 0 3-1.34 3-3zm8 0h-2c0 4.97-4.03 9-9 9v2c6.08 0 11-4.93 11-11zm-4 0H8c0 2.76-2.24 5-5 5v2c3.87 0 7-3.13 7-7zm0 18h2c0-4.97 4.03-9 9-9v-2c-6.07 0-11 4.93-11 11zm8 0h3v-3c-1.66 0-3 1.34-3 3zm-4 0h2c0-2.76 2.24-5 5-5v-2c-3.87 0-7 3.13-7 7z"}}]})(props);
	};
	module.exports.MdLeakRemove = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 3H8c0 .37-.04.72-.12 1.06l1.59 1.59C9.81 4.84 10 3.94 10 3zM3 4.27l2.84 2.84C5.03 7.67 4.06 8 3 8v2c1.61 0 3.09-.55 4.27-1.46L8.7 9.97C7.14 11.24 5.16 12 3 12v2c2.71 0 5.19-.99 7.11-2.62l2.5 2.5C10.99 15.81 10 18.29 10 21h2c0-2.16.76-4.14 2.03-5.69l1.43 1.43C14.55 17.91 14 19.39 14 21h2c0-1.06.33-2.03.89-2.84L19.73 21 21 19.73 4.27 3 3 4.27zM14 3h-2c0 1.5-.37 2.91-1.02 4.16l1.46 1.46C13.42 6.98 14 5.06 14 3zm5.94 13.12c.34-.08.69-.12 1.06-.12v-2c-.94 0-1.84.19-2.66.52l1.6 1.6zm-4.56-4.56l1.46 1.46C18.09 12.37 19.5 12 21 12v-2c-2.06 0-3.98.58-5.62 1.56z"}}]})(props);
	};
	module.exports.MdLens = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2z"}}]})(props);
	};
	module.exports.MdLinkedCamera = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"12","cy":"14","r":"3.2"}},{"tag":"path","attr":{"d":"M16 3.33c2.58 0 4.67 2.09 4.67 4.67H22c0-3.31-2.69-6-6-6v1.33M16 6c1.11 0 2 .89 2 2h1.33c0-1.84-1.49-3.33-3.33-3.33V6"}},{"tag":"path","attr":{"d":"M17 9c0-1.11-.89-2-2-2V4H9L7.17 6H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V9h-5zm-5 10c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"}}]})(props);
	};
	module.exports.MdLooks = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 10c-3.86 0-7 3.14-7 7h2c0-2.76 2.24-5 5-5s5 2.24 5 5h2c0-3.86-3.14-7-7-7zm0-4C5.93 6 1 10.93 1 17h2c0-4.96 4.04-9 9-9s9 4.04 9 9h2c0-6.07-4.93-11-11-11z"}}]})(props);
	};
	module.exports.MdLooks3 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.01 3h-14c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 7.5c0 .83-.67 1.5-1.5 1.5.83 0 1.5.67 1.5 1.5V15c0 1.11-.9 2-2 2h-4v-2h4v-2h-2v-2h2V9h-4V7h4c1.1 0 2 .89 2 2v1.5z"}}]})(props);
	};
	module.exports.MdLooks4 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 14h-2v-4H9V7h2v4h2V7h2v10z"}}]})(props);
	};
	module.exports.MdLooks5 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 6h-4v2h2c1.1 0 2 .89 2 2v2c0 1.11-.9 2-2 2H9v-2h4v-2H9V7h6v2z"}}]})(props);
	};
	module.exports.MdLooks6 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 15h2v-2h-2v2zm8-12H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 6h-4v2h2c1.1 0 2 .89 2 2v2c0 1.11-.9 2-2 2h-2c-1.1 0-2-.89-2-2V9c0-1.11.9-2 2-2h4v2z"}}]})(props);
	};
	module.exports.MdLooksOne = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14h-2V9h-2V7h4v10z"}}]})(props);
	};
	module.exports.MdLooksTwo = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 8c0 1.11-.9 2-2 2h-2v2h4v2H9v-4c0-1.11.9-2 2-2h2V9H9V7h4c1.1 0 2 .89 2 2v2z"}}]})(props);
	};
	module.exports.MdLoupe = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10h8c1.1 0 2-.9 2-2v-8c0-5.51-4.49-10-10-10zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"}}]})(props);
	};
	module.exports.MdMonochromePhotos = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 5h-3.2L15 3H9L7.2 5H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 14h-8v-1c-2.8 0-5-2.2-5-5s2.2-5 5-5V7h8v12zm-3-6c0-2.8-2.2-5-5-5v1.8c1.8 0 3.2 1.4 3.2 3.2s-1.4 3.2-3.2 3.2V18c2.8 0 5-2.2 5-5zm-8.2 0c0 1.8 1.4 3.2 3.2 3.2V9.8c-1.8 0-3.2 1.4-3.2 3.2z"}}]})(props);
	};
	module.exports.MdMovieCreation = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 4l2 4h-3l-2-4h-2l2 4h-3l-2-4H8l2 4H7L5 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4h-4z"}}]})(props);
	};
	module.exports.MdMovieFilter = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 4l2 3h-3l-2-3h-2l2 3h-3l-2-3H8l2 3H7L5 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4h-4zm-6.75 11.25L10 18l-1.25-2.75L6 14l2.75-1.25L10 10l1.25 2.75L14 14l-2.75 1.25zm5.69-3.31L16 14l-.94-2.06L13 11l2.06-.94L16 8l.94 2.06L19 11l-2.06.94z"}}]})(props);
	};
	module.exports.MdMusicNote = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 3v10.55c-.59-.34-1.27-.55-2-.55-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4V7h4V3h-6z"}}]})(props);
	};
	module.exports.MdNature = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 16.12c3.47-.41 6.17-3.36 6.17-6.95 0-3.87-3.13-7-7-7s-7 3.13-7 7c0 3.47 2.52 6.34 5.83 6.89V20H5v2h14v-2h-6v-3.88z"}}]})(props);
	};
	module.exports.MdNaturePeople = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22.17 9.17c0-3.87-3.13-7-7-7s-7 3.13-7 7c0 3.47 2.52 6.34 5.83 6.89V20H6v-3h1v-4c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v4h1v5h16v-2h-3v-3.88c3.47-.41 6.17-3.36 6.17-6.95zM4.5 11c.83 0 1.5-.67 1.5-1.5S5.33 8 4.5 8 3 8.67 3 9.5 3.67 11 4.5 11z"}}]})(props);
	};
	module.exports.MdNavigateBefore = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"}}]})(props);
	};
	module.exports.MdNavigateNext = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"}}]})(props);
	};
	module.exports.MdPalette = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9c.83 0 1.5-.67 1.5-1.5 0-.39-.15-.74-.39-1.01-.23-.26-.38-.61-.38-.99 0-.83.67-1.5 1.5-1.5H16c2.76 0 5-2.24 5-5 0-4.42-4.03-8-9-8zm-5.5 9c-.83 0-1.5-.67-1.5-1.5S5.67 9 6.5 9 8 9.67 8 10.5 7.33 12 6.5 12zm3-4C8.67 8 8 7.33 8 6.5S8.67 5 9.5 5s1.5.67 1.5 1.5S10.33 8 9.5 8zm5 0c-.83 0-1.5-.67-1.5-1.5S13.67 5 14.5 5s1.5.67 1.5 1.5S15.33 8 14.5 8zm3 4c-.83 0-1.5-.67-1.5-1.5S16.67 9 17.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}}]})(props);
	};
	module.exports.MdPanorama = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M23 18V6c0-1.1-.9-2-2-2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zM8.5 12.5l2.5 3.01L14.5 11l4.5 6H5l3.5-4.5z"}}]})(props);
	};
	module.exports.MdPanoramaFishEye = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"}}]})(props);
	};
	module.exports.MdPanoramaHorizontal = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 6.54v10.91c-2.6-.77-5.28-1.16-8-1.16-2.72 0-5.4.39-8 1.16V6.54c2.6.77 5.28 1.16 8 1.16 2.72.01 5.4-.38 8-1.16M21.43 4c-.1 0-.2.02-.31.06C18.18 5.16 15.09 5.7 12 5.7c-3.09 0-6.18-.55-9.12-1.64-.11-.04-.22-.06-.31-.06-.34 0-.57.23-.57.63v14.75c0 .39.23.62.57.62.1 0 .2-.02.31-.06 2.94-1.1 6.03-1.64 9.12-1.64 3.09 0 6.18.55 9.12 1.64.11.04.21.06.31.06.33 0 .57-.23.57-.63V4.63c0-.4-.24-.63-.57-.63z"}}]})(props);
	};
	module.exports.MdPanoramaVertical = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.94 21.12c-1.1-2.94-1.64-6.03-1.64-9.12 0-3.09.55-6.18 1.64-9.12.04-.11.06-.22.06-.31 0-.34-.23-.57-.63-.57H4.63c-.4 0-.63.23-.63.57 0 .1.02.2.06.31C5.16 5.82 5.71 8.91 5.71 12c0 3.09-.55 6.18-1.64 9.12-.05.11-.07.22-.07.31 0 .33.23.57.63.57h14.75c.39 0 .63-.24.63-.57-.01-.1-.03-.2-.07-.31zM6.54 20c.77-2.6 1.16-5.28 1.16-8 0-2.72-.39-5.4-1.16-8h10.91c-.77 2.6-1.16 5.28-1.16 8 0 2.72.39 5.4 1.16 8H6.54z"}}]})(props);
	};
	module.exports.MdPanoramaWideAngle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 6c2.45 0 4.71.2 7.29.64.47 1.78.71 3.58.71 5.36 0 1.78-.24 3.58-.71 5.36-2.58.44-4.84.64-7.29.64s-4.71-.2-7.29-.64C4.24 15.58 4 13.78 4 12c0-1.78.24-3.58.71-5.36C7.29 6.2 9.55 6 12 6m0-2c-2.73 0-5.22.24-7.95.72l-.93.16-.25.9C2.29 7.85 2 9.93 2 12s.29 4.15.87 6.22l.25.89.93.16c2.73.49 5.22.73 7.95.73s5.22-.24 7.95-.72l.93-.16.25-.89c.58-2.08.87-4.16.87-6.23s-.29-4.15-.87-6.22l-.25-.89-.93-.16C17.22 4.24 14.73 4 12 4z"}}]})(props);
	};
	module.exports.MdPhoto = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"}}]})(props);
	};
	module.exports.MdPhotoAlbum = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 2H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 4h5v8l-2.5-1.5L6 12V4zm0 15l3-3.86 2.14 2.58 3-3.86L18 19H6z"}}]})(props);
	};
	module.exports.MdPhotoCamera = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"12","cy":"12","r":"3.2"}},{"tag":"path","attr":{"d":"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"}}]})(props);
	};
	module.exports.MdPhotoFilter = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.02 10v9H5V5h9V3H5.02c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-9h-2zM17 10l.94-2.06L20 7l-2.06-.94L17 4l-.94 2.06L14 7l2.06.94zm-3.75.75L12 8l-1.25 2.75L8 12l2.75 1.25L12 16l1.25-2.75L16 12z"}}]})(props);
	};
	module.exports.MdPhotoLibrary = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 16V4c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2zm-11-4l2.03 2.71L16 11l4 5H8l3-4zM2 6v14c0 1.1.9 2 2 2h14v-2H4V6H2z"}}]})(props);
	};
	module.exports.MdPhotoSizeSelectActual = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3C2 3 1 4 1 5v14c0 1.1.9 2 2 2h18c1 0 2-1 2-2V5c0-1-1-2-2-2zM5 17l3.5-4.5 2.5 3.01L14.5 11l4.5 6H5z"}}]})(props);
	};
	module.exports.MdPhotoSizeSelectLarge = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 15h2v2h-2v-2zm0-4h2v2h-2v-2zm2 8h-2v2c1 0 2-1 2-2zM13 3h2v2h-2V3zm8 4h2v2h-2V7zm0-4v2h2c0-1-1-2-2-2zM1 7h2v2H1V7zm16-4h2v2h-2V3zm0 16h2v2h-2v-2zM3 3C2 3 1 4 1 5h2V3zm6 0h2v2H9V3zM5 3h2v2H5V3zm-4 8v8c0 1.1.9 2 2 2h12V11H1zm2 8l2.5-3.21 1.79 2.15 2.5-3.22L13 19H3z"}}]})(props);
	};
	module.exports.MdPhotoSizeSelectSmall = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M23 15h-2v2h2v-2zm0-4h-2v2h2v-2zm0 8h-2v2c1 0 2-1 2-2zM15 3h-2v2h2V3zm8 4h-2v2h2V7zm-2-4v2h2c0-1-1-2-2-2zM3 21h8v-6H1v4c0 1.1.9 2 2 2zM3 7H1v2h2V7zm12 12h-2v2h2v-2zm4-16h-2v2h2V3zm0 16h-2v2h2v-2zM3 3C2 3 1 4 1 5h2V3zm0 8H1v2h2v-2zm8-8H9v2h2V3zM7 3H5v2h2V3z"}}]})(props);
	};
	module.exports.MdPictureAsPdf = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 7.5c0 .83-.67 1.5-1.5 1.5H9v2H7.5V7H10c.83 0 1.5.67 1.5 1.5v1zm5 2c0 .83-.67 1.5-1.5 1.5h-2.5V7H15c.83 0 1.5.67 1.5 1.5v3zm4-3H19v1h1.5V11H19v2h-1.5V7h3v1.5zM9 9.5h1v-1H9v1zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm10 5.5h1v-3h-1v3z"}}]})(props);
	};
	module.exports.MdPortrait = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 12.25c1.24 0 2.25-1.01 2.25-2.25S13.24 7.75 12 7.75 9.75 8.76 9.75 10s1.01 2.25 2.25 2.25zm4.5 4c0-1.5-3-2.25-4.5-2.25s-4.5.75-4.5 2.25V17h9v-.75zM19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z"}}]})(props);
	};
	module.exports.MdRemoveRedEye = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"}}]})(props);
	};
	module.exports.MdRotate90DegreesCcw = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7.34 6.41L.86 12.9l6.49 6.48 6.49-6.48-6.5-6.49zM3.69 12.9l3.66-3.66L11 12.9l-3.66 3.66-3.65-3.66zm15.67-6.26C17.61 4.88 15.3 4 13 4V.76L8.76 5 13 9.24V6c1.79 0 3.58.68 4.95 2.05 2.73 2.73 2.73 7.17 0 9.9C16.58 19.32 14.79 20 13 20c-.97 0-1.94-.21-2.84-.61l-1.49 1.49C10.02 21.62 11.51 22 13 22c2.3 0 4.61-.88 6.36-2.64 3.52-3.51 3.52-9.21 0-12.72z"}}]})(props);
	};
	module.exports.MdRotateLeft = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7.11 8.53L5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47zM6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47zm1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03L7.1 18.32zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93z"}}]})(props);
	};
	module.exports.MdRotateRight = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.55 5.55L11 1v3.07C7.06 4.56 4 7.92 4 12s3.05 7.44 7 7.93v-2.02c-2.84-.48-5-2.94-5-5.91s2.16-5.43 5-5.91V10l4.55-4.45zM19.93 11c-.17-1.39-.72-2.73-1.62-3.89l-1.42 1.42c.54.75.88 1.6 1.02 2.47h2.02zM13 17.9v2.02c1.39-.17 2.74-.71 3.9-1.61l-1.44-1.44c-.75.54-1.59.89-2.46 1.03zm3.89-2.42l1.42 1.41c.9-1.16 1.45-2.5 1.62-3.89h-2.02c-.14.87-.48 1.72-1.02 2.48z"}}]})(props);
	};
	module.exports.MdSlideshow = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 8v8l5-4-5-4zm9-5H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z"}}]})(props);
	};
	module.exports.MdStraighten = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 6H3c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 10H3V8h2v4h2V8h2v4h2V8h2v4h2V8h2v4h2V8h2v8z"}}]})(props);
	};
	module.exports.MdStyle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2.53 19.65l1.34.56v-9.03l-2.43 5.86c-.41 1.02.08 2.19 1.09 2.61zm19.5-3.7L17.07 3.98c-.31-.75-1.04-1.21-1.81-1.23-.26 0-.53.04-.79.15L7.1 5.95c-.75.31-1.21 1.03-1.23 1.8-.01.27.04.54.15.8l4.96 11.97c.31.76 1.05 1.22 1.83 1.23.26 0 .52-.05.77-.15l7.36-3.05c1.02-.42 1.51-1.59 1.09-2.6zM7.88 8.75c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-2 11c0 1.1.9 2 2 2h1.45l-3.45-8.34v6.34z"}}]})(props);
	};
	module.exports.MdSwitchCamera = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 4h-3.17L15 2H9L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-5 11.5V13H9v2.5L5.5 12 9 8.5V11h6V8.5l3.5 3.5-3.5 3.5z"}}]})(props);
	};
	module.exports.MdSwitchVideo = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 9.5V6c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3.5l4 4v-13l-4 4zm-5 6V13H7v2.5L3.5 12 7 8.5V11h6V8.5l3.5 3.5-3.5 3.5z"}}]})(props);
	};
	module.exports.MdTagFaces = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z"}}]})(props);
	};
	module.exports.MdTexture = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.51 3.08L3.08 19.51c.09.34.27.65.51.9.25.24.56.42.9.51L20.93 4.49c-.19-.69-.73-1.23-1.42-1.41zM11.88 3L3 11.88v2.83L14.71 3h-2.83zM5 3c-1.1 0-2 .9-2 2v2l4-4H5zm14 18c.55 0 1.05-.22 1.41-.59.37-.36.59-.86.59-1.41v-2l-4 4h2zm-9.71 0h2.83L21 12.12V9.29L9.29 21z"}}]})(props);
	};
	module.exports.MdTimelapse = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.24 7.76C15.07 6.59 13.54 6 12 6v6l-4.24 4.24c2.34 2.34 6.14 2.34 8.49 0 2.34-2.34 2.34-6.14-.01-8.48zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}}]})(props);
	};
	module.exports.MdTimer10 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M0 7.72V9.4l3-1V18h2V6h-.25L0 7.72zm23.78 6.65c-.14-.28-.35-.53-.63-.74-.28-.21-.61-.39-1.01-.53s-.85-.27-1.35-.38c-.35-.07-.64-.15-.87-.23-.23-.08-.41-.16-.55-.25-.14-.09-.23-.19-.28-.3-.05-.11-.08-.24-.08-.39 0-.14.03-.28.09-.41.06-.13.15-.25.27-.34.12-.1.27-.18.45-.24s.4-.09.64-.09c.25 0 .47.04.66.11.19.07.35.17.48.29.13.12.22.26.29.42.06.16.1.32.1.49h1.95c0-.39-.08-.75-.24-1.09-.16-.34-.39-.63-.69-.88-.3-.25-.66-.44-1.09-.59C21.49 9.07 21 9 20.46 9c-.51 0-.98.07-1.39.21-.41.14-.77.33-1.06.57-.29.24-.51.52-.67.84-.16.32-.23.65-.23 1.01s.08.69.23.96c.15.28.36.52.64.73.27.21.6.38.98.53.38.14.81.26 1.27.36.39.08.71.17.95.26s.43.19.57.29c.13.1.22.22.27.34.05.12.07.25.07.39 0 .32-.13.57-.4.77-.27.2-.66.29-1.17.29-.22 0-.43-.02-.64-.08-.21-.05-.4-.13-.56-.24-.17-.11-.3-.26-.41-.44-.11-.18-.17-.41-.18-.67h-1.89c0 .36.08.71.24 1.05.16.34.39.65.7.93.31.27.69.49 1.15.66.46.17.98.25 1.58.25.53 0 1.01-.06 1.44-.19.43-.13.8-.31 1.11-.54.31-.23.54-.51.71-.83.17-.32.25-.67.25-1.06-.02-.4-.09-.74-.24-1.02zm-9.96-7.32c-.34-.4-.75-.7-1.23-.88-.47-.18-1.01-.27-1.59-.27-.58 0-1.11.09-1.59.27-.48.18-.89.47-1.23.88-.34.41-.6.93-.79 1.59-.18.65-.28 1.45-.28 2.39v1.92c0 .94.09 1.74.28 2.39.19.66.45 1.19.8 1.6.34.41.75.71 1.23.89.48.18 1.01.28 1.59.28.59 0 1.12-.09 1.59-.28.48-.18.88-.48 1.22-.89.34-.41.6-.94.78-1.6.18-.65.28-1.45.28-2.39v-1.92c0-.94-.09-1.74-.28-2.39-.18-.66-.44-1.19-.78-1.59zm-.92 6.17c0 .6-.04 1.11-.12 1.53-.08.42-.2.76-.36 1.02-.16.26-.36.45-.59.57-.23.12-.51.18-.82.18-.3 0-.58-.06-.82-.18s-.44-.31-.6-.57c-.16-.26-.29-.6-.38-1.02-.09-.42-.13-.93-.13-1.53v-2.5c0-.6.04-1.11.13-1.52.09-.41.21-.74.38-1 .16-.25.36-.43.6-.55.24-.11.51-.17.81-.17.31 0 .58.06.81.17.24.11.44.29.6.55.16.25.29.58.37.99.08.41.13.92.13 1.52v2.51z"}}]})(props);
	};
	module.exports.MdTimer = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 1H9v2h6V1zm-4 13h2V8h-2v6zm8.03-6.61l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"}}]})(props);
	};
	module.exports.MdTimer3 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.61 12.97c-.16-.24-.36-.46-.62-.65-.25-.19-.56-.35-.93-.48.3-.14.57-.3.8-.5.23-.2.42-.41.57-.64.15-.23.27-.46.34-.71.08-.24.11-.49.11-.73 0-.55-.09-1.04-.28-1.46-.18-.42-.44-.77-.78-1.06-.33-.28-.73-.5-1.2-.64-.45-.13-.97-.2-1.53-.2-.55 0-1.06.08-1.52.24-.47.17-.87.4-1.2.69-.33.29-.6.63-.78 1.03-.2.39-.29.83-.29 1.29h1.98c0-.26.05-.49.14-.69.09-.2.22-.38.38-.52.17-.14.36-.25.58-.33.22-.08.46-.12.73-.12.61 0 1.06.16 1.36.47.3.31.44.75.44 1.32 0 .27-.04.52-.12.74-.08.22-.21.41-.38.57-.17.16-.38.28-.63.37-.25.09-.55.13-.89.13H6.72v1.57H7.9c.34 0 .64.04.91.11.27.08.5.19.69.35.19.16.34.36.44.61.1.24.16.54.16.87 0 .62-.18 1.09-.53 1.42-.35.33-.84.49-1.45.49-.29 0-.56-.04-.8-.13-.24-.08-.44-.2-.61-.36-.17-.16-.3-.34-.39-.56-.09-.22-.14-.46-.14-.72H4.19c0 .55.11 1.03.32 1.45.21.42.5.77.86 1.05s.77.49 1.24.63.96.21 1.48.21c.57 0 1.09-.08 1.58-.23.49-.15.91-.38 1.26-.68.36-.3.64-.66.84-1.1.2-.43.3-.93.3-1.48 0-.29-.04-.58-.11-.86-.08-.25-.19-.51-.35-.76zm9.26 1.4c-.14-.28-.35-.53-.63-.74-.28-.21-.61-.39-1.01-.53s-.85-.27-1.35-.38c-.35-.07-.64-.15-.87-.23-.23-.08-.41-.16-.55-.25-.14-.09-.23-.19-.28-.3-.05-.11-.08-.24-.08-.39s.03-.28.09-.41c.06-.13.15-.25.27-.34.12-.1.27-.18.45-.24s.4-.09.64-.09c.25 0 .47.04.66.11.19.07.35.17.48.29.13.12.22.26.29.42.06.16.1.32.1.49h1.95c0-.39-.08-.75-.24-1.09-.16-.34-.39-.63-.69-.88-.3-.25-.66-.44-1.09-.59-.43-.15-.92-.22-1.46-.22-.51 0-.98.07-1.39.21-.41.14-.77.33-1.06.57-.29.24-.51.52-.67.84-.16.32-.23.65-.23 1.01s.08.68.23.96c.15.28.37.52.64.73.27.21.6.38.98.53.38.14.81.26 1.27.36.39.08.71.17.95.26s.43.19.57.29c.13.1.22.22.27.34.05.12.07.25.07.39 0 .32-.13.57-.4.77-.27.2-.66.29-1.17.29-.22 0-.43-.02-.64-.08-.21-.05-.4-.13-.56-.24-.17-.11-.3-.26-.41-.44-.11-.18-.17-.41-.18-.67h-1.89c0 .36.08.71.24 1.05.16.34.39.65.7.93.31.27.69.49 1.15.66.46.17.98.25 1.58.25.53 0 1.01-.06 1.44-.19.43-.13.8-.31 1.11-.54.31-.23.54-.51.71-.83.17-.32.25-.67.25-1.06-.02-.4-.09-.74-.24-1.02z"}}]})(props);
	};
	module.exports.MdTimerOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.04 4.55l-1.42 1.42C16.07 4.74 14.12 4 12 4c-1.83 0-3.53.55-4.95 1.48l1.46 1.46C9.53 6.35 10.73 6 12 6c3.87 0 7 3.13 7 7 0 1.27-.35 2.47-.94 3.49l1.45 1.45C20.45 16.53 21 14.83 21 13c0-2.12-.74-4.07-1.97-5.61l1.42-1.42-1.41-1.42zM15 1H9v2h6V1zm-4 8.44l2 2V8h-2v1.44zM3.02 4L1.75 5.27 4.5 8.03C3.55 9.45 3 11.16 3 13c0 4.97 4.02 9 9 9 1.84 0 3.55-.55 4.98-1.5l2.5 2.5 1.27-1.27-7.71-7.71L3.02 4zM12 20c-3.87 0-7-3.13-7-7 0-1.28.35-2.48.95-3.52l9.56 9.56c-1.03.61-2.23.96-3.51.96z"}}]})(props);
	};
	module.exports.MdTonality = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.94-.49-7-3.85-7-7.93s3.05-7.44 7-7.93v15.86zm2-15.86c1.03.13 2 .45 2.87.93H13v-.93zM13 7h5.24c.25.31.48.65.68 1H13V7zm0 3h6.74c.08.33.15.66.19 1H13v-1zm0 9.93V19h2.87c-.87.48-1.84.8-2.87.93zM18.24 17H13v-1h5.92c-.2.35-.43.69-.68 1zm1.5-3H13v-1h6.93c-.04.34-.11.67-.19 1z"}}]})(props);
	};
	module.exports.MdTransform = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 18v-2H8V4h2L7 1 4 4h2v2H2v2h4v8c0 1.1.9 2 2 2h8v2h-2l3 3 3-3h-2v-2h4zM10 8h6v6h2V8c0-1.1-.9-2-2-2h-6v2z"}}]})(props);
	};
	module.exports.MdTune = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z"}}]})(props);
	};
	module.exports.MdViewComfy = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 9h4V5H3v4zm0 5h4v-4H3v4zm5 0h4v-4H8v4zm5 0h4v-4h-4v4zM8 9h4V5H8v4zm5-4v4h4V5h-4zm5 9h4v-4h-4v4zM3 19h4v-4H3v4zm5 0h4v-4H8v4zm5 0h4v-4h-4v4zm5 0h4v-4h-4v4zm0-14v4h4V5h-4z"}}]})(props);
	};
	module.exports.MdViewCompact = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 19h6v-7H3v7zm7 0h12v-7H10v7zM3 5v6h19V5H3z"}}]})(props);
	};
	module.exports.MdVignette = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-9 15c-4.42 0-8-2.69-8-6s3.58-6 8-6 8 2.69 8 6-3.58 6-8 6z"}}]})(props);
	};
	module.exports.MdWbAuto = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6.85 12.65h2.3L8 9l-1.15 3.65zM22 7l-1.2 6.29L19.3 7h-1.6l-1.49 6.29L15 7h-.76C12.77 5.17 10.53 4 8 4c-4.42 0-8 3.58-8 8s3.58 8 8 8c3.13 0 5.84-1.81 7.15-4.43l.1.43H17l1.5-6.1L20 16h1.75l2.05-9H22zm-11.7 9l-.7-2H6.4l-.7 2H3.8L7 7h2l3.2 9h-1.9z"}}]})(props);
	};
	module.exports.MdWbCloudy = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.36 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.64-4.96z"}}]})(props);
	};
	module.exports.MdWbIncandescent = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3.55 18.54l1.41 1.41 1.79-1.8-1.41-1.41-1.79 1.8zM11 22.45h2V19.5h-2v2.95zM4 10.5H1v2h3v-2zm11-4.19V1.5H9v4.81C7.21 7.35 6 9.28 6 11.5c0 3.31 2.69 6 6 6s6-2.69 6-6c0-2.22-1.21-4.15-3-5.19zm5 4.19v2h3v-2h-3zm-2.76 7.66l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4z"}}]})(props);
	};
	module.exports.MdWbIridescent = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 14.5h14v-6H5v6zM11 .55V3.5h2V.55h-2zm8.04 2.5l-1.79 1.79 1.41 1.41 1.8-1.79-1.42-1.41zM13 22.45V19.5h-2v2.95h2zm7.45-3.91l-1.8-1.79-1.41 1.41 1.79 1.8 1.42-1.42zM3.55 4.46l1.79 1.79 1.41-1.41-1.79-1.79-1.41 1.41zm1.41 15.49l1.79-1.8-1.41-1.41-1.79 1.79 1.41 1.42z"}}]})(props);
	};
	module.exports.MdWbSunny = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6.76 4.84l-1.8-1.79-1.41 1.41 1.79 1.79 1.42-1.41zM4 10.5H1v2h3v-2zm9-9.95h-2V3.5h2V.55zm7.45 3.91l-1.41-1.41-1.79 1.79 1.41 1.41 1.79-1.79zm-3.21 13.7l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4zM20 10.5v2h3v-2h-3zm-8-5c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm-1 16.95h2V19.5h-2v2.95zm-7.45-3.91l1.41 1.41 1.79-1.8-1.41-1.41-1.79 1.8z"}}]})(props);
	};
	module.exports.MdAddLocation = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C8.14 2 5 5.14 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.86-3.14-7-7-7zm4 8h-3v3h-2v-3H8V8h3V5h2v3h3v2z"}}]})(props);
	};
	module.exports.MdBeenhere = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 1H5c-1.1 0-1.99.9-1.99 2L3 15.93c0 .69.35 1.3.88 1.66L12 23l8.11-5.41c.53-.36.88-.97.88-1.66L21 3c0-1.1-.9-2-2-2zm-9 15l-5-5 1.41-1.41L10 13.17l7.59-7.59L19 7l-9 9z"}}]})(props);
	};
	module.exports.MdDirections = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.71 11.29l-9-9c-.39-.39-1.02-.39-1.41 0l-9 9c-.39.39-.39 1.02 0 1.41l9 9c.39.39 1.02.39 1.41 0l9-9c.39-.38.39-1.01 0-1.41zM14 14.5V12h-4v3H8v-4c0-.55.45-1 1-1h5V7.5l3.5 3.5-3.5 3.5z"}}]})(props);
	};
	module.exports.MdDirectionsBike = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.5 5.5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM5 12c-2.8 0-5 2.2-5 5s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5zm0 8.5c-1.9 0-3.5-1.6-3.5-3.5s1.6-3.5 3.5-3.5 3.5 1.6 3.5 3.5-1.6 3.5-3.5 3.5zm5.8-10l2.4-2.4.8.8c1.3 1.3 3 2.1 5.1 2.1V9c-1.5 0-2.7-.6-3.6-1.5l-1.9-1.9c-.5-.4-1-.6-1.6-.6s-1.1.2-1.4.6L7.8 8.4c-.4.4-.6.9-.6 1.4 0 .6.2 1.1.6 1.4L11 14v5h2v-6.2l-2.2-2.3zM19 12c-2.8 0-5 2.2-5 5s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5zm0 8.5c-1.9 0-3.5-1.6-3.5-3.5s1.6-3.5 3.5-3.5 3.5 1.6 3.5 3.5-1.6 3.5-3.5 3.5z"}}]})(props);
	};
	module.exports.MdDirectionsBoat = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 21c-1.39 0-2.78-.47-4-1.32-2.44 1.71-5.56 1.71-8 0C6.78 20.53 5.39 21 4 21H2v2h2c1.38 0 2.74-.35 4-.99 2.52 1.29 5.48 1.29 8 0 1.26.65 2.62.99 4 .99h2v-2h-2zM3.95 19H4c1.6 0 3.02-.88 4-2 .98 1.12 2.4 2 4 2s3.02-.88 4-2c.98 1.12 2.4 2 4 2h.05l1.89-6.68c.08-.26.06-.54-.06-.78s-.34-.42-.6-.5L20 10.62V6c0-1.1-.9-2-2-2h-3V1H9v3H6c-1.1 0-2 .9-2 2v4.62l-1.29.42c-.26.08-.48.26-.6.5s-.15.52-.06.78L3.95 19zM6 6h12v3.97L12 8 6 9.97V6z"}}]})(props);
	};
	module.exports.MdDirectionsBus = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 16c0 .88.39 1.67 1 2.22V20c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1h8v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1.78c.61-.55 1-1.34 1-2.22V6c0-3.5-3.58-4-8-4s-8 .5-8 4v10zm3.5 1c-.83 0-1.5-.67-1.5-1.5S6.67 14 7.5 14s1.5.67 1.5 1.5S8.33 17 7.5 17zm9 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm1.5-6H6V6h12v5z"}}]})(props);
	};
	module.exports.MdDirectionsCar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.92 6.01C18.72 5.42 18.16 5 17.5 5h-11c-.66 0-1.21.42-1.42 1.01L3 12v8c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1h12v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-8l-2.08-5.99zM6.5 16c-.83 0-1.5-.67-1.5-1.5S5.67 13 6.5 13s1.5.67 1.5 1.5S7.33 16 6.5 16zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM5 11l1.5-4.5h11L19 11H5z"}}]})(props);
	};
	module.exports.MdDirectionsRailway = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 15.5C4 17.43 5.57 19 7.5 19L6 20.5v.5h12v-.5L16.5 19c1.93 0 3.5-1.57 3.5-3.5V5c0-3.5-3.58-4-8-4s-8 .5-8 4v10.5zm8 1.5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm6-7H6V5h12v5z"}}]})(props);
	};
	module.exports.MdDirectionsRun = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13.49 5.48c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-3.6 13.9l1-4.4 2.1 2v6h2v-7.5l-2.1-2 .6-3c1.3 1.5 3.3 2.5 5.5 2.5v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1l-5.2 2.2v4.7h2v-3.4l1.8-.7-1.6 8.1-4.9-1-.4 2 7 1.4z"}}]})(props);
	};
	module.exports.MdDirectionsSubway = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2c-4.42 0-8 .5-8 4v9.5C4 17.43 5.57 19 7.5 19L6 20.5v.5h12v-.5L16.5 19c1.93 0 3.5-1.57 3.5-3.5V6c0-3.5-3.58-4-8-4zM7.5 17c-.83 0-1.5-.67-1.5-1.5S6.67 14 7.5 14s1.5.67 1.5 1.5S8.33 17 7.5 17zm3.5-6H6V6h5v5zm5.5 6c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm1.5-6h-5V6h5v5z"}}]})(props);
	};
	module.exports.MdDirectionsTransit = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2c-4.42 0-8 .5-8 4v9.5C4 17.43 5.57 19 7.5 19L6 20.5v.5h12v-.5L16.5 19c1.93 0 3.5-1.57 3.5-3.5V6c0-3.5-3.58-4-8-4zM7.5 17c-.83 0-1.5-.67-1.5-1.5S6.67 14 7.5 14s1.5.67 1.5 1.5S8.33 17 7.5 17zm3.5-6H6V6h5v5zm5.5 6c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm1.5-6h-5V6h5v5z"}}]})(props);
	};
	module.exports.MdDirectionsWalk = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13.5 5.5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM9.8 8.9L7 23h2.1l1.8-8 2.1 2v6h2v-7.5l-2.1-2 .6-3C14.8 12 16.8 13 19 13v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1L6 8.3V13h2V9.6l1.8-.7"}}]})(props);
	};
	module.exports.MdEditLocation = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C8.14 2 5 5.14 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.86-3.14-7-7-7zm-1.56 10H9v-1.44l3.35-3.34 1.43 1.43L10.44 12zm4.45-4.45l-.7.7-1.44-1.44.7-.7c.15-.15.39-.15.54 0l.9.9c.15.15.15.39 0 .54z"}}]})(props);
	};
	module.exports.MdEvStation = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.77 7.23l.01-.01-3.72-3.72L15 4.56l2.11 2.11c-.94.36-1.61 1.26-1.61 2.33 0 1.38 1.12 2.5 2.5 2.5.36 0 .69-.08 1-.21v7.21c0 .55-.45 1-1 1s-1-.45-1-1V14c0-1.1-.9-2-2-2h-1V5c0-1.1-.9-2-2-2H6c-1.1 0-2 .9-2 2v16h10v-7.5h1.5v5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V9c0-.69-.28-1.32-.73-1.77zM18 10c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM8 18v-4.5H6L10 6v5h2l-4 7z"}}]})(props);
	};
	module.exports.MdFlight = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10.18 9"}},{"tag":"path","attr":{"d":"M21 16v-2l-8-5V3.5c0-.83-.67-1.5-1.5-1.5S10 2.67 10 3.5V9l-8 5v2l8-2.5V19l-2 1.5V22l3.5-1 3.5 1v-1.5L13 19v-5.5l8 2.5z"}}]})(props);
	};
	module.exports.MdHotel = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 13c1.66 0 3-1.34 3-3S8.66 7 7 7s-3 1.34-3 3 1.34 3 3 3zm12-6h-8v7H3V5H1v15h2v-3h18v3h2v-9c0-2.21-1.79-4-4-4z"}}]})(props);
	};
	module.exports.MdLayers = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.99 18.54l-7.37-5.73L3 14.07l9 7 9-7-1.63-1.27-7.38 5.74zM12 16l7.36-5.73L21 9l-9-7-9 7 1.63 1.27L12 16z"}}]})(props);
	};
	module.exports.MdLayersClear = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.81 14.99l1.19-.92-1.43-1.43-1.19.92 1.43 1.43zm-.45-4.72L21 9l-9-7-2.91 2.27 7.87 7.88 2.4-1.88zM3.27 1L2 2.27l4.22 4.22L3 9l1.63 1.27L12 16l2.1-1.63 1.43 1.43L12 18.54l-7.37-5.73L3 14.07l9 7 4.95-3.85L20.73 21 22 19.73 3.27 1z"}}]})(props);
	};
	module.exports.MdLocalActivity = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 12c0-1.1.9-2 2-2V6c0-1.1-.9-2-2-2H4c-1.1 0-1.99.9-1.99 2v4c1.1 0 1.99.9 1.99 2s-.89 2-2 2v4c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2v-4c-1.1 0-2-.9-2-2zm-4.42 4.8L12 14.5l-3.58 2.3 1.08-4.12-3.29-2.69 4.24-.25L12 5.8l1.54 3.95 4.24.25-3.29 2.69 1.09 4.11z"}}]})(props);
	};
	module.exports.MdLocalAirport = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 16v-2l-8-5V3.5c0-.83-.67-1.5-1.5-1.5S10 2.67 10 3.5V9l-8 5v2l8-2.5V19l-2 1.5V22l3.5-1 3.5 1v-1.5L13 19v-5.5l8 2.5z"}}]})(props);
	};
	module.exports.MdLocalAtm = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 17h2v-1h1c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1h-3v-1h4V8h-2V7h-2v1h-1c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h3v1H9v2h2v1zm9-13H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4V6h16v12z"}}]})(props);
	};
	module.exports.MdLocalBar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 5V3H3v2l8 9v5H6v2h12v-2h-5v-5l8-9zM7.43 7L5.66 5h12.69l-1.78 2H7.43z"}}]})(props);
	};
	module.exports.MdLocalCafe = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 3H4v10c0 2.21 1.79 4 4 4h6c2.21 0 4-1.79 4-4v-3h2c1.11 0 2-.89 2-2V5c0-1.11-.89-2-2-2zm0 5h-2V5h2v3zM2 21h18v-2H2v2z"}}]})(props);
	};
	module.exports.MdLocalCarWash = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 5c.83 0 1.5-.67 1.5-1.5 0-1-1.5-2.7-1.5-2.7s-1.5 1.7-1.5 2.7c0 .83.67 1.5 1.5 1.5zm-5 0c.83 0 1.5-.67 1.5-1.5 0-1-1.5-2.7-1.5-2.7s-1.5 1.7-1.5 2.7c0 .83.67 1.5 1.5 1.5zM7 5c.83 0 1.5-.67 1.5-1.5C8.5 2.5 7 .8 7 .8S5.5 2.5 5.5 3.5C5.5 4.33 6.17 5 7 5zm11.92 3.01C18.72 7.42 18.16 7 17.5 7h-11c-.66 0-1.21.42-1.42 1.01L3 14v8c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1h12v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-8l-2.08-5.99zM6.5 18c-.83 0-1.5-.67-1.5-1.5S5.67 15 6.5 15s1.5.67 1.5 1.5S7.33 18 6.5 18zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM5 13l1.5-4.5h11L19 13H5z"}}]})(props);
	};
	module.exports.MdLocalConvenienceStore = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 7V4H5v3H2v13h8v-4h4v4h8V7h-3zm-8 3H9v1h2v1H8V9h2V8H8V7h3v3zm5 2h-1v-2h-2V7h1v2h1V7h1v5z"}}]})(props);
	};
	module.exports.MdLocalDining = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8.1 13.34l2.83-2.83L3.91 3.5c-1.56 1.56-1.56 4.09 0 5.66l4.19 4.18zm6.78-1.81c1.53.71 3.68.21 5.27-1.38 1.91-1.91 2.28-4.65.81-6.12-1.46-1.46-4.2-1.1-6.12.81-1.59 1.59-2.09 3.74-1.38 5.27L3.7 19.87l1.41 1.41L12 14.41l6.88 6.88 1.41-1.41L13.41 13l1.47-1.47z"}}]})(props);
	};
	module.exports.MdLocalDrink = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 2l2.01 18.23C5.13 21.23 5.97 22 7 22h10c1.03 0 1.87-.77 1.99-1.77L21 2H3zm9 17c-1.66 0-3-1.34-3-3 0-2 3-5.4 3-5.4s3 3.4 3 5.4c0 1.66-1.34 3-3 3zm6.33-11H5.67l-.44-4h13.53l-.43 4z"}}]})(props);
	};
	module.exports.MdLocalFlorist = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 22c4.97 0 9-4.03 9-9-4.97 0-9 4.03-9 9zM5.6 10.25c0 1.38 1.12 2.5 2.5 2.5.53 0 1.01-.16 1.42-.44l-.02.19c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5l-.02-.19c.4.28.89.44 1.42.44 1.38 0 2.5-1.12 2.5-2.5 0-1-.59-1.85-1.43-2.25.84-.4 1.43-1.25 1.43-2.25 0-1.38-1.12-2.5-2.5-2.5-.53 0-1.01.16-1.42.44l.02-.19C14.5 2.12 13.38 1 12 1S9.5 2.12 9.5 3.5l.02.19c-.4-.28-.89-.44-1.42-.44-1.38 0-2.5 1.12-2.5 2.5 0 1 .59 1.85 1.43 2.25-.84.4-1.43 1.25-1.43 2.25zM12 5.5c1.38 0 2.5 1.12 2.5 2.5s-1.12 2.5-2.5 2.5S9.5 9.38 9.5 8s1.12-2.5 2.5-2.5zM3 13c0 4.97 4.03 9 9 9 0-4.97-4.03-9-9-9z"}}]})(props);
	};
	module.exports.MdLocalGasStation = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.77 7.23l.01-.01-3.72-3.72L15 4.56l2.11 2.11c-.94.36-1.61 1.26-1.61 2.33 0 1.38 1.12 2.5 2.5 2.5.36 0 .69-.08 1-.21v7.21c0 .55-.45 1-1 1s-1-.45-1-1V14c0-1.1-.9-2-2-2h-1V5c0-1.1-.9-2-2-2H6c-1.1 0-2 .9-2 2v16h10v-7.5h1.5v5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V9c0-.69-.28-1.32-.73-1.77zM12 10H6V5h6v5zm6 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"}}]})(props);
	};
	module.exports.MdLocalGroceryStore = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdLocalHospital = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.1 0-1.99.9-1.99 2L3 19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 11h-4v4h-4v-4H6v-4h4V6h4v4h4v4z"}}]})(props);
	};
	module.exports.MdLocalHotel = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 13c1.66 0 3-1.34 3-3S8.66 7 7 7s-3 1.34-3 3 1.34 3 3 3zm12-6h-8v7H3V5H1v15h2v-3h18v3h2v-9c0-2.21-1.79-4-4-4z"}}]})(props);
	};
	module.exports.MdLocalLaundryService = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9.17 16.83c1.56 1.56 4.1 1.56 5.66 0 1.56-1.56 1.56-4.1 0-5.66l-5.66 5.66zM18 2.01L6 2c-1.11 0-2 .89-2 2v16c0 1.11.89 2 2 2h12c1.11 0 2-.89 2-2V4c0-1.11-.89-1.99-2-1.99zM10 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM7 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm5 16c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"}}]})(props);
	};
	module.exports.MdLocalLibrary = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 11.55C9.64 9.35 6.48 8 3 8v11c3.48 0 6.64 1.35 9 3.55 2.36-2.19 5.52-3.55 9-3.55V8c-3.48 0-6.64 1.35-9 3.55zM12 8c1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3 1.34 3 3 3z"}}]})(props);
	};
	module.exports.MdLocalMall = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 6h-2c0-2.76-2.24-5-5-5S7 3.24 7 6H5c-1.1 0-1.99.9-1.99 2L3 20c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-7-3c1.66 0 3 1.34 3 3H9c0-1.66 1.34-3 3-3zm0 10c-2.76 0-5-2.24-5-5h2c0 1.66 1.34 3 3 3s3-1.34 3-3h2c0 2.76-2.24 5-5 5z"}}]})(props);
	};
	module.exports.MdLocalMovies = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 3v2h-2V3H8v2H6V3H4v18h2v-2h2v2h8v-2h2v2h2V3h-2zM8 17H6v-2h2v2zm0-4H6v-2h2v2zm0-4H6V7h2v2zm10 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V7h2v2z"}}]})(props);
	};
	module.exports.MdLocalOffer = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z"}}]})(props);
	};
	module.exports.MdLocalParking = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 3H6v18h4v-6h3c3.31 0 6-2.69 6-6s-2.69-6-6-6zm.2 8H10V7h3.2c1.1 0 2 .9 2 2s-.9 2-2 2z"}}]})(props);
	};
	module.exports.MdLocalPharmacy = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 5h-2.64l1.14-3.14L17.15 1l-1.46 4H3v2l2 6-2 6v2h18v-2l-2-6 2-6V5zm-5 9h-3v3h-2v-3H8v-2h3V9h2v3h3v2z"}}]})(props);
	};
	module.exports.MdLocalPhone = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z"}}]})(props);
	};
	module.exports.MdLocalPizza = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C8.43 2 5.23 3.54 3.01 6L12 22l8.99-16C18.78 3.55 15.57 2 12 2zM7 7c0-1.1.9-2 2-2s2 .9 2 2-.9 2-2 2-2-.9-2-2zm5 8c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"}}]})(props);
	};
	module.exports.MdLocalPlay = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 12c0-1.1.9-2 2-2V6c0-1.1-.9-2-2-2H4c-1.1 0-1.99.9-1.99 2v4c1.1 0 1.99.9 1.99 2s-.89 2-2 2v4c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2v-4c-1.1 0-2-.9-2-2zm-4.42 4.8L12 14.5l-3.58 2.3 1.08-4.12-3.29-2.69 4.24-.25L12 5.8l1.54 3.95 4.24.25-3.29 2.69 1.09 4.11z"}}]})(props);
	};
	module.exports.MdLocalPostOffice = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"}}]})(props);
	};
	module.exports.MdLocalPrintshop = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z"}}]})(props);
	};
	module.exports.MdLocalSee = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"12","cy":"12","r":"3.2"}},{"tag":"path","attr":{"d":"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"}}]})(props);
	};
	module.exports.MdLocalShipping = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 8h-3V4H3c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zM6 18.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm13.5-9l1.96 2.5H17V9.5h2.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}}]})(props);
	};
	module.exports.MdLocalTaxi = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.92 6.01C18.72 5.42 18.16 5 17.5 5H15V3H9v2H6.5c-.66 0-1.21.42-1.42 1.01L3 12v8c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1h12v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-8l-2.08-5.99zM6.5 16c-.83 0-1.5-.67-1.5-1.5S5.67 13 6.5 13s1.5.67 1.5 1.5S7.33 16 6.5 16zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM5 11l1.5-4.5h11L19 11H5z"}}]})(props);
	};
	module.exports.MdMap = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.5 3l-.16.03L15 5.1 9 3 3.36 4.9c-.21.07-.36.25-.36.48V20.5c0 .28.22.5.5.5l.16-.03L9 18.9l6 2.1 5.64-1.9c.21-.07.36-.25.36-.48V3.5c0-.28-.22-.5-.5-.5zM15 19l-6-2.11V5l6 2.11V19z"}}]})(props);
	};
	module.exports.MdMyLocation = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"}}]})(props);
	};
	module.exports.MdNavigation = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2L4.5 20.29l.71.71L12 18l6.79 3 .71-.71z"}}]})(props);
	};
	module.exports.MdNearMe = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3L3 10.53v.98l6.84 2.65L12.48 21h.98L21 3z"}}]})(props);
	};
	module.exports.MdPersonPin = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 2H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h4l3 3 3-3h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 3.3c1.49 0 2.7 1.21 2.7 2.7 0 1.49-1.21 2.7-2.7 2.7-1.49 0-2.7-1.21-2.7-2.7 0-1.49 1.21-2.7 2.7-2.7zM18 16H6v-.9c0-2 4-3.1 6-3.1s6 1.1 6 3.1v.9z"}}]})(props);
	};
	module.exports.MdPersonPinCircle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C8.14 2 5 5.14 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.86-3.14-7-7-7zm0 2c1.1 0 2 .9 2 2 0 1.11-.9 2-2 2s-2-.89-2-2c0-1.1.9-2 2-2zm0 10c-1.67 0-3.14-.85-4-2.15.02-1.32 2.67-2.05 4-2.05s3.98.73 4 2.05c-.86 1.3-2.33 2.15-4 2.15z"}}]})(props);
	};
	module.exports.MdPinDrop = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 8c0-3.31-2.69-6-6-6S6 4.69 6 8c0 4.5 6 11 6 11s6-6.5 6-11zm-8 0c0-1.1.9-2 2-2s2 .9 2 2-.89 2-2 2c-1.1 0-2-.9-2-2zM5 20v2h14v-2H5z"}}]})(props);
	};
	module.exports.MdPlace = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"}}]})(props);
	};
	module.exports.MdRateReview = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z"}}]})(props);
	};
	module.exports.MdRestaurant = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 9H9V2H7v7H5V2H3v7c0 2.12 1.66 3.84 3.75 3.97V22h2.5v-9.03C11.34 12.84 13 11.12 13 9V2h-2v7zm5-3v8h2.5v8H21V2c-2.76 0-5 2.24-5 4z"}}]})(props);
	};
	module.exports.MdRestaurantMenu = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8.1 13.34l2.83-2.83L3.91 3.5c-1.56 1.56-1.56 4.09 0 5.66l4.19 4.18zm6.78-1.81c1.53.71 3.68.21 5.27-1.38 1.91-1.91 2.28-4.65.81-6.12-1.46-1.46-4.2-1.1-6.12.81-1.59 1.59-2.09 3.74-1.38 5.27L3.7 19.87l1.41 1.41L12 14.41l6.88 6.88 1.41-1.41L13.41 13l1.47-1.47z"}}]})(props);
	};
	module.exports.MdSatellite = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM5 4.99h3C8 6.65 6.66 8 5 8V4.99zM5 12v-2c2.76 0 5-2.25 5-5.01h2C12 8.86 8.87 12 5 12zm0 6l3.5-4.5 2.5 3.01L14.5 12l4.5 6H5z"}}]})(props);
	};
	module.exports.MdStoreMallDirectory = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 4H4v2h16V4zm1 10v-2l-1-5H4l-1 5v2h1v6h10v-6h4v6h2v-6h1zm-9 4H6v-4h6v4z"}}]})(props);
	};
	module.exports.MdStreetview = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12.56 14.33c-.34.27-.56.7-.56 1.17V21h7c1.1 0 2-.9 2-2v-5.98c-.94-.33-1.95-.52-3-.52-2.03 0-3.93.7-5.44 1.83z"}},{"tag":"circle","attr":{"cx":"18","cy":"6","r":"5"}},{"tag":"path","attr":{"d":"M11.5 6c0-1.08.27-2.1.74-3H5c-1.1 0-2 .9-2 2v14c0 .55.23 1.05.59 1.41l9.82-9.82C12.23 9.42 11.5 7.8 11.5 6z"}}]})(props);
	};
	module.exports.MdSubway = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"15.5","cy":"16","r":"1"}},{"tag":"circle","attr":{"cx":"8.5","cy":"16","r":"1"}},{"tag":"path","attr":{"d":"M7.01 9h10v5h-10zM17.8 2.8C16 2.09 13.86 2 12 2c-1.86 0-4 .09-5.8.8C3.53 3.84 2 6.05 2 8.86V22h20V8.86c0-2.81-1.53-5.02-4.2-6.06zm.2 13.08c0 1.45-1.18 2.62-2.63 2.62l1.13 1.12V20H15l-1.5-1.5h-2.83L9.17 20H7.5v-.38l1.12-1.12C7.18 18.5 6 17.32 6 15.88V9c0-2.63 3-3 6-3 3.32 0 6 .38 6 3v6.88z"}}]})(props);
	};
	module.exports.MdTerrain = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 6l-3.75 5 2.85 3.8-1.6 1.2C9.81 13.75 7 10 7 10l-6 8h22L14 6z"}}]})(props);
	};
	module.exports.MdTraffic = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 10h-3V8.86c1.72-.45 3-2 3-3.86h-3V4c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v1H4c0 1.86 1.28 3.41 3 3.86V10H4c0 1.86 1.28 3.41 3 3.86V15H4c0 1.86 1.28 3.41 3 3.86V20c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-1.14c1.72-.45 3-2 3-3.86h-3v-1.14c1.72-.45 3-2 3-3.86zm-8 9c-1.11 0-2-.9-2-2s.89-2 2-2c1.1 0 2 .9 2 2s-.89 2-2 2zm0-5c-1.11 0-2-.9-2-2s.89-2 2-2c1.1 0 2 .9 2 2s-.89 2-2 2zm0-5c-1.11 0-2-.9-2-2 0-1.11.89-2 2-2 1.1 0 2 .89 2 2 0 1.1-.89 2-2 2z"}}]})(props);
	};
	module.exports.MdTrain = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2c-4 0-8 .5-8 4v9.5C4 17.43 5.57 19 7.5 19L6 20.5v.5h2.23l2-2H14l2 2h2v-.5L16.5 19c1.93 0 3.5-1.57 3.5-3.5V6c0-3.5-3.58-4-8-4zM7.5 17c-.83 0-1.5-.67-1.5-1.5S6.67 14 7.5 14s1.5.67 1.5 1.5S8.33 17 7.5 17zm3.5-7H6V6h5v4zm2 0V6h5v4h-5zm3.5 7c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}}]})(props);
	};
	module.exports.MdTram = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 16.94V8.5c0-2.79-2.61-3.4-6.01-3.49l.76-1.51H17V2H7v1.5h4.75l-.76 1.52C7.86 5.11 5 5.73 5 8.5v8.44c0 1.45 1.19 2.66 2.59 2.97L6 21.5v.5h2.23l2-2H14l2 2h2v-.5L16.5 20h-.08c1.69 0 2.58-1.37 2.58-3.06zm-7 1.56c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm5-4.5H7V9h10v5z"}}]})(props);
	};
	module.exports.MdTransferWithinAStation = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.49 15.5v-1.75L14 16.25l2.49 2.5V17H22v-1.5zm3.02 4.25H14v1.5h5.51V23L22 20.5 19.51 18zM9.5 5.5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM5.75 8.9L3 23h2.1l1.75-8L9 17v6h2v-7.55L8.95 13.4l.6-3C10.85 12 12.8 13 15 13v-2c-1.85 0-3.45-1-4.35-2.45l-.95-1.6C9.35 6.35 8.7 6 8 6c-.25 0-.5.05-.75.15L2 8.3V13h2V9.65l1.75-.75"}}]})(props);
	};
	module.exports.MdZoomOutMap = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 3l2.3 2.3-2.89 2.87 1.42 1.42L18.7 6.7 21 9V3zM3 9l2.3-2.3 2.87 2.89 1.42-1.42L6.7 5.3 9 3H3zm6 12l-2.3-2.3 2.89-2.87-1.42-1.42L5.3 17.3 3 15v6zm12-6l-2.3 2.3-2.87-2.89-1.42 1.42 2.89 2.87L15 21h6z"}}]})(props);
	};
	module.exports.MdApps = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 8h4V4H4v4zm6 12h4v-4h-4v4zm-6 0h4v-4H4v4zm0-6h4v-4H4v4zm6 0h4v-4h-4v4zm6-10v4h4V4h-4zm-6 4h4V4h-4v4zm6 6h4v-4h-4v4zm0 6h4v-4h-4v4z"}}]})(props);
	};
	module.exports.MdArrowBack = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"}}]})(props);
	};
	module.exports.MdArrowDownward = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"#010101","d":"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"}}]})(props);
	};
	module.exports.MdArrowDropDown = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 10l5 5 5-5z"}}]})(props);
	};
	module.exports.MdArrowDropDownCircle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 12l-4-4h8l-4 4z"}}]})(props);
	};
	module.exports.MdArrowDropUp = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 14l5-5 5 5z"}}]})(props);
	};
	module.exports.MdArrowForward = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"}}]})(props);
	};
	module.exports.MdArrowUpward = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"}}]})(props);
	};
	module.exports.MdCancel = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"}}]})(props);
	};
	module.exports.MdCheck = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"}}]})(props);
	};
	module.exports.MdChevronLeft = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"}}]})(props);
	};
	module.exports.MdChevronRight = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"}}]})(props);
	};
	module.exports.MdClose = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"}}]})(props);
	};
	module.exports.MdExpandLess = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z"}}]})(props);
	};
	module.exports.MdExpandMore = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"}}]})(props);
	};
	module.exports.MdFirstPage = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"}}]})(props);
	};
	module.exports.MdFullscreen = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"}}]})(props);
	};
	module.exports.MdFullscreenExit = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z"}}]})(props);
	};
	module.exports.MdLastPage = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"}}]})(props);
	};
	module.exports.MdMenu = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"}}]})(props);
	};
	module.exports.MdMoreHoriz = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdMoreVert = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdRefresh = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"}}]})(props);
	};
	module.exports.MdSubdirectoryArrowLeft = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 9l1.42 1.42L8.83 14H18V4h2v12H8.83l3.59 3.58L11 21l-6-6 6-6z"}}]})(props);
	};
	module.exports.MdSubdirectoryArrowRight = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 15l-6 6-1.42-1.42L15.17 16H4V4h2v10h9.17l-3.59-3.58L13 9l6 6z"}}]})(props);
	};
	module.exports.MdUnfoldLess = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7.41 18.59L8.83 20 12 16.83 15.17 20l1.41-1.41L12 14l-4.59 4.59zm9.18-13.18L15.17 4 12 7.17 8.83 4 7.41 5.41 12 10l4.59-4.59z"}}]})(props);
	};
	module.exports.MdUnfoldMore = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 5.83L15.17 9l1.41-1.41L12 3 7.41 7.59 8.83 9 12 5.83zm0 12.34L8.83 15l-1.41 1.41L12 21l4.59-4.59L15.17 15 12 18.17z"}}]})(props);
	};
	module.exports.MdAdb = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 16c0 3.87 3.13 7 7 7s7-3.13 7-7v-4H5v4zM16.12 4.37l2.1-2.1-.82-.83-2.3 2.31C14.16 3.28 13.12 3 12 3s-2.16.28-3.09.75L6.6 1.44l-.82.83 2.1 2.1C6.14 5.64 5 7.68 5 10v1h14v-1c0-2.32-1.14-4.36-2.88-5.63zM9 9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm6 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"}}]})(props);
	};
	module.exports.MdAirlineSeatFlat = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 11v2H9V7h9c2.21 0 4 1.79 4 4zM2 14v2h6v2h8v-2h6v-2H2zm5.14-1.9c1.16-1.19 1.14-3.08-.04-4.24-1.19-1.16-3.08-1.14-4.24.04-1.16 1.19-1.14 3.08.04 4.24 1.19 1.16 3.08 1.14 4.24-.04z"}}]})(props);
	};
	module.exports.MdAirlineSeatFlatAngled = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22.25 14.29l-.69 1.89L9.2 11.71l2.08-5.66 8.56 3.09c2.1.76 3.18 3.06 2.41 5.15zM1.5 12.14L8 14.48V19h8v-1.63L20.52 19l.69-1.89-19.02-6.86-.69 1.89zm5.8-1.94c1.49-.72 2.12-2.51 1.41-4C7.99 4.71 6.2 4.08 4.7 4.8c-1.49.71-2.12 2.5-1.4 4 .71 1.49 2.5 2.12 4 1.4z"}}]})(props);
	};
	module.exports.MdAirlineSeatIndividualSuite = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7 13c1.65 0 3-1.35 3-3S8.65 7 7 7s-3 1.35-3 3 1.35 3 3 3zm12-6h-8v7H3V7H1v10h22v-6c0-2.21-1.79-4-4-4z"}}]})(props);
	};
	module.exports.MdAirlineSeatLegroomExtra = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 12V3H2v9c0 2.76 2.24 5 5 5h6v-2H7c-1.66 0-3-1.34-3-3zm18.83 5.24c-.38-.72-1.29-.97-2.03-.63l-1.09.5-3.41-6.98c-.34-.68-1.03-1.12-1.79-1.12L11 9V3H5v8c0 1.66 1.34 3 3 3h7l3.41 7 3.72-1.7c.77-.36 1.1-1.3.7-2.06z"}}]})(props);
	};
	module.exports.MdAirlineSeatLegroomNormal = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 12V3H3v9c0 2.76 2.24 5 5 5h6v-2H8c-1.66 0-3-1.34-3-3zm15.5 6H19v-7c0-1.1-.9-2-2-2h-5V3H6v8c0 1.65 1.35 3 3 3h7v7h4.5c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5z"}}]})(props);
	};
	module.exports.MdAirlineSeatLegroomReduced = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.97 19.2c.18.96-.55 1.8-1.47 1.8H14v-3l1-4H9c-1.65 0-3-1.35-3-3V3h6v6h5c1.1 0 2 .9 2 2l-2 7h1.44c.73 0 1.39.49 1.53 1.2zM5 12V3H3v9c0 2.76 2.24 5 5 5h4v-2H8c-1.66 0-3-1.34-3-3z"}}]})(props);
	};
	module.exports.MdAirlineSeatReclineExtra = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5.35 5.64c-.9-.64-1.12-1.88-.49-2.79.63-.9 1.88-1.12 2.79-.49.9.64 1.12 1.88.49 2.79-.64.9-1.88 1.12-2.79.49zM16 19H8.93c-1.48 0-2.74-1.08-2.96-2.54L4 7H2l1.99 9.76C4.37 19.2 6.47 21 8.94 21H16v-2zm.23-4h-4.88l-1.03-4.1c1.58.89 3.28 1.54 5.15 1.22V9.99c-1.63.31-3.44-.27-4.69-1.25L9.14 7.47c-.23-.18-.49-.3-.76-.38-.32-.09-.66-.12-.99-.06h-.02c-1.23.22-2.05 1.39-1.84 2.61l1.35 5.92C7.16 16.98 8.39 18 9.83 18h6.85l3.82 3 1.5-1.5-5.77-4.5z"}}]})(props);
	};
	module.exports.MdAirlineSeatReclineNormal = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7.59 5.41c-.78-.78-.78-2.05 0-2.83.78-.78 2.05-.78 2.83 0 .78.78.78 2.05 0 2.83-.79.79-2.05.79-2.83 0zM6 16V7H4v9c0 2.76 2.24 5 5 5h6v-2H9c-1.66 0-3-1.34-3-3zm14 4.07L14.93 15H11.5v-3.68c1.4 1.15 3.6 2.16 5.5 2.16v-2.16c-1.66.02-3.61-.87-4.67-2.04l-1.4-1.55c-.19-.21-.43-.38-.69-.5-.29-.14-.62-.23-.96-.23h-.03C8.01 7 7 8.01 7 9.25V15c0 1.66 1.34 3 3 3h5.07l3.5 3.5L20 20.07z"}}]})(props);
	};
	module.exports.MdBluetoothAudio = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14.24 12.01l2.32 2.32c.28-.72.44-1.51.44-2.33 0-.82-.16-1.59-.43-2.31l-2.33 2.32zm5.29-5.3l-1.26 1.26c.63 1.21.98 2.57.98 4.02s-.36 2.82-.98 4.02l1.2 1.2c.97-1.54 1.54-3.36 1.54-5.31-.01-1.89-.55-3.67-1.48-5.19zm-3.82 1L10 2H9v7.59L4.41 5 3 6.41 8.59 12 3 17.59 4.41 19 9 14.41V22h1l5.71-5.71-4.3-4.29 4.3-4.29zM11 5.83l1.88 1.88L11 9.59V5.83zm1.88 10.46L11 18.17v-3.76l1.88 1.88z"}}]})(props);
	};
	module.exports.MdConfirmationNumber = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 10V6c0-1.11-.9-2-2-2H4c-1.1 0-1.99.89-1.99 2v4c1.1 0 1.99.9 1.99 2s-.89 2-2 2v4c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2v-4c-1.1 0-2-.9-2-2s.9-2 2-2zm-9 7.5h-2v-2h2v2zm0-4.5h-2v-2h2v2zm0-4.5h-2v-2h2v2z"}}]})(props);
	};
	module.exports.MdDiscFull = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 16h2v-2h-2v2zm0-9v5h2V7h-2zM10 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"}}]})(props);
	};
	module.exports.MdDoNotDisturb = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z"}}]})(props);
	};
	module.exports.MdDoNotDisturbAlt = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zM4 12c0-4.4 3.6-8 8-8 1.8 0 3.5.6 4.9 1.7L5.7 16.9C4.6 15.5 4 13.8 4 12zm8 8c-1.8 0-3.5-.6-4.9-1.7L18.3 7.1C19.4 8.5 20 10.2 20 12c0 4.4-3.6 8-8 8z"}}]})(props);
	};
	module.exports.MdDoNotDisturbOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 11v2h-1.46l4.68 4.68C21.34 16.07 22 14.11 22 12c0-5.52-4.48-10-10-10-2.11 0-4.07.66-5.68 1.78L13.54 11H17zM2.27 2.27L1 3.54l2.78 2.78C2.66 7.93 2 9.89 2 12c0 5.52 4.48 10 10 10 2.11 0 4.07-.66 5.68-1.78L20.46 23l1.27-1.27L11 11 2.27 2.27zM7 13v-2h1.46l2 2H7z"}}]})(props);
	};
	module.exports.MdDoNotDisturbOn = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z"}}]})(props);
	};
	module.exports.MdDriveEta = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.92 5.01C18.72 4.42 18.16 4 17.5 4h-11c-.66 0-1.21.42-1.42 1.01L3 11v8c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1h12v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-8l-2.08-5.99zM6.5 15c-.83 0-1.5-.67-1.5-1.5S5.67 12 6.5 12s1.5.67 1.5 1.5S7.33 15 6.5 15zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM5 10l1.5-4.5h11L19 10H5z"}}]})(props);
	};
	module.exports.MdEnhancedEncryption = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM8.9 6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2H8.9V6zM16 16h-3v3h-2v-3H8v-2h3v-3h2v3h3v2z"}}]})(props);
	};
	module.exports.MdEventAvailable = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.53 11.06L15.47 10l-4.88 4.88-2.12-2.12-1.06 1.06L10.59 17l5.94-5.94zM19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11z"}}]})(props);
	};
	module.exports.MdEventBusy = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9.31 17l2.44-2.44L14.19 17l1.06-1.06-2.44-2.44 2.44-2.44L14.19 10l-2.44 2.44L9.31 10l-1.06 1.06 2.44 2.44-2.44 2.44L9.31 17zM19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11z"}}]})(props);
	};
	module.exports.MdEventNote = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 10H7v2h10v-2zm2-7h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zm-5-5H7v2h7v-2z"}}]})(props);
	};
	module.exports.MdFolderSpecial = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 6h-8l-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-2.06 11L15 15.28 12.06 17l.78-3.33-2.59-2.24 3.41-.29L15 8l1.34 3.14 3.41.29-2.59 2.24.78 3.33z"}}]})(props);
	};
	module.exports.MdLiveTv = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 6h-7.59l3.29-3.29L16 2l-4 4-4-4-.71.71L10.59 6H3c-1.1 0-2 .89-2 2v12c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.11-.9-2-2-2zm0 14H3V8h18v12zM9 10v8l7-4z"}}]})(props);
	};
	module.exports.MdMms = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM5 14l3.5-4.5 2.5 3.01L14.5 8l4.5 6H5z"}}]})(props);
	};
	module.exports.MdMore = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.97.89 1.66.89H22c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 13.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm5 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm5 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}}]})(props);
	};
	module.exports.MdNetworkCheck = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.9 5c-.17 0-.32.09-.41.23l-.07.15-5.18 11.65c-.16.29-.26.61-.26.96 0 1.11.9 2.01 2.01 2.01.96 0 1.77-.68 1.96-1.59l.01-.03L16.4 5.5c0-.28-.22-.5-.5-.5zM1 9l2 2c2.88-2.88 6.79-4.08 10.53-3.62l1.19-2.68C9.89 3.84 4.74 5.27 1 9zm20 2l2-2c-1.64-1.64-3.55-2.82-5.59-3.57l-.53 2.82c1.5.62 2.9 1.53 4.12 2.75zm-4 4l2-2c-.8-.8-1.7-1.42-2.66-1.89l-.55 2.92c.42.27.83.59 1.21.97zM5 13l2 2c1.13-1.13 2.56-1.79 4.03-2l1.28-2.88c-2.63-.08-5.3.87-7.31 2.88z"}}]})(props);
	};
	module.exports.MdNetworkLocked = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.5 10c.17 0 .33.03.5.05V1L1 20h13v-3c0-.89.39-1.68 1-2.23v-.27c0-2.48 2.02-4.5 4.5-4.5zm2.5 6v-1.5c0-1.38-1.12-2.5-2.5-2.5S17 13.12 17 14.5V16c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm-1 0h-3v-1.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V16z"}}]})(props);
	};
	module.exports.MdNoEncryption = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 21.78L4.22 5 3 6.22l2.04 2.04C4.42 8.6 4 9.25 4 10v10c0 1.1.9 2 2 2h12c.23 0 .45-.05.66-.12L19.78 23 21 21.78zM8.9 6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2H9.66L20 18.34V10c0-1.1-.9-2-2-2h-1V6c0-2.76-2.24-5-5-5-2.56 0-4.64 1.93-4.94 4.4L8.9 7.24V6z"}}]})(props);
	};
	module.exports.MdOndemandVideo = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.11 0-2 .89-2 2v12c0 1.1.89 2 2 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5c0-1.11-.9-2-2-2zm0 14H3V5h18v12zm-5-6l-7 4V7z"}}]})(props);
	};
	module.exports.MdPersonalVideo = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 3H3c-1.11 0-2 .89-2 2v12c0 1.1.89 2 2 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5c0-1.11-.9-2-2-2zm0 14H3V5h18v12z"}}]})(props);
	};
	module.exports.MdPhoneBluetoothSpeaker = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14.71 9.5L17 7.21V11h.5l2.85-2.85L18.21 6l2.15-2.15L17.5 1H17v3.79L14.71 2.5l-.71.71L16.79 6 14 8.79l.71.71zM18 2.91l.94.94-.94.94V2.91zm0 4.3l.94.94-.94.94V7.21zm2 8.29c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.02.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.59l2.2-2.21c.28-.26.36-.65.25-1C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1z"}}]})(props);
	};
	module.exports.MdPhoneForwarded = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 11l5-5-5-5v3h-4v4h4v3zm2 4.5c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.02.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.59l2.2-2.21c.28-.26.36-.65.25-1C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1z"}}]})(props);
	};
	module.exports.MdPhoneInTalk = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 15.5c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.02.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.59l2.2-2.21c.28-.26.36-.65.25-1C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM19 12h2c0-4.97-4.03-9-9-9v2c3.87 0 7 3.13 7 7zm-4 0h2c0-2.76-2.24-5-5-5v2c1.66 0 3 1.34 3 3z"}}]})(props);
	};
	module.exports.MdPhoneLocked = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 15.5c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.02.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.59l2.2-2.21c.28-.26.36-.65.25-1C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM20 4v-.5C20 2.12 18.88 1 17.5 1S15 2.12 15 3.5V4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-.8 0h-3.4v-.5c0-.94.76-1.7 1.7-1.7s1.7.76 1.7 1.7V4z"}}]})(props);
	};
	module.exports.MdPhoneMissed = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6.5 5.5L12 11l7-7-1-1-6 6-4.5-4.5H11V3H5v6h1.5V5.5zm17.21 11.17C20.66 13.78 16.54 12 12 12 7.46 12 3.34 13.78.29 16.67c-.18.18-.29.43-.29.71s.11.53.29.71l2.48 2.48c.18.18.43.29.71.29.27 0 .52-.11.7-.28.79-.74 1.69-1.36 2.66-1.85.33-.16.56-.5.56-.9v-3.1c1.45-.48 3-.73 4.6-.73 1.6 0 3.15.25 4.6.72v3.1c0 .39.23.74.56.9.98.49 1.87 1.12 2.67 1.85.18.18.43.28.7.28.28 0 .53-.11.71-.29l2.48-2.48c.18-.18.29-.43.29-.71s-.12-.52-.3-.7z"}}]})(props);
	};
	module.exports.MdPhonePaused = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 3h-2v7h2V3zm3 12.5c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.02.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.59l2.2-2.21c.28-.26.36-.65.25-1C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM19 3v7h2V3h-2z"}}]})(props);
	};
	module.exports.MdPower = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.01 7L16 3h-2v4h-4V3H8v4h-.01C7 6.99 6 7.99 6 8.99v5.49L9.5 18v3h5v-3l3.5-3.51v-5.5c0-1-1-2-1.99-1.99z"}}]})(props);
	};
	module.exports.MdPriorityHigh = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"12","cy":"19","r":"2"}},{"tag":"path","attr":{"d":"M10 3h4v12h-4z"}}]})(props);
	};
	module.exports.MdRvHookup = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 17v-6c0-1.1-.9-2-2-2H7V7l-3 3 3 3v-2h4v3H4v3c0 1.1.9 2 2 2h2c0 1.66 1.34 3 3 3s3-1.34 3-3h8v-2h-2zm-9 3c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm7-6h-4v-3h4v3zM17 2v2H9v2h8v2l3-3z"}}]})(props);
	};
	module.exports.MdSdCard = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 2h-8L4.02 8 4 20c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-6 6h-2V4h2v4zm3 0h-2V4h2v4zm3 0h-2V4h2v4z"}}]})(props);
	};
	module.exports.MdSimCardAlert = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 2h-8L4.02 8 4 20c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-5 15h-2v-2h2v2zm0-4h-2V8h2v5z"}}]})(props);
	};
	module.exports.MdSms = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM9 11H7V9h2v2zm4 0h-2V9h2v2zm4 0h-2V9h2v2z"}}]})(props);
	};
	module.exports.MdSmsFailed = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 12h-2v-2h2v2zm0-4h-2V6h2v4z"}}]})(props);
	};
	module.exports.MdSync = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z"}}]})(props);
	};
	module.exports.MdSyncDisabled = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 6.35V4.26c-.8.21-1.55.54-2.23.96l1.46 1.46c.25-.12.5-.24.77-.33zm-7.14-.94l2.36 2.36C4.45 8.99 4 10.44 4 12c0 2.21.91 4.2 2.36 5.64L4 20h6v-6l-2.24 2.24C6.68 15.15 6 13.66 6 12c0-1 .25-1.94.68-2.77l8.08 8.08c-.25.13-.5.25-.77.34v2.09c.8-.21 1.55-.54 2.23-.96l2.36 2.36 1.27-1.27L4.14 4.14 2.86 5.41zM20 4h-6v6l2.24-2.24C17.32 8.85 18 10.34 18 12c0 1-.25 1.94-.68 2.77l1.46 1.46C19.55 15.01 20 13.56 20 12c0-2.21-.91-4.2-2.36-5.64L20 4z"}}]})(props);
	};
	module.exports.MdSyncProblem = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 12c0 2.21.91 4.2 2.36 5.64L3 20h6v-6l-2.24 2.24C5.68 15.15 5 13.66 5 12c0-2.61 1.67-4.83 4-5.65V4.26C5.55 5.15 3 8.27 3 12zm8 5h2v-2h-2v2zM21 4h-6v6l2.24-2.24C18.32 8.85 19 10.34 19 12c0 2.61-1.67 4.83-4 5.65v2.09c3.45-.89 6-4.01 6-7.74 0-2.21-.91-4.2-2.36-5.64L21 4zm-10 9h2V7h-2v6z"}}]})(props);
	};
	module.exports.MdSystemUpdate = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 1.01L7 1c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM17 19H7V5h10v14zm-1-6h-3V8h-2v5H8l4 4 4-4z"}}]})(props);
	};
	module.exports.MdTapAndPlay = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2 16v2c2.76 0 5 2.24 5 5h2c0-3.87-3.13-7-7-7zm0 4v3h3c0-1.66-1.34-3-3-3zm0-8v2c4.97 0 9 4.03 9 9h2c0-6.08-4.92-11-11-11zM17 1.01L7 1c-1.1 0-2 .9-2 2v7.37c.69.16 1.36.37 2 .64V5h10v13h-3.03c.52 1.25.84 2.59.95 4H17c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99z"}}]})(props);
	};
	module.exports.MdTimeToLeave = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.92 5.01C18.72 4.42 18.16 4 17.5 4h-11c-.66 0-1.21.42-1.42 1.01L3 11v8c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1h12v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-8l-2.08-5.99zM6.5 15c-.83 0-1.5-.67-1.5-1.5S5.67 12 6.5 12s1.5.67 1.5 1.5S7.33 15 6.5 15zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM5 10l1.5-4.5h11L19 10H5z"}}]})(props);
	};
	module.exports.MdVibration = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M0 15h2V9H0v6zm3 2h2V7H3v10zm19-8v6h2V9h-2zm-3 8h2V7h-2v10zM16.5 3h-9C6.67 3 6 3.67 6 4.5v15c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-15c0-.83-.67-1.5-1.5-1.5zM16 19H8V5h8v14z"}}]})(props);
	};
	module.exports.MdVoiceChat = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12l-4-3.2V14H6V6h8v3.2L18 6v8z"}}]})(props);
	};
	module.exports.MdVpnLock = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 4v-.5C22 2.12 20.88 1 19.5 1S17 2.12 17 3.5V4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-.8 0h-3.4v-.5c0-.94.76-1.7 1.7-1.7s1.7.76 1.7 1.7V4zm-2.28 8c.04.33.08.66.08 1 0 2.08-.8 3.97-2.1 5.39-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H7v-2h2c.55 0 1-.45 1-1V8h2c1.1 0 2-.9 2-2V3.46c-.95-.3-1.95-.46-3-.46C5.48 3 1 7.48 1 13s4.48 10 10 10 10-4.48 10-10c0-.34-.02-.67-.05-1h-2.03zM10 20.93c-3.95-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L8 16v1c0 1.1.9 2 2 2v1.93z"}}]})(props);
	};
	module.exports.MdWc = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5.5 22v-7.5H4V9c0-1.1.9-2 2-2h3c1.1 0 2 .9 2 2v5.5H9.5V22h-4zM18 22v-6h3l-2.54-7.63C18.18 7.55 17.42 7 16.56 7h-.12c-.86 0-1.63.55-1.9 1.37L12 16h3v6h3zM7.5 6c1.11 0 2-.89 2-2s-.89-2-2-2-2 .89-2 2 .89 2 2 2zm9 0c1.11 0 2-.89 2-2s-.89-2-2-2-2 .89-2 2 .89 2 2 2z"}}]})(props);
	};
	module.exports.MdWifi = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M1 9l2 2c4.97-4.97 13.03-4.97 18 0l2-2C16.93 2.93 7.08 2.93 1 9zm8 8l3 3 3-3c-1.65-1.66-4.34-1.66-6 0zm-4-4l2 2c2.76-2.76 7.24-2.76 10 0l2-2C15.14 9.14 8.87 9.14 5 13z"}}]})(props);
	};
	module.exports.MdAcUnit = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 11h-4.17l3.24-3.24-1.41-1.42L15 11h-2V9l4.66-4.66-1.42-1.41L13 6.17V2h-2v4.17L7.76 2.93 6.34 4.34 11 9v2H9L4.34 6.34 2.93 7.76 6.17 11H2v2h4.17l-3.24 3.24 1.41 1.42L9 13h2v2l-4.66 4.66 1.42 1.41L11 17.83V22h2v-4.17l3.24 3.24 1.42-1.41L13 15v-2h2l4.66 4.66 1.41-1.42L17.83 13H22z"}}]})(props);
	};
	module.exports.MdAirportShuttle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 5H3c-1.1 0-2 .89-2 2v9h2c0 1.65 1.34 3 3 3s3-1.35 3-3h5.5c0 1.65 1.34 3 3 3s3-1.35 3-3H23v-5l-6-6zM3 11V7h4v4H3zm3 6.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm7-6.5H9V7h4v4zm4.5 6.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM15 11V7h1l4 4h-5z"}}]})(props);
	};
	module.exports.MdAllInclusive = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.6 6.62c-1.44 0-2.8.56-3.77 1.53L12 10.66 10.48 12h.01L7.8 14.39c-.64.64-1.49.99-2.4.99-1.87 0-3.39-1.51-3.39-3.38S3.53 8.62 5.4 8.62c.91 0 1.76.35 2.44 1.03l1.13 1 1.51-1.34L9.22 8.2C8.2 7.18 6.84 6.62 5.4 6.62 2.42 6.62 0 9.04 0 12s2.42 5.38 5.4 5.38c1.44 0 2.8-.56 3.77-1.53l2.83-2.5.01.01L13.52 12h-.01l2.69-2.39c.64-.64 1.49-.99 2.4-.99 1.87 0 3.39 1.51 3.39 3.38s-1.52 3.38-3.39 3.38c-.9 0-1.76-.35-2.44-1.03l-1.14-1.01-1.51 1.34 1.27 1.12c1.02 1.01 2.37 1.57 3.82 1.57 2.98 0 5.4-2.41 5.4-5.38s-2.42-5.37-5.4-5.37z"}}]})(props);
	};
	module.exports.MdBeachAccess = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13.127 14.56l1.43-1.43 6.44 6.443L19.57 21zm4.293-5.73l2.86-2.86c-3.95-3.95-10.35-3.96-14.3-.02 3.93-1.3 8.31-.25 11.44 2.88zM5.95 5.98c-3.94 3.95-3.93 10.35.02 14.3l2.86-2.86C5.7 14.29 4.65 9.91 5.95 5.98zm.02-.02l-.01.01c-.38 3.01 1.17 6.88 4.3 10.02l5.73-5.73c-3.13-3.13-7.01-4.68-10.02-4.3z"}}]})(props);
	};
	module.exports.MdBusinessCenter = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 16v-1H3.01L3 19c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2v-4h-7v1h-4zm10-9h-4.01V5l-2-2h-4l-2 2v2H4c-1.1 0-2 .9-2 2v3c0 1.11.89 2 2 2h6v-2h4v2h6c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm-6 0h-4V5h4v2z"}}]})(props);
	};
	module.exports.MdCasino = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM7.5 18c-.83 0-1.5-.67-1.5-1.5S6.67 15 7.5 15s1.5.67 1.5 1.5S8.33 18 7.5 18zm0-9C6.67 9 6 8.33 6 7.5S6.67 6 7.5 6 9 6.67 9 7.5 8.33 9 7.5 9zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm0-9c-.83 0-1.5-.67-1.5-1.5S15.67 6 16.5 6s1.5.67 1.5 1.5S17.33 9 16.5 9z"}}]})(props);
	};
	module.exports.MdChildCare = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"14.5","cy":"10.5","r":"1.25"}},{"tag":"circle","attr":{"cx":"9.5","cy":"10.5","r":"1.25"}},{"tag":"path","attr":{"d":"M22.94 12.66c.04-.21.06-.43.06-.66s-.02-.45-.06-.66c-.25-1.51-1.36-2.74-2.81-3.17-.53-1.12-1.28-2.1-2.19-2.91C16.36 3.85 14.28 3 12 3s-4.36.85-5.94 2.26c-.92.81-1.67 1.8-2.19 2.91-1.45.43-2.56 1.65-2.81 3.17-.04.21-.06.43-.06.66s.02.45.06.66c.25 1.51 1.36 2.74 2.81 3.17.52 1.11 1.27 2.09 2.17 2.89C7.62 20.14 9.71 21 12 21s4.38-.86 5.97-2.28c.9-.8 1.65-1.79 2.17-2.89 1.44-.43 2.55-1.65 2.8-3.17zM19 14c-.1 0-.19-.02-.29-.03-.2.67-.49 1.29-.86 1.86C16.6 17.74 14.45 19 12 19s-4.6-1.26-5.85-3.17c-.37-.57-.66-1.19-.86-1.86-.1.01-.19.03-.29.03-1.1 0-2-.9-2-2s.9-2 2-2c.1 0 .19.02.29.03.2-.67.49-1.29.86-1.86C7.4 6.26 9.55 5 12 5s4.6 1.26 5.85 3.17c.37.57.66 1.19.86 1.86.1-.01.19-.03.29-.03 1.1 0 2 .9 2 2s-.9 2-2 2zM7.5 14c.76 1.77 2.49 3 4.5 3s3.74-1.23 4.5-3h-9z"}}]})(props);
	};
	module.exports.MdChildFriendly = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 2v8h8c0-4.42-3.58-8-8-8zm6.32 13.89C20.37 14.54 21 12.84 21 11H6.44l-.95-2H2v2h2.22s1.89 4.07 2.12 4.42c-1.1.59-1.84 1.75-1.84 3.08C4.5 20.43 6.07 22 8 22c1.76 0 3.22-1.3 3.46-3h2.08c.24 1.7 1.7 3 3.46 3 1.93 0 3.5-1.57 3.5-3.5 0-1.04-.46-1.97-1.18-2.61zM8 20c-.83 0-1.5-.67-1.5-1.5S7.17 17 8 17s1.5.67 1.5 1.5S8.83 20 8 20zm9 0c-.83 0-1.5-.67-1.5-1.5S16.17 17 17 17s1.5.67 1.5 1.5S17.83 20 17 20z"}}]})(props);
	};
	module.exports.MdFitnessCenter = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.57 14.86L22 13.43 20.57 12 17 15.57 8.43 7 12 3.43 10.57 2 9.14 3.43 7.71 2 5.57 4.14 4.14 2.71 2.71 4.14l1.43 1.43L2 7.71l1.43 1.43L2 10.57 3.43 12 7 8.43 15.57 17 12 20.57 13.43 22l1.43-1.43L16.29 22l2.14-2.14 1.43 1.43 1.43-1.43-1.43-1.43L22 16.29z"}}]})(props);
	};
	module.exports.MdFreeBreakfast = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 3H4v10c0 2.21 1.79 4 4 4h6c2.21 0 4-1.79 4-4v-3h2c1.11 0 2-.9 2-2V5c0-1.11-.89-2-2-2zm0 5h-2V5h2v3zM4 19h16v2H4z"}}]})(props);
	};
	module.exports.MdGolfCourse = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"19.5","cy":"19.5","r":"1.5"}},{"tag":"path","attr":{"d":"M17 5.92L9 2v18H7v-1.73c-1.79.35-3 .99-3 1.73 0 1.1 2.69 2 6 2s6-.9 6-2c0-.99-2.16-1.81-5-1.97V8.98l6-3.06z"}}]})(props);
	};
	module.exports.MdHotTub = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"7","cy":"6","r":"2"}},{"tag":"path","attr":{"d":"M11.15 12c-.31-.22-.59-.46-.82-.72l-1.4-1.55c-.19-.21-.43-.38-.69-.5-.29-.14-.62-.23-.96-.23h-.03C6.01 9 5 10.01 5 11.25V12H2v8c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2v-8H11.15zM7 20H5v-6h2v6zm4 0H9v-6h2v6zm4 0h-2v-6h2v6zm4 0h-2v-6h2v6zm-.35-14.14l-.07-.07c-.57-.62-.82-1.41-.67-2.2L18 3h-1.89l-.06.43c-.2 1.36.27 2.71 1.3 3.72l.07.06c.57.62.82 1.41.67 2.2l-.11.59h1.91l.06-.43c.21-1.36-.27-2.71-1.3-3.71zm-4 0l-.07-.07c-.57-.62-.82-1.41-.67-2.2L14 3h-1.89l-.06.43c-.2 1.36.27 2.71 1.3 3.72l.07.06c.57.62.82 1.41.67 2.2l-.11.59h1.91l.06-.43c.21-1.36-.27-2.71-1.3-3.71z"}}]})(props);
	};
	module.exports.MdKitchen = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 2.01L6 2c-1.1 0-2 .89-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.11-.9-1.99-2-1.99zM18 20H6v-9.02h12V20zm0-11H6V4h12v5zM8 5h2v3H8zm0 7h2v5H8z"}}]})(props);
	};
	module.exports.MdPool = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 21c-1.11 0-1.73-.37-2.18-.64-.37-.22-.6-.36-1.15-.36-.56 0-.78.13-1.15.36-.46.27-1.07.64-2.18.64s-1.73-.37-2.18-.64c-.37-.22-.6-.36-1.15-.36-.56 0-.78.13-1.15.36-.46.27-1.08.64-2.19.64-1.11 0-1.73-.37-2.18-.64-.37-.23-.6-.36-1.15-.36s-.78.13-1.15.36c-.46.27-1.08.64-2.19.64v-2c.56 0 .78-.13 1.15-.36.46-.27 1.08-.64 2.19-.64s1.73.37 2.18.64c.37.23.59.36 1.15.36.56 0 .78-.13 1.15-.36.46-.27 1.08-.64 2.19-.64 1.11 0 1.73.37 2.18.64.37.22.6.36 1.15.36s.78-.13 1.15-.36c.45-.27 1.07-.64 2.18-.64s1.73.37 2.18.64c.37.23.59.36 1.15.36v2zm0-4.5c-1.11 0-1.73-.37-2.18-.64-.37-.22-.6-.36-1.15-.36-.56 0-.78.13-1.15.36-.45.27-1.07.64-2.18.64s-1.73-.37-2.18-.64c-.37-.22-.6-.36-1.15-.36-.56 0-.78.13-1.15.36-.45.27-1.07.64-2.18.64s-1.73-.37-2.18-.64c-.37-.22-.6-.36-1.15-.36s-.78.13-1.15.36c-.47.27-1.09.64-2.2.64v-2c.56 0 .78-.13 1.15-.36.45-.27 1.07-.64 2.18-.64s1.73.37 2.18.64c.37.22.6.36 1.15.36.56 0 .78-.13 1.15-.36.45-.27 1.07-.64 2.18-.64s1.73.37 2.18.64c.37.22.6.36 1.15.36s.78-.13 1.15-.36c.45-.27 1.07-.64 2.18-.64s1.73.37 2.18.64c.37.22.6.36 1.15.36v2zM8.67 12c.56 0 .78-.13 1.15-.36.46-.27 1.08-.64 2.19-.64 1.11 0 1.73.37 2.18.64.37.22.6.36 1.15.36s.78-.13 1.15-.36c.12-.07.26-.15.41-.23L10.48 5C8.93 3.45 7.5 2.99 5 3v2.5c1.82-.01 2.89.39 4 1.5l1 1-3.25 3.25c.31.12.56.27.77.39.37.23.59.36 1.15.36z"}},{"tag":"circle","attr":{"cx":"16.5","cy":"5.5","r":"2.5"}}]})(props);
	};
	module.exports.MdRoomService = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2 17h20v2H2zm11.84-9.21c.1-.24.16-.51.16-.79 0-1.1-.9-2-2-2s-2 .9-2 2c0 .28.06.55.16.79C6.25 8.6 3.27 11.93 3 16h18c-.27-4.07-3.25-7.4-7.16-8.21z"}}]})(props);
	};
	module.exports.MdSmokeFree = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2 6l6.99 7H2v3h9.99l7 7 1.26-1.25-17-17zm18.5 7H22v3h-1.5zM18 13h1.5v3H18zm.85-8.12c.62-.61 1-1.45 1-2.38h-1.5c0 1.02-.83 1.85-1.85 1.85v1.5c2.24 0 4 1.83 4 4.07V12H22V9.92c0-2.23-1.28-4.15-3.15-5.04zM14.5 8.7h1.53c1.05 0 1.97.74 1.97 2.05V12h1.5v-1.59c0-1.8-1.6-3.16-3.47-3.16H14.5c-1.02 0-1.85-.98-1.85-2s.83-1.75 1.85-1.75V2c-1.85 0-3.35 1.5-3.35 3.35s1.5 3.35 3.35 3.35zm2.5 7.23V13h-2.93z"}}]})(props);
	};
	module.exports.MdSmokingRooms = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2 16h15v3H2zm18.5 0H22v3h-1.5zM18 16h1.5v3H18zm.85-8.27c.62-.61 1-1.45 1-2.38C19.85 3.5 18.35 2 16.5 2v1.5c1.02 0 1.85.83 1.85 1.85S17.52 7.2 16.5 7.2v1.5c2.24 0 4 1.83 4 4.07V15H22v-2.24c0-2.22-1.28-4.14-3.15-5.03zm-2.82 2.47H14.5c-1.02 0-1.85-.98-1.85-2s.83-1.75 1.85-1.75v-1.5c-1.85 0-3.35 1.5-3.35 3.35s1.5 3.35 3.35 3.35h1.53c1.05 0 1.97.74 1.97 2.05V15h1.5v-1.64c0-1.81-1.6-3.16-3.47-3.16z"}}]})(props);
	};
	module.exports.MdSpa = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"fill":"#607D8B","d":"M8.55 12c-1.07-.71-2.25-1.27-3.53-1.61 1.28.34 2.46.9 3.53 1.61zm10.43-1.61c-1.29.34-2.49.91-3.57 1.64 1.08-.73 2.28-1.3 3.57-1.64z"}},{"tag":"path","attr":{"d":"M15.49 9.63c-.18-2.79-1.31-5.51-3.43-7.63-2.14 2.14-3.32 4.86-3.55 7.63 1.28.68 2.46 1.56 3.49 2.63 1.03-1.06 2.21-1.94 3.49-2.63zm-6.5 2.65c-.14-.1-.3-.19-.45-.29.15.11.31.19.45.29zm6.42-.25c-.13.09-.27.16-.4.26.13-.1.27-.17.4-.26zM12 15.45C9.85 12.17 6.18 10 2 10c0 5.32 3.36 9.82 8.03 11.49.63.23 1.29.4 1.97.51.68-.12 1.33-.29 1.97-.51C18.64 19.82 22 15.32 22 10c-4.18 0-7.85 2.17-10 5.45z"}}]})(props);
	};
	module.exports.MdCake = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 6c1.11 0 2-.9 2-2 0-.38-.1-.73-.29-1.03L12 0l-1.71 2.97c-.19.3-.29.65-.29 1.03 0 1.1.9 2 2 2zm4.6 9.99l-1.07-1.07-1.08 1.07c-1.3 1.3-3.58 1.31-4.89 0l-1.07-1.07-1.09 1.07C6.75 16.64 5.88 17 4.96 17c-.73 0-1.4-.23-1.96-.61V21c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-4.61c-.56.38-1.23.61-1.96.61-.92 0-1.79-.36-2.44-1.01zM18 9h-5V7h-2v2H6c-1.66 0-3 1.34-3 3v1.54c0 1.08.88 1.96 1.96 1.96.52 0 1.02-.2 1.38-.57l2.14-2.13 2.13 2.13c.74.74 2.03.74 2.77 0l2.14-2.13 2.13 2.13c.37.37.86.57 1.38.57 1.08 0 1.96-.88 1.96-1.96V12C21 10.34 19.66 9 18 9z"}}]})(props);
	};
	module.exports.MdDomain = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z"}}]})(props);
	};
	module.exports.MdGroup = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z"}}]})(props);
	};
	module.exports.MdGroupAdd = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8 10H5V7H3v3H0v2h3v3h2v-3h3v-2zm10 1c1.66 0 2.99-1.34 2.99-3S19.66 5 18 5c-.32 0-.63.05-.91.14.57.81.9 1.79.9 2.86s-.34 2.04-.9 2.86c.28.09.59.14.91.14zm-5 0c1.66 0 2.99-1.34 2.99-3S14.66 5 13 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm6.62 2.16c.83.73 1.38 1.66 1.38 2.84v2h3v-2c0-1.54-2.37-2.49-4.38-2.84zM13 13c-2 0-6 1-6 3v2h12v-2c0-2-4-3-6-3z"}}]})(props);
	};
	module.exports.MdLocationCity = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 11V5l-3-3-3 3v2H3v14h18V11h-6zm-8 8H5v-2h2v2zm0-4H5v-2h2v2zm0-4H5V9h2v2zm6 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V9h2v2zm0-4h-2V5h2v2zm6 12h-2v-2h2v2zm0-4h-2v-2h2v2z"}}]})(props);
	};
	module.exports.MdMood = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z"}}]})(props);
	};
	module.exports.MdMoodBad = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 3c-2.33 0-4.31 1.46-5.11 3.5h10.22c-.8-2.04-2.78-3.5-5.11-3.5z"}}]})(props);
	};
	module.exports.MdNotifications = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z"}}]})(props);
	};
	module.exports.MdNotificationsActive = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7.58 4.08L6.15 2.65C3.75 4.48 2.17 7.3 2.03 10.5h2c.15-2.65 1.51-4.97 3.55-6.42zm12.39 6.42h2c-.15-3.2-1.73-6.02-4.12-7.85l-1.42 1.43c2.02 1.45 3.39 3.77 3.54 6.42zM18 11c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2v-5zm-6 11c.14 0 .27-.01.4-.04.65-.14 1.18-.58 1.44-1.18.1-.24.15-.5.15-.78h-4c.01 1.1.9 2 2.01 2z"}}]})(props);
	};
	module.exports.MdNotificationsNone = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6z"}}]})(props);
	};
	module.exports.MdNotificationsOff = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 18.69L7.84 6.14 5.27 3.49 4 4.76l2.8 2.8v.01c-.52.99-.8 2.16-.8 3.42v5l-2 2v1h13.73l2 2L21 19.72l-1-1.03zM12 22c1.11 0 2-.89 2-2h-4c0 1.11.89 2 2 2zm6-7.32V11c0-3.08-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68c-.15.03-.29.08-.42.12-.1.03-.2.07-.3.11h-.01c-.01 0-.01 0-.02.01-.23.09-.46.2-.68.31 0 0-.01 0-.01.01L18 14.68z"}}]})(props);
	};
	module.exports.MdNotificationsPaused = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.93 6 11v5l-2 2v1h16v-1l-2-2zm-3.5-6.2l-2.8 3.4h2.8V15h-5v-1.8l2.8-3.4H9.5V8h5v1.8z"}}]})(props);
	};
	module.exports.MdPages = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 5v6h5L7 7l4 1V3H5c-1.1 0-2 .9-2 2zm5 8H3v6c0 1.1.9 2 2 2h6v-5l-4 1 1-4zm9 4l-4-1v5h6c1.1 0 2-.9 2-2v-6h-5l1 4zm2-14h-6v5l4-1-1 4h5V5c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdPartyMode = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 4h-3.17L15 2H9L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 3c1.63 0 3.06.79 3.98 2H12c-1.66 0-3 1.34-3 3 0 .35.07.69.18 1H7.1c-.06-.32-.1-.66-.1-1 0-2.76 2.24-5 5-5zm0 10c-1.63 0-3.06-.79-3.98-2H12c1.66 0 3-1.34 3-3 0-.35-.07-.69-.18-1h2.08c.07.32.1.66.1 1 0 2.76-2.24 5-5 5z"}}]})(props);
	};
	module.exports.MdPeople = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z"}}]})(props);
	};
	module.exports.MdPeopleOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.5 13c-1.2 0-3.07.34-4.5 1-1.43-.67-3.3-1-4.5-1C5.33 13 1 14.08 1 16.25V19h22v-2.75c0-2.17-4.33-3.25-6.5-3.25zm-4 4.5h-10v-1.25c0-.54 2.56-1.75 5-1.75s5 1.21 5 1.75v1.25zm9 0H14v-1.25c0-.46-.2-.86-.52-1.22.88-.3 1.96-.53 3.02-.53 2.44 0 5 1.21 5 1.75v1.25zM7.5 12c1.93 0 3.5-1.57 3.5-3.5S9.43 5 7.5 5 4 6.57 4 8.5 5.57 12 7.5 12zm0-5.5c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm9 5.5c1.93 0 3.5-1.57 3.5-3.5S18.43 5 16.5 5 13 6.57 13 8.5s1.57 3.5 3.5 3.5zm0-5.5c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2z"}}]})(props);
	};
	module.exports.MdPerson = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"}}]})(props);
	};
	module.exports.MdPersonAdd = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V7H4v3H1v2h3v3h2v-3h3v-2H6zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"}}]})(props);
	};
	module.exports.MdPersonOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 5.9c1.16 0 2.1.94 2.1 2.1s-.94 2.1-2.1 2.1S9.9 9.16 9.9 8s.94-2.1 2.1-2.1m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z"}}]})(props);
	};
	module.exports.MdPlusOne = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 8H8v4H4v2h4v4h2v-4h4v-2h-4zm4.5-1.92V7.9l2.5-.5V18h2V5z"}}]})(props);
	};
	module.exports.MdPoll = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z"}}]})(props);
	};
	module.exports.MdPublic = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.95-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39z"}}]})(props);
	};
	module.exports.MdSchool = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 13.18v4L12 21l7-3.82v-4L12 17l-7-3.82zM12 3L1 9l11 6 9-4.91V17h2V9L12 3z"}}]})(props);
	};
	module.exports.MdSentimentDissatisfied = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"15.5","cy":"9.5","r":"1.5"}},{"tag":"circle","attr":{"cx":"8.5","cy":"9.5","r":"1.5"}},{"tag":"path","attr":{"d":"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm0-6c-2.33 0-4.32 1.45-5.12 3.5h1.67c.69-1.19 1.97-2 3.45-2s2.75.81 3.45 2h1.67c-.8-2.05-2.79-3.5-5.12-3.5z"}}]})(props);
	};
	module.exports.MdSentimentNeutral = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 14h6v1.5H9z"}},{"tag":"circle","attr":{"cx":"15.5","cy":"9.5","r":"1.5"}},{"tag":"circle","attr":{"cx":"8.5","cy":"9.5","r":"1.5"}},{"tag":"path","attr":{"d":"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}}]})(props);
	};
	module.exports.MdSentimentSatisfied = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"15.5","cy":"9.5","r":"1.5"}},{"tag":"circle","attr":{"cx":"8.5","cy":"9.5","r":"1.5"}},{"tag":"path","attr":{"d":"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm0-4c-1.48 0-2.75-.81-3.45-2H6.88c.8 2.05 2.79 3.5 5.12 3.5s4.32-1.45 5.12-3.5h-1.67c-.7 1.19-1.97 2-3.45 2z"}}]})(props);
	};
	module.exports.MdSentimentVeryDissatisfied = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.99 2C6.47 2 2 6.47 2 12s4.47 10 9.99 10S22 17.53 22 12 17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm4.18-12.24l-1.06 1.06-1.06-1.06L13 8.82l1.06 1.06L13 10.94 14.06 12l1.06-1.06L16.18 12l1.06-1.06-1.06-1.06 1.06-1.06zM7.82 12l1.06-1.06L9.94 12 11 10.94 9.94 9.88 11 8.82 9.94 7.76 8.88 8.82 7.82 7.76 6.76 8.82l1.06 1.06-1.06 1.06zM12 14c-2.33 0-4.31 1.46-5.11 3.5h10.22c-.8-2.04-2.78-3.5-5.11-3.5z"}}]})(props);
	};
	module.exports.MdSentimentVerySatisfied = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.99 2C6.47 2 2 6.47 2 12s4.47 10 9.99 10S22 17.53 22 12 17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm1-10.06L14.06 11l1.06-1.06L16.18 11l1.06-1.06-2.12-2.12zm-4.12 0L9.94 11 11 9.94 8.88 7.82 6.76 9.94 7.82 11zM12 17.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z"}}]})(props);
	};
	module.exports.MdShare = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z"}}]})(props);
	};
	module.exports.MdWhatshot = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13.5.67s.74 2.65.74 4.8c0 2.06-1.35 3.73-3.41 3.73-2.07 0-3.63-1.67-3.63-3.73l.03-.36C5.21 7.51 4 10.62 4 14c0 4.42 3.58 8 8 8s8-3.58 8-8C20 8.61 17.41 3.8 13.5.67zM11.71 19c-1.78 0-3.22-1.4-3.22-3.14 0-1.62 1.05-2.76 2.81-3.12 1.77-.36 3.6-1.21 4.62-2.58.39 1.29.59 2.65.59 4.04 0 2.65-2.15 4.8-4.8 4.8z"}}]})(props);
	};
	module.exports.MdCheckBox = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"}}]})(props);
	};
	module.exports.MdCheckBoxOutlineBlank = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.MdIndeterminateCheckBox = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"}}]})(props);
	};
	module.exports.MdRadioButtonChecked = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}}]})(props);
	};
	module.exports.MdRadioButtonUnchecked = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}}]})(props);
	};
	module.exports.MdStar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"}}]})(props);
	};
	module.exports.MdStarBorder = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"}}]})(props);
	};
	module.exports.MdStarHalf = function (props) {
	  return GenIcon({"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4V6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"}}]})(props);
	};


/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __assign = (this && this.__assign) || Object.assign || function(t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	            t[p] = s[p];
	    }
	    return t;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var React = __webpack_require__(2);
	var iconContext_1 = __webpack_require__(117);
	function Tree2Element(tree) {
	    return tree && tree.map(function (node, i) { return React.createElement(node.tag, __assign({ key: i }, node.attr), Tree2Element(node.child)); });
	}
	function GenIcon(data) {
	    return function (props) { return (React.createElement(IconBase, __assign({ attr: __assign({}, data.attr) }, props), Tree2Element(data.child))); };
	}
	exports.GenIcon = GenIcon;
	function IconBase(props) {
	    var elem = function (conf) {
	        var computedSize = props.size || conf.size || "1em";
	        var className;
	        if (conf.className)
	            className = conf.className;
	        if (props.className)
	            className = (className + ' ' || '') + props.className;
	        return (React.createElement("svg", __assign({ stroke: "currentColor", fill: "currentColor", strokeWidth: "0" }, conf.attr, props.attr, props, { className: className, style: __assign({ color: props.color || conf.color }, conf.style, props.style), height: computedSize, width: computedSize }), props.children));
	    };
	    return iconContext_1.IconContext !== undefined
	        ? React.createElement(iconContext_1.IconContext.Consumer, null, function (conf) { return elem(conf); })
	        : elem(iconContext_1.DefaultContext);
	}
	exports.IconBase = IconBase;


/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var React = __webpack_require__(2);
	exports.DefaultContext = {
	    color: undefined,
	    size: undefined,
	    className: undefined,
	    style: undefined,
	    attr: undefined,
	};
	exports.IconContext = React.createContext && React.createContext(exports.DefaultContext);


/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _desc, _value, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _descriptor30, _descriptor31, _descriptor32, _descriptor33, _descriptor34, _descriptor35, _descriptor36, _descriptor37, _descriptor38, _descriptor39, _descriptor40, _descriptor41, _descriptor42, _descriptor43, _descriptor44, _descriptor45, _descriptor46, _descriptor47, _descriptor48, _descriptor49, _descriptor50, _descriptor51, _descriptor52, _descriptor53, _descriptor54, _descriptor55, _descriptor56, _descriptor57, _descriptor58, _descriptor59, _descriptor60, _descriptor61, _descriptor62, _descriptor63, _descriptor64, _descriptor65, _descriptor66, _descriptor67, _descriptor68, _descriptor69, _descriptor70, _descriptor71, _descriptor72, _descriptor73, _descriptor74, _descriptor75, _descriptor76, _descriptor77, _descriptor78, _descriptor79, _descriptor80, _descriptor81, _descriptor82, _descriptor83, _descriptor84, _descriptor85, _descriptor86, _descriptor87;

	var _mobx = __webpack_require__(63);

	var _beatTemplates = __webpack_require__(119);

	var _beatTemplates2 = _interopRequireDefault(_beatTemplates);

	var _samples = __webpack_require__(120);

	var _samples2 = _interopRequireDefault(_samples);

	var _utils = __webpack_require__(121);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _initDefineProp(target, property, descriptor, context) {
	  if (!descriptor) return;
	  Object.defineProperty(target, property, {
	    enumerable: descriptor.enumerable,
	    configurable: descriptor.configurable,
	    writable: descriptor.writable,
	    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
	  });
	}

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
	  var desc = {};
	  Object['ke' + 'ys'](descriptor).forEach(function (key) {
	    desc[key] = descriptor[key];
	  });
	  desc.enumerable = !!desc.enumerable;
	  desc.configurable = !!desc.configurable;

	  if ('value' in desc || desc.initializer) {
	    desc.writable = true;
	  }

	  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
	    return decorator(target, property, desc) || desc;
	  }, desc);

	  if (context && desc.initializer !== void 0) {
	    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
	    desc.initializer = undefined;
	  }

	  if (desc.initializer === void 0) {
	    Object['define' + 'Property'](target, property, desc);
	    desc = null;
	  }

	  return desc;
	}

	function _initializerWarningHelper(descriptor, context) {
	  throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
	}

	var originalFamilyNames = JSON.parse(localStorage.getItem("familyNames"));
	var newFamilyName = (0, _utils.generateFamilyName)();
	var newFamilyNames = originalFamilyNames ? originalFamilyNames : [];
	newFamilyNames.push(newFamilyName);

	(0, _mobx.configure)({ enforceActions: "always" });

	var Store = (_class = function () {
	  function Store() {
	    _classCallCheck(this, Store);

	    _initDefineProp(this, "hoveredBeatKey", _descriptor, this);

	    _initDefineProp(this, "beatNum", _descriptor2, this);

	    _initDefineProp(this, "generation", _descriptor3, this);

	    _initDefineProp(this, "allGenerations", _descriptor4, this);

	    _initDefineProp(this, "samples", _descriptor5, this);

	    _initDefineProp(this, "synthGain", _descriptor6, this);

	    _initDefineProp(this, "synthGainCorrection", _descriptor7, this);

	    _initDefineProp(this, "synthSolo", _descriptor8, this);

	    _initDefineProp(this, "synthMute", _descriptor9, this);

	    _initDefineProp(this, "numSolo", _descriptor10, this);

	    _initDefineProp(this, "selectPairMode", _descriptor11, this);

	    _initDefineProp(this, "selectedBeats", _descriptor12, this);

	    _initDefineProp(this, "sampleMutationRate", _descriptor13, this);

	    _initDefineProp(this, "noteMutationRate", _descriptor14, this);

	    _initDefineProp(this, "playingCurrentBeat", _descriptor15, this);

	    _initDefineProp(this, "playingArrangement", _descriptor16, this);

	    _initDefineProp(this, "numSurvivors", _descriptor17, this);

	    _initDefineProp(this, "numChildren", _descriptor18, this);

	    _initDefineProp(this, "fitnessPercentile", _descriptor19, this);

	    _initDefineProp(this, "familyName", _descriptor20, this);

	    _initDefineProp(this, "familyNames", _descriptor21, this);

	    _initDefineProp(this, "tempo", _descriptor22, this);

	    _initDefineProp(this, "metronome", _descriptor23, this);

	    _initDefineProp(this, "arrangements", _descriptor24, this);

	    _initDefineProp(this, "trackPreviewers", _descriptor25, this);

	    _initDefineProp(this, "currentLitNote", _descriptor26, this);

	    _initDefineProp(this, "currentLitBeat", _descriptor27, this);

	    _initDefineProp(this, "showAddNewBeat", _descriptor28, this);

	    _initDefineProp(this, "noteTimer", _descriptor29, this);

	    _initDefineProp(this, "arrangementTimer", _descriptor30, this);

	    _initDefineProp(this, "currentSong", _descriptor31, this);

	    _initDefineProp(this, "currentArrangementIndex", _descriptor32, this);

	    _initDefineProp(this, "spaceButtonTarget", _descriptor33, this);

	    _initDefineProp(this, "toggleTrackPreviewer", _descriptor34, this);

	    _initDefineProp(this, "addArrangement", _descriptor35, this);

	    _initDefineProp(this, "setHoveredBeat", _descriptor36, this);

	    _initDefineProp(this, "clearHoveredBeat", _descriptor37, this);

	    _initDefineProp(this, "toggleMuteAll", _descriptor38, this);

	    _initDefineProp(this, "toggleSoloAll", _descriptor39, this);

	    _initDefineProp(this, "muteUnsolod", _descriptor40, this);

	    _initDefineProp(this, "unmuteUnsoloAll", _descriptor41, this);

	    _initDefineProp(this, "handleMuteTrack", _descriptor42, this);

	    _initDefineProp(this, "handleSoloTrack", _descriptor43, this);

	    _initDefineProp(this, "resetCurrentLitNote", _descriptor44, this);

	    _initDefineProp(this, "resetCurrentLitBeat", _descriptor45, this);

	    _initDefineProp(this, "incrementCurrentLitNote", _descriptor46, this);

	    _initDefineProp(this, "resetNoteTimer", _descriptor47, this);

	    _initDefineProp(this, "incrementCurrentLitBeat", _descriptor48, this);

	    _initDefineProp(this, "resetArrangementTimer", _descriptor49, this);

	    _initDefineProp(this, "moveBeatInArrangement", _descriptor50, this);

	    _initDefineProp(this, "setCurrentSong", _descriptor51, this);

	    _initDefineProp(this, "togglePlayCurrentBeat", _descriptor52, this);

	    _initDefineProp(this, "togglePlay", _descriptor53, this);

	    _initDefineProp(this, "togglePlayArrangement", _descriptor54, this);

	    _initDefineProp(this, "addBeatToArrangement", _descriptor55, this);

	    _initDefineProp(this, "deleteBeatFromArrangement", _descriptor56, this);

	    _initDefineProp(this, "randomizeBestBeats", _descriptor57, this);

	    _initDefineProp(this, "createSong", _descriptor58, this);

	    _initDefineProp(this, "addSample", _descriptor59, this);

	    _initDefineProp(this, "setAllSamples", _descriptor60, this);

	    _initDefineProp(this, "addGeneration", _descriptor61, this);

	    _initDefineProp(this, "killSubsequentGenerations", _descriptor62, this);

	    _initDefineProp(this, "selectBeat", _descriptor63, this);

	    _initDefineProp(this, "toggleSelectPairMode", _descriptor64, this);

	    _initDefineProp(this, "setGeneration", _descriptor65, this);

	    _initDefineProp(this, "selectFamily", _descriptor66, this);

	    _initDefineProp(this, "selectArrangement", _descriptor67, this);

	    _initDefineProp(this, "clearSavedFamilies", _descriptor68, this);

	    _initDefineProp(this, "updateFamilyInStorage", _descriptor69, this);

	    _initDefineProp(this, "setNoteMutationRate", _descriptor70, this);

	    _initDefineProp(this, "setTempo", _descriptor71, this);

	    _initDefineProp(this, "setSampleMutationRate", _descriptor72, this);

	    _initDefineProp(this, "setNumChildren", _descriptor73, this);

	    _initDefineProp(this, "setNumSurvivors", _descriptor74, this);

	    _initDefineProp(this, "setFitnessPercentile", _descriptor75, this);

	    _initDefineProp(this, "toggleMetronome", _descriptor76, this);

	    _initDefineProp(this, "toggleAddNewBeat", _descriptor77, this);

	    _initDefineProp(this, "addBeatToCurrentGen", _descriptor78, this);

	    _initDefineProp(this, "addTrackToCurrentBeat", _descriptor79, this);

	    _initDefineProp(this, "toggleNoteOnBeat", _descriptor80, this);

	    _initDefineProp(this, "setSampleOnBeat", _descriptor81, this);

	    _initDefineProp(this, "removeTrackFromBeat", _descriptor82, this);

	    _initDefineProp(this, "setGain", _descriptor83, this);

	    _initDefineProp(this, "setSynthGain", _descriptor84, this);

	    _initDefineProp(this, "setScore", _descriptor85, this);

	    _initDefineProp(this, "nextBeat", _descriptor86, this);

	    _initDefineProp(this, "prevBeat", _descriptor87, this);
	  }
	  //@observable allGenerations     = [beatTemplates]


	  _createClass(Store, [{
	    key: "currentArrangement",

	    //
	    // COMPUTED VALUES
	    //

	    get: function get() {
	      return this.arrangements[this.currentArrangementIndex];
	    }
	  }, {
	    key: "currentGeneration",
	    get: function get() {
	      return this.allGenerations[this.generation];
	    }
	  }, {
	    key: "currentBeat",
	    get: function get() {
	      if (this.currentGeneration.length > 0) {
	        return this.currentGeneration[this.beatNum];
	      }
	    }
	  }, {
	    key: "currentBeatResolution",
	    get: function get() {
	      if (this.currentBeat != null) {
	        return this.currentBeat.tracks[0].sequence.length;
	      }
	    }
	  }, {
	    key: "allBeatKeys",
	    get: function get() {
	      var beatKeys = [];
	      this.allGenerations.forEach(function (generation) {
	        generation.forEach(function (beat) {
	          beatKeys.push(beat.key);
	        });
	      });
	      return beatKeys;
	    }

	    //
	    // ACTIONS
	    //

	  }]);

	  return Store;
	}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, "hoveredBeatKey", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return "";
	  }
	}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "beatNum", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return 0;
	  }
	}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "generation", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return 0;
	  }
	}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, "allGenerations", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return [[]];
	  }
	}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, "samples", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return _samples2.default;
	  }
	}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, "synthGain", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return 0.5;
	  }
	}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, "synthGainCorrection", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return 2;
	  }
	}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, "synthSolo", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return false;
	  }
	}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, "synthMute", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return false;
	  }
	}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, "numSolo", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return 0;
	  }
	}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, "selectPairMode", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return false;
	  }
	}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, "selectedBeats", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return [];
	  }
	}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, "sampleMutationRate", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return 15;
	  }
	}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, "noteMutationRate", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return 8;
	  }
	}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, "playingCurrentBeat", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return false;
	  }
	}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, "playingArrangement", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return false;
	  }
	}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, "numSurvivors", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return 6;
	  }
	}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, "numChildren", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return 3;
	  }
	}), _descriptor19 = _applyDecoratedDescriptor(_class.prototype, "fitnessPercentile", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return 70;
	  }
	}), _descriptor20 = _applyDecoratedDescriptor(_class.prototype, "familyName", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return newFamilyName;
	  }
	}), _descriptor21 = _applyDecoratedDescriptor(_class.prototype, "familyNames", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return newFamilyNames;
	  }
	}), _descriptor22 = _applyDecoratedDescriptor(_class.prototype, "tempo", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return 100;
	  }
	}), _descriptor23 = _applyDecoratedDescriptor(_class.prototype, "metronome", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return false;
	  }
	}), _descriptor24 = _applyDecoratedDescriptor(_class.prototype, "arrangements", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return [[]];
	  }
	}), _descriptor25 = _applyDecoratedDescriptor(_class.prototype, "trackPreviewers", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return {};
	  }
	}), _descriptor26 = _applyDecoratedDescriptor(_class.prototype, "currentLitNote", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return 0;
	  }
	}), _descriptor27 = _applyDecoratedDescriptor(_class.prototype, "currentLitBeat", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return 0;
	  }
	}), _descriptor28 = _applyDecoratedDescriptor(_class.prototype, "showAddNewBeat", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return false;
	  }
	}), _descriptor29 = _applyDecoratedDescriptor(_class.prototype, "noteTimer", [_mobx.observable], {
	  enumerable: true,
	  initializer: null
	}), _descriptor30 = _applyDecoratedDescriptor(_class.prototype, "arrangementTimer", [_mobx.observable], {
	  enumerable: true,
	  initializer: null
	}), _descriptor31 = _applyDecoratedDescriptor(_class.prototype, "currentSong", [_mobx.observable], {
	  enumerable: true,
	  initializer: null
	}), _descriptor32 = _applyDecoratedDescriptor(_class.prototype, "currentArrangementIndex", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return 0;
	  }
	}), _descriptor33 = _applyDecoratedDescriptor(_class.prototype, "spaceButtonTarget", [_mobx.observable], {
	  enumerable: true,
	  initializer: function initializer() {
	    return "currentBeat";
	  }
	}), _applyDecoratedDescriptor(_class.prototype, "currentArrangement", [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, "currentArrangement"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "currentGeneration", [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, "currentGeneration"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "currentBeat", [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, "currentBeat"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "currentBeatResolution", [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, "currentBeatResolution"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "allBeatKeys", [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, "allBeatKeys"), _class.prototype), _descriptor34 = _applyDecoratedDescriptor(_class.prototype, "toggleTrackPreviewer", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this = this;

	    return function (index) {
	      _this.trackPreviewers[index] = !_this.trackPreviewers[index];
	      if (_this.trackPreviewers[index]) {
	        setTimeout(function () {
	          _this.toggleTrackPreviewer([index]);
	        }, 1000);
	      }
	    };
	  }
	}), _descriptor35 = _applyDecoratedDescriptor(_class.prototype, "addArrangement", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this2 = this;

	    return function () {
	      _this2.arrangements.push([]);
	      _this2.currentArrangementIndex = _this2.arrangements.length - 1;
	      if (_this2.playingArrangement) {
	        _this2.togglePlayArrangement();
	      }
	    };
	  }
	}), _descriptor36 = _applyDecoratedDescriptor(_class.prototype, "setHoveredBeat", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this3 = this;

	    return function (beatKey) {
	      _this3.hoveredBeatKey = beatKey;
	    };
	  }
	}), _descriptor37 = _applyDecoratedDescriptor(_class.prototype, "clearHoveredBeat", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this4 = this;

	    return function () {
	      _this4.hoveredBeatKey = "";
	    };
	  }
	}), _descriptor38 = _applyDecoratedDescriptor(_class.prototype, "toggleMuteAll", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this5 = this;

	    return function (lastState) {
	      var newState = !lastState;
	      _this5.currentBeat.tracks.forEach(function (track) {
	        track.mute = newState;
	        if (newState) {
	          track.solo = lastState;
	        }
	      });
	    };
	  }
	}), _descriptor39 = _applyDecoratedDescriptor(_class.prototype, "toggleSoloAll", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this6 = this;

	    return function (lastState) {
	      var newState = !lastState;
	      _this6.currentBeat.tracks.forEach(function (track) {
	        track.solo = newState;
	        if (newState) {
	          track.mute = lastState;
	        }
	      });
	      if (lastState) {
	        _this6.numSolo = 0;
	      } else {
	        _this6.numSolo = _this6.currentBeat.tracks.length;
	      }
	    };
	  }
	}), _descriptor40 = _applyDecoratedDescriptor(_class.prototype, "muteUnsolod", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this7 = this;

	    return function () {
	      _this7.currentBeat.tracks.forEach(function (track) {
	        if (!track.solo) {
	          track.mute = true;
	        }
	      });
	    };
	  }
	}), _descriptor41 = _applyDecoratedDescriptor(_class.prototype, "unmuteUnsoloAll", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this8 = this;

	    return function () {
	      _this8.currentBeat.tracks.forEach(function (track) {
	        track.mute = false;
	        track.solo = false;
	      });
	    };
	  }
	}), _descriptor42 = _applyDecoratedDescriptor(_class.prototype, "handleMuteTrack", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this9 = this;

	    return function (track) {
	      if (_this9.numSolo == 0) {
	        track.mute = !track.mute;
	      }
	    };
	  }
	}), _descriptor43 = _applyDecoratedDescriptor(_class.prototype, "handleSoloTrack", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this10 = this;

	    return function (track) {
	      track.solo = !track.solo;
	      if (track.solo) {
	        ++_this10.numSolo;
	        track.mute = false;
	        _this10.muteUnsolod();
	      } else {
	        --_this10.numSolo;
	        track.mute = true;
	        if (_this10.numSolo == 0) {
	          _this10.toggleMuteAll(true);
	        }
	      }
	    };
	  }
	}), _descriptor44 = _applyDecoratedDescriptor(_class.prototype, "resetCurrentLitNote", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this11 = this;

	    return function () {
	      _this11.currentLitNote = 0;
	    };
	  }
	}), _descriptor45 = _applyDecoratedDescriptor(_class.prototype, "resetCurrentLitBeat", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this12 = this;

	    return function () {
	      _this12.currentLitBeat = 0;
	    };
	  }
	}), _descriptor46 = _applyDecoratedDescriptor(_class.prototype, "incrementCurrentLitNote", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this13 = this;

	    return function () {
	      _this13.currentLitNote = (_this13.currentLitNote + 1) % _this13.currentBeat.tracks[0].sequence.length;
	    };
	  }
	}), _descriptor47 = _applyDecoratedDescriptor(_class.prototype, "resetNoteTimer", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this14 = this;

	    return function () {
	      if (_this14.playingCurrentBeat) {
	        var millisecondsPerBeat = 1 / (_this14.tempo / 60 / 1000);
	        var millisecondsPerNote = millisecondsPerBeat * 4 / _this14.currentBeat.tracks[0].sequence.length;
	        clearInterval(_this14.noteTimer);
	        _this14.noteTimer = setInterval(function () {
	          _this14.incrementCurrentLitNote();
	        }, millisecondsPerNote);
	      } else {
	        clearInterval(_this14.noteTimer);
	        _this14.currentLitNote = 0;
	      }
	    };
	  }
	}), _descriptor48 = _applyDecoratedDescriptor(_class.prototype, "incrementCurrentLitBeat", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this15 = this;

	    return function () {
	      _this15.currentLitBeat = (_this15.currentLitBeat + 1) % _this15.currentArrangement.length;
	    };
	  }
	}), _descriptor49 = _applyDecoratedDescriptor(_class.prototype, "resetArrangementTimer", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this16 = this;

	    return function () {
	      if (_this16.playingArrangement) {
	        var millisecondsPerBeat = 1 / (_this16.tempo / 60 / 1000);
	        clearInterval(_this16.arrangementTimer);
	        _this16.arrangementTimer = setInterval(function () {
	          _this16.incrementCurrentLitBeat();
	        }, millisecondsPerBeat * 4);
	      } else {
	        clearInterval(_this16.arrangementTimer);
	        _this16.currentLitBeat = 0;
	      }
	    };
	  }
	}), _descriptor50 = _applyDecoratedDescriptor(_class.prototype, "moveBeatInArrangement", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this17 = this;

	    return function (currentIndex, destinationIndex) {
	      if (_this17.playingArrangement) {
	        _this17.togglePlayArrangement();
	      }
	      var beatToMove = _this17.arrangements[_this17.currentArrangementIndex].splice(currentIndex, 1);
	      _this17.arrangements[_this17.currentArrangementIndex].splice(destinationIndex, 0, beatToMove[0]);
	    };
	  }
	}), _descriptor51 = _applyDecoratedDescriptor(_class.prototype, "setCurrentSong", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this18 = this;

	    return function (song) {
	      _this18.currentSong = song;
	    };
	  }
	}), _descriptor52 = _applyDecoratedDescriptor(_class.prototype, "togglePlayCurrentBeat", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this19 = this;

	    return function () {
	      _this19.spaceButtonTarget = "currentBeat";
	      _this19.playingCurrentBeat = !_this19.playingCurrentBeat;
	      _this19.playingArrangement = false;
	      clearInterval(_this19.arrangementTimer);
	      _this19.resetNoteTimer();
	      _this19.currentLitBeat = 0;
	    };
	  }
	}), _descriptor53 = _applyDecoratedDescriptor(_class.prototype, "togglePlay", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this20 = this;

	    return function () {
	      if (_this20.spaceButtonTarget == "currentBeat") {
	        _this20.togglePlayCurrentBeat();
	      } else {
	        _this20.togglePlayArrangement();
	      }
	    };
	  }
	}), _descriptor54 = _applyDecoratedDescriptor(_class.prototype, "togglePlayArrangement", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this21 = this;

	    return function () {
	      _this21.spaceButtonTarget = "currentArrangement";
	      _this21.playingCurrentBeat = false;
	      _this21.playingArrangement = !_this21.playingArrangement;
	      clearInterval(_this21.noteTimer);
	      _this21.resetArrangementTimer();
	      _this21.currentLitNote = 0;
	    };
	  }
	}), _descriptor55 = _applyDecoratedDescriptor(_class.prototype, "addBeatToArrangement", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this22 = this;

	    return function (beatKey) {
	      if (_this22.playingArrangement) {
	        _this22.togglePlayArrangement();
	      }
	      _this22.arrangements[_this22.currentArrangementIndex].push(beatKey);
	      _this22.updateFamilyInStorage();
	    };
	  }
	}), _descriptor56 = _applyDecoratedDescriptor(_class.prototype, "deleteBeatFromArrangement", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this23 = this;

	    return function (index) {
	      if (_this23.playingArrangement) {
	        _this23.togglePlayArrangement();
	      }
	      _this23.arrangements[_this23.currentArrangementIndex].splice(index, 1);
	      _this23.updateFamilyInStorage();
	    };
	  }
	}), _descriptor57 = _applyDecoratedDescriptor(_class.prototype, "randomizeBestBeats", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this24 = this;

	    return function () {
	      _this24.arrangements[_this24.currentArrangementIndex] = [];
	      var repeatRateInteger = 40;
	      var repeatRate = repeatRateInteger / 100;

	      var allScores = [];
	      _this24.allGenerations.forEach(function (generation) {
	        generation.forEach(function (beat) {
	          allScores.push(beat.score);
	        });
	      });
	      allScores = allScores.sort(function (a, b) {
	        return a - b;
	      });

	      var percentileIndex = Math.floor(allScores.length * _this24.fitnessPercentile / 100) - 1;
	      _this24.allGenerations.forEach(function (generation) {
	        generation.forEach(function (beat) {
	          if (beat.score >= allScores[percentileIndex]) {
	            // roll a dice to repeat the beat
	            var randomInteger = Math.floor(Math.random() * 100);
	            var repeatRateComparitor = 100 * repeatRate;
	            var numRepeats = 1;
	            if (randomInteger > repeatRateComparitor) {
	              numRepeats = Math.floor(Math.random() * 3) + 1;
	            }
	            for (var i = 0; i < numRepeats; i++) {
	              _this24.arrangements[_this24.currentArrangementIndex].push(beat.key);
	            }
	          }
	        });
	      });
	      if (_this24.playingArrangement) {
	        _this24.togglePlayArrangement();
	      }
	    };
	  }
	}), _descriptor58 = _applyDecoratedDescriptor(_class.prototype, "createSong", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this25 = this;

	    return function () {
	      _this25.arrangements[_this25.currentArrangementIndex] = [];
	      var randomInteger = void 0;
	      var selectedGeneration = void 0;
	      var selectedBeat = void 0;
	      var beatForArrangement = void 0;
	      var allBeats = [];
	      var minNoteDensity = 10000;
	      var maxNoteDensity = 0;
	      var currentNoteDensity = void 0;
	      var maxScore = 0;
	      //calculate note density for each beat
	      _this25.allGenerations.forEach(function (generation) {
	        generation.forEach(function (beat) {
	          var numNotes = 0;
	          var numSteps = 0;
	          beat.tracks.forEach(function (track) {
	            track.sequence.forEach(function (note) {
	              if (note == 1) {
	                ++numNotes;
	              }
	              ++numSteps;
	            });
	          });
	          var noteDensity = numNotes / numSteps * beat.tracks[0].sequence.length * beat.tracks.length;

	          if (minNoteDensity > noteDensity) {
	            minNoteDensity = noteDensity;
	          }
	          if (maxNoteDensity < noteDensity) {
	            maxNoteDensity = noteDensity;
	          }
	          allBeats.push([beat, noteDensity]);
	          if (beat.score > maxScore) {
	            maxScore = beat.score;
	          }
	        });
	      });
	      // start filling sections with beats based on their note density
	      var randomBeatIndex = void 0;
	      var probability = void 0;
	      var mean = void 0;
	      var sd = (maxNoteDensity - minNoteDensity) / 10;
	      var sectionLengths = ["4-low", "8-medium", "4-high", "4-medium", "4-low"];
	      var exponentialConstant = 1;
	      var exponentialScoreConstant = 7;
	      var minSampleDifference = 2;
	      var sampleDifference = void 0;
	      var differenceComparitor = void 0;
	      var lastBeat = void 0;
	      sectionLengths.forEach(function (lengthDefinition) {
	        var _lengthDefinition$spl = lengthDefinition.split("-"),
	            _lengthDefinition$spl2 = _slicedToArray(_lengthDefinition$spl, 2),
	            length = _lengthDefinition$spl2[0],
	            complexity = _lengthDefinition$spl2[1];

	        for (var i = 0; i < Math.abs(length); i++) {
	          var acceptedBeat = false;
	          while (!acceptedBeat) {
	            randomBeatIndex = Math.floor(Math.random() * allBeats.length);

	            var _allBeats$randomBeatI = _slicedToArray(allBeats[randomBeatIndex], 2),
	                randomBeat = _allBeats$randomBeatI[0],
	                randomBeatNoteDensity = _allBeats$randomBeatI[1];

	            if (complexity == "high") {
	              mean = maxNoteDensity;
	            } else if (complexity == "medium") {
	              mean = (maxNoteDensity - minNoteDensity) / 2;
	            } else {
	              mean = minNoteDensity;
	            }
	            probability = (0, _utils.getNormalProbability)(randomBeatNoteDensity, mean, sd);
	            if (i > 0) {
	              sampleDifference = (0, _utils.calculateSampleDifference)(lastBeat, randomBeat);
	              differenceComparitor = Math.pow(Math.E, -1 * (sampleDifference - minSampleDifference) / exponentialConstant);
	            }
	            var scoreComparitor = Math.pow(Math.E, -1 * (maxScore - randomBeat.score) / exponentialScoreConstant);
	            if ((differenceComparitor > Math.random() || i == 0) && probability / (0, _utils.getNormalProbability)(mean, mean, sd) > Math.random() && scoreComparitor > Math.random()) {
	              _this25.arrangements[_this25.currentArrangementIndex].push(randomBeat.key);
	              acceptedBeat = true;
	              lastBeat = randomBeat;
	            }
	          }
	        }
	      });

	      if (_this25.playingArrangement) {
	        _this25.togglePlayArrangement();
	      }
	      _this25.updateFamilyInStorage();
	    };
	  }
	}), _descriptor59 = _applyDecoratedDescriptor(_class.prototype, "addSample", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this26 = this;

	    return function (newSample) {
	      _this26.samples.push(newSample);
	    };
	  }
	}), _descriptor60 = _applyDecoratedDescriptor(_class.prototype, "setAllSamples", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this27 = this;

	    return function (samples) {
	      _this27.samples = samples;
	    };
	  }
	}), _descriptor61 = _applyDecoratedDescriptor(_class.prototype, "addGeneration", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this28 = this;

	    return function (newGeneration) {
	      _this28.allGenerations.push(newGeneration);
	      _this28.generation++;
	      _this28.beatNum = 0;
	      _this28.resetNoteTimer();
	      _this28.updateFamilyInStorage();
	    };
	  }
	}), _descriptor62 = _applyDecoratedDescriptor(_class.prototype, "killSubsequentGenerations", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this29 = this;

	    return function () {
	      _this29.allGenerations = _this29.allGenerations.slice(0, _this29.generation + 1);
	      _this29.arrangements = [[]];
	      _this29.currentArrangementIndex = 0;
	    };
	  }
	}), _descriptor63 = _applyDecoratedDescriptor(_class.prototype, "selectBeat", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this30 = this;

	    return function (generation, beatNum) {
	      var selectedKey = generation + "." + beatNum;

	      _this30.generation = generation;
	      _this30.beatNum = beatNum;
	      _this30.resetNoteTimer();

	      if (_this30.selectPairMode && !_this30.selectedBeats.includes(selectedKey)) {
	        _this30.selectedBeats.push(selectedKey);
	      } else if (_this30.selectPairMode && _this30.selectedBeats.includes(selectedKey)) {
	        _this30.selectedBeats.splice(_this30.selectedBeats.indexOf(selectedKey), 1);
	      } else {
	        _this30.selectedBeats = [selectedKey];
	      }
	    };
	  }
	}), _descriptor64 = _applyDecoratedDescriptor(_class.prototype, "toggleSelectPairMode", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this31 = this;

	    return function () {
	      _this31.selectPairMode = !_this31.selectPairMode;
	      _this31.selectedBeats = [];
	    };
	  }
	}), _descriptor65 = _applyDecoratedDescriptor(_class.prototype, "setGeneration", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this32 = this;

	    return function (generation) {
	      _this32.generation = generation;
	    };
	  }
	}), _descriptor66 = _applyDecoratedDescriptor(_class.prototype, "selectFamily", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this33 = this;

	    return function (familyName) {
	      _this33.familyName = familyName;
	      // SIDE EFFECT
	      var familyData = JSON.parse(localStorage.getItem(familyName));
	      _this33.allGenerations = familyData.family;
	      _this33.arrangements = familyData.arrangements;
	      _this33.currentArrangementIndex = 0;
	      _this33.beatNum = 0;
	      _this33.generation = 0;

	      var familyNames = JSON.parse(localStorage.getItem("familyNames"));
	      _this33.familyNames = familyNames;
	    };
	  }
	}), _descriptor67 = _applyDecoratedDescriptor(_class.prototype, "selectArrangement", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this34 = this;

	    return function (index) {
	      _this34.currentArrangementIndex = index;
	    };
	  }
	}), _descriptor68 = _applyDecoratedDescriptor(_class.prototype, "clearSavedFamilies", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    return function (state) {
	      // SIDE EFFECT
	      localStorage.clear();
	    };
	  }
	}), _descriptor69 = _applyDecoratedDescriptor(_class.prototype, "updateFamilyInStorage", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this35 = this;

	    return function () {
	      localStorage.setItem("familyNames", JSON.stringify(newFamilyNames));

	      localStorage.setItem(_this35.familyName, JSON.stringify({
	        family: _this35.allGenerations,
	        arrangements: _this35.arrangements
	      }));
	    };
	  }
	}), _descriptor70 = _applyDecoratedDescriptor(_class.prototype, "setNoteMutationRate", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this36 = this;

	    return function (rate) {
	      _this36.noteMutationRate = rate;
	    };
	  }
	}), _descriptor71 = _applyDecoratedDescriptor(_class.prototype, "setTempo", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this37 = this;

	    return function (tempo) {
	      _this37.tempo = tempo;
	      _this37.resetNoteTimer();
	      _this37.resetArrangementTimer();
	    };
	  }
	}), _descriptor72 = _applyDecoratedDescriptor(_class.prototype, "setSampleMutationRate", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this38 = this;

	    return function (sampleMutationRate) {
	      _this38.sampleMutationRate = sampleMutationRate;
	    };
	  }
	}), _descriptor73 = _applyDecoratedDescriptor(_class.prototype, "setNumChildren", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this39 = this;

	    return function (numChildren) {
	      _this39.numChildren = numChildren;
	    };
	  }
	}), _descriptor74 = _applyDecoratedDescriptor(_class.prototype, "setNumSurvivors", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this40 = this;

	    return function (numSurvivors) {
	      _this40.numSurvivors = numSurvivors;
	    };
	  }
	}), _descriptor75 = _applyDecoratedDescriptor(_class.prototype, "setFitnessPercentile", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this41 = this;

	    return function (fitnessPercentile) {
	      _this41.fitnessPercentile = fitnessPercentile;
	    };
	  }
	}), _descriptor76 = _applyDecoratedDescriptor(_class.prototype, "toggleMetronome", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this42 = this;

	    return function () {
	      _this42.metronome = !_this42.metronome;
	    };
	  }
	}), _descriptor77 = _applyDecoratedDescriptor(_class.prototype, "toggleAddNewBeat", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this43 = this;

	    return function (show) {
	      if (show != null) {
	        _this43.showAddNewBeat = !_this43.showAddNewBeat;
	      } else {
	        _this43.showAddNewBeat = show;
	      }
	    };
	  }
	}), _descriptor78 = _applyDecoratedDescriptor(_class.prototype, "addBeatToCurrentGen", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this44 = this;

	    return function (beat) {
	      //this.currentBeat.tracks.forEach((track)=>{
	      //this.trackPreviewers[track.sample] = false
	      //})
	      var newBeatNum = _this44.currentGeneration.length;

	      _this44.allGenerations[_this44.generation].push(_extends({}, (0, _utils.deepClone)(beat), {
	        key: _this44.generation + "." + newBeatNum,
	        score: 0
	      }));

	      _this44.beatNum = newBeatNum;
	    };
	  }
	}), _descriptor79 = _applyDecoratedDescriptor(_class.prototype, "addTrackToCurrentBeat", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this45 = this;

	    return function (track) {
	      _this45.currentBeat.tracks.forEach(function (track) {
	        _this45.trackPreviewers[track.sample] = false;
	      });
	      _this45.currentBeat.tracks.push(track);
	    };
	  }
	}), _descriptor80 = _applyDecoratedDescriptor(_class.prototype, "toggleNoteOnBeat", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this46 = this;

	    return function (generation, beatNum, trackNum, note) {
	      var newNote = _this46.allGenerations[generation][beatNum].tracks[trackNum].sequence[note] === 0 ? 1 : 0;
	      _this46.allGenerations[generation][beatNum].tracks[trackNum].sequence[note] = newNote;
	      _this46.updateFamilyInStorage();
	    };
	  }
	}), _descriptor81 = _applyDecoratedDescriptor(_class.prototype, "setSampleOnBeat", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this47 = this;

	    return function (generation, beatNum, trackNum, sample) {
	      // set new sample
	      _this47.allGenerations[generation][beatNum].tracks[trackNum].sample = sample;
	      _this47.updateFamilyInStorage();
	    };
	  }
	}), _descriptor82 = _applyDecoratedDescriptor(_class.prototype, "removeTrackFromBeat", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this48 = this;

	    return function (generation, beatNum, trackNum) {
	      _this48.allGenerations[_this48.generation][_this48.beatNum].tracks.splice(trackNum, 1);
	      _this48.updateFamilyInStorage();
	    };
	  }
	}), _descriptor83 = _applyDecoratedDescriptor(_class.prototype, "setGain", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this49 = this;

	    return function (sample, gain) {
	      _this49.samples[sample].gain = gain;
	      _this49.updateFamilyInStorage();
	    };
	  }
	}), _descriptor84 = _applyDecoratedDescriptor(_class.prototype, "setSynthGain", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this50 = this;

	    return function (gain) {
	      _this50.synthGain = gain;
	    };
	  }
	}), _descriptor85 = _applyDecoratedDescriptor(_class.prototype, "setScore", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this51 = this;

	    return function (score) {
	      _this51.currentBeat.score = score;
	      _this51.currentLitNote = 0;
	      _this51.updateFamilyInStorage();
	    };
	  }
	}), _descriptor86 = _applyDecoratedDescriptor(_class.prototype, "nextBeat", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this52 = this;

	    return function () {
	      var wasPlaying = _this52.playingCurrentBeat;
	      if (wasPlaying) {
	        _this52.playingCurrentBeat = false;
	      }
	      var currentGeneration = _this52.allGenerations[_this52.generation];
	      _this52.unmuteUnsoloAll();
	      _this52.beatNum = (_this52.beatNum + 1) % currentGeneration.length;
	      _this52.currentLitNote = 0;
	      if (wasPlaying) {
	        _this52.playingCurrentBeat = true;
	        _this52.resetNoteTimer();
	      }
	      _this52.currentBeat.tracks.forEach(function (track) {
	        _this52.trackPreviewers[track.sample] = false;
	      });
	    };
	  }
	}), _descriptor87 = _applyDecoratedDescriptor(_class.prototype, "prevBeat", [_mobx.action], {
	  enumerable: true,
	  initializer: function initializer() {
	    var _this53 = this;

	    return function () {
	      var currentGeneration = _this53.allGenerations[_this53.generation];
	      _this53.unmuteUnsoloAll();
	      if (_this53.beatNum == 0) {
	        _this53.beatNum = currentGeneration.length - 1;
	      } else {
	        _this53.beatNum = (_this53.beatNum - 1) % currentGeneration.length;
	      }

	      _this53.currentLitNote = 0;
	      _this53.resetNoteTimer();
	      _this53.currentBeat.tracks.forEach(function (track) {
	        _this53.trackPreviewers[track.sample] = false;
	      });
	    };
	  }
	})), _class);


	var store = new Store();

	exports.default = store;

/***/ },
/* 119 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = [
	//{
	//key    : "0.0",
	//name   : "Bad Synth",
	//score  : 0,
	//tracks : [
	//{
	//trackType : "sampler",
	//sample   : "samples/kick.wav",
	//sequence : [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0,],
	//mute     : false,
	//solo     : false,
	//},
	//{
	//trackType : "sampler",
	//sample   : "samples/clave.wav",
	//sequence : [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
	//mute     : false,
	//solo     : false,
	//},
	//{
	//trackType : "sampler",
	//sample   : "samples/hihat.wav",
	//sequence : [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
	//mute     : false,
	//solo     : false,
	//},
	//{
	//trackType : "sampler",
	//sample   : "samples/8580__ST_060.wav",
	//sequence : [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
	//mute     : false,
	//solo     : false,
	//},
	//{
	//trackType : "sampler",
	//sample   : "samples/8580_PST_090.wav",
	//sequence : [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
	//mute     : false,
	//solo     : false,
	//},
	//{
	//trackType : "sampler",
	//sample   : "samples/8580_PST_102.wav",
	//sequence : [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
	//mute     : false,
	//solo     : false,
	//},
	//],
	//},
	{
	  key: "0.0",
	  name: "Percussion 1",
	  score: 0,
	  tracks: [{
	    trackType: "sampler",
	    sample: "samples/kick.wav",
	    sequence: [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0],
	    mute: false,
	    solo: false
	  }, {
	    trackType: "sampler",
	    sample: "samples/snare.wav",
	    sequence: [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
	    mute: false,
	    solo: false
	  }, {
	    trackType: "sampler",
	    sample: "samples/hihat.wav",
	    sequence: [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0],
	    mute: false,
	    solo: false
	  }]
	}, {
	  key: "0.1",
	  name: "Percussion 2",
	  score: 0,
	  tracks: [{
	    trackType: "synth",
	    synthType: "square",
	    sample: "c3",
	    sequence: [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	    duration: [0, 2, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
	  }, {
	    trackType: "synth",
	    synthType: "square",
	    sample: "d3",
	    sequence: [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
	    duration: [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0]
	  }, {
	    trackType: "synth",
	    synthType: "square",
	    sample: "e3",
	    sequence: [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	    duration: [0, 2, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
	  }, {
	    trackType: "synth",
	    synthType: "square",
	    sample: "f3",
	    sequence: [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0],
	    duration: [0, 0, 0, 2, 0, 4, 0, 0, 2, 0, 0, 4, 0, 0, 0, 0]
	  }]
	}, {
	  key: "0.2",
	  name: "Synth 1",
	  score: 0,
	  tracks: [{
	    trackType: "synth",
	    synthType: "square",
	    sample: "c3",
	    sequence: [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	    duration: [0, 2, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
	  }, {
	    trackType: "synth",
	    synthType: "square",
	    sample: "d3",
	    sequence: [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
	    duration: [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0]
	  }, {
	    trackType: "synth",
	    synthType: "square",
	    sample: "e3",
	    sequence: [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	    duration: [0, 2, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
	  }, {
	    trackType: "synth",
	    synthType: "square",
	    sample: "f3",
	    sequence: [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0],
	    duration: [0, 0, 0, 2, 0, 4, 0, 0, 2, 0, 0, 4, 0, 0, 0, 0]
	  }]
	}];

/***/ },
/* 120 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var staticFilePath = "/static/";

	exports.default = {

	  "samples/6581__ST_012.wav": {
	    name: "6581__ST_012",
	    path: staticFilePath + "samples/6581__ST_012.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },
	  "samples/8580_PST_060.wav": {
	    name: "8580_PST_060",
	    path: staticFilePath + "samples/8580_PST_060.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },
	  "samples/8580_PST_090.wav": {
	    name: "8580_PST_090",
	    path: staticFilePath + "samples/8580_PST_090.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },
	  "samples/8580_PST_102.wav": {
	    name: "8580_PST_102",
	    path: staticFilePath + "samples/8580_PST_102.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },
	  "samples/8580_PS__090.wav": {
	    name: "8580_PS__090",
	    path: staticFilePath + "samples/8580_PS__090.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },
	  "samples/8580_PS__102.wav": {
	    name: "8580_PS__102",
	    path: staticFilePath + "samples/8580_PS__102.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },
	  "samples/8580_P_T_078.wav": {
	    name: "8580_P_T_078",
	    path: staticFilePath + "samples/8580_P_T_078.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },
	  "samples/8580__ST_060.wav": {
	    name: "8580__ST_060",
	    path: staticFilePath + "samples/8580__ST_060.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },
	  "samples/8580__ST_084.wav": {
	    name: "8580__ST_084",
	    path: staticFilePath + "samples/8580__ST_084.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },
	  "samples/8580__ST_102.wav": {
	    name: "8580__ST_102",
	    path: staticFilePath + "samples/8580__ST_102.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },

	  "samples/clave.wav": {
	    name: "clave",
	    path: staticFilePath + "samples/clave.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },
	  "samples/cowbell.wav": {
	    name: "cowbell",
	    path: staticFilePath + "samples/cowbell.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },
	  "samples/hi_hat.wav": {
	    name: "hi_hat",
	    path: staticFilePath + "samples/hi_hat.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },
	  "samples/hihat.wav": {
	    name: "hihat",
	    path: staticFilePath + "samples/hihat.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },
	  "samples/kick.wav": {
	    name: "kick",
	    path: staticFilePath + "samples/kick.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },

	  "samples/snare.wav": {
	    name: "snare",
	    path: staticFilePath + "samples/snare.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },

	  "samples/ff7_vince_guit1.wav": {
	    name: "ff7_vince_guit1",
	    path: staticFilePath + "samples/ff7_vince_guit1.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },

	  "samples/ff7_vince_guit2.wav": {
	    name: "ff7_vince_guit2",
	    path: staticFilePath + "samples/ff7_vince_guit2.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },

	  "samples/ff7_vince_guit3.wav": {
	    name: "ff7_vince_guit3",
	    path: staticFilePath + "samples/ff7_vince_guit3.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },

	  "samples/ff7_vince_guit4.wav": {
	    name: "ff7_vince_guit4",
	    path: staticFilePath + "samples/ff7_vince_guit4.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  },

	  "samples/ff7_vince_guit5.wav": {
	    name: "ff7_vince_guit5",
	    path: staticFilePath + "samples/ff7_vince_guit5.wav",
	    gain: 0.5,
	    mute: false,
	    solo: false
	  }

	};

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.calculateSampleDifference = exports.getNormalProbability = exports.allNotesInRange = exports.generateFamilyName = exports.normalizeSubdivisions = exports.findInJSON = exports.getSubarray = exports.getRandomIndices = exports.deepClone = undefined;

	var _mobx = __webpack_require__(63);

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	var deepClone = function deepClone(obj) {
	  return JSON.parse(JSON.stringify(obj));
	};

	var updateObjectInArray = function updateObjectInArray(arr, index, update) {
	  return [].concat(_toConsumableArray(arr.slice(0, index)), [update], _toConsumableArray(arr.slice(index + 1)));
	};

	var getNormalProbability = function getNormalProbability(x, mean, sd) {
	  var variance = Math.pow(sd, 2);
	  var pi = 3.1415926;
	  var denom = Math.pow(2 * pi * variance, .5);
	  var num = Math.pow(Math.E, -1 * Math.pow(x - mean, 2) / (2 * variance));
	  return num / denom;
	};
	var calculateSampleDifference = function calculateSampleDifference(beat1, beat2) {

	  var beat1Samples = beat1.tracks.map(function (track) {
	    return track.sample;
	  });
	  var beat2Samples = beat2.tracks.map(function (track) {
	    return track.sample;
	  });
	  var numDifferent = 0;
	  beat1Samples.forEach(function (sample) {
	    if (!beat2Samples.includes(sample)) {
	      ++numDifferent;
	    }
	  });
	  beat2Samples.forEach(function (sample) {
	    if (!beat1Samples.includes(sample)) {
	      ++numDifferent;
	    }
	  });
	  return numDifferent;
	};
	var normalizeSubdivisions = function normalizeSubdivisions(beat, newSubdivisions) {
	  // Deep clone beat object
	  var newBeat = JSON.parse(JSON.stringify((0, _mobx.toJS)(beat)));
	  var subdivisionRatio = newSubdivisions / newBeat.tracks[0].sequence.length;
	  newBeat.tracks.forEach(function (track, i) {
	    var newSequence = [];
	    track.sequence.forEach(function (note) {
	      newSequence.push(note);
	      for (var j = 0; j < subdivisionRatio - 1; j++) {
	        newSequence.push(0);
	      }
	    });
	    newBeat.tracks[i].sequence = newSequence;
	  });
	  return newBeat;
	};

	var getRandomIndices = function getRandomIndices(numIntegers, arrayLength) {
	  var randomIntegerArray = [];
	  for (var i = 0; i < numIntegers; i++) {
	    var randomInteger = Math.floor(Math.random() * arrayLength);
	    if (randomIntegerArray.indexOf(randomInteger) == -1) {
	      randomIntegerArray.push(randomInteger);
	      continue;
	    }
	    var numTries = 0;
	    while (randomIntegerArray.indexOf(randomInteger) > -1) {
	      ++numTries;
	      if (numTries > 20) {
	        break;
	      }
	      randomInteger = Math.floor(Math.random() * arrayLength);
	      if (randomIntegerArray.indexOf(randomInteger) == -1) {
	        randomIntegerArray.push(randomInteger);
	        break;
	      }
	    }
	  }
	  return randomIntegerArray;
	};

	var getSubarray = function getSubarray(array, indexList) {
	  return indexList.map(function (i) {
	    return array[i];
	  });
	};

	var findInJSON = function findInJSON(object, key, value) {
	  var result = {};
	  var found = false;
	  object.forEach(function (element) {
	    if (element[key] && element[key] == value) {
	      result = element;
	      found = true;
	    }
	  });
	  if (found) {
	    return result;
	  } else {
	    return null;
	  }
	};

	function generateFamilyName() {
	  var words = ["ball", "belt", "blouse", "boot", "camp", "club", "day", "hat", "house", "jacket", "pant", "plant", "pocket", "scarf", "shirt", "sleeve", "sock", "space", "town", "trouser", "vest"];
	  var curDate = new Date();
	  var dateString = curDate.getDate() + "/" + (curDate.getMonth() + 1) + "/" + curDate.getFullYear() + " @ " + curDate.getHours() + ":" + curDate.getMinutes() + ":" + curDate.getSeconds();
	  var familyName = Array(3).fill().map(function () {
	    return words[Math.floor(Math.random() * words.length)];
	  }).join("-") + " " + dateString;
	  return familyName;
	}

	var noteLetters = ["c", "d", "e", "f", "g", "a", "b"];
	var octaves = [2, 3, 4];

	var allNotesInRange = [];
	octaves.forEach(function (octave) {
	  noteLetters.forEach(function (letter) {
	    allNotesInRange.push("" + letter + octave);
	    if (!["b", "e"].includes(letter)) {
	      allNotesInRange.push(letter + "#" + octave);
	    }
	  });
	});

	exports.deepClone = deepClone;
	exports.getRandomIndices = getRandomIndices;
	exports.getSubarray = getSubarray;
	exports.findInJSON = findInJSON;
	exports.normalizeSubdivisions = normalizeSubdivisions;
	exports.generateFamilyName = generateFamilyName;
	exports.allNotesInRange = allNotesInRange;
	exports.getNormalProbability = getNormalProbability;
	exports.calculateSampleDifference = calculateSampleDifference;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.mitosis = exports.mateSelectedMembers = exports.mateGeneration = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	var _utils = __webpack_require__(121);

	var _mobx = __webpack_require__(63);

	var _store = __webpack_require__(118);

	var _store2 = _interopRequireDefault(_store);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var getFitnessThreshold = function getFitnessThreshold(generation) {
	  var fitnessPercentile = _store2.default.fitnessPercentile / 100;
	  var allScores = generation.map(function (beat) {
	    return beat.score;
	  });
	  allScores = allScores.sort(function (a, b) {
	    return a - b;
	  });

	  var percentileIndex = Math.floor(allScores.length * fitnessPercentile) - 1;
	  return allScores[percentileIndex];
	};

	var selectSurvivors = function selectSurvivors(generation) {
	  var numIndices = Math.min(_store2.default.numSurvivors, generation.length);
	  var randomIntegerArray = (0, _utils.getRandomIndices)(numIndices, generation.length);
	  var survivors = randomIntegerArray.map(function (index) {
	    return generation[index];
	  });
	  return survivors;
	};

	var mutateByAddTrack = function mutateByAddTrack(beat) {
	  var randomInteger = Math.floor(Math.random() * 100);
	  if (randomInteger < _store2.default.sampleMutationRate) {
	    var currentBeatSampleKeys = beat.tracks.map(function (track) {
	      return track.sample;
	    });

	    var trackType = "";
	    var validSampleKeys = [];

	    randomInteger = Math.floor(Math.random() * 100);
	    if (randomInteger > 50) {
	      trackType = "sampler";
	      validSampleKeys = Object.keys(_store2.default.samples);
	    } else {
	      trackType = "synth";
	      validSampleKeys = _utils.allNotesInRange.slice(0);
	    }

	    // Remove samples from the pool of options if they're already in the beat
	    currentBeatSampleKeys.forEach(function (key) {
	      if (validSampleKeys.includes(key)) {
	        validSampleKeys.splice(validSampleKeys.indexOf(key), 1);
	      }
	    });

	    var randomIndex = Math.floor(Math.random() * validSampleKeys.length);

	    var randomSampleKey = validSampleKeys[randomIndex];
	    var numNotes = beat.tracks[0].sequence.length;
	    var newTrackSequence = mutateSequence(Array(numNotes).fill(0));

	    if (!newTrackSequence.includes(1)) {
	      randomIndex = Math.floor(Math.random() * numNotes);
	      newTrackSequence[randomIndex] = 1;
	    }

	    beat.tracks.push({
	      sample: randomSampleKey,
	      sequence: newTrackSequence,
	      trackType: trackType
	    });
	  }
	  return beat;
	};

	var selectFitMembers = function selectFitMembers(generation) {
	  var fitnessThreshold = getFitnessThreshold(generation);
	  var fitMembers = generation.filter(function (beat) {
	    return beat.score >= fitnessThreshold;
	  });
	  return fitMembers;
	};

	var mutateByKillTrack = function mutateByKillTrack(beat) {
	  var survivingTracks = [];
	  beat.tracks.forEach(function (track, i) {
	    var randomInteger = Math.floor(Math.random() * 100);
	    // divide mutateRate by number of tracks so the total chance of killing is the same as the rate
	    if (randomInteger > _store2.default.sampleMutationRate / beat.tracks.length ||
	    // Don't kill the last track
	    survivingTracks.length == 0 && i == beat.tracks.length - 1) {
	      survivingTracks.push(track);
	    }
	  });
	  beat.tracks = survivingTracks;
	  return beat;
	};

	var mateTracks = function mateTracks(momTrack, momScore, dadTrack, dadScore) {
	  var childSequence = mateSequences(momTrack.sequence, momScore, dadTrack.sequence, dadScore);
	  childSequence = mutateSequence(childSequence);
	  var childTrack = {
	    sequence: childSequence,
	    sample: momTrack.sample,
	    trackType: momTrack.trackType
	  };
	  return childTrack;
	};
	var rankSequenceFitness = function rankSequenceFitness(momSequence, momScore, dadSequence, dadScore) {
	  var fittestSequence = [];
	  var weakestSequence = [];
	  if (dadScore > momScore) {
	    fittestSequence = dadSequence;
	    weakestSequence = momSequence;
	  } else {
	    fittestSequence = momSequence;
	    weakestSequence = dadSequence;
	  }
	  return {
	    fittestSequence: fittestSequence,
	    weakestSequence: weakestSequence
	  };
	};
	var mateSequences = function mateSequences(momSequence, momScore, dadSequence, dadScore) {
	  var percentDifference = 0;
	  if (Math.max(dadScore, momScore) > 0) {
	    percentDifference = Math.abs((dadScore - momScore) / Math.max(dadScore, momScore));
	  }
	  var inheritanceComparitor = 100 * (0.5 - percentDifference);

	  var rankedSequences = rankSequenceFitness(momSequence, momScore, dadSequence, dadScore);

	  var childSequence = [];
	  momSequence.forEach(function (note, noteIndex) {
	    var randomInteger = Math.floor(Math.random() * 100);
	    var survivingNote = 0;
	    if (randomInteger > inheritanceComparitor) {
	      survivingNote = rankedSequences.fittestSequence[noteIndex];
	    } else {
	      survivingNote = rankedSequences.weakestSequence[noteIndex];
	    }
	    childSequence.push(survivingNote);
	  });

	  return childSequence;
	};
	var mutateSamplersByMusicalEnhancement = function mutateSamplersByMusicalEnhancement(beat) {
	  var mutatedBeat = {};
	  mutatedBeat.key = beat.key;
	  mutatedBeat.score = beat.score;
	  mutatedBeat.tracks = [];
	  if (beat.momKey) {
	    mutatedBeat.momKey = beat.momKey;
	  }
	  if (beat.dadKey) {
	    mutatedBeat.dadKey = beat.dadKey;
	  }

	  //catalogue number of samples playing on each step
	  var samplerNotesPerStep = Array(beat.tracks[0].sequence.length).fill(0);
	  var exponentialConstant = 1.5;
	  var numSamplesBeforeMutating = 2;
	  beat.tracks.forEach(function (track) {
	    if (track.trackType == "sampler") {
	      track.sequence.forEach(function (note, index) {
	        if (note) {
	          ++samplerNotesPerStep[index];
	        }
	      });
	    }
	  });
	  var samplerDensityPerStep = Array(beat.tracks[0].sequence.length).fill(0);
	  samplerNotesPerStep.forEach(function (numNotes, index) {
	    if (index > 0) {

	      samplerDensityPerStep[index] = (samplerNotesPerStep[index] + samplerNotesPerStep[index - 1]) / (2 * beat.tracks.length);
	    } else {
	      samplerDensityPerStep[index] = samplerNotesPerStep[index] / beat.tracks.length;
	    }
	  });
	  //roll dice turn off notes if too many samples are playing
	  beat.tracks.forEach(function (track) {
	    if (track.trackType == "sampler") {
	      track.sequence.forEach(function (note, index) {
	        if (note == 1) {
	          var randomInteger = Math.floor(Math.random() * 100);
	          var leaveNoteProbability = Math.pow(Math.E, -1 * samplerDensityPerStep[index] / exponentialConstant) * 100;
	          console.log(samplerDensityPerStep[index], leaveNoteProbability, randomInteger);
	          if (randomInteger > leaveNoteProbability) {
	            track.sequence[index] = 0;
	            if (index < track.sequence.length - 1) {

	              samplerDensityPerStep[index + 1] = samplerDensityPerStep[index + 1] - 1 / (2 * beat.tracks.length);
	            }
	          }
	        }
	      });
	    }
	    if (track.sequence.includes(1)) {
	      mutatedBeat.tracks.push(track);
	    }
	  });
	  return mutatedBeat;
	};
	var mutateSynthsByMusicalEnhancement = function mutateSynthsByMusicalEnhancement(beat) {
	  var closeNoteProbability = 0;
	  var mutatedBeat = {};
	  mutatedBeat.key = beat.key;
	  mutatedBeat.score = beat.score;
	  mutatedBeat.tracks = beat.tracks;
	  if (beat.momKey) {
	    mutatedBeat.momKey = beat.momKey;
	  }
	  if (beat.dadKey) {
	    mutatedBeat.dadKey = beat.dadKey;
	  }

	  var synthNotesPerStep = beat.tracks[0].sequence.map(function () {
	    return [];
	  });

	  // catalogue synth notes playing on each step
	  beat.tracks.forEach(function (track, trackIndex) {
	    if (track.trackType == "synth") {
	      track.sequence.forEach(function (note, index) {
	        if (note == 1) {
	          synthNotesPerStep[index].push([track.sample, trackIndex]);
	        }
	      });
	    }
	  });
	  // remove notes that are too close to each other.
	  synthNotesPerStep.forEach(function (step, stepIndex) {
	    var lastNote = null;
	    step.forEach(function (note, noteIndex) {
	      var _note = _slicedToArray(note, 2),
	          trackSample = _note[0],
	          trackIndex = _note[1];

	      if (lastNote) {
	        var interval = _utils.allNotesInRange.indexOf(trackSample) - _utils.allNotesInRange.indexOf(lastNote);
	        if (Math.abs(interval) < 3) {
	          var randomInteger = Math.floor(Math.random() * 100);
	          if (randomInteger > closeNoteProbability) {
	            mutatedBeat.tracks[trackIndex].sequence[stepIndex] = 0;
	          } else {
	            lastNote = trackSample;
	          }
	        }
	      } else {
	        lastNote = trackSample;
	      }
	    });
	  });
	  return mutatedBeat;
	};
	var mutateSequence = function mutateSequence(sequence) {
	  var mutatedSequence = sequence.map(function (note) {
	    var randomInteger = Math.floor(Math.random() * 100);
	    if (randomInteger < _store2.default.noteMutationRate) {
	      note = 1 - note;
	    }
	    return note;
	  });
	  return mutatedSequence;
	};

	var matePair = function matePair(momBeat, dadBeat) {
	  var childBeat = {
	    tracks: [],
	    score: 0,
	    momKey: momBeat.key,
	    dadKey: dadBeat.key
	    // child's key is added later


	    // handle all mom samples
	  };momBeat.tracks.forEach(function (momTrack) {
	    var dadTrack = (0, _utils.findInJSON)(dadBeat.tracks, 'sample', momTrack.sample);
	    if (dadTrack) {
	      childBeat.tracks.push(mateTracks(momTrack, momBeat.score, dadTrack, dadBeat.score));
	    } else {
	      childBeat.tracks.push({
	        sample: momTrack.sample,
	        sequence: mutateSequence(momTrack.sequence),
	        trackType: momTrack.trackType
	      });
	    }
	  });

	  // handle remaining dad samples
	  dadBeat.tracks.forEach(function (dadTrack) {
	    var momTrack = (0, _utils.findInJSON)(momBeat.tracks, 'sample', dadTrack.sample);
	    if (!momTrack) {
	      childBeat.tracks.push(mateTracks(dadTrack, dadBeat.score, dadTrack, dadBeat.score));
	    }
	  });

	  if (childBeat.tracks.length > 1) {
	    childBeat = mutateByKillTrack(childBeat);
	  }
	  childBeat = mutateByAddTrack(childBeat);
	  console.log(childBeat);
	  childBeat = mutateSamplersByMusicalEnhancement(childBeat);
	  childBeat = mutateSynthsByMusicalEnhancement(childBeat);

	  return childBeat;
	};

	var mateMembers = function mateMembers(members) {
	  var nextGeneration = [];
	  members.forEach(function (momBeat, momIndex) {
	    members.slice(momIndex + 1).forEach(function (dadBeat, dadIndex) {
	      console.log("indices", momIndex, dadIndex + momIndex + 1);
	      if (momBeat.tracks[0].sequence.length > dadBeat.tracks[0].sequence.length) {
	        dadBeat = (0, _utils.normalizeSubdivisions)(dadBeat, momBeat.tracks[0].sequence.length);
	      } else {
	        momBeat = (0, _utils.normalizeSubdivisions)(momBeat, dadBeat.tracks[0].sequence.length);
	      }

	      for (var i = 0; i < _store2.default.numChildren; i++) {
	        var childBeat = matePair(momBeat, dadBeat);
	        nextGeneration.push(childBeat);
	      }
	    });
	  });

	  return nextGeneration;
	};
	var mitosis = function mitosis(originalBeat) {
	  var newBeat = JSON.parse(JSON.stringify((0, _mobx.toJS)(originalBeat)));
	  console.log((0, _mobx.toJS)(newBeat));
	  var mutatedTracks = [];
	  newBeat.tracks.forEach(function (track) {
	    track.sequence = mutateSequence(track.sequence);
	    mutatedTracks.push(track);
	  });
	  newBeat.tracks = mutatedTracks;
	  if (originalBeat.tracks.length > 1) {
	    newBeat = mutateByKillTrack(newBeat);
	  }
	  newBeat = mutateByAddTrack(newBeat);
	  console.log(newBeat);
	  newBeat = mutateSamplersByMusicalEnhancement(newBeat);
	  newBeat = mutateSynthsByMusicalEnhancement(newBeat);
	  return newBeat;
	};
	var mateSelectedMembers = function mateSelectedMembers(members) {
	  var nextGeneration = mateMembers(members);
	  var survivingMembers = selectSurvivors(nextGeneration);
	  var reindexedMembers = survivingMembers.map(function (beat, i) {
	    return _extends({}, beat, {
	      key: _store2.default.allGenerations.length + "." + i
	    });
	  });
	  return reindexedMembers;
	};
	var mateGeneration = function mateGeneration(generation) {
	  var fitMembers = selectFitMembers(generation);
	  var nextGeneration = mateMembers(fitMembers);
	  var survivingMembers = selectSurvivors(nextGeneration);
	  var reindexedMembers = survivingMembers.map(function (beat, i) {
	    return _extends({}, beat, {
	      key: _store2.default.generation + 1 + "." + i
	    });
	  });
	  _store2.default.unmuteUnsoloAll();
	  return reindexedMembers;
	};

	exports.mateGeneration = mateGeneration;
	exports.mateSelectedMembers = mateSelectedMembers;
	exports.mitosis = mitosis;

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(124);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(126)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../node_modules/css-loader/index.js!../node_modules/postcss-loader/index.js!./index.css", function() {
				var newContent = require("!!../node_modules/css-loader/index.js!../node_modules/postcss-loader/index.js!./index.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports


	// module
	exports.push([module.id, "html, body {\n  height: 100%;\n  font-size: 22px;\n  color: white;\n  font-family: \"Hind Madurai\";\n}\n\ninput {\n  margin-left: 10px;\n}\n\n.Resizer {\n  box-sizing: border-box;\n  background: #aaa;\n  /*opacity: 0.5;*/\n  z-index: 1;\n  background-clip: padding-box;\n  -webkit-transition: all 0.5s ease;\n  transition: all 0.5s ease;\n}\n\n.Resizer.horizontal {\n  height: 15px;\n  margin: -5px 0;\n  border-top: 5px solid rgba(255, 255, 255, 0);\n  border-bottom: 5px solid rgba(255, 255, 255, 0);\n  cursor: row-resize;\n  width: 100%;\n}\n\n.Resizer.horizontal:hover {\n  border-top: 5px solid #3A9FCC;\n  border-bottom: 5px solid #3A9FCC;\n}\n\n.Resizer.vertical {\n  width: 15px;\n  margin: 0 -5px;\n  border-left: 5px solid rgba(255, 255, 255, 0);\n  border-right: 5px solid rgba(255, 255, 255, 0);\n  cursor: col-resize;\n}\n\n.Resizer.vertical:hover {\n  border-left: 5px solid #3A9FCC;\n  border-right: 5px solid #3A9FCC;\n}", ""]);

	// exports


/***/ },
/* 125 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];

		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};

		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];

	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}

		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();

		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

		var styles = listToStyles(list);
		addStylesToDom(styles, options);

		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}

	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}

	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}

	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}

	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}

	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}

	function addStyle(obj, options) {
		var styleElement, update, remove;

		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}

		update(obj);

		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}

	var replaceText = (function () {
		var textStore = [];

		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();

	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;

		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}

	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;

		if(media) {
			styleElement.setAttribute("media", media)
		}

		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}

	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;

		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}

		var blob = new Blob([css], { type: "text/css" });

		var oldSrc = linkElement.href;

		linkElement.href = URL.createObjectURL(blob);

		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 127 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var darkerBlueGray = "#1d1f27";
	var blue = "#0980B2";
	var burntOrange = "#A30700";
	var green = "#32B209";
	var lightBlue = "#1495CC";
	var lighterBlue = "#3A9FCC";
	var red = "#FF002A";
	var salmon = "#D1949E";
	var yellow = "#FFF419";
	var lightGray = "#292B30";

	var panelBackground = lightGray;
	var headerFooterBgColor = darkerBlueGray;
	var itemBgColor = darkerBlueGray;

	exports.blue = blue;
	exports.burntOrange = burntOrange;
	exports.green = green;
	exports.lightBlue = lightBlue;
	exports.lighterBlue = lighterBlue;
	exports.red = red;
	exports.salmon = salmon;
	exports.yellow = yellow;
	exports.lightGray = lightGray;
	exports.panelBackground = panelBackground;
	exports.headerFooterBgColor = headerFooterBgColor;
	exports.itemBgColor = itemBgColor;

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _class2;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactMusic = __webpack_require__(129);

	var _mobxReact = __webpack_require__(62);

	var _styledComponents = __webpack_require__(64);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _button = __webpack_require__(156);

	var _button2 = _interopRequireDefault(_button);

	var _player = __webpack_require__(157);

	var _player2 = _interopRequireDefault(_player);

	var _store = __webpack_require__(118);

	var _store2 = _interopRequireDefault(_store);

	var _utils = __webpack_require__(121);

	var _colors = __webpack_require__(127);

	var _reactBeautifulDnd = __webpack_require__(158);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var StyledArrangement = _styledComponents2.default.div.withConfig({
	  displayName: "arrangement__StyledArrangement",
	  componentId: "mrvjsm-0"
	})(["background:", ";border-top:1px solid ", ";height:125px;overflow:visible;"], _colors.itemBgColor, _colors.lightGray);

	var StyledBlock = _styledComponents2.default.div.withConfig({
	  displayName: "arrangement__StyledBlock",
	  componentId: "mrvjsm-1"
	})(["border-right:1px solid ", ";background-color:", ";display:inline-block;height:100%;width:80px;position:relative;vertical-align:top;text-align:center;cursor:pointer;&:hover{color:black;background-color:lightGray;}"], _colors.lightGray, function (props) {
	  return props.highlight ? "#e9573f" : _colors.itemBgColor;
	});

	var AddBlockButton = _styledComponents2.default.div.withConfig({
	  displayName: "arrangement__AddBlockButton",
	  componentId: "mrvjsm-2"
	})(["cursor:pointer;font-size:30px;&:hover{color:red;}"]);

	var DeleteBlockButton = _styledComponents2.default.div.withConfig({
	  displayName: "arrangement__DeleteBlockButton",
	  componentId: "mrvjsm-3"
	})(["position:absolute;top:0;right:5px;text-align:center;cursor:pointer;font-size:20px;&:hover{color:red;}"]);

	var ArrangementControls = _styledComponents2.default.div.withConfig({
	  displayName: "arrangement__ArrangementControls",
	  componentId: "mrvjsm-4"
	})([""]);

	var Block = (0, _mobxReact.observer)(_class = function (_Component) {
	  _inherits(Block, _Component);

	  function Block() {
	    _classCallCheck(this, Block);

	    return _possibleConstructorReturn(this, (Block.__proto__ || Object.getPrototypeOf(Block)).apply(this, arguments));
	  }

	  _createClass(Block, [{
	    key: "render",
	    value: function render() {
	      var _this2 = this;

	      return _react2.default.createElement(
	        _reactBeautifulDnd.Draggable,
	        { draggableId: "" + this.props.beatKey + this.props.index, index: this.props.index },
	        function (provided) {
	          return _react2.default.createElement(
	            StyledBlock,
	            _extends({
	              innerRef: provided.innerRef,
	              highlight: _this2.props.highlight,
	              onClick: _this2.props.handleClickBeat
	            }, provided.draggableProps, provided.dragHandleProps),
	            _react2.default.createElement(
	              "p",
	              null,
	              _this2.props.beatKey
	            ),
	            _react2.default.createElement(
	              DeleteBlockButton,
	              { onClick: _this2.props.deleteBlock },
	              "\xD7"
	            )
	          );
	        }
	      );
	    }
	  }]);

	  return Block;
	}(_react.Component)) || _class;

	var Arrangement = (0, _mobxReact.observer)(_class2 = function (_Component2) {
	  _inherits(Arrangement, _Component2);

	  function Arrangement() {
	    var _ref;

	    var _temp, _this3, _ret;

	    _classCallCheck(this, Arrangement);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this3 = _possibleConstructorReturn(this, (_ref = Arrangement.__proto__ || Object.getPrototypeOf(Arrangement)).call.apply(_ref, [this].concat(args))), _this3), _this3.state = {
	      beatToAdd: _store2.default.allBeatKeys[0],
	      lastClicked: -1
	    }, _this3.deleteBlock = function (index) {
	      _store2.default.deleteBeatFromArrangement(index);
	    }, _this3.addBlock = function () {
	      _store2.default.addBeatToArrangement(_this3.state.beatToAdd);
	    }, _this3.handleSelectArrangement = function (evt) {
	      _store2.default.selectArrangement(parseInt(evt.target.value));
	    }, _this3.handleSelectBeatToAdd = function (evt) {
	      _this3.setState({
	        beatToAdd: evt.target.value
	      });
	    }, _this3.handleClickBeat = function (beatKey, arrangementIndex) {
	      var idData = beatKey.split(".");
	      var generation = parseInt(idData[0]);
	      var beatNum = parseInt(idData[1]);
	      _store2.default.selectBeat(generation, beatNum);
	    }, _this3.handleMouseDown = function (arrangementIndex) {
	      _this3.setState({
	        lastClicked: arrangementIndex
	      });
	    }, _this3.handleMouseUp = function (destinationIndex) {
	      _store2.default.moveBeatInArrangement(_this3.state.lastClicked, destinationIndex);
	    }, _this3.concatenateBeats = function (beats, resolution) {
	      var finalBeat = { "tracks": [] };
	      var uniqueSamples = {};
	      var numUniqueSamples = 0;
	      var allSamples = [];

	      beats.forEach(function (beat, i) {
	        beat.tracks.forEach(function (track, i) {
	          var sample = track.sample;
	          if (uniqueSamples[sample] == null) {
	            uniqueSamples[sample] = numUniqueSamples;
	            finalBeat.tracks.push({
	              "sample": sample,
	              "sequence": [],
	              "trackType": track.trackType
	            });
	            ++numUniqueSamples;
	          }
	        });
	      });

	      beats.forEach(function (beat, i) {
	        var beatSamples = [];
	        beat.tracks.forEach(function (track, i) {
	          var sample = track.sample;
	          var sampleIndex = uniqueSamples[sample];
	          if (finalBeat.tracks[sampleIndex].sequence.length > 0) {
	            finalBeat.tracks[sampleIndex].sequence = finalBeat.tracks[sampleIndex].sequence.concat(track.sequence);
	          } else {
	            finalBeat.tracks[sampleIndex].sequence = track.sequence;
	          }
	          if (!beatSamples.includes(sample)) {
	            beatSamples.push(sample);
	          }
	        });
	        // fill one measure of zeros if samples weren't in current beat
	        for (var sample in uniqueSamples) {
	          var sampleIndex = uniqueSamples[sample];

	          if (!beatSamples.includes(sample)) {
	            finalBeat.tracks[sampleIndex].sequence = finalBeat.tracks[sampleIndex].sequence.concat(new Array(resolution).fill(0));
	          }
	        }
	      });
	      return finalBeat;
	    }, _this3.getMaxSubdivisions = function (beats) {
	      var maxSubdivisions = 0;
	      beats.forEach(function (beatKey, i) {
	        var beatKeySplit = beatKey.split(".");
	        var generation = parseInt(beatKeySplit[0]);
	        var childIndex = parseInt(beatKeySplit[1]);
	        var beat = _store2.default.allGenerations[generation][childIndex];
	        var subdivisions = beat["tracks"][0].sequence.length;
	        if (subdivisions > maxSubdivisions) {
	          maxSubdivisions = subdivisions;
	        }
	      });
	      return maxSubdivisions;
	    }, _this3.getNormalizedBeats = function (beats, maxSubdivisions) {
	      var normalizedBeats = [];
	      beats.forEach(function (beatKey, i) {
	        var beatKeySplit = beatKey.split(".");
	        var generation = parseInt(beatKeySplit[0]);
	        var childIndex = parseInt(beatKeySplit[1]);
	        var beat = _store2.default.allGenerations[generation][childIndex];
	        var normalizedBeat = (0, _utils.normalizeSubdivisions)(beat, maxSubdivisions);
	        normalizedBeats.push(normalizedBeat);
	      });
	      return normalizedBeats;
	    }, _this3.randomizeBestBeats = function () {
	      var confirmMessage = "Randomizing beats now will clear your existing arrangement.\nAre you sure you want to do that?";
	      if (_store2.default.currentArrangement.length > 0) {
	        if (confirm(confirmMessage)) {
	          _store2.default.randomizeBestBeats();
	        }
	      } else {
	        _store2.default.randomizeBestBeats();
	      }
	    }, _this3.createSong = function () {
	      var confirmMessage = "Creating song now will clear your existing arrangement.\nAre you sure you want to do that?";
	      if (_store2.default.currentArrangement.length > 0) {
	        if (confirm(confirmMessage)) {
	          _store2.default.createSong();
	        }
	      } else {
	        _store2.default.createSong();
	      }
	    }, _temp), _possibleConstructorReturn(_this3, _ret);
	  }

	  _createClass(Arrangement, [{
	    key: "render",
	    value: function render() {
	      var _this4 = this;

	      var arrangementOptions = [];
	      _store2.default.arrangements.forEach(function (arrangement, index) {
	        arrangementOptions.push(_react2.default.createElement(
	          "option",
	          { key: index, value: index },
	          index
	        ));
	      });

	      var backgroundColor = "";
	      var beatBlocks = _store2.default.currentArrangement.map(function (beatKey, i) {
	        var highlight = i === _store2.default.currentLitBeat && _store2.default.playingArrangement;

	        return _react2.default.createElement(Block, {
	          key: i,
	          index: i,
	          beatKey: beatKey,
	          highlight: highlight,
	          lastClicked: _this4.state.lastClicked,
	          deleteBlock: function deleteBlock() {
	            _this4.deleteBlock(i);
	          },
	          handleClickBeat: function handleClickBeat() {
	            _this4.handleClickBeat(beatKey, i);
	          },
	          handleMoveBeat: _this4.handleMoveBeat,
	          handleMouseDown: function handleMouseDown() {
	            _this4.handleMouseDown(i);
	          },
	          handleMouseUp: function handleMouseUp() {
	            _this4.handleMouseUp(i);
	          }
	        });
	      });

	      // get max subdivisions
	      var maxSubdivisions = this.getMaxSubdivisions(_store2.default.currentArrangement);
	      var normalizedBeats = this.getNormalizedBeats(_store2.default.currentArrangement, maxSubdivisions);
	      var finalArrangementBeat = this.concatenateBeats(normalizedBeats, maxSubdivisions);
	      var beatKeyOptions = _store2.default.allBeatKeys.map(function (key) {
	        return _react2.default.createElement(
	          "option",
	          { key: key, value: key },
	          key
	        );
	      });

	      var playButtonText = _store2.default.playingArrangement ? "Stop" : "Play";

	      var onDragEnd = function onDragEnd(result) {
	        _store2.default.moveBeatInArrangement(result.source.index, result.destination.index);
	      };

	      return _react2.default.createElement(
	        _reactBeautifulDnd.DragDropContext,
	        {
	          onDragEnd: onDragEnd
	        },
	        _react2.default.createElement(
	          "div",
	          null,
	          _react2.default.createElement(
	            ArrangementControls,
	            null,
	            _react2.default.createElement(
	              _button2.default,
	              { onClick: _store2.default.togglePlayArrangement },
	              playButtonText
	            ),
	            _react2.default.createElement(
	              _button2.default,
	              { onClick: this.randomizeBestBeats },
	              "Randomize Best Beats"
	            ),
	            _react2.default.createElement(
	              _button2.default,
	              { onClick: this.createSong },
	              "Create Song"
	            ),
	            _react2.default.createElement(
	              _button2.default,
	              { onClick: _store2.default.addArrangement },
	              "Add Arrangement"
	            ),
	            _react2.default.createElement(
	              "select",
	              {
	                onChange: this.handleSelectArrangement,
	                value: _store2.default.currentArrangementIndex
	              },
	              arrangementOptions
	            )
	          ),
	          _react2.default.createElement(
	            _reactBeautifulDnd.Droppable,
	            { droppableId: "arrangement-dropdown", direction: "horizontal" },
	            function (provided) {
	              return _react2.default.createElement(
	                StyledArrangement,
	                _extends({
	                  innerRef: provided.innerRef
	                }, provided.droppableProps),
	                beatBlocks,
	                provided.placeholder,
	                _react2.default.createElement(
	                  StyledBlock,
	                  null,
	                  _react2.default.createElement(
	                    "p",
	                    null,
	                    _react2.default.createElement(
	                      "select",
	                      {
	                        defaultValue: beatKeyOptions[0],
	                        onChange: _this4.handleSelectBeatToAdd
	                      },
	                      beatKeyOptions
	                    )
	                  ),
	                  _react2.default.createElement(
	                    AddBlockButton,
	                    { onClick: _this4.addBlock },
	                    "+"
	                  )
	                ),
	                _react2.default.createElement(_player2.default, {
	                  beat: finalArrangementBeat,
	                  playing: _store2.default.playingArrangement,
	                  resolution: maxSubdivisions,
	                  bars: _store2.default.currentArrangement.length
	                })
	              );
	            }
	          )
	        )
	      );
	    }
	  }]);

	  return Arrangement;
	}(_react.Component)) || _class2;

	exports.default = Arrangement;

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Synth = exports.Song = exports.Sampler = exports.Sequencer = exports.Reverb = exports.PingPong = exports.Overdrive = exports.Monosynth = exports.MoogFilter = exports.LFO = exports.Gain = exports.Filter = exports.Delay = exports.Compressor = exports.Chorus = exports.Bitcrusher = exports.Bus = exports.Analyser = undefined;

	var _analyser = __webpack_require__(130);

	var _analyser2 = _interopRequireDefault(_analyser);

	var _bitcrusher = __webpack_require__(131);

	var _bitcrusher2 = _interopRequireDefault(_bitcrusher);

	var _bus = __webpack_require__(133);

	var _bus2 = _interopRequireDefault(_bus);

	var _chorus = __webpack_require__(134);

	var _chorus2 = _interopRequireDefault(_chorus);

	var _compressor = __webpack_require__(135);

	var _compressor2 = _interopRequireDefault(_compressor);

	var _delay = __webpack_require__(136);

	var _delay2 = _interopRequireDefault(_delay);

	var _filter = __webpack_require__(137);

	var _filter2 = _interopRequireDefault(_filter);

	var _gain = __webpack_require__(138);

	var _gain2 = _interopRequireDefault(_gain);

	var _lfo = __webpack_require__(139);

	var _lfo2 = _interopRequireDefault(_lfo);

	var _monosynth = __webpack_require__(140);

	var _monosynth2 = _interopRequireDefault(_monosynth);

	var _moogFilter = __webpack_require__(146);

	var _moogFilter2 = _interopRequireDefault(_moogFilter);

	var _overdrive = __webpack_require__(147);

	var _overdrive2 = _interopRequireDefault(_overdrive);

	var _pingPong = __webpack_require__(148);

	var _pingPong2 = _interopRequireDefault(_pingPong);

	var _reverb = __webpack_require__(149);

	var _reverb2 = _interopRequireDefault(_reverb);

	var _sequencer = __webpack_require__(150);

	var _sequencer2 = _interopRequireDefault(_sequencer);

	var _sampler = __webpack_require__(151);

	var _sampler2 = _interopRequireDefault(_sampler);

	var _song = __webpack_require__(153);

	var _song2 = _interopRequireDefault(_song);

	var _synth = __webpack_require__(155);

	var _synth2 = _interopRequireDefault(_synth);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.Analyser = _analyser2.default;
	exports.Bus = _bus2.default;
	exports.Bitcrusher = _bitcrusher2.default;
	exports.Chorus = _chorus2.default;
	exports.Compressor = _compressor2.default;
	exports.Delay = _delay2.default;
	exports.Filter = _filter2.default;
	exports.Gain = _gain2.default;
	exports.LFO = _lfo2.default;
	exports.MoogFilter = _moogFilter2.default;
	exports.Monosynth = _monosynth2.default;
	exports.Overdrive = _overdrive2.default;
	exports.PingPong = _pingPong2.default;
	exports.Reverb = _reverb2.default;
	exports.Sequencer = _sequencer2.default;
	exports.Sampler = _sampler2.default;
	exports.Song = _song2.default;
	exports.Synth = _synth2.default;

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;
	/* eslint-disable no-restricted-syntax */


	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Analyser = (_temp = _class = function (_Component) {
	  _inherits(Analyser, _Component);

	  function Analyser(props, context) {
	    _classCallCheck(this, Analyser);

	    var _this = _possibleConstructorReturn(this, (Analyser.__proto__ || Object.getPrototypeOf(Analyser)).call(this, props));

	    _this.visualization = context.audioContext.createScriptProcessor(2048, 1, 1);
	    _this.visualization.connect(context.audioContext.destination);

	    _this.connectNode = context.audioContext.createAnalyser();
	    _this.connectNode.connect(context.connectNode);
	    _this.applyProps = _this.applyProps.bind(_this);

	    _this.visualization.onaudioprocess = function () {
	      if (props.onAudioProcess) {
	        props.onAudioProcess(_this.connectNode);
	      }
	    };
	    return _this;
	  }

	  _createClass(Analyser, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return _extends({}, this.context, {
	        connectNode: this.connectNode
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.applyProps(this.props);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      this.applyProps(nextProps);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.connectNode.disconnect();
	    }
	  }, {
	    key: 'applyProps',
	    value: function applyProps(props) {
	      for (var prop in props) {
	        if (this.connectNode[prop]) {
	          this.connectNode[prop] = props[prop];
	        }
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return Analyser;
	}(_react.Component), _class.propTypes = {
	  children: _propTypes2.default.node,
	  fftSize: _propTypes2.default.number,
	  onAudioProcess: _propTypes2.default.func,
	  smoothingTimeConstant: _propTypes2.default.number
	}, _class.defaultProps = {
	  fftSize: 128,
	  onAudioProcess: function onAudioProcess() {},
	  smoothingTimeConstant: 0.3
	}, _class.contextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _class.childContextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _temp);
	exports.default = Analyser;

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;
	/* eslint-disable no-restricted-syntax */


	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _tunajs = __webpack_require__(132);

	var _tunajs2 = _interopRequireDefault(_tunajs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Bitcrusher = (_temp = _class = function (_Component) {
	  _inherits(Bitcrusher, _Component);

	  function Bitcrusher(props, context) {
	    _classCallCheck(this, Bitcrusher);

	    var _this = _possibleConstructorReturn(this, (Bitcrusher.__proto__ || Object.getPrototypeOf(Bitcrusher)).call(this, props));

	    var tuna = new _tunajs2.default(context.audioContext);

	    _this.connectNode = new tuna.Bitcrusher({
	      bits: props.bits,
	      normfreq: props.normfreq,
	      bufferSize: props.bufferSize
	    });

	    _this.connectNode.connect(context.connectNode);
	    return _this;
	  }

	  _createClass(Bitcrusher, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return _extends({}, this.context, {
	        connectNode: this.connectNode
	      });
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      for (var prop in nextProps) {
	        if (this.connectNode[prop]) {
	          this.connectNode[prop] = nextProps[prop];
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.connectNode.disconnect();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return Bitcrusher;
	}(_react.Component), _class.propTypes = {
	  bits: _propTypes2.default.number,
	  bufferSize: _propTypes2.default.number,
	  children: _propTypes2.default.node,
	  normfreq: _propTypes2.default.number
	}, _class.defaultProps = {
	  bits: 8,
	  bufferSize: 256,
	  normfreq: 0.1
	}, _class.contextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _class.childContextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _temp);
	exports.default = Bitcrusher;

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/*
	    Copyright (c) 2012 DinahMoe AB & Oskar Eriksson

	    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation
	    files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy,
	    modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software
	    is furnished to do so, subject to the following conditions:

	    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

	    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
	    OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	*/
	/*global module*/
	(function(window) {

	    var userContext,
	        userInstance,
	        pipe = function(param, val) {
	            param.value = val;
	        },
	        Super = Object.create(null, {
	            activate: {
	                writable: true,
	                value: function(doActivate) {
	                    if (doActivate) {
	                        this.input.disconnect();
	                        this.input.connect(this.activateNode);
	                        if (this.activateCallback) {
	                            this.activateCallback(doActivate);
	                        }
	                    } else {
	                        this.input.disconnect();
	                        this.input.connect(this.output);
	                    }
	                }
	            },
	            bypass: {
	                get: function() {
	                    return this._bypass;
	                },
	                set: function(value) {
	                    if (this._lastBypassValue === value) {
	                        return;
	                    }
	                    this._bypass = value;
	                    this.activate(!value);
	                    this._lastBypassValue = value;
	                }
	            },
	            connect: {
	                value: function(target) {
	                    this.output.connect(target);
	                }
	            },
	            disconnect: {
	                value: function(target) {
	                    this.output.disconnect(target);
	                }
	            },
	            connectInOrder: {
	                value: function(nodeArray) {
	                    var i = nodeArray.length - 1;
	                    while (i--) {
	                        if (!nodeArray[i].connect) {
	                            return console.error("AudioNode.connectInOrder: TypeError: Not an AudioNode.", nodeArray[i]);
	                        }
	                        if (nodeArray[i + 1].input) {
	                            nodeArray[i].connect(nodeArray[i + 1].input);
	                        } else {
	                            nodeArray[i].connect(nodeArray[i + 1]);
	                        }
	                    }
	                }
	            },
	            getDefaults: {
	                value: function() {
	                    var result = {};
	                    for (var key in this.defaults) {
	                        result[key] = this.defaults[key].value;
	                    }
	                    return result;
	                }
	            },
	            automate: {
	                value: function(property, value, duration, startTime) {
	                    var start = startTime ? ~~(startTime / 1000) : userContext.currentTime,
	                        dur = duration ? ~~(duration / 1000) : 0,
	                        _is = this.defaults[property],
	                        param = this[property],
	                        method;

	                    if (param) {
	                        if (_is.automatable) {
	                            if (!duration) {
	                                method = "setValueAtTime";
	                            } else {
	                                method = "linearRampToValueAtTime";
	                                param.cancelScheduledValues(start);
	                                param.setValueAtTime(param.value, start);
	                            }
	                            param[method](value, dur + start);
	                        } else {
	                            param = value;
	                        }
	                    } else {
	                        console.error("Invalid Property for " + this.name);
	                    }
	                }
	            }
	        }),
	        FLOAT = "float",
	        BOOLEAN = "boolean",
	        STRING = "string",
	        INT = "int";

	    if (typeof module !== "undefined" && module.exports) {
	        module.exports = Tuna;
	    } else if (true) {
	        window.define("Tuna", definition);
	    } else {
	        window.Tuna = Tuna;
	    }

	    function definition() {
	        return Tuna;
	    }

	    function Tuna(context) {
	        if (!(this instanceof Tuna)) {
	            return new Tuna(context);
	        }
	        if (!window.AudioContext) {
	            window.AudioContext = window.webkitAudioContext;
	        }
	        if (!context) {
	            console.log("tuna.js: Missing audio context! Creating a new context for you.");
	            context = window.AudioContext && (new window.AudioContext());
	        }
	        if (!context) {
	            throw new Error("Tuna cannot initialize because this environment does not support web audio.");
	        }
	        connectify(context);
	        userContext = context;
	        userInstance = this;
	    }

	    function connectify(context) {
	        if (context.__connectified__ === true) return;

	        var gain = context.createGain(),
	            proto = Object.getPrototypeOf(Object.getPrototypeOf(gain)),
	            oconnect = proto.connect;

	        proto.connect = shimConnect;
	        context.__connectified__ = true; // Prevent overriding connect more than once

	        function shimConnect() {
	            var node = arguments[0];
	            arguments[0] = Super.isPrototypeOf ? (Super.isPrototypeOf(node) ? node.input : node) : (node.input || node);
	            oconnect.apply(this, arguments);
	            return node;
	        }
	    }

	    function dbToWAVolume(db) {
	        return Math.max(0, Math.round(100 * Math.pow(2, db / 6)) / 100);
	    }

	    function fmod(x, y) {
	        // http://kevin.vanzonneveld.net
	        // *     example 1: fmod(5.7, 1.3);
	        // *     returns 1: 0.5
	        var tmp, tmp2, p = 0,
	            pY = 0,
	            l = 0.0,
	            l2 = 0.0;

	        tmp = x.toExponential().match(/^.\.?(.*)e(.+)$/);
	        p = parseInt(tmp[2], 10) - (tmp[1] + "").length;
	        tmp = y.toExponential().match(/^.\.?(.*)e(.+)$/);
	        pY = parseInt(tmp[2], 10) - (tmp[1] + "").length;

	        if (pY > p) {
	            p = pY;
	        }

	        tmp2 = (x % y);

	        if (p < -100 || p > 20) {
	            // toFixed will give an out of bound error so we fix it like this:
	            l = Math.round(Math.log(tmp2) / Math.log(10));
	            l2 = Math.pow(10, l);

	            return (tmp2 / l2).toFixed(l - p) * l2;
	        } else {
	            return parseFloat(tmp2.toFixed(-p));
	        }
	    }

	    function sign(x) {
	        if (x === 0) {
	            return 1;
	        } else {
	            return Math.abs(x) / x;
	        }
	    }

	    function tanh(n) {
	        return (Math.exp(n) - Math.exp(-n)) / (Math.exp(n) + Math.exp(-n));
	    }

	    function initValue(userVal, defaultVal) {
	        return userVal === undefined ? defaultVal : userVal;
	    }

	    Tuna.prototype.Bitcrusher = function(properties) {
	        if (!properties) {
	            properties = this.getDefaults();
	        }
	        this.bufferSize = properties.bufferSize || this.defaults.bufferSize.value;

	        this.input = userContext.createGain();
	        this.activateNode = userContext.createGain();
	        this.processor = userContext.createScriptProcessor(this.bufferSize, 1, 1);
	        this.output = userContext.createGain();

	        this.activateNode.connect(this.processor);
	        this.processor.connect(this.output);

	        var phaser = 0,
	            last = 0,
	            input, output, step, i, length;
	        this.processor.onaudioprocess = function(e) {
	            input = e.inputBuffer.getChannelData(0),
	            output = e.outputBuffer.getChannelData(0),
	            step = Math.pow(1 / 2, this.bits);
	            length = input.length;
	            for (i = 0; i < length; i++) {
	                phaser += this.normfreq;
	                if (phaser >= 1.0) {
	                    phaser -= 1.0;
	                    last = step * Math.floor(input[i] / step + 0.5);
	                }
	                output[i] = last;
	            }
	        };

	        this.bits = properties.bits || this.defaults.bits.value;
	        this.normfreq = initValue(properties.normfreq, this.defaults.normfreq.value);
	        this.bypass = properties.bypass || false;
	    };
	    Tuna.prototype.Bitcrusher.prototype = Object.create(Super, {
	        name: {
	            value: "Bitcrusher"
	        },
	        defaults: {
	            writable: true,
	            value: {
	                bits: {
	                    value: 4,
	                    min: 1,
	                    max: 16,
	                    automatable: false,
	                    type: INT
	                },
	                bufferSize: {
	                    value: 4096,
	                    min: 256,
	                    max: 16384,
	                    automatable: false,
	                    type: INT
	                },
	                bypass: {
	                    value: false,
	                    automatable: false,
	                    type: BOOLEAN
	                },
	                normfreq: {
	                    value: 0.1,
	                    min: 0.0001,
	                    max: 1.0,
	                    automatable: false,
	                    type: FLOAT
	                }
	            }
	        },
	        bits: {
	            enumerable: true,
	            get: function() {
	                return this.processor.bits;
	            },
	            set: function(value) {
	                this.processor.bits = value;
	            }
	        },
	        normfreq: {
	            enumerable: true,
	            get: function() {
	                return this.processor.normfreq;
	            },
	            set: function(value) {
	                this.processor.normfreq = value;
	            }
	        }
	    });

	    Tuna.prototype.Cabinet = function(properties) {
	        if (!properties) {
	            properties = this.getDefaults();
	        }
	        this.input = userContext.createGain();
	        this.activateNode = userContext.createGain();
	        this.convolver = this.newConvolver(properties.impulsePath || "../impulses/impulse_guitar.wav");
	        this.makeupNode = userContext.createGain();
	        this.output = userContext.createGain();

	        this.activateNode.connect(this.convolver.input);
	        this.convolver.output.connect(this.makeupNode);
	        this.makeupNode.connect(this.output);

	        this.makeupGain = initValue(properties.makeupGain, this.defaults.makeupGain);
	        this.bypass = properties.bypass || false;
	    };
	    Tuna.prototype.Cabinet.prototype = Object.create(Super, {
	        name: {
	            value: "Cabinet"
	        },
	        defaults: {
	            writable: true,
	            value: {
	                makeupGain: {
	                    value: 1,
	                    min: 0,
	                    max: 20,
	                    automatable: true,
	                    type: FLOAT
	                },
	                bypass: {
	                    value: false,
	                    automatable: false,
	                    type: BOOLEAN
	                }
	            }
	        },
	        makeupGain: {
	            enumerable: true,
	            get: function() {
	                return this.makeupNode.gain;
	            },
	            set: function(value) {
	                this.makeupNode.gain.value = value;
	            }
	        },
	        newConvolver: {
	            value: function(impulsePath) {
	                return new userInstance.Convolver({
	                    impulse: impulsePath,
	                    dryLevel: 0,
	                    wetLevel: 1
	                });
	            }
	        }
	    });

	    Tuna.prototype.Chorus = function(properties) {
	        if (!properties) {
	            properties = this.getDefaults();
	        }
	        this.input = userContext.createGain();
	        this.attenuator = this.activateNode = userContext.createGain();
	        this.splitter = userContext.createChannelSplitter(2);
	        this.delayL = userContext.createDelay();
	        this.delayR = userContext.createDelay();
	        this.feedbackGainNodeLR = userContext.createGain();
	        this.feedbackGainNodeRL = userContext.createGain();
	        this.merger = userContext.createChannelMerger(2);
	        this.output = userContext.createGain();

	        this.lfoL = new userInstance.LFO({
	            target: this.delayL.delayTime,
	            callback: pipe
	        });
	        this.lfoR = new userInstance.LFO({
	            target: this.delayR.delayTime,
	            callback: pipe
	        });

	        this.input.connect(this.attenuator);
	        this.attenuator.connect(this.output);
	        this.attenuator.connect(this.splitter);
	        this.splitter.connect(this.delayL, 0);
	        this.splitter.connect(this.delayR, 1);
	        this.delayL.connect(this.feedbackGainNodeLR);
	        this.delayR.connect(this.feedbackGainNodeRL);
	        this.feedbackGainNodeLR.connect(this.delayR);
	        this.feedbackGainNodeRL.connect(this.delayL);
	        this.delayL.connect(this.merger, 0, 0);
	        this.delayR.connect(this.merger, 0, 1);
	        this.merger.connect(this.output);

	        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);
	        this.rate = initValue(properties.rate, this.defaults.rate.value);
	        this.delay = initValue(properties.delay, this.defaults.delay.value);
	        this.depth = initValue(properties.depth, this.defaults.depth.value);
	        this.lfoR.phase = Math.PI / 2;
	        this.attenuator.gain.value = 0.6934; // 1 / (10 ^ (((20 * log10(3)) / 3) / 20))
	        this.lfoL.activate(true);
	        this.lfoR.activate(true);
	        this.bypass = properties.bypass || false;
	    };
	    Tuna.prototype.Chorus.prototype = Object.create(Super, {
	        name: {
	            value: "Chorus"
	        },
	        defaults: {
	            writable: true,
	            value: {
	                feedback: {
	                    value: 0.4,
	                    min: 0,
	                    max: 0.95,
	                    automatable: false,
	                    type: FLOAT
	                },
	                delay: {
	                    value: 0.0045,
	                    min: 0,
	                    max: 1,
	                    automatable: false,
	                    type: FLOAT
	                },
	                depth: {
	                    value: 0.7,
	                    min: 0,
	                    max: 1,
	                    automatable: false,
	                    type: FLOAT
	                },
	                rate: {
	                    value: 1.5,
	                    min: 0,
	                    max: 8,
	                    automatable: false,
	                    type: FLOAT
	                },
	                bypass: {
	                    value: false,
	                    automatable: false,
	                    type: BOOLEAN
	                }
	            }
	        },
	        delay: {
	            enumerable: true,
	            get: function() {
	                return this._delay;
	            },
	            set: function(value) {
	                this._delay = 0.0002 * (Math.pow(10, value) * 2);
	                this.lfoL.offset = this._delay;
	                this.lfoR.offset = this._delay;
	                this._depth = this._depth;
	            }
	        },
	        depth: {
	            enumerable: true,
	            get: function() {
	                return this._depth;
	            },
	            set: function(value) {
	                this._depth = value;
	                this.lfoL.oscillation = this._depth * this._delay;
	                this.lfoR.oscillation = this._depth * this._delay;
	            }
	        },
	        feedback: {
	            enumerable: true,
	            get: function() {
	                return this._feedback;
	            },
	            set: function(value) {
	                this._feedback = value;
	                this.feedbackGainNodeLR.gain.value = this._feedback;
	                this.feedbackGainNodeRL.gain.value = this._feedback;
	            }
	        },
	        rate: {
	            enumerable: true,
	            get: function() {
	                return this._rate;
	            },
	            set: function(value) {
	                this._rate = value;
	                this.lfoL.frequency = this._rate;
	                this.lfoR.frequency = this._rate;
	            }
	        }
	    });

	    Tuna.prototype.Compressor = function(properties) {
	        if (!properties) {
	            properties = this.getDefaults();
	        }
	        this.input = userContext.createGain();
	        this.compNode = this.activateNode = userContext.createDynamicsCompressor();
	        this.makeupNode = userContext.createGain();
	        this.output = userContext.createGain();

	        this.compNode.connect(this.makeupNode);
	        this.makeupNode.connect(this.output);

	        this.automakeup = initValue(properties.automakeup, this.defaults.automakeup.value);
	        this.makeupGain = initValue(properties.makeupGain, this.defaults.makeupGain.value);
	        this.threshold = initValue(properties.threshold, this.defaults.threshold.value);
	        this.release = initValue(properties.release, this.defaults.release.value);
	        this.attack = initValue(properties.attack, this.defaults.attack.value);
	        this.ratio = properties.ratio || this.defaults.ratio.value;
	        this.knee = initValue(properties.knee, this.defaults.knee.value);
	        this.bypass = properties.bypass || false;
	    };
	    Tuna.prototype.Compressor.prototype = Object.create(Super, {
	        name: {
	            value: "Compressor"
	        },
	        defaults: {
	            writable: true,
	            value: {
	                threshold: {
	                    value: -20,
	                    min: -60,
	                    max: 0,
	                    automatable: true,
	                    type: FLOAT
	                },
	                release: {
	                    value: 250,
	                    min: 10,
	                    max: 2000,
	                    automatable: true,
	                    type: FLOAT
	                },
	                makeupGain: {
	                    value: 1,
	                    min: 1,
	                    max: 100,
	                    automatable: true,
	                    type: FLOAT
	                },
	                attack: {
	                    value: 1,
	                    min: 0,
	                    max: 1000,
	                    automatable: true,
	                    type: FLOAT
	                },
	                ratio: {
	                    value: 4,
	                    min: 1,
	                    max: 50,
	                    automatable: true,
	                    type: FLOAT
	                },
	                knee: {
	                    value: 5,
	                    min: 0,
	                    max: 40,
	                    automatable: true,
	                    type: FLOAT
	                },
	                automakeup: {
	                    value: false,
	                    automatable: false,
	                    type: BOOLEAN
	                },
	                bypass: {
	                    value: false,
	                    automatable: false,
	                    type: BOOLEAN
	                }
	            }
	        },
	        computeMakeup: {
	            value: function() {
	                var magicCoefficient = 4, // raise me if the output is too hot
	                    c = this.compNode;
	                return -(c.threshold.value - c.threshold.value / c.ratio.value) / magicCoefficient;
	            }
	        },
	        automakeup: {
	            enumerable: true,
	            get: function() {
	                return this._automakeup;
	            },
	            set: function(value) {
	                this._automakeup = value;
	                if (this._automakeup) this.makeupGain = this.computeMakeup();
	            }
	        },
	        threshold: {
	            enumerable: true,
	            get: function() {
	                return this.compNode.threshold;
	            },
	            set: function(value) {
	                this.compNode.threshold.value = value;
	                if (this._automakeup) this.makeupGain = this.computeMakeup();
	            }
	        },
	        ratio: {
	            enumerable: true,
	            get: function() {
	                return this.compNode.ratio;
	            },
	            set: function(value) {
	                this.compNode.ratio.value = value;
	                if (this._automakeup) this.makeupGain = this.computeMakeup();
	            }
	        },
	        knee: {
	            enumerable: true,
	            get: function() {
	                return this.compNode.knee;
	            },
	            set: function(value) {
	                this.compNode.knee.value = value;
	                if (this._automakeup) this.makeupGain = this.computeMakeup();
	            }
	        },
	        attack: {
	            enumerable: true,
	            get: function() {
	                return this.compNode.attack;
	            },
	            set: function(value) {
	                this.compNode.attack.value = value / 1000;
	            }
	        },
	        release: {
	            enumerable: true,
	            get: function() {
	                return this.compNode.release;
	            },
	            set: function(value) {
	                this.compNode.release.value = value / 1000;
	            }
	        },
	        makeupGain: {
	            enumerable: true,
	            get: function() {
	                return this.makeupNode.gain;
	            },
	            set: function(value) {
	                this.makeupNode.gain.value = dbToWAVolume(value);
	            }
	        }
	    });

	    Tuna.prototype.Convolver = function(properties) {
	        if (!properties) {
	            properties = this.getDefaults();
	        }
	        this.input = userContext.createGain();
	        this.activateNode = userContext.createGain();
	        this.convolver = userContext.createConvolver();
	        this.dry = userContext.createGain();
	        this.filterLow = userContext.createBiquadFilter();
	        this.filterHigh = userContext.createBiquadFilter();
	        this.wet = userContext.createGain();
	        this.output = userContext.createGain();

	        this.activateNode.connect(this.filterLow);
	        this.activateNode.connect(this.dry);
	        this.filterLow.connect(this.filterHigh);
	        this.filterHigh.connect(this.convolver);
	        this.convolver.connect(this.wet);
	        this.wet.connect(this.output);
	        this.dry.connect(this.output);

	        this.dryLevel = initValue(properties.dryLevel, this.defaults.dryLevel.value);
	        this.wetLevel = initValue(properties.wetLevel, this.defaults.wetLevel.value);
	        this.highCut = properties.highCut || this.defaults.highCut.value;
	        this.buffer = properties.impulse || "../impulses/ir_rev_short.wav";
	        this.lowCut = properties.lowCut || this.defaults.lowCut.value;
	        this.level = initValue(properties.level, this.defaults.level.value);
	        this.filterHigh.type = "lowpass";
	        this.filterLow.type = "highpass";
	        this.bypass = properties.bypass || false;
	    };
	    Tuna.prototype.Convolver.prototype = Object.create(Super, {
	        name: {
	            value: "Convolver"
	        },
	        defaults: {
	            writable: true,
	            value: {
	                highCut: {
	                    value: 22050,
	                    min: 20,
	                    max: 22050,
	                    automatable: true,
	                    type: FLOAT
	                },
	                lowCut: {
	                    value: 20,
	                    min: 20,
	                    max: 22050,
	                    automatable: true,
	                    type: FLOAT
	                },
	                dryLevel: {
	                    value: 1,
	                    min: 0,
	                    max: 1,
	                    automatable: true,
	                    type: FLOAT
	                },
	                wetLevel: {
	                    value: 1,
	                    min: 0,
	                    max: 1,
	                    automatable: true,
	                    type: FLOAT
	                },
	                level: {
	                    value: 1,
	                    min: 0,
	                    max: 1,
	                    automatable: true,
	                    type: FLOAT
	                }
	            }
	        },
	        lowCut: {
	            get: function() {
	                return this.filterLow.frequency;
	            },
	            set: function(value) {
	                this.filterLow.frequency.value = value;
	            }
	        },
	        highCut: {
	            get: function() {
	                return this.filterHigh.frequency;
	            },
	            set: function(value) {
	                this.filterHigh.frequency.value = value;
	            }
	        },
	        level: {
	            get: function() {
	                return this.output.gain;
	            },
	            set: function(value) {
	                this.output.gain.value = value;
	            }
	        },
	        dryLevel: {
	            get: function() {
	                return this.dry.gain;
	            },
	            set: function(value) {
	                this.dry.gain.value = value;
	            }
	        },
	        wetLevel: {
	            get: function() {
	                return this.wet.gain;
	            },
	            set: function(value) {
	                this.wet.gain.value = value;
	            }
	        },
	        buffer: {
	            enumerable: false,
	            get: function() {
	                return this.convolver.buffer;
	            },
	            set: function(impulse) {
	                var convolver = this.convolver,
	                    xhr = new XMLHttpRequest();
	                if (!impulse) {
	                    console.log("Tuna.Convolver.setBuffer: Missing impulse path!");
	                    return;
	                }
	                xhr.open("GET", impulse, true);
	                xhr.responseType = "arraybuffer";
	                xhr.onreadystatechange = function() {
	                    if (xhr.readyState === 4) {
	                        if (xhr.status < 300 && xhr.status > 199 || xhr.status === 302) {
	                            userContext.decodeAudioData(xhr.response, function(buffer) {
	                                convolver.buffer = buffer;
	                            }, function(e) {
	                                if (e) console.log("Tuna.Convolver.setBuffer: Error decoding data" + e);
	                            });
	                        }
	                    }
	                };
	                xhr.send(null);
	            }
	        }
	    });

	    Tuna.prototype.Delay = function(properties) {
	        if (!properties) {
	            properties = this.getDefaults();
	        }
	        this.input = userContext.createGain();
	        this.activateNode = userContext.createGain();
	        this.dry = userContext.createGain();
	        this.wet = userContext.createGain();
	        this.filter = userContext.createBiquadFilter();
	        this.delay = userContext.createDelay();
	        this.feedbackNode = userContext.createGain();
	        this.output = userContext.createGain();

	        this.activateNode.connect(this.delay);
	        this.activateNode.connect(this.dry);
	        this.delay.connect(this.filter);
	        this.filter.connect(this.feedbackNode);
	        this.feedbackNode.connect(this.delay);
	        this.feedbackNode.connect(this.wet);
	        this.wet.connect(this.output);
	        this.dry.connect(this.output);

	        this.delayTime = properties.delayTime || this.defaults.delayTime.value;
	        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);
	        this.wetLevel = initValue(properties.wetLevel, this.defaults.wetLevel.value);
	        this.dryLevel = initValue(properties.dryLevel, this.defaults.dryLevel.value);
	        this.cutoff = properties.cutoff || this.defaults.cutoff.value;
	        this.filter.type = "lowpass";
	        this.bypass = properties.bypass || false;
	    };
	    Tuna.prototype.Delay.prototype = Object.create(Super, {
	        name: {
	            value: "Delay"
	        },
	        defaults: {
	            writable: true,
	            value: {
	                delayTime: {
	                    value: 100,
	                    min: 20,
	                    max: 1000,
	                    automatable: false,
	                    type: FLOAT
	                },
	                feedback: {
	                    value: 0.45,
	                    min: 0,
	                    max: 0.9,
	                    automatable: true,
	                    type: FLOAT
	                },
	                cutoff: {
	                    value: 20000,
	                    min: 20,
	                    max: 20000,
	                    automatable: true,
	                    type: FLOAT
	                },
	                wetLevel: {
	                    value: 0.5,
	                    min: 0,
	                    max: 1,
	                    automatable: true,
	                    type: FLOAT
	                },
	                dryLevel: {
	                    value: 1,
	                    min: 0,
	                    max: 1,
	                    automatable: true,
	                    type: FLOAT
	                }
	            }
	        },
	        delayTime: {
	            enumerable: true,
	            get: function() {
	                return this.delay.delayTime;
	            },
	            set: function(value) {
	                this.delay.delayTime.value = value / 1000;
	            }
	        },
	        wetLevel: {
	            enumerable: true,
	            get: function() {
	                return this.wet.gain;
	            },
	            set: function(value) {
	                this.wet.gain.value = value;
	            }
	        },
	        dryLevel: {
	            enumerable: true,
	            get: function() {
	                return this.dry.gain;
	            },
	            set: function(value) {
	                this.dry.gain.value = value;
	            }
	        },
	        feedback: {
	            enumerable: true,
	            get: function() {
	                return this.feedbackNode.gain;
	            },
	            set: function(value) {
	                this.feedbackNode.gain.value = value;
	            }
	        },
	        cutoff: {
	            enumerable: true,
	            get: function() {
	                return this.filter.frequency;
	            },
	            set: function(value) {
	                this.filter.frequency.value = value;
	            }
	        }
	    });

	    Tuna.prototype.Filter = function(properties) {
	        if (!properties) {
	            properties = this.getDefaults();
	        }
	        this.input = userContext.createGain();
	        this.activateNode = userContext.createGain();
	        this.filter = userContext.createBiquadFilter();
	        this.output = userContext.createGain();

	        this.activateNode.connect(this.filter);
	        this.filter.connect(this.output);

	        this.frequency = properties.frequency || this.defaults.frequency.value;
	        this.Q = properties.resonance || this.defaults.Q.value;
	        this.filterType = initValue(properties.filterType, this.defaults.filterType.value);
	        this.gain = initValue(properties.gain, this.defaults.gain.value);
	        this.bypass = properties.bypass || false;
	    };
	    Tuna.prototype.Filter.prototype = Object.create(Super, {
	        name: {
	            value: "Filter"
	        },
	        defaults: {
	            writable: true,
	            value: {
	                frequency: {
	                    value: 800,
	                    min: 20,
	                    max: 22050,
	                    automatable: true,
	                    type: FLOAT
	                },
	                Q: {
	                    value: 1,
	                    min: 0.001,
	                    max: 100,
	                    automatable: true,
	                    type: FLOAT
	                },
	                gain: {
	                    value: 0,
	                    min: -40,
	                    max: 40,
	                    automatable: true,
	                    type: FLOAT
	                },
	                bypass: {
	                    value: false,
	                    automatable: false,
	                    type: BOOLEAN
	                },
	                filterType: {
	                    value: "lowpass",
	                    automatable: false,
	                    type: STRING
	                }
	            }
	        },
	        filterType: {
	            enumerable: true,
	            get: function() {
	                return this.filter.type;
	            },
	            set: function(value) {
	                this.filter.type = value;
	            }
	        },
	        Q: {
	            enumerable: true,
	            get: function() {
	                return this.filter.Q;
	            },
	            set: function(value) {
	                this.filter.Q.value = value;
	            }
	        },
	        gain: {
	            enumerable: true,
	            get: function() {
	                return this.filter.gain;
	            },
	            set: function(value) {
	                this.filter.gain.value = value;
	            }
	        },
	        frequency: {
	            enumerable: true,
	            get: function() {
	                return this.filter.frequency;
	            },
	            set: function(value) {
	                this.filter.frequency.value = value;
	            }
	        }
	    });

	    Tuna.prototype.MoogFilter = function(properties) {
	        if (!properties) {
	            properties = this.getDefaults();
	        }
	        this.bufferSize = properties.bufferSize || this.defaults.bufferSize.value;

	        this.input = userContext.createGain();
	        this.activateNode = userContext.createGain();
	        this.processor = userContext.createScriptProcessor(this.bufferSize, 1, 1);
	        this.output = userContext.createGain();

	        this.activateNode.connect(this.processor);
	        this.processor.connect(this.output);

	        var in1, in2, in3, in4, out1, out2, out3, out4;
	        in1 = in2 = in3 = in4 = out1 = out2 = out3 = out4 = 0.0;
	        var input, output, f, fb, i, length, inputFactor;
	        this.processor.onaudioprocess = function(e) {
	            input = e.inputBuffer.getChannelData(0),
	                output = e.outputBuffer.getChannelData(0),
	                f = this.cutoff * 1.16,
	                inputFactor = 0.35013 * (f * f) * (f * f);
	            fb = this.resonance * (1.0 - 0.15 * f * f);
	            length = input.length;
	            for (i = 0; i < length; i++) {
	                input[i] -= out4 * fb;
	                input[i] *= inputFactor;
	                out1 = input[i] + 0.3 * in1 + (1 - f) * out1; // Pole 1
	                in1 = input[i];
	                out2 = out1 + 0.3 * in2 + (1 - f) * out2; // Pole 2
	                in2 = out1;
	                out3 = out2 + 0.3 * in3 + (1 - f) * out3; // Pole 3
	                in3 = out2;
	                out4 = out3 + 0.3 * in4 + (1 - f) * out4; // Pole 4
	                in4 = out3;
	                output[i] = out4;
	            }
	        };

	        this.cutoff = initValue(properties.cutoff, this.defaults.cutoff.value);
	        this.resonance = initValue(properties.resonance, this.defaults.resonance.value);
	        this.bypass = properties.bypass || false;
	    };
	    Tuna.prototype.MoogFilter.prototype = Object.create(Super, {
	        name: {
	            value: "MoogFilter"
	        },
	        defaults: {
	            writable: true,
	            value: {
	                bufferSize: {
	                    value: 4096,
	                    min: 256,
	                    max: 16384,
	                    automatable: false,
	                    type: INT
	                },
	                bypass: {
	                    value: false,
	                    automatable: false,
	                    type: BOOLEAN
	                },
	                cutoff: {
	                    value: 0.065,
	                    min: 0.0001,
	                    max: 1.0,
	                    automatable: false,
	                    type: FLOAT
	                },
	                resonance: {
	                    value: 3.5,
	                    min: 0.0,
	                    max: 4.0,
	                    automatable: false,
	                    type: FLOAT
	                }
	            }
	        },
	        cutoff: {
	            enumerable: true,
	            get: function() {
	                return this.processor.cutoff;
	            },
	            set: function(value) {
	                this.processor.cutoff = value;
	            }
	        },
	        resonance: {
	            enumerable: true,
	            get: function() {
	                return this.processor.resonance;
	            },
	            set: function(value) {
	                this.processor.resonance = value;
	            }
	        }
	    });

	    Tuna.prototype.Overdrive = function(properties) {
	        if (!properties) {
	            properties = this.getDefaults();
	        }
	        this.input = userContext.createGain();
	        this.activateNode = userContext.createGain();
	        this.inputDrive = userContext.createGain();
	        this.waveshaper = userContext.createWaveShaper();
	        this.outputDrive = userContext.createGain();
	        this.output = userContext.createGain();

	        this.activateNode.connect(this.inputDrive);
	        this.inputDrive.connect(this.waveshaper);
	        this.waveshaper.connect(this.outputDrive);
	        this.outputDrive.connect(this.output);

	        this.ws_table = new Float32Array(this.k_nSamples);
	        this.drive = initValue(properties.drive, this.defaults.drive.value);
	        this.outputGain = initValue(properties.outputGain, this.defaults.outputGain.value);
	        this.curveAmount = initValue(properties.curveAmount, this.defaults.curveAmount.value);
	        this.algorithmIndex = initValue(properties.algorithmIndex, this.defaults.algorithmIndex.value);
	        this.bypass = properties.bypass || false;
	    };
	    Tuna.prototype.Overdrive.prototype = Object.create(Super, {
	        name: {
	            value: "Overdrive"
	        },
	        defaults: {
	            writable: true,
	            value: {
	                drive: {
	                    value: 1,
	                    min: 0,
	                    max: 1,
	                    automatable: true,
	                    type: FLOAT,
	                    scaled: true
	                },
	                outputGain: {
	                    value: 1,
	                    min: 0,
	                    max: 1,
	                    automatable: true,
	                    type: FLOAT,
	                    scaled: true
	                },
	                curveAmount: {
	                    value: 0.725,
	                    min: 0,
	                    max: 1,
	                    automatable: false,
	                    type: FLOAT
	                },
	                algorithmIndex: {
	                    value: 0,
	                    min: 0,
	                    max: 5,
	                    automatable: false,
	                    type: INT
	                }
	            }
	        },
	        k_nSamples: {
	            value: 8192
	        },
	        drive: {
	            get: function() {
	                return this.inputDrive.gain;
	            },
	            set: function(value) {
	                this._drive = value;
	            }
	        },
	        curveAmount: {
	            get: function() {
	                return this._curveAmount;
	            },
	            set: function(value) {
	                this._curveAmount = value;
	                if (this._algorithmIndex === undefined) {
	                    this._algorithmIndex = 0;
	                }
	                this.waveshaperAlgorithms[this._algorithmIndex](this._curveAmount, this.k_nSamples, this.ws_table);
	                this.waveshaper.curve = this.ws_table;
	            }
	        },
	        outputGain: {
	            get: function() {
	                return this.outputDrive.gain;
	            },
	            set: function(value) {
	                this._outputGain = dbToWAVolume(value);
	            }
	        },
	        algorithmIndex: {
	            get: function() {
	                return this._algorithmIndex;
	            },
	            set: function(value) {
	                this._algorithmIndex = value;
	                this.curveAmount = this._curveAmount;
	            }
	        },
	        waveshaperAlgorithms: {
	            value: [
	                function(amount, n_samples, ws_table) {
	                    amount = Math.min(amount, 0.9999);
	                    var k = 2 * amount / (1 - amount),
	                        i, x;
	                    for (i = 0; i < n_samples; i++) {
	                        x = i * 2 / n_samples - 1;
	                        ws_table[i] = (1 + k) * x / (1 + k * Math.abs(x));
	                    }
	                },
	                function(amount, n_samples, ws_table) {
	                    var i, x, y;
	                    for (i = 0; i < n_samples; i++) {
	                        x = i * 2 / n_samples - 1;
	                        y = ((0.5 * Math.pow((x + 1.4), 2)) - 1) * y >= 0 ? 5.8 : 1.2;
	                        ws_table[i] = tanh(y);
	                    }
	                },
	                function(amount, n_samples, ws_table) {
	                    var i, x, y, a = 1 - amount;
	                    for (i = 0; i < n_samples; i++) {
	                        x = i * 2 / n_samples - 1;
	                        y = x < 0 ? -Math.pow(Math.abs(x), a + 0.04) : Math.pow(x, a);
	                        ws_table[i] = tanh(y * 2);
	                    }
	                },
	                function(amount, n_samples, ws_table) {
	                    var i, x, y, abx, a = 1 - amount > 0.99 ? 0.99 : 1 - amount;
	                    for (i = 0; i < n_samples; i++) {
	                        x = i * 2 / n_samples - 1;
	                        abx = Math.abs(x);
	                        if (abx < a) y = abx;
	                        else if (abx > a) y = a + (abx - a) / (1 + Math.pow((abx - a) / (1 - a), 2));
	                        else if (abx > 1) y = abx;
	                        ws_table[i] = sign(x) * y * (1 / ((a + 1) / 2));
	                    }
	                },
	                function(amount, n_samples, ws_table) { // fixed curve, amount doesn't do anything, the distortion is just from the drive
	                    var i, x;
	                    for (i = 0; i < n_samples; i++) {
	                        x = i * 2 / n_samples - 1;
	                        if (x < -0.08905) {
	                            ws_table[i] = (-3 / 4) * (1 - (Math.pow((1 - (Math.abs(x) - 0.032857)), 12)) + (1 / 3) * (Math.abs(x) - 0.032847)) + 0.01;
	                        } else if (x >= -0.08905 && x < 0.320018) {
	                            ws_table[i] = (-6.153 * (x * x)) + 3.9375 * x;
	                        } else {
	                            ws_table[i] = 0.630035;
	                        }
	                    }
	                },
	                function(amount, n_samples, ws_table) {
	                    var a = 2 + Math.round(amount * 14),
	                        // we go from 2 to 16 bits, keep in mind for the UI
	                        bits = Math.round(Math.pow(2, a - 1)),
	                        // real number of quantization steps divided by 2
	                        i, x;
	                    for (i = 0; i < n_samples; i++) {
	                        x = i * 2 / n_samples - 1;
	                        ws_table[i] = Math.round(x * bits) / bits;
	                    }
	                }
	            ]
	        }
	    });

	    Tuna.prototype.Phaser = function(properties) {
	        if (!properties) {
	            properties = this.getDefaults();
	        }
	        this.input = userContext.createGain();
	        this.splitter = this.activateNode = userContext.createChannelSplitter(2);
	        this.filtersL = [];
	        this.filtersR = [];
	        this.feedbackGainNodeL = userContext.createGain();
	        this.feedbackGainNodeR = userContext.createGain();
	        this.merger = userContext.createChannelMerger(2);
	        this.filteredSignal = userContext.createGain();
	        this.output = userContext.createGain();
	        this.lfoL = new userInstance.LFO({
	            target: this.filtersL,
	            callback: this.callback
	        });
	        this.lfoR = new userInstance.LFO({
	            target: this.filtersR,
	            callback: this.callback
	        });

	        var i = this.stage;
	        while (i--) {
	            this.filtersL[i] = userContext.createBiquadFilter();
	            this.filtersR[i] = userContext.createBiquadFilter();
	            this.filtersL[i].type = "allpass";
	            this.filtersR[i].type = "allpass";
	        }
	        this.input.connect(this.splitter);
	        this.input.connect(this.output);
	        this.splitter.connect(this.filtersL[0], 0, 0);
	        this.splitter.connect(this.filtersR[0], 1, 0);
	        this.connectInOrder(this.filtersL);
	        this.connectInOrder(this.filtersR);
	        this.filtersL[this.stage - 1].connect(this.feedbackGainNodeL);
	        this.filtersL[this.stage - 1].connect(this.merger, 0, 0);
	        this.filtersR[this.stage - 1].connect(this.feedbackGainNodeR);
	        this.filtersR[this.stage - 1].connect(this.merger, 0, 1);
	        this.feedbackGainNodeL.connect(this.filtersL[0]);
	        this.feedbackGainNodeR.connect(this.filtersR[0]);
	        this.merger.connect(this.output);

	        this.rate = initValue(properties.rate, this.defaults.rate.value);
	        this.baseModulationFrequency = properties.baseModulationFrequency || this.defaults.baseModulationFrequency.value;
	        this.depth = initValue(properties.depth, this.defaults.depth.value);
	        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);
	        this.stereoPhase = initValue(properties.stereoPhase, this.defaults.stereoPhase.value);

	        this.lfoL.activate(true);
	        this.lfoR.activate(true);
	        this.bypass = properties.bypass || false;
	    };
	    Tuna.prototype.Phaser.prototype = Object.create(Super, {
	        name: {
	            value: "Phaser"
	        },
	        stage: {
	            value: 4
	        },
	        defaults: {
	            writable: true,
	            value: {
	                rate: {
	                    value: 0.1,
	                    min: 0,
	                    max: 8,
	                    automatable: false,
	                    type: FLOAT
	                },
	                depth: {
	                    value: 0.6,
	                    min: 0,
	                    max: 1,
	                    automatable: false,
	                    type: FLOAT
	                },
	                feedback: {
	                    value: 0.7,
	                    min: 0,
	                    max: 1,
	                    automatable: false,
	                    type: FLOAT
	                },
	                stereoPhase: {
	                    value: 40,
	                    min: 0,
	                    max: 180,
	                    automatable: false,
	                    type: FLOAT
	                },
	                baseModulationFrequency: {
	                    value: 700,
	                    min: 500,
	                    max: 1500,
	                    automatable: false,
	                    type: FLOAT
	                }
	            }
	        },
	        callback: {
	            value: function(filters, value) {
	                for (var stage = 0; stage < 4; stage++) {
	                    filters[stage].frequency.value = value;
	                }
	            }
	        },
	        depth: {
	            get: function() {
	                return this._depth;
	            },
	            set: function(value) {
	                this._depth = value;
	                this.lfoL.oscillation = this._baseModulationFrequency * this._depth;
	                this.lfoR.oscillation = this._baseModulationFrequency * this._depth;
	            }
	        },
	        rate: {
	            get: function() {
	                return this._rate;
	            },
	            set: function(value) {
	                this._rate = value;
	                this.lfoL.frequency = this._rate;
	                this.lfoR.frequency = this._rate;
	            }
	        },
	        baseModulationFrequency: {
	            enumerable: true,
	            get: function() {
	                return this._baseModulationFrequency;
	            },
	            set: function(value) {
	                this._baseModulationFrequency = value;
	                this.lfoL.offset = this._baseModulationFrequency;
	                this.lfoR.offset = this._baseModulationFrequency;
	                this._depth = this._depth;
	            }
	        },
	        feedback: {
	            get: function() {
	                return this._feedback;
	            },
	            set: function(value) {
	                this._feedback = value;
	                this.feedbackGainNodeL.gain.value = this._feedback;
	                this.feedbackGainNodeR.gain.value = this._feedback;
	            }
	        },
	        stereoPhase: {
	            get: function() {
	                return this._stereoPhase;
	            },
	            set: function(value) {
	                this._stereoPhase = value;
	                var newPhase = this.lfoL._phase + this._stereoPhase * Math.PI / 180;
	                newPhase = fmod(newPhase, 2 * Math.PI);
	                this.lfoR._phase = newPhase;
	            }
	        }
	    });

	    Tuna.prototype.PingPongDelay = function(properties) {
	        if (!properties) {
	            properties = this.getDefaults();
	        }
	        this.input = userContext.createGain();
	        this.wetLevel = userContext.createGain();
	        this.stereoToMonoMix = userContext.createGain();
	        this.feedbackLevel = userContext.createGain();
	        this.output = userContext.createGain();
	        this.delayLeft = userContext.createDelay();
	        this.delayRight = userContext.createDelay();

	        this.activateNode = userContext.createGain();
	        this.splitter = userContext.createChannelSplitter(2);
	        this.merger = userContext.createChannelMerger(2);

	        this.activateNode.connect(this.splitter);
	        this.splitter.connect(this.stereoToMonoMix, 0, 0);
	        this.splitter.connect(this.stereoToMonoMix, 1, 0);
	        this.stereoToMonoMix.gain.value = .5;
	        this.stereoToMonoMix.connect(this.wetLevel);
	        this.wetLevel.connect(this.delayLeft);
	        this.feedbackLevel.connect(this.delayLeft);
	        this.delayLeft.connect(this.delayRight);
	        this.delayRight.connect(this.feedbackLevel);
	        this.delayLeft.connect(this.merger, 0, 0);
	        this.delayRight.connect(this.merger, 0, 1);
	        this.merger.connect(this.output);
	        this.activateNode.connect(this.output);

	        this.delayTimeLeft = properties.delayTimeLeft !== undefined ? properties.delayTimeLeft : this.defaults.delayTimeLeft.value;
	        this.delayTimeRight = properties.delayTimeRight !== undefined ? properties.delayTimeRight : this.defaults.delayTimeRight.value;
	        this.feedbackLevel.gain.value = properties.feedback !== undefined ? properties.feedback : this.defaults.feedback.value;
	        this.wetLevel.gain.value = properties.wetLevel !== undefined ? properties.wetLevel : this.defaults.wetLevel.value;
	        this.bypass = properties.bypass || false;
	    };
	    Tuna.prototype.PingPongDelay.prototype = Object.create(Super, {
	        name: {
	            value: "PingPongDelay"
	        },
	        delayTimeLeft: {
	            enumerable: true,
	            get: function() {
	                return this._delayTimeLeft;
	            },
	            set: function(value) {
	                this._delayTimeLeft = value;
	                this.delayLeft.delayTime.value = value / 1000;
	            }
	        },
	        delayTimeRight: {
	            enumerable: true,
	            get: function() {
	                return this._delayTimeRight;
	            },
	            set: function(value) {
	                this._delayTimeRight = value;
	                this.delayRight.delayTime.value = value / 1000;
	            }
	        },
	        defaults: {
	            writable: true,
	            value: {
	                delayTimeLeft: {
	                    value: 200,
	                    min: 1,
	                    max: 10000,
	                    automatable: false,
	                    type: INT
	                },
	                delayTimeRight: {
	                    value: 400,
	                    min: 1,
	                    max: 10000,
	                    automatable: false,
	                    type: INT
	                },
	                feedback: {
	                    value: 0.3,
	                    min: 0,
	                    max: 1,
	                    automatable: false,
	                    type: FLOAT
	                },
	                wetLevel: {
	                    value: 0.5,
	                    min: 0,
	                    max: 1,
	                    automatable: false,
	                    type: FLOAT
	                }
	            }
	        }
	    });

	    Tuna.prototype.Tremolo = function(properties) {
	        if (!properties) {
	            properties = this.getDefaults();
	        }
	        this.input = userContext.createGain();
	        this.splitter = this.activateNode = userContext.createChannelSplitter(
	                2),
	            this.amplitudeL = userContext.createGain(),
	            this.amplitudeR = userContext.createGain(),
	            this.merger = userContext.createChannelMerger(2),
	            this.output = userContext.createGain();
	        this.lfoL = new userInstance.LFO({
	            target: this.amplitudeL.gain,
	            callback: pipe
	        });
	        this.lfoR = new userInstance.LFO({
	            target: this.amplitudeR.gain,
	            callback: pipe
	        });

	        this.input.connect(this.splitter);
	        this.splitter.connect(this.amplitudeL, 0);
	        this.splitter.connect(this.amplitudeR, 1);
	        this.amplitudeL.connect(this.merger, 0, 0);
	        this.amplitudeR.connect(this.merger, 0, 1);
	        this.merger.connect(this.output);

	        this.rate = properties.rate || this.defaults.rate.value;
	        this.intensity = initValue(properties.intensity, this.defaults.intensity.value);
	        this.stereoPhase = initValue(properties.stereoPhase, this.defaults.stereoPhase.value);

	        this.lfoL.offset = 1 - (this.intensity / 2);
	        this.lfoR.offset = 1 - (this.intensity / 2);
	        this.lfoL.phase = this.stereoPhase * Math.PI / 180;

	        this.lfoL.activate(true);
	        this.lfoR.activate(true);
	        this.bypass = properties.bypass || false;
	    };
	    Tuna.prototype.Tremolo.prototype = Object.create(Super, {
	        name: {
	            value: "Tremolo"
	        },
	        defaults: {
	            writable: true,
	            value: {
	                intensity: {
	                    value: 0.3,
	                    min: 0,
	                    max: 1,
	                    automatable: false,
	                    type: FLOAT
	                },
	                stereoPhase: {
	                    value: 0,
	                    min: 0,
	                    max: 180,
	                    automatable: false,
	                    type: FLOAT
	                },
	                rate: {
	                    value: 5,
	                    min: 0.1,
	                    max: 11,
	                    automatable: false,
	                    type: FLOAT
	                }
	            }
	        },
	        intensity: {
	            enumerable: true,
	            get: function() {
	                return this._intensity;
	            },
	            set: function(value) {
	                this._intensity = value;
	                this.lfoL.offset = 1 - this._intensity / 2;
	                this.lfoR.offset = 1 - this._intensity / 2;
	                this.lfoL.oscillation = this._intensity;
	                this.lfoR.oscillation = this._intensity;
	            }
	        },
	        rate: {
	            enumerable: true,
	            get: function() {
	                return this._rate;
	            },
	            set: function(value) {
	                this._rate = value;
	                this.lfoL.frequency = this._rate;
	                this.lfoR.frequency = this._rate;
	            }
	        },
	        stereoPhase: {
	            enumerable: true,
	            get: function() {
	                return this._rate;
	            },
	            set: function(value) {
	                this._stereoPhase = value;
	                var newPhase = this.lfoL._phase + this._stereoPhase * Math.PI / 180;
	                newPhase = fmod(newPhase, 2 * Math.PI);
	                this.lfoR.phase = newPhase;
	            }
	        }
	    });

	    Tuna.prototype.WahWah = function(properties) {
	        if (!properties) {
	            properties = this.getDefaults();
	        }
	        this.input = userContext.createGain();
	        this.activateNode = userContext.createGain();
	        this.envelopeFollower = new userInstance.EnvelopeFollower({
	            target: this,
	            callback: function(context, value) {
	                context.sweep = value;
	            }
	        });
	        this.filterBp = userContext.createBiquadFilter();
	        this.filterPeaking = userContext.createBiquadFilter();
	        this.output = userContext.createGain();

	        //Connect AudioNodes
	        this.activateNode.connect(this.filterBp);
	        this.filterBp.connect(this.filterPeaking);
	        this.filterPeaking.connect(this.output);

	        //Set Properties
	        this.init();
	        this.automode = initValue(properties.enableAutoMode, this.defaults.automode.value);
	        this.resonance = properties.resonance || this.defaults.resonance.value;
	        this.sensitivity = initValue(properties.sensitivity, this.defaults.sensitivity.value);
	        this.baseFrequency = initValue(properties.baseFrequency, this.defaults.baseFrequency.value);
	        this.excursionOctaves = properties.excursionOctaves || this.defaults.excursionOctaves.value;
	        this.sweep = initValue(properties.sweep, this.defaults.sweep.value);

	        this.activateNode.gain.value = 2;
	        this.envelopeFollower.activate(true);
	        this.bypass = properties.bypass || false;
	    };
	    Tuna.prototype.WahWah.prototype = Object.create(Super, {
	        name: {
	            value: "WahWah"
	        },
	        defaults: {
	            writable: true,
	            value: {
	                automode: {
	                    value: true,
	                    automatable: false,
	                    type: BOOLEAN
	                },
	                baseFrequency: {
	                    value: 0.5,
	                    min: 0,
	                    max: 1,
	                    automatable: false,
	                    type: FLOAT
	                },
	                excursionOctaves: {
	                    value: 2,
	                    min: 1,
	                    max: 6,
	                    automatable: false,
	                    type: FLOAT
	                },
	                sweep: {
	                    value: 0.2,
	                    min: 0,
	                    max: 1,
	                    automatable: false,
	                    type: FLOAT
	                },
	                resonance: {
	                    value: 10,
	                    min: 1,
	                    max: 100,
	                    automatable: false,
	                    type: FLOAT
	                },
	                sensitivity: {
	                    value: 0.5,
	                    min: -1,
	                    max: 1,
	                    automatable: false,
	                    type: FLOAT
	                }
	            }
	        },
	        activateCallback: {
	            value: function(value) {
	                this.automode = value;
	            }
	        },
	        automode: {
	            get: function() {
	                return this._automode;
	            },
	            set: function(value) {
	                this._automode = value;
	                if (value) {
	                    this.activateNode.connect(this.envelopeFollower.input);
	                    this.envelopeFollower.activate(true);
	                } else {
	                    this.envelopeFollower.activate(false);
	                    this.activateNode.disconnect();
	                    this.activateNode.connect(this.filterBp);
	                }
	            }
	        },
	        filterFreqTimeout: {
	            value: 0
	        },
	        setFilterFreq: {
	            value: function() {
	                try {
	                    this.filterBp.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;
	                    this.filterPeaking.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;
	                } catch (e) {
	                    clearTimeout(this.filterFreqTimeout);
	                    //put on the next cycle to let all init properties be set
	                    this.filterFreqTimeout = setTimeout(function() {
	                        this.setFilterFreq();
	                    }.bind(this), 0);
	                }
	            }
	        },
	        sweep: {
	            enumerable: true,
	            get: function() {
	                return this._sweep.value;
	            },
	            set: function(value) {
	                this._sweep = Math.pow(value > 1 ? 1 : value < 0 ? 0 : value, this._sensitivity);
	                this.setFilterFreq();
	            }
	        },
	        baseFrequency: {
	            enumerable: true,
	            get: function() {
	                return this._baseFrequency;
	            },
	            set: function(value) {
	                this._baseFrequency = 50 * Math.pow(10, value *
	                    2);
	                this._excursionFrequency = Math.min(userContext.sampleRate / 2, this.baseFrequency * Math.pow(2, this._excursionOctaves));
	                this.setFilterFreq();
	            }
	        },
	        excursionOctaves: {
	            enumerable: true,
	            get: function() {
	                return this._excursionOctaves;
	            },
	            set: function(value) {
	                this._excursionOctaves = value;
	                this._excursionFrequency = Math.min(userContext.sampleRate / 2, this.baseFrequency * Math.pow(2, this._excursionOctaves));
	                this.setFilterFreq();
	            }
	        },
	        sensitivity: {
	            enumerable: true,
	            get: function() {
	                return this._sensitivity;
	            },
	            set: function(value) {
	                this._sensitivity = Math.pow(10, value);
	            }
	        },
	        resonance: {
	            enumerable: true,
	            get: function() {
	                return this._resonance;
	            },
	            set: function(value) {
	                this._resonance = value;
	                this.filterPeaking.Q = this._resonance;
	            }
	        },
	        init: {
	            value: function() {
	                this.output.gain.value = 1;
	                this.filterPeaking.type = "peaking";
	                this.filterBp.type = "bandpass";
	                this.filterPeaking.frequency.value = 100;
	                this.filterPeaking.gain.value = 20;
	                this.filterPeaking.Q.value = 5;
	                this.filterBp.frequency.value = 100;
	                this.filterBp.Q.value = 1;
	            }
	        }
	    });

	    Tuna.prototype.EnvelopeFollower = function(properties) {
	        if (!properties) {
	            properties = this.getDefaults();
	        }
	        this.input = userContext.createGain();
	        this.jsNode = this.output = userContext.createScriptProcessor(this.buffersize, 1, 1);

	        this.input.connect(this.output);

	        this.attackTime = initValue(properties.attackTime, this.defaults.attackTime.value);
	        this.releaseTime = initValue(properties.releaseTime, this.defaults.releaseTime.value);
	        this._envelope = 0;
	        this.target = properties.target || {};
	        this.callback = properties.callback || function() {};
	    };
	    Tuna.prototype.EnvelopeFollower.prototype = Object.create(Super, {
	        name: {
	            value: "EnvelopeFollower"
	        },
	        defaults: {
	            value: {
	                attackTime: {
	                    value: 0.003,
	                    min: 0,
	                    max: 0.5,
	                    automatable: false,
	                    type: FLOAT
	                },
	                releaseTime: {
	                    value: 0.5,
	                    min: 0,
	                    max: 0.5,
	                    automatable: false,
	                    type: FLOAT
	                }
	            }
	        },
	        buffersize: {
	            value: 256
	        },
	        envelope: {
	            value: 0
	        },
	        sampleRate: {
	            value: 44100
	        },
	        attackTime: {
	            enumerable: true,
	            get: function() {
	                return this._attackTime;
	            },
	            set: function(value) {
	                this._attackTime = value;
	                this._attackC = Math.exp(-1 / this._attackTime * this.sampleRate / this.buffersize);
	            }
	        },
	        releaseTime: {
	            enumerable: true,
	            get: function() {
	                return this._releaseTime;
	            },
	            set: function(value) {
	                this._releaseTime = value;
	                this._releaseC = Math.exp(-1 / this._releaseTime * this.sampleRate / this.buffersize);
	            }
	        },
	        callback: {
	            get: function() {
	                return this._callback;
	            },
	            set: function(value) {
	                if (typeof value === "function") {
	                    this._callback = value;
	                } else {
	                    console.error("tuna.js: " + this.name + ": Callback must be a function!");
	                }
	            }
	        },
	        target: {
	            get: function() {
	                return this._target;
	            },
	            set: function(value) {
	                this._target = value;
	            }
	        },
	        activate: {
	            value: function(doActivate) {
	                this.activated = doActivate;
	                if (doActivate) {
	                    this.jsNode.connect(userContext.destination);
	                    this.jsNode.onaudioprocess = this.returnCompute(this);
	                } else {
	                    this.jsNode.disconnect();
	                    this.jsNode.onaudioprocess = null;
	                }
	            }
	        },
	        returnCompute: {
	            value: function(instance) {
	                return function(event) {
	                    instance.compute(event);
	                };
	            }
	        },
	        compute: {
	            value: function(event) {
	                var count = event.inputBuffer.getChannelData(0).length,
	                    channels = event.inputBuffer.numberOfChannels,
	                    current, chan, rms, i;
	                chan = rms = i = 0;
	                if (channels > 1) { //need to mixdown
	                    for (i = 0; i < count; ++i) {
	                        for (; chan < channels; ++chan) {
	                            current = event.inputBuffer.getChannelData(chan)[i];
	                            rms += (current * current) / channels;
	                        }
	                    }
	                } else {
	                    for (i = 0; i < count; ++i) {
	                        current = event.inputBuffer.getChannelData(0)[i];
	                        rms += (current * current);
	                    }
	                }
	                rms = Math.sqrt(rms);

	                if (this._envelope < rms) {
	                    this._envelope *= this._attackC;
	                    this._envelope += (1 - this._attackC) * rms;
	                } else {
	                    this._envelope *= this._releaseC;
	                    this._envelope += (1 - this._releaseC) * rms;
	                }
	                this._callback(this._target, this._envelope);
	            }
	        }
	    });

	    Tuna.prototype.LFO = function(properties) {
	        //Instantiate AudioNode
	        this.output = userContext.createScriptProcessor(256, 1, 1);
	        this.activateNode = userContext.destination;

	        //Set Properties
	        this.frequency = initValue(properties.frequency, this.defaults.frequency.value);
	        this.offset = initValue(properties.offset, this.defaults.offset.value);
	        this.oscillation = initValue(properties.oscillation, this.defaults.oscillation.value);
	        this.phase = initValue(properties.phase, this.defaults.phase.value);
	        this.target = properties.target || {};
	        this.output.onaudioprocess = this.callback(properties.callback || function() {});
	        this.bypass = properties.bypass || false;
	    };
	    Tuna.prototype.LFO.prototype = Object.create(Super, {
	        name: {
	            value: "LFO"
	        },
	        bufferSize: {
	            value: 256
	        },
	        sampleRate: {
	            value: 44100
	        },
	        defaults: {
	            value: {
	                frequency: {
	                    value: 1,
	                    min: 0,
	                    max: 20,
	                    automatable: false,
	                    type: FLOAT
	                },
	                offset: {
	                    value: 0.85,
	                    min: 0,
	                    max: 22049,
	                    automatable: false,
	                    type: FLOAT
	                },
	                oscillation: {
	                    value: 0.3,
	                    min: -22050,
	                    max: 22050,
	                    automatable: false,
	                    type: FLOAT
	                },
	                phase: {
	                    value: 0,
	                    min: 0,
	                    max: 2 * Math.PI,
	                    automatable: false,
	                    type: FLOAT
	                }
	            }
	        },
	        frequency: {
	            get: function() {
	                return this._frequency;
	            },
	            set: function(value) {
	                this._frequency = value;
	                this._phaseInc = 2 * Math.PI * this._frequency * this.bufferSize / this.sampleRate;
	            }
	        },
	        offset: {
	            get: function() {
	                return this._offset;
	            },
	            set: function(value) {
	                this._offset = value;
	            }
	        },
	        oscillation: {
	            get: function() {
	                return this._oscillation;
	            },
	            set: function(value) {
	                this._oscillation = value;
	            }
	        },
	        phase: {
	            get: function() {
	                return this._phase;
	            },
	            set: function(value) {
	                this._phase = value;
	            }
	        },
	        target: {
	            get: function() {
	                return this._target;
	            },
	            set: function(value) {
	                this._target = value;
	            }
	        },
	        activate: {
	            value: function(doActivate) {
	                if (!doActivate) {
	                    this.output.disconnect(userContext.destination);
	                } else {
	                    this.output.connect(userContext.destination);
	                }
	            }
	        },
	        callback: {
	            value: function(callback) {
	                var that = this;
	                return function() {
	                    that._phase += that._phaseInc;
	                    if (that._phase > 2 * Math.PI) {
	                        that._phase = 0;
	                    }
	                    callback(that._target, that._offset + that._oscillation * Math.sin(that._phase));
	                };
	            }
	        }
	    });

	    Tuna.toString = Tuna.prototype.toString = function() {
	        return "Please visit https://github.com/Theodeus/tuna/wiki for instructions on how to use Tuna.js";
	    };
	})(this);


/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Bus = (_temp = _class = function (_Component) {
	  _inherits(Bus, _Component);

	  function Bus(props, context) {
	    _classCallCheck(this, Bus);

	    var _this = _possibleConstructorReturn(this, (Bus.__proto__ || Object.getPrototypeOf(Bus)).call(this, props));

	    _this.connectNode = context.audioContext.createGain();
	    _this.connectNode.gain.value = props.gain;
	    _this.connectNode.connect(context.connectNode);
	    return _this;
	  }

	  _createClass(Bus, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return _extends({}, this.context, {
	        connectNode: this.connectNode
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var master = this.context.getMaster();
	      master.busses[this.props.id] = this.connectNode;
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var master = this.context.getMaster();
	      delete master.busses[this.props.id];

	      this.connectNode.gain.value = nextProps.gain;
	      master.busses[nextProps.id] = this.connectNode;
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.connectNode.disconnect();
	      delete this.context.getMaster().busses[this.props.id];
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return Bus;
	}(_react.Component), _class.propTypes = {
	  children: _propTypes2.default.node,
	  gain: _propTypes2.default.number,
	  id: _propTypes2.default.string.isRequired
	}, _class.defaultProps = {
	  gain: 0.5
	}, _class.contextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object,
	  getMaster: _propTypes2.default.func
	}, _class.childContextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object,
	  getMaster: _propTypes2.default.func
	}, _temp);
	exports.default = Bus;

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;
	/* eslint-disable no-restricted-syntax */


	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _tunajs = __webpack_require__(132);

	var _tunajs2 = _interopRequireDefault(_tunajs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Chorus = (_temp = _class = function (_Component) {
	  _inherits(Chorus, _Component);

	  function Chorus(props, context) {
	    _classCallCheck(this, Chorus);

	    var _this = _possibleConstructorReturn(this, (Chorus.__proto__ || Object.getPrototypeOf(Chorus)).call(this, props));

	    var tuna = new _tunajs2.default(context.audioContext);

	    _this.connectNode = new tuna.Chorus({
	      feedback: props.feedback,
	      rate: props.rate,
	      delay: props.delay,
	      bypass: props.bypass
	    });

	    _this.connectNode.connect(context.connectNode);
	    return _this;
	  }

	  _createClass(Chorus, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return _extends({}, this.context, {
	        connectNode: this.connectNode
	      });
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      for (var prop in nextProps) {
	        if (this.connectNode[prop]) {
	          this.connectNode[prop] = nextProps[prop];
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.connectNode.disconnect();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return Chorus;
	}(_react.Component), _class.propTypes = {
	  bypass: _propTypes2.default.number,
	  children: _propTypes2.default.node,
	  delay: _propTypes2.default.number,
	  feedback: _propTypes2.default.number,
	  rate: _propTypes2.default.number
	}, _class.defaultProps = {
	  bypass: 0,
	  delay: 0.0045,
	  feedback: 0.2,
	  rate: 1.5
	}, _class.contextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _class.childContextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _temp);
	exports.default = Chorus;

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;
	/* eslint-disable no-restricted-syntax */


	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Compressor = (_temp = _class = function (_Component) {
	  _inherits(Compressor, _Component);

	  function Compressor(props, context) {
	    _classCallCheck(this, Compressor);

	    var _this = _possibleConstructorReturn(this, (Compressor.__proto__ || Object.getPrototypeOf(Compressor)).call(this, props));

	    _this.connectNode = context.audioContext.createDynamicsCompressor();
	    _this.connectNode.connect(context.connectNode);

	    _this.applyProps = _this.applyProps.bind(_this);
	    return _this;
	  }

	  _createClass(Compressor, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return _extends({}, this.context, {
	        connectNode: this.connectNode
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.applyProps(this.props);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      this.applyProps(nextProps);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.connectNode.disconnect();
	    }
	  }, {
	    key: 'applyProps',
	    value: function applyProps(props) {
	      for (var prop in props) {
	        if (this.connectNode[prop]) {
	          this.connectNode[prop].value = props[prop];
	        }
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return Compressor;
	}(_react.Component), _class.propTypes = {
	  attack: _propTypes2.default.number,
	  children: _propTypes2.default.node,
	  knee: _propTypes2.default.number,
	  ratio: _propTypes2.default.number,
	  release: _propTypes2.default.number,
	  threshold: _propTypes2.default.number
	}, _class.defaultProps = {
	  attack: 0.003,
	  knee: 32,
	  ratio: 12,
	  release: 0.25,
	  threshold: -24
	}, _class.contextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _class.childContextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _temp);
	exports.default = Compressor;

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;
	/* eslint-disable no-restricted-syntax */


	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _tunajs = __webpack_require__(132);

	var _tunajs2 = _interopRequireDefault(_tunajs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Delay = (_temp = _class = function (_Component) {
	  _inherits(Delay, _Component);

	  function Delay(props, context) {
	    _classCallCheck(this, Delay);

	    var _this = _possibleConstructorReturn(this, (Delay.__proto__ || Object.getPrototypeOf(Delay)).call(this, props));

	    var tuna = new _tunajs2.default(context.audioContext);

	    _this.connectNode = new tuna.Delay({
	      feedback: props.feedback,
	      delayTime: props.delayTime,
	      wetLevel: props.wetLevel,
	      dryLevel: props.dryLevel,
	      cutoff: props.cutoff,
	      bypass: props.bypass
	    });

	    _this.connectNode.connect(context.connectNode);
	    return _this;
	  }

	  _createClass(Delay, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return _extends({}, this.context, {
	        connectNode: this.connectNode
	      });
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      for (var prop in nextProps) {
	        if (this.connectNode[prop]) {
	          this.connectNode[prop] = nextProps[prop];
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.connectNode.disconnect();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return Delay;
	}(_react.Component), _class.propTypes = {
	  bypass: _propTypes2.default.number,
	  children: _propTypes2.default.node,
	  cutoff: _propTypes2.default.number,
	  delayTime: _propTypes2.default.number,
	  dryLevel: _propTypes2.default.number,
	  feedback: _propTypes2.default.number,
	  wetLevel: _propTypes2.default.number
	}, _class.defaultProps = {
	  bypass: 0,
	  cutoff: 2000,
	  delayTime: 150,
	  dryLevel: 1,
	  feedback: 0.45,
	  wetLevel: 0.25
	}, _class.contextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _class.childContextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _temp);
	exports.default = Delay;

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;
	/* eslint-disable no-restricted-syntax */


	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Filter = (_temp = _class = function (_Component) {
	  _inherits(Filter, _Component);

	  function Filter(props, context) {
	    _classCallCheck(this, Filter);

	    var _this = _possibleConstructorReturn(this, (Filter.__proto__ || Object.getPrototypeOf(Filter)).call(this, props));

	    _this.connectNode = context.audioContext.createBiquadFilter();
	    _this.connectNode.connect(context.connectNode);

	    _this.applyProps = _this.applyProps.bind(_this);
	    return _this;
	  }

	  _createClass(Filter, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return _extends({}, this.context, {
	        connectNode: this.connectNode
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.applyProps(this.props);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      this.applyProps(nextProps);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.connectNode.disconnect();
	    }
	  }, {
	    key: 'applyProps',
	    value: function applyProps(props) {
	      for (var prop in props) {
	        if (this.connectNode[prop]) {
	          if (_typeof(this.connectNode[prop]) === 'object') {
	            this.connectNode[prop].value = props[prop];
	          } else {
	            this.connectNode[prop] = props[prop];
	          }
	        }
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return Filter;
	}(_react.Component), _class.propTypes = {
	  children: _propTypes2.default.node,
	  frequency: _propTypes2.default.number,
	  gain: _propTypes2.default.number,
	  type: _propTypes2.default.oneOf(['lowpass', 'highpass', 'bandpass', 'lowshelf', 'highshelf', 'peaking', 'notch', 'allpass'])
	}, _class.defaultProps = {
	  frequency: 2000,
	  gain: 0,
	  type: 'lowpass'
	}, _class.contextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _class.childContextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _temp);
	exports.default = Filter;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Gain = (_temp = _class = function (_Component) {
	  _inherits(Gain, _Component);

	  function Gain(props, context) {
	    _classCallCheck(this, Gain);

	    var _this = _possibleConstructorReturn(this, (Gain.__proto__ || Object.getPrototypeOf(Gain)).call(this, props));

	    _this.connectNode = context.audioContext.createGain();
	    _this.connectNode.gain.value = props.amount;
	    _this.connectNode.connect(context.connectNode);
	    return _this;
	  }

	  _createClass(Gain, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return _extends({}, this.context, {
	        connectNode: this.connectNode
	      });
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      this.connectNode.gain.value = nextProps.amount;
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.connectNode.disconnect();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return Gain;
	}(_react.Component), _class.propTypes = {
	  amount: _propTypes2.default.number,
	  children: _propTypes2.default.node
	}, _class.defaultProps = {
	  amount: 1.0
	}, _class.contextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _class.childContextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _temp);
	exports.default = Gain;

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var LFO = (_temp = _class = function (_Component) {
	  _inherits(LFO, _Component);

	  function LFO() {
	    _classCallCheck(this, LFO);

	    return _possibleConstructorReturn(this, (LFO.__proto__ || Object.getPrototypeOf(LFO)).apply(this, arguments));
	  }

	  _createClass(LFO, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var volumeGain = this.context.audioContext.createGain();
	      volumeGain.gain.value = this.props.gain;
	      this.osc = this.context.audioContext.createOscillator();
	      this.osc.frequency.value = this.props.frequency;
	      this.osc.type = this.props.type;
	      this.osc.connect(volumeGain);
	      volumeGain.connect(this.props.connect(this.context.connectNode));

	      this.osc.start(this.context.audioContext.currentTime);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.osc.stop();
	      this.connectNode.disconnect();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return LFO;
	}(_react.Component), _class.displayName = 'Synth', _class.propTypes = {
	  children: _propTypes2.default.node,
	  connect: _propTypes2.default.func,
	  frequency: _propTypes2.default.number,
	  gain: _propTypes2.default.number,
	  type: _propTypes2.default.oneOf(['sine', 'square', 'sawtooth', 'triangle'])
	}, _class.defaultProps = {
	  connect: function connect(node) {
	    return node.gain;
	  },
	  frequency: 1,
	  gain: 0.5,
	  type: 'sine'
	}, _class.contextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _temp);
	exports.default = LFO;

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _noteParser = __webpack_require__(141);

	var _noteParser2 = _interopRequireDefault(_noteParser);

	var _audioContour = __webpack_require__(142);

	var _audioContour2 = _interopRequireDefault(_audioContour);

	var _uuid = __webpack_require__(144);

	var _uuid2 = _interopRequireDefault(_uuid);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Monosynth = (_temp = _class = function (_Component) {
	  _inherits(Monosynth, _Component);

	  function Monosynth(props, context) {
	    _classCallCheck(this, Monosynth);

	    var _this = _possibleConstructorReturn(this, (Monosynth.__proto__ || Object.getPrototypeOf(Monosynth)).call(this, props));

	    _this.getSteps = _this.getSteps.bind(_this);
	    _this.playStep = _this.playStep.bind(_this);

	    _this.connectNode = context.audioContext.createGain();
	    _this.connectNode.gain.value = props.gain;
	    _this.connectNode.connect(context.connectNode);
	    return _this;
	  }

	  _createClass(Monosynth, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return _extends({}, this.context, {
	        connectNode: this.connectNode
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;

	      this.id = _uuid2.default.v1();
	      var master = this.context.getMaster();
	      master.instruments[this.id] = this.getSteps;

	      this.amplitudeGain = this.context.audioContext.createGain();
	      this.amplitudeGain.gain.value = 0;
	      this.amplitudeGain.connect(this.connectNode);

	      this.osc = this.context.audioContext.createOscillator();
	      this.osc.type = this.props.type;
	      this.osc.connect(this.amplitudeGain);

	      if (this.props.busses) {
	        this.props.busses.forEach(function (bus) {
	          if (master.busses[bus]) {
	            _this2.osc.connect(master.busses[bus]);
	          }
	        });
	      }

	      this.osc.start(this.context.audioContext.currentTime);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      var master = this.context.getMaster();
	      delete master.instruments[this.id];
	      this.osc.stop();
	      this.connectNode.disconnect();
	    }
	  }, {
	    key: 'getSteps',
	    value: function getSteps(playbackTime) {
	      var _this3 = this;

	      var totalBars = this.context.getMaster().getMaxBars();
	      var loopCount = totalBars / this.context.bars;

	      var _loop = function _loop(i) {
	        var barOffset = _this3.context.barInterval * _this3.context.bars * i / 1000;
	        var stepInterval = _this3.context.barInterval / _this3.context.resolution;
	        _this3.props.steps.forEach(function (step, index) {
	          var time = barOffset + step[0] * stepInterval / 1000;
	          var glide = false;

	          if (index !== 0) {
	            var lastTime = barOffset + _this3.props.steps[index - 1][0] * stepInterval / 1000;
	            var lastDuration = _this3.props.steps[index - 1][1] * stepInterval / 1000;
	            glide = lastTime + lastDuration > time;
	          }

	          _this3.context.scheduler.insert(playbackTime + time, _this3.playStep, {
	            time: playbackTime,
	            step: step,
	            glide: glide
	          });
	        });
	      };

	      for (var i = 0; i < loopCount; i++) {
	        _loop(i);
	      }
	    }
	  }, {
	    key: 'createOscillator',
	    value: function createOscillator() {
	      var _arguments = Array.prototype.slice.call(arguments),
	          time = _arguments[0],
	          note = _arguments[1],
	          duration = _arguments[2],
	          glide = _arguments[3];

	      var transposed = note.slice(0, -1) + (parseInt(note[note.length - 1], 0) + parseInt(this.props.transpose, 0));

	      var env = (0, _audioContour2.default)(this.context.audioContext, {
	        attack: this.props.envelope.attack,
	        decay: this.props.envelope.decay,
	        sustain: this.props.envelope.sustain,
	        release: this.props.envelope.release
	      });

	      env.connect(this.amplitudeGain.gain);
	      this.osc.frequency.setTargetAtTime(_noteParser2.default.freq(transposed), time, glide ? this.props.glide : 0.001);

	      env.start(time);
	      env.stop(this.context.audioContext.currentTime + duration);
	    }
	  }, {
	    key: 'playStep',
	    value: function playStep(e) {
	      var _e$args = e.args,
	          step = _e$args.step,
	          glide = _e$args.glide,
	          time = _e$args.time;

	      var note = step[2];
	      var stepInterval = this.context.barInterval / this.context.resolution;
	      var duration = step[1] * stepInterval / 1000;
	      this.createOscillator(time, note, duration, glide);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return Monosynth;
	}(_react.Component), _class.displayName = 'Synth', _class.propTypes = {
	  busses: _propTypes2.default.array,
	  children: _propTypes2.default.node,
	  envelope: _propTypes2.default.shape({
	    attack: _propTypes2.default.number,
	    decay: _propTypes2.default.number,
	    sustain: _propTypes2.default.number,
	    release: _propTypes2.default.number
	  }),
	  gain: _propTypes2.default.number,
	  glide: _propTypes2.default.number,
	  steps: _propTypes2.default.array.isRequired,
	  transpose: _propTypes2.default.number,
	  type: _propTypes2.default.oneOf(['sine', 'square', 'sawtooth', 'triangle']).isRequired
	}, _class.defaultProps = {
	  envelope: {
	    attack: 0.01,
	    decay: 0.2,
	    sustain: 0.2,
	    release: 0.2
	  },
	  gain: 0.5,
	  glide: 0.1,
	  transpose: 0
	}, _class.contextTypes = {
	  audioContext: _propTypes2.default.object,
	  bars: _propTypes2.default.number,
	  barInterval: _propTypes2.default.number,
	  connectNode: _propTypes2.default.object,
	  getMaster: _propTypes2.default.func,
	  resolution: _propTypes2.default.number,
	  scheduler: _propTypes2.default.object,
	  tempo: _propTypes2.default.number
	}, _class.childContextTypes = {
	  audioContext: _propTypes2.default.object,
	  bars: _propTypes2.default.number,
	  barInterval: _propTypes2.default.number,
	  connectNode: _propTypes2.default.object,
	  getMaster: _propTypes2.default.func,
	  resolution: _propTypes2.default.number,
	  scheduler: _propTypes2.default.object,
	  tempo: _propTypes2.default.number
	}, _temp);
	exports.default = Monosynth;

/***/ },
/* 141 */
/***/ function(module, exports) {

	'use strict'

	// util
	function fillStr (s, num) { return Array(num + 1).join(s) }
	function isNum (x) { return typeof x === 'number' }
	function isStr (x) { return typeof x === 'string' }
	function isDef (x) { return typeof x !== 'undefined' }
	function midiToFreq (midi, tuning) {
	  return Math.pow(2, (midi - 69) / 12) * (tuning || 440)
	}

	var REGEX = /^([a-gA-G])(#{1,}|b{1,}|x{1,}|)(-?\d*)\s*(.*)\s*$/
	/**
	 * A regex for matching note strings in scientific notation.
	 *
	 * @name regex
	 * @function
	 * @return {RegExp} the regexp used to parse the note name
	 *
	 * The note string should have the form `letter[accidentals][octave][element]`
	 * where:
	 *
	 * - letter: (Required) is a letter from A to G either upper or lower case
	 * - accidentals: (Optional) can be one or more `b` (flats), `#` (sharps) or `x` (double sharps).
	 * They can NOT be mixed.
	 * - octave: (Optional) a positive or negative integer
	 * - element: (Optional) additionally anything after the duration is considered to
	 * be the element name (for example: 'C2 dorian')
	 *
	 * The executed regex contains (by array index):
	 *
	 * - 0: the complete string
	 * - 1: the note letter
	 * - 2: the optional accidentals
	 * - 3: the optional octave
	 * - 4: the rest of the string (trimmed)
	 *
	 * @example
	 * var parser = require('note-parser')
	 * parser.regex.exec('c#4')
	 * // => ['c#4', 'c', '#', '4', '']
	 * parser.regex.exec('c#4 major')
	 * // => ['c#4major', 'c', '#', '4', 'major']
	 * parser.regex().exec('CMaj7')
	 * // => ['CMaj7', 'C', '', '', 'Maj7']
	 */
	function regex () { return REGEX }

	var SEMITONES = [0, 2, 4, 5, 7, 9, 11]
	/**
	 * Parse a note name in scientific notation an return it's components,
	 * and some numeric properties including midi number and frequency.
	 *
	 * @name parse
	 * @function
	 * @param {String} note - the note string to be parsed
	 * @param {Boolean} isTonic - true the strings it's supposed to contain a note number
	 * and some category (for example an scale: 'C# major'). It's false by default,
	 * but when true, en extra tonicOf property is returned with the category ('major')
	 * @param {Float} tunning - The frequency of A4 note to calculate frequencies.
	 * By default it 440.
	 * @return {Object} the parsed note name or null if not a valid note
	 *
	 * The parsed note name object will ALWAYS contains:
	 * - letter: the uppercase letter of the note
	 * - acc: the accidentals of the note (only sharps or flats)
	 * - pc: the pitch class (letter + acc)
	 * - step: s a numeric representation of the letter. It's an integer from 0 to 6
	 * where 0 = C, 1 = D ... 6 = B
	 * - alt: a numeric representation of the accidentals. 0 means no alteration,
	 * positive numbers are for sharps and negative for flats
	 * - chroma: a numeric representation of the pitch class. It's like midi for
	 * pitch classes. 0 = C, 1 = C#, 2 = D ... 11 = B. Can be used to find enharmonics
	 * since, for example, chroma of 'Cb' and 'B' are both 11
	 *
	 * If the note has octave, the parser object will contain:
	 * - oct: the octave number (as integer)
	 * - midi: the midi number
	 * - freq: the frequency (using tuning parameter as base)
	 *
	 * If the parameter `isTonic` is set to true, the parsed object will contain:
	 * - tonicOf: the rest of the string that follows note name (left and right trimmed)
	 *
	 * @example
	 * var parse = require('note-parser').parse
	 * parse('Cb4')
	 * // => { letter: 'C', acc: 'b', pc: 'Cb', step: 0, alt: -1, chroma: -1,
	 *         oct: 4, midi: 59, freq: 246.94165062806206 }
	 * // if no octave, no midi, no freq
	 * parse('fx')
	 * // => { letter: 'F', acc: '##', pc: 'F##', step: 3, alt: 2, chroma: 7 })
	 */
	function parse (str, isTonic, tuning) {
	  if (typeof str !== 'string') return null
	  var m = REGEX.exec(str)
	  if (!m || !isTonic && m[4]) return null

	  var p = { letter: m[1].toUpperCase(), acc: m[2].replace(/x/g, '##') }
	  p.pc = p.letter + p.acc
	  p.step = (p.letter.charCodeAt(0) + 3) % 7
	  p.alt = p.acc[0] === 'b' ? -p.acc.length : p.acc.length
	  var pos = SEMITONES[p.step] + p.alt
	  p.chroma = pos < 0 ? 12 + pos : pos % 12
	  if (m[3]) { // has octave
	    p.oct = +m[3]
	    p.midi = pos + 12 * (p.oct + 1)
	    p.freq = midiToFreq(p.midi, tuning)
	  }
	  if (isTonic) p.tonicOf = m[4]
	  return p
	}

	var LETTERS = 'CDEFGAB'
	function acc (n) { return !isNum(n) ? '' : n < 0 ? fillStr('b', -n) : fillStr('#', n) }
	function oct (n) { return !isNum(n) ? '' : '' + n }

	/**
	 * Create a string from a parsed object or `step, alteration, octave` parameters
	 * @param {Object} obj - the parsed data object
	 * @return {String} a note string or null if not valid parameters
	 * @since 1.2
	 * @example
	 * parser.build(parser.parse('cb2')) // => 'Cb2'
	 *
	 * @example
	 * // it accepts (step, alteration, octave) parameters:
	 * parser.build(3) // => 'F'
	 * parser.build(3, -1) // => 'Fb'
	 * parser.build(3, -1, 4) // => 'Fb4'
	 */
	function build (s, a, o) {
	  if (s === null || typeof s === 'undefined') return null
	  if (s.step) return build(s.step, s.alt, s.oct)
	  if (s < 0 || s > 6) return null
	  return LETTERS.charAt(s) + acc(a) + oct(o)
	}

	/**
	 * Get midi of a note
	 *
	 * @name midi
	 * @function
	 * @param {String|Integer} note - the note name or midi number
	 * @return {Integer} the midi number of the note or null if not a valid note
	 * or the note does NOT contains octave
	 * @example
	 * var parser = require('note-parser')
	 * parser.midi('A4') // => 69
	 * parser.midi('A') // => null
	 * @example
	 * // midi numbers are bypassed (even as strings)
	 * parser.midi(60) // => 60
	 * parser.midi('60') // => 60
	 */
	function midi (note) {
	  if ((isNum(note) || isStr(note)) && note >= 0 && note < 128) return +note
	  var p = parse(note)
	  return p && isDef(p.midi) ? p.midi : null
	}

	/**
	 * Get freq of a note in hertzs (in a well tempered 440Hz A4)
	 *
	 * @name freq
	 * @function
	 * @param {String} note - the note name or note midi number
	 * @param {String} tuning - (Optional) the A4 frequency (440 by default)
	 * @return {Float} the freq of the number if hertzs or null if not valid note
	 * @example
	 * var parser = require('note-parser')
	 * parser.freq('A4') // => 440
	 * parser.freq('A') // => null
	 * @example
	 * // can change tuning (440 by default)
	 * parser.freq('A4', 444) // => 444
	 * parser.freq('A3', 444) // => 222
	 * @example
	 * // it accepts midi numbers (as numbers and as strings)
	 * parser.freq(69) // => 440
	 * parser.freq('69', 442) // => 442
	 */
	function freq (note, tuning) {
	  var m = midi(note)
	  return m === null ? null : midiToFreq(m, tuning)
	}

	var parser = { parse: parse, build: build, regex: regex, midi: midi, freq: freq }
	// add additional functions, one for each object property
	var FNS = ['letter', 'acc', 'pc', 'step', 'alt', 'chroma', 'oct']
	FNS.forEach(function (name) {
	  parser[name] = function (src) {
	    var p = parse(src)
	    return p && isDef(p[name]) ? p[name] : null
	  }
	})

	module.exports = parser


/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'
	var Voltage = __webpack_require__(143)
	var isNum = function (n) { return typeof n === 'number' }

	var NUMS = ['duration', 't1', 't2', 't3', 't4', 'l1', 'l2', 'l3']
	var DEFAULTS = {
	  duration: Infinity, l1: 1, l2: 0.2, l3: 0.8,
	  t1: 0.01, t2: 0.1, t3: 0, t4: 0.2
	}

	function rampFn (l) {
	  return l ? 'linearRampToValueAtTime' : 'exponentialRampToValueAtTime'
	}
	function ramp (l, node, level, time) { node.gain[rampFn(l)](level, time) }

	/**
	 * Create an envelope generator.
	 * @param {AudioContext} ac - the audio context
	 * @param {Object} options - (Optional) the envelope options
	 * @return {AudioNode} the envelope generator node
	 */
	function Contour (ac, options) {
	  var env = ac.createGain()
	  var opts = Contour.params(options, env)
	  var isL = opts.ramp === 'linear'

	  var tail = ac.createGain()
	  tail.connect(env)
	  var head = ac.createGain()
	  head.connect(tail)
	  var cv = Voltage(ac)
	  cv.connect(head)

	  env.start = function (time) {
	    time = Math.max(time || 0, ac.currentTime)
	    if (env.onstart) env.onstart(time)
	    cv.start(time)
	    head.gain.setValueAtTime(0, time)
	    head.gain.setValueAtTime(0.01, time + 0.000001)
	    ramp(isL, head, opts.l1, time + opts.t1)
	    ramp(isL, head, opts.l2, time + opts.t1 + opts.t2)
	    ramp(isL, head, opts.l3, time + opts.t1 + opts.t2 + opts.t3)
	    if (isFinite(opts.duration)) env.stop(time + opts.duration)
	  }

	  env.stop = function (time) {
	    time = Math.max(time || 0, ac.currentTime)
	    tail.gain.cancelScheduledValues(time)
	    tail.gain.setValueAtTime(env.gain.value, time)
	    var endsAt = time + opts.t4
	    ramp(isL, tail, 0.0001, endsAt)
	    if (env.onended) {
	      var s = Voltage(ac, 0)
	      s.connect(ac.destination)
	      s.onended = env.onended
	      s.start(ac.currentTime)
	      s.stop(endsAt)
	    }
	    return endsAt
	  }
	  return env
	}

	Contour.params = function (options, dest) {
	  dest = dest || {}
	  options = options || {}
	  NUMS.forEach(function (name) {
	    dest[name] = isNum(options[name]) ? options[name] : DEFAULTS[name]
	  })
	  if (isNum(options.attack)) dest.t1 = options.attack
	  if (isNum(options.decay)) dest.t2 = options.decay
	  if (isNum(options.sustain)) dest.l3 = options.sustain
	  if (isNum(options.release)) dest.t4 = options.release
	  dest.ramp = options.ramp === 'exponential' ? options.ramp : 'linear'
	  return dest
	}

	module.exports = Contour


/***/ },
/* 143 */
/***/ function(module, exports) {

	'use strict'

	module.exports = function (ac, value) {
	  value = (value || value === 0) ? value : 1
	  var buffer = ac.createBuffer(1, 2, ac.sampleRate)
	  var data = buffer.getChannelData(0)
	  data[0] = data[1] = value
	  var source = ac.createBufferSource()
	  source.buffer = buffer
	  source.loop = true
	  return source
	}


/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	//     uuid.js
	//
	//     Copyright (c) 2010-2012 Robert Kieffer
	//     MIT License - http://opensource.org/licenses/mit-license.php

	// Unique ID creation requires a high quality random # generator.  We feature
	// detect to determine the best RNG source, normalizing to a function that
	// returns 128-bits of randomness, since that's what's usually required
	var _rng = __webpack_require__(145);

	// Maps for number <-> hex string conversion
	var _byteToHex = [];
	var _hexToByte = {};
	for (var i = 0; i < 256; i++) {
	  _byteToHex[i] = (i + 0x100).toString(16).substr(1);
	  _hexToByte[_byteToHex[i]] = i;
	}

	// **`parse()` - Parse a UUID into it's component bytes**
	function parse(s, buf, offset) {
	  var i = (buf && offset) || 0, ii = 0;

	  buf = buf || [];
	  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {
	    if (ii < 16) { // Don't overflow!
	      buf[i + ii++] = _hexToByte[oct];
	    }
	  });

	  // Zero out remaining bytes if string was short
	  while (ii < 16) {
	    buf[i + ii++] = 0;
	  }

	  return buf;
	}

	// **`unparse()` - Convert UUID byte array (ala parse()) into a string**
	function unparse(buf, offset) {
	  var i = offset || 0, bth = _byteToHex;
	  return  bth[buf[i++]] + bth[buf[i++]] +
	          bth[buf[i++]] + bth[buf[i++]] + '-' +
	          bth[buf[i++]] + bth[buf[i++]] + '-' +
	          bth[buf[i++]] + bth[buf[i++]] + '-' +
	          bth[buf[i++]] + bth[buf[i++]] + '-' +
	          bth[buf[i++]] + bth[buf[i++]] +
	          bth[buf[i++]] + bth[buf[i++]] +
	          bth[buf[i++]] + bth[buf[i++]];
	}

	// **`v1()` - Generate time-based UUID**
	//
	// Inspired by https://github.com/LiosK/UUID.js
	// and http://docs.python.org/library/uuid.html

	// random #'s we need to init node and clockseq
	var _seedBytes = _rng();

	// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
	var _nodeId = [
	  _seedBytes[0] | 0x01,
	  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]
	];

	// Per 4.2.2, randomize (14 bit) clockseq
	var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;

	// Previous uuid creation time
	var _lastMSecs = 0, _lastNSecs = 0;

	// See https://github.com/broofa/node-uuid for API details
	function v1(options, buf, offset) {
	  var i = buf && offset || 0;
	  var b = buf || [];

	  options = options || {};

	  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;

	  // UUID timestamps are 100 nano-second units since the Gregorian epoch,
	  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
	  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
	  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
	  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();

	  // Per 4.2.1.2, use count of uuid's generated during the current clock
	  // cycle to simulate higher resolution clock
	  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;

	  // Time since last uuid creation (in msecs)
	  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;

	  // Per 4.2.1.2, Bump clockseq on clock regression
	  if (dt < 0 && options.clockseq === undefined) {
	    clockseq = clockseq + 1 & 0x3fff;
	  }

	  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
	  // time interval
	  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
	    nsecs = 0;
	  }

	  // Per 4.2.1.2 Throw error if too many uuids are requested
	  if (nsecs >= 10000) {
	    throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
	  }

	  _lastMSecs = msecs;
	  _lastNSecs = nsecs;
	  _clockseq = clockseq;

	  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch
	  msecs += 12219292800000;

	  // `time_low`
	  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
	  b[i++] = tl >>> 24 & 0xff;
	  b[i++] = tl >>> 16 & 0xff;
	  b[i++] = tl >>> 8 & 0xff;
	  b[i++] = tl & 0xff;

	  // `time_mid`
	  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;
	  b[i++] = tmh >>> 8 & 0xff;
	  b[i++] = tmh & 0xff;

	  // `time_high_and_version`
	  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version
	  b[i++] = tmh >>> 16 & 0xff;

	  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
	  b[i++] = clockseq >>> 8 | 0x80;

	  // `clock_seq_low`
	  b[i++] = clockseq & 0xff;

	  // `node`
	  var node = options.node || _nodeId;
	  for (var n = 0; n < 6; n++) {
	    b[i + n] = node[n];
	  }

	  return buf ? buf : unparse(b);
	}

	// **`v4()` - Generate random UUID**

	// See https://github.com/broofa/node-uuid for API details
	function v4(options, buf, offset) {
	  // Deprecated - 'format' argument, as supported in v1.2
	  var i = buf && offset || 0;

	  if (typeof(options) == 'string') {
	    buf = options == 'binary' ? new Array(16) : null;
	    options = null;
	  }
	  options = options || {};

	  var rnds = options.random || (options.rng || _rng)();

	  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
	  rnds[6] = (rnds[6] & 0x0f) | 0x40;
	  rnds[8] = (rnds[8] & 0x3f) | 0x80;

	  // Copy bytes to buffer, if provided
	  if (buf) {
	    for (var ii = 0; ii < 16; ii++) {
	      buf[i + ii] = rnds[ii];
	    }
	  }

	  return buf || unparse(rnds);
	}

	// Export public API
	var uuid = v4;
	uuid.v1 = v1;
	uuid.v4 = v4;
	uuid.parse = parse;
	uuid.unparse = unparse;

	module.exports = uuid;


/***/ },
/* 145 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {
	var rng;

	if (global.crypto && crypto.getRandomValues) {
	  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
	  // Moderately fast, high quality
	  var _rnds8 = new Uint8Array(16);
	  rng = function whatwgRNG() {
	    crypto.getRandomValues(_rnds8);
	    return _rnds8;
	  };
	}

	if (!rng) {
	  // Math.random()-based (RNG)
	  //
	  // If all else fails, use Math.random().  It's fast, but is of unspecified
	  // quality.
	  var  _rnds = new Array(16);
	  rng = function() {
	    for (var i = 0, r; i < 16; i++) {
	      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
	      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
	    }

	    return _rnds;
	  };
	}

	module.exports = rng;


	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;
	/* eslint-disable no-restricted-syntax */


	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _tunajs = __webpack_require__(132);

	var _tunajs2 = _interopRequireDefault(_tunajs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var MoogFilter = (_temp = _class = function (_Component) {
	  _inherits(MoogFilter, _Component);

	  function MoogFilter(props, context) {
	    _classCallCheck(this, MoogFilter);

	    var _this = _possibleConstructorReturn(this, (MoogFilter.__proto__ || Object.getPrototypeOf(MoogFilter)).call(this, props));

	    var tuna = new _tunajs2.default(context.audioContext);

	    _this.connectNode = new tuna.MoogFilter({
	      cutoff: props.cutoff,
	      resonance: props.resonance,
	      bufferSize: props.bufferSize
	    });

	    _this.connectNode.connect(context.connectNode);
	    return _this;
	  }

	  _createClass(MoogFilter, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return _extends({}, this.context, {
	        connectNode: this.connectNode
	      });
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      for (var prop in nextProps) {
	        if (this.connectNode[prop]) {
	          this.connectNode[prop] = nextProps[prop];
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.connectNode.disconnect();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return MoogFilter;
	}(_react.Component), _class.propTypes = {
	  bufferSize: _propTypes2.default.number,
	  children: _propTypes2.default.node,
	  cutoff: _propTypes2.default.number,
	  resonance: _propTypes2.default.number
	}, _class.defaultProps = {
	  bufferSize: 256,
	  cutoff: 0.065,
	  resonance: 3.5
	}, _class.contextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _class.childContextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _temp);
	exports.default = MoogFilter;

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;
	/* eslint-disable no-restricted-syntax */


	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _tunajs = __webpack_require__(132);

	var _tunajs2 = _interopRequireDefault(_tunajs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Overdrive = (_temp = _class = function (_Component) {
	  _inherits(Overdrive, _Component);

	  function Overdrive(props, context) {
	    _classCallCheck(this, Overdrive);

	    var _this = _possibleConstructorReturn(this, (Overdrive.__proto__ || Object.getPrototypeOf(Overdrive)).call(this, props));

	    var tuna = new _tunajs2.default(context.audioContext);

	    _this.connectNode = new tuna.Overdrive({
	      outputGain: props.outputGain,
	      drive: props.drive,
	      curveAmount: props.curveAmount,
	      algorithmIndex: props.algorithmIndex,
	      bypass: props.bypass
	    });

	    _this.connectNode.connect(context.connectNode);
	    return _this;
	  }

	  _createClass(Overdrive, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return _extends({}, this.context, {
	        connectNode: this.connectNode
	      });
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      for (var prop in nextProps) {
	        if (this.connectNode[prop]) {
	          this.connectNode[prop] = nextProps[prop];
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.connectNode.disconnect();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return Overdrive;
	}(_react.Component), _class.propTypes = {
	  algorithmIndex: _propTypes2.default.number,
	  bypass: _propTypes2.default.number,
	  children: _propTypes2.default.node,
	  curveAmount: _propTypes2.default.number,
	  drive: _propTypes2.default.number,
	  outputGain: _propTypes2.default.number
	}, _class.defaultProps = {
	  algorithmIndex: 0,
	  bypass: 0,
	  curveAmount: 1,
	  drive: 0.7,
	  outputGain: 0.5
	}, _class.contextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _class.childContextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _temp);
	exports.default = Overdrive;

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;
	/* eslint-disable no-restricted-syntax */


	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _tunajs = __webpack_require__(132);

	var _tunajs2 = _interopRequireDefault(_tunajs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PingPong = (_temp = _class = function (_Component) {
	  _inherits(PingPong, _Component);

	  function PingPong(props, context) {
	    _classCallCheck(this, PingPong);

	    var _this = _possibleConstructorReturn(this, (PingPong.__proto__ || Object.getPrototypeOf(PingPong)).call(this, props));

	    var tuna = new _tunajs2.default(context.audioContext);

	    _this.connectNode = new tuna.PingPongDelay({
	      wetLevel: props.wetLevel,
	      feedback: props.feedback,
	      delayTimeLeft: props.delayTimeLeft,
	      delayTimeRight: props.delayTimeRight
	    });

	    _this.connectNode.connect(context.connectNode);
	    return _this;
	  }

	  _createClass(PingPong, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return _extends({}, this.context, {
	        connectNode: this.connectNode
	      });
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      for (var prop in nextProps) {
	        if (this.connectNode[prop]) {
	          this.connectNode[prop] = nextProps[prop];
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.connectNode.disconnect();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return PingPong;
	}(_react.Component), _class.propTypes = {
	  children: _propTypes2.default.node,
	  delayTimeLeft: _propTypes2.default.number,
	  delayTimeRight: _propTypes2.default.number,
	  feedback: _propTypes2.default.number,
	  wetLevel: _propTypes2.default.number
	}, _class.defaultProps = {
	  delayTimeLeft: 150,
	  delayTimeRight: 200,
	  feedback: 0.3,
	  wetLevel: 0.5
	}, _class.contextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _class.childContextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _temp);
	exports.default = PingPong;

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;
	/* eslint-disable no-restricted-syntax */


	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _tunajs = __webpack_require__(132);

	var _tunajs2 = _interopRequireDefault(_tunajs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Reverb = (_temp = _class = function (_Component) {
	  _inherits(Reverb, _Component);

	  function Reverb(props, context) {
	    _classCallCheck(this, Reverb);

	    var _this = _possibleConstructorReturn(this, (Reverb.__proto__ || Object.getPrototypeOf(Reverb)).call(this, props));

	    var tuna = new _tunajs2.default(context.audioContext);

	    _this.connectNode = new tuna.Convolver({
	      highCut: props.highCut,
	      lowCut: props.lowCut,
	      dryLevel: props.dryLevel,
	      wetLevel: props.wetLevel,
	      level: props.level,
	      impulse: props.impulse,
	      bypass: props.bypass
	    });

	    _this.connectNode.connect(context.connectNode);
	    return _this;
	  }

	  _createClass(Reverb, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return _extends({}, this.context, {
	        connectNode: this.connectNode
	      });
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      for (var prop in nextProps) {
	        if (this.connectNode[prop]) {
	          this.connectNode[prop] = nextProps[prop];
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.connectNode.disconnect();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return Reverb;
	}(_react.Component), _class.propTypes = {
	  bypass: _propTypes2.default.number,
	  children: _propTypes2.default.node,
	  dryLevel: _propTypes2.default.number,
	  highCut: _propTypes2.default.number,
	  impulse: _propTypes2.default.string,
	  level: _propTypes2.default.number,
	  lowCut: _propTypes2.default.number,
	  wetLevel: _propTypes2.default.number
	}, _class.defaultProps = {
	  bypass: 0,
	  dryLevel: 0.5,
	  highCut: 22050,
	  impulse: 'reverb/room.wav',
	  level: 1,
	  lowCut: 20,
	  wetLevel: 1
	}, _class.contextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _class.childContextTypes = {
	  audioContext: _propTypes2.default.object,
	  connectNode: _propTypes2.default.object
	}, _temp);
	exports.default = Reverb;

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _uuid = __webpack_require__(144);

	var _uuid2 = _interopRequireDefault(_uuid);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Sequencer = (_temp = _class = function (_Component) {
	  _inherits(Sequencer, _Component);

	  function Sequencer() {
	    _classCallCheck(this, Sequencer);

	    return _possibleConstructorReturn(this, (Sequencer.__proto__ || Object.getPrototypeOf(Sequencer)).apply(this, arguments));
	  }

	  _createClass(Sequencer, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return _extends({}, this.context, {
	        bars: this.props.bars,
	        resolution: this.props.resolution
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.id = _uuid2.default.v1();
	      var master = this.context.getMaster();
	      master.bars[this.id] = this.props.bars;
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var master = this.context.getMaster();
	      master.bars[this.id] = nextProps.bars;
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      delete this.context.getMaster().bars[this.id];
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return Sequencer;
	}(_react.Component), _class.propTypes = {
	  bars: _propTypes2.default.number,
	  children: _propTypes2.default.node,
	  resolution: _propTypes2.default.number
	}, _class.defaultProps = {
	  bars: 1,
	  resolution: 16
	}, _class.contextTypes = {
	  getMaster: _propTypes2.default.func
	}, _class.childContextTypes = {
	  bars: _propTypes2.default.number,
	  getMaster: _propTypes2.default.func,
	  resolution: _propTypes2.default.number
	}, _temp);
	exports.default = Sequencer;

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _uuid = __webpack_require__(144);

	var _uuid2 = _interopRequireDefault(_uuid);

	var _bufferLoader = __webpack_require__(152);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Sampler = (_temp = _class = function (_Component) {
	  _inherits(Sampler, _Component);

	  function Sampler(props, context) {
	    _classCallCheck(this, Sampler);

	    var _this = _possibleConstructorReturn(this, (Sampler.__proto__ || Object.getPrototypeOf(Sampler)).call(this, props));

	    _this.bufferLoaded = _this.bufferLoaded.bind(_this);
	    _this.getSteps = _this.getSteps.bind(_this);
	    _this.playStep = _this.playStep.bind(_this);

	    _this.connectNode = context.audioContext.createGain();
	    _this.connectNode.gain.value = props.gain;
	    _this.connectNode.connect(context.connectNode);
	    return _this;
	  }

	  _createClass(Sampler, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return _extends({}, this.context, {
	        connectNode: this.connectNode
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.id = _uuid2.default.v1();

	      var master = this.context.getMaster();
	      master.instruments[this.id] = this.getSteps;
	      master.buffers[this.id] = 1;

	      var bufferLoader = new _bufferLoader.BufferLoader(this.context.audioContext, [this.props.sample], this.bufferLoaded);

	      bufferLoader.load();
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      this.connectNode.gain.value = nextProps.gain;
	      if (this.props.sample !== nextProps.sample) {
	        var master = this.context.getMaster();
	        delete master.buffers[this.id];

	        this.id = _uuid2.default.v1();
	        master.buffers[this.id] = 1;

	        var bufferLoader = new _bufferLoader.BufferLoader(this.context.audioContext, [nextProps.sample], this.bufferLoaded);

	        bufferLoader.load();
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      var master = this.context.getMaster();

	      delete master.buffers[this.id];
	      delete master.instruments[this.id];
	      this.connectNode.disconnect();
	    }
	  }, {
	    key: 'getSteps',
	    value: function getSteps(playbackTime) {
	      var _this2 = this;

	      var totalBars = this.context.getMaster().getMaxBars();
	      var loopCount = totalBars / this.context.bars;

	      var _loop = function _loop(i) {
	        var barOffset = _this2.context.barInterval * _this2.context.bars * i / 1000;
	        var stepInterval = _this2.context.barInterval / _this2.context.resolution;

	        _this2.props.steps.forEach(function (step) {
	          var stepValue = Array.isArray(step) ? step[0] : step;
	          var time = barOffset + stepValue * stepInterval / 1000;

	          _this2.context.scheduler.insert(playbackTime + time, _this2.playStep, {
	            time: playbackTime,
	            step: step
	          });
	        });
	      };

	      for (var i = 0; i < loopCount; i++) {
	        _loop(i);
	      }
	    }
	  }, {
	    key: 'playStep',
	    value: function playStep(e) {
	      var source = this.context.audioContext.createBufferSource();
	      source.buffer = this.buffer;
	      if (source.detune) {
	        if (Array.isArray(e.args.step)) {
	          source.detune.value = (this.props.detune + e.args.step[1]) * 100;
	        } else {
	          source.detune.value = this.props.detune;
	        }
	      }
	      source.connect(this.connectNode);

	      if (this.props.busses) {
	        var master = this.context.getMaster();
	        this.props.busses.forEach(function (bus) {
	          if (master.busses[bus]) {
	            source.connect(master.busses[bus]);
	          }
	        });
	      }

	      source.start(e.args.playbackTime);
	      this.context.scheduler.nextTick(e.args.playbackTime + this.buffer.duration, function () {
	        source.disconnect();
	      });
	    }
	  }, {
	    key: 'bufferLoaded',
	    value: function bufferLoaded(buffers) {
	      this.buffer = buffers[0];
	      var master = this.context.getMaster();
	      delete master.buffers[this.id];
	      this.context.bufferLoaded();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return Sampler;
	}(_react.Component), _class.displayName = 'Sampler', _class.propTypes = {
	  busses: _propTypes2.default.array,
	  children: _propTypes2.default.node,
	  detune: _propTypes2.default.number,
	  gain: _propTypes2.default.number,
	  sample: _propTypes2.default.string.isRequired,
	  steps: _propTypes2.default.array.isRequired
	}, _class.defaultProps = {
	  detune: 0,
	  gain: 0.5
	}, _class.contextTypes = {
	  audioContext: _propTypes2.default.object,
	  bars: _propTypes2.default.number,
	  barInterval: _propTypes2.default.number,
	  bufferLoaded: _propTypes2.default.func,
	  connectNode: _propTypes2.default.object,
	  getMaster: _propTypes2.default.func,
	  resolution: _propTypes2.default.number,
	  scheduler: _propTypes2.default.object,
	  tempo: _propTypes2.default.number
	}, _class.childContextTypes = {
	  audioContext: _propTypes2.default.object,
	  bars: _propTypes2.default.number,
	  barInterval: _propTypes2.default.number,
	  bufferLoaded: _propTypes2.default.func,
	  connectNode: _propTypes2.default.object,
	  getMaster: _propTypes2.default.func,
	  resolution: _propTypes2.default.number,
	  scheduler: _propTypes2.default.object,
	  tempo: _propTypes2.default.number
	}, _temp);
	exports.default = Sampler;

/***/ },
/* 152 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	/* eslint-disable no-console */
	var BufferLoader = exports.BufferLoader = function BufferLoader(context, urlList, callback) {
	  this.context = context;
	  this.urlList = urlList;
	  this.onload = callback;
	  this.bufferList = [];
	  this.loadCount = 0;
	};

	BufferLoader.prototype.loadBuffer = function loadBuffer(url, index) {
	  var request = new XMLHttpRequest();
	  request.open('GET', url, true);
	  request.responseType = 'arraybuffer';

	  var self = this;

	  request.onload = function onload() {
	    self.context.decodeAudioData(request.response, function (buffer) {
	      if (!buffer) {
	        console.error('error decoding file data: ' + url);
	        return;
	      }
	      self.bufferList[index] = buffer;
	      if (++self.loadCount === self.urlList.length) {
	        self.onload(self.bufferList);
	      }
	    }, function (error) {
	      console.error('decodeAudioData error', error);
	    });
	  };

	  request.onerror = function onError() {
	    console.error('BufferLoader: XHR error');
	  };

	  request.send();
	};

	BufferLoader.prototype.load = function load() {
	  for (var i = 0; i < this.urlList.length; ++i) {
	    this.loadBuffer(this.urlList[i], i);
	  }
	};

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;
	/* eslint-disable no-loop-func, react/no-did-mount-set-state */


	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _scheduler = __webpack_require__(154);

	var _scheduler2 = _interopRequireDefault(_scheduler);

	var _store = __webpack_require__(118);

	var _store2 = _interopRequireDefault(_store);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Song = (_temp = _class = function (_Component) {
	  _inherits(Song, _Component);

	  function Song(props) {
	    _classCallCheck(this, Song);

	    var _this = _possibleConstructorReturn(this, (Song.__proto__ || Object.getPrototypeOf(Song)).call(this, props));

	    _this.state = {
	      buffersLoaded: false
	    };

	    _this.barInterval = 60000 / props.tempo * 4;
	    _this.bars = {};
	    _this.buffers = {};
	    _this.instruments = {};
	    _this.busses = {};

	    _this.loop = _this.loop.bind(_this);
	    _this.bufferLoaded = _this.bufferLoaded.bind(_this);
	    _this.getMaster = _this.getMaster.bind(_this);
	    _this.getMaxBars = _this.getMaxBars.bind(_this);

	    window.AudioContext = window.AudioContext || window.webkitAudioContext;
	    _this.audioContext = new AudioContext();

	    _this.scheduler = new _scheduler2.default({
	      context: _this.audioContext
	    });
	    return _this;
	  }

	  _createClass(Song, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return {
	        tempo: this.props.tempo,
	        audioContext: this.audioContext,
	        barInterval: this.barInterval,
	        bufferLoaded: this.bufferLoaded,
	        connectNode: this.audioContext.destination,
	        getMaster: this.getMaster,
	        scheduler: this.scheduler
	      };
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (Object.keys(this.buffers).length === 0) {
	        this.setState({
	          buffersLoaded: true
	        });
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      this.barInterval = 60000 / nextProps.tempo * 4;
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps, prevState) {
	      var _this2 = this;

	      if (prevState.buffersLoaded !== this.state.buffersLoaded || prevProps.playing !== this.props.playing) {
	        if (this.state.buffersLoaded === true && this.props.playing === true) {
	          setTimeout(function () {
	            _this2.scheduler.start(_this2.loop);
	          }, 0);
	        } else {
	          this.scheduler.stop(true);
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.audioContext.close();
	    }
	  }, {
	    key: 'getMaster',
	    value: function getMaster() {
	      return this;
	    }
	  }, {
	    key: 'getMaxBars',
	    value: function getMaxBars() {
	      var _this3 = this;

	      return Math.max.apply(Math, _toConsumableArray(Object.keys(this.bars).map(function (b) {
	        return _this3.bars[b];
	      })));
	    }
	  }, {
	    key: 'bufferLoaded',
	    value: function bufferLoaded() {
	      console.log("buffer loaded");

	      if (Object.keys(this.buffers).length === 0) {
	        this.setState({
	          buffersLoaded: true
	        });
	      }
	    }
	  }, {
	    key: 'loop',
	    value: function loop(e) {
	      var _this4 = this;

	      var maxBars = Object.keys(this.bars).length ? this.getMaxBars() : 1;
	      Object.keys(this.instruments).forEach(function (id) {
	        var callback = _this4.instruments[id];
	        callback(e.playbackTime);
	      });
	      this.scheduler.insert(e.playbackTime + this.barInterval * maxBars / 1000, this.loop);
	      console.log("loop scheduled ");
	      _store2.default.resetCurrentLitNote();
	      _store2.default.resetCurrentLitBeat();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return Song;
	}(_react.Component), _class.propTypes = {
	  children: _propTypes2.default.node,
	  playing: _propTypes2.default.bool,
	  tempo: _propTypes2.default.number
	}, _class.defaultProps = {
	  playing: false,
	  tempo: 90
	}, _class.childContextTypes = {
	  audioContext: _propTypes2.default.object,
	  barInterval: _propTypes2.default.number,
	  bufferLoaded: _propTypes2.default.func,
	  connectNode: _propTypes2.default.object,
	  getMaster: _propTypes2.default.func,
	  scheduler: _propTypes2.default.object,
	  tempo: _propTypes2.default.number
	}, _temp);
	exports.default = Song;

/***/ },
/* 154 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Scheduler = function () {
	  function Scheduler(opts) {
	    _classCallCheck(this, Scheduler);

	    this.context = opts.context;
	    this.interval = 0.025;
	    this.aheadTime = 0.0;
	    this.playbackTime = this.context.currentTime;

	    this.timerID = 0;
	    this.scheduleID = 0;
	    this.schedules = [];
	  }

	  _createClass(Scheduler, [{
	    key: 'start',
	    value: function start(callback, args) {
	      var _this = this;

	      var loop = function loop() {
	        var t0 = _this.context.currentTime;
	        var t1 = t0 + _this.aheadTime;

	        _this.process(t0, t1);
	      };

	      if (this.timerID === 0) {
	        this.timerID = setInterval(loop, this.interval * 1000);

	        if (callback) {
	          this.insert(this.context.currentTime, callback, args);
	          loop();
	        }
	      } else {
	        this.insert(this.context.currentTime, callback, args);
	      }

	      return this;
	    }
	  }, {
	    key: 'stop',
	    value: function stop(reset) {
	      if (this.timerID !== 0) {
	        clearInterval(this.timerID);
	        this.timerID = 0;
	      }

	      if (reset) {
	        this.schedules.splice(0);
	      }

	      return this;
	    }
	  }, {
	    key: 'insert',
	    value: function insert(time, callback, args) {
	      var id = ++this.scheduleID;
	      var event = { id: id, time: time, callback: callback, args: args };

	      if (this.schedules.length === 0 || this.schedules[this.schedules.length - 1].time <= time) {
	        this.schedules.push(event);
	      } else {
	        for (var i = 0, imax = this.schedules.length; i < imax; i++) {
	          if (time < this.schedules[i].time) {
	            this.schedules.splice(i, 0, event);
	            break;
	          }
	        }
	      }

	      return id;
	    }
	  }, {
	    key: 'nextTick',
	    value: function nextTick(time, callback, args) {
	      return this.insert(time + this.aheadTime, callback, args);
	    }
	  }, {
	    key: 'remove',
	    value: function remove(scheduleID) {
	      if (typeof scheduleID === 'number') {
	        for (var i = 0, imax = this.schedules.length; i < imax; i++) {
	          if (scheduleID === this.schedules[i].id) {
	            this.schedules.splice(i, 1);
	            break;
	          }
	        }
	      }

	      return scheduleID;
	    }
	  }, {
	    key: 'removeAll',
	    value: function removeAll() {
	      this.schedules.splice(0);
	    }
	  }, {
	    key: 'process',
	    value: function process(t0, t1) {
	      this.playbackTime = t0;

	      while (this.schedules.length && this.schedules[0].time < t1) {
	        var event = this.schedules.shift();
	        var playbackTime = event.time;
	        var args = event.args;

	        this.playbackTime = playbackTime;

	        event.callback({ playbackTime: playbackTime, args: args });
	      }

	      this.playbackTime = t0;
	    }
	  }]);

	  return Scheduler;
	}();

	exports.default = Scheduler;

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _temp;
	/* eslint-disable max-statements */


	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _noteParser = __webpack_require__(141);

	var _noteParser2 = _interopRequireDefault(_noteParser);

	var _audioContour = __webpack_require__(142);

	var _audioContour2 = _interopRequireDefault(_audioContour);

	var _uuid = __webpack_require__(144);

	var _uuid2 = _interopRequireDefault(_uuid);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Synth = (_temp = _class = function (_Component) {
	  _inherits(Synth, _Component);

	  function Synth(props, context) {
	    _classCallCheck(this, Synth);

	    var _this = _possibleConstructorReturn(this, (Synth.__proto__ || Object.getPrototypeOf(Synth)).call(this, props));

	    _this.getSteps = _this.getSteps.bind(_this);
	    _this.playStep = _this.playStep.bind(_this);

	    _this.connectNode = context.audioContext.createGain();
	    _this.connectNode.gain.value = props.gain;
	    _this.connectNode.connect(context.connectNode);
	    return _this;
	  }

	  _createClass(Synth, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return _extends({}, this.context, {
	        connectNode: this.connectNode
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.id = _uuid2.default.v1();
	      var master = this.context.getMaster();
	      master.instruments[this.id] = this.getSteps;
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      this.connectNode.gain.value = nextProps.gain;
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      var master = this.context.getMaster();
	      delete master.instruments[this.id];
	      this.connectNode.disconnect();
	    }
	  }, {
	    key: 'getSteps',
	    value: function getSteps(playbackTime) {
	      var _this2 = this;

	      var totalBars = this.context.getMaster().getMaxBars();
	      var loopCount = totalBars / this.context.bars;

	      var _loop = function _loop(i) {
	        var barOffset = _this2.context.barInterval * _this2.context.bars * i / 1000;
	        var stepInterval = _this2.context.barInterval / _this2.context.resolution;
	        _this2.props.steps.forEach(function (step) {
	          var time = barOffset + step[0] * stepInterval / 1000;

	          _this2.context.scheduler.insert(playbackTime + time, _this2.playStep, {
	            time: playbackTime,
	            step: step
	          });
	        });
	      };

	      for (var i = 0; i < loopCount; i++) {
	        _loop(i);
	      }
	    }
	  }, {
	    key: 'createOscillator',
	    value: function createOscillator(time, note, duration) {
	      var amplitudeGain = this.context.audioContext.createGain();
	      amplitudeGain.gain.value = 0;
	      amplitudeGain.connect(this.connectNode);

	      var env = (0, _audioContour2.default)(this.context.audioContext, {
	        attack: this.props.envelope.attack,
	        decay: this.props.envelope.decay,
	        sustain: this.props.envelope.sustain,
	        release: this.props.envelope.release
	      });

	      env.connect(amplitudeGain.gain);

	      var osc = this.context.audioContext.createOscillator();
	      var transposed = note.slice(0, -1) + (parseInt(note[note.length - 1], 0) + parseInt(this.props.transpose, 0));

	      osc.frequency.value = _noteParser2.default.freq(transposed);
	      osc.type = this.props.type;
	      osc.connect(amplitudeGain);

	      if (this.props.busses) {
	        var master = this.context.getMaster();
	        this.props.busses.forEach(function (bus) {
	          if (master.busses[bus]) {
	            osc.connect(master.busses[bus]);
	          }
	        });
	      }

	      osc.start(time);
	      env.start(time);

	      var finish = env.stop(this.context.audioContext.currentTime + duration);
	      osc.stop(finish);
	    }
	  }, {
	    key: 'playStep',
	    value: function playStep(e) {
	      var _this3 = this;

	      var _e$args = e.args,
	          step = _e$args.step,
	          time = _e$args.time;

	      var notes = step[2];
	      var stepInterval = this.context.barInterval / this.context.resolution;
	      var duration = step[1] * stepInterval / 1000;

	      if (Array.isArray(notes)) {
	        notes.forEach(function (n) {
	          _this3.createOscillator(time, n, duration);
	        });
	      } else {
	        this.createOscillator(time, notes, duration);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return Synth;
	}(_react.Component), _class.displayName = 'Synth', _class.propTypes = {
	  busses: _propTypes2.default.array,
	  children: _propTypes2.default.node,
	  envelope: _propTypes2.default.shape({
	    attack: _propTypes2.default.number,
	    decay: _propTypes2.default.number,
	    sustain: _propTypes2.default.number,
	    release: _propTypes2.default.number
	  }),
	  gain: _propTypes2.default.number,
	  steps: _propTypes2.default.array.isRequired,
	  transpose: _propTypes2.default.number,
	  type: _propTypes2.default.oneOf(['sine', 'square', 'sawtooth', 'triangle']).isRequired
	}, _class.defaultProps = {
	  envelope: {
	    attack: 0.01,
	    decay: 0.2,
	    sustain: 0.2,
	    release: 0.2
	  },
	  gain: 0.5,
	  transpose: 0
	}, _class.contextTypes = {
	  audioContext: _propTypes2.default.object,
	  bars: _propTypes2.default.number,
	  barInterval: _propTypes2.default.number,
	  connectNode: _propTypes2.default.object,
	  getMaster: _propTypes2.default.func,
	  resolution: _propTypes2.default.number,
	  scheduler: _propTypes2.default.object,
	  tempo: _propTypes2.default.number
	}, _class.childContextTypes = {
	  audioContext: _propTypes2.default.object,
	  bars: _propTypes2.default.number,
	  barInterval: _propTypes2.default.number,
	  connectNode: _propTypes2.default.object,
	  getMaster: _propTypes2.default.func,
	  resolution: _propTypes2.default.number,
	  scheduler: _propTypes2.default.object,
	  tempo: _propTypes2.default.number
	}, _temp);
	exports.default = Synth;

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _styledComponents = __webpack_require__(64);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _chromaJs = __webpack_require__(114);

	var _chromaJs2 = _interopRequireDefault(_chromaJs);

	var _colors = __webpack_require__(127);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var buttonColor = _colors.blue;
	var altColor = _colors.lighterBlue;

	var Button = _styledComponents2.default.button.attrs({
	  color: function color(props) {
	    return props.color && props.color[0] || buttonColor;
	  },
	  altcolor: function altcolor(props) {
	    return props.color && props.color[1] || props.color && props.color[0] && (0, _chromaJs2.default)(props.color[0]).brighten(0.5) || altColor;
	  }
	}).withConfig({
	  displayName: "button__Button",
	  componentId: "sc-14tnzw6-0"
	})(["background-color:", ";border-radius:3px;border:3px solid ", ";color:white;float:", ";font-family:\"Ubuntu\";cursor:pointer;font-size:", ";margin:6px 3px;padding:", ";transition:all 0.2s;min-width:100px;&:hover{background:", ";color:white;}"], function (props) {
	  return props.color;
	}, function (props) {
	  return props.color;
	}, function (props) {
	  return props.right ? "right" : props.left ? "left" : "none";
	}, function (props) {
	  return props.large ? "20px" : props.small ? "12px" : "15px";
	}, function (props) {
	  return props.large ? "4px 30px" : props.small ? "2px 4px" : "4px 8px";
	}, function (props) {
	  return props.altcolor;
	});

	exports.default = Button;

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _mobxReact = __webpack_require__(62);

	var _reactMusic = __webpack_require__(129);

	var _store = __webpack_require__(118);

	var _store2 = _interopRequireDefault(_store);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var generateSamplers = function generateSamplers(beat, samples) {
	  var convertedSynthSequence = [];
	  var samplers = beat.tracks.map(function (track, i) {
	    if (track.trackType == "synth") {
	      track.sequence.forEach(function (note, j) {
	        if (note === 1 && !track.mute) {
	          convertedSynthSequence.push([j, 2, track.sample]);
	        }
	      });
	    } else {
	      var convertedSamplerSequence = [];
	      track.sequence.forEach(function (note, j) {
	        if (note === 1) {
	          convertedSamplerSequence.push(j);
	        }
	      });
	      return _react2.default.createElement(_reactMusic.Sampler, {
	        key: i,
	        sample: samples[track.sample].path,
	        steps: convertedSamplerSequence,
	        gain: track.mute ? 0 : samples[track.sample].gain
	      });
	    }
	  });
	  samplers.push(_react2.default.createElement(_reactMusic.Synth, {
	    key: "synth" + _store2.default.generation + "." + _store2.default.beatNum,
	    type: "square",
	    steps: convertedSynthSequence,
	    gain: _store2.default.synthGain / _store2.default.synthGainCorrection
	  }));

	  return samplers;
	};

	var generateMetronomeSampler = function generateMetronomeSampler(resolution, on) {
	  if (!on) {
	    return null;
	  }

	  var staticFilePath = "";
	  if (process.env.NODE_ENV === "PRODUCTION") {
	    staticFilePath = "/static/";
	  }

	  var sample = staticFilePath + "samples/clave.wav";

	  var sequence = [];
	  for (var i = 0; i < resolution; i++) {
	    var comparitor = resolution / 4;
	    if (resolution == 2) {
	      comparitor = 1;
	    }
	    if (i % comparitor == 0) {
	      sequence.push(i);
	    }
	  }

	  return _react2.default.createElement(_reactMusic.Sampler, {
	    key: 100,
	    sample: sample,
	    steps: sequence,
	    gain: 0.5
	  });
	};

	var Player = (0, _mobxReact.observer)(_class = function (_Component) {
	  _inherits(Player, _Component);

	  function Player() {
	    _classCallCheck(this, Player);

	    return _possibleConstructorReturn(this, (Player.__proto__ || Object.getPrototypeOf(Player)).apply(this, arguments));
	  }

	  _createClass(Player, [{
	    key: "render",
	    value: function render() {
	      var _this2 = this;

	      var _props = this.props,
	          beat = _props.beat,
	          playing = _props.playing,
	          resolution = _props.resolution,
	          bars = _props.bars;

	      if (!beat || !beat.tracks || beat.tracks.length < 1) {
	        return null;
	      }

	      return _react2.default.createElement(
	        _reactMusic.Song,
	        {
	          playing: playing,
	          tempo: _store2.default.tempo,
	          ref: function ref(c) {
	            _this2.song = c;
	          }
	        },
	        _react2.default.createElement(
	          _reactMusic.Sequencer,
	          {
	            bars: bars ? bars : 1,
	            resolution: resolution
	          },
	          generateSamplers(beat, _store2.default.samples),
	          generateMetronomeSampler(resolution, _store2.default.metronome)
	        )
	      );
	    }
	  }]);

	  return Player;
	}(_react.Component)) || _class;

	exports.default = Player;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, '__esModule', { value: true });

	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

	var _extends = _interopDefault(__webpack_require__(159));
	var invariant = _interopDefault(__webpack_require__(198));
	var cssBoxModel = __webpack_require__(199);
	var _Object$keys = _interopDefault(__webpack_require__(200));
	var memoizeOne = _interopDefault(__webpack_require__(204));
	var redux = __webpack_require__(205);
	var _Object$assign = _interopDefault(__webpack_require__(160));
	var rafSchd = _interopDefault(__webpack_require__(208));
	var _inheritsLoose = _interopDefault(__webpack_require__(209));
	var React = __webpack_require__(2);
	var React__default = _interopDefault(React);
	var PropTypes = _interopDefault(__webpack_require__(59));
	var reactRedux = __webpack_require__(216);
	var reactMotion = __webpack_require__(242);

	var vertical = {
	  direction: 'vertical',
	  line: 'y',
	  crossAxisLine: 'x',
	  start: 'top',
	  end: 'bottom',
	  size: 'height',
	  crossAxisStart: 'left',
	  crossAxisEnd: 'right',
	  crossAxisSize: 'width'
	};
	var horizontal = {
	  direction: 'horizontal',
	  line: 'x',
	  crossAxisLine: 'y',
	  start: 'left',
	  end: 'right',
	  size: 'width',
	  crossAxisStart: 'top',
	  crossAxisEnd: 'bottom',
	  crossAxisSize: 'height'
	};

	var origin = {
	  x: 0,
	  y: 0
	};
	var add = function add(point1, point2) {
	  return {
	    x: point1.x + point2.x,
	    y: point1.y + point2.y
	  };
	};
	var subtract = function subtract(point1, point2) {
	  return {
	    x: point1.x - point2.x,
	    y: point1.y - point2.y
	  };
	};
	var isEqual = function isEqual(point1, point2) {
	  return point1.x === point2.x && point1.y === point2.y;
	};
	var negate = function negate(point) {
	  return {
	    x: point.x !== 0 ? -point.x : 0,
	    y: point.y !== 0 ? -point.y : 0
	  };
	};
	var absolute = function absolute(point) {
	  return {
	    x: Math.abs(point.x),
	    y: Math.abs(point.y)
	  };
	};
	var patch = function patch(line, value, otherValue) {
	  var _ref;

	  if (otherValue === void 0) {
	    otherValue = 0;
	  }

	  return _ref = {}, _ref[line] = value, _ref[line === 'x' ? 'y' : 'x'] = otherValue, _ref;
	};
	var distance = function distance(point1, point2) {
	  return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));
	};
	var closest = function closest(target, points) {
	  return Math.min.apply(Math, points.map(function (point) {
	    return distance(target, point);
	  }));
	};
	var apply = function apply(fn) {
	  return function (point) {
	    return {
	      x: fn(point.x),
	      y: fn(point.y)
	    };
	  };
	};

	var offsetByPosition = function offsetByPosition(spacing, point) {
	  return {
	    top: spacing.top + point.y,
	    left: spacing.left + point.x,
	    bottom: spacing.bottom + point.y,
	    right: spacing.right + point.x
	  };
	};
	var expandByPosition = function expandByPosition(spacing, position) {
	  return {
	    top: spacing.top - position.y,
	    left: spacing.left - position.x,
	    right: spacing.right + position.x,
	    bottom: spacing.bottom + position.y
	  };
	};
	var getCorners = function getCorners(spacing) {
	  return [{
	    x: spacing.left,
	    y: spacing.top
	  }, {
	    x: spacing.right,
	    y: spacing.top
	  }, {
	    x: spacing.left,
	    y: spacing.bottom
	  }, {
	    x: spacing.right,
	    y: spacing.bottom
	  }];
	};

	var getMaxScroll = (function (_ref) {
	  var scrollHeight = _ref.scrollHeight,
	      scrollWidth = _ref.scrollWidth,
	      height = _ref.height,
	      width = _ref.width;
	  var maxScroll = subtract({
	    x: scrollWidth,
	    y: scrollHeight
	  }, {
	    x: width,
	    y: height
	  });
	  var adjustedMaxScroll = {
	    x: Math.max(0, maxScroll.x),
	    y: Math.max(0, maxScroll.y)
	  };
	  return adjustedMaxScroll;
	});

	var clip = function clip(frame, subject) {
	  var result = cssBoxModel.getRect({
	    top: Math.max(subject.top, frame.top),
	    right: Math.min(subject.right, frame.right),
	    bottom: Math.min(subject.bottom, frame.bottom),
	    left: Math.max(subject.left, frame.left)
	  });

	  if (result.width <= 0 || result.height <= 0) {
	    return null;
	  }

	  return result;
	};
	var getDroppableDimension = function getDroppableDimension(_ref) {
	  var descriptor = _ref.descriptor,
	      isEnabled = _ref.isEnabled,
	      direction = _ref.direction,
	      client = _ref.client,
	      page = _ref.page,
	      closest$$1 = _ref.closest;

	  var scrollable = function () {
	    if (!closest$$1) {
	      return null;
	    }

	    var maxScroll = getMaxScroll({
	      scrollHeight: closest$$1.scrollHeight,
	      scrollWidth: closest$$1.scrollWidth,
	      height: closest$$1.client.paddingBox.height,
	      width: closest$$1.client.paddingBox.width
	    });
	    return {
	      framePageMarginBox: closest$$1.page.marginBox,
	      shouldClipSubject: closest$$1.shouldClipSubject,
	      scroll: {
	        initial: closest$$1.scroll,
	        current: closest$$1.scroll,
	        max: maxScroll,
	        diff: {
	          value: origin,
	          displacement: origin
	        }
	      }
	    };
	  }();

	  var subjectPageMarginBox = page.marginBox;
	  var clippedPageMarginBox = scrollable && scrollable.shouldClipSubject ? clip(scrollable.framePageMarginBox, subjectPageMarginBox) : subjectPageMarginBox;
	  var viewport = {
	    closestScrollable: scrollable,
	    subjectPageMarginBox: subjectPageMarginBox,
	    clippedPageMarginBox: clippedPageMarginBox
	  };
	  var dimension = {
	    descriptor: descriptor,
	    axis: direction === 'vertical' ? vertical : horizontal,
	    isEnabled: isEnabled,
	    client: client,
	    page: page,
	    viewport: viewport
	  };
	  return dimension;
	};
	var scrollDroppable = function scrollDroppable(droppable, newScroll) {
	  !droppable.viewport.closestScrollable ? process.env.NODE_ENV !== "production" ? invariant(false) : invariant(false) : void 0;
	  var scrollable = droppable.viewport.closestScrollable;
	  var framePageMarginBox = scrollable.framePageMarginBox;
	  var scrollDiff = subtract(newScroll, scrollable.scroll.initial);
	  var scrollDisplacement = negate(scrollDiff);
	  var closestScrollable = {
	    framePageMarginBox: scrollable.framePageMarginBox,
	    shouldClipSubject: scrollable.shouldClipSubject,
	    scroll: {
	      initial: scrollable.scroll.initial,
	      current: newScroll,
	      diff: {
	        value: scrollDiff,
	        displacement: scrollDisplacement
	      },
	      max: scrollable.scroll.max
	    }
	  };
	  var displacedSubject = offsetByPosition(droppable.viewport.subjectPageMarginBox, scrollDisplacement);
	  var clippedPageMarginBox = closestScrollable.shouldClipSubject ? clip(framePageMarginBox, displacedSubject) : cssBoxModel.getRect(displacedSubject);
	  var viewport = {
	    closestScrollable: closestScrollable,
	    subjectPageMarginBox: droppable.viewport.subjectPageMarginBox,
	    clippedPageMarginBox: clippedPageMarginBox
	  };

	  var result = _extends({}, droppable, {
	    viewport: viewport
	  });

	  return result;
	};

	var toDroppableMap = memoizeOne(function (droppables) {
	  return droppables.reduce(function (previous, current) {
	    previous[current.descriptor.id] = current;
	    return previous;
	  }, {});
	});
	var toDraggableMap = memoizeOne(function (draggables) {
	  return draggables.reduce(function (previous, current) {
	    previous[current.descriptor.id] = current;
	    return previous;
	  }, {});
	});
	var toDroppableList = memoizeOne(function (droppables) {
	  return _Object$keys(droppables).map(function (id) {
	    return droppables[id];
	  });
	});
	var toDraggableList = memoizeOne(function (draggables) {
	  return _Object$keys(draggables).map(function (id) {
	    return draggables[id];
	  });
	});

	var getDraggablesInsideDroppable = memoizeOne(function (droppable, draggables) {
	  return toDraggableList(draggables).filter(function (draggable) {
	    return droppable.descriptor.id === draggable.descriptor.droppableId;
	  }).sort(function (a, b) {
	    return a.descriptor.index - b.descriptor.index;
	  });
	});

	var isWithin = (function (lowerBound, upperBound) {
	  return function (value) {
	    return value <= upperBound && value >= lowerBound;
	  };
	});

	var isPositionInFrame = (function (frame) {
	  var isWithinVertical = isWithin(frame.top, frame.bottom);
	  var isWithinHorizontal = isWithin(frame.left, frame.right);
	  return function (point) {
	    return isWithinVertical(point.y) && isWithinVertical(point.y) && isWithinHorizontal(point.x) && isWithinHorizontal(point.x);
	  };
	});

	var getRequiredGrowth = memoizeOne(function (draggable, draggables, droppable) {
	  var getResult = function getResult(existingSpace) {
	    var requiredSpace = draggable.page.marginBox[droppable.axis.size];

	    if (requiredSpace <= existingSpace) {
	      return null;
	    }

	    var requiredGrowth = patch(droppable.axis.line, requiredSpace - existingSpace);
	    return requiredGrowth;
	  };

	  var dimensions = getDraggablesInsideDroppable(droppable, draggables);

	  if (!dimensions.length) {
	    var _existingSpace = droppable.page.marginBox[droppable.axis.size];
	    return getResult(_existingSpace);
	  }

	  var endOfDraggables = dimensions[dimensions.length - 1].page.marginBox[droppable.axis.end];
	  var endOfDroppable = droppable.page.marginBox[droppable.axis.end];
	  var existingSpace = endOfDroppable - endOfDraggables;
	  return getResult(existingSpace);
	});
	var getWithGrowth = memoizeOne(function (area, growth) {
	  return cssBoxModel.getRect(expandByPosition(area, growth));
	});

	var getClippedRectWithPlaceholder = function getClippedRectWithPlaceholder(_ref) {
	  var draggable = _ref.draggable,
	      draggables = _ref.draggables,
	      droppable = _ref.droppable,
	      previousDroppableOverId = _ref.previousDroppableOverId;
	  var isHome = draggable.descriptor.droppableId === droppable.descriptor.id;
	  var wasOver = Boolean(previousDroppableOverId && previousDroppableOverId === droppable.descriptor.id);
	  var clippedPageMarginBox = droppable.viewport.clippedPageMarginBox;

	  if (!clippedPageMarginBox) {
	    return clippedPageMarginBox;
	  }

	  if (isHome || !wasOver) {
	    return clippedPageMarginBox;
	  }

	  var requiredGrowth = getRequiredGrowth(draggable, draggables, droppable);

	  if (!requiredGrowth) {
	    return clippedPageMarginBox;
	  }

	  var subjectWithGrowth = getWithGrowth(clippedPageMarginBox, requiredGrowth);
	  var closestScrollable = droppable.viewport.closestScrollable;

	  if (!closestScrollable) {
	    return subjectWithGrowth;
	  }

	  if (!closestScrollable.shouldClipSubject) {
	    return subjectWithGrowth;
	  }

	  return clip(closestScrollable.framePageMarginBox, subjectWithGrowth);
	};

	var getDroppableOver = (function (_ref2) {
	  var target = _ref2.target,
	      draggable = _ref2.draggable,
	      draggables = _ref2.draggables,
	      droppables = _ref2.droppables,
	      previousDroppableOverId = _ref2.previousDroppableOverId;
	  var maybe = toDroppableList(droppables).filter(function (droppable) {
	    return droppable.isEnabled;
	  }).find(function (droppable) {
	    var withPlaceholder = getClippedRectWithPlaceholder({
	      draggable: draggable,
	      draggables: draggables,
	      droppable: droppable,
	      previousDroppableOverId: previousDroppableOverId
	    });

	    if (!withPlaceholder) {
	      return false;
	    }

	    return isPositionInFrame(withPlaceholder)(target);
	  });
	  return maybe ? maybe.descriptor.id : null;
	});

	var noMovement = {
	  displaced: [],
	  amount: origin,
	  isBeyondStartPosition: false
	};
	var noImpact = {
	  movement: noMovement,
	  direction: null,
	  destination: null
	};

	var getDisplacementMap = memoizeOne(function (displaced) {
	  return displaced.reduce(function (map, displacement) {
	    map[displacement.draggableId] = displacement;
	    return map;
	  }, {});
	});

	var isPartiallyVisibleThroughFrame = (function (frame) {
	  var isWithinVertical = isWithin(frame.top, frame.bottom);
	  var isWithinHorizontal = isWithin(frame.left, frame.right);
	  return function (subject) {
	    var isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);

	    if (isContained) {
	      return true;
	    }

	    var isPartiallyVisibleVertically = isWithinVertical(subject.top) || isWithinVertical(subject.bottom);
	    var isPartiallyVisibleHorizontally = isWithinHorizontal(subject.left) || isWithinHorizontal(subject.right);
	    var isPartiallyContained = isPartiallyVisibleVertically && isPartiallyVisibleHorizontally;

	    if (isPartiallyContained) {
	      return true;
	    }

	    var isBiggerVertically = subject.top < frame.top && subject.bottom > frame.bottom;
	    var isBiggerHorizontally = subject.left < frame.left && subject.right > frame.right;
	    var isTargetBiggerThanFrame = isBiggerVertically && isBiggerHorizontally;

	    if (isTargetBiggerThanFrame) {
	      return true;
	    }

	    var isTargetBiggerOnOneAxis = isBiggerVertically && isPartiallyVisibleHorizontally || isBiggerHorizontally && isPartiallyVisibleVertically;
	    return isTargetBiggerOnOneAxis;
	  };
	});

	var isTotallyVisibleThroughFrame = (function (frame) {
	  var isWithinVertical = isWithin(frame.top, frame.bottom);
	  var isWithinHorizontal = isWithin(frame.left, frame.right);
	  return function (subject) {
	    var isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);
	    return isContained;
	  };
	});

	var isVisible = function isVisible(_ref) {
	  var target = _ref.target,
	      destination = _ref.destination,
	      viewport = _ref.viewport,
	      isVisibleThroughFrameFn = _ref.isVisibleThroughFrameFn;
	  var displacement = destination.viewport.closestScrollable ? destination.viewport.closestScrollable.scroll.diff.displacement : origin;
	  var withDisplacement = offsetByPosition(target, displacement);

	  if (!destination.viewport.clippedPageMarginBox) {
	    return false;
	  }

	  var isVisibleInDroppable = isVisibleThroughFrameFn(destination.viewport.clippedPageMarginBox)(withDisplacement);
	  var isVisibleInViewport = isVisibleThroughFrameFn(viewport)(withDisplacement);
	  return isVisibleInDroppable && isVisibleInViewport;
	};

	var isPartiallyVisible = function isPartiallyVisible(_ref2) {
	  var target = _ref2.target,
	      destination = _ref2.destination,
	      viewport = _ref2.viewport;
	  return isVisible({
	    target: target,
	    destination: destination,
	    viewport: viewport,
	    isVisibleThroughFrameFn: isPartiallyVisibleThroughFrame
	  });
	};
	var isTotallyVisible = function isTotallyVisible(_ref3) {
	  var target = _ref3.target,
	      destination = _ref3.destination,
	      viewport = _ref3.viewport;
	  return isVisible({
	    target: target,
	    destination: destination,
	    viewport: viewport,
	    isVisibleThroughFrameFn: isTotallyVisibleThroughFrame
	  });
	};

	var getDisplacement = (function (_ref) {
	  var draggable = _ref.draggable,
	      destination = _ref.destination,
	      previousImpact = _ref.previousImpact,
	      viewport = _ref.viewport;
	  var id = draggable.descriptor.id;
	  var map = getDisplacementMap(previousImpact.movement.displaced);
	  var isVisible = isPartiallyVisible({
	    target: draggable.page.marginBox,
	    destination: destination,
	    viewport: viewport
	  });

	  var shouldAnimate = function () {
	    if (!isVisible) {
	      return false;
	    }

	    var previous = map[id];

	    if (!previous) {
	      return true;
	    }

	    return previous.shouldAnimate;
	  }();

	  var displacement = {
	    draggableId: id,
	    isVisible: isVisible,
	    shouldAnimate: shouldAnimate
	  };
	  return displacement;
	});

	var withDroppableScroll = (function (droppable, point) {
	  var closestScrollable = droppable.viewport.closestScrollable;

	  if (!closestScrollable) {
	    return point;
	  }

	  return add(point, closestScrollable.scroll.diff.value);
	});

	var inHomeList = (function (_ref) {
	  var pageBorderBoxCenter = _ref.pageBorderBoxCenter,
	      draggable = _ref.draggable,
	      home = _ref.home,
	      insideHome = _ref.insideHome,
	      previousImpact = _ref.previousImpact,
	      viewport = _ref.viewport;
	  var axis = home.axis;
	  var originalCenter = draggable.page.borderBox.center;
	  var currentCenter = withDroppableScroll(home, pageBorderBoxCenter);
	  var isBeyondStartPosition = currentCenter[axis.line] - originalCenter[axis.line] > 0;
	  var amount = patch(axis.line, draggable.client.marginBox[axis.size]);
	  var displaced = insideHome.filter(function (child) {
	    if (child === draggable) {
	      return false;
	    }

	    var borderBox = child.page.borderBox;

	    if (isBeyondStartPosition) {
	      if (borderBox.center[axis.line] < originalCenter[axis.line]) {
	        return false;
	      }

	      return currentCenter[axis.line] > borderBox[axis.start];
	    }

	    if (originalCenter[axis.line] < borderBox.center[axis.line]) {
	      return false;
	    }

	    return currentCenter[axis.line] < borderBox[axis.end];
	  }).map(function (dimension) {
	    return getDisplacement({
	      draggable: dimension,
	      destination: home,
	      previousImpact: previousImpact,
	      viewport: viewport.frame
	    });
	  });
	  var ordered = isBeyondStartPosition ? displaced.reverse() : displaced;

	  var index = function () {
	    var startIndex = draggable.descriptor.index;
	    var length = ordered.length;

	    if (!length) {
	      return startIndex;
	    }

	    if (isBeyondStartPosition) {
	      return startIndex + length;
	    }

	    return startIndex - length;
	  }();

	  var movement = {
	    amount: amount,
	    displaced: ordered,
	    isBeyondStartPosition: isBeyondStartPosition
	  };
	  var impact = {
	    movement: movement,
	    direction: axis.direction,
	    destination: {
	      droppableId: home.descriptor.id,
	      index: index
	    }
	  };
	  return impact;
	});

	var inForeignList = (function (_ref) {
	  var pageBorderBoxCenter = _ref.pageBorderBoxCenter,
	      draggable = _ref.draggable,
	      destination = _ref.destination,
	      insideDestination = _ref.insideDestination,
	      previousImpact = _ref.previousImpact,
	      viewport = _ref.viewport;
	  var axis = destination.axis;
	  var currentCenter = withDroppableScroll(destination, pageBorderBoxCenter);
	  var displaced = insideDestination.filter(function (child) {
	    var threshold = child.page.borderBox[axis.end];
	    return threshold > currentCenter[axis.line];
	  }).map(function (dimension) {
	    return getDisplacement({
	      draggable: dimension,
	      destination: destination,
	      previousImpact: previousImpact,
	      viewport: viewport.frame
	    });
	  });
	  var newIndex = insideDestination.length - displaced.length;
	  var movement = {
	    amount: patch(axis.line, draggable.page.marginBox[axis.size]),
	    displaced: displaced,
	    isBeyondStartPosition: false
	  };
	  var impact = {
	    movement: movement,
	    direction: axis.direction,
	    destination: {
	      droppableId: destination.descriptor.id,
	      index: newIndex
	    }
	  };
	  return impact;
	});

	var getDragImpact = (function (_ref) {
	  var pageBorderBoxCenter = _ref.pageBorderBoxCenter,
	      draggable = _ref.draggable,
	      draggables = _ref.draggables,
	      droppables = _ref.droppables,
	      previousImpact = _ref.previousImpact,
	      viewport = _ref.viewport;
	  var previousDroppableOverId = previousImpact.destination && previousImpact.destination.droppableId;
	  var destinationId = getDroppableOver({
	    target: pageBorderBoxCenter,
	    draggable: draggable,
	    draggables: draggables,
	    droppables: droppables,
	    previousDroppableOverId: previousDroppableOverId
	  });

	  if (!destinationId) {
	    return noImpact;
	  }

	  var destination = droppables[destinationId];

	  if (!destination.isEnabled) {
	    return noImpact;
	  }

	  var home = droppables[draggable.descriptor.droppableId];
	  var isWithinHomeDroppable = home.descriptor.id === destinationId;
	  var insideDestination = getDraggablesInsideDroppable(destination, draggables);

	  if (isWithinHomeDroppable) {
	    return inHomeList({
	      pageBorderBoxCenter: pageBorderBoxCenter,
	      draggable: draggable,
	      home: home,
	      insideHome: insideDestination,
	      previousImpact: previousImpact || noImpact,
	      viewport: viewport
	    });
	  }

	  return inForeignList({
	    pageBorderBoxCenter: pageBorderBoxCenter,
	    draggable: draggable,
	    destination: destination,
	    insideDestination: insideDestination,
	    previousImpact: previousImpact || noImpact,
	    viewport: viewport
	  });
	});

	var getHomeLocation = (function (critical) {
	  return {
	    index: critical.draggable.index,
	    droppableId: critical.droppable.id
	  };
	});

	var getSafeClipped = function getSafeClipped(droppable) {
	  var rect = droppable.viewport.clippedPageMarginBox;
	  !rect ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot get clipped area from droppable') : invariant(false) : void 0;
	  return rect;
	};

	var getBestCrossAxisDroppable = (function (_ref) {
	  var isMovingForward = _ref.isMovingForward,
	      pageBorderBoxCenter = _ref.pageBorderBoxCenter,
	      source = _ref.source,
	      droppables = _ref.droppables,
	      viewport = _ref.viewport;
	  var sourceClipped = source.viewport.clippedPageMarginBox;

	  if (!sourceClipped) {
	    return null;
	  }

	  var axis = source.axis;
	  var isBetweenSourceClipped = isWithin(sourceClipped[axis.start], sourceClipped[axis.end]);
	  var candidates = toDroppableList(droppables).filter(function (droppable) {
	    return droppable !== source;
	  }).filter(function (droppable) {
	    return droppable.isEnabled;
	  }).filter(function (droppable) {
	    var clippedPageMarginBox = droppable.viewport.clippedPageMarginBox;

	    if (!clippedPageMarginBox) {
	      return false;
	    }

	    return isPartiallyVisibleThroughFrame(viewport.frame)(clippedPageMarginBox);
	  }).filter(function (droppable) {
	    var targetClipped = getSafeClipped(droppable);

	    if (isMovingForward) {
	      return sourceClipped[axis.crossAxisEnd] < targetClipped[axis.crossAxisEnd];
	    }

	    return targetClipped[axis.crossAxisStart] < sourceClipped[axis.crossAxisStart];
	  }).filter(function (droppable) {
	    var targetClipped = getSafeClipped(droppable);
	    var isBetweenDestinationClipped = isWithin(targetClipped[axis.start], targetClipped[axis.end]);
	    return isBetweenSourceClipped(targetClipped[axis.start]) || isBetweenSourceClipped(targetClipped[axis.end]) || isBetweenDestinationClipped(sourceClipped[axis.start]) || isBetweenDestinationClipped(sourceClipped[axis.end]);
	  }).sort(function (a, b) {
	    var first = getSafeClipped(a)[axis.crossAxisStart];
	    var second = getSafeClipped(b)[axis.crossAxisStart];

	    if (isMovingForward) {
	      return first - second;
	    }

	    return second - first;
	  }).filter(function (droppable, index, array) {
	    return getSafeClipped(droppable)[axis.crossAxisStart] === getSafeClipped(array[0])[axis.crossAxisStart];
	  });

	  if (!candidates.length) {
	    return null;
	  }

	  if (candidates.length === 1) {
	    return candidates[0];
	  }

	  var contains = candidates.filter(function (droppable) {
	    var isWithinDroppable = isWithin(getSafeClipped(droppable)[axis.start], getSafeClipped(droppable)[axis.end]);
	    return isWithinDroppable(pageBorderBoxCenter[axis.line]);
	  });

	  if (contains.length === 1) {
	    return contains[0];
	  }

	  if (contains.length > 1) {
	    return contains.sort(function (a, b) {
	      return getSafeClipped(a)[axis.start] - getSafeClipped(b)[axis.start];
	    })[0];
	  }

	  return candidates.sort(function (a, b) {
	    var first = closest(pageBorderBoxCenter, getCorners(getSafeClipped(a)));
	    var second = closest(pageBorderBoxCenter, getCorners(getSafeClipped(b)));

	    if (first !== second) {
	      return first - second;
	    }

	    return getSafeClipped(a)[axis.start] - getSafeClipped(b)[axis.start];
	  })[0];
	});

	var withDroppableDisplacement = (function (droppable, point) {
	  var closestScrollable = droppable.viewport.closestScrollable;

	  if (!closestScrollable) {
	    return point;
	  }

	  return add(point, closestScrollable.scroll.diff.displacement);
	});

	var getClosestDraggable = (function (_ref) {
	  var axis = _ref.axis,
	      viewport = _ref.viewport,
	      pageBorderBoxCenter = _ref.pageBorderBoxCenter,
	      destination = _ref.destination,
	      insideDestination = _ref.insideDestination;

	  if (!insideDestination.length) {
	    return null;
	  }

	  var result = insideDestination.filter(function (draggable) {
	    return isTotallyVisible({
	      target: draggable.page.borderBox,
	      destination: destination,
	      viewport: viewport.frame
	    });
	  }).sort(function (a, b) {
	    var distanceToA = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, a.page.borderBox.center));
	    var distanceToB = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, b.page.borderBox.center));

	    if (distanceToA < distanceToB) {
	      return -1;
	    }

	    if (distanceToB < distanceToA) {
	      return 1;
	    }

	    return a.page.borderBox[axis.start] - b.page.borderBox[axis.start];
	  });
	  return result.length ? result[0] : null;
	});

	var moveToEdge = (function (_ref) {
	  var source = _ref.source,
	      sourceEdge = _ref.sourceEdge,
	      destination = _ref.destination,
	      destinationEdge = _ref.destinationEdge,
	      destinationAxis = _ref.destinationAxis;

	  var getCorner = function getCorner(area) {
	    return patch(destinationAxis.line, area[destinationAxis[destinationEdge]], area[destinationAxis.crossAxisStart]);
	  };

	  var corner = getCorner(destination);
	  var centerDiff = absolute(subtract(source.center, getCorner(source)));
	  var signed = patch(destinationAxis.line, (sourceEdge === 'end' ? -1 : 1) * centerDiff[destinationAxis.line], centerDiff[destinationAxis.crossAxisLine]);
	  return add(corner, signed);
	});

	var toHomeList = (function (_ref) {
	  var amount = _ref.amount,
	      homeIndex = _ref.homeIndex,
	      movingRelativeTo = _ref.movingRelativeTo,
	      insideDestination = _ref.insideDestination,
	      draggable = _ref.draggable,
	      destination = _ref.destination,
	      previousImpact = _ref.previousImpact,
	      viewport = _ref.viewport;
	  var axis = destination.axis;
	  var targetIndex = insideDestination.indexOf(movingRelativeTo);
	  !(targetIndex !== -1) ? process.env.NODE_ENV !== "production" ? invariant(false, 'Unable to find target in destination droppable') : invariant(false) : void 0;

	  if (targetIndex === homeIndex) {
	    var _newCenter = draggable.page.borderBox.center;
	    var _newImpact = {
	      movement: {
	        displaced: [],
	        amount: amount,
	        isBeyondStartPosition: false
	      },
	      direction: destination.axis.direction,
	      destination: {
	        droppableId: destination.descriptor.id,
	        index: homeIndex
	      }
	    };
	    return {
	      pageBorderBoxCenter: withDroppableDisplacement(destination, _newCenter),
	      impact: _newImpact
	    };
	  }

	  var isMovingPastOriginalIndex = targetIndex > homeIndex;
	  var edge = isMovingPastOriginalIndex ? 'end' : 'start';
	  var newCenter = moveToEdge({
	    source: draggable.page.borderBox,
	    sourceEdge: edge,
	    destination: isMovingPastOriginalIndex ? movingRelativeTo.page.borderBox : movingRelativeTo.page.marginBox,
	    destinationEdge: edge,
	    destinationAxis: axis
	  });

	  var modified = function () {
	    if (!isMovingPastOriginalIndex) {
	      return insideDestination.slice(targetIndex, homeIndex);
	    }

	    var from = homeIndex + 1;
	    var to = targetIndex + 1;
	    return insideDestination.slice(from, to).reverse();
	  }();

	  var displaced = modified.map(function (dimension) {
	    return getDisplacement({
	      draggable: dimension,
	      destination: destination,
	      previousImpact: previousImpact,
	      viewport: viewport.frame
	    });
	  });
	  var newImpact = {
	    movement: {
	      displaced: displaced,
	      amount: amount,
	      isBeyondStartPosition: isMovingPastOriginalIndex
	    },
	    direction: axis.direction,
	    destination: {
	      droppableId: destination.descriptor.id,
	      index: targetIndex
	    }
	  };
	  return {
	    pageBorderBoxCenter: withDroppableDisplacement(destination, newCenter),
	    impact: newImpact
	  };
	});

	var toForeignList = (function (_ref) {
	  var amount = _ref.amount,
	      pageBorderBoxCenter = _ref.pageBorderBoxCenter,
	      movingRelativeTo = _ref.movingRelativeTo,
	      insideDestination = _ref.insideDestination,
	      draggable = _ref.draggable,
	      destination = _ref.destination,
	      previousImpact = _ref.previousImpact,
	      viewport = _ref.viewport;
	  var axis = destination.axis;
	  var isGoingBeforeTarget = Boolean(movingRelativeTo && pageBorderBoxCenter[destination.axis.line] < movingRelativeTo.page.borderBox.center[destination.axis.line]);

	  if (!movingRelativeTo) {
	    var _newCenter = moveToEdge({
	      source: draggable.page.borderBox,
	      sourceEdge: 'start',
	      destination: destination.page.contentBox,
	      destinationEdge: 'start',
	      destinationAxis: axis
	    });

	    var _newImpact = {
	      movement: {
	        displaced: [],
	        amount: amount,
	        isBeyondStartPosition: false
	      },
	      direction: axis.direction,
	      destination: {
	        droppableId: destination.descriptor.id,
	        index: 0
	      }
	    };
	    return {
	      pageBorderBoxCenter: withDroppableDisplacement(destination, _newCenter),
	      impact: _newImpact
	    };
	  }

	  var targetIndex = insideDestination.indexOf(movingRelativeTo);
	  !(targetIndex !== -1) ? process.env.NODE_ENV !== "production" ? invariant(false, 'The target was not found within its droppable') : invariant(false) : void 0;
	  var proposedIndex = isGoingBeforeTarget ? targetIndex : targetIndex + 1;
	  var newCenter = moveToEdge({
	    source: draggable.page.borderBox,
	    sourceEdge: 'start',
	    destination: movingRelativeTo.page.marginBox,
	    destinationEdge: isGoingBeforeTarget ? 'start' : 'end',
	    destinationAxis: axis
	  });
	  var displaced = insideDestination.slice(proposedIndex, insideDestination.length).map(function (dimension) {
	    return getDisplacement({
	      draggable: dimension,
	      destination: destination,
	      viewport: viewport.frame,
	      previousImpact: previousImpact
	    });
	  });
	  var newImpact = {
	    movement: {
	      displaced: displaced,
	      amount: amount,
	      isBeyondStartPosition: false
	    },
	    direction: axis.direction,
	    destination: {
	      droppableId: destination.descriptor.id,
	      index: proposedIndex
	    }
	  };
	  return {
	    pageBorderBoxCenter: withDroppableDisplacement(destination, newCenter),
	    impact: newImpact
	  };
	});

	var moveToNewDroppable = (function (_ref) {
	  var pageBorderBoxCenter = _ref.pageBorderBoxCenter,
	      destination = _ref.destination,
	      insideDestination = _ref.insideDestination,
	      draggable = _ref.draggable,
	      movingRelativeTo = _ref.movingRelativeTo,
	      home = _ref.home,
	      previousImpact = _ref.previousImpact,
	      viewport = _ref.viewport;
	  var amount = patch(destination.axis.line, draggable.client.marginBox[destination.axis.size]);

	  if (destination.descriptor.id === draggable.descriptor.droppableId) {
	    !movingRelativeTo ? process.env.NODE_ENV !== "production" ? invariant(false, 'There will always be a target in the original list') : invariant(false) : void 0;
	    return toHomeList({
	      amount: amount,
	      homeIndex: home.index,
	      movingRelativeTo: movingRelativeTo,
	      insideDestination: insideDestination,
	      draggable: draggable,
	      destination: destination,
	      previousImpact: previousImpact,
	      viewport: viewport
	    });
	  }

	  return toForeignList({
	    amount: amount,
	    pageBorderBoxCenter: pageBorderBoxCenter,
	    movingRelativeTo: movingRelativeTo,
	    insideDestination: insideDestination,
	    draggable: draggable,
	    destination: destination,
	    previousImpact: previousImpact,
	    viewport: viewport
	  });
	});

	var moveCrossAxis = (function (_ref) {
	  var isMovingForward = _ref.isMovingForward,
	      pageBorderBoxCenter = _ref.pageBorderBoxCenter,
	      draggableId = _ref.draggableId,
	      droppableId = _ref.droppableId,
	      home = _ref.home,
	      draggables = _ref.draggables,
	      droppables = _ref.droppables,
	      previousImpact = _ref.previousImpact,
	      viewport = _ref.viewport;
	  var draggable = draggables[draggableId];
	  var source = droppables[droppableId];
	  var destination = getBestCrossAxisDroppable({
	    isMovingForward: isMovingForward,
	    pageBorderBoxCenter: pageBorderBoxCenter,
	    source: source,
	    droppables: droppables,
	    viewport: viewport
	  });

	  if (!destination) {
	    return null;
	  }

	  var insideDestination = getDraggablesInsideDroppable(destination, draggables);
	  var movingRelativeTo = getClosestDraggable({
	    axis: destination.axis,
	    pageBorderBoxCenter: pageBorderBoxCenter,
	    destination: destination,
	    insideDestination: insideDestination,
	    viewport: viewport
	  });

	  if (insideDestination.length && !movingRelativeTo) {
	    return null;
	  }

	  return moveToNewDroppable({
	    pageBorderBoxCenter: pageBorderBoxCenter,
	    destination: destination,
	    draggable: draggable,
	    movingRelativeTo: movingRelativeTo,
	    insideDestination: insideDestination,
	    home: home,
	    previousImpact: previousImpact || noImpact,
	    viewport: viewport
	  });
	});

	var isTotallyVisibleInNewLocation = (function (_ref) {
	  var draggable = _ref.draggable,
	      destination = _ref.destination,
	      newPageBorderBoxCenter = _ref.newPageBorderBoxCenter,
	      viewport = _ref.viewport;
	  var diff = subtract(newPageBorderBoxCenter, draggable.page.borderBox.center);
	  var shifted = offsetByPosition(draggable.page.borderBox, diff);
	  return isTotallyVisible({
	    target: shifted,
	    destination: destination,
	    viewport: viewport
	  });
	});

	var withFirstAdded = function withFirstAdded(_ref) {
	  var add = _ref.add,
	      previousImpact = _ref.previousImpact,
	      droppable = _ref.droppable,
	      draggables = _ref.draggables,
	      viewport = _ref.viewport;
	  var newDisplacement = {
	    draggableId: add,
	    isVisible: true,
	    shouldAnimate: true
	  };
	  var added = [newDisplacement].concat(previousImpact.movement.displaced);
	  var withUpdatedVisibility = added.map(function (current) {
	    if (current === newDisplacement) {
	      return current;
	    }

	    var updated = getDisplacement({
	      draggable: draggables[current.draggableId],
	      destination: droppable,
	      previousImpact: previousImpact,
	      viewport: viewport.frame
	    });
	    return updated;
	  });
	  return withUpdatedVisibility;
	};

	var forceVisibleDisplacement = function forceVisibleDisplacement(current) {
	  if (current.isVisible) {
	    return current;
	  }

	  return {
	    draggableId: current.draggableId,
	    isVisible: true,
	    shouldAnimate: false
	  };
	};

	var withFirstRemoved = function withFirstRemoved(_ref2) {
	  var dragging = _ref2.dragging,
	      isVisibleInNewLocation = _ref2.isVisibleInNewLocation,
	      previousImpact = _ref2.previousImpact,
	      droppable = _ref2.droppable,
	      draggables = _ref2.draggables;
	  var last = previousImpact.movement.displaced;
	  !last.length ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot remove displacement from empty list') : invariant(false) : void 0;
	  var withFirstRestored = last.slice(1, last.length);

	  if (!withFirstRestored.length) {
	    return withFirstRestored;
	  }

	  if (isVisibleInNewLocation) {
	    return withFirstRestored;
	  }

	  var axis = droppable.axis;
	  var sizeOfRestored = draggables[last[0].draggableId].page.marginBox[axis.size];
	  var sizeOfDragging = draggables[dragging].page.marginBox[axis.size];
	  var buffer = sizeOfRestored + sizeOfDragging;
	  var withUpdatedVisibility = withFirstRestored.map(function (displacement, index) {
	    if (index === 0) {
	      return forceVisibleDisplacement(displacement);
	    }

	    if (buffer > 0) {
	      var current = draggables[displacement.draggableId];
	      var size = current.page.marginBox[axis.size];
	      buffer -= size;
	      return forceVisibleDisplacement(displacement);
	    }

	    return {
	      draggableId: displacement.draggableId,
	      isVisible: false,
	      shouldAnimate: false
	    };
	  });
	  return withUpdatedVisibility;
	};

	var inHomeList$1 = (function (_ref) {
	  var isMovingForward = _ref.isMovingForward,
	      draggableId = _ref.draggableId,
	      previousPageBorderBoxCenter = _ref.previousPageBorderBoxCenter,
	      previousImpact = _ref.previousImpact,
	      droppable = _ref.droppable,
	      draggables = _ref.draggables,
	      viewport = _ref.viewport;
	  var location = previousImpact.destination;
	  !location ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot move to next index in home list when there is no previous destination') : invariant(false) : void 0;
	  var draggable = draggables[draggableId];
	  var axis = droppable.axis;
	  var insideDroppable = getDraggablesInsideDroppable(droppable, draggables);
	  var startIndex = draggable.descriptor.index;
	  var currentIndex = location.index;
	  var proposedIndex = isMovingForward ? currentIndex + 1 : currentIndex - 1;

	  if (proposedIndex > insideDroppable.length - 1) {
	    return null;
	  }

	  if (proposedIndex < 0) {
	    return null;
	  }

	  var destination = insideDroppable[proposedIndex];
	  var isMovingTowardStart = isMovingForward && proposedIndex <= startIndex || !isMovingForward && proposedIndex >= startIndex;

	  var edge = function () {
	    if (!isMovingTowardStart) {
	      return isMovingForward ? 'end' : 'start';
	    }

	    return isMovingForward ? 'start' : 'end';
	  }();

	  var newPageBorderBoxCenter = moveToEdge({
	    source: draggable.page.borderBox,
	    sourceEdge: edge,
	    destination: destination.page.borderBox,
	    destinationEdge: edge,
	    destinationAxis: droppable.axis
	  });
	  var isVisibleInNewLocation = isTotallyVisibleInNewLocation({
	    draggable: draggable,
	    destination: droppable,
	    newPageBorderBoxCenter: newPageBorderBoxCenter,
	    viewport: viewport.frame
	  });
	  var displaced = isMovingTowardStart ? withFirstRemoved({
	    dragging: draggableId,
	    isVisibleInNewLocation: isVisibleInNewLocation,
	    previousImpact: previousImpact,
	    droppable: droppable,
	    draggables: draggables
	  }) : withFirstAdded({
	    add: destination.descriptor.id,
	    previousImpact: previousImpact,
	    droppable: droppable,
	    draggables: draggables,
	    viewport: viewport
	  });
	  var newImpact = {
	    movement: {
	      displaced: displaced,
	      amount: patch(axis.line, draggable.page.marginBox[axis.size]),
	      isBeyondStartPosition: proposedIndex > startIndex
	    },
	    destination: {
	      droppableId: droppable.descriptor.id,
	      index: proposedIndex
	    },
	    direction: droppable.axis.direction
	  };

	  if (isVisibleInNewLocation) {
	    return {
	      pageBorderBoxCenter: withDroppableDisplacement(droppable, newPageBorderBoxCenter),
	      impact: newImpact,
	      scrollJumpRequest: null
	    };
	  }

	  var distance$$1 = subtract(newPageBorderBoxCenter, previousPageBorderBoxCenter);
	  var distanceWithScroll = withDroppableDisplacement(droppable, distance$$1);
	  return {
	    pageBorderBoxCenter: previousPageBorderBoxCenter,
	    impact: newImpact,
	    scrollJumpRequest: distanceWithScroll
	  };
	});

	var inForeignList$1 = (function (_ref) {
	  var isMovingForward = _ref.isMovingForward,
	      draggableId = _ref.draggableId,
	      previousImpact = _ref.previousImpact,
	      previousPageBorderBoxCenter = _ref.previousPageBorderBoxCenter,
	      droppable = _ref.droppable,
	      draggables = _ref.draggables,
	      viewport = _ref.viewport;
	  !previousImpact.destination ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot move to next index where there is no previous destination') : invariant(false) : void 0;
	  var location = previousImpact.destination;
	  var draggable = draggables[draggableId];
	  var axis = droppable.axis;
	  var insideForeignDroppable = getDraggablesInsideDroppable(droppable, draggables);
	  var currentIndex = location.index;
	  var proposedIndex = isMovingForward ? currentIndex + 1 : currentIndex - 1;
	  var lastIndex = insideForeignDroppable.length - 1;

	  if (proposedIndex > insideForeignDroppable.length) {
	    return null;
	  }

	  if (proposedIndex < 0) {
	    return null;
	  }

	  var movingRelativeTo = insideForeignDroppable[Math.min(proposedIndex, lastIndex)];
	  var isMovingPastLastIndex = proposedIndex > lastIndex;
	  var sourceEdge = 'start';

	  var destinationEdge = function () {
	    if (isMovingPastLastIndex) {
	      return 'end';
	    }

	    return 'start';
	  }();

	  var newPageBorderBoxCenter = moveToEdge({
	    source: draggable.page.borderBox,
	    sourceEdge: sourceEdge,
	    destination: movingRelativeTo.page.marginBox,
	    destinationEdge: destinationEdge,
	    destinationAxis: droppable.axis
	  });
	  var isVisibleInNewLocation = isTotallyVisibleInNewLocation({
	    draggable: draggable,
	    destination: droppable,
	    newPageBorderBoxCenter: newPageBorderBoxCenter,
	    viewport: viewport.frame
	  });

	  var displaced = function () {
	    if (isMovingForward) {
	      return withFirstRemoved({
	        dragging: draggableId,
	        isVisibleInNewLocation: isVisibleInNewLocation,
	        previousImpact: previousImpact,
	        droppable: droppable,
	        draggables: draggables
	      });
	    }

	    return withFirstAdded({
	      add: movingRelativeTo.descriptor.id,
	      previousImpact: previousImpact,
	      droppable: droppable,
	      draggables: draggables,
	      viewport: viewport
	    });
	  }();

	  var newImpact = {
	    movement: {
	      displaced: displaced,
	      amount: patch(axis.line, draggable.page.marginBox[axis.size]),
	      isBeyondStartPosition: false
	    },
	    destination: {
	      droppableId: droppable.descriptor.id,
	      index: proposedIndex
	    },
	    direction: droppable.axis.direction
	  };

	  if (isVisibleInNewLocation) {
	    return {
	      pageBorderBoxCenter: withDroppableDisplacement(droppable, newPageBorderBoxCenter),
	      impact: newImpact,
	      scrollJumpRequest: null
	    };
	  }

	  var distanceMoving = subtract(newPageBorderBoxCenter, previousPageBorderBoxCenter);
	  var distanceWithScroll = withDroppableDisplacement(droppable, distanceMoving);
	  return {
	    pageBorderBoxCenter: previousPageBorderBoxCenter,
	    impact: newImpact,
	    scrollJumpRequest: distanceWithScroll
	  };
	});

	var moveToNextIndex = (function (args) {
	  var draggableId = args.draggableId,
	      draggables = args.draggables,
	      droppable = args.droppable;
	  var draggable = draggables[draggableId];
	  var isInHomeList = draggable.descriptor.droppableId === droppable.descriptor.id;

	  if (!droppable.isEnabled) {
	    return null;
	  }

	  if (isInHomeList) {
	    return inHomeList$1(args);
	  }

	  return inForeignList$1(args);
	});

	var getClientSelection = function getClientSelection(pageBorderBoxCenter, currentScroll) {
	  return subtract(pageBorderBoxCenter, currentScroll);
	};

	var moveInDirection = (function (_ref) {
	  var state = _ref.state,
	      type = _ref.type;

	  var _ref2 = function () {
	    if (state.impact.destination) {
	      return {
	        droppable: state.dimensions.droppables[state.impact.destination.droppableId],
	        isMainAxisMovementAllowed: true
	      };
	    }

	    return {
	      droppable: state.dimensions.droppables[state.critical.droppable.id],
	      isMainAxisMovementAllowed: false
	    };
	  }(),
	      droppable = _ref2.droppable,
	      isMainAxisMovementAllowed = _ref2.isMainAxisMovementAllowed;

	  var direction = droppable.axis.direction;
	  var isMovingOnMainAxis = direction === 'vertical' && (type === 'MOVE_UP' || type === 'MOVE_DOWN') || direction === 'horizontal' && (type === 'MOVE_LEFT' || type === 'MOVE_RIGHT');

	  if (isMovingOnMainAxis && !isMainAxisMovementAllowed) {
	    return null;
	  }

	  var isMovingForward = type === 'MOVE_DOWN' || type === 'MOVE_RIGHT';

	  if (isMovingOnMainAxis) {
	    var _result = moveToNextIndex({
	      isMovingForward: isMovingForward,
	      draggableId: state.critical.draggable.id,
	      droppable: droppable,
	      draggables: state.dimensions.draggables,
	      previousPageBorderBoxCenter: state.current.page.borderBoxCenter,
	      previousImpact: state.impact,
	      viewport: state.viewport
	    });

	    if (!_result) {
	      return null;
	    }

	    return {
	      impact: _result.impact,
	      clientSelection: getClientSelection(_result.pageBorderBoxCenter, state.viewport.scroll.current),
	      scrollJumpRequest: _result.scrollJumpRequest
	    };
	  }

	  var home = getHomeLocation(state.critical);
	  var result = moveCrossAxis({
	    isMovingForward: isMovingForward,
	    pageBorderBoxCenter: state.current.page.borderBoxCenter,
	    draggableId: state.critical.draggable.id,
	    droppableId: droppable.descriptor.id,
	    home: home,
	    draggables: state.dimensions.draggables,
	    droppables: state.dimensions.droppables,
	    previousImpact: state.impact,
	    viewport: state.viewport
	  });

	  if (!result) {
	    return null;
	  }

	  return {
	    clientSelection: getClientSelection(result.pageBorderBoxCenter, state.viewport.scroll.current),
	    impact: result.impact,
	    scrollJumpRequest: null
	  };
	});

	var scrollViewport = (function (viewport, newScroll) {
	  var diff = subtract(newScroll, viewport.scroll.initial);
	  var displacement = negate(diff);
	  var frame = cssBoxModel.getRect({
	    top: newScroll.y,
	    bottom: newScroll.y + viewport.frame.height,
	    left: newScroll.x,
	    right: newScroll.x + viewport.frame.width
	  });
	  var updated = {
	    frame: frame,
	    scroll: {
	      initial: viewport.scroll.initial,
	      max: viewport.scroll.max,
	      current: newScroll,
	      diff: {
	        value: diff,
	        displacement: displacement
	      }
	    }
	  };
	  return updated;
	});

	var getHomeImpact = (function (critical, dimensions) {
	  var home = dimensions.droppables[critical.droppable.id];
	  var axis = home.axis;
	  var draggable = dimensions.draggables[critical.draggable.id];
	  return {
	    movement: {
	      displaced: [],
	      isBeyondStartPosition: false,
	      amount: patch(axis.line, draggable.client.marginBox[axis.size])
	    },
	    direction: axis.direction,
	    destination: getHomeLocation(critical)
	  };
	});

	var getPageItemPositions = (function (client, windowScroll) {
	  return {
	    selection: add(client.selection, windowScroll),
	    borderBoxCenter: add(client.borderBoxCenter, windowScroll),
	    offset: add(client.offset, windowScroll)
	  };
	});

	function isMovementAllowed(state) {
	  return state.phase === 'DRAGGING' || state.phase === 'COLLECTING';
	}

	var idle = {
	  phase: 'IDLE'
	};
	var preparing = {
	  phase: 'PREPARING'
	};

	var moveWithPositionUpdates = function moveWithPositionUpdates(_ref) {
	  var state = _ref.state,
	      clientSelection = _ref.clientSelection,
	      shouldAnimate = _ref.shouldAnimate,
	      viewport = _ref.viewport,
	      impact = _ref.impact,
	      scrollJumpRequest = _ref.scrollJumpRequest;
	  var newViewport = viewport || state.viewport;
	  var currentWindowScroll = newViewport.scroll.current;

	  var client = function () {
	    var offset = subtract(clientSelection, state.initial.client.selection);
	    return {
	      offset: offset,
	      selection: clientSelection,
	      borderBoxCenter: add(state.initial.client.borderBoxCenter, offset)
	    };
	  }();

	  var page = getPageItemPositions(client, currentWindowScroll);
	  var current = {
	    client: client,
	    page: page
	  };

	  if (state.phase === 'COLLECTING') {
	    return _extends({
	      phase: 'COLLECTING'
	    }, state, {
	      current: current
	    });
	  }

	  var newImpact = impact || getDragImpact({
	    pageBorderBoxCenter: page.borderBoxCenter,
	    draggable: state.dimensions.draggables[state.critical.draggable.id],
	    draggables: state.dimensions.draggables,
	    droppables: state.dimensions.droppables,
	    previousImpact: state.impact,
	    viewport: newViewport
	  });

	  var result = _extends({}, state, {
	    current: current,
	    shouldAnimate: shouldAnimate,
	    impact: newImpact,
	    scrollJumpRequest: scrollJumpRequest || null,
	    viewport: newViewport
	  });

	  return result;
	};

	var reducer = (function (state, action) {
	  if (state === void 0) {
	    state = idle;
	  }

	  if (action.type === 'CLEAN') {
	    return idle;
	  }

	  if (action.type === 'PREPARE') {
	    return preparing;
	  }

	  if (action.type === 'INITIAL_PUBLISH') {
	    !(state.phase === 'PREPARING') ? process.env.NODE_ENV !== "production" ? invariant(false, 'INITIAL_PUBLISH must come after a PREPARING phase') : invariant(false) : void 0;
	    var _action$payload = action.payload,
	        critical = _action$payload.critical,
	        client = _action$payload.client,
	        viewport = _action$payload.viewport,
	        dimensions = _action$payload.dimensions,
	        autoScrollMode = _action$payload.autoScrollMode;
	    var initial = {
	      client: client,
	      page: {
	        selection: add(client.selection, viewport.scroll.initial),
	        borderBoxCenter: add(client.selection, viewport.scroll.initial),
	        offset: origin
	      }
	    };
	    var result = {
	      phase: 'DRAGGING',
	      isDragging: true,
	      critical: critical,
	      autoScrollMode: autoScrollMode,
	      dimensions: dimensions,
	      initial: initial,
	      current: initial,
	      impact: getHomeImpact(critical, dimensions),
	      viewport: viewport,
	      scrollJumpRequest: null,
	      shouldAnimate: false
	    };
	    return result;
	  }

	  if (action.type === 'COLLECTION_STARTING') {
	    var _extends2;

	    if (state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') {
	      return state;
	    }

	    !(state.phase === 'DRAGGING') ? process.env.NODE_ENV !== "production" ? invariant(false, "Collection cannot start from phase " + state.phase) : invariant(false) : void 0;

	    var _result = _extends({
	      phase: 'COLLECTING'
	    }, state, (_extends2 = {}, _extends2["phase"] = 'COLLECTING', _extends2));

	    return _result;
	  }

	  if (action.type === 'PUBLISH') {
	    !(state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') ? process.env.NODE_ENV !== "production" ? invariant(false, "Unexpected " + action.type + " received in phase " + state.phase) : invariant(false) : void 0;
	    process.env.NODE_ENV !== "production" ? invariant(false, "Dynamic additions and removals of Draggable and Droppable components\n      is currently not supported. But will be soon!") : invariant(false);
	  }

	  if (action.type === 'MOVE') {
	    if (state.phase === 'PREPARING') {
	      return state;
	    }

	    if (state.phase === 'DROP_PENDING') {
	      return state;
	    }

	    !isMovementAllowed(state) ? process.env.NODE_ENV !== "production" ? invariant(false, action.type + " not permitted in phase " + state.phase) : invariant(false) : void 0;
	    var _action$payload2 = action.payload,
	        _client = _action$payload2.client,
	        shouldAnimate = _action$payload2.shouldAnimate;

	    if (state.shouldAnimate === shouldAnimate && isEqual(_client, state.current.client.selection)) {
	      return state;
	    }

	    var impact = state.autoScrollMode === 'JUMP' ? state.impact : null;
	    return moveWithPositionUpdates({
	      state: state,
	      clientSelection: _client,
	      impact: impact,
	      shouldAnimate: shouldAnimate
	    });
	  }

	  if (action.type === 'UPDATE_DROPPABLE_SCROLL') {
	    var _extends3, _extends4;

	    if (state.phase === 'PREPARING') {
	      return state;
	    }

	    if (state.phase === 'DROP_PENDING') {
	      return state;
	    }

	    !isMovementAllowed(state) ? process.env.NODE_ENV !== "production" ? invariant(false, action.type + " not permitted in phase " + state.phase) : invariant(false) : void 0;
	    var _action$payload3 = action.payload,
	        id = _action$payload3.id,
	        offset = _action$payload3.offset;
	    var target = state.dimensions.droppables[id];

	    if (!target) {
	      return state;
	    }

	    var updated = scrollDroppable(target, offset);

	    var _dimensions = _extends({}, state.dimensions, {
	      droppables: _extends({}, state.dimensions.droppables, (_extends3 = {}, _extends3[id] = updated, _extends3))
	    });

	    var _impact = function () {
	      !isMovementAllowed(state) ? process.env.NODE_ENV !== "production" ? invariant(false) : invariant(false) : void 0;

	      if (state.autoScrollMode === 'JUMP') {
	        return state.impact;
	      }

	      return getDragImpact({
	        pageBorderBoxCenter: state.current.page.borderBoxCenter,
	        draggable: _dimensions.draggables[state.critical.draggable.id],
	        draggables: _dimensions.draggables,
	        droppables: _dimensions.droppables,
	        previousImpact: state.impact,
	        viewport: state.viewport
	      });
	    }();

	    return _extends({
	      phase: 'DRAGGING'
	    }, state, (_extends4 = {}, _extends4["phase"] = state.phase, _extends4.impact = _impact, _extends4.dimensions = _dimensions, _extends4.scrollJumpRequest = null, _extends4));
	  }

	  if (action.type === 'UPDATE_DROPPABLE_IS_ENABLED') {
	    var _extends5, _extends6;

	    if (state.phase === 'DROP_PENDING') {
	      return state;
	    }

	    !isMovementAllowed(state) ? process.env.NODE_ENV !== "production" ? invariant(false, "Attempting to move in an unsupported phase " + state.phase) : invariant(false) : void 0;
	    var _action$payload4 = action.payload,
	        _id = _action$payload4.id,
	        isEnabled = _action$payload4.isEnabled;
	    var _target = state.dimensions.droppables[_id];
	    !_target ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot find Droppable[id: " + _id + "] to toggle its enabled state") : invariant(false) : void 0;
	    !(_target.isEnabled !== isEnabled) ? process.env.NODE_ENV !== "production" ? invariant(false, "Trying to set droppable isEnabled to " + String(isEnabled) + "\n      but it is already " + String(_target.isEnabled)) : invariant(false) : void 0;

	    var _updated = _extends({}, _target, {
	      isEnabled: isEnabled
	    });

	    var _dimensions2 = _extends({}, state.dimensions, {
	      droppables: _extends({}, state.dimensions.droppables, (_extends5 = {}, _extends5[_id] = _updated, _extends5))
	    });

	    var _impact2 = getDragImpact({
	      pageBorderBoxCenter: state.current.page.borderBoxCenter,
	      draggable: _dimensions2.draggables[state.critical.draggable.id],
	      draggables: _dimensions2.draggables,
	      droppables: _dimensions2.droppables,
	      previousImpact: state.impact,
	      viewport: state.viewport
	    });

	    return _extends({
	      phase: 'DRAGGING'
	    }, state, (_extends6 = {}, _extends6["phase"] = state.phase, _extends6.impact = _impact2, _extends6.dimensions = _dimensions2, _extends6));
	  }

	  if (action.type === 'MOVE_BY_WINDOW_SCROLL') {
	    if (state.phase === 'PREPARING') {
	      return state;
	    }

	    if (state.phase === 'DROP_PENDING' || state.phase === 'DROP_ANIMATING') {
	      return state;
	    }

	    !isMovementAllowed(state) ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot move by window in phase " + state.phase) : invariant(false) : void 0;
	    var newScroll = action.payload.scroll;

	    if (isEqual(state.viewport.scroll.current, newScroll)) {
	      return state;
	    }

	    var isJumpScrolling = state.autoScrollMode === 'JUMP';

	    var _impact3 = isJumpScrolling ? state.impact : null;

	    var _viewport = scrollViewport(state.viewport, newScroll);

	    return moveWithPositionUpdates({
	      state: state,
	      clientSelection: state.current.client.selection,
	      viewport: _viewport,
	      shouldAnimate: false,
	      impact: _impact3
	    });
	  }

	  if (action.type === 'UPDATE_VIEWPORT_MAX_SCROLL') {
	    var _extends7;

	    !state.isDragging ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot update the max viewport scroll if not dragging') : invariant(false) : void 0;
	    var existing = state.viewport;

	    var _viewport2 = _extends({}, existing, {
	      scroll: _extends({}, existing.scroll, {
	        max: action.payload
	      })
	    });

	    return _extends({
	      phase: 'DRAGGING'
	    }, state, (_extends7 = {}, _extends7["phase"] = state.phase, _extends7.viewport = _viewport2, _extends7));
	  }

	  if (action.type === 'MOVE_UP' || action.type === 'MOVE_DOWN' || action.type === 'MOVE_LEFT' || action.type === 'MOVE_RIGHT') {
	    if (state.phase === 'PREPARING') {
	      return state;
	    }

	    if (state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') {
	      return state;
	    }

	    !(state.phase === 'DRAGGING') ? process.env.NODE_ENV !== "production" ? invariant(false, action.type + " received while not in DRAGGING phase") : invariant(false) : void 0;

	    var _result2 = moveInDirection({
	      state: state,
	      type: action.type
	    });

	    if (!_result2) {
	      return state;
	    }

	    return moveWithPositionUpdates({
	      state: state,
	      impact: _result2.impact,
	      clientSelection: _result2.clientSelection,
	      shouldAnimate: true,
	      scrollJumpRequest: _result2.scrollJumpRequest
	    });
	  }

	  if (action.type === 'DROP_PENDING') {
	    var _extends8;

	    var reason = action.payload.reason;
	    !(state.phase === 'COLLECTING') ? process.env.NODE_ENV !== "production" ? invariant(false, 'Can only move into the DROP_PENDING phase from the COLLECTING phase') : invariant(false) : void 0;

	    var newState = _extends({
	      phase: 'DROP_PENDING'
	    }, state, (_extends8 = {}, _extends8["phase"] = 'DROP_PENDING', _extends8.isWaiting = true, _extends8.reason = reason, _extends8));

	    return newState;
	  }

	  if (action.type === 'DROP_ANIMATE') {
	    var pending = action.payload;
	    !(state.phase === 'DRAGGING' || state.phase === 'DROP_PENDING') ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot animate drop from phase " + state.phase) : invariant(false) : void 0;
	    var _result3 = {
	      phase: 'DROP_ANIMATING',
	      pending: pending,
	      dimensions: state.dimensions
	    };
	    return _result3;
	  }

	  if (action.type === 'DROP_COMPLETE') {
	    return idle;
	  }

	  return state;
	});

	var lift = function lift(args) {
	  return {
	    type: 'LIFT',
	    payload: args
	  };
	};
	var initialPublish = function initialPublish(args) {
	  return {
	    type: 'INITIAL_PUBLISH',
	    payload: args
	  };
	};
	var publish = function publish(args) {
	  return {
	    type: 'PUBLISH',
	    payload: args
	  };
	};
	var collectionStarting = function collectionStarting() {
	  return {
	    type: 'COLLECTION_STARTING',
	    payload: null
	  };
	};
	var updateDroppableScroll = function updateDroppableScroll(args) {
	  return {
	    type: 'UPDATE_DROPPABLE_SCROLL',
	    payload: args
	  };
	};
	var updateDroppableIsEnabled = function updateDroppableIsEnabled(args) {
	  return {
	    type: 'UPDATE_DROPPABLE_IS_ENABLED',
	    payload: args
	  };
	};
	var move = function move(args) {
	  return {
	    type: 'MOVE',
	    payload: args
	  };
	};
	var moveByWindowScroll = function moveByWindowScroll(args) {
	  return {
	    type: 'MOVE_BY_WINDOW_SCROLL',
	    payload: args
	  };
	};
	var updateViewportMaxScroll = function updateViewportMaxScroll(max) {
	  return {
	    type: 'UPDATE_VIEWPORT_MAX_SCROLL',
	    payload: max
	  };
	};
	var moveUp = function moveUp() {
	  return {
	    type: 'MOVE_UP',
	    payload: null
	  };
	};
	var moveDown = function moveDown() {
	  return {
	    type: 'MOVE_DOWN',
	    payload: null
	  };
	};
	var moveRight = function moveRight() {
	  return {
	    type: 'MOVE_RIGHT',
	    payload: null
	  };
	};
	var moveLeft = function moveLeft() {
	  return {
	    type: 'MOVE_LEFT',
	    payload: null
	  };
	};
	var clean = function clean() {
	  return {
	    type: 'CLEAN',
	    payload: null
	  };
	};
	var prepare = function prepare() {
	  return {
	    type: 'PREPARE',
	    payload: null
	  };
	};
	var animateDrop = function animateDrop(pending) {
	  return {
	    type: 'DROP_ANIMATE',
	    payload: pending
	  };
	};
	var completeDrop = function completeDrop(result) {
	  return {
	    type: 'DROP_COMPLETE',
	    payload: result
	  };
	};
	var drop = function drop(args) {
	  return {
	    type: 'DROP',
	    payload: args
	  };
	};
	var dropPending = function dropPending(args) {
	  return {
	    type: 'DROP_PENDING',
	    payload: args
	  };
	};
	var dropAnimationFinished = function dropAnimationFinished() {
	  return {
	    type: 'DROP_ANIMATION_FINISHED',
	    payload: null
	  };
	};

	var lift$1 = (function (getMarshal) {
	  var timeoutId = null;

	  var tryAbortCriticalCollection = function tryAbortCriticalCollection() {
	    if (timeoutId == null) {
	      return;
	    }

	    clearTimeout(timeoutId);
	    timeoutId = null;
	  };

	  return function (_ref) {
	    var getState = _ref.getState,
	        dispatch = _ref.dispatch;
	    return function (next) {
	      return function (action) {
	        if (action.type === 'CLEAN') {
	          tryAbortCriticalCollection();
	          next(action);
	          return;
	        }

	        if (action.type !== 'LIFT') {
	          next(action);
	          return;
	        }

	        !!timeoutId ? process.env.NODE_ENV !== "production" ? invariant(false, 'There should not be a pending complete lift phase when a lift action is fired') : invariant(false) : void 0;
	        var marshal = getMarshal();
	        var _action$payload = action.payload,
	            id = _action$payload.id,
	            client = _action$payload.client,
	            autoScrollMode = _action$payload.autoScrollMode,
	            viewport = _action$payload.viewport;
	        var initial = getState();

	        if (initial.phase === 'DROP_ANIMATING') {
	          dispatch(completeDrop(initial.pending.result));
	        }

	        var postFlushState = getState();
	        !(postFlushState.phase === 'IDLE') ? process.env.NODE_ENV !== "production" ? invariant(false, 'Incorrect phase to start a drag') : invariant(false) : void 0;
	        dispatch(prepare());
	        timeoutId = setTimeout(function () {
	          timeoutId = null;
	          var state = getState();
	          !(state.phase === 'PREPARING') ? process.env.NODE_ENV !== "production" ? invariant(false, 'Invalid phase for completing lift') : invariant(false) : void 0;
	          var scrollOptions = {
	            shouldPublishImmediately: autoScrollMode === 'JUMP'
	          };
	          var request = {
	            draggableId: id,
	            scrollOptions: scrollOptions
	          };

	          var _marshal$startPublish = marshal.startPublishing(request, viewport.scroll.current),
	              critical = _marshal$startPublish.critical,
	              dimensions = _marshal$startPublish.dimensions;

	          dispatch(initialPublish({
	            critical: critical,
	            dimensions: dimensions,
	            client: client,
	            autoScrollMode: autoScrollMode,
	            viewport: viewport
	          }));
	        });
	      };
	    };
	  };
	});

	var style = (function (marshal) {
	  return function () {
	    return function (next) {
	      return function (action) {
	        if (action.type === 'INITIAL_PUBLISH') {
	          marshal.dragging();
	        }

	        if (action.type === 'COLLECTION_STARTING') {
	          marshal.collecting();
	        }

	        if (action.type === 'PUBLISH') {
	          marshal.dragging();
	        }

	        if (action.type === 'DROP_ANIMATE') {
	          marshal.dropping(action.payload.result.reason);
	        }

	        if (action.type === 'CLEAN' || action.type === 'DROP_COMPLETE') {
	          marshal.resting();
	        }

	        next(action);
	      };
	    };
	  };
	});

	var getNewHomeClientBorderBoxCenter = (function (_ref) {
	  var movement = _ref.movement,
	      draggable = _ref.draggable,
	      draggables = _ref.draggables,
	      destination = _ref.destination;
	  var originalCenter = draggable.client.borderBox.center;

	  if (destination == null) {
	    return originalCenter;
	  }

	  var displaced = movement.displaced,
	      isBeyondStartPosition = movement.isBeyondStartPosition;
	  var axis = destination.axis;
	  var isWithinHomeDroppable = destination.descriptor.id === draggable.descriptor.droppableId;

	  if (isWithinHomeDroppable && !displaced.length) {
	    return originalCenter;
	  }

	  var draggablesInDestination = getDraggablesInsideDroppable(destination, draggables);

	  var movingRelativeTo = function () {
	    if (isWithinHomeDroppable) {
	      return draggables[displaced[0].draggableId].client.borderBox;
	    }

	    if (displaced.length) {
	      return draggables[displaced[0].draggableId].client.borderBox;
	    }

	    if (draggablesInDestination.length) {
	      return draggablesInDestination[draggablesInDestination.length - 1].client.marginBox;
	    }

	    return destination.client.contentBox;
	  }();

	  var _ref2 = function () {
	    if (isWithinHomeDroppable) {
	      if (isBeyondStartPosition) {
	        return {
	          sourceEdge: 'end',
	          destinationEdge: 'end'
	        };
	      }

	      return {
	        sourceEdge: 'start',
	        destinationEdge: 'start'
	      };
	    }

	    if (!displaced.length && draggablesInDestination.length) {
	      return {
	        sourceEdge: 'start',
	        destinationEdge: 'end'
	      };
	    }

	    return {
	      sourceEdge: 'start',
	      destinationEdge: 'start'
	    };
	  }(),
	      sourceEdge = _ref2.sourceEdge,
	      destinationEdge = _ref2.destinationEdge;

	  var source = draggable.client.borderBox;
	  var targetCenter = moveToEdge({
	    source: source,
	    sourceEdge: sourceEdge,
	    destination: movingRelativeTo,
	    destinationEdge: destinationEdge,
	    destinationAxis: axis
	  });
	  return targetCenter;
	});

	var getScrollDisplacement = function getScrollDisplacement(droppable, viewport) {
	  return withDroppableDisplacement(droppable, viewport.scroll.diff.displacement);
	};

	var drop$1 = (function (_ref) {
	  var getState = _ref.getState,
	      dispatch = _ref.dispatch;
	  return function (next) {
	    return function (action) {
	      if (action.type !== 'DROP') {
	        next(action);
	        return;
	      }

	      var state = getState();
	      var reason = action.payload.reason;

	      if (state.phase === 'COLLECTING') {
	        dispatch(dropPending({
	          reason: reason
	        }));
	        return;
	      }

	      if (state.phase === 'PREPARING') {
	        dispatch(clean());
	        return;
	      }

	      if (state.phase === 'IDLE') {
	        return;
	      }

	      var isWaitingForDrop = state.phase === 'DROP_PENDING' && state.isWaiting;
	      !!isWaitingForDrop ? process.env.NODE_ENV !== "production" ? invariant(false, 'A DROP action occurred while DROP_PENDING and still waiting') : invariant(false) : void 0;
	      !(state.phase === 'DRAGGING' || state.phase === 'DROP_PENDING') ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot drop in phase: " + state.phase) : invariant(false) : void 0;
	      var critical = state.critical;
	      var dimensions = state.dimensions;
	      var impact = reason === 'DROP' ? state.impact : noImpact;
	      var home = dimensions.droppables[state.critical.droppable.id];
	      var draggable = dimensions.draggables[state.critical.draggable.id];
	      var droppable = impact && impact.destination ? dimensions.droppables[impact.destination.droppableId] : null;
	      var source = {
	        index: critical.draggable.index,
	        droppableId: critical.droppable.id
	      };
	      var destination = reason === 'DROP' ? impact.destination : null;
	      var result = {
	        draggableId: draggable.descriptor.id,
	        type: home.descriptor.type,
	        source: source,
	        destination: destination,
	        reason: reason
	      };

	      var clientOffset = function () {
	        if (reason === 'CANCEL') {
	          return origin;
	        }

	        var newBorderBoxClientCenter = getNewHomeClientBorderBoxCenter({
	          movement: impact.movement,
	          draggable: draggable,
	          draggables: dimensions.draggables,
	          destination: droppable
	        });
	        return subtract(newBorderBoxClientCenter, draggable.client.borderBox.center);
	      }();

	      var newHomeOffset = add(clientOffset, getScrollDisplacement(droppable || home, state.viewport));
	      var isAnimationRequired = !isEqual(state.current.client.offset, newHomeOffset);
	      var pending = {
	        newHomeOffset: newHomeOffset,
	        result: result,
	        impact: impact
	      };

	      if (isAnimationRequired) {
	        dispatch(animateDrop(pending));
	        return;
	      }

	      dispatch(completeDrop(result));
	    };
	  };
	});

	var onDragStart = function onDragStart(start) {
	  return "\n  You have lifted an item in position " + (start.source.index + 1) + ".\n  Use the arrow keys to move, space bar to drop, and escape to cancel.\n";
	};

	var onDragUpdate = function onDragUpdate(update) {
	  if (!update.destination) {
	    return 'You are currently not dragging over a droppable area';
	  }

	  if (update.source.droppableId === update.destination.droppableId) {
	    return "You have moved the item to position " + (update.destination.index + 1);
	  }

	  return "\n    You have moved the item from list " + update.source.droppableId + " in position " + (update.source.index + 1) + "\n    to list " + update.destination.droppableId + " in position " + (update.destination.index + 1) + "\n  ";
	};

	var onDragEnd = function onDragEnd(result) {
	  if (result.reason === 'CANCEL') {
	    return "\n      Movement cancelled.\n      The item has returned to its starting position of " + (result.source.index + 1) + "\n    ";
	  }

	  if (!result.destination) {
	    return "\n      The item has been dropped while not over a droppable location.\n      The item has returned to its starting position of " + (result.source.index + 1) + "\n    ";
	  }

	  if (result.source.droppableId === result.destination.droppableId) {
	    if (result.source.index === result.destination.index) {
	      return "\n        You have dropped the item.\n        It has been dropped on its starting position of " + (result.source.index + 1) + "\n      ";
	    }

	    return "\n      You have dropped the item.\n      It has moved from position " + (result.source.index + 1) + " to " + (result.destination.index + 1) + "\n    ";
	  }

	  return "\n    You have dropped the item.\n    It has moved from position " + (result.source.index + 1) + " in list " + result.source.droppableId + "\n    to position " + (result.destination.index + 1) + " in list " + result.destination.droppableId + "\n  ";
	};

	var preset = {
	  onDragStart: onDragStart,
	  onDragUpdate: onDragUpdate,
	  onDragEnd: onDragEnd
	};

	var records = {};
	var flag = '__react-beautiful-dnd-debug-timings-hook__';

	var isTimingsEnabled = function isTimingsEnabled() {
	  return Boolean(window[flag]);
	};

	var start = function start(key) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (!isTimingsEnabled()) {
	      return;
	    }

	    var now = performance.now();
	    records[key] = now;
	  }
	};
	var finish = function finish(key) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (!isTimingsEnabled()) {
	      return;
	    }

	    var now = performance.now();
	    var previous = records[key];
	    !previous ? process.env.NODE_ENV !== "production" ? invariant(false, 'cannot finish timing as no previous time found') : invariant(false) : void 0;
	    var result = now - previous;
	    var rounded = result.toFixed(2);

	    var style = function () {
	      if (result < 12) {
	        return {
	          textColor: 'green',
	          symbol: '✅'
	        };
	      }

	      if (result < 40) {
	        return {
	          textColor: 'orange',
	          symbol: '⚠️'
	        };
	      }

	      return {
	        textColor: 'red',
	        symbol: '❌'
	      };
	    }();

	    console.log(style.symbol + " %cTiming %c" + rounded + " %cms %c" + key, 'color: blue; font-weight: bold; ', "color: " + style.textColor + "; font-size: 1.1em;", 'color: grey;', 'color: purple; font-weight: bold;');
	  }
	};

	var withTimings = function withTimings(key, fn) {
	  start(key);
	  fn();
	  finish(key);
	};

	var areLocationsEqual = function areLocationsEqual(first, second) {
	  if (first == null && second == null) {
	    return true;
	  }

	  if (first == null || second == null) {
	    return false;
	  }

	  return first.droppableId === second.droppableId && first.index === second.index;
	};

	var isCriticalEqual = function isCriticalEqual(first, second) {
	  if (first === second) {
	    return true;
	  }

	  var isDraggableEqual = first.draggable.id === second.draggable.id && first.draggable.droppableId === second.draggable.droppableId && first.draggable.type === second.draggable.type && first.draggable.index === second.draggable.index;
	  var isDroppableEqual = first.droppable.id === second.droppable.id && first.droppable.type === second.droppable.type;
	  return isDraggableEqual && isDroppableEqual;
	};

	var getExpiringAnnounce = function getExpiringAnnounce(announce) {
	  var wasCalled = false;
	  var isExpired = false;
	  setTimeout(function () {
	    isExpired = true;
	  });

	  var result = function result(message) {
	    if (wasCalled) {
	      if (process.env.NODE_ENV !== 'production') {
	        console.warn('Announcement already made. Not making a second announcement');
	      }

	      return;
	    }

	    if (isExpired) {
	      if (process.env.NODE_ENV !== 'production') {
	        console.warn("\n          Announcements cannot be made asynchronously.\n          Default message has already been announced.\n        ");
	      }

	      return;
	    }

	    wasCalled = true;
	    announce(message);
	  };

	  result.wasCalled = function () {
	    return wasCalled;
	  };

	  return result;
	};

	var getDragStart = function getDragStart(critical) {
	  return {
	    draggableId: critical.draggable.id,
	    type: critical.droppable.type,
	    source: {
	      droppableId: critical.droppable.id,
	      index: critical.draggable.index
	    }
	  };
	};

	var hooks = (function (getHooks, announce) {
	  var execute = function execute(hook, data, getDefaultMessage) {
	    if (!hook) {
	      announce(getDefaultMessage(data));
	      return;
	    }

	    var willExpire = getExpiringAnnounce(announce);
	    var provided = {
	      announce: willExpire
	    };
	    hook(data, provided);

	    if (!willExpire.wasCalled()) {
	      announce(getDefaultMessage(data));
	    }
	  };

	  var publisher = function () {
	    var lastLocation = null;
	    var lastCritical = null;
	    var _isDragStartPublished = false;

	    var beforeStart = function beforeStart(critical) {
	      !!_isDragStartPublished ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot fire onBeforeDragStart as a drag start has already been published') : invariant(false) : void 0;
	      withTimings('onBeforeDragStart', function () {
	        var fn = getHooks().onBeforeDragStart;

	        if (fn) {
	          fn(getDragStart(critical));
	        }
	      });
	    };

	    var start$$1 = function start$$1(critical) {
	      !!_isDragStartPublished ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot fire onBeforeDragStart as a drag start has already been published') : invariant(false) : void 0;
	      var data = getDragStart(critical);
	      lastCritical = critical;
	      lastLocation = data.source;
	      _isDragStartPublished = true;
	      withTimings('onDragStart', function () {
	        return execute(getHooks().onDragStart, data, preset.onDragStart);
	      });
	    };

	    var move = function move(critical, location) {
	      !(_isDragStartPublished && lastCritical) ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot fire onDragMove when onDragStart has not been called') : invariant(false) : void 0;
	      var hasCriticalChanged = !isCriticalEqual(critical, lastCritical);

	      if (hasCriticalChanged) {
	        lastCritical = critical;
	      }

	      var hasLocationChanged = !areLocationsEqual(lastLocation, location);

	      if (hasLocationChanged) {
	        lastLocation = location;
	      }

	      if (!hasCriticalChanged && !hasLocationChanged) {
	        return;
	      }

	      var data = _extends({}, getDragStart(critical), {
	        destination: location
	      });

	      withTimings('onDragUpdate', function () {
	        return execute(getHooks().onDragUpdate, data, preset.onDragUpdate);
	      });
	    };

	    var drop = function drop(result) {
	      !_isDragStartPublished ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot fire onDragEnd when there is no matching onDragStart') : invariant(false) : void 0;
	      _isDragStartPublished = false;
	      lastLocation = null;
	      lastCritical = null;
	      withTimings('onDragEnd', function () {
	        return execute(getHooks().onDragEnd, result, preset.onDragEnd);
	      });
	    };

	    var abort = function abort() {
	      !(_isDragStartPublished && lastCritical) ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot cancel when onDragStart not fired') : invariant(false) : void 0;

	      var result = _extends({}, getDragStart(lastCritical), {
	        destination: null,
	        reason: 'CANCEL'
	      });

	      drop(result);
	    };

	    return {
	      beforeStart: beforeStart,
	      start: start$$1,
	      move: move,
	      drop: drop,
	      abort: abort,
	      isDragStartPublished: function isDragStartPublished() {
	        return _isDragStartPublished;
	      }
	    };
	  }();

	  return function (store) {
	    return function (next) {
	      return function (action) {
	        if (action.type === 'INITIAL_PUBLISH') {
	          var critical = action.payload.critical;
	          publisher.beforeStart(critical);
	          next(action);
	          publisher.start(critical);
	          return;
	        }

	        next(action);

	        if (action.type === 'DROP_COMPLETE') {
	          var result = action.payload;
	          publisher.drop(result);
	          return;
	        }

	        if (action.type === 'CLEAN') {
	          if (publisher.isDragStartPublished()) {
	            publisher.abort();
	          }

	          return;
	        }

	        if (!publisher.isDragStartPublished()) {
	          return;
	        }

	        var state = store.getState();

	        if (state.phase === 'DRAGGING') {
	          publisher.move(state.critical, state.impact.destination);
	        }
	      };
	    };
	  };
	});

	var dropAnimationFinish = (function (store) {
	  return function (next) {
	    return function (action) {
	      if (action.type !== 'DROP_ANIMATION_FINISHED') {
	        next(action);
	        return;
	      }

	      var state = store.getState();
	      !(state.phase === 'DROP_ANIMATING') ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot finish a drop animating when no drop is occurring') : invariant(false) : void 0;
	      store.dispatch(completeDrop(state.pending.result));
	    };
	  };
	});

	var dimensionMarshalStopper = (function (getMarshal) {
	  return function () {
	    return function (next) {
	      return function (action) {
	        if (action.type === 'DROP_COMPLETE' || action.type === 'CLEAN' || action.type === 'DROP_ANIMATE') {
	          var marshal = getMarshal();
	          marshal.stopPublishing();
	        }

	        next(action);
	      };
	    };
	  };
	});

	var shouldCancel = function shouldCancel(action) {
	  return action.type === 'CANCEL' || action.type === 'DROP_ANIMATE' || action.type === 'DROP' || action.type === 'DROP_COMPLETE' || action.type === 'COLLECTION_STARTING';
	};

	var autoScroll = (function (getScroller) {
	  return function (store) {
	    return function (next) {
	      return function (action) {
	        if (shouldCancel(action)) {
	          getScroller().cancel();
	          next(action);
	          return;
	        }

	        next(action);
	        var state = store.getState();

	        if (state.phase !== 'DRAGGING') {
	          return;
	        }

	        if (state.autoScrollMode === 'FLUID') {
	          getScroller().fluidScroll(state);
	          return;
	        }

	        if (!state.scrollJumpRequest) {
	          return;
	        }

	        getScroller().jumpScroll(state);
	      };
	    };
	  };
	});

	var shouldCheckOnAction = function shouldCheckOnAction(action) {
	  return action.type === 'MOVE' || action.type === 'MOVE_UP' || action.type === 'MOVE_RIGHT' || action.type === 'MOVE_DOWN' || action.type === 'MOVE_LEFT' || action.type === 'MOVE_BY_WINDOW_SCROLL';
	};

	var hasDroppableOverChanged = function hasDroppableOverChanged(previous, current) {
	  if (!previous) {
	    return Boolean(current);
	  }

	  if (!current) {
	    return Boolean(previous);
	  }

	  return previous.droppableId !== current.droppableId;
	};

	var getNewMaxScroll = function getNewMaxScroll(previous, current, action) {
	  if (!shouldCheckOnAction(action)) {
	    return null;
	  }

	  if (!isMovementAllowed(previous) || !isMovementAllowed(current)) {
	    return null;
	  }

	  if (!hasDroppableOverChanged(previous.impact.destination, current.impact.destination)) {
	    return null;
	  }

	  var viewport = current.viewport;
	  var doc = document.documentElement;
	  !doc ? process.env.NODE_ENV !== "production" ? invariant(false, 'Could not find document.documentElement') : invariant(false) : void 0;
	  var maxScroll = getMaxScroll({
	    scrollHeight: doc.scrollHeight,
	    scrollWidth: doc.scrollWidth,
	    width: viewport.frame.width,
	    height: viewport.frame.height
	  });

	  if (isEqual(maxScroll, viewport.scroll.max)) {
	    return null;
	  }

	  return maxScroll;
	};

	var maxScrollUpdater = (function (store) {
	  return function (next) {
	    return function (action) {
	      var previous = store.getState();
	      next(action);
	      var current = store.getState();
	      var maxScroll = getNewMaxScroll(previous, current, action);

	      if (maxScroll) {
	        next(updateViewportMaxScroll(maxScroll));
	      }
	    };
	  };
	});

	var composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : redux.compose;
	var createStore = (function (_ref) {
	  var getDimensionMarshal = _ref.getDimensionMarshal,
	      styleMarshal = _ref.styleMarshal,
	      getHooks = _ref.getHooks,
	      announce = _ref.announce,
	      getScroller = _ref.getScroller;
	  return redux.createStore(reducer, composeEnhancers(redux.applyMiddleware(style(styleMarshal), dimensionMarshalStopper(getDimensionMarshal), lift$1(getDimensionMarshal), drop$1, dropAnimationFinish, maxScrollUpdater, autoScroll(getScroller), hooks(getHooks, announce))));
	});

	var getEmptyMap = function getEmptyMap() {
	  return {
	    draggables: {},
	    droppables: {}
	  };
	};

	var timingKey = 'Publish collection from DOM';
	var createPublisher = (function (_ref) {
	  var getProvided = _ref.getProvided,
	      callbacks = _ref.callbacks;

	  var advancedUsageWarning = function () {
	    if (process.env.NODE_ENV === 'production') {
	      return function () {};
	    }

	    var hasAnnounced = false;
	    return function () {
	      if (hasAnnounced) {
	        return;
	      }

	      hasAnnounced = true;

	      if (process.env.NODE_ENV === 'production') {
	        return;
	      }

	      console.warn("\n        Advanced usage warning: you are adding or removing a dimension during a drag\n        This an advanced feature used to support dynamic interactions such as lazy loading lists.\n\n        Keep in mind the following restrictions:\n\n        - Draggable's can only be added to Droppable's that are scroll containers\n        - Adding a Droppable cannot impact the placement of other Droppables\n          (it cannot push a Droppable on the page)\n\n        (This warning will be stripped in production builds)\n      ".trim());
	    };
	  }();

	  var additions = getEmptyMap();
	  var removals = getEmptyMap();
	  var frameId = null;

	  var reset = function reset() {
	    additions = getEmptyMap();
	    removals = getEmptyMap();
	  };

	  var collect = function collect() {
	    advancedUsageWarning();

	    if (frameId) {
	      return;
	    }

	    frameId = requestAnimationFrame(function () {
	      frameId = null;
	      callbacks.collectionStarting();
	      start(timingKey);

	      var _getProvided = getProvided(),
	          entries = _getProvided.entries,
	          collection = _getProvided.collection;

	      var windowScroll = collection.initialWindowScroll;

	      var draggables = _Object$keys(additions.draggables).map(function (id) {
	        return entries.draggables[id].getDimension(windowScroll);
	      });

	      var droppables = _Object$keys(additions.droppables).map(function (id) {
	        return entries.droppables[id].callbacks.getDimensionAndWatchScroll(windowScroll, collection.scrollOptions);
	      });

	      var result = {
	        additions: {
	          draggables: draggables,
	          droppables: droppables
	        },
	        removals: {
	          draggables: _Object$keys(removals.draggables),
	          droppables: _Object$keys(removals.droppables)
	        }
	      };
	      reset();
	      finish(timingKey);
	      callbacks.publish(result);
	    });
	  };

	  var addDraggable = function addDraggable(id) {
	    additions.draggables[id] = true;

	    if (removals.draggables[id]) {
	      delete removals.draggables[id];
	    }

	    collect();
	  };

	  var removeDraggable = function removeDraggable(id) {
	    removals.draggables[id] = true;

	    if (additions.draggables[id]) {
	      delete additions.draggables[id];
	    }

	    collect();
	  };

	  var addDroppable = function addDroppable(id) {
	    additions.droppables[id] = true;

	    if (removals.droppables[id]) {
	      delete removals.droppables[id];
	    }

	    collect();
	  };

	  var removeDroppable = function removeDroppable(id) {
	    removals.droppables[id] = true;

	    if (additions.droppables[id]) {
	      delete additions.droppables[id];
	    }

	    collect();
	  };

	  var stop = function stop() {
	    if (!frameId) {
	      return;
	    }

	    cancelAnimationFrame(frameId);
	    frameId = null;
	    reset();
	  };

	  return {
	    addDraggable: addDraggable,
	    removeDraggable: removeDraggable,
	    addDroppable: addDroppable,
	    removeDroppable: removeDroppable,
	    stop: stop
	  };
	});

	var createDimensionMarshal = (function (callbacks) {
	  var entries = {
	    droppables: {},
	    draggables: {}
	  };
	  var collection = null;
	  var publisher = createPublisher({
	    callbacks: {
	      publish: callbacks.publish,
	      collectionStarting: callbacks.collectionStarting
	    },
	    getProvided: function getProvided() {
	      !collection ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot get scroll options when there is no collection') : invariant(false) : void 0;
	      return {
	        entries: entries,
	        collection: collection
	      };
	    }
	  });

	  var registerDraggable = function registerDraggable(descriptor, getDimension) {
	    var entry = {
	      descriptor: descriptor,
	      getDimension: getDimension
	    };
	    entries.draggables[descriptor.id] = entry;

	    if (!collection) {
	      return;
	    }

	    if (collection.critical.draggable.type !== descriptor.type) {
	      return;
	    }

	    publisher.addDraggable(descriptor.id);
	  };

	  var updateDraggable = function updateDraggable(previous, descriptor, getDimension) {
	    !entries.draggables[previous.id] ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot update draggable registration as no previous registration was found') : invariant(false) : void 0;
	    delete entries.draggables[previous.id];
	    var entry = {
	      descriptor: descriptor,
	      getDimension: getDimension
	    };
	    entries.draggables[descriptor.id] = entry;
	  };

	  var unregisterDraggable = function unregisterDraggable(descriptor) {
	    var entry = entries.draggables[descriptor.id];
	    !entry ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot unregister Draggable with id " + descriptor.id + " as it is not registered") : invariant(false) : void 0;

	    if (entry.descriptor !== descriptor) {
	      return;
	    }

	    delete entries.draggables[descriptor.id];

	    if (!collection) {
	      return;
	    }

	    !(collection.critical.draggable.id !== descriptor.id) ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot remove the dragging item during a drag') : invariant(false) : void 0;

	    if (descriptor.type !== collection.critical.draggable.type) {
	      return;
	    }

	    publisher.removeDraggable(descriptor.id);
	  };

	  var registerDroppable = function registerDroppable(descriptor, droppableCallbacks) {
	    var id = descriptor.id;
	    entries.droppables[id] = {
	      descriptor: descriptor,
	      callbacks: droppableCallbacks
	    };

	    if (!collection) {
	      return;
	    }

	    if (descriptor.type !== collection.critical.droppable.type) {
	      return;
	    }

	    publisher.addDroppable(id);
	  };

	  var updateDroppable = function updateDroppable(previous, descriptor, droppableCallbacks) {
	    !entries.droppables[previous.id] ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot update droppable registration as no previous registration was found') : invariant(false) : void 0;
	    delete entries.droppables[previous.id];
	    var entry = {
	      descriptor: descriptor,
	      callbacks: droppableCallbacks
	    };
	    entries.droppables[descriptor.id] = entry;

	    if (collection) {
	      process.env.NODE_ENV !== "production" ? invariant(false, 'You are not able to update the id or type of a droppable during a drag') : invariant(false);
	    }
	  };

	  var unregisterDroppable = function unregisterDroppable(descriptor) {
	    var entry = entries.droppables[descriptor.id];
	    !entry ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot unregister Droppable with id " + descriptor.id + " as as it is not registered") : invariant(false) : void 0;

	    if (entry.descriptor !== descriptor) {
	      return;
	    }

	    delete entries.droppables[descriptor.id];

	    if (!collection) {
	      return;
	    }

	    !(collection.critical.droppable.id !== descriptor.id) ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot remove the home Droppable during a drag') : invariant(false) : void 0;

	    if (collection.critical.droppable.type !== descriptor.type) {
	      return;
	    }

	    publisher.removeDroppable(descriptor.id);
	  };

	  var updateDroppableIsEnabled = function updateDroppableIsEnabled(id, isEnabled) {
	    !entries.droppables[id] ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot update the scroll on Droppable " + id + " as it is not registered") : invariant(false) : void 0;

	    if (!collection) {
	      return;
	    }

	    callbacks.updateDroppableIsEnabled({
	      id: id,
	      isEnabled: isEnabled
	    });
	  };

	  var updateDroppableScroll = function updateDroppableScroll(id, newScroll) {
	    !entries.droppables[id] ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot update the scroll on Droppable " + id + " as it is not registered") : invariant(false) : void 0;

	    if (!collection) {
	      return;
	    }

	    callbacks.updateDroppableScroll({
	      id: id,
	      offset: newScroll
	    });
	  };

	  var scrollDroppable = function scrollDroppable(id, change) {
	    var entry = entries.droppables[id];
	    !entry ? process.env.NODE_ENV !== "production" ? invariant(false, "Cannot scroll Droppable " + id + " as it is not registered") : invariant(false) : void 0;

	    if (!collection) {
	      return;
	    }

	    entry.callbacks.scroll(change);
	  };

	  var getInitialPublish = function getInitialPublish(args) {
	    var critical = args.critical,
	        scrollOptions = args.scrollOptions,
	        windowScroll = args.initialWindowScroll;
	    var timingKey = 'Initial collection from DOM';
	    start(timingKey);
	    var home = critical.droppable;

	    var droppables = _Object$keys(entries.droppables).map(function (id) {
	      return entries.droppables[id];
	    }).filter(function (entry) {
	      return entry.descriptor.type === home.type;
	    }).map(function (entry) {
	      return entry.callbacks.getDimensionAndWatchScroll(windowScroll, scrollOptions);
	    }).reduce(function (previous, dimension) {
	      previous[dimension.descriptor.id] = dimension;
	      return previous;
	    }, {});

	    var draggables = _Object$keys(entries.draggables).map(function (id) {
	      return entries.draggables[id];
	    }).filter(function (entry) {
	      return entry.descriptor.type === critical.draggable.type;
	    }).map(function (entry) {
	      return entry.getDimension(windowScroll);
	    }).reduce(function (previous, dimension) {
	      previous[dimension.descriptor.id] = dimension;
	      return previous;
	    }, {});

	    finish(timingKey);
	    var dimensions = {
	      draggables: draggables,
	      droppables: droppables
	    };
	    var result = {
	      dimensions: dimensions,
	      critical: critical
	    };
	    return result;
	  };

	  var stopPublishing = function stopPublishing() {
	    if (!collection) {
	      return;
	    }

	    publisher.stop();
	    var home = collection.critical.droppable;

	    _Object$keys(entries.droppables).filter(function (id) {
	      return entries.droppables[id].descriptor.type === home.type;
	    }).forEach(function (id) {
	      return entries.droppables[id].callbacks.unwatchScroll();
	    });

	    collection = null;
	  };

	  var startPublishing = function startPublishing(request, windowScroll) {
	    !!collection ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot start capturing critical dimensions as there is already a collection') : invariant(false) : void 0;
	    var entry = entries.draggables[request.draggableId];
	    !entry ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot find critical draggable entry') : invariant(false) : void 0;
	    var home = entries.droppables[entry.descriptor.droppableId];
	    !home ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot find critical droppable entry') : invariant(false) : void 0;
	    var critical = {
	      draggable: entry.descriptor,
	      droppable: home.descriptor
	    };
	    collection = {
	      scrollOptions: request.scrollOptions,
	      critical: critical,
	      initialWindowScroll: windowScroll
	    };
	    return getInitialPublish(collection);
	  };

	  var marshal = {
	    registerDraggable: registerDraggable,
	    updateDraggable: updateDraggable,
	    unregisterDraggable: unregisterDraggable,
	    registerDroppable: registerDroppable,
	    updateDroppable: updateDroppable,
	    unregisterDroppable: unregisterDroppable,
	    updateDroppableIsEnabled: updateDroppableIsEnabled,
	    scrollDroppable: scrollDroppable,
	    updateDroppableScroll: updateDroppableScroll,
	    startPublishing: startPublishing,
	    stopPublishing: stopPublishing
	  };
	  return marshal;
	});

	var physics = function () {
	  var base = {
	    stiffness: 1000,
	    damping: 60,
	    precision: 0.99
	  };

	  var standard = _extends({}, base);

	  var fast = _extends({}, base, {
	    stiffness: base.stiffness * 2
	  });

	  return {
	    standard: standard,
	    fast: fast
	  };
	}();
	var css = {
	  outOfTheWay: 'transform 0.2s cubic-bezier(0.2, 0, 0, 1)'
	};

	var prefix = 'data-react-beautiful-dnd';
	var dragHandle = prefix + "-drag-handle";
	var draggable = prefix + "-draggable";
	var droppable = prefix + "-droppable";

	var getStyles = (function (styleContext) {
	  var dragHandleSelector = "[" + dragHandle + "=\"" + styleContext + "\"]";
	  var draggableSelector = "[" + draggable + "=\"" + styleContext + "\"]";
	  var droppableSelector = "[" + droppable + "=\"" + styleContext + "\"]";
	  var dragHandleStyles = {
	    base: "\n      " + dragHandleSelector + " {\n        -webkit-touch-callout: none;\n        -webkit-tap-highlight-color: rgba(0,0,0,0);\n        touch-action: manipulation;\n      }\n    ",
	    grabCursor: "\n      " + dragHandleSelector + " {\n        cursor: -webkit-grab;\n        cursor: grab;\n      }\n    ",
	    blockPointerEvents: "\n      " + dragHandleSelector + " {\n        pointer-events: none;\n      }\n    "
	  };
	  var draggableStyles = {
	    animateMovement: "\n      " + draggableSelector + " {\n        transition: " + css.outOfTheWay + ";\n      }\n    "
	  };
	  var droppableStyles = {
	    base: "\n      " + droppableSelector + " {\n        overflow-anchor: none;\n      }\n    "
	  };
	  var bodyStyles = {
	    whileActiveDragging: "\n      body {\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n        user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n      }\n    "
	  };
	  var base = [dragHandleStyles.base, droppableStyles.base];
	  var resting = base.concat([dragHandleStyles.grabCursor]);
	  var collecting = base.concat([dragHandleStyles.blockPointerEvents, bodyStyles.whileActiveDragging]);
	  var dragging = collecting.concat([draggableStyles.animateMovement]);
	  var dropAnimating = base.concat([dragHandleStyles.grabCursor, draggableStyles.animateMovement]);
	  var userCancel = base.concat([draggableStyles.animateMovement]);
	  return {
	    resting: resting.join(''),
	    dragging: dragging.join(''),
	    dropAnimating: dropAnimating.join(''),
	    collecting: collecting.join(''),
	    userCancel: userCancel.join('')
	  };
	});

	var count = 0;
	var resetStyleContext = function resetStyleContext() {
	  count = 0;
	};

	var getHead = function getHead() {
	  var head = document.querySelector('head');
	  !head ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot find the head to append a style to') : invariant(false) : void 0;
	  return head;
	};

	var createStyleMarshal = (function () {
	  var context = "" + count++;
	  var styles = getStyles(context);
	  var el = null;
	  var setStyle = memoizeOne(function (proposed) {
	    !el ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot set style of style tag if not mounted') : invariant(false) : void 0;
	    el.innerHTML = proposed;
	  });

	  var mount = function mount() {
	    !!el ? process.env.NODE_ENV !== "production" ? invariant(false, 'Style marshal already mounted') : invariant(false) : void 0;
	    el = document.createElement('style');
	    el.type = 'text/css';
	    el.setAttribute(prefix, context);
	    getHead().appendChild(el);
	    setStyle(styles.resting);
	  };

	  var collecting = function collecting() {
	    return setStyle(styles.collecting);
	  };

	  var dragging = function dragging() {
	    return setStyle(styles.dragging);
	  };

	  var dropping = function dropping(reason) {
	    if (reason === 'DROP') {
	      setStyle(styles.dropAnimating);
	      return;
	    }

	    setStyle(styles.userCancel);
	  };

	  var resting = function resting() {
	    return setStyle(styles.resting);
	  };

	  var unmount = function unmount() {
	    !el ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot unmount style marshal as it is already unmounted') : invariant(false) : void 0;
	    getHead().removeChild(el);
	    el = null;
	  };

	  var marshal = {
	    collecting: collecting,
	    dragging: dragging,
	    dropping: dropping,
	    resting: resting,
	    styleContext: context,
	    mount: mount,
	    unmount: unmount
	  };
	  return marshal;
	});

	var canStartDrag = (function (state, id) {
	  if (state.phase === 'IDLE') {
	    return true;
	  }

	  if (state.phase !== 'DROP_ANIMATING') {
	    return false;
	  }

	  if (state.pending.result.draggableId === id) {
	    return false;
	  }

	  return state.pending.result.reason === 'DROP';
	});

	var scrollWindow = (function (change) {
	  window.scrollBy(change.x, change.y);
	});

	var count$1 = 0;
	var visuallyHidden = {
	  position: 'absolute',
	  width: '1px',
	  height: '1px',
	  margin: '-1px',
	  border: '0',
	  padding: '0',
	  overflow: 'hidden',
	  clip: 'rect(0 0 0 0)',
	  'clip-path': 'inset(100%)'
	};

	var getBody = function getBody() {
	  !document.body ? process.env.NODE_ENV !== "production" ? invariant(false, 'Announcer cannot find document.body') : invariant(false) : void 0;
	  return document.body;
	};

	var createAnnouncer = (function () {
	  var id = "react-beautiful-dnd-announcement-" + count$1++;
	  var el = null;

	  var announce = function announce(message) {
	    !el ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot announce to unmounted node') : invariant(false) : void 0;
	    el.textContent = message;
	  };

	  var mount = function mount() {
	    !!el ? process.env.NODE_ENV !== "production" ? invariant(false, 'Announcer already mounted') : invariant(false) : void 0;
	    el = document.createElement('div');
	    el.id = id;
	    el.setAttribute('aria-live', 'assertive');
	    el.setAttribute('role', 'log');
	    el.setAttribute('aria-atomic', 'true');

	    _Object$assign(el.style, visuallyHidden);

	    getBody().appendChild(el);
	  };

	  var unmount = function unmount() {
	    !el ? process.env.NODE_ENV !== "production" ? invariant(false, 'Will not unmount annoucer as it is already unmounted') : invariant(false) : void 0;
	    getBody().removeChild(el);
	    el = null;
	  };

	  var announcer = {
	    announce: announce,
	    id: id,
	    mount: mount,
	    unmount: unmount
	  };
	  return announcer;
	});

	var getScrollableDroppables = memoizeOne(function (droppables) {
	  return toDroppableList(droppables).filter(function (droppable) {
	    if (!droppable.isEnabled) {
	      return false;
	    }

	    if (!droppable.viewport.closestScrollable) {
	      return false;
	    }

	    return true;
	  });
	});

	var getScrollableDroppableOver = function getScrollableDroppableOver(target, droppables) {
	  var maybe = getScrollableDroppables(droppables).find(function (droppable) {
	    !droppable.viewport.closestScrollable ? process.env.NODE_ENV !== "production" ? invariant(false, 'Invalid result') : invariant(false) : void 0;
	    return isPositionInFrame(droppable.viewport.closestScrollable.framePageMarginBox)(target);
	  });
	  return maybe;
	};

	var getBestScrollableDroppable = (function (_ref) {
	  var center = _ref.center,
	      destination = _ref.destination,
	      droppables = _ref.droppables;

	  if (destination) {
	    var _dimension = droppables[destination.droppableId];

	    if (!_dimension.viewport.closestScrollable) {
	      return null;
	    }

	    return _dimension;
	  }

	  var dimension = getScrollableDroppableOver(center, droppables);
	  return dimension;
	});

	var smallestSigned = apply(function (value) {
	  if (value === 0) {
	    return 0;
	  }

	  return value > 0 ? 1 : -1;
	});
	var getOverlap = function () {
	  var getRemainder = function getRemainder(target, max) {
	    if (target < 0) {
	      return target;
	    }

	    if (target > max) {
	      return target - max;
	    }

	    return 0;
	  };

	  return function (_ref) {
	    var current = _ref.current,
	        max = _ref.max,
	        change = _ref.change;
	    var targetScroll = add(current, change);
	    var overlap = {
	      x: getRemainder(targetScroll.x, max.x),
	      y: getRemainder(targetScroll.y, max.y)
	    };

	    if (isEqual(overlap, origin)) {
	      return null;
	    }

	    return overlap;
	  };
	}();
	var canPartiallyScroll = function canPartiallyScroll(_ref2) {
	  var rawMax = _ref2.max,
	      current = _ref2.current,
	      change = _ref2.change;
	  var max = {
	    x: Math.max(current.x, rawMax.x),
	    y: Math.max(current.y, rawMax.y)
	  };
	  var smallestChange = smallestSigned(change);
	  var overlap = getOverlap({
	    max: max,
	    current: current,
	    change: smallestChange
	  });

	  if (!overlap) {
	    return true;
	  }

	  if (smallestChange.x !== 0 && overlap.x === 0) {
	    return true;
	  }

	  if (smallestChange.y !== 0 && overlap.y === 0) {
	    return true;
	  }

	  return false;
	};
	var canScrollWindow = function canScrollWindow(viewport, change) {
	  return canPartiallyScroll({
	    current: viewport.scroll.current,
	    max: viewport.scroll.max,
	    change: change
	  });
	};
	var getWindowOverlap = function getWindowOverlap(viewport, change) {
	  if (!canScrollWindow(viewport, change)) {
	    return null;
	  }

	  var max = viewport.scroll.max;
	  var current = viewport.scroll.current;
	  return getOverlap({
	    current: current,
	    max: max,
	    change: change
	  });
	};
	var canScrollDroppable = function canScrollDroppable(droppable, change) {
	  var closest$$1 = droppable.viewport.closestScrollable;

	  if (!closest$$1) {
	    return false;
	  }

	  return canPartiallyScroll({
	    current: closest$$1.scroll.current,
	    max: closest$$1.scroll.max,
	    change: change
	  });
	};
	var getDroppableOverlap = function getDroppableOverlap(droppable, change) {
	  var closest$$1 = droppable.viewport.closestScrollable;

	  if (!closest$$1) {
	    return null;
	  }

	  if (!canScrollDroppable(droppable, change)) {
	    return null;
	  }

	  return getOverlap({
	    current: closest$$1.scroll.current,
	    max: closest$$1.scroll.max,
	    change: change
	  });
	};

	var config = {
	  startFrom: 0.25,
	  maxSpeedAt: 0.05,
	  maxScrollSpeed: 28,
	  ease: function ease(percentage) {
	    return Math.pow(percentage, 2);
	  }
	};
	var clean$1 = apply(function (value) {
	  return value === 0 ? 0 : value;
	});
	var getPixelThresholds = function getPixelThresholds(container, axis) {
	  var startFrom = container[axis.size] * config.startFrom;
	  var maxSpeedAt = container[axis.size] * config.maxSpeedAt;
	  var accelerationPlane = startFrom - maxSpeedAt;
	  var thresholds = {
	    startFrom: startFrom,
	    maxSpeedAt: maxSpeedAt,
	    accelerationPlane: accelerationPlane
	  };
	  return thresholds;
	};

	var getSpeed = function getSpeed(distance$$1, thresholds) {
	  if (distance$$1 >= thresholds.startFrom) {
	    return 0;
	  }

	  if (distance$$1 <= thresholds.maxSpeedAt) {
	    return config.maxScrollSpeed;
	  }

	  var distancePastStart = thresholds.startFrom - distance$$1;
	  var percentage = distancePastStart / thresholds.accelerationPlane;
	  var transformed = config.ease(percentage);
	  var speed = config.maxScrollSpeed * transformed;
	  return speed;
	};

	var adjustForSizeLimits = function adjustForSizeLimits(_ref) {
	  var container = _ref.container,
	      subject = _ref.subject,
	      proposedScroll = _ref.proposedScroll;
	  var isTooBigVertically = subject.height > container.height;
	  var isTooBigHorizontally = subject.width > container.width;

	  if (!isTooBigHorizontally && !isTooBigVertically) {
	    return proposedScroll;
	  }

	  if (isTooBigHorizontally && isTooBigVertically) {
	    return null;
	  }

	  return {
	    x: isTooBigHorizontally ? 0 : proposedScroll.x,
	    y: isTooBigVertically ? 0 : proposedScroll.y
	  };
	};

	var getRequiredScroll = function getRequiredScroll(_ref2) {
	  var container = _ref2.container,
	      subject = _ref2.subject,
	      center = _ref2.center;
	  var distance$$1 = {
	    top: center.y - container.top,
	    right: container.right - center.x,
	    bottom: container.bottom - center.y,
	    left: center.x - container.left
	  };

	  var y = function () {
	    var thresholds = getPixelThresholds(container, vertical);
	    var isCloserToBottom = distance$$1.bottom < distance$$1.top;

	    if (isCloserToBottom) {
	      return getSpeed(distance$$1.bottom, thresholds);
	    }

	    return -1 * getSpeed(distance$$1.top, thresholds);
	  }();

	  var x = function () {
	    var thresholds = getPixelThresholds(container, horizontal);
	    var isCloserToRight = distance$$1.right < distance$$1.left;

	    if (isCloserToRight) {
	      return getSpeed(distance$$1.right, thresholds);
	    }

	    return -1 * getSpeed(distance$$1.left, thresholds);
	  }();

	  var required = clean$1({
	    x: x,
	    y: y
	  });

	  if (isEqual(required, origin)) {
	    return null;
	  }

	  var limited = adjustForSizeLimits({
	    container: container,
	    subject: subject,
	    proposedScroll: required
	  });

	  if (!limited) {
	    return null;
	  }

	  return isEqual(limited, origin) ? null : limited;
	};

	var withPlaceholder = function withPlaceholder(droppable, draggable) {
	  var closest$$1 = droppable.viewport.closestScrollable;

	  if (!closest$$1) {
	    return null;
	  }

	  var isOverHome = droppable.descriptor.id === draggable.descriptor.droppableId;
	  var max = closest$$1.scroll.max;
	  var current = closest$$1.scroll.current;

	  if (isOverHome) {
	    return {
	      max: max,
	      current: current
	    };
	  }

	  var spaceForPlaceholder = patch(droppable.axis.line, draggable.placeholder.client.borderBox[droppable.axis.size]);
	  var newMax = add(max, spaceForPlaceholder);
	  var newCurrent = {
	    x: Math.min(current.x, newMax.x),
	    y: Math.min(current.y, newMax.y)
	  };
	  return {
	    max: newMax,
	    current: newCurrent
	  };
	};

	var createFluidScroller = (function (_ref3) {
	  var scrollWindow = _ref3.scrollWindow,
	      scrollDroppable = _ref3.scrollDroppable;
	  var scheduleWindowScroll = rafSchd(scrollWindow);
	  var scheduleDroppableScroll = rafSchd(scrollDroppable);

	  var scroller = function scroller(state) {
	    var center = state.current.page.borderBoxCenter;
	    var draggable = state.dimensions.draggables[state.critical.draggable.id];
	    var subject = draggable.page.marginBox;
	    var viewport = state.viewport;
	    var requiredWindowScroll = getRequiredScroll({
	      container: viewport.frame,
	      subject: subject,
	      center: center
	    });

	    if (requiredWindowScroll && canScrollWindow(viewport, requiredWindowScroll)) {
	      scheduleWindowScroll(requiredWindowScroll);
	      return;
	    }

	    var droppable = getBestScrollableDroppable({
	      center: center,
	      destination: state.impact.destination,
	      droppables: state.dimensions.droppables
	    });

	    if (!droppable) {
	      return;
	    }

	    var closestScrollable = droppable.viewport.closestScrollable;

	    if (!closestScrollable) {
	      return;
	    }

	    var requiredFrameScroll = getRequiredScroll({
	      container: closestScrollable.framePageMarginBox,
	      subject: subject,
	      center: center
	    });

	    if (!requiredFrameScroll) {
	      return;
	    }

	    var result = withPlaceholder(droppable, draggable);

	    if (!result) {
	      return;
	    }

	    var closest$$1 = droppable.viewport.closestScrollable;

	    if (!closest$$1) {
	      return;
	    }

	    var canScrollDroppable$$1 = canPartiallyScroll({
	      current: result.current,
	      max: result.max,
	      change: requiredFrameScroll
	    });

	    if (canScrollDroppable$$1) {
	      scheduleDroppableScroll(droppable.descriptor.id, requiredFrameScroll);
	    }
	  };

	  scroller.cancel = function () {
	    scheduleWindowScroll.cancel();
	    scheduleDroppableScroll.cancel();
	  };

	  return scroller;
	});

	var createJumpScroller = (function (_ref) {
	  var move = _ref.move,
	      scrollDroppable = _ref.scrollDroppable,
	      scrollWindow = _ref.scrollWindow;

	  var moveByOffset = function moveByOffset(state, offset) {
	    var client = add(state.current.client.selection, offset);
	    move({
	      client: client,
	      shouldAnimate: true
	    });
	  };

	  var scrollDroppableAsMuchAsItCan = function scrollDroppableAsMuchAsItCan(droppable, change) {
	    if (!canScrollDroppable(droppable, change)) {
	      return change;
	    }

	    var overlap = getDroppableOverlap(droppable, change);

	    if (!overlap) {
	      scrollDroppable(droppable.descriptor.id, change);
	      return null;
	    }

	    var whatTheDroppableCanScroll = subtract(change, overlap);
	    scrollDroppable(droppable.descriptor.id, whatTheDroppableCanScroll);
	    var remainder = subtract(change, whatTheDroppableCanScroll);
	    return remainder;
	  };

	  var scrollWindowAsMuchAsItCan = function scrollWindowAsMuchAsItCan(viewport, change) {
	    if (!canScrollWindow(viewport, change)) {
	      return change;
	    }

	    var overlap = getWindowOverlap(viewport, change);

	    if (!overlap) {
	      scrollWindow(change);
	      return null;
	    }

	    var whatTheWindowCanScroll = subtract(change, overlap);
	    scrollWindow(whatTheWindowCanScroll);
	    var remainder = subtract(change, whatTheWindowCanScroll);
	    return remainder;
	  };

	  var jumpScroller = function jumpScroller(state) {
	    var request = state.scrollJumpRequest;

	    if (!request) {
	      return;
	    }

	    var destination = state.impact.destination;
	    !destination ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot perform a jump scroll when there is no destination') : invariant(false) : void 0;
	    var droppableRemainder = scrollDroppableAsMuchAsItCan(state.dimensions.droppables[destination.droppableId], request);

	    if (!droppableRemainder) {
	      return;
	    }

	    var viewport = state.viewport;
	    var windowRemainder = scrollWindowAsMuchAsItCan(viewport, droppableRemainder);

	    if (!windowRemainder) {
	      return;
	    }

	    moveByOffset(state, windowRemainder);
	  };

	  return jumpScroller;
	});

	var createAutoScroller = (function (_ref) {
	  var scrollDroppable = _ref.scrollDroppable,
	      scrollWindow = _ref.scrollWindow,
	      move = _ref.move;
	  var fluidScroll = createFluidScroller({
	    scrollWindow: scrollWindow,
	    scrollDroppable: scrollDroppable
	  });
	  var jumpScroll = createJumpScroller({
	    move: move,
	    scrollWindow: scrollWindow,
	    scrollDroppable: scrollDroppable
	  });
	  var marshal = {
	    cancel: fluidScroll.cancel,
	    fluidScroll: fluidScroll,
	    jumpScroll: jumpScroll
	  };
	  return marshal;
	});

	var prefix$1 = function prefix(key) {
	  return "private-react-beautiful-dnd-key-do-not-use-" + key;
	};

	var storeKey = prefix$1('store');
	var droppableIdKey = prefix$1('droppable-id');
	var droppableTypeKey = prefix$1('droppable-type');
	var dimensionMarshalKey = prefix$1('dimension-marshal');
	var styleContextKey = prefix$1('style-context');
	var canLiftContextKey = prefix$1('can-lift');

	var _DragDropContext$chil;
	var resetServerContext = function resetServerContext() {
	  resetStyleContext();
	};

	var printFatalDevError = function printFatalDevError(error) {
	  if (process.env.NODE_ENV === 'production') {
	    return;
	  }

	  console.warn("\n    An error has occurred while a drag is occurring.\n    Any existing drag will be cancelled.\n\n    Raw error:\n  ");
	  console.error(error);
	};

	var DragDropContext = function (_React$Component) {
	  _inheritsLoose(DragDropContext, _React$Component);

	  function DragDropContext(props, context) {
	    var _this;

	    _this = _React$Component.call(this, props, context) || this;
	    _this.store = void 0;
	    _this.dimensionMarshal = void 0;
	    _this.styleMarshal = void 0;
	    _this.autoScroller = void 0;
	    _this.announcer = void 0;
	    _this.unsubscribe = void 0;

	    _this.canLift = function (id) {
	      return canStartDrag(_this.store.getState(), id);
	    };

	    _this.onFatalError = function (error) {
	      printFatalDevError(error);

	      var state = _this.store.getState();

	      if (state.phase !== 'IDLE') {
	        _this.store.dispatch(clean());
	      }
	    };

	    _this.onWindowError = function (error) {
	      return _this.onFatalError(error);
	    };

	    _this.announcer = createAnnouncer();
	    _this.styleMarshal = createStyleMarshal();
	    _this.store = createStore({
	      getDimensionMarshal: function getDimensionMarshal() {
	        return _this.dimensionMarshal;
	      },
	      styleMarshal: _this.styleMarshal,
	      getHooks: function getHooks() {
	        return {
	          onBeforeDragStart: _this.props.onBeforeDragStart,
	          onDragStart: _this.props.onDragStart,
	          onDragEnd: _this.props.onDragEnd,
	          onDragUpdate: _this.props.onDragUpdate
	        };
	      },
	      announce: _this.announcer.announce,
	      getScroller: function getScroller() {
	        return _this.autoScroller;
	      }
	    });
	    var callbacks = redux.bindActionCreators({
	      collectionStarting: collectionStarting,
	      publish: publish,
	      updateDroppableScroll: updateDroppableScroll,
	      updateDroppableIsEnabled: updateDroppableIsEnabled
	    }, _this.store.dispatch);
	    _this.dimensionMarshal = createDimensionMarshal(callbacks);
	    _this.autoScroller = createAutoScroller(_extends({
	      scrollWindow: scrollWindow,
	      scrollDroppable: _this.dimensionMarshal.scrollDroppable
	    }, redux.bindActionCreators({
	      move: move
	    }, _this.store.dispatch)));
	    return _this;
	  }

	  var _proto = DragDropContext.prototype;

	  _proto.getChildContext = function getChildContext() {
	    var _ref;

	    return _ref = {}, _ref[storeKey] = this.store, _ref[dimensionMarshalKey] = this.dimensionMarshal, _ref[styleContextKey] = this.styleMarshal.styleContext, _ref[canLiftContextKey] = this.canLift, _ref;
	  };

	  _proto.componentDidMount = function componentDidMount() {
	    window.addEventListener('error', this.onWindowError);
	    this.styleMarshal.mount();
	    this.announcer.mount();
	  };

	  _proto.componentDidCatch = function componentDidCatch(error) {
	    this.onFatalError(error);

	    if (error.message.indexOf('Invariant failed') !== -1) {
	      this.setState({});
	      return;
	    }

	    throw error;
	  };

	  _proto.componentWillUnmount = function componentWillUnmount() {
	    window.removeEventListener('error', this.onWindowError);
	    var state = this.store.getState();

	    if (state.phase !== 'IDLE') {
	      this.store.dispatch(clean());
	    }

	    this.styleMarshal.unmount();
	    this.announcer.unmount();
	  };

	  _proto.render = function render() {
	    return this.props.children;
	  };

	  return DragDropContext;
	}(React__default.Component);

	DragDropContext.childContextTypes = (_DragDropContext$chil = {}, _DragDropContext$chil[storeKey] = PropTypes.shape({
	  dispatch: PropTypes.func.isRequired,
	  subscribe: PropTypes.func.isRequired,
	  getState: PropTypes.func.isRequired
	}).isRequired, _DragDropContext$chil[dimensionMarshalKey] = PropTypes.object.isRequired, _DragDropContext$chil[styleContextKey] = PropTypes.string.isRequired, _DragDropContext$chil[canLiftContextKey] = PropTypes.func.isRequired, _DragDropContext$chil);

	var isScrollable = function isScrollable() {
	  for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {
	    values[_key] = arguments[_key];
	  }

	  return values.some(function (value) {
	    return value === 'auto' || value === 'scroll';
	  });
	};

	var isElementScrollable = function isElementScrollable(el) {
	  var style = window.getComputedStyle(el);
	  return isScrollable(style.overflow, style.overflowY, style.overflowX);
	};

	var getClosestScrollable = function getClosestScrollable(el) {
	  if (el == null) {
	    return null;
	  }

	  if (!isElementScrollable(el)) {
	    return getClosestScrollable(el.parentElement);
	  }

	  return el;
	};

	var _DroppableDimensionPu;

	var getScroll = function getScroll(el) {
	  return {
	    x: el.scrollLeft,
	    y: el.scrollTop
	  };
	};

	var checkForNestedScrollContainers = function checkForNestedScrollContainers(scrollable) {
	  if (process.env.NODE_ENV === 'production') {
	    return;
	  }

	  if (!scrollable) {
	    return;
	  }

	  var anotherScrollParent = getClosestScrollable(scrollable.parentElement);

	  if (!anotherScrollParent) {
	    return;
	  }

	  console.warn("\n    Droppable: unsupported nested scroll container detected.\n    A Droppable can only have one scroll parent (which can be itself)\n    Nested scroll containers are currently not supported.\n\n    We hope to support nested scroll containers soon: https://github.com/atlassian/react-beautiful-dnd/issues/131\n  ");
	};

	var listenerOptions = {
	  passive: true
	};

	var DroppableDimensionPublisher = function (_React$Component) {
	  _inheritsLoose(DroppableDimensionPublisher, _React$Component);

	  function DroppableDimensionPublisher(props, context) {
	    var _this;

	    _this = _React$Component.call(this, props, context) || this;
	    _this.watchingScroll = null;
	    _this.callbacks = void 0;
	    _this.publishedDescriptor = null;

	    _this.getClosestScroll = function () {
	      if (!_this.watchingScroll) {
	        return origin;
	      }

	      return getScroll(_this.watchingScroll.closestScrollable);
	    };

	    _this.memoizedUpdateScroll = memoizeOne(function (x, y) {
	      !_this.publishedDescriptor ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot update scroll on unpublished droppable') : invariant(false) : void 0;
	      var newScroll = {
	        x: x,
	        y: y
	      };
	      var marshal = _this.context[dimensionMarshalKey];
	      marshal.updateDroppableScroll(_this.publishedDescriptor.id, newScroll);
	    });

	    _this.updateScroll = function () {
	      var offset = _this.getClosestScroll();

	      _this.memoizedUpdateScroll(offset.x, offset.y);
	    };

	    _this.scheduleScrollUpdate = rafSchd(_this.updateScroll);

	    _this.onClosestScroll = function () {
	      !_this.watchingScroll ? process.env.NODE_ENV !== "production" ? invariant(false, 'Could not find scroll options while scrolling') : invariant(false) : void 0;
	      var options = _this.watchingScroll.options;

	      if (options.shouldPublishImmediately) {
	        _this.updateScroll();

	        return;
	      }

	      _this.scheduleScrollUpdate();
	    };

	    _this.scroll = function (change) {
	      !_this.watchingScroll ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot scroll a droppable with no closest scrollable') : invariant(false) : void 0;
	      var closestScrollable = _this.watchingScroll.closestScrollable;
	      closestScrollable.scrollTop += change.y;
	      closestScrollable.scrollLeft += change.x;
	    };

	    _this.watchScroll = function (closestScrollable, options) {
	      !!_this.watchingScroll ? process.env.NODE_ENV !== "production" ? invariant(false, 'Droppable cannot watch scroll as it is already watching scroll') : invariant(false) : void 0;

	      if (!closestScrollable) {
	        return;
	      }

	      _this.watchingScroll = {
	        options: options,
	        closestScrollable: closestScrollable
	      };
	      closestScrollable.addEventListener('scroll', _this.onClosestScroll, listenerOptions);
	    };

	    _this.unwatchScroll = function () {
	      var watching = _this.watchingScroll;

	      if (!watching) {
	        return;
	      }

	      _this.scheduleScrollUpdate.cancel();

	      watching.closestScrollable.removeEventListener('scroll', _this.onClosestScroll, listenerOptions);
	      _this.watchingScroll = null;
	    };

	    _this.getMemoizedDescriptor = memoizeOne(function (id, type) {
	      return {
	        id: id,
	        type: type
	      };
	    });

	    _this.publish = function () {
	      var marshal = _this.context[dimensionMarshalKey];

	      var descriptor = _this.getMemoizedDescriptor(_this.props.droppableId, _this.props.type);

	      if (!_this.publishedDescriptor) {
	        marshal.registerDroppable(descriptor, _this.callbacks);
	        _this.publishedDescriptor = descriptor;
	        return;
	      }

	      if (_this.publishedDescriptor === descriptor) {
	        return;
	      }

	      marshal.updateDroppable(_this.publishedDescriptor, descriptor, _this.callbacks);
	      _this.publishedDescriptor = descriptor;
	    };

	    _this.unpublish = function () {
	      !_this.publishedDescriptor ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot unpublish descriptor when none is published') : invariant(false) : void 0;
	      var marshal = _this.context[dimensionMarshalKey];
	      marshal.unregisterDroppable(_this.publishedDescriptor);
	      _this.publishedDescriptor = null;
	    };

	    _this.getDimensionAndWatchScroll = function (windowScroll, options) {
	      var _this$props = _this.props,
	          direction = _this$props.direction,
	          ignoreContainerClipping = _this$props.ignoreContainerClipping,
	          isDropDisabled = _this$props.isDropDisabled,
	          getDroppableRef = _this$props.getDroppableRef;
	      var targetRef = getDroppableRef();
	      var descriptor = _this.publishedDescriptor;
	      !targetRef ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot calculate a dimension when not attached to the DOM') : invariant(false) : void 0;
	      !descriptor ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot get dimension for unpublished droppable') : invariant(false) : void 0;
	      var scrollableRef = getClosestScrollable(targetRef);
	      checkForNestedScrollContainers(scrollableRef);

	      _this.watchScroll(scrollableRef, options);

	      var client = function () {
	        var base = cssBoxModel.getBox(targetRef);

	        if (!scrollableRef) {
	          return base;
	        }

	        if (targetRef !== scrollableRef) {
	          return base;
	        }

	        var top = base.paddingBox.top - scrollableRef.scrollTop;
	        var left = base.paddingBox.left - scrollableRef.scrollLeft;
	        var bottom = top + scrollableRef.scrollHeight;
	        var right = left + scrollableRef.scrollWidth;
	        var paddingBox = {
	          top: top,
	          right: right,
	          bottom: bottom,
	          left: left
	        };
	        var borderBox = {
	          top: paddingBox.top - base.border.top,
	          right: paddingBox.right + base.border.right,
	          bottom: paddingBox.bottom + base.border.bottom,
	          left: paddingBox.left - base.border.left
	        };
	        return cssBoxModel.createBox({
	          borderBox: borderBox,
	          margin: base.margin,
	          border: base.border,
	          padding: base.padding
	        });
	      }();

	      var page = cssBoxModel.withScroll(client, windowScroll);

	      var closest$$1 = function () {
	        if (!scrollableRef) {
	          return null;
	        }

	        var frameClient = cssBoxModel.getBox(scrollableRef);
	        return {
	          client: frameClient,
	          page: cssBoxModel.withScroll(frameClient),
	          scrollHeight: scrollableRef.scrollHeight,
	          scrollWidth: scrollableRef.scrollWidth,
	          scroll: getScroll(scrollableRef),
	          shouldClipSubject: !ignoreContainerClipping
	        };
	      }();

	      return getDroppableDimension({
	        descriptor: descriptor,
	        isEnabled: !isDropDisabled,
	        direction: direction,
	        client: client,
	        page: page,
	        closest: closest$$1
	      });
	    };

	    var callbacks = {
	      getDimensionAndWatchScroll: _this.getDimensionAndWatchScroll,
	      unwatchScroll: _this.unwatchScroll,
	      scroll: _this.scroll
	    };
	    _this.callbacks = callbacks;
	    return _this;
	  }

	  var _proto = DroppableDimensionPublisher.prototype;

	  _proto.componentDidMount = function componentDidMount() {
	    this.publish();
	  };

	  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
	    this.publish();

	    if (this.props.isDropDisabled === prevProps.isDropDisabled) {
	      return;
	    }

	    var marshal = this.context[dimensionMarshalKey];
	    marshal.updateDroppableIsEnabled(this.props.droppableId, !this.props.isDropDisabled);
	  };

	  _proto.componentWillUnmount = function componentWillUnmount() {
	    if (this.watchingScroll) {
	      if (process.env.NODE_ENV !== 'production') {
	        console.warn('Unmounting droppable while it was watching scroll');
	      }

	      this.unwatchScroll();
	    }

	    this.unpublish();
	  };

	  _proto.render = function render() {
	    return this.props.children;
	  };

	  return DroppableDimensionPublisher;
	}(React__default.Component);

	DroppableDimensionPublisher.contextTypes = (_DroppableDimensionPu = {}, _DroppableDimensionPu[dimensionMarshalKey] = PropTypes.object.isRequired, _DroppableDimensionPu);

	var Placeholder = function (_PureComponent) {
	  _inheritsLoose(Placeholder, _PureComponent);

	  function Placeholder() {
	    return _PureComponent.apply(this, arguments) || this;
	  }

	  var _proto = Placeholder.prototype;

	  _proto.componentDidMount = function componentDidMount() {
	    if (this.props.onMount) {
	      this.props.onMount();
	    }
	  };

	  _proto.componentWillUnmount = function componentWillUnmount() {
	    if (this.props.onUnmount) {
	      this.props.onUnmount();
	    }
	  };

	  _proto.render = function render() {
	    var placeholder = this.props.placeholder;
	    var client = placeholder.client,
	        display = placeholder.display,
	        tagName = placeholder.tagName;
	    var style = {
	      display: display,
	      boxSizing: 'border-box',
	      width: client.borderBox.width,
	      height: client.borderBox.height,
	      marginTop: client.margin.top,
	      marginRight: client.margin.right,
	      marginBottom: client.margin.bottom,
	      marginLeft: client.margin.left,
	      flexShrink: '0',
	      flexGrow: '0',
	      pointerEvents: 'none'
	    };
	    return React__default.createElement(tagName, {
	      style: style
	    });
	  };

	  return Placeholder;
	}(React.PureComponent);

	var throwIfRefIsInvalid = (function (ref) {
	  !(ref && ref instanceof HTMLElement) ? process.env.NODE_ENV !== "production" ? invariant(false, "\n    provided.innerRef has not been provided with a HTMLElement.\n\n    You can find a guide on using the innerRef callback functions at:\n    https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/using-inner-ref.md\n  ") : invariant(false) : void 0;
	});

	var _Droppable$contextTyp, _Droppable$childConte;

	var Droppable = function (_Component) {
	  _inheritsLoose(Droppable, _Component);

	  function Droppable(props, context) {
	    var _this;

	    _this = _Component.call(this, props, context) || this;
	    _this.styleContext = void 0;
	    _this.ref = null;
	    _this.isPlaceholderMounted = false;

	    _this.onPlaceholderMount = function () {
	      _this.isPlaceholderMounted = true;
	    };

	    _this.onPlaceholderUnmount = function () {
	      _this.isPlaceholderMounted = false;
	    };

	    _this.setRef = function (ref) {
	      if (ref === null) {
	        return;
	      }

	      if (ref === _this.ref) {
	        return;
	      }

	      _this.ref = ref;
	      throwIfRefIsInvalid(ref);
	    };

	    _this.getDroppableRef = function () {
	      return _this.ref;
	    };

	    _this.styleContext = context[styleContextKey];
	    return _this;
	  }

	  var _proto = Droppable.prototype;

	  _proto.getChildContext = function getChildContext() {
	    var _value;

	    var value = (_value = {}, _value[droppableIdKey] = this.props.droppableId, _value[droppableTypeKey] = this.props.type, _value);
	    return value;
	  };

	  _proto.componentDidMount = function componentDidMount() {
	    throwIfRefIsInvalid(this.ref);
	    this.warnIfPlaceholderNotMounted();
	  };

	  _proto.componentDidUpdate = function componentDidUpdate() {
	    this.warnIfPlaceholderNotMounted();
	  };

	  _proto.warnIfPlaceholderNotMounted = function warnIfPlaceholderNotMounted() {
	    if (process.env.NODE_ENV === 'production') {
	      return;
	    }

	    if (!this.props.placeholder) {
	      return;
	    }

	    if (this.isPlaceholderMounted) {
	      return;
	    }

	    console.warn("\n      Droppable setup issue: DroppableProvided > placeholder could not be found.\n      Please be sure to add the {provided.placeholder} Node as a child of your Droppable\n\n      More information: https://github.com/atlassian/react-beautiful-dnd#1-provided-droppableprovided\n    ");
	  };

	  _proto.getPlaceholder = function getPlaceholder() {
	    if (!this.props.placeholder) {
	      return null;
	    }

	    return React__default.createElement(Placeholder, {
	      placeholder: this.props.placeholder,
	      onMount: this.onPlaceholderMount,
	      onUnmount: this.onPlaceholderUnmount
	    });
	  };

	  _proto.render = function render() {
	    var _this$props = this.props,
	        children = _this$props.children,
	        direction = _this$props.direction,
	        droppableId = _this$props.droppableId,
	        ignoreContainerClipping = _this$props.ignoreContainerClipping,
	        isDraggingOver = _this$props.isDraggingOver,
	        isDropDisabled = _this$props.isDropDisabled,
	        draggingOverWith = _this$props.draggingOverWith,
	        type = _this$props.type;
	    var provided = {
	      innerRef: this.setRef,
	      placeholder: this.getPlaceholder(),
	      droppableProps: {
	        'data-react-beautiful-dnd-droppable': this.styleContext
	      }
	    };
	    var snapshot = {
	      isDraggingOver: isDraggingOver,
	      draggingOverWith: draggingOverWith
	    };
	    return React__default.createElement(DroppableDimensionPublisher, {
	      droppableId: droppableId,
	      type: type,
	      direction: direction,
	      ignoreContainerClipping: ignoreContainerClipping,
	      isDropDisabled: isDropDisabled,
	      getDroppableRef: this.getDroppableRef
	    }, children(provided, snapshot));
	  };

	  return Droppable;
	}(React.Component);

	Droppable.contextTypes = (_Droppable$contextTyp = {}, _Droppable$contextTyp[styleContextKey] = PropTypes.string.isRequired, _Droppable$contextTyp);
	Droppable.childContextTypes = (_Droppable$childConte = {}, _Droppable$childConte[droppableIdKey] = PropTypes.string.isRequired, _Droppable$childConte[droppableTypeKey] = PropTypes.string.isRequired, _Droppable$childConte);

	var isStrictEqual = (function (a, b) {
	  return a === b;
	});

	var makeMapStateToProps = function makeMapStateToProps() {
	  var getIsDraggingOver = function getIsDraggingOver(id, destination) {
	    if (!destination) {
	      return false;
	    }

	    return destination.droppableId === id;
	  };

	  var shouldUsePlaceholder = function shouldUsePlaceholder(id, descriptor, destination) {
	    if (!destination) {
	      return false;
	    }

	    if (id === descriptor.droppableId) {
	      return false;
	    }

	    return id === destination.droppableId;
	  };

	  var getMapProps = memoizeOne(function (isDraggingOver, draggingOverWith, placeholder) {
	    return {
	      isDraggingOver: isDraggingOver,
	      draggingOverWith: draggingOverWith,
	      placeholder: placeholder
	    };
	  });

	  var getDefault = function getDefault() {
	    return getMapProps(false, null, null);
	  };

	  var selector = function selector(state, ownProps) {
	    if (ownProps.isDropDisabled) {
	      return getDefault();
	    }

	    var id = ownProps.droppableId;

	    if (state.isDragging) {
	      var destination = state.impact.destination;
	      var isDraggingOver = getIsDraggingOver(id, destination);
	      var draggableId = state.critical.draggable.id;
	      var draggingOverWith = isDraggingOver ? draggableId : null;
	      var draggable = state.dimensions.draggables[draggableId];
	      var placeholder = shouldUsePlaceholder(id, draggable.descriptor, destination) ? draggable.placeholder : null;
	      return getMapProps(isDraggingOver, draggingOverWith, placeholder);
	    }

	    if (state.phase === 'DROP_ANIMATING') {
	      var _destination = state.pending.impact.destination;

	      var _isDraggingOver = getIsDraggingOver(id, _destination);

	      var _draggableId = state.pending.result.draggableId;

	      var _draggingOverWith = _isDraggingOver ? _draggableId : null;

	      var _draggable = state.dimensions.draggables[_draggableId];

	      var _placeholder = shouldUsePlaceholder(id, _draggable.descriptor, _destination) ? _draggable.placeholder : null;

	      return getMapProps(_isDraggingOver, _draggingOverWith, _placeholder);
	    }

	    return getDefault();
	  };

	  return selector;
	};
	var connectedDroppable = reactRedux.connect(makeMapStateToProps, null, null, {
	  storeKey: storeKey,
	  pure: true,
	  areStatePropsEqual: isStrictEqual
	})(Droppable);
	connectedDroppable.defaultProps = {
	  type: 'DEFAULT',
	  isDropDisabled: false,
	  direction: 'vertical',
	  ignoreContainerClipping: false
	};

	var _DraggableDimensionPu;

	var DraggableDimensionPublisher = function (_Component) {
	  _inheritsLoose(DraggableDimensionPublisher, _Component);

	  function DraggableDimensionPublisher() {
	    var _this;

	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    _this = _Component.call.apply(_Component, [this].concat(args)) || this;
	    _this.publishedDescriptor = null;
	    _this.getMemoizedDescriptor = memoizeOne(function (id, index, droppableId, type) {
	      return {
	        id: id,
	        index: index,
	        droppableId: droppableId,
	        type: type
	      };
	    });

	    _this.publish = function () {
	      var marshal = _this.context[dimensionMarshalKey];

	      var descriptor = _this.getMemoizedDescriptor(_this.props.draggableId, _this.props.index, _this.props.droppableId, _this.props.type);

	      if (!_this.publishedDescriptor) {
	        marshal.registerDraggable(descriptor, _this.getDimension);
	        _this.publishedDescriptor = descriptor;
	        return;
	      }

	      if (descriptor === _this.publishedDescriptor) {
	        return;
	      }

	      marshal.updateDraggable(_this.publishedDescriptor, descriptor, _this.getDimension);
	      _this.publishedDescriptor = descriptor;
	    };

	    _this.unpublish = function () {
	      !_this.publishedDescriptor ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot unpublish descriptor when none is published') : invariant(false) : void 0;
	      var marshal = _this.context[dimensionMarshalKey];
	      marshal.unregisterDraggable(_this.publishedDescriptor);
	      _this.publishedDescriptor = null;
	    };

	    _this.getDimension = function (windowScroll) {
	      var targetRef = _this.props.getDraggableRef();

	      var descriptor = _this.publishedDescriptor;
	      !targetRef ? process.env.NODE_ENV !== "production" ? invariant(false, 'DraggableDimensionPublisher cannot calculate a dimension when not attached to the DOM') : invariant(false) : void 0;
	      !descriptor ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot get dimension for unpublished draggable') : invariant(false) : void 0;
	      var computedStyles = window.getComputedStyle(targetRef);
	      var borderBox = targetRef.getBoundingClientRect();
	      var client = cssBoxModel.calculateBox(borderBox, computedStyles);
	      var page = cssBoxModel.withScroll(client, windowScroll);
	      var placeholder = {
	        client: client,
	        tagName: targetRef.tagName.toLowerCase(),
	        display: computedStyles.display
	      };
	      var dimension = {
	        descriptor: descriptor,
	        placeholder: placeholder,
	        client: client,
	        page: page
	      };
	      return dimension;
	    };

	    return _this;
	  }

	  var _proto = DraggableDimensionPublisher.prototype;

	  _proto.componentDidMount = function componentDidMount() {
	    this.publish();
	  };

	  _proto.componentDidUpdate = function componentDidUpdate() {
	    this.publish();
	  };

	  _proto.componentWillUnmount = function componentWillUnmount() {
	    this.unpublish();
	  };

	  _proto.render = function render() {
	    return this.props.children;
	  };

	  return DraggableDimensionPublisher;
	}(React.Component);

	DraggableDimensionPublisher.contextTypes = (_DraggableDimensionPu = {}, _DraggableDimensionPu[dimensionMarshalKey] = PropTypes.object.isRequired, _DraggableDimensionPu);

	var DoubleRenderBlocker = function (_React$Component) {
	  _inheritsLoose(DoubleRenderBlocker, _React$Component);

	  function DoubleRenderBlocker() {
	    return _React$Component.apply(this, arguments) || this;
	  }

	  var _proto = DoubleRenderBlocker.prototype;

	  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
	    if (isEqual(origin, nextProps.change)) {
	      return true;
	    }

	    if (isEqual(this.props.change, nextProps.change)) {
	      return false;
	    }

	    return true;
	  };

	  _proto.render = function render() {
	    return this.props.children(this.props.change);
	  };

	  return DoubleRenderBlocker;
	}(React__default.Component);

	var Moveable = function (_Component) {
	  _inheritsLoose(Moveable, _Component);

	  function Moveable() {
	    return _Component.apply(this, arguments) || this;
	  }

	  var _proto2 = Moveable.prototype;

	  _proto2.getFinal = function getFinal() {
	    var destination = this.props.destination;
	    var speed = this.props.speed;

	    if (speed === 'INSTANT') {
	      return destination;
	    }

	    var config = speed === 'FAST' ? physics.fast : physics.standard;
	    return {
	      x: reactMotion.spring(destination.x, config),
	      y: reactMotion.spring(destination.y, config)
	    };
	  };

	  _proto2.render = function render() {
	    var _this = this;

	    var final = this.getFinal();
	    return React__default.createElement(reactMotion.Motion, {
	      defaultStyle: origin,
	      style: final,
	      onRest: this.props.onMoveEnd
	    }, function (current) {
	      var _this$props = _this.props,
	          speed = _this$props.speed,
	          destination = _this$props.destination,
	          children = _this$props.children;
	      var target = speed === 'INSTANT' ? destination : current;
	      return React__default.createElement(DoubleRenderBlocker, {
	        change: target
	      }, children);
	    });
	  };

	  return Moveable;
	}(React.Component);

	Moveable.defaultProps = {
	  destination: origin
	};

	var getWindowFromRef = (function (ref) {
	  return ref ? ref.ownerDocument.defaultView : window;
	});

	var selector = "[" + dragHandle + "]";

	var isSVG = function isSVG(el) {
	  if (typeof SVGElement === 'undefined') {
	    return false;
	  }

	  return el instanceof SVGElement;
	};

	var throwIfSVG = function throwIfSVG(el) {
	  !!isSVG(el) ? process.env.NODE_ENV !== "production" ? invariant(false, "A drag handle cannot be an SVGElement: it has inconsistent focus support.\n\n    More information: https://github.com/atlassian/react-beautiful-dnd/tree/master/docs/guides/dragging-svgs.md") : invariant(false) : void 0;
	};

	var getDragHandleRef = function getDragHandleRef(draggableRef) {
	  if (draggableRef.hasAttribute(dragHandle)) {
	    throwIfSVG(draggableRef);
	    return draggableRef;
	  }

	  var el = draggableRef.querySelector(selector);
	  throwIfSVG(draggableRef);
	  !el ? process.env.NODE_ENV !== "production" ? invariant(false, "\n      Cannot find drag handle element inside of Draggable.\n      Please be sure to apply the {...provided.dragHandleProps} to your Draggable\n\n      More information: https://github.com/atlassian/react-beautiful-dnd#draggable\n    ") : invariant(false) : void 0;
	  !(el instanceof HTMLElement) ? process.env.NODE_ENV !== "production" ? invariant(false, 'A drag handle must be a HTMLElement') : invariant(false) : void 0;
	  return el;
	};

	var retainingFocusFor = null;
	var listenerOptions$1 = {
	  capture: true
	};

	var clearRetentionOnFocusChange = function () {
	  var isBound = false;

	  var bind = function bind() {
	    if (isBound) {
	      return;
	    }

	    isBound = true;
	    window.addEventListener('focus', onWindowFocusChange, listenerOptions$1);
	  };

	  var unbind = function unbind() {
	    if (!isBound) {
	      return;
	    }

	    isBound = false;
	    window.removeEventListener('focus', onWindowFocusChange, listenerOptions$1);
	  };

	  var onWindowFocusChange = function onWindowFocusChange() {
	    unbind();
	    retainingFocusFor = null;
	  };

	  var result = function result() {
	    return bind();
	  };

	  result.cancel = function () {
	    return unbind();
	  };

	  return result;
	}();

	var retain = function retain(id) {
	  retainingFocusFor = id;
	  clearRetentionOnFocusChange();
	};

	var tryRestoreFocus = function tryRestoreFocus(id, draggableRef) {
	  if (!retainingFocusFor) {
	    return;
	  }

	  if (id !== retainingFocusFor) {
	    return;
	  }

	  retainingFocusFor = null;
	  clearRetentionOnFocusChange.cancel();
	  var dragHandleRef = getDragHandleRef(draggableRef);

	  if (!dragHandleRef) {
	    console.warn('Could not find drag handle in the DOM to focus on it');
	    return;
	  }

	  dragHandleRef.focus();
	};

	var retainer = {
	  retain: retain,
	  tryRestoreFocus: tryRestoreFocus
	};

	var interactiveTagNames = {
	  input: true,
	  button: true,
	  textarea: true,
	  select: true,
	  option: true,
	  optgroup: true,
	  video: true,
	  audio: true
	};

	var isAnInteractiveElement = function isAnInteractiveElement(parent, current) {
	  if (current == null) {
	    return false;
	  }

	  var hasAnInteractiveTag = Boolean(interactiveTagNames[current.tagName.toLowerCase()]);

	  if (hasAnInteractiveTag) {
	    return true;
	  }

	  var attribute = current.getAttribute('contenteditable');

	  if (attribute === 'true' || attribute === '') {
	    return true;
	  }

	  if (current === parent) {
	    return false;
	  }

	  return isAnInteractiveElement(parent, current.parentElement);
	};

	var shouldAllowDraggingFromTarget = (function (event, props) {
	  if (props.canDragInteractiveElements) {
	    return true;
	  }

	  var target = event.target,
	      currentTarget = event.currentTarget;

	  if (!(target instanceof Element) || !(currentTarget instanceof Element)) {
	    return true;
	  }

	  return !isAnInteractiveElement(currentTarget, target);
	});

	var createScheduler = (function (callbacks) {
	  var memoizedMove = memoizeOne(function (x, y) {
	    var point = {
	      x: x,
	      y: y
	    };
	    callbacks.onMove(point);
	  });
	  var move = rafSchd(function (point) {
	    return memoizedMove(point.x, point.y);
	  });
	  var moveUp = rafSchd(callbacks.onMoveUp);
	  var moveDown = rafSchd(callbacks.onMoveDown);
	  var moveRight = rafSchd(callbacks.onMoveRight);
	  var moveLeft = rafSchd(callbacks.onMoveLeft);
	  var windowScrollMove = rafSchd(callbacks.onWindowScroll);

	  var cancel = function cancel() {
	    move.cancel();
	    moveUp.cancel();
	    moveDown.cancel();
	    moveRight.cancel();
	    moveLeft.cancel();
	    windowScrollMove.cancel();
	  };

	  return {
	    move: move,
	    moveUp: moveUp,
	    moveDown: moveDown,
	    moveRight: moveRight,
	    moveLeft: moveLeft,
	    windowScrollMove: windowScrollMove,
	    cancel: cancel
	  };
	});

	var sloppyClickThreshold = 5;
	var isSloppyClickThresholdExceeded = (function (original, current) {
	  return Math.abs(current.x - original.x) >= sloppyClickThreshold || Math.abs(current.y - original.y) >= sloppyClickThreshold;
	});

	var tab = 9;
	var enter = 13;
	var escape = 27;
	var space = 32;
	var pageUp = 33;
	var pageDown = 34;
	var end = 35;
	var home = 36;
	var arrowLeft = 37;
	var arrowUp = 38;
	var arrowRight = 39;
	var arrowDown = 40;

	var _preventedKeys;
	var preventedKeys = (_preventedKeys = {}, _preventedKeys[enter] = true, _preventedKeys[tab] = true, _preventedKeys);
	var preventStandardKeyEvents = (function (event) {
	  if (preventedKeys[event.keyCode]) {
	    event.preventDefault();
	  }
	});

	var getOptions = function getOptions(shared, fromBinding) {
	  return _extends({}, shared, fromBinding);
	};

	var bindEvents = function bindEvents(el, bindings, sharedOptions) {
	  bindings.forEach(function (binding) {
	    var options = getOptions(sharedOptions, binding.options);
	    el.addEventListener(binding.eventName, binding.fn, options);
	  });
	};
	var unbindEvents = function unbindEvents(el, bindings, sharedOptions) {
	  bindings.forEach(function (binding) {
	    var options = getOptions(sharedOptions, binding.options);
	    el.removeEventListener(binding.eventName, binding.fn, options);
	  });
	};

	var sharedOptions = {
	  capture: true
	};
	var createPostDragEventPreventer = (function (getWindow) {
	  var isBound = false;

	  var bind = function bind() {
	    if (isBound) {
	      return;
	    }

	    isBound = true;
	    bindEvents(getWindow(), pointerEvents, sharedOptions);
	  };

	  var unbind = function unbind() {
	    if (!isBound) {
	      return;
	    }

	    isBound = false;
	    unbindEvents(getWindow(), pointerEvents, sharedOptions);
	  };

	  var pointerEvents = [{
	    eventName: 'click',
	    fn: function fn(event) {
	      event.preventDefault();
	      unbind();
	    }
	  }, {
	    eventName: 'mousedown',
	    fn: unbind
	  }, {
	    eventName: 'touchstart',
	    fn: unbind
	  }];

	  var preventNext = function preventNext() {
	    if (isBound) {
	      unbind();
	    }

	    bind();
	  };

	  var preventer = {
	    preventNext: preventNext,
	    abort: unbind
	  };
	  return preventer;
	});

	var createEventMarshal = (function () {
	  var isMouseDownHandled = false;

	  var handle = function handle() {
	    !!isMouseDownHandled ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot handle mouse down as it is already handled') : invariant(false) : void 0;
	    isMouseDownHandled = true;
	  };

	  var isHandled = function isHandled() {
	    return isMouseDownHandled;
	  };

	  var reset = function reset() {
	    isMouseDownHandled = false;
	  };

	  return {
	    handle: handle,
	    isHandled: isHandled,
	    reset: reset
	  };
	});

	var supportedEventName = function () {
	  var base = 'visibilitychange';

	  if (typeof document === 'undefined') {
	    return base;
	  }

	  var candidates = [base, "ms" + base, "webkit" + base, "moz" + base, "o" + base];
	  var supported = candidates.find(function (eventName) {
	    return "on" + eventName in document;
	  });
	  return supported || base;
	}();

	var primaryButton = 0;

	var noop = function noop() {};

	var mouseDownMarshal = createEventMarshal();
	var createMouseSensor = (function (_ref) {
	  var callbacks = _ref.callbacks,
	      getWindow = _ref.getWindow,
	      canStartCapturing = _ref.canStartCapturing;
	  var state = {
	    isDragging: false,
	    pending: null
	  };

	  var setState = function setState(newState) {
	    state = newState;
	  };

	  var isDragging = function isDragging() {
	    return state.isDragging;
	  };

	  var isCapturing = function isCapturing() {
	    return Boolean(state.pending || state.isDragging);
	  };

	  var schedule = createScheduler(callbacks);
	  var postDragEventPreventer = createPostDragEventPreventer(getWindow);

	  var startDragging = function startDragging(fn) {
	    if (fn === void 0) {
	      fn = noop;
	    }

	    setState({
	      pending: null,
	      isDragging: true
	    });
	    fn();
	  };

	  var stopDragging = function stopDragging(fn, shouldBlockClick) {
	    if (fn === void 0) {
	      fn = noop;
	    }

	    if (shouldBlockClick === void 0) {
	      shouldBlockClick = true;
	    }

	    schedule.cancel();
	    unbindWindowEvents();
	    mouseDownMarshal.reset();

	    if (shouldBlockClick) {
	      postDragEventPreventer.preventNext();
	    }

	    setState({
	      isDragging: false,
	      pending: null
	    });
	    fn();
	  };

	  var startPendingDrag = function startPendingDrag(point) {
	    setState({
	      pending: point,
	      isDragging: false
	    });
	    bindWindowEvents();
	  };

	  var stopPendingDrag = function stopPendingDrag() {
	    stopDragging(noop, false);
	  };

	  var kill = function kill(fn) {
	    if (fn === void 0) {
	      fn = noop;
	    }

	    if (state.pending) {
	      stopPendingDrag();
	      return;
	    }

	    stopDragging(fn);
	  };

	  var unmount = function unmount() {
	    kill();
	    postDragEventPreventer.abort();
	  };

	  var cancel = function cancel() {
	    kill(callbacks.onCancel);
	  };

	  var windowBindings = [{
	    eventName: 'mousemove',
	    fn: function fn(event) {
	      var button = event.button,
	          clientX = event.clientX,
	          clientY = event.clientY;

	      if (button !== primaryButton) {
	        return;
	      }

	      var point = {
	        x: clientX,
	        y: clientY
	      };

	      if (state.isDragging) {
	        event.preventDefault();
	        schedule.move(point);
	        return;
	      }

	      if (!state.pending) {
	        kill();
	        process.env.NODE_ENV !== "production" ? invariant(false, 'Expected there to be a pending drag') : invariant(false);
	      }

	      if (!isSloppyClickThresholdExceeded(state.pending, point)) {
	        return;
	      }

	      event.preventDefault();
	      startDragging(function () {
	        return callbacks.onLift({
	          clientSelection: point,
	          autoScrollMode: 'FLUID'
	        });
	      });
	    }
	  }, {
	    eventName: 'mouseup',
	    fn: function fn(event) {
	      if (state.pending) {
	        stopPendingDrag();
	        return;
	      }

	      event.preventDefault();
	      stopDragging(callbacks.onDrop);
	    }
	  }, {
	    eventName: 'mousedown',
	    fn: function fn(event) {
	      if (state.isDragging) {
	        event.preventDefault();
	      }

	      stopDragging(callbacks.onCancel);
	    }
	  }, {
	    eventName: 'keydown',
	    fn: function fn(event) {
	      if (!state.isDragging) {
	        cancel();
	        return;
	      }

	      if (event.keyCode === escape) {
	        event.preventDefault();
	        cancel();
	        return;
	      }

	      preventStandardKeyEvents(event);
	    }
	  }, {
	    eventName: 'resize',
	    fn: cancel
	  }, {
	    eventName: 'scroll',
	    options: {
	      passive: true,
	      capture: false
	    },
	    fn: function fn() {
	      if (state.pending) {
	        stopPendingDrag();
	        return;
	      }

	      schedule.windowScrollMove();
	    }
	  }, {
	    eventName: 'webkitmouseforcechanged',
	    fn: function fn(event) {
	      if (event.webkitForce == null || MouseEvent.WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN == null) {
	        if (process.env.NODE_ENV !== 'production') {
	          console.warn('handling a mouse force changed event when it is not supported');
	        }

	        return;
	      }

	      var forcePressThreshold = MouseEvent.WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN;
	      var isForcePressing = event.webkitForce >= forcePressThreshold;

	      if (isForcePressing) {
	        cancel();
	      }
	    }
	  }, {
	    eventName: supportedEventName,
	    fn: cancel
	  }];

	  var bindWindowEvents = function bindWindowEvents() {
	    var win = getWindow();
	    bindEvents(win, windowBindings, {
	      capture: true
	    });
	  };

	  var unbindWindowEvents = function unbindWindowEvents() {
	    var win = getWindow();
	    unbindEvents(win, windowBindings, {
	      capture: true
	    });
	  };

	  var onMouseDown = function onMouseDown(event) {
	    if (mouseDownMarshal.isHandled()) {
	      return;
	    }

	    !!isCapturing() ? process.env.NODE_ENV !== "production" ? invariant(false, 'Should not be able to perform a mouse down while a drag or pending drag is occurring') : invariant(false) : void 0;

	    if (!canStartCapturing(event)) {
	      return;
	    }

	    if (event.button !== primaryButton) {
	      return;
	    }

	    if (event.ctrlKey || event.metaKey || event.shiftKey || event.altKey) {
	      return;
	    }

	    mouseDownMarshal.handle();
	    event.preventDefault();
	    var point = {
	      x: event.clientX,
	      y: event.clientY
	    };
	    startPendingDrag(point);
	  };

	  var sensor = {
	    onMouseDown: onMouseDown,
	    kill: kill,
	    isCapturing: isCapturing,
	    isDragging: isDragging,
	    unmount: unmount
	  };
	  return sensor;
	});

	var getBorderBoxCenterPosition = (function (el) {
	  return cssBoxModel.getRect(el.getBoundingClientRect()).center;
	});

	var _scrollJumpKeys;
	var scrollJumpKeys = (_scrollJumpKeys = {}, _scrollJumpKeys[pageDown] = true, _scrollJumpKeys[pageUp] = true, _scrollJumpKeys[home] = true, _scrollJumpKeys[end] = true, _scrollJumpKeys);

	var noop$1 = function noop() {};

	var createKeyboardSensor = (function (_ref) {
	  var callbacks = _ref.callbacks,
	      getWindow = _ref.getWindow,
	      getDraggableRef = _ref.getDraggableRef,
	      canStartCapturing = _ref.canStartCapturing;
	  var state = {
	    isDragging: false
	  };

	  var setState = function setState(newState) {
	    state = newState;
	  };

	  var startDragging = function startDragging(fn) {
	    if (fn === void 0) {
	      fn = noop$1;
	    }

	    setState({
	      isDragging: true
	    });
	    bindWindowEvents();
	    fn();
	  };

	  var stopDragging = function stopDragging(fn) {
	    if (fn === void 0) {
	      fn = noop$1;
	    }

	    schedule.cancel();
	    unbindWindowEvents();
	    setState({
	      isDragging: false
	    });
	    fn();
	  };

	  var kill = function kill() {
	    return stopDragging();
	  };

	  var cancel = function cancel() {
	    stopDragging(callbacks.onCancel);
	  };

	  var isDragging = function isDragging() {
	    return state.isDragging;
	  };

	  var schedule = createScheduler(callbacks);

	  var onKeyDown = function onKeyDown(event) {
	    if (!isDragging()) {
	      if (event.defaultPrevented) {
	        return;
	      }

	      if (!canStartCapturing(event)) {
	        return;
	      }

	      if (event.keyCode !== space) {
	        return;
	      }

	      var ref = getDraggableRef();
	      !ref ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot start a keyboard drag without a draggable ref') : invariant(false) : void 0;
	      var center = getBorderBoxCenterPosition(ref);
	      event.preventDefault();
	      startDragging(function () {
	        return callbacks.onLift({
	          clientSelection: center,
	          autoScrollMode: 'JUMP'
	        });
	      });
	      return;
	    }

	    if (event.keyCode === escape) {
	      event.preventDefault();
	      cancel();
	      return;
	    }

	    if (event.keyCode === space) {
	      event.preventDefault();
	      stopDragging(callbacks.onDrop);
	      return;
	    }

	    if (event.keyCode === arrowDown) {
	      event.preventDefault();
	      schedule.moveDown();
	      return;
	    }

	    if (event.keyCode === arrowUp) {
	      event.preventDefault();
	      schedule.moveUp();
	      return;
	    }

	    if (event.keyCode === arrowRight) {
	      event.preventDefault();
	      schedule.moveRight();
	      return;
	    }

	    if (event.keyCode === arrowLeft) {
	      event.preventDefault();
	      schedule.moveLeft();
	      return;
	    }

	    if (scrollJumpKeys[event.keyCode]) {
	      event.preventDefault();
	      return;
	    }

	    preventStandardKeyEvents(event);
	  };

	  var windowBindings = [{
	    eventName: 'mousedown',
	    fn: cancel
	  }, {
	    eventName: 'mouseup',
	    fn: cancel
	  }, {
	    eventName: 'click',
	    fn: cancel
	  }, {
	    eventName: 'touchstart',
	    fn: cancel
	  }, {
	    eventName: 'resize',
	    fn: cancel
	  }, {
	    eventName: 'wheel',
	    fn: cancel
	  }, {
	    eventName: 'scroll',
	    options: {
	      capture: false
	    },
	    fn: callbacks.onWindowScroll
	  }, {
	    eventName: supportedEventName,
	    fn: cancel
	  }];

	  var bindWindowEvents = function bindWindowEvents() {
	    bindEvents(getWindow(), windowBindings, {
	      capture: true
	    });
	  };

	  var unbindWindowEvents = function unbindWindowEvents() {
	    unbindEvents(getWindow(), windowBindings, {
	      capture: true
	    });
	  };

	  var sensor = {
	    onKeyDown: onKeyDown,
	    kill: kill,
	    isDragging: isDragging,
	    isCapturing: isDragging,
	    unmount: kill
	  };
	  return sensor;
	});

	var timeForLongPress = 150;
	var forcePressThreshold = 0.15;
	var touchStartMarshal = createEventMarshal();

	var noop$2 = function noop() {};

	var webkitHack = function () {
	  var stub = {
	    preventTouchMove: noop$2,
	    releaseTouchMove: noop$2
	  };

	  if (typeof window === 'undefined') {
	    return stub;
	  }

	  if (!('ontouchstart' in window)) {
	    return stub;
	  }

	  var isBlocking = false;
	  window.addEventListener('touchmove', function (event) {
	    if (!isBlocking) {
	      return;
	    }

	    if (event.defaultPrevented) {
	      return;
	    }

	    event.preventDefault();
	  }, {
	    passive: false,
	    capture: false
	  });

	  var preventTouchMove = function preventTouchMove() {
	    isBlocking = true;
	  };

	  var releaseTouchMove = function releaseTouchMove() {
	    isBlocking = false;
	  };

	  return {
	    preventTouchMove: preventTouchMove,
	    releaseTouchMove: releaseTouchMove
	  };
	}();

	var initial = {
	  isDragging: false,
	  pending: null,
	  hasMoved: false,
	  longPressTimerId: null
	};
	var createTouchSensor = (function (_ref) {
	  var callbacks = _ref.callbacks,
	      getWindow = _ref.getWindow,
	      canStartCapturing = _ref.canStartCapturing;
	  var state = initial;

	  var setState = function setState(partial) {
	    state = _extends({}, state, partial);
	  };

	  var isDragging = function isDragging() {
	    return state.isDragging;
	  };

	  var isCapturing = function isCapturing() {
	    return Boolean(state.pending || state.isDragging || state.longPressTimerId);
	  };

	  var schedule = createScheduler(callbacks);
	  var postDragEventPreventer = createPostDragEventPreventer(getWindow);

	  var startDragging = function startDragging() {
	    var pending = state.pending;

	    if (!pending) {
	      kill();
	      process.env.NODE_ENV !== "production" ? invariant(false, 'cannot start a touch drag without a pending position') : invariant(false);
	    }

	    setState({
	      isDragging: true,
	      hasMoved: false,
	      pending: null,
	      longPressTimerId: null
	    });
	    callbacks.onLift({
	      clientSelection: pending,
	      autoScrollMode: 'FLUID'
	    });
	  };

	  var stopDragging = function stopDragging(fn) {
	    if (fn === void 0) {
	      fn = noop$2;
	    }

	    schedule.cancel();
	    touchStartMarshal.reset();
	    webkitHack.releaseTouchMove();
	    unbindWindowEvents();
	    postDragEventPreventer.preventNext();
	    setState(initial);
	    fn();
	  };

	  var startPendingDrag = function startPendingDrag(event) {
	    var touch = event.touches[0];
	    var clientX = touch.clientX,
	        clientY = touch.clientY;
	    var point = {
	      x: clientX,
	      y: clientY
	    };
	    var longPressTimerId = setTimeout(startDragging, timeForLongPress);
	    setState({
	      longPressTimerId: longPressTimerId,
	      pending: point,
	      isDragging: false,
	      hasMoved: false
	    });
	    bindWindowEvents();
	  };

	  var stopPendingDrag = function stopPendingDrag() {
	    if (state.longPressTimerId) {
	      clearTimeout(state.longPressTimerId);
	    }

	    schedule.cancel();
	    touchStartMarshal.reset();
	    webkitHack.releaseTouchMove();
	    unbindWindowEvents();
	    setState(initial);
	  };

	  var kill = function kill(fn) {
	    if (fn === void 0) {
	      fn = noop$2;
	    }

	    if (state.pending) {
	      stopPendingDrag();
	      return;
	    }

	    stopDragging(fn);
	  };

	  var unmount = function unmount() {
	    kill();
	    postDragEventPreventer.abort();
	  };

	  var cancel = function cancel() {
	    kill(callbacks.onCancel);
	  };

	  var windowBindings = [{
	    eventName: 'touchmove',
	    options: {
	      passive: false
	    },
	    fn: function fn(event) {
	      if (!state.isDragging) {
	        stopPendingDrag();
	        return;
	      }

	      if (!state.hasMoved) {
	        setState({
	          hasMoved: true
	        });
	      }

	      var _event$touches$ = event.touches[0],
	          clientX = _event$touches$.clientX,
	          clientY = _event$touches$.clientY;
	      var point = {
	        x: clientX,
	        y: clientY
	      };
	      event.preventDefault();
	      schedule.move(point);
	    }
	  }, {
	    eventName: 'touchend',
	    fn: function fn(event) {
	      if (!state.isDragging) {
	        stopPendingDrag();
	        return;
	      }

	      event.preventDefault();
	      stopDragging(callbacks.onDrop);
	    }
	  }, {
	    eventName: 'touchcancel',
	    fn: function fn(event) {
	      if (!state.isDragging) {
	        stopPendingDrag();
	        return;
	      }

	      event.preventDefault();
	      stopDragging(callbacks.onCancel);
	    }
	  }, {
	    eventName: 'touchstart',
	    fn: cancel
	  }, {
	    eventName: 'orientationchange',
	    fn: cancel
	  }, {
	    eventName: 'resize',
	    fn: cancel
	  }, {
	    eventName: 'scroll',
	    options: {
	      passive: true,
	      capture: false
	    },
	    fn: function fn() {
	      if (state.pending) {
	        stopPendingDrag();
	        return;
	      }

	      schedule.windowScrollMove();
	    }
	  }, {
	    eventName: 'contextmenu',
	    fn: function fn(event) {
	      event.preventDefault();
	    }
	  }, {
	    eventName: 'keydown',
	    fn: function fn(event) {
	      if (!state.isDragging) {
	        cancel();
	        return;
	      }

	      if (event.keyCode === escape) {
	        event.preventDefault();
	      }

	      cancel();
	    }
	  }, {
	    eventName: 'touchforcechange',
	    fn: function fn(event) {
	      if (state.hasMoved) {
	        event.preventDefault();
	        return;
	      }

	      var touch = event.touches[0];

	      if (touch.force >= forcePressThreshold) {
	        cancel();
	      }
	    }
	  }, {
	    eventName: supportedEventName,
	    fn: cancel
	  }];

	  var bindWindowEvents = function bindWindowEvents() {
	    bindEvents(getWindow(), windowBindings, {
	      capture: true
	    });
	  };

	  var unbindWindowEvents = function unbindWindowEvents() {
	    unbindEvents(getWindow(), windowBindings, {
	      capture: true
	    });
	  };

	  var onTouchStart = function onTouchStart(event) {
	    if (touchStartMarshal.isHandled()) {
	      return;
	    }

	    !!isCapturing() ? process.env.NODE_ENV !== "production" ? invariant(false, 'Should not be able to perform a touch start while a drag or pending drag is occurring') : invariant(false) : void 0;

	    if (!canStartCapturing(event)) {
	      return;
	    }

	    touchStartMarshal.handle();
	    webkitHack.preventTouchMove();
	    startPendingDrag(event);
	  };

	  var sensor = {
	    onTouchStart: onTouchStart,
	    kill: kill,
	    isCapturing: isCapturing,
	    isDragging: isDragging,
	    unmount: unmount
	  };
	  return sensor;
	});

	var _DragHandle$contextTy;

	var preventHtml5Dnd = function preventHtml5Dnd(event) {
	  event.preventDefault();
	};

	var DragHandle = function (_Component) {
	  _inheritsLoose(DragHandle, _Component);

	  function DragHandle(props, context) {
	    var _this;

	    _this = _Component.call(this, props, context) || this;
	    _this.mouseSensor = void 0;
	    _this.keyboardSensor = void 0;
	    _this.touchSensor = void 0;
	    _this.sensors = void 0;
	    _this.styleContext = void 0;
	    _this.canLift = void 0;
	    _this.isFocused = false;
	    _this.lastDraggableRef = void 0;

	    _this.onFocus = function () {
	      _this.isFocused = true;
	    };

	    _this.onBlur = function () {
	      _this.isFocused = false;
	    };

	    _this.onKeyDown = function (event) {
	      if (_this.mouseSensor.isCapturing() || _this.touchSensor.isCapturing()) {
	        return;
	      }

	      _this.keyboardSensor.onKeyDown(event);
	    };

	    _this.onMouseDown = function (event) {
	      if (_this.keyboardSensor.isCapturing() || _this.mouseSensor.isCapturing()) {
	        return;
	      }

	      _this.mouseSensor.onMouseDown(event);
	    };

	    _this.onTouchStart = function (event) {
	      if (_this.mouseSensor.isCapturing() || _this.keyboardSensor.isCapturing()) {
	        return;
	      }

	      _this.touchSensor.onTouchStart(event);
	    };

	    _this.canStartCapturing = function (event) {
	      if (_this.isAnySensorCapturing()) {
	        return false;
	      }

	      if (!_this.canLift(_this.props.draggableId)) {
	        return false;
	      }

	      return shouldAllowDraggingFromTarget(event, _this.props);
	    };

	    _this.isAnySensorCapturing = function () {
	      return _this.sensors.some(function (sensor) {
	        return sensor.isCapturing();
	      });
	    };

	    _this.getProvided = memoizeOne(function (isEnabled) {
	      if (!isEnabled) {
	        return null;
	      }

	      var provided = {
	        onMouseDown: _this.onMouseDown,
	        onKeyDown: _this.onKeyDown,
	        onTouchStart: _this.onTouchStart,
	        onFocus: _this.onFocus,
	        onBlur: _this.onBlur,
	        tabIndex: 0,
	        'data-react-beautiful-dnd-drag-handle': _this.styleContext,
	        'aria-roledescription': 'Draggable item. Press space bar to lift',
	        draggable: false,
	        onDragStart: preventHtml5Dnd
	      };
	      return provided;
	    });

	    var getWindow = function getWindow() {
	      return getWindowFromRef(_this.props.getDraggableRef());
	    };

	    var args = {
	      callbacks: _this.props.callbacks,
	      getDraggableRef: _this.props.getDraggableRef,
	      getWindow: getWindow,
	      canStartCapturing: _this.canStartCapturing
	    };
	    _this.mouseSensor = createMouseSensor(args);
	    _this.keyboardSensor = createKeyboardSensor(args);
	    _this.touchSensor = createTouchSensor(args);
	    _this.sensors = [_this.mouseSensor, _this.keyboardSensor, _this.touchSensor];
	    _this.styleContext = context[styleContextKey];
	    _this.canLift = context[canLiftContextKey];
	    return _this;
	  }

	  var _proto = DragHandle.prototype;

	  _proto.componentDidMount = function componentDidMount() {
	    var draggableRef = this.props.getDraggableRef();
	    this.lastDraggableRef = draggableRef;
	    !draggableRef ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot get draggable ref from drag handle') : invariant(false) : void 0;

	    if (!this.props.isEnabled) {
	      return;
	    }

	    var dragHandleRef = getDragHandleRef(draggableRef);
	    retainer.tryRestoreFocus(this.props.draggableId, dragHandleRef);
	  };

	  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
	    var _this2 = this;

	    var ref = this.props.getDraggableRef();

	    if (ref !== this.lastDraggableRef) {
	      this.lastDraggableRef = ref;

	      if (!ref || !this.isFocused) {
	        return;
	      }

	      if (!this.props.isEnabled) {
	        return;
	      }

	      getDragHandleRef(ref).focus();
	    }

	    var isCapturing = this.isAnySensorCapturing();

	    if (!isCapturing) {
	      return;
	    }

	    var isDragStopping = prevProps.isDragging && !this.props.isDragging;

	    if (isDragStopping) {
	      this.sensors.forEach(function (sensor) {
	        if (sensor.isCapturing()) {
	          sensor.kill();
	        }
	      });
	    }

	    if (this.props.isEnabled) {
	      return;
	    }

	    this.sensors.forEach(function (sensor) {
	      if (!sensor.isCapturing()) {
	        return;
	      }

	      var wasDragging = sensor.isDragging();
	      sensor.kill();

	      if (wasDragging) {
	        if (process.env.NODE_ENV !== 'production') {
	          console.warn('You have disabled dragging on a Draggable while it was dragging. The drag has been cancelled');
	        }

	        _this2.props.callbacks.onCancel();
	      }
	    });
	  };

	  _proto.componentWillUnmount = function componentWillUnmount() {
	    var _this3 = this;

	    this.sensors.forEach(function (sensor) {
	      var wasDragging = sensor.isDragging();
	      sensor.unmount();

	      if (wasDragging) {
	        _this3.props.callbacks.onCancel();
	      }
	    });

	    var shouldRetainFocus = function () {
	      if (!_this3.props.isEnabled) {
	        return false;
	      }

	      if (!_this3.isFocused) {
	        return false;
	      }

	      return _this3.props.isDragging || _this3.props.isDropAnimating;
	    }();

	    if (shouldRetainFocus) {
	      retainer.retain(this.props.draggableId);
	    }
	  };

	  _proto.render = function render() {
	    var _this$props = this.props,
	        children = _this$props.children,
	        isEnabled = _this$props.isEnabled;
	    return children(this.getProvided(isEnabled));
	  };

	  return DragHandle;
	}(React.Component);

	DragHandle.contextTypes = (_DragHandle$contextTy = {}, _DragHandle$contextTy[styleContextKey] = PropTypes.string.isRequired, _DragHandle$contextTy[canLiftContextKey] = PropTypes.func.isRequired, _DragHandle$contextTy);

	var getWindowScroll = (function () {
	  return {
	    x: window.pageXOffset,
	    y: window.pageYOffset
	  };
	});

	var getViewport = (function () {
	  var scroll = getWindowScroll();
	  var top = scroll.y;
	  var left = scroll.x;
	  var doc = document.documentElement;
	  !doc ? process.env.NODE_ENV !== "production" ? invariant(false, 'Could not find document.documentElement') : invariant(false) : void 0;
	  var width = doc.clientWidth;
	  var height = doc.clientHeight;
	  var right = left + width;
	  var bottom = top + height;
	  var frame = cssBoxModel.getRect({
	    top: top,
	    left: left,
	    right: right,
	    bottom: bottom
	  });
	  var maxScroll = getMaxScroll({
	    scrollHeight: doc.scrollHeight,
	    scrollWidth: doc.scrollWidth,
	    width: frame.width,
	    height: frame.height
	  });
	  var viewport = {
	    frame: frame,
	    scroll: {
	      initial: scroll,
	      current: scroll,
	      max: maxScroll,
	      diff: {
	        value: origin,
	        displacement: origin
	      }
	    }
	  };
	  return viewport;
	});

	var _Draggable$contextTyp;
	var zIndexOptions = {
	  dragging: 5000,
	  dropAnimating: 4500
	};

	var getTranslate = function getTranslate(offset) {
	  if (isEqual(offset, origin)) {
	    return null;
	  }

	  return "translate(" + offset.x + "px, " + offset.y + "px)";
	};

	var getSpeed$1 = function getSpeed(isDragging, shouldAnimateDragMovement, isDropAnimating) {
	  if (isDropAnimating) {
	    return 'STANDARD';
	  }

	  if (isDragging && shouldAnimateDragMovement) {
	    return 'FAST';
	  }

	  return 'INSTANT';
	};

	var Draggable = function (_Component) {
	  _inheritsLoose(Draggable, _Component);

	  function Draggable(props, context) {
	    var _this;

	    _this = _Component.call(this, props, context) || this;
	    _this.callbacks = void 0;
	    _this.styleContext = void 0;
	    _this.ref = null;

	    _this.onMoveEnd = function () {
	      if (_this.props.isDropAnimating) {
	        _this.props.dropAnimationFinished();
	      }
	    };

	    _this.onLift = function (options) {
	      start('LIFT');
	      var ref = _this.ref;
	      !ref ? process.env.NODE_ENV !== "production" ? invariant(false) : invariant(false) : void 0;
	      !!_this.props.isDragDisabled ? process.env.NODE_ENV !== "production" ? invariant(false, 'Cannot lift a Draggable when it is disabled') : invariant(false) : void 0;
	      var clientSelection = options.clientSelection,
	          autoScrollMode = options.autoScrollMode;
	      var _this$props = _this.props,
	          lift = _this$props.lift,
	          draggableId = _this$props.draggableId;
	      var client = {
	        selection: clientSelection,
	        borderBoxCenter: getBorderBoxCenterPosition(ref),
	        offset: origin
	      };
	      lift({
	        id: draggableId,
	        client: client,
	        autoScrollMode: autoScrollMode,
	        viewport: getViewport()
	      });
	      finish('LIFT');
	    };

	    _this.setRef = function (ref) {
	      if (ref === null) {
	        return;
	      }

	      if (ref === _this.ref) {
	        return;
	      }

	      _this.ref = ref;
	      throwIfRefIsInvalid(ref);
	    };

	    _this.getDraggableRef = function () {
	      return _this.ref;
	    };

	    _this.getDraggingStyle = memoizeOne(function (change, dimension, isDropAnimating) {
	      var box = dimension.client;
	      var style = {
	        position: 'fixed',
	        top: box.marginBox.top,
	        left: box.marginBox.left,
	        boxSizing: 'border-box',
	        width: box.borderBox.width,
	        height: box.borderBox.height,
	        transition: 'none',
	        zIndex: isDropAnimating ? zIndexOptions.dropAnimating : zIndexOptions.dragging,
	        transform: getTranslate(change),
	        pointerEvents: 'none'
	      };
	      return style;
	    });
	    _this.getNotDraggingStyle = memoizeOne(function (current, shouldAnimateDisplacement) {
	      var style = {
	        transform: getTranslate(current),
	        transition: shouldAnimateDisplacement ? null : 'none'
	      };
	      return style;
	    });
	    _this.getProvided = memoizeOne(function (change, isDragging, isDropAnimating, shouldAnimateDisplacement, dimension, dragHandleProps) {
	      var useDraggingStyle = isDragging || isDropAnimating;

	      var draggableStyle = function () {
	        if (!useDraggingStyle) {
	          return _this.getNotDraggingStyle(change, shouldAnimateDisplacement);
	        }

	        !dimension ? process.env.NODE_ENV !== "production" ? invariant(false, 'draggable dimension required for dragging') : invariant(false) : void 0;
	        return _this.getDraggingStyle(change, dimension, isDropAnimating);
	      }();

	      var provided = {
	        innerRef: _this.setRef,
	        draggableProps: {
	          'data-react-beautiful-dnd-draggable': _this.styleContext,
	          style: draggableStyle
	        },
	        dragHandleProps: dragHandleProps
	      };
	      return provided;
	    });
	    _this.getSnapshot = memoizeOne(function (isDragging, isDropAnimating, draggingOver) {
	      return {
	        isDragging: isDragging || isDropAnimating,
	        isDropAnimating: isDropAnimating,
	        draggingOver: draggingOver
	      };
	    });

	    _this.renderChildren = function (change, dragHandleProps) {
	      var _this$props2 = _this.props,
	          isDragging = _this$props2.isDragging,
	          isDropAnimating = _this$props2.isDropAnimating,
	          dimension = _this$props2.dimension,
	          draggingOver = _this$props2.draggingOver,
	          shouldAnimateDisplacement = _this$props2.shouldAnimateDisplacement,
	          children = _this$props2.children;
	      var child = children(_this.getProvided(change, isDragging, isDropAnimating, shouldAnimateDisplacement, dimension, dragHandleProps), _this.getSnapshot(isDragging, isDropAnimating, draggingOver));
	      var isDraggingOrDropping = isDragging || isDropAnimating;

	      var placeholder = function () {
	        if (!isDraggingOrDropping) {
	          return null;
	        }

	        !dimension ? process.env.NODE_ENV !== "production" ? invariant(false, 'Draggable: Dimension is required for dragging') : invariant(false) : void 0;
	        return React__default.createElement(Placeholder, {
	          placeholder: dimension.placeholder
	        });
	      }();

	      return React__default.createElement(React.Fragment, null, child, placeholder);
	    };

	    var callbacks = {
	      onLift: _this.onLift,
	      onMove: function onMove(clientSelection) {
	        return props.move({
	          client: clientSelection,
	          shouldAnimate: false
	        });
	      },
	      onDrop: function onDrop() {
	        return props.drop({
	          reason: 'DROP'
	        });
	      },
	      onCancel: function onCancel() {
	        return props.drop({
	          reason: 'CANCEL'
	        });
	      },
	      onMoveUp: props.moveUp,
	      onMoveDown: props.moveDown,
	      onMoveRight: props.moveRight,
	      onMoveLeft: props.moveLeft,
	      onWindowScroll: function onWindowScroll() {
	        return props.moveByWindowScroll({
	          scroll: getWindowScroll()
	        });
	      }
	    };
	    _this.callbacks = callbacks;
	    _this.styleContext = context[styleContextKey];
	    return _this;
	  }

	  var _proto = Draggable.prototype;

	  _proto.componentWillUnmount = function componentWillUnmount() {
	    this.ref = null;
	  };

	  _proto.render = function render() {
	    var _this2 = this;

	    var _this$props3 = this.props,
	        draggableId = _this$props3.draggableId,
	        index = _this$props3.index,
	        offset = _this$props3.offset,
	        isDragging = _this$props3.isDragging,
	        isDropAnimating = _this$props3.isDropAnimating,
	        isDragDisabled = _this$props3.isDragDisabled,
	        shouldAnimateDragMovement = _this$props3.shouldAnimateDragMovement,
	        disableInteractiveElementBlocking = _this$props3.disableInteractiveElementBlocking;
	    var droppableId = this.context[droppableIdKey];
	    var type = this.context[droppableTypeKey];
	    var speed = getSpeed$1(isDragging, shouldAnimateDragMovement, isDropAnimating);
	    return React__default.createElement(DraggableDimensionPublisher, {
	      key: draggableId,
	      draggableId: draggableId,
	      droppableId: droppableId,
	      type: type,
	      index: index,
	      getDraggableRef: this.getDraggableRef
	    }, React__default.createElement(Moveable, {
	      speed: speed,
	      destination: offset,
	      onMoveEnd: this.onMoveEnd
	    }, function (change) {
	      return React__default.createElement(DragHandle, {
	        draggableId: draggableId,
	        isDragging: isDragging,
	        isDropAnimating: isDropAnimating,
	        isEnabled: !isDragDisabled,
	        callbacks: _this2.callbacks,
	        getDraggableRef: _this2.getDraggableRef,
	        canDragInteractiveElements: disableInteractiveElementBlocking
	      }, function (dragHandleProps) {
	        return _this2.renderChildren(change, dragHandleProps);
	      });
	    }));
	  };

	  return Draggable;
	}(React.Component);

	Draggable.contextTypes = (_Draggable$contextTyp = {}, _Draggable$contextTyp[droppableIdKey] = PropTypes.string.isRequired, _Draggable$contextTyp[droppableTypeKey] = PropTypes.string.isRequired, _Draggable$contextTyp[styleContextKey] = PropTypes.string.isRequired, _Draggable$contextTyp);

	var defaultMapProps = {
	  isDropAnimating: false,
	  isDragging: false,
	  offset: origin,
	  shouldAnimateDragMovement: false,
	  shouldAnimateDisplacement: true,
	  dimension: null,
	  draggingOver: null
	};
	var makeMapStateToProps$1 = function makeMapStateToProps() {
	  var memoizedOffset = memoizeOne(function (x, y) {
	    return {
	      x: x,
	      y: y
	    };
	  });
	  var getNotDraggingProps = memoizeOne(function (offset, shouldAnimateDisplacement) {
	    return {
	      isDropAnimating: false,
	      isDragging: false,
	      offset: offset,
	      shouldAnimateDisplacement: shouldAnimateDisplacement,
	      shouldAnimateDragMovement: false,
	      dimension: null,
	      draggingOver: null
	    };
	  });
	  var getDraggingProps = memoizeOne(function (offset, shouldAnimateDragMovement, dimension, draggingOver) {
	    return {
	      isDragging: true,
	      isDropAnimating: false,
	      shouldAnimateDisplacement: false,
	      offset: offset,
	      shouldAnimateDragMovement: shouldAnimateDragMovement,
	      dimension: dimension,
	      draggingOver: draggingOver
	    };
	  });

	  var getOutOfTheWayMovement = function getOutOfTheWayMovement(id, movement) {
	    var map = getDisplacementMap(movement.displaced);
	    var displacement = map[id];

	    if (!displacement) {
	      return null;
	    }

	    if (!displacement.isVisible) {
	      return null;
	    }

	    var amount = movement.isBeyondStartPosition ? negate(movement.amount) : movement.amount;
	    return getNotDraggingProps(memoizedOffset(amount.x, amount.y), displacement.shouldAnimate);
	  };

	  var draggingSelector = function draggingSelector(state, ownProps) {
	    if (state.isDragging) {
	      if (state.critical.draggable.id !== ownProps.draggableId) {
	        return null;
	      }

	      var offset = state.current.client.offset;
	      var dimension = state.dimensions.draggables[ownProps.draggableId];
	      var shouldAnimateDragMovement = state.shouldAnimate;
	      var draggingOver = state.impact.destination ? state.impact.destination.droppableId : null;
	      return getDraggingProps(memoizedOffset(offset.x, offset.y), shouldAnimateDragMovement, dimension, draggingOver);
	    }

	    if (state.phase === 'DROP_ANIMATING') {
	      var pending = state.pending;

	      if (pending.result.draggableId !== ownProps.draggableId) {
	        return null;
	      }

	      var _draggingOver = pending.result.destination ? pending.result.destination.droppableId : null;

	      return {
	        isDragging: false,
	        isDropAnimating: true,
	        offset: pending.newHomeOffset,
	        dimension: state.dimensions.draggables[ownProps.draggableId],
	        draggingOver: _draggingOver,
	        shouldAnimateDragMovement: false,
	        shouldAnimateDisplacement: false
	      };
	    }

	    return null;
	  };

	  var movingOutOfTheWaySelector = function movingOutOfTheWaySelector(state, ownProps) {
	    if (state.isDragging) {
	      if (state.critical.draggable.id === ownProps.draggableId) {
	        return null;
	      }

	      return getOutOfTheWayMovement(ownProps.draggableId, state.impact.movement);
	    }

	    if (state.phase === 'DROP_ANIMATING') {
	      if (state.pending.result.draggableId === ownProps.draggableId) {
	        return null;
	      }

	      return getOutOfTheWayMovement(ownProps.draggableId, state.pending.impact.movement);
	    }

	    return null;
	  };

	  var selector = function selector(state, ownProps) {
	    var dragging = draggingSelector(state, ownProps);

	    if (dragging) {
	      return dragging;
	    }

	    var movingOutOfTheWay = movingOutOfTheWaySelector(state, ownProps);

	    if (movingOutOfTheWay) {
	      return movingOutOfTheWay;
	    }

	    return defaultMapProps;
	  };

	  return selector;
	};
	var mapDispatchToProps = {
	  lift: lift,
	  move: move,
	  moveUp: moveUp,
	  moveDown: moveDown,
	  moveLeft: moveLeft,
	  moveRight: moveRight,
	  moveByWindowScroll: moveByWindowScroll,
	  drop: drop,
	  dropAnimationFinished: dropAnimationFinished
	};
	var ConnectedDraggable = reactRedux.connect(makeMapStateToProps$1, mapDispatchToProps, null, {
	  storeKey: storeKey,
	  pure: true,
	  areStatePropsEqual: isStrictEqual
	})(Draggable);
	ConnectedDraggable.defaultProps = {
	  isDragDisabled: false,
	  disableInteractiveElementBlocking: false
	};

	exports.DragDropContext = DragDropContext;
	exports.Droppable = connectedDroppable;
	exports.Draggable = ConnectedDraggable;
	exports.resetServerContext = resetServerContext;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	var _Object$assign = __webpack_require__(160);

	function _extends() {
	  module.exports = _extends = _Object$assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];

	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }

	    return target;
	  };

	  return _extends.apply(this, arguments);
	}

	module.exports = _extends;

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(161);

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(162);
	module.exports = __webpack_require__(165).Object.assign;


/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(163);

	$export($export.S + $export.F, 'Object', { assign: __webpack_require__(179) });


/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(164);
	var core = __webpack_require__(165);
	var ctx = __webpack_require__(166);
	var hide = __webpack_require__(168);
	var has = __webpack_require__(178);
	var PROTOTYPE = 'prototype';

	var $export = function (type, name, source) {
	  var IS_FORCED = type & $export.F;
	  var IS_GLOBAL = type & $export.G;
	  var IS_STATIC = type & $export.S;
	  var IS_PROTO = type & $export.P;
	  var IS_BIND = type & $export.B;
	  var IS_WRAP = type & $export.W;
	  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
	  var expProto = exports[PROTOTYPE];
	  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
	  var key, own, out;
	  if (IS_GLOBAL) source = name;
	  for (key in source) {
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if (own && has(exports, key)) continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function (C) {
	      var F = function (a, b, c) {
	        if (this instanceof C) {
	          switch (arguments.length) {
	            case 0: return new C();
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if (IS_PROTO) {
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library`
	module.exports = $export;


/***/ },
/* 164 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self
	  // eslint-disable-next-line no-new-func
	  : Function('return this')();
	if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ },
/* 165 */
/***/ function(module, exports) {

	var core = module.exports = { version: '2.5.7' };
	if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(167);
	module.exports = function (fn, that, length) {
	  aFunction(fn);
	  if (that === undefined) return fn;
	  switch (length) {
	    case 1: return function (a) {
	      return fn.call(that, a);
	    };
	    case 2: return function (a, b) {
	      return fn.call(that, a, b);
	    };
	    case 3: return function (a, b, c) {
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function (/* ...args */) {
	    return fn.apply(that, arguments);
	  };
	};


/***/ },
/* 167 */
/***/ function(module, exports) {

	module.exports = function (it) {
	  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
	  return it;
	};


/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(169);
	var createDesc = __webpack_require__(177);
	module.exports = __webpack_require__(173) ? function (object, key, value) {
	  return dP.f(object, key, createDesc(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};


/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(170);
	var IE8_DOM_DEFINE = __webpack_require__(172);
	var toPrimitive = __webpack_require__(176);
	var dP = Object.defineProperty;

	exports.f = __webpack_require__(173) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if (IE8_DOM_DEFINE) try {
	    return dP(O, P, Attributes);
	  } catch (e) { /* empty */ }
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};


/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(171);
	module.exports = function (it) {
	  if (!isObject(it)) throw TypeError(it + ' is not an object!');
	  return it;
	};


/***/ },
/* 171 */
/***/ function(module, exports) {

	module.exports = function (it) {
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};


/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(173) && !__webpack_require__(174)(function () {
	  return Object.defineProperty(__webpack_require__(175)('div'), 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(174)(function () {
	  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ },
/* 174 */
/***/ function(module, exports) {

	module.exports = function (exec) {
	  try {
	    return !!exec();
	  } catch (e) {
	    return true;
	  }
	};


/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(171);
	var document = __webpack_require__(164).document;
	// typeof document.createElement is 'object' in old IE
	var is = isObject(document) && isObject(document.createElement);
	module.exports = function (it) {
	  return is ? document.createElement(it) : {};
	};


/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(171);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function (it, S) {
	  if (!isObject(it)) return it;
	  var fn, val;
	  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  throw TypeError("Can't convert object to primitive value");
	};


/***/ },
/* 177 */
/***/ function(module, exports) {

	module.exports = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};


/***/ },
/* 178 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function (it, key) {
	  return hasOwnProperty.call(it, key);
	};


/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys = __webpack_require__(180);
	var gOPS = __webpack_require__(195);
	var pIE = __webpack_require__(196);
	var toObject = __webpack_require__(197);
	var IObject = __webpack_require__(183);
	var $assign = Object.assign;

	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(174)(function () {
	  var A = {};
	  var B = {};
	  // eslint-disable-next-line no-undef
	  var S = Symbol();
	  var K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function (k) { B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
	  var T = toObject(target);
	  var aLen = arguments.length;
	  var index = 1;
	  var getSymbols = gOPS.f;
	  var isEnum = pIE.f;
	  while (aLen > index) {
	    var S = IObject(arguments[index++]);
	    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
	    var length = keys.length;
	    var j = 0;
	    var key;
	    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
	  } return T;
	} : $assign;


/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys = __webpack_require__(181);
	var enumBugKeys = __webpack_require__(194);

	module.exports = Object.keys || function keys(O) {
	  return $keys(O, enumBugKeys);
	};


/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	var has = __webpack_require__(178);
	var toIObject = __webpack_require__(182);
	var arrayIndexOf = __webpack_require__(186)(false);
	var IE_PROTO = __webpack_require__(190)('IE_PROTO');

	module.exports = function (object, names) {
	  var O = toIObject(object);
	  var i = 0;
	  var result = [];
	  var key;
	  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while (names.length > i) if (has(O, key = names[i++])) {
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};


/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(183);
	var defined = __webpack_require__(185);
	module.exports = function (it) {
	  return IObject(defined(it));
	};


/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(184);
	// eslint-disable-next-line no-prototype-builtins
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};


/***/ },
/* 184 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = function (it) {
	  return toString.call(it).slice(8, -1);
	};


/***/ },
/* 185 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function (it) {
	  if (it == undefined) throw TypeError("Can't call method on  " + it);
	  return it;
	};


/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(182);
	var toLength = __webpack_require__(187);
	var toAbsoluteIndex = __webpack_require__(189);
	module.exports = function (IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIObject($this);
	    var length = toLength(O.length);
	    var index = toAbsoluteIndex(fromIndex, length);
	    var value;
	    // Array#includes uses SameValueZero equality algorithm
	    // eslint-disable-next-line no-self-compare
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      // eslint-disable-next-line no-self-compare
	      if (value != value) return true;
	    // Array#indexOf ignores holes, Array#includes - not
	    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
	      if (O[index] === el) return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};


/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(188);
	var min = Math.min;
	module.exports = function (it) {
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};


/***/ },
/* 188 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil = Math.ceil;
	var floor = Math.floor;
	module.exports = function (it) {
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};


/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(188);
	var max = Math.max;
	var min = Math.min;
	module.exports = function (index, length) {
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};


/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(191)('keys');
	var uid = __webpack_require__(193);
	module.exports = function (key) {
	  return shared[key] || (shared[key] = uid(key));
	};


/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	var core = __webpack_require__(165);
	var global = __webpack_require__(164);
	var SHARED = '__core-js_shared__';
	var store = global[SHARED] || (global[SHARED] = {});

	(module.exports = function (key, value) {
	  return store[key] || (store[key] = value !== undefined ? value : {});
	})('versions', []).push({
	  version: core.version,
	  mode: __webpack_require__(192) ? 'pure' : 'global',
	  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
	});


/***/ },
/* 192 */
/***/ function(module, exports) {

	module.exports = true;


/***/ },
/* 193 */
/***/ function(module, exports) {

	var id = 0;
	var px = Math.random();
	module.exports = function (key) {
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};


/***/ },
/* 194 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');


/***/ },
/* 195 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;


/***/ },
/* 196 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;


/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(185);
	module.exports = function (it) {
	  return Object(defined(it));
	};


/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var isProduction = process.env.NODE_ENV === 'production';
	var prefix = 'Invariant failed';

	var index = (function (condition, message) {
	  if (condition) {
	    return;
	  }


	  if (isProduction) {
	    throw new Error(prefix);
	  } else {
	    throw new Error(prefix + ': ' + (message || ''));
	  }
	});

	module.exports = index;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 199 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', { value: true });

	var getRect = function getRect(_ref) {
	  var top = _ref.top,
	      right = _ref.right,
	      bottom = _ref.bottom,
	      left = _ref.left;

	  var width = right - left;
	  var height = bottom - top;

	  var rect = {
	    top: top,
	    right: right,
	    bottom: bottom,
	    left: left,
	    width: width,
	    height: height,

	    x: left,
	    y: top,

	    center: {
	      x: (right + left) / 2,
	      y: (bottom + top) / 2
	    }
	  };

	  return rect;
	};

	var expand = function expand(target, expandBy) {
	  return {
	    top: target.top - expandBy.top,
	    left: target.left - expandBy.left,

	    bottom: target.bottom + expandBy.bottom,
	    right: target.right + expandBy.right
	  };
	};

	var shrink = function shrink(target, shrinkBy) {
	  return {
	    top: target.top + shrinkBy.top,
	    left: target.left + shrinkBy.left,

	    bottom: target.bottom - shrinkBy.bottom,
	    right: target.right - shrinkBy.right
	  };
	};

	var shift = function shift(spacing, point) {
	  return {
	    top: spacing.top + point.y,
	    left: spacing.left + point.x,
	    bottom: spacing.bottom + point.y,
	    right: spacing.right + point.x
	  };
	};

	var noSpacing = {
	  top: 0,
	  right: 0,
	  bottom: 0,
	  left: 0
	};

	var createBox = function createBox(_ref2) {
	  var borderBox = _ref2.borderBox,
	      _ref2$margin = _ref2.margin,
	      margin = _ref2$margin === undefined ? noSpacing : _ref2$margin,
	      _ref2$border = _ref2.border,
	      border = _ref2$border === undefined ? noSpacing : _ref2$border,
	      _ref2$padding = _ref2.padding,
	      padding = _ref2$padding === undefined ? noSpacing : _ref2$padding;

	  var marginBox = getRect(expand(borderBox, margin));

	  var paddingBox = getRect(shrink(borderBox, border));

	  var contentBox = getRect(shrink(paddingBox, padding));

	  return {
	    marginBox: marginBox,
	    borderBox: getRect(borderBox),
	    paddingBox: paddingBox,
	    contentBox: contentBox,
	    margin: margin,
	    border: border,
	    padding: padding
	  };
	};

	var parse = function parse(value) {
	  return parseInt(value, 10);
	};
	var getWindowScroll = function getWindowScroll() {
	  return {
	    x: window.pageXOffset,
	    y: window.pageYOffset
	  };
	};

	var offset = function offset(original, change) {
	  var borderBox = original.borderBox,
	      border = original.border,
	      margin = original.margin,
	      padding = original.padding;

	  var shifted = shift(borderBox, change);

	  return createBox({
	    borderBox: shifted,
	    border: border,
	    margin: margin,
	    padding: padding
	  });
	};

	var withScroll = function withScroll(original) {
	  var scroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getWindowScroll();
	  return offset(original, scroll);
	};

	var calculateBox = function calculateBox(borderBox, styles) {
	  var margin = {
	    top: parse(styles.marginTop),
	    right: parse(styles.marginRight),
	    bottom: parse(styles.marginBottom),
	    left: parse(styles.marginLeft)
	  };
	  var padding = {
	    top: parse(styles.paddingTop),
	    right: parse(styles.paddingRight),
	    bottom: parse(styles.paddingBottom),
	    left: parse(styles.paddingLeft)
	  };
	  var border = {
	    top: parse(styles.borderTopWidth),
	    right: parse(styles.borderRightWidth),
	    bottom: parse(styles.borderBottomWidth),
	    left: parse(styles.borderLeftWidth)
	  };

	  return createBox({
	    borderBox: borderBox,
	    margin: margin,
	    padding: padding,
	    border: border
	  });
	};

	var getBox = function getBox(el) {
	  var borderBox = el.getBoundingClientRect();
	  var styles = window.getComputedStyle(el);

	  return calculateBox(borderBox, styles);
	};

	exports.getRect = getRect;
	exports.createBox = createBox;
	exports.offset = offset;
	exports.withScroll = withScroll;
	exports.calculateBox = calculateBox;
	exports.getBox = getBox;


/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(201);

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(202);
	module.exports = __webpack_require__(165).Object.keys;


/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(197);
	var $keys = __webpack_require__(180);

	__webpack_require__(203)('keys', function () {
	  return function keys(it) {
	    return $keys(toObject(it));
	  };
	});


/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(163);
	var core = __webpack_require__(165);
	var fails = __webpack_require__(174);
	module.exports = function (KEY, exec) {
	  var fn = (core.Object || {})[KEY] || Object[KEY];
	  var exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
	};


/***/ },
/* 204 */
/***/ function(module, exports) {

	'use strict';

	var simpleIsEqual = function simpleIsEqual(a, b) {
	  return a === b;
	};

	function index (resultFn, isEqual) {
	  if (isEqual === void 0) {
	    isEqual = simpleIsEqual;
	  }

	  var lastThis;
	  var lastArgs = [];
	  var lastResult;
	  var calledOnce = false;

	  var isNewArgEqualToLast = function isNewArgEqualToLast(newArg, index) {
	    return isEqual(newArg, lastArgs[index]);
	  };

	  var result = function result() {
	    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {
	      newArgs[_key] = arguments[_key];
	    }

	    if (calledOnce && lastThis === this && newArgs.length === lastArgs.length && newArgs.every(isNewArgEqualToLast)) {
	      return lastResult;
	    }

	    lastResult = resultFn.apply(this, newArgs);
	    calledOnce = true;
	    lastThis = this;
	    lastArgs = newArgs;
	    return lastResult;
	  };

	  return result;
	}

	module.exports = index;


/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, '__esModule', { value: true });

	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

	var $$observable = _interopDefault(__webpack_require__(206));

	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var ActionTypes = {
	  INIT: '@@redux/INIT' + Math.random().toString(36).substring(7).split('').join('.'),
	  REPLACE: '@@redux/REPLACE' + Math.random().toString(36).substring(7).split('').join('.')
	};

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
	  return typeof obj;
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	};

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];

	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }

	  return target;
	};

	/**
	 * @param {any} obj The object to inspect.
	 * @returns {boolean} True if the argument appears to be a plain object.
	 */
	function isPlainObject(obj) {
	  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) return false;

	  var proto = obj;
	  while (Object.getPrototypeOf(proto) !== null) {
	    proto = Object.getPrototypeOf(proto);
	  }

	  return Object.getPrototypeOf(obj) === proto;
	}

	/**
	 * Creates a Redux store that holds the state tree.
	 * The only way to change the data in the store is to call `dispatch()` on it.
	 *
	 * There should only be a single store in your app. To specify how different
	 * parts of the state tree respond to actions, you may combine several reducers
	 * into a single reducer function by using `combineReducers`.
	 *
	 * @param {Function} reducer A function that returns the next state tree, given
	 * the current state tree and the action to handle.
	 *
	 * @param {any} [preloadedState] The initial state. You may optionally specify it
	 * to hydrate the state from the server in universal apps, or to restore a
	 * previously serialized user session.
	 * If you use `combineReducers` to produce the root reducer function, this must be
	 * an object with the same shape as `combineReducers` keys.
	 *
	 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
	 * to enhance the store with third-party capabilities such as middleware,
	 * time travel, persistence, etc. The only store enhancer that ships with Redux
	 * is `applyMiddleware()`.
	 *
	 * @returns {Store} A Redux store that lets you read the state, dispatch actions
	 * and subscribe to changes.
	 */
	function createStore(reducer, preloadedState, enhancer) {
	  var _ref2;

	  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = preloadedState;
	    preloadedState = undefined;
	  }

	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }

	    return enhancer(createStore)(reducer, preloadedState);
	  }

	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }

	  var currentReducer = reducer;
	  var currentState = preloadedState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;

	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }

	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	  function getState() {
	    if (isDispatching) {
	      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');
	    }

	    return currentState;
	  }

	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * You may call `dispatch()` from a change listener, with the following
	   * caveats:
	   *
	   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	   * If you subscribe or unsubscribe while the listeners are being invoked, this
	   * will not have any effect on the `dispatch()` that is currently in progress.
	   * However, the next `dispatch()` call, whether nested or not, will use a more
	   * recent snapshot of the subscription list.
	   *
	   * 2. The listener should not expect to see all state changes, as the state
	   * might have been updated multiple times during a nested `dispatch()` before
	   * the listener is called. It is, however, guaranteed that all subscribers
	   * registered before the `dispatch()` started will be called with the latest
	   * state by the time it exits.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected the listener to be a function.');
	    }

	    if (isDispatching) {
	      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');
	    }

	    var isSubscribed = true;

	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);

	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }

	      if (isDispatching) {
	        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');
	      }

	      isSubscribed = false;

	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	    };
	  }

	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	  function dispatch(action) {
	    if (!isPlainObject(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }

	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }

	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }

	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }

	    var listeners = currentListeners = nextListeners;
	    for (var i = 0; i < listeners.length; i++) {
	      var listener = listeners[i];
	      listener();
	    }

	    return action;
	  }

	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }

	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.REPLACE });
	  }

	  /**
	   * Interoperability point for observable/reactive libraries.
	   * @returns {observable} A minimal observable of state changes.
	   * For more information, see the observable proposal:
	   * https://github.com/tc39/proposal-observable
	   */
	  function observable() {
	    var _ref;

	    var outerSubscribe = subscribe;
	    return _ref = {
	      /**
	       * The minimal observable subscription method.
	       * @param {Object} observer Any object that can be used as an observer.
	       * The observer object should have a `next` method.
	       * @returns {subscription} An object with an `unsubscribe` method that can
	       * be used to unsubscribe the observable from the store, and prevent further
	       * emission of values from the observable.
	       */
	      subscribe: function subscribe(observer) {
	        if ((typeof observer === 'undefined' ? 'undefined' : _typeof(observer)) !== 'object' || observer === null) {
	          throw new TypeError('Expected the observer to be an object.');
	        }

	        function observeState() {
	          if (observer.next) {
	            observer.next(getState());
	          }
	        }

	        observeState();
	        var unsubscribe = outerSubscribe(observeState);
	        return { unsubscribe: unsubscribe };
	      }
	    }, _ref[$$observable] = function () {
	      return this;
	    }, _ref;
	  }

	  // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	  dispatch({ type: ActionTypes.INIT });

	  return _ref2 = {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  }, _ref2[$$observable] = observable, _ref2;
	}

	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	  } catch (e) {} // eslint-disable-line no-empty
	}

	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionDescription = actionType && 'action "' + String(actionType) + '"' || 'an action';

	  return 'Given ' + actionDescription + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';
	}

	function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
	  var reducerKeys = Object.keys(reducers);
	  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }

	  if (!isPlainObject(inputState)) {
	    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
	  }

	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
	  });

	  unexpectedKeys.forEach(function (key) {
	    unexpectedKeyCache[key] = true;
	  });

	  if (action && action.type === ActionTypes.REPLACE) return;

	  if (unexpectedKeys.length > 0) {
	    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
	  }
	}

	function assertReducerShape(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, { type: ActionTypes.INIT });

	    if (typeof initialState === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');
	    }

	    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
	    if (typeof reducer(undefined, { type: type }) === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');
	    }
	  });
	}

	/**
	 * Turns an object whose values are different reducer functions, into a single
	 * reducer function. It will call every child reducer, and gather their results
	 * into a single state object, whose keys correspond to the keys of the passed
	 * reducer functions.
	 *
	 * @param {Object} reducers An object whose values correspond to different
	 * reducer functions that need to be combined into one. One handy way to obtain
	 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
	 * undefined for any action. Instead, they should return their initial state
	 * if the state passed to them was undefined, and the current state for any
	 * unrecognized action.
	 *
	 * @returns {Function} A reducer function that invokes every reducer inside the
	 * passed object, and builds a state object with the same shape.
	 */
	function combineReducers(reducers) {
	  var reducerKeys = Object.keys(reducers);
	  var finalReducers = {};
	  for (var i = 0; i < reducerKeys.length; i++) {
	    var key = reducerKeys[i];

	    if (process.env.NODE_ENV !== 'production') {
	      if (typeof reducers[key] === 'undefined') {
	        warning('No reducer provided for key "' + key + '"');
	      }
	    }

	    if (typeof reducers[key] === 'function') {
	      finalReducers[key] = reducers[key];
	    }
	  }
	  var finalReducerKeys = Object.keys(finalReducers);

	  var unexpectedKeyCache = void 0;
	  if (process.env.NODE_ENV !== 'production') {
	    unexpectedKeyCache = {};
	  }

	  var shapeAssertionError = void 0;
	  try {
	    assertReducerShape(finalReducers);
	  } catch (e) {
	    shapeAssertionError = e;
	  }

	  return function combination() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];

	    if (shapeAssertionError) {
	      throw shapeAssertionError;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
	      if (warningMessage) {
	        warning(warningMessage);
	      }
	    }

	    var hasChanged = false;
	    var nextState = {};
	    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
	      var _key = finalReducerKeys[_i];
	      var reducer = finalReducers[_key];
	      var previousStateForKey = state[_key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(_key, action);
	        throw new Error(errorMessage);
	      }
	      nextState[_key] = nextStateForKey;
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	    }
	    return hasChanged ? nextState : state;
	  };
	}

	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(this, arguments));
	  };
	}

	/**
	 * Turns an object whose values are action creators, into an object with the
	 * same keys, but with every function wrapped into a `dispatch` call so they
	 * may be invoked directly. This is just a convenience method, as you can call
	 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
	 *
	 * For convenience, you can also pass a single function as the first argument,
	 * and get a function in return.
	 *
	 * @param {Function|Object} actionCreators An object whose values are action
	 * creator functions. One handy way to obtain it is to use ES6 `import * as`
	 * syntax. You may also pass a single function.
	 *
	 * @param {Function} dispatch The `dispatch` function available on your Redux
	 * store.
	 *
	 * @returns {Function|Object} The object mimicking the original object, but with
	 * every action creator wrapped into the `dispatch` call. If you passed a
	 * function as `actionCreators`, the return value will also be a single
	 * function.
	 */
	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }

	  if ((typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) !== 'object' || actionCreators === null) {
	    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
	  }

	  var keys = Object.keys(actionCreators);
	  var boundActionCreators = {};
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    var actionCreator = actionCreators[key];
	    if (typeof actionCreator === 'function') {
	      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
	    }
	  }
	  return boundActionCreators;
	}

	/**
	 * Composes single-argument functions from right to left. The rightmost
	 * function can take multiple arguments as it provides the signature for
	 * the resulting composite function.
	 *
	 * @param {...Function} funcs The functions to compose.
	 * @returns {Function} A function obtained by composing the argument functions
	 * from right to left. For example, compose(f, g, h) is identical to doing
	 * (...args) => f(g(h(...args))).
	 */

	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }

	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  }

	  if (funcs.length === 1) {
	    return funcs[0];
	  }

	  return funcs.reduce(function (a, b) {
	    return function () {
	      return a(b.apply(undefined, arguments));
	    };
	  });
	}

	/**
	 * Creates a store enhancer that applies middleware to the dispatch method
	 * of the Redux store. This is handy for a variety of tasks, such as expressing
	 * asynchronous actions in a concise manner, or logging every action payload.
	 *
	 * See `redux-thunk` package as an example of the Redux middleware.
	 *
	 * Because middleware is potentially asynchronous, this should be the first
	 * store enhancer in the composition chain.
	 *
	 * Note that each middleware will be given the `dispatch` and `getState` functions
	 * as named arguments.
	 *
	 * @param {...Function} middlewares The middleware chain to be applied.
	 * @returns {Function} A store enhancer applying the middleware.
	 */
	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }

	  return function (createStore) {
	    return function () {
	      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        args[_key2] = arguments[_key2];
	      }

	      var store = createStore.apply(undefined, args);
	      var _dispatch = function dispatch() {
	        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');
	      };

	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch() {
	          return _dispatch.apply(undefined, arguments);
	        }
	      };
	      var chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = compose.apply(undefined, chain)(store.dispatch);

	      return _extends({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}

	/*
	 * This is a dummy function to check if the function name has been altered by minification.
	 * If the function has been minified and NODE_ENV !== 'production', warn the user.
	 */
	function isCrushed() {}

	if (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
	  warning("You are currently using minified code outside of NODE_ENV === 'production'. " + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
	}

	exports.createStore = createStore;
	exports.combineReducers = combineReducers;
	exports.bindActionCreators = bindActionCreators;
	exports.applyMiddleware = applyMiddleware;
	exports.compose = compose;
	exports.__DO_NOT_USE__ActionTypes = ActionTypes;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, module) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _ponyfill = __webpack_require__(207);

	var _ponyfill2 = _interopRequireDefault(_ponyfill);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var root; /* global window */


	if (typeof self !== 'undefined') {
	  root = self;
	} else if (typeof window !== 'undefined') {
	  root = window;
	} else if (typeof global !== 'undefined') {
	  root = global;
	} else if (true) {
	  root = module;
	} else {
	  root = Function('return this')();
	}

	var result = (0, _ponyfill2['default'])(root);
	exports['default'] = result;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(65)(module)))

/***/ },
/* 207 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports['default'] = symbolObservablePonyfill;
	function symbolObservablePonyfill(root) {
		var result;
		var _Symbol = root.Symbol;

		if (typeof _Symbol === 'function') {
			if (_Symbol.observable) {
				result = _Symbol.observable;
			} else {
				result = _Symbol('observable');
				_Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}

		return result;
	};

/***/ },
/* 208 */
/***/ function(module, exports) {

	'use strict';

	var index = (function (fn) {
	  var lastArgs = [];
	  var frameId = null;

	  var wrapperFn = function wrapperFn() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    lastArgs = args;

	    if (frameId) {
	      return;
	    }

	    frameId = requestAnimationFrame(function () {
	      frameId = null;
	      fn.apply(undefined, lastArgs);
	    });
	  };

	  wrapperFn.cancel = function () {
	    if (!frameId) {
	      return;
	    }

	    cancelAnimationFrame(frameId);
	    frameId = null;
	  };

	  var resultFn = wrapperFn;

	  return resultFn;
	});

	module.exports = index;


/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	var _Object$create = __webpack_require__(210);

	function _inheritsLoose(subClass, superClass) {
	  subClass.prototype = _Object$create(superClass.prototype);
	  subClass.prototype.constructor = subClass;
	  subClass.__proto__ = superClass;
	}

	module.exports = _inheritsLoose;

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(211);

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(212);
	var $Object = __webpack_require__(165).Object;
	module.exports = function create(P, D) {
	  return $Object.create(P, D);
	};


/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(163);
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', { create: __webpack_require__(213) });


/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject = __webpack_require__(170);
	var dPs = __webpack_require__(214);
	var enumBugKeys = __webpack_require__(194);
	var IE_PROTO = __webpack_require__(190)('IE_PROTO');
	var Empty = function () { /* empty */ };
	var PROTOTYPE = 'prototype';

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function () {
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(175)('iframe');
	  var i = enumBugKeys.length;
	  var lt = '<';
	  var gt = '>';
	  var iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(215).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};

	module.exports = Object.create || function create(O, Properties) {
	  var result;
	  if (O !== null) {
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty();
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(169);
	var anObject = __webpack_require__(170);
	var getKeys = __webpack_require__(180);

	module.exports = __webpack_require__(173) ? Object.defineProperties : function defineProperties(O, Properties) {
	  anObject(O);
	  var keys = getKeys(Properties);
	  var length = keys.length;
	  var i = 0;
	  var P;
	  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};


/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	var document = __webpack_require__(164).document;
	module.exports = document && document.documentElement;


/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.connect = exports.connectAdvanced = exports.createProvider = exports.Provider = undefined;

	var _Provider = __webpack_require__(217);

	var _Provider2 = _interopRequireDefault(_Provider);

	var _connectAdvanced = __webpack_require__(220);

	var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);

	var _connect = __webpack_require__(223);

	var _connect2 = _interopRequireDefault(_connect);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.Provider = _Provider2.default;
	exports.createProvider = _Provider.createProvider;
	exports.connectAdvanced = _connectAdvanced2.default;
	exports.connect = _connect2.default;

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;
	exports.createProvider = createProvider;

	var _react = __webpack_require__(2);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _PropTypes = __webpack_require__(218);

	var _warning = __webpack_require__(219);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var didWarnAboutReceivingStore = false;
	function warnAboutReceivingStore() {
	  if (didWarnAboutReceivingStore) {
	    return;
	  }
	  didWarnAboutReceivingStore = true;

	  (0, _warning2.default)('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
	}

	function createProvider() {
	  var _Provider$childContex;

	  var storeKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'store';
	  var subKey = arguments[1];

	  var subscriptionKey = subKey || storeKey + 'Subscription';

	  var Provider = function (_Component) {
	    _inherits(Provider, _Component);

	    Provider.prototype.getChildContext = function getChildContext() {
	      var _ref;

	      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;
	    };

	    function Provider(props, context) {
	      _classCallCheck(this, Provider);

	      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

	      _this[storeKey] = props.store;
	      return _this;
	    }

	    Provider.prototype.render = function render() {
	      return _react.Children.only(this.props.children);
	    };

	    return Provider;
	  }(_react.Component);

	  if (process.env.NODE_ENV !== 'production') {
	    Provider.prototype.componentWillReceiveProps = function (nextProps) {
	      if (this[storeKey] !== nextProps.store) {
	        warnAboutReceivingStore();
	      }
	    };
	  }

	  Provider.propTypes = {
	    store: _PropTypes.storeShape.isRequired,
	    children: _propTypes2.default.element.isRequired
	  };
	  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = _PropTypes.storeShape.isRequired, _Provider$childContex[subscriptionKey] = _PropTypes.subscriptionShape, _Provider$childContex);

	  return Provider;
	}

	exports.default = createProvider();
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.storeShape = exports.subscriptionShape = undefined;

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var subscriptionShape = exports.subscriptionShape = _propTypes2.default.shape({
	  trySubscribe: _propTypes2.default.func.isRequired,
	  tryUnsubscribe: _propTypes2.default.func.isRequired,
	  notifyNestedSubs: _propTypes2.default.func.isRequired,
	  isSubscribed: _propTypes2.default.func.isRequired
	});

	var storeShape = exports.storeShape = _propTypes2.default.shape({
	  subscribe: _propTypes2.default.func.isRequired,
	  dispatch: _propTypes2.default.func.isRequired,
	  getState: _propTypes2.default.func.isRequired
	});

/***/ },
/* 219 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.default = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = connectAdvanced;

	var _hoistNonReactStatics = __webpack_require__(68);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	var _invariant = __webpack_require__(221);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(2);

	var _Subscription = __webpack_require__(222);

	var _Subscription2 = _interopRequireDefault(_Subscription);

	var _PropTypes = __webpack_require__(218);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var hotReloadingVersion = 0;
	var dummyState = {};
	function noop() {}
	function makeSelectorStateful(sourceSelector, store) {
	  // wrap the selector in an object that tracks its results between runs.
	  var selector = {
	    run: function runComponentSelector(props) {
	      try {
	        var nextProps = sourceSelector(store.getState(), props);
	        if (nextProps !== selector.props || selector.error) {
	          selector.shouldComponentUpdate = true;
	          selector.props = nextProps;
	          selector.error = null;
	        }
	      } catch (error) {
	        selector.shouldComponentUpdate = true;
	        selector.error = error;
	      }
	    }
	  };

	  return selector;
	}

	function connectAdvanced(
	/*
	  selectorFactory is a func that is responsible for returning the selector function used to
	  compute new props from state, props, and dispatch. For example:
	     export default connectAdvanced((dispatch, options) => (state, props) => ({
	      thing: state.things[props.thingId],
	      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
	    }))(YourComponent)
	   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
	  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
	  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
	   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
	  props. Do not use connectAdvanced directly without memoizing results between calls to your
	  selector, otherwise the Connect component will re-render on every state or props change.
	*/
	selectorFactory) {
	  var _contextTypes, _childContextTypes;

	  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref$getDisplayName = _ref.getDisplayName,
	      getDisplayName = _ref$getDisplayName === undefined ? function (name) {
	    return 'ConnectAdvanced(' + name + ')';
	  } : _ref$getDisplayName,
	      _ref$methodName = _ref.methodName,
	      methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,
	      _ref$renderCountProp = _ref.renderCountProp,
	      renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,
	      _ref$shouldHandleStat = _ref.shouldHandleStateChanges,
	      shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,
	      _ref$storeKey = _ref.storeKey,
	      storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,
	      _ref$withRef = _ref.withRef,
	      withRef = _ref$withRef === undefined ? false : _ref$withRef,
	      connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);

	  var subscriptionKey = storeKey + 'Subscription';
	  var version = hotReloadingVersion++;

	  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = _PropTypes.storeShape, _contextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _contextTypes);
	  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _childContextTypes);

	  return function wrapWithConnect(WrappedComponent) {
	    (0, _invariant2.default)(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + (methodName + '. Instead received ' + JSON.stringify(WrappedComponent)));

	    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';

	    var displayName = getDisplayName(wrappedComponentName);

	    var selectorFactoryOptions = _extends({}, connectOptions, {
	      getDisplayName: getDisplayName,
	      methodName: methodName,
	      renderCountProp: renderCountProp,
	      shouldHandleStateChanges: shouldHandleStateChanges,
	      storeKey: storeKey,
	      withRef: withRef,
	      displayName: displayName,
	      wrappedComponentName: wrappedComponentName,
	      WrappedComponent: WrappedComponent
	    });

	    var Connect = function (_Component) {
	      _inherits(Connect, _Component);

	      function Connect(props, context) {
	        _classCallCheck(this, Connect);

	        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

	        _this.version = version;
	        _this.state = {};
	        _this.renderCount = 0;
	        _this.store = props[storeKey] || context[storeKey];
	        _this.propsMode = Boolean(props[storeKey]);
	        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);

	        (0, _invariant2.default)(_this.store, 'Could not find "' + storeKey + '" in either the context or props of ' + ('"' + displayName + '". Either wrap the root component in a <Provider>, ') + ('or explicitly pass "' + storeKey + '" as a prop to "' + displayName + '".'));

	        _this.initSelector();
	        _this.initSubscription();
	        return _this;
	      }

	      Connect.prototype.getChildContext = function getChildContext() {
	        var _ref2;

	        // If this component received store from props, its subscription should be transparent
	        // to any descendants receiving store+subscription from context; it passes along
	        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows
	        // Connect to control ordering of notifications to flow top-down.
	        var subscription = this.propsMode ? null : this.subscription;
	        return _ref2 = {}, _ref2[subscriptionKey] = subscription || this.context[subscriptionKey], _ref2;
	      };

	      Connect.prototype.componentDidMount = function componentDidMount() {
	        if (!shouldHandleStateChanges) return;

	        // componentWillMount fires during server side rendering, but componentDidMount and
	        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.
	        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.
	        // To handle the case where a child component may have triggered a state change by
	        // dispatching an action in its componentWillMount, we have to re-run the select and maybe
	        // re-render.
	        this.subscription.trySubscribe();
	        this.selector.run(this.props);
	        if (this.selector.shouldComponentUpdate) this.forceUpdate();
	      };

	      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        this.selector.run(nextProps);
	      };

	      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
	        return this.selector.shouldComponentUpdate;
	      };

	      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
	        if (this.subscription) this.subscription.tryUnsubscribe();
	        this.subscription = null;
	        this.notifyNestedSubs = noop;
	        this.store = null;
	        this.selector.run = noop;
	        this.selector.shouldComponentUpdate = false;
	      };

	      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
	        (0, _invariant2.default)(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));
	        return this.wrappedInstance;
	      };

	      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {
	        this.wrappedInstance = ref;
	      };

	      Connect.prototype.initSelector = function initSelector() {
	        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);
	        this.selector = makeSelectorStateful(sourceSelector, this.store);
	        this.selector.run(this.props);
	      };

	      Connect.prototype.initSubscription = function initSubscription() {
	        if (!shouldHandleStateChanges) return;

	        // parentSub's source should match where store came from: props vs. context. A component
	        // connected to the store via props shouldn't use subscription from context, or vice versa.
	        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];
	        this.subscription = new _Subscription2.default(this.store, parentSub, this.onStateChange.bind(this));

	        // `notifyNestedSubs` is duplicated to handle the case where the component is  unmounted in
	        // the middle of the notification loop, where `this.subscription` will then be null. An
	        // extra null check every change can be avoided by copying the method onto `this` and then
	        // replacing it with a no-op on unmount. This can probably be avoided if Subscription's
	        // listeners logic is changed to not call listeners that have been unsubscribed in the
	        // middle of the notification loop.
	        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);
	      };

	      Connect.prototype.onStateChange = function onStateChange() {
	        this.selector.run(this.props);

	        if (!this.selector.shouldComponentUpdate) {
	          this.notifyNestedSubs();
	        } else {
	          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;
	          this.setState(dummyState);
	        }
	      };

	      Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {
	        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it
	        // needs to notify nested subs. Once called, it unimplements itself until further state
	        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does
	        // a boolean check every time avoids an extra method call most of the time, resulting
	        // in some perf boost.
	        this.componentDidUpdate = undefined;
	        this.notifyNestedSubs();
	      };

	      Connect.prototype.isSubscribed = function isSubscribed() {
	        return Boolean(this.subscription) && this.subscription.isSubscribed();
	      };

	      Connect.prototype.addExtraProps = function addExtraProps(props) {
	        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props;
	        // make a shallow copy so that fields added don't leak to the original selector.
	        // this is especially important for 'ref' since that's a reference back to the component
	        // instance. a singleton memoized selector would then be holding a reference to the
	        // instance, preventing the instance from being garbage collected, and that would be bad
	        var withExtras = _extends({}, props);
	        if (withRef) withExtras.ref = this.setWrappedInstance;
	        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
	        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;
	        return withExtras;
	      };

	      Connect.prototype.render = function render() {
	        var selector = this.selector;
	        selector.shouldComponentUpdate = false;

	        if (selector.error) {
	          throw selector.error;
	        } else {
	          return (0, _react.createElement)(WrappedComponent, this.addExtraProps(selector.props));
	        }
	      };

	      return Connect;
	    }(_react.Component);

	    Connect.WrappedComponent = WrappedComponent;
	    Connect.displayName = displayName;
	    Connect.childContextTypes = childContextTypes;
	    Connect.contextTypes = contextTypes;
	    Connect.propTypes = contextTypes;

	    if (process.env.NODE_ENV !== 'production') {
	      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
	        var _this2 = this;

	        // We are hot reloading!
	        if (this.version !== version) {
	          this.version = version;
	          this.initSelector();

	          // If any connected descendants don't hot reload (and resubscribe in the process), their
	          // listeners will be lost when we unsubscribe. Unfortunately, by copying over all
	          // listeners, this does mean that the old versions of connected descendants will still be
	          // notified of state changes; however, their onStateChange function is a no-op so this
	          // isn't a huge deal.
	          var oldListeners = [];

	          if (this.subscription) {
	            oldListeners = this.subscription.listeners.get();
	            this.subscription.tryUnsubscribe();
	          }
	          this.initSubscription();
	          if (shouldHandleStateChanges) {
	            this.subscription.trySubscribe();
	            oldListeners.forEach(function (listener) {
	              return _this2.subscription.listeners.subscribe(listener);
	            });
	          }
	        }
	      };
	    }

	    return (0, _hoistNonReactStatics2.default)(Connect, WrappedComponent);
	  };
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 222 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	// encapsulates the subscription logic for connecting a component to the redux store, as
	// well as nesting subscriptions of descendant components, so that we can ensure the
	// ancestor components re-render before descendants

	var CLEARED = null;
	var nullListeners = {
	  notify: function notify() {}
	};

	function createListenerCollection() {
	  // the current/next pattern is copied from redux's createStore code.
	  // TODO: refactor+expose that code to be reusable here?
	  var current = [];
	  var next = [];

	  return {
	    clear: function clear() {
	      next = CLEARED;
	      current = CLEARED;
	    },
	    notify: function notify() {
	      var listeners = current = next;
	      for (var i = 0; i < listeners.length; i++) {
	        listeners[i]();
	      }
	    },
	    get: function get() {
	      return next;
	    },
	    subscribe: function subscribe(listener) {
	      var isSubscribed = true;
	      if (next === current) next = current.slice();
	      next.push(listener);

	      return function unsubscribe() {
	        if (!isSubscribed || current === CLEARED) return;
	        isSubscribed = false;

	        if (next === current) next = current.slice();
	        next.splice(next.indexOf(listener), 1);
	      };
	    }
	  };
	}

	var Subscription = function () {
	  function Subscription(store, parentSub, onStateChange) {
	    _classCallCheck(this, Subscription);

	    this.store = store;
	    this.parentSub = parentSub;
	    this.onStateChange = onStateChange;
	    this.unsubscribe = null;
	    this.listeners = nullListeners;
	  }

	  Subscription.prototype.addNestedSub = function addNestedSub(listener) {
	    this.trySubscribe();
	    return this.listeners.subscribe(listener);
	  };

	  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {
	    this.listeners.notify();
	  };

	  Subscription.prototype.isSubscribed = function isSubscribed() {
	    return Boolean(this.unsubscribe);
	  };

	  Subscription.prototype.trySubscribe = function trySubscribe() {
	    if (!this.unsubscribe) {
	      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);

	      this.listeners = createListenerCollection();
	    }
	  };

	  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {
	    if (this.unsubscribe) {
	      this.unsubscribe();
	      this.unsubscribe = null;
	      this.listeners.clear();
	      this.listeners = nullListeners;
	    }
	  };

	  return Subscription;
	}();

	exports.default = Subscription;

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.createConnect = createConnect;

	var _connectAdvanced = __webpack_require__(220);

	var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);

	var _shallowEqual = __webpack_require__(224);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _mapDispatchToProps = __webpack_require__(225);

	var _mapDispatchToProps2 = _interopRequireDefault(_mapDispatchToProps);

	var _mapStateToProps = __webpack_require__(238);

	var _mapStateToProps2 = _interopRequireDefault(_mapStateToProps);

	var _mergeProps = __webpack_require__(239);

	var _mergeProps2 = _interopRequireDefault(_mergeProps);

	var _selectorFactory = __webpack_require__(240);

	var _selectorFactory2 = _interopRequireDefault(_selectorFactory);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	/*
	  connect is a facade over connectAdvanced. It turns its args into a compatible
	  selectorFactory, which has the signature:

	    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
	  
	  connect passes its args to connectAdvanced as options, which will in turn pass them to
	  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

	  selectorFactory returns a final props selector from its mapStateToProps,
	  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
	  mergePropsFactories, and pure args.

	  The resulting final props selector is called by the Connect component instance whenever
	  it receives new props or store state.
	 */

	function match(arg, factories, name) {
	  for (var i = factories.length - 1; i >= 0; i--) {
	    var result = factories[i](arg);
	    if (result) return result;
	  }

	  return function (dispatch, options) {
	    throw new Error('Invalid value of type ' + typeof arg + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');
	  };
	}

	function strictEqual(a, b) {
	  return a === b;
	}

	// createConnect with default args builds the 'official' connect behavior. Calling it with
	// different options opens up some testing and extensibility scenarios
	function createConnect() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      _ref$connectHOC = _ref.connectHOC,
	      connectHOC = _ref$connectHOC === undefined ? _connectAdvanced2.default : _ref$connectHOC,
	      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
	      mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? _mapStateToProps2.default : _ref$mapStateToPropsF,
	      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
	      mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? _mapDispatchToProps2.default : _ref$mapDispatchToPro,
	      _ref$mergePropsFactor = _ref.mergePropsFactories,
	      mergePropsFactories = _ref$mergePropsFactor === undefined ? _mergeProps2.default : _ref$mergePropsFactor,
	      _ref$selectorFactory = _ref.selectorFactory,
	      selectorFactory = _ref$selectorFactory === undefined ? _selectorFactory2.default : _ref$selectorFactory;

	  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
	    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
	        _ref2$pure = _ref2.pure,
	        pure = _ref2$pure === undefined ? true : _ref2$pure,
	        _ref2$areStatesEqual = _ref2.areStatesEqual,
	        areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,
	        _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,
	        areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? _shallowEqual2.default : _ref2$areOwnPropsEqua,
	        _ref2$areStatePropsEq = _ref2.areStatePropsEqual,
	        areStatePropsEqual = _ref2$areStatePropsEq === undefined ? _shallowEqual2.default : _ref2$areStatePropsEq,
	        _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,
	        areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? _shallowEqual2.default : _ref2$areMergedPropsE,
	        extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);

	    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
	    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
	    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');

	    return connectHOC(selectorFactory, _extends({
	      // used in error messages
	      methodName: 'connect',

	      // used to compute Connect's displayName from the wrapped component's displayName.
	      getDisplayName: function getDisplayName(name) {
	        return 'Connect(' + name + ')';
	      },

	      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
	      shouldHandleStateChanges: Boolean(mapStateToProps),

	      // passed through to selectorFactory
	      initMapStateToProps: initMapStateToProps,
	      initMapDispatchToProps: initMapDispatchToProps,
	      initMergeProps: initMergeProps,
	      pure: pure,
	      areStatesEqual: areStatesEqual,
	      areOwnPropsEqual: areOwnPropsEqual,
	      areStatePropsEqual: areStatePropsEqual,
	      areMergedPropsEqual: areMergedPropsEqual

	    }, extraOptions));
	  };
	}

	exports.default = createConnect();

/***/ },
/* 224 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.default = shallowEqual;
	var hasOwn = Object.prototype.hasOwnProperty;

	function is(x, y) {
	  if (x === y) {
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    return x !== x && y !== y;
	  }
	}

	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) return true;

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) return false;

	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;
	exports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;
	exports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;

	var _redux = __webpack_require__(205);

	var _wrapMapToProps = __webpack_require__(226);

	function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
	  return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
	}

	function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
	  return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
	    return { dispatch: dispatch };
	  }) : undefined;
	}

	function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
	  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
	    return (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch);
	  }) : undefined;
	}

	exports.default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;
	exports.wrapMapToPropsConstant = wrapMapToPropsConstant;
	exports.getDependsOnOwnProps = getDependsOnOwnProps;
	exports.wrapMapToPropsFunc = wrapMapToPropsFunc;

	var _verifyPlainObject = __webpack_require__(227);

	var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function wrapMapToPropsConstant(getConstant) {
	  return function initConstantSelector(dispatch, options) {
	    var constant = getConstant(dispatch, options);

	    function constantSelector() {
	      return constant;
	    }
	    constantSelector.dependsOnOwnProps = false;
	    return constantSelector;
	  };
	}

	// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
	// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
	// whether mapToProps needs to be invoked when props have changed.
	// 
	// A length of one signals that mapToProps does not depend on props from the parent component.
	// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
	// therefore not reporting its length accurately..
	function getDependsOnOwnProps(mapToProps) {
	  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
	}

	// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
	// this function wraps mapToProps in a proxy function which does several things:
	// 
	//  * Detects whether the mapToProps function being called depends on props, which
	//    is used by selectorFactory to decide if it should reinvoke on props changes.
	//    
	//  * On first call, handles mapToProps if returns another function, and treats that
	//    new function as the true mapToProps for subsequent calls.
	//    
	//  * On first call, verifies the first result is a plain object, in order to warn
	//    the developer that their mapToProps function is not returning a valid result.
	//    
	function wrapMapToPropsFunc(mapToProps, methodName) {
	  return function initProxySelector(dispatch, _ref) {
	    var displayName = _ref.displayName;

	    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
	      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
	    };

	    // allow detectFactoryAndVerify to get ownProps
	    proxy.dependsOnOwnProps = true;

	    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
	      proxy.mapToProps = mapToProps;
	      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
	      var props = proxy(stateOrDispatch, ownProps);

	      if (typeof props === 'function') {
	        proxy.mapToProps = props;
	        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
	        props = proxy(stateOrDispatch, ownProps);
	      }

	      if (process.env.NODE_ENV !== 'production') (0, _verifyPlainObject2.default)(props, displayName, methodName);

	      return props;
	    };

	    return proxy;
	  };
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = verifyPlainObject;

	var _isPlainObject = __webpack_require__(228);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	var _warning = __webpack_require__(219);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function verifyPlainObject(value, displayName, methodName) {
	  if (!(0, _isPlainObject2.default)(value)) {
	    (0, _warning2.default)(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');
	  }
	}

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(229),
	    getPrototype = __webpack_require__(235),
	    isObjectLike = __webpack_require__(237);

	/** `Object#toString` result references. */
	var objectTag = '[object Object]';

	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);

	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}

	module.exports = isPlainObject;


/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(230),
	    getRawTag = __webpack_require__(233),
	    objectToString = __webpack_require__(234);

	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}

	module.exports = baseGetTag;


/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(231);

	/** Built-in value references. */
	var Symbol = root.Symbol;

	module.exports = Symbol;


/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(232);

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	module.exports = root;


/***/ },
/* 232 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	module.exports = freeGlobal;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(230);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];

	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}

	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}

	module.exports = getRawTag;


/***/ },
/* 234 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}

	module.exports = objectToString;


/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(236);

	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);

	module.exports = getPrototype;


/***/ },
/* 236 */
/***/ function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}

	module.exports = overArg;


/***/ },
/* 237 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.whenMapStateToPropsIsFunction = whenMapStateToPropsIsFunction;
	exports.whenMapStateToPropsIsMissing = whenMapStateToPropsIsMissing;

	var _wrapMapToProps = __webpack_require__(226);

	function whenMapStateToPropsIsFunction(mapStateToProps) {
	  return typeof mapStateToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;
	}

	function whenMapStateToPropsIsMissing(mapStateToProps) {
	  return !mapStateToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function () {
	    return {};
	  }) : undefined;
	}

	exports.default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.defaultMergeProps = defaultMergeProps;
	exports.wrapMergePropsFunc = wrapMergePropsFunc;
	exports.whenMergePropsIsFunction = whenMergePropsIsFunction;
	exports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;

	var _verifyPlainObject = __webpack_require__(227);

	var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function defaultMergeProps(stateProps, dispatchProps, ownProps) {
	  return _extends({}, ownProps, stateProps, dispatchProps);
	}

	function wrapMergePropsFunc(mergeProps) {
	  return function initMergePropsProxy(dispatch, _ref) {
	    var displayName = _ref.displayName,
	        pure = _ref.pure,
	        areMergedPropsEqual = _ref.areMergedPropsEqual;

	    var hasRunOnce = false;
	    var mergedProps = void 0;

	    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
	      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

	      if (hasRunOnce) {
	        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
	      } else {
	        hasRunOnce = true;
	        mergedProps = nextMergedProps;

	        if (process.env.NODE_ENV !== 'production') (0, _verifyPlainObject2.default)(mergedProps, displayName, 'mergeProps');
	      }

	      return mergedProps;
	    };
	  };
	}

	function whenMergePropsIsFunction(mergeProps) {
	  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
	}

	function whenMergePropsIsOmitted(mergeProps) {
	  return !mergeProps ? function () {
	    return defaultMergeProps;
	  } : undefined;
	}

	exports.default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;
	exports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;
	exports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;
	exports.default = finalPropsSelectorFactory;

	var _verifySubselectors = __webpack_require__(241);

	var _verifySubselectors2 = _interopRequireDefault(_verifySubselectors);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
	  return function impureFinalPropsSelector(state, ownProps) {
	    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
	  };
	}

	function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
	  var areStatesEqual = _ref.areStatesEqual,
	      areOwnPropsEqual = _ref.areOwnPropsEqual,
	      areStatePropsEqual = _ref.areStatePropsEqual;

	  var hasRunAtLeastOnce = false;
	  var state = void 0;
	  var ownProps = void 0;
	  var stateProps = void 0;
	  var dispatchProps = void 0;
	  var mergedProps = void 0;

	  function handleFirstCall(firstState, firstOwnProps) {
	    state = firstState;
	    ownProps = firstOwnProps;
	    stateProps = mapStateToProps(state, ownProps);
	    dispatchProps = mapDispatchToProps(dispatch, ownProps);
	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    hasRunAtLeastOnce = true;
	    return mergedProps;
	  }

	  function handleNewPropsAndNewState() {
	    stateProps = mapStateToProps(state, ownProps);

	    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }

	  function handleNewProps() {
	    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);

	    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

	    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
	    return mergedProps;
	  }

	  function handleNewState() {
	    var nextStateProps = mapStateToProps(state, ownProps);
	    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
	    stateProps = nextStateProps;

	    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);

	    return mergedProps;
	  }

	  function handleSubsequentCalls(nextState, nextOwnProps) {
	    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
	    var stateChanged = !areStatesEqual(nextState, state);
	    state = nextState;
	    ownProps = nextOwnProps;

	    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
	    if (propsChanged) return handleNewProps();
	    if (stateChanged) return handleNewState();
	    return mergedProps;
	  }

	  return function pureFinalPropsSelector(nextState, nextOwnProps) {
	    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
	  };
	}

	// TODO: Add more comments

	// If pure is true, the selector returned by selectorFactory will memoize its results,
	// allowing connectAdvanced's shouldComponentUpdate to return false if final
	// props have not changed. If false, the selector will always return a new
	// object and shouldComponentUpdate will always return true.

	function finalPropsSelectorFactory(dispatch, _ref2) {
	  var initMapStateToProps = _ref2.initMapStateToProps,
	      initMapDispatchToProps = _ref2.initMapDispatchToProps,
	      initMergeProps = _ref2.initMergeProps,
	      options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);

	  var mapStateToProps = initMapStateToProps(dispatch, options);
	  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
	  var mergeProps = initMergeProps(dispatch, options);

	  if (process.env.NODE_ENV !== 'production') {
	    (0, _verifySubselectors2.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
	  }

	  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;

	  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = verifySubselectors;

	var _warning = __webpack_require__(219);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function verify(selector, methodName, displayName) {
	  if (!selector) {
	    throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');
	  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
	    if (!selector.hasOwnProperty('dependsOnOwnProps')) {
	      (0, _warning2.default)('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');
	    }
	  }
	}

	function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
	  verify(mapStateToProps, 'mapStateToProps', displayName);
	  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
	  verify(mergeProps, 'mergeProps', displayName);
	}

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequire(obj) { return obj && obj.__esModule ? obj['default'] : obj; }

	var _Motion = __webpack_require__(243);

	exports.Motion = _interopRequire(_Motion);

	var _StaggeredMotion = __webpack_require__(251);

	exports.StaggeredMotion = _interopRequire(_StaggeredMotion);

	var _TransitionMotion = __webpack_require__(252);

	exports.TransitionMotion = _interopRequire(_TransitionMotion);

	var _spring = __webpack_require__(254);

	exports.spring = _interopRequire(_spring);

	var _presets = __webpack_require__(255);

	exports.presets = _interopRequire(_presets);

	var _stripStyle = __webpack_require__(245);

	exports.stripStyle = _interopRequire(_stripStyle);

	// deprecated, dummy warning function

	var _reorderKeys = __webpack_require__(256);

	exports.reorderKeys = _interopRequire(_reorderKeys);

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _mapToZero = __webpack_require__(244);

	var _mapToZero2 = _interopRequireDefault(_mapToZero);

	var _stripStyle = __webpack_require__(245);

	var _stripStyle2 = _interopRequireDefault(_stripStyle);

	var _stepper3 = __webpack_require__(246);

	var _stepper4 = _interopRequireDefault(_stepper3);

	var _performanceNow = __webpack_require__(247);

	var _performanceNow2 = _interopRequireDefault(_performanceNow);

	var _raf = __webpack_require__(248);

	var _raf2 = _interopRequireDefault(_raf);

	var _shouldStopAnimation = __webpack_require__(250);

	var _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var msPerFrame = 1000 / 60;

	var Motion = (function (_React$Component) {
	  _inherits(Motion, _React$Component);

	  _createClass(Motion, null, [{
	    key: 'propTypes',
	    value: {
	      // TOOD: warn against putting a config in here
	      defaultStyle: _propTypes2['default'].objectOf(_propTypes2['default'].number),
	      style: _propTypes2['default'].objectOf(_propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].object])).isRequired,
	      children: _propTypes2['default'].func.isRequired,
	      onRest: _propTypes2['default'].func
	    },
	    enumerable: true
	  }]);

	  function Motion(props) {
	    var _this = this;

	    _classCallCheck(this, Motion);

	    _React$Component.call(this, props);
	    this.wasAnimating = false;
	    this.animationID = null;
	    this.prevTime = 0;
	    this.accumulatedTime = 0;
	    this.unreadPropStyle = null;

	    this.clearUnreadPropStyle = function (destStyle) {
	      var dirty = false;
	      var _state = _this.state;
	      var currentStyle = _state.currentStyle;
	      var currentVelocity = _state.currentVelocity;
	      var lastIdealStyle = _state.lastIdealStyle;
	      var lastIdealVelocity = _state.lastIdealVelocity;

	      for (var key in destStyle) {
	        if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {
	          continue;
	        }

	        var styleValue = destStyle[key];
	        if (typeof styleValue === 'number') {
	          if (!dirty) {
	            dirty = true;
	            currentStyle = _extends({}, currentStyle);
	            currentVelocity = _extends({}, currentVelocity);
	            lastIdealStyle = _extends({}, lastIdealStyle);
	            lastIdealVelocity = _extends({}, lastIdealVelocity);
	          }

	          currentStyle[key] = styleValue;
	          currentVelocity[key] = 0;
	          lastIdealStyle[key] = styleValue;
	          lastIdealVelocity[key] = 0;
	        }
	      }

	      if (dirty) {
	        _this.setState({ currentStyle: currentStyle, currentVelocity: currentVelocity, lastIdealStyle: lastIdealStyle, lastIdealVelocity: lastIdealVelocity });
	      }
	    };

	    this.startAnimationIfNecessary = function () {
	      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and
	      // call cb? No, otherwise accidental parent rerender causes cb trigger
	      _this.animationID = _raf2['default'](function (timestamp) {
	        // check if we need to animate in the first place
	        var propsStyle = _this.props.style;
	        if (_shouldStopAnimation2['default'](_this.state.currentStyle, propsStyle, _this.state.currentVelocity)) {
	          if (_this.wasAnimating && _this.props.onRest) {
	            _this.props.onRest();
	          }

	          // no need to cancel animationID here; shouldn't have any in flight
	          _this.animationID = null;
	          _this.wasAnimating = false;
	          _this.accumulatedTime = 0;
	          return;
	        }

	        _this.wasAnimating = true;

	        var currentTime = timestamp || _performanceNow2['default']();
	        var timeDelta = currentTime - _this.prevTime;
	        _this.prevTime = currentTime;
	        _this.accumulatedTime = _this.accumulatedTime + timeDelta;
	        // more than 10 frames? prolly switched browser tab. Restart
	        if (_this.accumulatedTime > msPerFrame * 10) {
	          _this.accumulatedTime = 0;
	        }

	        if (_this.accumulatedTime === 0) {
	          // no need to cancel animationID here; shouldn't have any in flight
	          _this.animationID = null;
	          _this.startAnimationIfNecessary();
	          return;
	        }

	        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
	        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);

	        var newLastIdealStyle = {};
	        var newLastIdealVelocity = {};
	        var newCurrentStyle = {};
	        var newCurrentVelocity = {};

	        for (var key in propsStyle) {
	          if (!Object.prototype.hasOwnProperty.call(propsStyle, key)) {
	            continue;
	          }

	          var styleValue = propsStyle[key];
	          if (typeof styleValue === 'number') {
	            newCurrentStyle[key] = styleValue;
	            newCurrentVelocity[key] = 0;
	            newLastIdealStyle[key] = styleValue;
	            newLastIdealVelocity[key] = 0;
	          } else {
	            var newLastIdealStyleValue = _this.state.lastIdealStyle[key];
	            var newLastIdealVelocityValue = _this.state.lastIdealVelocity[key];
	            for (var i = 0; i < framesToCatchUp; i++) {
	              var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);

	              newLastIdealStyleValue = _stepper[0];
	              newLastIdealVelocityValue = _stepper[1];
	            }

	            var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);

	            var nextIdealX = _stepper2[0];
	            var nextIdealV = _stepper2[1];

	            newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
	            newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
	            newLastIdealStyle[key] = newLastIdealStyleValue;
	            newLastIdealVelocity[key] = newLastIdealVelocityValue;
	          }
	        }

	        _this.animationID = null;
	        // the amount we're looped over above
	        _this.accumulatedTime -= framesToCatchUp * msPerFrame;

	        _this.setState({
	          currentStyle: newCurrentStyle,
	          currentVelocity: newCurrentVelocity,
	          lastIdealStyle: newLastIdealStyle,
	          lastIdealVelocity: newLastIdealVelocity
	        });

	        _this.unreadPropStyle = null;

	        _this.startAnimationIfNecessary();
	      });
	    };

	    this.state = this.defaultState();
	  }

	  Motion.prototype.defaultState = function defaultState() {
	    var _props = this.props;
	    var defaultStyle = _props.defaultStyle;
	    var style = _props.style;

	    var currentStyle = defaultStyle || _stripStyle2['default'](style);
	    var currentVelocity = _mapToZero2['default'](currentStyle);
	    return {
	      currentStyle: currentStyle,
	      currentVelocity: currentVelocity,
	      lastIdealStyle: currentStyle,
	      lastIdealVelocity: currentVelocity
	    };
	  };

	  // it's possible that currentStyle's value is stale: if props is immediately
	  // changed from 0 to 400 to spring(0) again, the async currentStyle is still
	  // at 0 (didn't have time to tick and interpolate even once). If we naively
	  // compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).
	  // In reality currentStyle should be 400

	  Motion.prototype.componentDidMount = function componentDidMount() {
	    this.prevTime = _performanceNow2['default']();
	    this.startAnimationIfNecessary();
	  };

	  Motion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
	    if (this.unreadPropStyle != null) {
	      // previous props haven't had the chance to be set yet; set them here
	      this.clearUnreadPropStyle(this.unreadPropStyle);
	    }

	    this.unreadPropStyle = props.style;
	    if (this.animationID == null) {
	      this.prevTime = _performanceNow2['default']();
	      this.startAnimationIfNecessary();
	    }
	  };

	  Motion.prototype.componentWillUnmount = function componentWillUnmount() {
	    if (this.animationID != null) {
	      _raf2['default'].cancel(this.animationID);
	      this.animationID = null;
	    }
	  };

	  Motion.prototype.render = function render() {
	    var renderedChildren = this.props.children(this.state.currentStyle);
	    return renderedChildren && _react2['default'].Children.only(renderedChildren);
	  };

	  return Motion;
	})(_react2['default'].Component);

	exports['default'] = Motion;
	module.exports = exports['default'];

	// after checking for unreadPropStyle != null, we manually go set the
	// non-interpolating values (those that are a number, without a spring
	// config)

/***/ },
/* 244 */
/***/ function(module, exports) {

	

	// currently used to initiate the velocity style object to 0
	'use strict';

	exports.__esModule = true;
	exports['default'] = mapToZero;

	function mapToZero(obj) {
	  var ret = {};
	  for (var key in obj) {
	    if (Object.prototype.hasOwnProperty.call(obj, key)) {
	      ret[key] = 0;
	    }
	  }
	  return ret;
	}

	module.exports = exports['default'];

/***/ },
/* 245 */
/***/ function(module, exports) {

	
	// turn {x: {val: 1, stiffness: 1, damping: 2}, y: 2} generated by
	// `{x: spring(1, {stiffness: 1, damping: 2}), y: 2}` into {x: 1, y: 2}

	'use strict';

	exports.__esModule = true;
	exports['default'] = stripStyle;

	function stripStyle(style) {
	  var ret = {};
	  for (var key in style) {
	    if (!Object.prototype.hasOwnProperty.call(style, key)) {
	      continue;
	    }
	    ret[key] = typeof style[key] === 'number' ? style[key] : style[key].val;
	  }
	  return ret;
	}

	module.exports = exports['default'];

/***/ },
/* 246 */
/***/ function(module, exports) {

	

	// stepper is used a lot. Saves allocation to return the same array wrapper.
	// This is fine and danger-free against mutations because the callsite
	// immediately destructures it and gets the numbers inside without passing the
	"use strict";

	exports.__esModule = true;
	exports["default"] = stepper;

	var reusedTuple = [0, 0];

	function stepper(secondPerFrame, x, v, destX, k, b, precision) {
	  // Spring stiffness, in kg / s^2

	  // for animations, destX is really spring length (spring at rest). initial
	  // position is considered as the stretched/compressed position of a spring
	  var Fspring = -k * (x - destX);

	  // Damping, in kg / s
	  var Fdamper = -b * v;

	  // usually we put mass here, but for animation purposes, specifying mass is a
	  // bit redundant. you could simply adjust k and b accordingly
	  // let a = (Fspring + Fdamper) / mass;
	  var a = Fspring + Fdamper;

	  var newV = v + a * secondPerFrame;
	  var newX = x + newV * secondPerFrame;

	  if (Math.abs(newV) < precision && Math.abs(newX - destX) < precision) {
	    reusedTuple[0] = destX;
	    reusedTuple[1] = 0;
	    return reusedTuple;
	  }

	  reusedTuple[0] = newX;
	  reusedTuple[1] = newV;
	  return reusedTuple;
	}

	module.exports = exports["default"];
	// array reference around.

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.7.1
	(function() {
	  var getNanoSeconds, hrtime, loadTime;

	  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
	    module.exports = function() {
	      return performance.now();
	    };
	  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
	    module.exports = function() {
	      return (getNanoSeconds() - loadTime) / 1e6;
	    };
	    hrtime = process.hrtime;
	    getNanoSeconds = function() {
	      var hr;
	      hr = hrtime();
	      return hr[0] * 1e9 + hr[1];
	    };
	    loadTime = getNanoSeconds();
	  } else if (Date.now) {
	    module.exports = function() {
	      return Date.now() - loadTime;
	    };
	    loadTime = Date.now();
	  } else {
	    module.exports = function() {
	      return new Date().getTime() - loadTime;
	    };
	    loadTime = new Date().getTime();
	  }

	}).call(this);

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var now = __webpack_require__(249)
	  , root = typeof window === 'undefined' ? global : window
	  , vendors = ['moz', 'webkit']
	  , suffix = 'AnimationFrame'
	  , raf = root['request' + suffix]
	  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]

	for(var i = 0; !raf && i < vendors.length; i++) {
	  raf = root[vendors[i] + 'Request' + suffix]
	  caf = root[vendors[i] + 'Cancel' + suffix]
	      || root[vendors[i] + 'CancelRequest' + suffix]
	}

	// Some versions of FF have rAF but not cAF
	if(!raf || !caf) {
	  var last = 0
	    , id = 0
	    , queue = []
	    , frameDuration = 1000 / 60

	  raf = function(callback) {
	    if(queue.length === 0) {
	      var _now = now()
	        , next = Math.max(0, frameDuration - (_now - last))
	      last = next + _now
	      setTimeout(function() {
	        var cp = queue.slice(0)
	        // Clear queue here to prevent
	        // callbacks from appending listeners
	        // to the current frame's queue
	        queue.length = 0
	        for(var i = 0; i < cp.length; i++) {
	          if(!cp[i].cancelled) {
	            try{
	              cp[i].callback(last)
	            } catch(e) {
	              setTimeout(function() { throw e }, 0)
	            }
	          }
	        }
	      }, Math.round(next))
	    }
	    queue.push({
	      handle: ++id,
	      callback: callback,
	      cancelled: false
	    })
	    return id
	  }

	  caf = function(handle) {
	    for(var i = 0; i < queue.length; i++) {
	      if(queue[i].handle === handle) {
	        queue[i].cancelled = true
	      }
	    }
	  }
	}

	module.exports = function(fn) {
	  // Wrap in a new function to prevent
	  // `cancel` potentially being assigned
	  // to the native rAF function
	  return raf.call(root, fn)
	}
	module.exports.cancel = function() {
	  caf.apply(root, arguments)
	}
	module.exports.polyfill = function(object) {
	  if (!object) {
	    object = root;
	  }
	  object.requestAnimationFrame = raf
	  object.cancelAnimationFrame = caf
	}

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.12.2
	(function() {
	  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

	  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
	    module.exports = function() {
	      return performance.now();
	    };
	  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
	    module.exports = function() {
	      return (getNanoSeconds() - nodeLoadTime) / 1e6;
	    };
	    hrtime = process.hrtime;
	    getNanoSeconds = function() {
	      var hr;
	      hr = hrtime();
	      return hr[0] * 1e9 + hr[1];
	    };
	    moduleLoadTime = getNanoSeconds();
	    upTime = process.uptime() * 1e9;
	    nodeLoadTime = moduleLoadTime - upTime;
	  } else if (Date.now) {
	    module.exports = function() {
	      return Date.now() - loadTime;
	    };
	    loadTime = Date.now();
	  } else {
	    module.exports = function() {
	      return new Date().getTime() - loadTime;
	    };
	    loadTime = new Date().getTime();
	  }

	}).call(this);

	//# sourceMappingURL=performance-now.js.map

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 250 */
/***/ function(module, exports) {

	

	// usage assumption: currentStyle values have already been rendered but it says
	// nothing of whether currentStyle is stale (see unreadPropStyle)
	'use strict';

	exports.__esModule = true;
	exports['default'] = shouldStopAnimation;

	function shouldStopAnimation(currentStyle, style, currentVelocity) {
	  for (var key in style) {
	    if (!Object.prototype.hasOwnProperty.call(style, key)) {
	      continue;
	    }

	    if (currentVelocity[key] !== 0) {
	      return false;
	    }

	    var styleValue = typeof style[key] === 'number' ? style[key] : style[key].val;
	    // stepper will have already taken care of rounding precision errors, so
	    // won't have such thing as 0.9999 !=== 1
	    if (currentStyle[key] !== styleValue) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = exports['default'];

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _mapToZero = __webpack_require__(244);

	var _mapToZero2 = _interopRequireDefault(_mapToZero);

	var _stripStyle = __webpack_require__(245);

	var _stripStyle2 = _interopRequireDefault(_stripStyle);

	var _stepper3 = __webpack_require__(246);

	var _stepper4 = _interopRequireDefault(_stepper3);

	var _performanceNow = __webpack_require__(247);

	var _performanceNow2 = _interopRequireDefault(_performanceNow);

	var _raf = __webpack_require__(248);

	var _raf2 = _interopRequireDefault(_raf);

	var _shouldStopAnimation = __webpack_require__(250);

	var _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var msPerFrame = 1000 / 60;

	function shouldStopAnimationAll(currentStyles, styles, currentVelocities) {
	  for (var i = 0; i < currentStyles.length; i++) {
	    if (!_shouldStopAnimation2['default'](currentStyles[i], styles[i], currentVelocities[i])) {
	      return false;
	    }
	  }
	  return true;
	}

	var StaggeredMotion = (function (_React$Component) {
	  _inherits(StaggeredMotion, _React$Component);

	  _createClass(StaggeredMotion, null, [{
	    key: 'propTypes',
	    value: {
	      // TOOD: warn against putting a config in here
	      defaultStyles: _propTypes2['default'].arrayOf(_propTypes2['default'].objectOf(_propTypes2['default'].number)),
	      styles: _propTypes2['default'].func.isRequired,
	      children: _propTypes2['default'].func.isRequired
	    },
	    enumerable: true
	  }]);

	  function StaggeredMotion(props) {
	    var _this = this;

	    _classCallCheck(this, StaggeredMotion);

	    _React$Component.call(this, props);
	    this.animationID = null;
	    this.prevTime = 0;
	    this.accumulatedTime = 0;
	    this.unreadPropStyles = null;

	    this.clearUnreadPropStyle = function (unreadPropStyles) {
	      var _state = _this.state;
	      var currentStyles = _state.currentStyles;
	      var currentVelocities = _state.currentVelocities;
	      var lastIdealStyles = _state.lastIdealStyles;
	      var lastIdealVelocities = _state.lastIdealVelocities;

	      var someDirty = false;
	      for (var i = 0; i < unreadPropStyles.length; i++) {
	        var unreadPropStyle = unreadPropStyles[i];
	        var dirty = false;

	        for (var key in unreadPropStyle) {
	          if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {
	            continue;
	          }

	          var styleValue = unreadPropStyle[key];
	          if (typeof styleValue === 'number') {
	            if (!dirty) {
	              dirty = true;
	              someDirty = true;
	              currentStyles[i] = _extends({}, currentStyles[i]);
	              currentVelocities[i] = _extends({}, currentVelocities[i]);
	              lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);
	              lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);
	            }
	            currentStyles[i][key] = styleValue;
	            currentVelocities[i][key] = 0;
	            lastIdealStyles[i][key] = styleValue;
	            lastIdealVelocities[i][key] = 0;
	          }
	        }
	      }

	      if (someDirty) {
	        _this.setState({ currentStyles: currentStyles, currentVelocities: currentVelocities, lastIdealStyles: lastIdealStyles, lastIdealVelocities: lastIdealVelocities });
	      }
	    };

	    this.startAnimationIfNecessary = function () {
	      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and
	      // call cb? No, otherwise accidental parent rerender causes cb trigger
	      _this.animationID = _raf2['default'](function (timestamp) {
	        var destStyles = _this.props.styles(_this.state.lastIdealStyles);

	        // check if we need to animate in the first place
	        if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities)) {
	          // no need to cancel animationID here; shouldn't have any in flight
	          _this.animationID = null;
	          _this.accumulatedTime = 0;
	          return;
	        }

	        var currentTime = timestamp || _performanceNow2['default']();
	        var timeDelta = currentTime - _this.prevTime;
	        _this.prevTime = currentTime;
	        _this.accumulatedTime = _this.accumulatedTime + timeDelta;
	        // more than 10 frames? prolly switched browser tab. Restart
	        if (_this.accumulatedTime > msPerFrame * 10) {
	          _this.accumulatedTime = 0;
	        }

	        if (_this.accumulatedTime === 0) {
	          // no need to cancel animationID here; shouldn't have any in flight
	          _this.animationID = null;
	          _this.startAnimationIfNecessary();
	          return;
	        }

	        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
	        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);

	        var newLastIdealStyles = [];
	        var newLastIdealVelocities = [];
	        var newCurrentStyles = [];
	        var newCurrentVelocities = [];

	        for (var i = 0; i < destStyles.length; i++) {
	          var destStyle = destStyles[i];
	          var newCurrentStyle = {};
	          var newCurrentVelocity = {};
	          var newLastIdealStyle = {};
	          var newLastIdealVelocity = {};

	          for (var key in destStyle) {
	            if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {
	              continue;
	            }

	            var styleValue = destStyle[key];
	            if (typeof styleValue === 'number') {
	              newCurrentStyle[key] = styleValue;
	              newCurrentVelocity[key] = 0;
	              newLastIdealStyle[key] = styleValue;
	              newLastIdealVelocity[key] = 0;
	            } else {
	              var newLastIdealStyleValue = _this.state.lastIdealStyles[i][key];
	              var newLastIdealVelocityValue = _this.state.lastIdealVelocities[i][key];
	              for (var j = 0; j < framesToCatchUp; j++) {
	                var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);

	                newLastIdealStyleValue = _stepper[0];
	                newLastIdealVelocityValue = _stepper[1];
	              }

	              var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);

	              var nextIdealX = _stepper2[0];
	              var nextIdealV = _stepper2[1];

	              newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
	              newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
	              newLastIdealStyle[key] = newLastIdealStyleValue;
	              newLastIdealVelocity[key] = newLastIdealVelocityValue;
	            }
	          }

	          newCurrentStyles[i] = newCurrentStyle;
	          newCurrentVelocities[i] = newCurrentVelocity;
	          newLastIdealStyles[i] = newLastIdealStyle;
	          newLastIdealVelocities[i] = newLastIdealVelocity;
	        }

	        _this.animationID = null;
	        // the amount we're looped over above
	        _this.accumulatedTime -= framesToCatchUp * msPerFrame;

	        _this.setState({
	          currentStyles: newCurrentStyles,
	          currentVelocities: newCurrentVelocities,
	          lastIdealStyles: newLastIdealStyles,
	          lastIdealVelocities: newLastIdealVelocities
	        });

	        _this.unreadPropStyles = null;

	        _this.startAnimationIfNecessary();
	      });
	    };

	    this.state = this.defaultState();
	  }

	  StaggeredMotion.prototype.defaultState = function defaultState() {
	    var _props = this.props;
	    var defaultStyles = _props.defaultStyles;
	    var styles = _props.styles;

	    var currentStyles = defaultStyles || styles().map(_stripStyle2['default']);
	    var currentVelocities = currentStyles.map(function (currentStyle) {
	      return _mapToZero2['default'](currentStyle);
	    });
	    return {
	      currentStyles: currentStyles,
	      currentVelocities: currentVelocities,
	      lastIdealStyles: currentStyles,
	      lastIdealVelocities: currentVelocities
	    };
	  };

	  StaggeredMotion.prototype.componentDidMount = function componentDidMount() {
	    this.prevTime = _performanceNow2['default']();
	    this.startAnimationIfNecessary();
	  };

	  StaggeredMotion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
	    if (this.unreadPropStyles != null) {
	      // previous props haven't had the chance to be set yet; set them here
	      this.clearUnreadPropStyle(this.unreadPropStyles);
	    }

	    this.unreadPropStyles = props.styles(this.state.lastIdealStyles);
	    if (this.animationID == null) {
	      this.prevTime = _performanceNow2['default']();
	      this.startAnimationIfNecessary();
	    }
	  };

	  StaggeredMotion.prototype.componentWillUnmount = function componentWillUnmount() {
	    if (this.animationID != null) {
	      _raf2['default'].cancel(this.animationID);
	      this.animationID = null;
	    }
	  };

	  StaggeredMotion.prototype.render = function render() {
	    var renderedChildren = this.props.children(this.state.currentStyles);
	    return renderedChildren && _react2['default'].Children.only(renderedChildren);
	  };

	  return StaggeredMotion;
	})(_react2['default'].Component);

	exports['default'] = StaggeredMotion;
	module.exports = exports['default'];

	// it's possible that currentStyle's value is stale: if props is immediately
	// changed from 0 to 400 to spring(0) again, the async currentStyle is still
	// at 0 (didn't have time to tick and interpolate even once). If we naively
	// compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).
	// In reality currentStyle should be 400

	// after checking for unreadPropStyles != null, we manually go set the
	// non-interpolating values (those that are a number, without a spring
	// config)

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _mapToZero = __webpack_require__(244);

	var _mapToZero2 = _interopRequireDefault(_mapToZero);

	var _stripStyle = __webpack_require__(245);

	var _stripStyle2 = _interopRequireDefault(_stripStyle);

	var _stepper3 = __webpack_require__(246);

	var _stepper4 = _interopRequireDefault(_stepper3);

	var _mergeDiff = __webpack_require__(253);

	var _mergeDiff2 = _interopRequireDefault(_mergeDiff);

	var _performanceNow = __webpack_require__(247);

	var _performanceNow2 = _interopRequireDefault(_performanceNow);

	var _raf = __webpack_require__(248);

	var _raf2 = _interopRequireDefault(_raf);

	var _shouldStopAnimation = __webpack_require__(250);

	var _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(59);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var msPerFrame = 1000 / 60;

	// the children function & (potential) styles function asks as param an
	// Array<TransitionPlainStyle>, where each TransitionPlainStyle is of the format
	// {key: string, data?: any, style: PlainStyle}. However, the way we keep
	// internal states doesn't contain such a data structure (check the state and
	// TransitionMotionState). So when children function and others ask for such
	// data we need to generate them on the fly by combining mergedPropsStyles and
	// currentStyles/lastIdealStyles
	function rehydrateStyles(mergedPropsStyles, unreadPropStyles, plainStyles) {
	  // Copy the value to a `const` so that Flow understands that the const won't
	  // change and will be non-nullable in the callback below.
	  var cUnreadPropStyles = unreadPropStyles;
	  if (cUnreadPropStyles == null) {
	    return mergedPropsStyles.map(function (mergedPropsStyle, i) {
	      return {
	        key: mergedPropsStyle.key,
	        data: mergedPropsStyle.data,
	        style: plainStyles[i]
	      };
	    });
	  }
	  return mergedPropsStyles.map(function (mergedPropsStyle, i) {
	    for (var j = 0; j < cUnreadPropStyles.length; j++) {
	      if (cUnreadPropStyles[j].key === mergedPropsStyle.key) {
	        return {
	          key: cUnreadPropStyles[j].key,
	          data: cUnreadPropStyles[j].data,
	          style: plainStyles[i]
	        };
	      }
	    }
	    return { key: mergedPropsStyle.key, data: mergedPropsStyle.data, style: plainStyles[i] };
	  });
	}

	function shouldStopAnimationAll(currentStyles, destStyles, currentVelocities, mergedPropsStyles) {
	  if (mergedPropsStyles.length !== destStyles.length) {
	    return false;
	  }

	  for (var i = 0; i < mergedPropsStyles.length; i++) {
	    if (mergedPropsStyles[i].key !== destStyles[i].key) {
	      return false;
	    }
	  }

	  // we have the invariant that mergedPropsStyles and
	  // currentStyles/currentVelocities/last* are synced in terms of cells, see
	  // mergeAndSync comment for more info
	  for (var i = 0; i < mergedPropsStyles.length; i++) {
	    if (!_shouldStopAnimation2['default'](currentStyles[i], destStyles[i].style, currentVelocities[i])) {
	      return false;
	    }
	  }

	  return true;
	}

	// core key merging logic

	// things to do: say previously merged style is {a, b}, dest style (prop) is {b,
	// c}, previous current (interpolating) style is {a, b}
	// **invariant**: current[i] corresponds to merged[i] in terms of key

	// steps:
	// turn merged style into {a?, b, c}
	//    add c, value of c is destStyles.c
	//    maybe remove a, aka call willLeave(a), then merged is either {b, c} or {a, b, c}
	// turn current (interpolating) style from {a, b} into {a?, b, c}
	//    maybe remove a
	//    certainly add c, value of c is willEnter(c)
	// loop over merged and construct new current
	// dest doesn't change, that's owner's
	function mergeAndSync(willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldLastIdealStyles, oldLastIdealVelocities) {
	  var newMergedPropsStyles = _mergeDiff2['default'](oldMergedPropsStyles, destStyles, function (oldIndex, oldMergedPropsStyle) {
	    var leavingStyle = willLeave(oldMergedPropsStyle);
	    if (leavingStyle == null) {
	      didLeave({ key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data });
	      return null;
	    }
	    if (_shouldStopAnimation2['default'](oldCurrentStyles[oldIndex], leavingStyle, oldCurrentVelocities[oldIndex])) {
	      didLeave({ key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data });
	      return null;
	    }
	    return { key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data, style: leavingStyle };
	  });

	  var newCurrentStyles = [];
	  var newCurrentVelocities = [];
	  var newLastIdealStyles = [];
	  var newLastIdealVelocities = [];
	  for (var i = 0; i < newMergedPropsStyles.length; i++) {
	    var newMergedPropsStyleCell = newMergedPropsStyles[i];
	    var foundOldIndex = null;
	    for (var j = 0; j < oldMergedPropsStyles.length; j++) {
	      if (oldMergedPropsStyles[j].key === newMergedPropsStyleCell.key) {
	        foundOldIndex = j;
	        break;
	      }
	    }
	    // TODO: key search code
	    if (foundOldIndex == null) {
	      var plainStyle = willEnter(newMergedPropsStyleCell);
	      newCurrentStyles[i] = plainStyle;
	      newLastIdealStyles[i] = plainStyle;

	      var velocity = _mapToZero2['default'](newMergedPropsStyleCell.style);
	      newCurrentVelocities[i] = velocity;
	      newLastIdealVelocities[i] = velocity;
	    } else {
	      newCurrentStyles[i] = oldCurrentStyles[foundOldIndex];
	      newLastIdealStyles[i] = oldLastIdealStyles[foundOldIndex];
	      newCurrentVelocities[i] = oldCurrentVelocities[foundOldIndex];
	      newLastIdealVelocities[i] = oldLastIdealVelocities[foundOldIndex];
	    }
	  }

	  return [newMergedPropsStyles, newCurrentStyles, newCurrentVelocities, newLastIdealStyles, newLastIdealVelocities];
	}

	var TransitionMotion = (function (_React$Component) {
	  _inherits(TransitionMotion, _React$Component);

	  _createClass(TransitionMotion, null, [{
	    key: 'propTypes',
	    value: {
	      defaultStyles: _propTypes2['default'].arrayOf(_propTypes2['default'].shape({
	        key: _propTypes2['default'].string.isRequired,
	        data: _propTypes2['default'].any,
	        style: _propTypes2['default'].objectOf(_propTypes2['default'].number).isRequired
	      })),
	      styles: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].arrayOf(_propTypes2['default'].shape({
	        key: _propTypes2['default'].string.isRequired,
	        data: _propTypes2['default'].any,
	        style: _propTypes2['default'].objectOf(_propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].object])).isRequired
	      }))]).isRequired,
	      children: _propTypes2['default'].func.isRequired,
	      willEnter: _propTypes2['default'].func,
	      willLeave: _propTypes2['default'].func,
	      didLeave: _propTypes2['default'].func
	    },
	    enumerable: true
	  }, {
	    key: 'defaultProps',
	    value: {
	      willEnter: function willEnter(styleThatEntered) {
	        return _stripStyle2['default'](styleThatEntered.style);
	      },
	      // recall: returning null makes the current unmounting TransitionStyle
	      // disappear immediately
	      willLeave: function willLeave() {
	        return null;
	      },
	      didLeave: function didLeave() {}
	    },
	    enumerable: true
	  }]);

	  function TransitionMotion(props) {
	    var _this = this;

	    _classCallCheck(this, TransitionMotion);

	    _React$Component.call(this, props);
	    this.unmounting = false;
	    this.animationID = null;
	    this.prevTime = 0;
	    this.accumulatedTime = 0;
	    this.unreadPropStyles = null;

	    this.clearUnreadPropStyle = function (unreadPropStyles) {
	      var _mergeAndSync = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, unreadPropStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);

	      var mergedPropsStyles = _mergeAndSync[0];
	      var currentStyles = _mergeAndSync[1];
	      var currentVelocities = _mergeAndSync[2];
	      var lastIdealStyles = _mergeAndSync[3];
	      var lastIdealVelocities = _mergeAndSync[4];

	      for (var i = 0; i < unreadPropStyles.length; i++) {
	        var unreadPropStyle = unreadPropStyles[i].style;
	        var dirty = false;

	        for (var key in unreadPropStyle) {
	          if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {
	            continue;
	          }

	          var styleValue = unreadPropStyle[key];
	          if (typeof styleValue === 'number') {
	            if (!dirty) {
	              dirty = true;
	              currentStyles[i] = _extends({}, currentStyles[i]);
	              currentVelocities[i] = _extends({}, currentVelocities[i]);
	              lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);
	              lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);
	              mergedPropsStyles[i] = {
	                key: mergedPropsStyles[i].key,
	                data: mergedPropsStyles[i].data,
	                style: _extends({}, mergedPropsStyles[i].style)
	              };
	            }
	            currentStyles[i][key] = styleValue;
	            currentVelocities[i][key] = 0;
	            lastIdealStyles[i][key] = styleValue;
	            lastIdealVelocities[i][key] = 0;
	            mergedPropsStyles[i].style[key] = styleValue;
	          }
	        }
	      }

	      // unlike the other 2 components, we can't detect staleness and optionally
	      // opt out of setState here. each style object's data might contain new
	      // stuff we're not/cannot compare
	      _this.setState({
	        currentStyles: currentStyles,
	        currentVelocities: currentVelocities,
	        mergedPropsStyles: mergedPropsStyles,
	        lastIdealStyles: lastIdealStyles,
	        lastIdealVelocities: lastIdealVelocities
	      });
	    };

	    this.startAnimationIfNecessary = function () {
	      if (_this.unmounting) {
	        return;
	      }

	      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and
	      // call cb? No, otherwise accidental parent rerender causes cb trigger
	      _this.animationID = _raf2['default'](function (timestamp) {
	        // https://github.com/chenglou/react-motion/pull/420
	        // > if execution passes the conditional if (this.unmounting), then
	        // executes async defaultRaf and after that component unmounts and after
	        // that the callback of defaultRaf is called, then setState will be called
	        // on unmounted component.
	        if (_this.unmounting) {
	          return;
	        }

	        var propStyles = _this.props.styles;
	        var destStyles = typeof propStyles === 'function' ? propStyles(rehydrateStyles(_this.state.mergedPropsStyles, _this.unreadPropStyles, _this.state.lastIdealStyles)) : propStyles;

	        // check if we need to animate in the first place
	        if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities, _this.state.mergedPropsStyles)) {
	          // no need to cancel animationID here; shouldn't have any in flight
	          _this.animationID = null;
	          _this.accumulatedTime = 0;
	          return;
	        }

	        var currentTime = timestamp || _performanceNow2['default']();
	        var timeDelta = currentTime - _this.prevTime;
	        _this.prevTime = currentTime;
	        _this.accumulatedTime = _this.accumulatedTime + timeDelta;
	        // more than 10 frames? prolly switched browser tab. Restart
	        if (_this.accumulatedTime > msPerFrame * 10) {
	          _this.accumulatedTime = 0;
	        }

	        if (_this.accumulatedTime === 0) {
	          // no need to cancel animationID here; shouldn't have any in flight
	          _this.animationID = null;
	          _this.startAnimationIfNecessary();
	          return;
	        }

	        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
	        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);

	        var _mergeAndSync2 = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, destStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);

	        var newMergedPropsStyles = _mergeAndSync2[0];
	        var newCurrentStyles = _mergeAndSync2[1];
	        var newCurrentVelocities = _mergeAndSync2[2];
	        var newLastIdealStyles = _mergeAndSync2[3];
	        var newLastIdealVelocities = _mergeAndSync2[4];

	        for (var i = 0; i < newMergedPropsStyles.length; i++) {
	          var newMergedPropsStyle = newMergedPropsStyles[i].style;
	          var newCurrentStyle = {};
	          var newCurrentVelocity = {};
	          var newLastIdealStyle = {};
	          var newLastIdealVelocity = {};

	          for (var key in newMergedPropsStyle) {
	            if (!Object.prototype.hasOwnProperty.call(newMergedPropsStyle, key)) {
	              continue;
	            }

	            var styleValue = newMergedPropsStyle[key];
	            if (typeof styleValue === 'number') {
	              newCurrentStyle[key] = styleValue;
	              newCurrentVelocity[key] = 0;
	              newLastIdealStyle[key] = styleValue;
	              newLastIdealVelocity[key] = 0;
	            } else {
	              var newLastIdealStyleValue = newLastIdealStyles[i][key];
	              var newLastIdealVelocityValue = newLastIdealVelocities[i][key];
	              for (var j = 0; j < framesToCatchUp; j++) {
	                var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);

	                newLastIdealStyleValue = _stepper[0];
	                newLastIdealVelocityValue = _stepper[1];
	              }

	              var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);

	              var nextIdealX = _stepper2[0];
	              var nextIdealV = _stepper2[1];

	              newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
	              newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
	              newLastIdealStyle[key] = newLastIdealStyleValue;
	              newLastIdealVelocity[key] = newLastIdealVelocityValue;
	            }
	          }

	          newLastIdealStyles[i] = newLastIdealStyle;
	          newLastIdealVelocities[i] = newLastIdealVelocity;
	          newCurrentStyles[i] = newCurrentStyle;
	          newCurrentVelocities[i] = newCurrentVelocity;
	        }

	        _this.animationID = null;
	        // the amount we're looped over above
	        _this.accumulatedTime -= framesToCatchUp * msPerFrame;

	        _this.setState({
	          currentStyles: newCurrentStyles,
	          currentVelocities: newCurrentVelocities,
	          lastIdealStyles: newLastIdealStyles,
	          lastIdealVelocities: newLastIdealVelocities,
	          mergedPropsStyles: newMergedPropsStyles
	        });

	        _this.unreadPropStyles = null;

	        _this.startAnimationIfNecessary();
	      });
	    };

	    this.state = this.defaultState();
	  }

	  TransitionMotion.prototype.defaultState = function defaultState() {
	    var _props = this.props;
	    var defaultStyles = _props.defaultStyles;
	    var styles = _props.styles;
	    var willEnter = _props.willEnter;
	    var willLeave = _props.willLeave;
	    var didLeave = _props.didLeave;

	    var destStyles = typeof styles === 'function' ? styles(defaultStyles) : styles;

	    // this is special. for the first time around, we don't have a comparison
	    // between last (no last) and current merged props. we'll compute last so:
	    // say default is {a, b} and styles (dest style) is {b, c}, we'll
	    // fabricate last as {a, b}
	    var oldMergedPropsStyles = undefined;
	    if (defaultStyles == null) {
	      oldMergedPropsStyles = destStyles;
	    } else {
	      oldMergedPropsStyles = defaultStyles.map(function (defaultStyleCell) {
	        // TODO: key search code
	        for (var i = 0; i < destStyles.length; i++) {
	          if (destStyles[i].key === defaultStyleCell.key) {
	            return destStyles[i];
	          }
	        }
	        return defaultStyleCell;
	      });
	    }
	    var oldCurrentStyles = defaultStyles == null ? destStyles.map(function (s) {
	      return _stripStyle2['default'](s.style);
	    }) : defaultStyles.map(function (s) {
	      return _stripStyle2['default'](s.style);
	    });
	    var oldCurrentVelocities = defaultStyles == null ? destStyles.map(function (s) {
	      return _mapToZero2['default'](s.style);
	    }) : defaultStyles.map(function (s) {
	      return _mapToZero2['default'](s.style);
	    });

	    var _mergeAndSync3 = mergeAndSync(
	    // Because this is an old-style createReactClass component, Flow doesn't
	    // understand that the willEnter and willLeave props have default values
	    // and will always be present.
	    willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldCurrentStyles, // oldLastIdealStyles really
	    oldCurrentVelocities);

	    var mergedPropsStyles = _mergeAndSync3[0];
	    var currentStyles = _mergeAndSync3[1];
	    var currentVelocities = _mergeAndSync3[2];
	    var lastIdealStyles = _mergeAndSync3[3];
	    var lastIdealVelocities = _mergeAndSync3[4];
	    // oldLastIdealVelocities really

	    return {
	      currentStyles: currentStyles,
	      currentVelocities: currentVelocities,
	      lastIdealStyles: lastIdealStyles,
	      lastIdealVelocities: lastIdealVelocities,
	      mergedPropsStyles: mergedPropsStyles
	    };
	  };

	  // after checking for unreadPropStyles != null, we manually go set the
	  // non-interpolating values (those that are a number, without a spring
	  // config)

	  TransitionMotion.prototype.componentDidMount = function componentDidMount() {
	    this.prevTime = _performanceNow2['default']();
	    this.startAnimationIfNecessary();
	  };

	  TransitionMotion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
	    if (this.unreadPropStyles) {
	      // previous props haven't had the chance to be set yet; set them here
	      this.clearUnreadPropStyle(this.unreadPropStyles);
	    }

	    var styles = props.styles;
	    if (typeof styles === 'function') {
	      this.unreadPropStyles = styles(rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.lastIdealStyles));
	    } else {
	      this.unreadPropStyles = styles;
	    }

	    if (this.animationID == null) {
	      this.prevTime = _performanceNow2['default']();
	      this.startAnimationIfNecessary();
	    }
	  };

	  TransitionMotion.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.unmounting = true;
	    if (this.animationID != null) {
	      _raf2['default'].cancel(this.animationID);
	      this.animationID = null;
	    }
	  };

	  TransitionMotion.prototype.render = function render() {
	    var hydratedStyles = rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.currentStyles);
	    var renderedChildren = this.props.children(hydratedStyles);
	    return renderedChildren && _react2['default'].Children.only(renderedChildren);
	  };

	  return TransitionMotion;
	})(_react2['default'].Component);

	exports['default'] = TransitionMotion;
	module.exports = exports['default'];

	// list of styles, each containing interpolating values. Part of what's passed
	// to children function. Notice that this is
	// Array<ActualInterpolatingStyleObject>, without the wrapper that is {key: ...,
	// data: ... style: ActualInterpolatingStyleObject}. Only mergedPropsStyles
	// contains the key & data info (so that we only have a single source of truth
	// for these, and to save space). Check the comment for `rehydrateStyles` to
	// see how we regenerate the entirety of what's passed to children function

	// the array that keeps track of currently rendered stuff! Including stuff
	// that you've unmounted but that's still animating. This is where it lives

	// it's possible that currentStyle's value is stale: if props is immediately
	// changed from 0 to 400 to spring(0) again, the async currentStyle is still
	// at 0 (didn't have time to tick and interpolate even once). If we naively
	// compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).
	// In reality currentStyle should be 400

/***/ },
/* 253 */
/***/ function(module, exports) {

	

	// core keys merging algorithm. If previous render's keys are [a, b], and the
	// next render's [c, b, d], what's the final merged keys and ordering?

	// - c and a must both be before b
	// - b before d
	// - ordering between a and c ambiguous

	// this reduces to merging two partially ordered lists (e.g. lists where not
	// every item has a definite ordering, like comparing a and c above). For the
	// ambiguous ordering we deterministically choose to place the next render's
	// item after the previous'; so c after a

	// this is called a topological sorting. Except the existing algorithms don't
	// work well with js bc of the amount of allocation, and isn't optimized for our
	// current use-case bc the runtime is linear in terms of edges (see wiki for
	// meaning), which is huge when two lists have many common elements
	'use strict';

	exports.__esModule = true;
	exports['default'] = mergeDiff;

	function mergeDiff(prev, next, onRemove) {
	  // bookkeeping for easier access of a key's index below. This is 2 allocations +
	  // potentially triggering chrome hash map mode for objs (so it might be faster

	  var prevKeyIndex = {};
	  for (var i = 0; i < prev.length; i++) {
	    prevKeyIndex[prev[i].key] = i;
	  }
	  var nextKeyIndex = {};
	  for (var i = 0; i < next.length; i++) {
	    nextKeyIndex[next[i].key] = i;
	  }

	  // first, an overly elaborate way of merging prev and next, eliminating
	  // duplicates (in terms of keys). If there's dupe, keep the item in next).
	  // This way of writing it saves allocations
	  var ret = [];
	  for (var i = 0; i < next.length; i++) {
	    ret[i] = next[i];
	  }
	  for (var i = 0; i < prev.length; i++) {
	    if (!Object.prototype.hasOwnProperty.call(nextKeyIndex, prev[i].key)) {
	      // this is called my TM's `mergeAndSync`, which calls willLeave. We don't
	      // merge in keys that the user desires to kill
	      var fill = onRemove(i, prev[i]);
	      if (fill != null) {
	        ret.push(fill);
	      }
	    }
	  }

	  // now all the items all present. Core sorting logic to have the right order
	  return ret.sort(function (a, b) {
	    var nextOrderA = nextKeyIndex[a.key];
	    var nextOrderB = nextKeyIndex[b.key];
	    var prevOrderA = prevKeyIndex[a.key];
	    var prevOrderB = prevKeyIndex[b.key];

	    if (nextOrderA != null && nextOrderB != null) {
	      // both keys in next
	      return nextKeyIndex[a.key] - nextKeyIndex[b.key];
	    } else if (prevOrderA != null && prevOrderB != null) {
	      // both keys in prev
	      return prevKeyIndex[a.key] - prevKeyIndex[b.key];
	    } else if (nextOrderA != null) {
	      // key a in next, key b in prev

	      // how to determine the order between a and b? We find a "pivot" (term
	      // abuse), a key present in both prev and next, that is sandwiched between
	      // a and b. In the context of our above example, if we're comparing a and
	      // d, b's (the only) pivot
	      for (var i = 0; i < next.length; i++) {
	        var pivot = next[i].key;
	        if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {
	          continue;
	        }

	        if (nextOrderA < nextKeyIndex[pivot] && prevOrderB > prevKeyIndex[pivot]) {
	          return -1;
	        } else if (nextOrderA > nextKeyIndex[pivot] && prevOrderB < prevKeyIndex[pivot]) {
	          return 1;
	        }
	      }
	      // pluggable. default to: next bigger than prev
	      return 1;
	    }
	    // prevOrderA, nextOrderB
	    for (var i = 0; i < next.length; i++) {
	      var pivot = next[i].key;
	      if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {
	        continue;
	      }
	      if (nextOrderB < nextKeyIndex[pivot] && prevOrderA > prevKeyIndex[pivot]) {
	        return 1;
	      } else if (nextOrderB > nextKeyIndex[pivot] && prevOrderA < prevKeyIndex[pivot]) {
	        return -1;
	      }
	    }
	    // pluggable. default to: next bigger than prev
	    return -1;
	  });
	}

	module.exports = exports['default'];
	// to loop through and find a key's index each time), but I no longer care

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports['default'] = spring;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _presets = __webpack_require__(255);

	var _presets2 = _interopRequireDefault(_presets);

	var defaultConfig = _extends({}, _presets2['default'].noWobble, {
	  precision: 0.01
	});

	function spring(val, config) {
	  return _extends({}, defaultConfig, config, { val: val });
	}

	module.exports = exports['default'];

/***/ },
/* 255 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports["default"] = {
	  noWobble: { stiffness: 170, damping: 26 }, // the default, if nothing provided
	  gentle: { stiffness: 120, damping: 14 },
	  wobbly: { stiffness: 180, damping: 12 },
	  stiff: { stiffness: 210, damping: 20 }
	};
	module.exports = exports["default"];

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;
	exports['default'] = reorderKeys;

	var hasWarned = false;

	function reorderKeys() {
	  if (process.env.NODE_ENV === 'development') {
	    if (!hasWarned) {
	      hasWarned = true;
	      console.error('`reorderKeys` has been removed, since it is no longer needed for TransitionMotion\'s new styles array API.');
	    }
	  }
	}

	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _class2, _class4, _class5, _class7, _class8, _temp3, _class9;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _mobxReact = __webpack_require__(62);

	var _styledComponents = __webpack_require__(64);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _chromaJs = __webpack_require__(114);

	var _chromaJs2 = _interopRequireDefault(_chromaJs);

	var _mobx = __webpack_require__(63);

	var _reactMusic = __webpack_require__(129);

	var _md = __webpack_require__(115);

	var _generateChildren = __webpack_require__(122);

	var _button = __webpack_require__(156);

	var _button2 = _interopRequireDefault(_button);

	var _configControl = __webpack_require__(258);

	var _configControl2 = _interopRequireDefault(_configControl);

	var _utils = __webpack_require__(121);

	var _store = __webpack_require__(118);

	var _store2 = _interopRequireDefault(_store);

	var _colors = __webpack_require__(127);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var StyledTempoControl = _styledComponents2.default.div.withConfig({
	  displayName: "beat__StyledTempoControl",
	  componentId: "sc-1aohiw9-0"
	})(["display:inline-block;input[type=\"number\"]{width:45px;font-size:16px;}"]);

	var TempoControl = (0, _mobxReact.observer)(_class = function (_Component) {
	  _inherits(TempoControl, _Component);

	  function TempoControl() {
	    _classCallCheck(this, TempoControl);

	    return _possibleConstructorReturn(this, (TempoControl.__proto__ || Object.getPrototypeOf(TempoControl)).apply(this, arguments));
	  }

	  _createClass(TempoControl, [{
	    key: "render",
	    value: function render() {
	      return _react2.default.createElement(
	        StyledTempoControl,
	        null,
	        _react2.default.createElement(
	          BILabel,
	          null,
	          "Tempo"
	        ),
	        _react2.default.createElement("input", {
	          type: "number",
	          value: _store2.default.tempo,
	          min: 40,
	          max: 200,
	          onChange: function onChange(e) {
	            return _store2.default.setTempo(parseInt(e.target.value));
	          }
	        })
	      );
	    }
	  }]);

	  return TempoControl;
	}(_react.Component)) || _class;

	var Column = _styledComponents2.default.div.withConfig({
	  displayName: "beat__Column",
	  componentId: "sc-1aohiw9-1"
	})(["display:table-cell;text-align:", ";width:", ";"], function (props) {
	  return props.textLeft ? "left" : "center";
	}, function (props) {
	  return props.width ? props.width + "px" : "auto";
	});

	var GainSlider = (0, _mobxReact.observer)(_class2 = function (_Component2) {
	  _inherits(GainSlider, _Component2);

	  function GainSlider() {
	    var _ref;

	    var _temp, _this2, _ret;

	    _classCallCheck(this, GainSlider);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this2 = _possibleConstructorReturn(this, (_ref = GainSlider.__proto__ || Object.getPrototypeOf(GainSlider)).call.apply(_ref, [this].concat(args))), _this2), _this2.handleGainChange = function (e) {
	      if (_this2.props.trackType == "synth") {
	        _store2.default.setSynthGain(e.target.value / 100);
	      } else {
	        _store2.default.setGain(_this2.props.sample, e.target.value / 100);
	      }
	    }, _temp), _possibleConstructorReturn(_this2, _ret);
	  }

	  _createClass(GainSlider, [{
	    key: "render",
	    value: function render() {
	      var sample = this.props.sample;

	      var gain = void 0;
	      if (this.props.trackType == "synth") {
	        gain = _store2.default.synthGain * 100;
	      } else {
	        gain = _store2.default.samples[sample].gain * 100;
	      }
	      return _react2.default.createElement("input", {
	        style: { verticalAlign: "middle", width: 80 },
	        type: "range",
	        min: 0,
	        max: 100,
	        value: gain,
	        onChange: this.handleGainChange
	      });
	    }
	  }]);

	  return GainSlider;
	}(_react.Component)) || _class2;

	var NoteWrapper = _styledComponents2.default.div.withConfig({
	  displayName: "beat__NoteWrapper",
	  componentId: "sc-1aohiw9-2"
	})(["border-right:", ";display:inline-block;&:last-child{border-right:0;}"], function (props) {
	  return props.separator ? "1px solid white" : "0";
	});

	var StyledNote = _styledComponents2.default.div.withConfig({
	  displayName: "beat__StyledNote",
	  componentId: "sc-1aohiw9-3"
	})(["background-color:", ";border-radius:2px;cursor:pointer;display:inline-block;height:20px;margin:0 5px;font-size:15px;width:20px;&:hover{background-color:", ";}"], function (props) {
	  return props.active ? "pink" : props.on ? "red" : "gray";
	}, function (props) {
	  return props.active ? "lightpink" : props.on ? "#FF6666" : "darkgray";
	});

	var Note = (0, _mobxReact.observer)(_class4 = function (_Component3) {
	  _inherits(Note, _Component3);

	  function Note() {
	    _classCallCheck(this, Note);

	    return _possibleConstructorReturn(this, (Note.__proto__ || Object.getPrototypeOf(Note)).apply(this, arguments));
	  }

	  _createClass(Note, [{
	    key: "render",
	    value: function render() {
	      var active = this.props.index == _store2.default.currentLitNote && _store2.default.playingCurrentBeat;
	      var separator = this.props.index % 4 === 3;

	      return _react2.default.createElement(
	        NoteWrapper,
	        { separator: separator },
	        _react2.default.createElement(
	          StyledNote,
	          {
	            on: this.props.value === 1,
	            active: active,
	            onMouseDown: this.props.onClick,
	            onMouseOver: this.props.onMouseOver,
	            className: "note"
	          },
	          "\xA0"
	        )
	      );
	    }
	  }]);

	  return Note;
	}(_react.Component)) || _class4;

	var trackNameStyles = {
	  display: "inline-block",
	  width: 160,
	  textAlign: "center"
	};

	var RemoveTrackButton = _styledComponents2.default.span.withConfig({
	  displayName: "beat__RemoveTrackButton",
	  componentId: "sc-1aohiw9-4"
	})(["color:white;cursor:pointer;font-size:30px;margin-left:5px;position:relative;top:-12px;height:15px;width:15px;display:inline-block;vertical-align:middle;&:hover{color:red;}"]);

	var MuteTrackButton = _styledComponents2.default.span.withConfig({
	  displayName: "beat__MuteTrackButton",
	  componentId: "sc-1aohiw9-5"
	})(["background-color:", ";border-radius:2px;color:black;cursor:pointer;display:inline-block;font-size:15px;height:20px;margin:3px;margin-left:10px;width:20px;&:hover{background-color:orange;}"], function (props) {
	  return props.active ? "orange" : "gray";
	});

	var SoloTrackButton = _styledComponents2.default.span.withConfig({
	  displayName: "beat__SoloTrackButton",
	  componentId: "sc-1aohiw9-6"
	})(["background-color:", ";border-radius:2px;color:black;cursor:pointer;display:inline-block;font-size:15px;height:20px;margin:3px;width:20px;&:hover{background-color:green;}"], function (props) {
	  return props.active ? "green" : "gray";
	});

	var StyledTrack = _styledComponents2.default.div.withConfig({
	  displayName: "beat__StyledTrack",
	  componentId: "sc-1aohiw9-7"
	})(["display:table-row;"]);

	var Track = (0, _mobxReact.observer)(_class5 = function (_Component4) {
	  _inherits(Track, _Component4);

	  function Track() {
	    var _ref2;

	    var _temp2, _this4, _ret2;

	    _classCallCheck(this, Track);

	    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	      args[_key2] = arguments[_key2];
	    }

	    return _ret2 = (_temp2 = (_this4 = _possibleConstructorReturn(this, (_ref2 = Track.__proto__ || Object.getPrototypeOf(Track)).call.apply(_ref2, [this].concat(args))), _this4), _this4.state = {
	      lastEntered: -1
	    }, _this4.handleNoteToggle = function (noteNumber, wasOn, wasClicked) {
	      var _this4$props = _this4.props,
	          handleEdit = _this4$props.handleEdit,
	          trackNum = _this4$props.trackNum;


	      if (wasClicked) {
	        handleEdit(trackNum, noteNumber);
	      } else if (!wasClicked && wasOn && _store2.default.currentBeat.tracks[trackNum].sequence[noteNumber]) {
	        handleEdit(trackNum, noteNumber);
	      } else if (!wasClicked && !wasOn && !_store2.default.currentBeat.tracks[trackNum].sequence[noteNumber]) {
	        handleEdit(trackNum, noteNumber);
	      }
	    }, _this4.handleRemoveTrack = function () {
	      _this4.props.handleRemoveTrack(_this4.props.trackNum);
	    }, _this4.handleSampleChange = function (e) {
	      _this4.props.handleSampleChange(_this4.props.trackNum, e.target.value);
	    }, _this4.renderSamplePreviewer = function () {
	      if (_this4.props.track.trackType == "synth") {
	        return _react2.default.createElement(
	          "span",
	          null,
	          _react2.default.createElement(
	            "button",
	            {
	              style: { verticalAlign: "middle" },
	              onClick: function onClick() {
	                _store2.default.toggleTrackPreviewer(_this4.props.track.sample);
	              }
	            },
	            "Play"
	          ),
	          _react2.default.createElement(
	            _reactMusic.Song,
	            {
	              playing: _store2.default.trackPreviewers[_this4.props.track.sample],
	              tempo: _store2.default.tempo,
	              ref: function ref(c) {
	                _this4.song = c;
	              }
	            },
	            _react2.default.createElement(
	              _reactMusic.Sequencer,
	              {
	                bars: 1,
	                resolution: _this4.props.track.sequence.length
	              },
	              _react2.default.createElement(_reactMusic.Synth, {
	                key: _this4.props.track.key + "synth",
	                type: "square",
	                steps: [[0, 2, _this4.props.track.sample]],
	                gain: _store2.default.synthGain / _store2.default.synthGainCorrection
	              })
	            )
	          )
	        );
	      } else {
	        return _react2.default.createElement(
	          "span",
	          null,
	          _react2.default.createElement(
	            "button",
	            { style: { verticalAlign: "middle" }, onClick: function onClick() {
	                return _this4.samplePreviewer.play();
	              } },
	            "Play"
	          ),
	          _react2.default.createElement(
	            "audio",
	            { ref: function ref(_ref3) {
	                return _this4.samplePreviewer = _ref3;
	              } },
	            _react2.default.createElement("source", { src: _store2.default.samples[_this4.props.track.sample].path })
	          )
	        );
	      }
	    }, _temp2), _possibleConstructorReturn(_this4, _ret2);
	  }

	  _createClass(Track, [{
	    key: "render",
	    value: function render() {
	      var _this5 = this;

	      var notes = this.props.track.sequence.map(function (note, i) {
	        return _react2.default.createElement(Note, {
	          key: i + "." + note,
	          value: note,
	          onClick: function onClick(e) {
	            _this5.setState({
	              lastEntered: i,
	              lastClickedNoteWasOn: _store2.default.currentBeat.tracks[_this5.props.trackNum].sequence[i] > 0
	            });
	            _this5.handleNoteToggle(i, note, true);
	          },
	          onMouseOver: function onMouseOver(e) {
	            if (e.buttons == 1 && _this5.state.lastEntered != i) {
	              _this5.handleNoteToggle(i, _this5.state.lastClickedNoteWasOn, false);
	              _this5.setState({
	                lastEntered: i
	              });
	            }
	          },
	          index: i
	        });
	      });

	      var track = this.props.track;

	      var trackNameParts = track.sample.split("/");
	      var trackName = trackNameParts[trackNameParts.length - 1].split(".")[0];
	      var activeSolo = void 0;
	      var activeMute = void 0;
	      activeMute = track.mute;
	      activeSolo = track.solo;
	      var sampleOptions = Object.keys(_store2.default.samples).map(function (key) {
	        var sample = _store2.default.samples[key];
	        return _react2.default.createElement(
	          "option",
	          {
	            key: sample.path,
	            value: key
	          },
	          sample.name
	        );
	      });

	      if (track.trackType === "synth") {
	        sampleOptions = _utils.allNotesInRange.map(function (noteName) {
	          return _react2.default.createElement(
	            "option",
	            {
	              key: noteName,
	              value: noteName
	            },
	            noteName
	          );
	        });
	      }

	      return _react2.default.createElement(
	        StyledTrack,
	        null,
	        _react2.default.createElement(
	          Column,
	          null,
	          this.renderSamplePreviewer()
	        ),
	        _react2.default.createElement(
	          Column,
	          null,
	          _react2.default.createElement(
	            "div",
	            { style: trackNameStyles },
	            _react2.default.createElement(
	              "select",
	              { style: { fontSize: 15, backgroundColor: 'lightgray' }, value: track.sample, onChange: this.handleSampleChange },
	              sampleOptions
	            )
	          )
	        ),
	        _react2.default.createElement(
	          Column,
	          null,
	          notes
	        ),
	        _react2.default.createElement(
	          Column,
	          null,
	          _react2.default.createElement(
	            MuteTrackButton,
	            {
	              active: activeMute,
	              onClick: function onClick() {
	                _this5.props.handleMuteTrack(track);
	              }
	            },
	            "M"
	          ),
	          _react2.default.createElement(
	            SoloTrackButton,
	            {
	              active: activeSolo,
	              onClick: function onClick() {
	                _this5.props.handleSoloTrack(track);
	              }
	            },
	            "S"
	          )
	        ),
	        _react2.default.createElement(
	          Column,
	          null,
	          _react2.default.createElement(GainSlider, { sample: track.sample, trackType: track.trackType })
	        ),
	        _react2.default.createElement(
	          Column,
	          null,
	          _react2.default.createElement(
	            RemoveTrackButton,
	            {
	              className: "remove-track",
	              title: "Delete track}",
	              onClick: this.handleRemoveTrack
	            },
	            "\xD7"
	          )
	        )
	      );
	    }
	  }]);

	  return Track;
	}(_react.Component)) || _class5;

	var StyledBeat = _styledComponents2.default.div.withConfig({
	  displayName: "beat__StyledBeat",
	  componentId: "sc-1aohiw9-8"
	})(["display:table;position:relative;margin:0 auto;"]);

	var BeatInfo = _styledComponents2.default.span.withConfig({
	  displayName: "beat__BeatInfo",
	  componentId: "sc-1aohiw9-9"
	})(["margin:0 10px;"]);

	var BILabel = _styledComponents2.default.span.withConfig({
	  displayName: "beat__BILabel",
	  componentId: "sc-1aohiw9-10"
	})(["color:#77777f;margin:4px;"]);

	var BIData = _styledComponents2.default.span.withConfig({
	  displayName: "beat__BIData",
	  componentId: "sc-1aohiw9-11"
	})(["color:white;margin:4px;"]);

	var StyledPlayControls = _styledComponents2.default.div.withConfig({
	  displayName: "beat__StyledPlayControls",
	  componentId: "sc-1aohiw9-12"
	})(["display:inline-block;vertical-align:middle;svg{display:inline-block;transition:0.2s color;vertical-align:middle;}svg:hover{cursor:pointer;color:lightgreen;}"]);

	var ControlPanel = _styledComponents2.default.div.withConfig({
	  displayName: "beat__ControlPanel",
	  componentId: "sc-1aohiw9-13"
	})(["display:table-row;width:100%;"]);

	var PlayControls = (0, _mobxReact.observer)(_class7 = (_temp3 = _class8 = function (_Component5) {
	  _inherits(PlayControls, _Component5);

	  function PlayControls() {
	    _classCallCheck(this, PlayControls);

	    return _possibleConstructorReturn(this, (PlayControls.__proto__ || Object.getPrototypeOf(PlayControls)).apply(this, arguments));
	  }

	  _createClass(PlayControls, [{
	    key: "render",
	    value: function render() {
	      var size = this.props.size;


	      var PlayStopButton = _store2.default.playingCurrentBeat ? _md.MdStop : _md.MdPlayArrow;

	      return _react2.default.createElement(
	        StyledPlayControls,
	        null,
	        _react2.default.createElement(_md.MdSkipPrevious, {
	          size: size,
	          onClick: _store2.default.prevBeat
	        }),
	        _react2.default.createElement(PlayStopButton, {
	          size: size,
	          onClick: _store2.default.togglePlayCurrentBeat
	        }),
	        _react2.default.createElement(_md.MdSkipNext, {
	          size: size,
	          onClick: _store2.default.nextBeat
	        })
	      );
	    }
	  }]);

	  return PlayControls;
	}(_react.Component), _class8.defaultProps = {
	  size: 40
	}, _temp3)) || _class7;

	var Beat = (0, _mobxReact.observer)(_class9 = function (_Component6) {
	  _inherits(Beat, _Component6);

	  function Beat() {
	    var _ref4;

	    var _temp4, _this7, _ret3;

	    _classCallCheck(this, Beat);

	    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
	      args[_key3] = arguments[_key3];
	    }

	    return _ret3 = (_temp4 = (_this7 = _possibleConstructorReturn(this, (_ref4 = Beat.__proto__ || Object.getPrototypeOf(Beat)).call.apply(_ref4, [this].concat(args))), _this7), _this7.state = {
	      mousedown: false,
	      activeMuteAll: false,
	      activeSoloAll: false
	    }, _this7.handleAddSamplerTrack = function () {
	      _this7.handleAddTrack("sampler");
	    }, _this7.handleAddSynthTrack = function () {
	      _this7.handleAddTrack("synth");
	    }, _this7.handleAddTrack = function (trackType) {
	      var steps = _this7.props.beat.tracks[0].sequence.length;
	      var sample = void 0;

	      if (trackType === "sampler") {
	        var beatSamples = _this7.props.beat.tracks.map(function (track) {
	          return track.sample;
	        });
	        var unusedSamples = Object.keys(_store2.default.samples).filter(function (key) {
	          var sample = _store2.default.samples[key];
	          return !beatSamples.includes(sample.path);
	        });

	        sample = unusedSamples[0];
	      } else if (trackType === "synth") {
	        sample = _utils.allNotesInRange[0];
	      }

	      var sequence = Array(steps).fill(0);
	      _store2.default.addTrackToCurrentBeat({ sample: sample, sequence: sequence, trackType: trackType });
	    }, _this7.handleEdit = function (track, note) {
	      var beat = _this7.props.beat;

	      _this7.props.handleToggleNote(track, note);
	    }, _this7.handleSampleChange = function (track, sample) {
	      var beat = _this7.props.beat;

	      _this7.props.handleSetSample(track, sample);
	    }, _this7.handleMuteAll = function () {
	      _store2.default.toggleMuteAll(_this7.state.activeMuteAll);
	      _this7.setState({
	        activeMuteAll: !_this7.state.activeMuteAll
	      }, function () {
	        if (_this7.state.activeMuteAll) {
	          _this7.setState({
	            activeSoloAll: false
	          });
	        }
	      });
	    }, _this7.handleSoloAll = function () {
	      _store2.default.toggleSoloAll(_this7.state.activeSoloAll);

	      _this7.setState({
	        activeSoloAll: !_this7.state.activeSoloAll
	      }, function () {
	        if (_this7.state.activeSoloAll) {
	          _this7.setState({
	            activeMuteAll: false
	          });
	        }
	      });
	    }, _this7.handleMuteTrack = function (track) {
	      _store2.default.handleMuteTrack(track);

	      if (!track.mute) {
	        _this7.setState({
	          activeMuteAll: false
	        });
	      }
	      var numMutedSamples = 0;
	      var numSamples = 0;
	      var numSynth = 0;
	      _this7.props.beat.tracks.forEach(function (track) {
	        if (track.mute) {
	          ++numMutedSamples;
	        }
	        ++numSamples;
	      });

	      if (numMutedSamples == numSamples) {
	        _this7.setState({
	          activeMuteAll: true
	        });
	      }
	    }, _this7.handleSoloTrack = function (track) {
	      _store2.default.handleSoloTrack(track);
	      if (!track.solo) {
	        _this7.setState({
	          activeSoloAll: false
	        });
	      }
	      var numSoloSamples = 0;
	      var numSamples = 0;
	      var numSynth = 0;
	      _this7.props.beat.tracks.forEach(function (track) {
	        if (track.solo) {
	          ++numSoloSamples;
	        }
	        ++numSamples;
	      });

	      if (numSoloSamples == numSamples) {
	        _this7.setState({
	          activeSoloAll: true
	        });
	      }
	    }, _this7.handleMitosis = function () {
	      var newBeat = (0, _generateChildren.mitosis)(_this7.props.beat);
	      _store2.default.addBeatToCurrentGen(newBeat);
	    }, _temp4), _possibleConstructorReturn(_this7, _ret3);
	  }

	  _createClass(Beat, [{
	    key: "render",
	    value: function render() {
	      var _this8 = this;

	      var tracks = this.props.beat.tracks.map(function (track, i) {
	        return _react2.default.createElement(Track, {
	          key: _this8.props.beat.key + "." + i,
	          trackNum: i,
	          track: track,
	          handleEdit: _this8.handleEdit,
	          handleRemoveTrack: _this8.props.handleRemoveTrack,
	          handleSampleChange: _this8.handleSampleChange,
	          handleMuteTrack: _this8.handleMuteTrack,
	          handleSoloTrack: _this8.handleSoloTrack
	        });
	      });

	      return _react2.default.createElement(
	        StyledBeat,
	        null,
	        _react2.default.createElement(
	          ControlPanel,
	          null,
	          _react2.default.createElement(
	            Column,
	            null,
	            _react2.default.createElement(
	              _button2.default,
	              {
	                small: true,
	                active: _store2.default.metronome,
	                onClick: _store2.default.toggleMetronome
	              },
	              "Metronome"
	            )
	          ),
	          _react2.default.createElement(
	            Column,
	            null,
	            _react2.default.createElement(PlayControls, null)
	          ),
	          _react2.default.createElement(
	            Column,
	            { textLeft: true },
	            _react2.default.createElement(TempoControl, null),
	            _react2.default.createElement(
	              BeatInfo,
	              null,
	              _react2.default.createElement(
	                BILabel,
	                null,
	                "Beat"
	              ),
	              _react2.default.createElement(
	                BIData,
	                null,
	                this.props.beat.key
	              )
	            ),
	            _react2.default.createElement(
	              BeatInfo,
	              null,
	              _react2.default.createElement(
	                BILabel,
	                null,
	                "Score"
	              ),
	              _react2.default.createElement(
	                BIData,
	                null,
	                this.props.beat.score
	              )
	            )
	          ),
	          _react2.default.createElement(
	            Column,
	            null,
	            _react2.default.createElement(
	              MuteTrackButton,
	              {
	                active: this.state.activeMuteAll,
	                onClick: function onClick() {
	                  _this8.handleMuteAll();
	                }
	              },
	              "M"
	            ),
	            _react2.default.createElement(
	              SoloTrackButton,
	              {
	                active: this.state.activeSoloAll,
	                onClick: function onClick() {
	                  _this8.handleSoloAll();
	                }
	              },
	              "S"
	            )
	          )
	        ),
	        tracks,
	        _react2.default.createElement(
	          "div",
	          { style: { display: "table-row" } },
	          _react2.default.createElement(Column, null),
	          _react2.default.createElement(Column, null),
	          _react2.default.createElement(
	            Column,
	            { textLeft: true },
	            _react2.default.createElement(
	              _button2.default,
	              { small: true, color: [_colors.green], onClick: this.handleMitosis },
	              "Mitosis"
	            ),
	            _react2.default.createElement(
	              _button2.default,
	              { small: true, onClick: function onClick() {
	                  return _store2.default.addBeatToArrangement(_this8.props.beat.key);
	                } },
	              "Add beat to arrangement"
	            ),
	            _react2.default.createElement(
	              _button2.default,
	              { small: true, onClick: this.handleAddSamplerTrack },
	              "+ Sampler track"
	            ),
	            _react2.default.createElement(
	              _button2.default,
	              { small: true, onClick: this.handleAddSynthTrack },
	              "+ Synth track"
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return Beat;
	}(_react.Component)) || _class9;

	exports.default = Beat;

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _mobxReact = __webpack_require__(62);

	var _styledComponents = __webpack_require__(64);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _store = __webpack_require__(118);

	var _store2 = _interopRequireDefault(_store);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var leftBlockWidth = 60;
	var rightBlockWidth = 215;
	var height = 50;

	var StyledConfigControl = _styledComponents2.default.div.withConfig({
	  displayName: "configControl__StyledConfigControl",
	  componentId: "s7lsl9-0"
	})(["background:#444;color:black;display:inline-block;position:relative;width:", "px;height:", "px;&::after{content:\"\";clear:both;display:table;}"], rightBlockWidth + leftBlockWidth, height);

	var Label = _styledComponents2.default.div.withConfig({
	  displayName: "configControl__Label",
	  componentId: "s7lsl9-1"
	})(["color:white;width:", "px;display:inline-block;padding:1px 8px;font-family:\"Hind Madurai\";box-sizing:border-box;"], 200);

	var StyledRange = _styledComponents2.default.input.withConfig({
	  displayName: "configControl__StyledRange",
	  componentId: "s7lsl9-2"
	})(["margin:auto;-webkit-appearance:none;position:relative;overflow:hidden;height:26px;width:100%;cursor:pointer;border-radius:0;&::-webkit-slider-runnable-track{background:#ddd;}&::-webkit-slider-thumb{-webkit-appearance:none;width:20px;height:40px;background:#fff;box-shadow:-100vw 0 0 100vw #0980B2;border:2px solid #555;}&::-moz-range-track{height:40px;background:#ddd;}&::-moz-range-thumb{background:#fff;height:40px;width:20px;border:3px solid #999;border-radius:0 !important;box-shadow:-100vw 0 0 100vw #0980B2;box-sizing:border-box;}&::-ms-fill-lower{background:#0980B2;}&::-ms-thumb{background:#fff;border:2px solid #999;height:40px;width:20px;box-sizing:border-box;}&::-ms-ticks-after{display:none;}&::-ms-ticks-before{display:none;}&::-ms-track{background:#ddd;color:transparent;height:40px;border:none;}&::-ms-tooltip{display:none;}"]);

	var InputField = _styledComponents2.default.input.withConfig({
	  displayName: "configControl__InputField",
	  componentId: "s7lsl9-3"
	})(["display:inline-block;font-size:17px;height:100%;margin:0;border:0;padding:0;text-align:center;width:", "px;"], leftBlockWidth);

	var LeftBlock = _styledComponents2.default.div.withConfig({
	  displayName: "configControl__LeftBlock",
	  componentId: "s7lsl9-4"
	})(["bottom:0;display:inline-block;left:0;position:absolute;top:0;width:", "px;"], leftBlockWidth);

	var RightBlock = _styledComponents2.default.div.withConfig({
	  displayName: "configControl__RightBlock",
	  componentId: "s7lsl9-5"
	})(["bottom:0;display:inline-block;right:0;position:absolute;top:0;width:", "px;"], rightBlockWidth);

	var ConfigControl = (0, _mobxReact.observer)(_class = function (_Component) {
	  _inherits(ConfigControl, _Component);

	  function ConfigControl() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, ConfigControl);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ConfigControl.__proto__ || Object.getPrototypeOf(ConfigControl)).call.apply(_ref, [this].concat(args))), _this), _this.handleChange = function (e) {
	      _this.props.changeHandler(parseInt(e.target.value));
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(ConfigControl, [{
	    key: "render",
	    value: function render() {
	      var _props = this.props,
	          name = _props.name,
	          value = _props.value,
	          min = _props.min,
	          max = _props.max;


	      return _react2.default.createElement(
	        StyledConfigControl,
	        null,
	        _react2.default.createElement(
	          LeftBlock,
	          null,
	          _react2.default.createElement(InputField, {
	            type: "number",
	            value: value,
	            min: min,
	            max: max,
	            onChange: this.handleChange
	          })
	        ),
	        _react2.default.createElement(
	          RightBlock,
	          null,
	          _react2.default.createElement(
	            Label,
	            null,
	            name
	          ),
	          _react2.default.createElement(StyledRange, {
	            type: "range",
	            value: value,
	            min: min,
	            max: max,
	            onChange: this.handleChange
	          })
	        )
	      );
	    }
	  }]);

	  return ConfigControl;
	}(_react.Component)) || _class;

	exports.default = ConfigControl;

	//<ConfigControl
	//name          = "Tempo"
	//value         = {store.tempo}
	//changeHandler = {store.setTempo}
	//min           = {40}
	//max           = {200}
	///>

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _mobxReact = __webpack_require__(62);

	var _styledComponents = __webpack_require__(64);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _chromaJs = __webpack_require__(114);

	var _chromaJs2 = _interopRequireDefault(_chromaJs);

	var _button = __webpack_require__(156);

	var _button2 = _interopRequireDefault(_button);

	var _utils = __webpack_require__(121);

	var _beatTemplates = __webpack_require__(119);

	var _beatTemplates2 = _interopRequireDefault(_beatTemplates);

	var _store = __webpack_require__(118);

	var _store2 = _interopRequireDefault(_store);

	var _colors = __webpack_require__(127);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var BeatOptionHeader = _styledComponents2.default.div.withConfig({
	  displayName: "newBeatManager__BeatOptionHeader",
	  componentId: "sc-1ritg5d-0"
	})(["font-weight bold;margin:8px 4px 12px;"]);

	var NewBeatOption = _styledComponents2.default.div.withConfig({
	  displayName: "newBeatManager__NewBeatOption",
	  componentId: "sc-1ritg5d-1"
	})(["background-color:", ";border-radius:3px;border:1px solid #555;display:inline-block;margin:3px;padding:4px 10px;cursor:pointer;transition:all 0.2s;&:hover{background-color:", ";}"], (0, _chromaJs2.default)(_colors.green).darken(0.1), (0, _chromaJs2.default)("green").brighten(1.2));

	var NewBeatHeader = _styledComponents2.default.div.withConfig({
	  displayName: "newBeatManager__NewBeatHeader",
	  componentId: "sc-1ritg5d-2"
	})(["font-size:32px;font-family:\"Hind Madurai\";"]);

	var StyledNewBeatPanel = _styledComponents2.default.div.withConfig({
	  displayName: "newBeatManager__StyledNewBeatPanel",
	  componentId: "sc-1ritg5d-3"
	})(["background-color:", ";font-family:sans-serif;font-size:16px;padding:10px;border-top:1px solid ", ";"], _colors.headerFooterBgColor, _colors.lightGray);

	var NewBeatManager = (0, _mobxReact.observer)(_class = function (_Component) {
	  _inherits(NewBeatManager, _Component);

	  function NewBeatManager() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, NewBeatManager);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = NewBeatManager.__proto__ || Object.getPrototypeOf(NewBeatManager)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickOutside = function () {
	      _store2.default.toggleAddNewBeat(false);
	    }, _this.addEmptyBeat = function () {
	      var numSteps = parseInt(_this.stepsSelect.value);
	      var emptyBeat = {
	        name: "",
	        score: 0,
	        tracks: [{
	          trackType: "sampler",
	          sample: "samples/kick.wav",
	          sequence: new Array(numSteps).fill(0),
	          mute: false,
	          solo: false
	        }]
	      };

	      _store2.default.addBeatToCurrentGen(emptyBeat);
	      _store2.default.toggleAddNewBeat();
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(NewBeatManager, [{
	    key: "render",
	    value: function render() {
	      var _this2 = this;

	      var stepOptions = [2, 4, 8, 16, 32].map(function (stepCount) {
	        return _react2.default.createElement(
	          "option",
	          {
	            key: stepCount,
	            value: stepCount
	          },
	          stepCount
	        );
	      });

	      var copyOptions = _store2.default.allGenerations.map(function (generation, i) {
	        var generationOptions = generation.map(function (beat, i) {
	          return _react2.default.createElement(
	            NewBeatOption,
	            {
	              key: i,
	              onClick: function onClick() {
	                _store2.default.addBeatToCurrentGen(beat);
	                _store2.default.toggleAddNewBeat();
	              }
	            },
	            beat.key
	          );
	        });

	        return _react2.default.createElement(
	          "div",
	          { key: i },
	          generationOptions
	        );
	      });

	      var presetOptions = _beatTemplates2.default.map(function (beat, i) {
	        return _react2.default.createElement(
	          NewBeatOption,
	          {
	            key: i,
	            onClick: function onClick() {
	              _store2.default.addBeatToCurrentGen(beat);
	              _store2.default.toggleAddNewBeat();
	            }
	          },
	          beat.name
	        );
	      });

	      return _react2.default.createElement(
	        StyledNewBeatPanel,
	        null,
	        _react2.default.createElement(
	          NewBeatHeader,
	          null,
	          "Add new beat from"
	        ),
	        _react2.default.createElement(
	          NewBeatOption,
	          { onClick: this.addEmptyBeat },
	          "Empty Beat"
	        ),
	        "\xA0 with \xA0",
	        _react2.default.createElement(
	          "select",
	          {
	            ref: function ref(c) {
	              _this2.stepsSelect = c;
	            },
	            defaultValue: 16,
	            style: { fontSize: 20 }
	          },
	          stepOptions
	        ),
	        "\xA0 steps",
	        presetOptions.length > 0 ? _react2.default.createElement(
	          "div",
	          null,
	          _react2.default.createElement(
	            BeatOptionHeader,
	            null,
	            "Presets"
	          ),
	          presetOptions
	        ) : null,
	        copyOptions.length > 0 && copyOptions[0].length > 0 ? _react2.default.createElement(
	          "div",
	          null,
	          _react2.default.createElement(
	            BeatOptionHeader,
	            null,
	            "From Family Tree"
	          ),
	          copyOptions
	        ) : null,
	        _store2.default.currentBeat ? _react2.default.createElement(
	          _button2.default,
	          { small: true, color: [_colors.burntOrange], onClick: _store2.default.toggleAddNewBeat },
	          "Cancel"
	        ) : null
	      );
	    }
	  }]);

	  return NewBeatManager;
	}(_react.Component)) || _class;

	exports.default = NewBeatManager;

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _mobxReact = __webpack_require__(62);

	var _styledComponents = __webpack_require__(64);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _store = __webpack_require__(118);

	var _store2 = _interopRequireDefault(_store);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var StyledFamilySelect = _styledComponents2.default.span.withConfig({
	  displayName: "familySelect__StyledFamilySelect",
	  componentId: "teubv8-0"
	})(["select{font-size:16px;}"]);

	var FamilySelect = (0, _mobxReact.observer)(_class = function (_Component) {
	  _inherits(FamilySelect, _Component);

	  function FamilySelect() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, FamilySelect);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FamilySelect.__proto__ || Object.getPrototypeOf(FamilySelect)).call.apply(_ref, [this].concat(args))), _this), _this.handleSelectFamily = function (e) {
	      _store2.default.selectFamily(e.target.value);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(FamilySelect, [{
	    key: "render",
	    value: function render() {
	      var familyNamesOptions = _store2.default.familyNames.map(function (name) {
	        return _react2.default.createElement(
	          "option",
	          { key: name, value: name },
	          name
	        );
	      });
	      familyNamesOptions.push(_store2.default.familyName);
	      return _react2.default.createElement(
	        StyledFamilySelect,
	        null,
	        "Current Family: ",
	        _react2.default.createElement(
	          "select",
	          {
	            defaultValue: _store2.default.familyName,
	            onChange: this.handleSelectFamily
	          },
	          familyNamesOptions
	        )
	      );
	    }
	  }]);

	  return FamilySelect;
	}(_react.Component)) || _class;

	exports.default = FamilySelect;

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _mobxReact = __webpack_require__(62);

	var _styledComponents = __webpack_require__(64);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _cytoscape = __webpack_require__(262);

	var _cytoscape2 = _interopRequireDefault(_cytoscape);

	var _store = __webpack_require__(118);

	var _store2 = _interopRequireDefault(_store);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var footerClearance = 90;

	var sidePadding = 0;
	var topPadding = 0;
	var bottomPadding = 0;
	var borderWidth = 1;

	var StyledFamilyTree = _styledComponents2.default.div.withConfig({
	  displayName: "familyTree__StyledFamilyTree",
	  componentId: "sc-14vq00l-0"
	})(["margin:0;padding:", "px ", "px ", "px;display:inline-block;vertical-align:top;"], topPadding, sidePadding, bottomPadding);

	var FamilyTree = (0, _mobxReact.observer)(_class = function (_React$Component) {
	  _inherits(FamilyTree, _React$Component);

	  function FamilyTree() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, FamilyTree);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FamilyTree.__proto__ || Object.getPrototypeOf(FamilyTree)).call.apply(_ref, [this].concat(args))), _this), _this.familyTreeToGraph = function () {
	      var edges = [];
	      var nodes = [];
	      var intermediateNodes = [];
	      var genNum = 0;
	      var intermediateNodeKey = "";

	      _this.props.familyTree.forEach(function (generation, i) {
	        // Show initial generation left-to-right (cytoscape reverses it for some reason)
	        if (i === 0) {
	          generation = generation.slice().reverse();
	        }
	        generation.forEach(function (beat) {
	          if (beat.momKey && beat.dadKey) {
	            var parentKeys = [beat.momKey, beat.dadKey];
	            intermediateNodeKey = parentKeys.sort().join("|");
	            nodes.push({ data: {
	                id: intermediateNodeKey,
	                score: beat.score,
	                size: 0
	              } });
	            edges.push({ data: { source: intermediateNodeKey, target: beat.key, visible: 1, arrowScale: 1 } });
	            if (!intermediateNodes.includes(intermediateNodeKey)) {
	              edges.push({ data: { source: beat.momKey, target: intermediateNodeKey, visible: 1, arrowScale: 0 } });
	              edges.push({ data: { source: beat.dadKey, target: intermediateNodeKey, visible: 1, arrowScale: 0 } });
	            }
	            intermediateNodes.push(intermediateNodeKey);
	          } else if (!(beat.momKey && beat.dadKey) && genNum > 0) {
	            edges.push({ data: { source: intermediateNodeKey, target: beat.key, visible: 0 } });
	          }

	          var selectedBeats = _store2.default.selectPairMode ? _store2.default.selectedBeats : [_store2.default.generation + "." + _store2.default.beatNum];
	          nodes.push({ data: {
	              selected: selectedBeats.includes(beat.key) ? 1 : 0,
	              id: beat.key,
	              name: beat.key,
	              score: beat.score,
	              size: 1,
	              isHovered: _store2.default.hoveredBeatKey == beat.key ? 1 : 0
	            } });
	        });
	        ++genNum;
	      });

	      _this.renderCytoscapeElement({ edges: edges, nodes: nodes });
	    }, _this.renderCytoscapeElement = function (elements) {
	      _this.cy = (0, _cytoscape2.default)({
	        container: document.getElementById('cy'),
	        boxSelectionEnabled: false,
	        autounselectify: true,
	        elements: elements,
	        layout: {
	          name: 'breadthfirst',
	          directed: true,
	          padding: 10
	        },
	        style: _cytoscape2.default.stylesheet().selector('node').css({
	          'color': 'mapData(score, 8, 9, black, white)',
	          'height': 'mapData(size, 0, 1, 1, 120)',
	          'width': 'mapData(size, 0, 1, 1, 120)',
	          'background-color': 'mapData(score, 0, 10, white, rgb(19, 111, 181))',
	          'background-fit': 'cover',
	          'border-color': 'mapData(selected, 0, 1, black, red)',
	          'border-width': 'mapData(size, 0, 1, 1, 6)',
	          'border-opacity': 1,
	          'content': 'data(name)',
	          'text-valign': 'center',
	          'label': 'data(id)',
	          'font-size': 40,
	          'opacity': 'mapData(isHovered, 0, 1, .70, 1)'
	        }).selector('edge').css({
	          'width': 5,
	          'target-arrow-shape': 'triangle',
	          'arrow-scale': 'mapData(arrowScale, 0, 1, .5, 3)',
	          'line-color': 'mapData(visible, 0, 1, #292B30, white)',
	          'target-arrow-color': 'mapData(visible, 0, 1, #292B30, white)',
	          'curve-style': 'bezier',
	          'control-point-step-size': 0,
	          'opacity': .3
	        })
	      });
	      _this.cy.maxZoom(1);
	      _this.cy.minZoom(0.3);

	      _this.cy.on('click', 'node', function (evt) {
	        var idData = this.id().split(".");
	        var generation = parseInt(idData[0]);
	        var beatNum = parseInt(idData[1]);
	        _store2.default.selectBeat(generation, beatNum);
	      });

	      _this.cy.on('mouseover', 'node', function (evt) {
	        document.getElementsByTagName('body')[0].style.cursor = 'pointer';
	        var idData = this.id().split(".");
	        var generation = parseInt(idData[0]);
	        var beatNum = parseInt(idData[1]);
	        _store2.default.setHoveredBeat(this.id());
	      });
	      _this.cy.on('mouseout', 'node', function (evt) {
	        document.getElementsByTagName('body')[0].style.cursor = 'default';
	        _store2.default.clearHoveredBeat();
	      });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(FamilyTree, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.familyTreeToGraph();
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate() {
	      this.familyTreeToGraph();
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      // Mobx will only respond to state used in react components' render methods
	      // This is a hack so that this component re-renders when it's supposed to
	      _store2.default.selectedBeats.join("");
	      _store2.default.generation;
	      _store2.default.beatNum;
	      _store2.default.currentGeneration;
	      _store2.default.hoveredBeatKey;

	      _store2.default.allGenerations.forEach(function (generation) {
	        generation.forEach(function (beat) {
	          beat;
	        });
	      });

	      return _react2.default.createElement(StyledFamilyTree, {
	        id: "cy",
	        style: {
	          height: this.props.height - topPadding - bottomPadding - borderWidth * 2 - footerClearance - 35,
	          width: this.props.width - sidePadding * 2 - borderWidth * 2
	        }
	      });
	    }
	  }]);

	  return FamilyTree;
	}(_react2.default.Component)) || _class;

	exports.default = FamilyTree;

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate) {(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory(__webpack_require__(265), __webpack_require__(266));
		else if(typeof define === 'function' && define.amd)
			define(["lodash.debounce", "heap"], factory);
		else if(typeof exports === 'object')
			exports["cytoscape"] = factory(require("lodash.debounce"), require("heap"));
		else
			root["cytoscape"] = factory(root["lodash.debounce"], root["heap"]);
	})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_26__, __WEBPACK_EXTERNAL_MODULE_32__) {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId]) {
	/******/ 			return installedModules[moduleId].exports;
	/******/ 		}
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			i: moduleId,
	/******/ 			l: false,
	/******/ 			exports: {}
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.l = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// define getter function for harmony exports
	/******/ 	__webpack_require__.d = function(exports, name, getter) {
	/******/ 		if(!__webpack_require__.o(exports, name)) {
	/******/ 			Object.defineProperty(exports, name, {
	/******/ 				configurable: false,
	/******/ 				enumerable: true,
	/******/ 				get: getter
	/******/ 			});
	/******/ 		}
	/******/ 	};
	/******/
	/******/ 	// getDefaultExport function for compatibility with non-harmony modules
	/******/ 	__webpack_require__.n = function(module) {
	/******/ 		var getter = module && module.__esModule ?
	/******/ 			function getDefault() { return module['default']; } :
	/******/ 			function getModuleExports() { return module; };
	/******/ 		__webpack_require__.d(getter, 'a', getter);
	/******/ 		return getter;
	/******/ 	};
	/******/
	/******/ 	// Object.prototype.hasOwnProperty.call
	/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(__webpack_require__.s = 20);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/*global HTMLElement DocumentTouch */

	var window = __webpack_require__(3);
	var navigator = window ? window.navigator : null;
	var document = window ? window.document : null;

	var typeofstr = _typeof('');
	var typeofobj = _typeof({});
	var typeoffn = _typeof(function () {});
	var typeofhtmlele = typeof HTMLElement === 'undefined' ? 'undefined' : _typeof(HTMLElement);

	var instanceStr = function instanceStr(obj) {
	  return obj && obj.instanceString && is.fn(obj.instanceString) ? obj.instanceString() : null;
	};

	var is = {
	  defined: function defined(obj) {
	    return obj != null; // not undefined or null
	  },

	  string: function string(obj) {
	    return obj != null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == typeofstr;
	  },

	  fn: function fn(obj) {
	    return obj != null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === typeoffn;
	  },

	  array: function array(obj) {
	    return Array.isArray ? Array.isArray(obj) : obj != null && obj instanceof Array;
	  },

	  plainObject: function plainObject(obj) {
	    return obj != null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === typeofobj && !is.array(obj) && obj.constructor === Object;
	  },

	  object: function object(obj) {
	    return obj != null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === typeofobj;
	  },

	  number: function number(obj) {
	    return obj != null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === _typeof(1) && !isNaN(obj);
	  },

	  integer: function integer(obj) {
	    return is.number(obj) && Math.floor(obj) === obj;
	  },

	  bool: function bool(obj) {
	    return obj != null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === _typeof(true);
	  },

	  htmlElement: function htmlElement(obj) {
	    if ('undefined' === typeofhtmlele) {
	      return undefined;
	    } else {
	      return null != obj && obj instanceof HTMLElement;
	    }
	  },

	  elementOrCollection: function elementOrCollection(obj) {
	    return is.element(obj) || is.collection(obj);
	  },

	  element: function element(obj) {
	    return instanceStr(obj) === 'collection' && obj._private.single;
	  },

	  collection: function collection(obj) {
	    return instanceStr(obj) === 'collection' && !obj._private.single;
	  },

	  core: function core(obj) {
	    return instanceStr(obj) === 'core';
	  },

	  style: function style(obj) {
	    return instanceStr(obj) === 'style';
	  },

	  stylesheet: function stylesheet(obj) {
	    return instanceStr(obj) === 'stylesheet';
	  },

	  event: function event(obj) {
	    return instanceStr(obj) === 'event';
	  },

	  thread: function thread(obj) {
	    return instanceStr(obj) === 'thread';
	  },

	  fabric: function fabric(obj) {
	    return instanceStr(obj) === 'fabric';
	  },

	  emptyString: function emptyString(obj) {
	    if (obj === undefined || obj === null) {
	      // null is empty
	      return true;
	    } else if (obj === '' || obj.match(/^\s+$/)) {
	      return true; // empty string is empty
	    }

	    return false; // otherwise, we don't know what we've got
	  },

	  nonemptyString: function nonemptyString(obj) {
	    if (obj && is.string(obj) && obj !== '' && !obj.match(/^\s+$/)) {
	      return true;
	    }

	    return false;
	  },

	  domElement: function domElement(obj) {
	    if (typeof HTMLElement === 'undefined') {
	      return false; // we're not in a browser so it doesn't matter
	    } else {
	      return obj instanceof HTMLElement;
	    }
	  },

	  boundingBox: function boundingBox(obj) {
	    return is.plainObject(obj) && is.number(obj.x1) && is.number(obj.x2) && is.number(obj.y1) && is.number(obj.y2);
	  },

	  promise: function promise(obj) {
	    return is.object(obj) && is.fn(obj.then);
	  },

	  touch: function touch() {
	    return window && ('ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch);
	  },

	  gecko: function gecko() {
	    return window && (typeof InstallTrigger !== 'undefined' || 'MozAppearance' in document.documentElement.style);
	  },

	  webkit: function webkit() {
	    return window && (typeof webkitURL !== 'undefined' || 'WebkitAppearance' in document.documentElement.style);
	  },

	  chromium: function chromium() {
	    return window && typeof chrome !== 'undefined';
	  },

	  khtml: function khtml() {
	    return navigator && navigator.vendor.match(/kde/i); // probably a better way to detect this...
	  },

	  khtmlEtc: function khtmlEtc() {
	    return is.khtml() || is.webkit() || is.chromium();
	  },

	  ms: function ms() {
	    return navigator && navigator.userAgent.match(/msie|trident|edge/i); // probably a better way to detect this...
	  },

	  windows: function windows() {
	    return navigator && navigator.appVersion.match(/Win/i);
	  },

	  mac: function mac() {
	    return navigator && navigator.appVersion.match(/Mac/i);
	  },

	  linux: function linux() {
	    return navigator && navigator.appVersion.match(/Linux/i);
	  },

	  unix: function unix() {
	    return navigator && navigator.appVersion.match(/X11/i);
	  }
	};

	module.exports = is;

	/***/ }),
	/* 1 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	/*global console */

	var is = __webpack_require__(0);
	var math = __webpack_require__(2);

	var util = {

	  MAX_INT: Number.MAX_SAFE_INTEGER || 9007199254740991,

	  trueify: function trueify() {
	    return true;
	  },

	  falsify: function falsify() {
	    return false;
	  },

	  zeroify: function zeroify() {
	    return 0;
	  },

	  noop: function noop() {},

	  error: function error(msg) {
	    /* eslint-disable */
	    if (console.error) {
	      console.error.apply(console, arguments);

	      if (console.trace) {
	        console.trace();
	      }
	    } else {
	      console.log.apply(console, arguments);

	      if (console.trace) {
	        console.trace();
	      }
	    }
	    /* eslint-enable */
	  },

	  clone: function clone(obj) {
	    return this.extend({}, obj);
	  },

	  // gets a shallow copy of the argument
	  copy: function copy(obj) {
	    if (obj == null) {
	      return obj;
	    }if (is.array(obj)) {
	      return obj.slice();
	    } else if (is.plainObject(obj)) {
	      return this.clone(obj);
	    } else {
	      return obj;
	    }
	  },

	  copyArray: function copyArray(arr) {
	    return arr.slice();
	  },

	  clonePosition: function clonePosition(pos) {
	    return { x: pos.x, y: pos.y };
	  },

	  uuid: function uuid(a, b // placeholders
	  ) {
	    for ( // loop :)
	    b = a = ''; // b - result , a - numeric letiable
	    a++ < 36; //
	    b += a * 51 & 52 // if "a" is not 9 or 14 or 19 or 24
	    ? //  return a random number or 4
	    (a ^ 15 // if "a" is not 15
	    ? // genetate a random number from 0 to 15
	    8 ^ Math.random() * (a ^ 20 ? 16 : 4) // unless "a" is 20, in which case a random number from 8 to 11
	    : 4 //  otherwise 4
	    ).toString(16) : '-' //  in other cases (if "a" is 9,14,19,24) insert "-"
	    ) {}
	    return b;
	  }

	};

	util.makeBoundingBox = math.makeBoundingBox.bind(math);

	util._staticEmptyObject = {};

	util.staticEmptyObject = function () {
	  return util._staticEmptyObject;
	};

	util.extend = Object.assign != null ? Object.assign.bind(Object) : function (tgt) {
	  var args = arguments;

	  for (var i = 1; i < args.length; i++) {
	    var obj = args[i];

	    if (obj == null) {
	      continue;
	    }

	    var keys = Object.keys(obj);

	    for (var j = 0; j < keys.length; j++) {
	      var k = keys[j];

	      tgt[k] = obj[k];
	    }
	  }

	  return tgt;
	};

	util.assign = util.extend;

	util.default = function (val, def) {
	  if (val === undefined) {
	    return def;
	  } else {
	    return val;
	  }
	};

	util.removeFromArray = function (arr, ele, manyCopies) {
	  for (var i = arr.length; i >= 0; i--) {
	    if (arr[i] === ele) {
	      arr.splice(i, 1);

	      if (!manyCopies) {
	        break;
	      }
	    }
	  }
	};

	util.clearArray = function (arr) {
	  arr.splice(0, arr.length);
	};

	util.push = function (arr, otherArr) {
	  for (var i = 0; i < otherArr.length; i++) {
	    var el = otherArr[i];

	    arr.push(el);
	  }
	};

	util.getPrefixedProperty = function (obj, propName, prefix) {
	  if (prefix) {
	    propName = this.prependCamel(prefix, propName); // e.g. (labelWidth, source) => sourceLabelWidth
	  }

	  return obj[propName];
	};

	util.setPrefixedProperty = function (obj, propName, prefix, value) {
	  if (prefix) {
	    propName = this.prependCamel(prefix, propName); // e.g. (labelWidth, source) => sourceLabelWidth
	  }

	  obj[propName] = value;
	};

	[__webpack_require__(21), __webpack_require__(22), { memoize: __webpack_require__(13) }, __webpack_require__(23), __webpack_require__(24), __webpack_require__(25), __webpack_require__(27)].forEach(function (req) {
	  util.extend(util, req);
	});

	module.exports = util;

	/***/ }),
	/* 2 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var math = {};

	math.arePositionsSame = function (p1, p2) {
	  return p1.x === p2.x && p1.y === p2.y;
	};

	math.copyPosition = function (p) {
	  return { x: p.x, y: p.y };
	};

	math.modelToRenderedPosition = function (p, zoom, pan) {
	  return {
	    x: p.x * zoom + pan.x,
	    y: p.y * zoom + pan.y
	  };
	};

	math.renderedToModelPosition = function (p, zoom, pan) {
	  return {
	    x: (p.x - pan.x) / zoom,
	    y: (p.y - pan.y) / zoom
	  };
	};

	math.array2point = function (arr) {
	  return {
	    x: arr[0],
	    y: arr[1]
	  };
	};

	math.deg2rad = function (deg) {
	  return Math.PI * deg / 180;
	};

	math.getAngleFromDisp = function (dispX, dispY) {
	  return Math.atan2(dispY, dispX) - Math.PI / 2;
	};

	math.log2 = Math.log2 || function (n) {
	  return Math.log(n) / Math.log(2);
	};

	math.signum = function (x) {
	  if (x > 0) {
	    return 1;
	  } else if (x < 0) {
	    return -1;
	  } else {
	    return 0;
	  }
	};

	math.dist = function (p1, p2) {
	  return Math.sqrt(math.sqdist(p1, p2));
	};

	math.sqdist = function (p1, p2) {
	  var dx = p2.x - p1.x;
	  var dy = p2.y - p1.y;

	  return dx * dx + dy * dy;
	};

	// from http://en.wikipedia.org/wiki/Bézier_curve#Quadratic_curves
	math.qbezierAt = function (p0, p1, p2, t) {
	  return (1 - t) * (1 - t) * p0 + 2 * (1 - t) * t * p1 + t * t * p2;
	};

	math.qbezierPtAt = function (p0, p1, p2, t) {
	  return {
	    x: math.qbezierAt(p0.x, p1.x, p2.x, t),
	    y: math.qbezierAt(p0.y, p1.y, p2.y, t)
	  };
	};

	math.lineAt = function (p0, p1, t, d) {
	  var vec = {
	    x: p1.x - p0.x,
	    y: p1.y - p0.y
	  };

	  var vecDist = math.dist(p0, p1);

	  var normVec = {
	    x: vec.x / vecDist,
	    y: vec.y / vecDist
	  };

	  t = t == null ? 0 : t;

	  d = d != null ? d : t * vecDist;

	  return {
	    x: p0.x + normVec.x * d,
	    y: p0.y + normVec.y * d
	  };
	};

	math.lineAtDist = function (p0, p1, d) {
	  return math.lineAt(p0, p1, undefined, d);
	};

	// get angle at A via cosine law
	math.triangleAngle = function (A, B, C) {
	  var a = math.dist(B, C);
	  var b = math.dist(A, C);
	  var c = math.dist(A, B);

	  return Math.acos((a * a + b * b - c * c) / (2 * a * b));
	};

	math.bound = function (min, val, max) {
	  return Math.max(min, Math.min(max, val));
	};

	// makes a full bb (x1, y1, x2, y2, w, h) from implicit params
	math.makeBoundingBox = function (bb) {
	  if (bb == null) {
	    return {
	      x1: Infinity,
	      y1: Infinity,
	      x2: -Infinity,
	      y2: -Infinity,
	      w: 0,
	      h: 0
	    };
	  } else if (bb.x1 != null && bb.y1 != null) {
	    if (bb.x2 != null && bb.y2 != null && bb.x2 >= bb.x1 && bb.y2 >= bb.y1) {
	      return {
	        x1: bb.x1,
	        y1: bb.y1,
	        x2: bb.x2,
	        y2: bb.y2,
	        w: bb.x2 - bb.x1,
	        h: bb.y2 - bb.y1
	      };
	    } else if (bb.w != null && bb.h != null && bb.w >= 0 && bb.h >= 0) {
	      return {
	        x1: bb.x1,
	        y1: bb.y1,
	        x2: bb.x1 + bb.w,
	        y2: bb.y1 + bb.h,
	        w: bb.w,
	        h: bb.h
	      };
	    }
	  }
	};

	math.updateBoundingBox = function (bb1, bb2) {
	  // update bb1 with bb2 bounds

	  bb1.x1 = Math.min(bb1.x1, bb2.x1);
	  bb1.x2 = Math.max(bb1.x2, bb2.x2);
	  bb1.w = bb1.x2 - bb1.x1;

	  bb1.y1 = Math.min(bb1.y1, bb2.y1);
	  bb1.y2 = Math.max(bb1.y2, bb2.y2);
	  bb1.h = bb1.y2 - bb1.y1;
	};

	math.expandBoundingBoxByPoint = function (bb, x, y) {
	  bb.x1 = Math.min(bb.x1, x);
	  bb.x2 = Math.max(bb.x2, x);
	  bb.w = bb.x2 - bb.x1;

	  bb.y1 = Math.min(bb.y1, y);
	  bb.y2 = Math.max(bb.y2, y);
	  bb.h = bb.y2 - bb.y1;
	};

	math.expandBoundingBox = function (bb, padding) {
	  bb.x1 -= padding;
	  bb.x2 += padding;
	  bb.y1 -= padding;
	  bb.y2 += padding;
	  bb.w = bb.x2 - bb.x1;
	  bb.h = bb.y2 - bb.y1;

	  return bb;
	};

	math.boundingBoxesIntersect = function (bb1, bb2) {
	  // case: one bb to right of other
	  if (bb1.x1 > bb2.x2) {
	    return false;
	  }
	  if (bb2.x1 > bb1.x2) {
	    return false;
	  }

	  // case: one bb to left of other
	  if (bb1.x2 < bb2.x1) {
	    return false;
	  }
	  if (bb2.x2 < bb1.x1) {
	    return false;
	  }

	  // case: one bb above other
	  if (bb1.y2 < bb2.y1) {
	    return false;
	  }
	  if (bb2.y2 < bb1.y1) {
	    return false;
	  }

	  // case: one bb below other
	  if (bb1.y1 > bb2.y2) {
	    return false;
	  }
	  if (bb2.y1 > bb1.y2) {
	    return false;
	  }

	  // otherwise, must have some overlap
	  return true;
	};

	math.inBoundingBox = function (bb, x, y) {
	  return bb.x1 <= x && x <= bb.x2 && bb.y1 <= y && y <= bb.y2;
	};

	math.pointInBoundingBox = function (bb, pt) {
	  return this.inBoundingBox(bb, pt.x, pt.y);
	};

	math.boundingBoxInBoundingBox = function (bb1, bb2) {
	  return math.inBoundingBox(bb1, bb2.x1, bb2.y1) && math.inBoundingBox(bb1, bb2.x2, bb2.y2);
	};

	math.roundRectangleIntersectLine = function (x, y, nodeX, nodeY, width, height, padding) {

	  var cornerRadius = this.getRoundRectangleRadius(width, height);

	  var halfWidth = width / 2;
	  var halfHeight = height / 2;

	  // Check intersections with straight line segments
	  var straightLineIntersections = void 0;

	  // Top segment, left to right
	  {
	    var topStartX = nodeX - halfWidth + cornerRadius - padding;
	    var topStartY = nodeY - halfHeight - padding;
	    var topEndX = nodeX + halfWidth - cornerRadius + padding;
	    var topEndY = topStartY;

	    straightLineIntersections = this.finiteLinesIntersect(x, y, nodeX, nodeY, topStartX, topStartY, topEndX, topEndY, false);

	    if (straightLineIntersections.length > 0) {
	      return straightLineIntersections;
	    }
	  }

	  // Right segment, top to bottom
	  {
	    var rightStartX = nodeX + halfWidth + padding;
	    var rightStartY = nodeY - halfHeight + cornerRadius - padding;
	    var rightEndX = rightStartX;
	    var rightEndY = nodeY + halfHeight - cornerRadius + padding;

	    straightLineIntersections = this.finiteLinesIntersect(x, y, nodeX, nodeY, rightStartX, rightStartY, rightEndX, rightEndY, false);

	    if (straightLineIntersections.length > 0) {
	      return straightLineIntersections;
	    }
	  }

	  // Bottom segment, left to right
	  {
	    var bottomStartX = nodeX - halfWidth + cornerRadius - padding;
	    var bottomStartY = nodeY + halfHeight + padding;
	    var bottomEndX = nodeX + halfWidth - cornerRadius + padding;
	    var bottomEndY = bottomStartY;

	    straightLineIntersections = this.finiteLinesIntersect(x, y, nodeX, nodeY, bottomStartX, bottomStartY, bottomEndX, bottomEndY, false);

	    if (straightLineIntersections.length > 0) {
	      return straightLineIntersections;
	    }
	  }

	  // Left segment, top to bottom
	  {
	    var leftStartX = nodeX - halfWidth - padding;
	    var leftStartY = nodeY - halfHeight + cornerRadius - padding;
	    var leftEndX = leftStartX;
	    var leftEndY = nodeY + halfHeight - cornerRadius + padding;

	    straightLineIntersections = this.finiteLinesIntersect(x, y, nodeX, nodeY, leftStartX, leftStartY, leftEndX, leftEndY, false);

	    if (straightLineIntersections.length > 0) {
	      return straightLineIntersections;
	    }
	  }

	  // Check intersections with arc segments
	  var arcIntersections = void 0;

	  // Top Left
	  {
	    var topLeftCenterX = nodeX - halfWidth + cornerRadius;
	    var topLeftCenterY = nodeY - halfHeight + cornerRadius;
	    arcIntersections = this.intersectLineCircle(x, y, nodeX, nodeY, topLeftCenterX, topLeftCenterY, cornerRadius + padding);

	    // Ensure the intersection is on the desired quarter of the circle
	    if (arcIntersections.length > 0 && arcIntersections[0] <= topLeftCenterX && arcIntersections[1] <= topLeftCenterY) {
	      return [arcIntersections[0], arcIntersections[1]];
	    }
	  }

	  // Top Right
	  {
	    var topRightCenterX = nodeX + halfWidth - cornerRadius;
	    var topRightCenterY = nodeY - halfHeight + cornerRadius;
	    arcIntersections = this.intersectLineCircle(x, y, nodeX, nodeY, topRightCenterX, topRightCenterY, cornerRadius + padding);

	    // Ensure the intersection is on the desired quarter of the circle
	    if (arcIntersections.length > 0 && arcIntersections[0] >= topRightCenterX && arcIntersections[1] <= topRightCenterY) {
	      return [arcIntersections[0], arcIntersections[1]];
	    }
	  }

	  // Bottom Right
	  {
	    var bottomRightCenterX = nodeX + halfWidth - cornerRadius;
	    var bottomRightCenterY = nodeY + halfHeight - cornerRadius;
	    arcIntersections = this.intersectLineCircle(x, y, nodeX, nodeY, bottomRightCenterX, bottomRightCenterY, cornerRadius + padding);

	    // Ensure the intersection is on the desired quarter of the circle
	    if (arcIntersections.length > 0 && arcIntersections[0] >= bottomRightCenterX && arcIntersections[1] >= bottomRightCenterY) {
	      return [arcIntersections[0], arcIntersections[1]];
	    }
	  }

	  // Bottom Left
	  {
	    var bottomLeftCenterX = nodeX - halfWidth + cornerRadius;
	    var bottomLeftCenterY = nodeY + halfHeight - cornerRadius;
	    arcIntersections = this.intersectLineCircle(x, y, nodeX, nodeY, bottomLeftCenterX, bottomLeftCenterY, cornerRadius + padding);

	    // Ensure the intersection is on the desired quarter of the circle
	    if (arcIntersections.length > 0 && arcIntersections[0] <= bottomLeftCenterX && arcIntersections[1] >= bottomLeftCenterY) {
	      return [arcIntersections[0], arcIntersections[1]];
	    }
	  }

	  return []; // if nothing
	};

	math.inLineVicinity = function (x, y, lx1, ly1, lx2, ly2, tolerance) {
	  var t = tolerance;

	  var x1 = Math.min(lx1, lx2);
	  var x2 = Math.max(lx1, lx2);
	  var y1 = Math.min(ly1, ly2);
	  var y2 = Math.max(ly1, ly2);

	  return x1 - t <= x && x <= x2 + t && y1 - t <= y && y <= y2 + t;
	};

	math.inBezierVicinity = function (x, y, x1, y1, x2, y2, x3, y3, tolerance) {

	  var bb = {
	    x1: Math.min(x1, x3, x2) - tolerance,
	    x2: Math.max(x1, x3, x2) + tolerance,
	    y1: Math.min(y1, y3, y2) - tolerance,
	    y2: Math.max(y1, y3, y2) + tolerance
	  };

	  // if outside the rough bounding box for the bezier, then it can't be a hit
	  if (x < bb.x1 || x > bb.x2 || y < bb.y1 || y > bb.y2) {
	    // console.log('bezier out of rough bb')
	    return false;
	  } else {
	    // console.log('do more expensive check');
	    return true;
	  }
	};
	math.solveQuadratic = function (a, b, c, val) {
	  c -= val;

	  var r = b * b - 4 * a * c;

	  if (r < 0) {
	    return [];
	  }

	  var sqrtR = Math.sqrt(r);
	  var denom = 2 * a;
	  var root1 = (-b + sqrtR) / denom;
	  var root2 = (-b - sqrtR) / denom;

	  return [root1, root2];
	};

	math.solveCubic = function (a, b, c, d, result) {

	  // Solves a cubic function, returns root in form [r1, i1, r2, i2, r3, i3], where
	  // r is the real component, i is the imaginary component

	  // An implementation of the Cardano method from the year 1545
	  // http://en.wikipedia.org/wiki/Cubic_function#The_nature_of_the_roots

	  b /= a;
	  c /= a;
	  d /= a;

	  var discriminant = void 0,
	      q = void 0,
	      r = void 0,
	      dum1 = void 0,
	      s = void 0,
	      t = void 0,
	      term1 = void 0,
	      r13 = void 0;

	  q = (3.0 * c - b * b) / 9.0;
	  r = -(27.0 * d) + b * (9.0 * c - 2.0 * (b * b));
	  r /= 54.0;

	  discriminant = q * q * q + r * r;
	  result[1] = 0;
	  term1 = b / 3.0;

	  if (discriminant > 0) {
	    s = r + Math.sqrt(discriminant);
	    s = s < 0 ? -Math.pow(-s, 1.0 / 3.0) : Math.pow(s, 1.0 / 3.0);
	    t = r - Math.sqrt(discriminant);
	    t = t < 0 ? -Math.pow(-t, 1.0 / 3.0) : Math.pow(t, 1.0 / 3.0);
	    result[0] = -term1 + s + t;
	    term1 += (s + t) / 2.0;
	    result[4] = result[2] = -term1;
	    term1 = Math.sqrt(3.0) * (-t + s) / 2;
	    result[3] = term1;
	    result[5] = -term1;
	    return;
	  }

	  result[5] = result[3] = 0;

	  if (discriminant === 0) {
	    r13 = r < 0 ? -Math.pow(-r, 1.0 / 3.0) : Math.pow(r, 1.0 / 3.0);
	    result[0] = -term1 + 2.0 * r13;
	    result[4] = result[2] = -(r13 + term1);
	    return;
	  }

	  q = -q;
	  dum1 = q * q * q;
	  dum1 = Math.acos(r / Math.sqrt(dum1));
	  r13 = 2.0 * Math.sqrt(q);
	  result[0] = -term1 + r13 * Math.cos(dum1 / 3.0);
	  result[2] = -term1 + r13 * Math.cos((dum1 + 2.0 * Math.PI) / 3.0);
	  result[4] = -term1 + r13 * Math.cos((dum1 + 4.0 * Math.PI) / 3.0);

	  return;
	};

	math.sqdistToQuadraticBezier = function (x, y, x1, y1, x2, y2, x3, y3) {

	  // Find minimum distance by using the minimum of the distance
	  // function between the given point and the curve

	  // This gives the coefficients of the resulting cubic equation
	  // whose roots tell us where a possible minimum is
	  // (Coefficients are divided by 4)

	  var a = 1.0 * x1 * x1 - 4 * x1 * x2 + 2 * x1 * x3 + 4 * x2 * x2 - 4 * x2 * x3 + x3 * x3 + y1 * y1 - 4 * y1 * y2 + 2 * y1 * y3 + 4 * y2 * y2 - 4 * y2 * y3 + y3 * y3;

	  var b = 1.0 * 9 * x1 * x2 - 3 * x1 * x1 - 3 * x1 * x3 - 6 * x2 * x2 + 3 * x2 * x3 + 9 * y1 * y2 - 3 * y1 * y1 - 3 * y1 * y3 - 6 * y2 * y2 + 3 * y2 * y3;

	  var c = 1.0 * 3 * x1 * x1 - 6 * x1 * x2 + x1 * x3 - x1 * x + 2 * x2 * x2 + 2 * x2 * x - x3 * x + 3 * y1 * y1 - 6 * y1 * y2 + y1 * y3 - y1 * y + 2 * y2 * y2 + 2 * y2 * y - y3 * y;

	  var d = 1.0 * x1 * x2 - x1 * x1 + x1 * x - x2 * x + y1 * y2 - y1 * y1 + y1 * y - y2 * y;

	  // debug("coefficients: " + a / a + ", " + b / a + ", " + c / a + ", " + d / a);

	  var roots = [];

	  // Use the cubic solving algorithm
	  this.solveCubic(a, b, c, d, roots);

	  var zeroThreshold = 0.0000001;

	  var params = [];

	  for (var index = 0; index < 6; index += 2) {
	    if (Math.abs(roots[index + 1]) < zeroThreshold && roots[index] >= 0 && roots[index] <= 1.0) {
	      params.push(roots[index]);
	    }
	  }

	  params.push(1.0);
	  params.push(0.0);

	  var minDistanceSquared = -1;

	  var curX = void 0,
	      curY = void 0,
	      distSquared = void 0;
	  for (var i = 0; i < params.length; i++) {
	    curX = Math.pow(1.0 - params[i], 2.0) * x1 + 2.0 * (1 - params[i]) * params[i] * x2 + params[i] * params[i] * x3;

	    curY = Math.pow(1 - params[i], 2.0) * y1 + 2 * (1.0 - params[i]) * params[i] * y2 + params[i] * params[i] * y3;

	    distSquared = Math.pow(curX - x, 2) + Math.pow(curY - y, 2);
	    // debug('distance for param ' + params[i] + ": " + Math.sqrt(distSquared));
	    if (minDistanceSquared >= 0) {
	      if (distSquared < minDistanceSquared) {
	        minDistanceSquared = distSquared;
	      }
	    } else {
	      minDistanceSquared = distSquared;
	    }
	  }

	  return minDistanceSquared;
	};

	math.sqdistToFiniteLine = function (x, y, x1, y1, x2, y2) {
	  var offset = [x - x1, y - y1];
	  var line = [x2 - x1, y2 - y1];

	  var lineSq = line[0] * line[0] + line[1] * line[1];
	  var hypSq = offset[0] * offset[0] + offset[1] * offset[1];

	  var dotProduct = offset[0] * line[0] + offset[1] * line[1];
	  var adjSq = dotProduct * dotProduct / lineSq;

	  if (dotProduct < 0) {
	    return hypSq;
	  }

	  if (adjSq > lineSq) {
	    return (x - x2) * (x - x2) + (y - y2) * (y - y2);
	  }

	  return hypSq - adjSq;
	};

	math.pointInsidePolygonPoints = function (x, y, points) {
	  var x1 = void 0,
	      y1 = void 0,
	      x2 = void 0,
	      y2 = void 0;
	  var y3 = void 0;

	  // Intersect with vertical line through (x, y)
	  var up = 0;
	  // let down = 0;
	  for (var i = 0; i < points.length / 2; i++) {
	    x1 = points[i * 2];
	    y1 = points[i * 2 + 1];

	    if (i + 1 < points.length / 2) {
	      x2 = points[(i + 1) * 2];
	      y2 = points[(i + 1) * 2 + 1];
	    } else {
	      x2 = points[(i + 1 - points.length / 2) * 2];
	      y2 = points[(i + 1 - points.length / 2) * 2 + 1];
	    }

	    if (x1 == x && x2 == x) {
	      // then ignore
	    } else if (x1 >= x && x >= x2 || x1 <= x && x <= x2) {

	      y3 = (x - x1) / (x2 - x1) * (y2 - y1) + y1;

	      if (y3 > y) {
	        up++;
	      }

	      // if( y3 < y ){
	      // down++;
	      // }
	    } else {
	      continue;
	    }
	  }

	  if (up % 2 === 0) {
	    return false;
	  } else {
	    return true;
	  }
	};

	math.pointInsidePolygon = function (x, y, basePoints, centerX, centerY, width, height, direction, padding) {

	  //let direction = arguments[6];
	  var transformedPoints = new Array(basePoints.length);

	  // Gives negative angle
	  var angle = void 0;

	  if (direction[0] != null) {
	    angle = Math.atan(direction[1] / direction[0]);

	    if (direction[0] < 0) {
	      angle = angle + Math.PI / 2;
	    } else {
	      angle = -angle - Math.PI / 2;
	    }
	  } else {
	    angle = direction;
	  }

	  var cos = Math.cos(-angle);
	  var sin = Math.sin(-angle);

	  //    console.log("base: " + basePoints);
	  for (var i = 0; i < transformedPoints.length / 2; i++) {
	    transformedPoints[i * 2] = width / 2 * (basePoints[i * 2] * cos - basePoints[i * 2 + 1] * sin);

	    transformedPoints[i * 2 + 1] = height / 2 * (basePoints[i * 2 + 1] * cos + basePoints[i * 2] * sin);

	    transformedPoints[i * 2] += centerX;
	    transformedPoints[i * 2 + 1] += centerY;
	  }

	  var points = void 0;

	  if (padding > 0) {
	    var expandedLineSet = this.expandPolygon(transformedPoints, -padding);

	    points = this.joinLines(expandedLineSet);
	  } else {
	    points = transformedPoints;
	  }

	  return math.pointInsidePolygonPoints(x, y, points);
	};

	math.joinLines = function (lineSet) {

	  var vertices = new Array(lineSet.length / 2);

	  var currentLineStartX = void 0,
	      currentLineStartY = void 0,
	      currentLineEndX = void 0,
	      currentLineEndY = void 0;
	  var nextLineStartX = void 0,
	      nextLineStartY = void 0,
	      nextLineEndX = void 0,
	      nextLineEndY = void 0;

	  for (var i = 0; i < lineSet.length / 4; i++) {
	    currentLineStartX = lineSet[i * 4];
	    currentLineStartY = lineSet[i * 4 + 1];
	    currentLineEndX = lineSet[i * 4 + 2];
	    currentLineEndY = lineSet[i * 4 + 3];

	    if (i < lineSet.length / 4 - 1) {
	      nextLineStartX = lineSet[(i + 1) * 4];
	      nextLineStartY = lineSet[(i + 1) * 4 + 1];
	      nextLineEndX = lineSet[(i + 1) * 4 + 2];
	      nextLineEndY = lineSet[(i + 1) * 4 + 3];
	    } else {
	      nextLineStartX = lineSet[0];
	      nextLineStartY = lineSet[1];
	      nextLineEndX = lineSet[2];
	      nextLineEndY = lineSet[3];
	    }

	    var intersection = this.finiteLinesIntersect(currentLineStartX, currentLineStartY, currentLineEndX, currentLineEndY, nextLineStartX, nextLineStartY, nextLineEndX, nextLineEndY, true);

	    vertices[i * 2] = intersection[0];
	    vertices[i * 2 + 1] = intersection[1];
	  }

	  return vertices;
	};

	math.expandPolygon = function (points, pad) {

	  var expandedLineSet = new Array(points.length * 2);

	  var currentPointX = void 0,
	      currentPointY = void 0,
	      nextPointX = void 0,
	      nextPointY = void 0;

	  for (var i = 0; i < points.length / 2; i++) {
	    currentPointX = points[i * 2];
	    currentPointY = points[i * 2 + 1];

	    if (i < points.length / 2 - 1) {
	      nextPointX = points[(i + 1) * 2];
	      nextPointY = points[(i + 1) * 2 + 1];
	    } else {
	      nextPointX = points[0];
	      nextPointY = points[1];
	    }

	    // Current line: [currentPointX, currentPointY] to [nextPointX, nextPointY]

	    // Assume CCW polygon winding

	    var offsetX = nextPointY - currentPointY;
	    var offsetY = -(nextPointX - currentPointX);

	    // Normalize
	    var offsetLength = Math.sqrt(offsetX * offsetX + offsetY * offsetY);
	    var normalizedOffsetX = offsetX / offsetLength;
	    var normalizedOffsetY = offsetY / offsetLength;

	    expandedLineSet[i * 4] = currentPointX + normalizedOffsetX * pad;
	    expandedLineSet[i * 4 + 1] = currentPointY + normalizedOffsetY * pad;
	    expandedLineSet[i * 4 + 2] = nextPointX + normalizedOffsetX * pad;
	    expandedLineSet[i * 4 + 3] = nextPointY + normalizedOffsetY * pad;
	  }

	  return expandedLineSet;
	};

	math.intersectLineEllipse = function (x, y, centerX, centerY, ellipseWradius, ellipseHradius) {

	  var dispX = centerX - x;
	  var dispY = centerY - y;

	  dispX /= ellipseWradius;
	  dispY /= ellipseHradius;

	  var len = Math.sqrt(dispX * dispX + dispY * dispY);

	  var newLength = len - 1;

	  if (newLength < 0) {
	    return [];
	  }

	  var lenProportion = newLength / len;

	  return [(centerX - x) * lenProportion + x, (centerY - y) * lenProportion + y];
	};

	math.checkInEllipse = function (x, y, width, height, centerX, centerY, padding) {
	  x -= centerX;
	  y -= centerY;

	  x /= width / 2 + padding;
	  y /= height / 2 + padding;

	  return x * x + y * y <= 1;
	};

	// Returns intersections of increasing distance from line's start point
	math.intersectLineCircle = function (x1, y1, x2, y2, centerX, centerY, radius) {

	  // Calculate d, direction vector of line
	  var d = [x2 - x1, y2 - y1]; // Direction vector of line
	  var f = [x1 - centerX, y1 - centerY];

	  var a = d[0] * d[0] + d[1] * d[1];
	  var b = 2 * (f[0] * d[0] + f[1] * d[1]);
	  var c = f[0] * f[0] + f[1] * f[1] - radius * radius;

	  var discriminant = b * b - 4 * a * c;

	  if (discriminant < 0) {
	    return [];
	  }

	  var t1 = (-b + Math.sqrt(discriminant)) / (2 * a);
	  var t2 = (-b - Math.sqrt(discriminant)) / (2 * a);

	  var tMin = Math.min(t1, t2);
	  var tMax = Math.max(t1, t2);
	  var inRangeParams = [];

	  if (tMin >= 0 && tMin <= 1) {
	    inRangeParams.push(tMin);
	  }

	  if (tMax >= 0 && tMax <= 1) {
	    inRangeParams.push(tMax);
	  }

	  if (inRangeParams.length === 0) {
	    return [];
	  }

	  var nearIntersectionX = inRangeParams[0] * d[0] + x1;
	  var nearIntersectionY = inRangeParams[0] * d[1] + y1;

	  if (inRangeParams.length > 1) {

	    if (inRangeParams[0] == inRangeParams[1]) {
	      return [nearIntersectionX, nearIntersectionY];
	    } else {

	      var farIntersectionX = inRangeParams[1] * d[0] + x1;
	      var farIntersectionY = inRangeParams[1] * d[1] + y1;

	      return [nearIntersectionX, nearIntersectionY, farIntersectionX, farIntersectionY];
	    }
	  } else {
	    return [nearIntersectionX, nearIntersectionY];
	  }
	};

	math.findCircleNearPoint = function (centerX, centerY, radius, farX, farY) {

	  var displacementX = farX - centerX;
	  var displacementY = farY - centerY;
	  var distance = Math.sqrt(displacementX * displacementX + displacementY * displacementY);

	  var unitDisplacementX = displacementX / distance;
	  var unitDisplacementY = displacementY / distance;

	  return [centerX + unitDisplacementX * radius, centerY + unitDisplacementY * radius];
	};

	math.findMaxSqDistanceToOrigin = function (points) {
	  var maxSqDistance = 0.000001;
	  var sqDistance = void 0;

	  for (var i = 0; i < points.length / 2; i++) {

	    sqDistance = points[i * 2] * points[i * 2] + points[i * 2 + 1] * points[i * 2 + 1];

	    if (sqDistance > maxSqDistance) {
	      maxSqDistance = sqDistance;
	    }
	  }

	  return maxSqDistance;
	};

	math.midOfThree = function (a, b, c) {
	  if (b <= a && a <= c || c <= a && a <= b) {
	    return a;
	  } else if (a <= b && b <= c || c <= b && b <= a) {
	    return b;
	  } else {
	    return c;
	  }
	};

	// (x1,y1)=>(x2,y2) intersect with (x3,y3)=>(x4,y4)
	math.finiteLinesIntersect = function (x1, y1, x2, y2, x3, y3, x4, y4, infiniteLines) {

	  var dx13 = x1 - x3;
	  var dx21 = x2 - x1;
	  var dx43 = x4 - x3;

	  var dy13 = y1 - y3;
	  var dy21 = y2 - y1;
	  var dy43 = y4 - y3;

	  var ua_t = dx43 * dy13 - dy43 * dx13;
	  var ub_t = dx21 * dy13 - dy21 * dx13;
	  var u_b = dy43 * dx21 - dx43 * dy21;

	  if (u_b !== 0) {
	    var ua = ua_t / u_b;
	    var ub = ub_t / u_b;

	    var flptThreshold = 0.001;
	    var min = 0 - flptThreshold;
	    var max = 1 + flptThreshold;

	    if (min <= ua && ua <= max && min <= ub && ub <= max) {
	      return [x1 + ua * dx21, y1 + ua * dy21];
	    } else {
	      if (!infiniteLines) {
	        return [];
	      } else {
	        return [x1 + ua * dx21, y1 + ua * dy21];
	      }
	    }
	  } else {
	    if (ua_t === 0 || ub_t === 0) {

	      // Parallel, coincident lines. Check if overlap

	      // Check endpoint of second line
	      if (this.midOfThree(x1, x2, x4) === x4) {
	        return [x4, y4];
	      }

	      // Check start point of second line
	      if (this.midOfThree(x1, x2, x3) === x3) {
	        return [x3, y3];
	      }

	      // Endpoint of first line
	      if (this.midOfThree(x3, x4, x2) === x2) {
	        return [x2, y2];
	      }

	      return [];
	    } else {

	      // Parallel, non-coincident
	      return [];
	    }
	  }
	};

	// math.polygonIntersectLine( x, y, basePoints, centerX, centerY, width, height, padding )
	// intersect a node polygon (pts transformed)
	//
	// math.polygonIntersectLine( x, y, basePoints, centerX, centerY )
	// intersect the points (no transform)
	math.polygonIntersectLine = function (x, y, basePoints, centerX, centerY, width, height, padding) {

	  var intersections = [];
	  var intersection = void 0;

	  var transformedPoints = new Array(basePoints.length);

	  var doTransform = true;
	  if (arguments.length === 5) {
	    doTransform = false;
	  }

	  var points = void 0;

	  if (doTransform) {
	    for (var i = 0; i < transformedPoints.length / 2; i++) {
	      transformedPoints[i * 2] = basePoints[i * 2] * width + centerX;
	      transformedPoints[i * 2 + 1] = basePoints[i * 2 + 1] * height + centerY;
	    }

	    if (padding > 0) {
	      var expandedLineSet = math.expandPolygon(transformedPoints, -padding);

	      points = math.joinLines(expandedLineSet);
	    } else {
	      points = transformedPoints;
	    }
	  } else {
	    points = basePoints;
	  }

	  var currentX = void 0,
	      currentY = void 0,
	      nextX = void 0,
	      nextY = void 0;

	  for (var _i = 0; _i < points.length / 2; _i++) {

	    currentX = points[_i * 2];
	    currentY = points[_i * 2 + 1];

	    if (_i < points.length / 2 - 1) {
	      nextX = points[(_i + 1) * 2];
	      nextY = points[(_i + 1) * 2 + 1];
	    } else {
	      nextX = points[0];
	      nextY = points[1];
	    }

	    intersection = this.finiteLinesIntersect(x, y, centerX, centerY, currentX, currentY, nextX, nextY);

	    if (intersection.length !== 0) {
	      intersections.push(intersection[0], intersection[1]);
	    }
	  }

	  return intersections;
	};

	math.shortenIntersection = function (intersection, offset, amount) {

	  var disp = [intersection[0] - offset[0], intersection[1] - offset[1]];

	  var length = Math.sqrt(disp[0] * disp[0] + disp[1] * disp[1]);

	  var lenRatio = (length - amount) / length;

	  if (lenRatio < 0) {
	    lenRatio = 0.00001;
	  }

	  return [offset[0] + lenRatio * disp[0], offset[1] + lenRatio * disp[1]];
	};

	math.generateUnitNgonPointsFitToSquare = function (sides, rotationRadians) {
	  var points = math.generateUnitNgonPoints(sides, rotationRadians);
	  points = math.fitPolygonToSquare(points);

	  return points;
	};

	math.fitPolygonToSquare = function (points) {
	  var x = void 0,
	      y = void 0;
	  var sides = points.length / 2;
	  var minX = Infinity,
	      minY = Infinity,
	      maxX = -Infinity,
	      maxY = -Infinity;

	  for (var i = 0; i < sides; i++) {
	    x = points[2 * i];
	    y = points[2 * i + 1];

	    minX = Math.min(minX, x);
	    maxX = Math.max(maxX, x);
	    minY = Math.min(minY, y);
	    maxY = Math.max(maxY, y);
	  }

	  // stretch factors
	  var sx = 2 / (maxX - minX);
	  var sy = 2 / (maxY - minY);

	  for (var _i2 = 0; _i2 < sides; _i2++) {
	    x = points[2 * _i2] = points[2 * _i2] * sx;
	    y = points[2 * _i2 + 1] = points[2 * _i2 + 1] * sy;

	    minX = Math.min(minX, x);
	    maxX = Math.max(maxX, x);
	    minY = Math.min(minY, y);
	    maxY = Math.max(maxY, y);
	  }

	  if (minY < -1) {
	    for (var _i3 = 0; _i3 < sides; _i3++) {
	      y = points[2 * _i3 + 1] = points[2 * _i3 + 1] + (-1 - minY);
	    }
	  }

	  return points;
	};

	math.generateUnitNgonPoints = function (sides, rotationRadians) {

	  var increment = 1.0 / sides * 2 * Math.PI;
	  var startAngle = sides % 2 === 0 ? Math.PI / 2.0 + increment / 2.0 : Math.PI / 2.0;

	  startAngle += rotationRadians;

	  var points = new Array(sides * 2);

	  var currentAngle = void 0;
	  for (var i = 0; i < sides; i++) {
	    currentAngle = i * increment + startAngle;

	    points[2 * i] = Math.cos(currentAngle); // x
	    points[2 * i + 1] = Math.sin(-currentAngle); // y
	  }

	  return points;
	};

	math.getRoundRectangleRadius = function (width, height) {

	  // Set the default radius, unless half of width or height is smaller than default
	  return Math.min(width / 4, height / 4, 8);
	};

	math.getCutRectangleCornerLength = function () {
	  return 8;
	};

	math.bezierPtsToQuadCoeff = function (p0, p1, p2) {
	  return [p0 - 2 * p1 + p2, 2 * (p1 - p0), p0];
	};

	math.getBarrelCurveConstants = function (width, height) {
	  // get curve width, height, and control point position offsets as a percentage of node height / width
	  return {
	    heightOffset: Math.min(15, 0.05 * height),
	    widthOffset: Math.min(100, 0.25 * width),
	    ctrlPtOffsetPct: 0.05
	  };
	};

	module.exports = math;

	/***/ }),
	/* 3 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	module.exports = typeof window === 'undefined' ? null : window; // eslint-disable-line no-undef

	/***/ }),
	/* 4 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	// use this module to cherry pick functions into your prototype
	// (useful for functions shared between the core and collections, for example)

	// e.g.
	// let foo = define.foo({ /* params... */ })

	var util = __webpack_require__(1);

	var define = {};

	[__webpack_require__(43), __webpack_require__(45), __webpack_require__(46)].forEach(function (m) {
	  util.assign(define, m);
	});

	module.exports = define;

	/***/ }),
	/* 5 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/*!
	Embeddable Minimum Strictly-Compliant Promises/A+ 1.1.1 Thenable
	Copyright (c) 2013-2014 Ralf S. Engelschall (http://engelschall.com)
	Licensed under The MIT License (http://opensource.org/licenses/MIT)
	*/

	/*  promise states [Promises/A+ 2.1]  */
	var STATE_PENDING = 0; /*  [Promises/A+ 2.1.1]  */
	var STATE_FULFILLED = 1; /*  [Promises/A+ 2.1.2]  */
	var STATE_REJECTED = 2; /*  [Promises/A+ 2.1.3]  */

	/*  promise object constructor  */
	var api = function api(executor) {
	  /*  optionally support non-constructor/plain-function call  */
	  if (!(this instanceof api)) return new api(executor);

	  /*  initialize object  */
	  this.id = 'Thenable/1.0.7';
	  this.state = STATE_PENDING; /*  initial state  */
	  this.fulfillValue = undefined; /*  initial value  */ /*  [Promises/A+ 1.3, 2.1.2.2]  */
	  this.rejectReason = undefined; /*  initial reason */ /*  [Promises/A+ 1.5, 2.1.3.2]  */
	  this.onFulfilled = []; /*  initial handlers  */
	  this.onRejected = []; /*  initial handlers  */

	  /*  provide optional information-hiding proxy  */
	  this.proxy = {
	    then: this.then.bind(this)
	  };

	  /*  support optional executor function  */
	  if (typeof executor === 'function') executor.call(this, this.fulfill.bind(this), this.reject.bind(this));
	};

	/*  promise API methods  */
	api.prototype = {
	  /*  promise resolving methods  */
	  fulfill: function fulfill(value) {
	    return deliver(this, STATE_FULFILLED, 'fulfillValue', value);
	  },
	  reject: function reject(value) {
	    return deliver(this, STATE_REJECTED, 'rejectReason', value);
	  },

	  /*  "The then Method" [Promises/A+ 1.1, 1.2, 2.2]  */
	  then: function then(onFulfilled, onRejected) {
	    var curr = this;
	    var next = new api(); /*  [Promises/A+ 2.2.7]  */
	    curr.onFulfilled.push(resolver(onFulfilled, next, 'fulfill')); /*  [Promises/A+ 2.2.2/2.2.6]  */
	    curr.onRejected.push(resolver(onRejected, next, 'reject')); /*  [Promises/A+ 2.2.3/2.2.6]  */
	    execute(curr);
	    return next.proxy; /*  [Promises/A+ 2.2.7, 3.3]  */
	  }
	};

	/*  deliver an action  */
	var deliver = function deliver(curr, state, name, value) {
	  if (curr.state === STATE_PENDING) {
	    curr.state = state; /*  [Promises/A+ 2.1.2.1, 2.1.3.1]  */
	    curr[name] = value; /*  [Promises/A+ 2.1.2.2, 2.1.3.2]  */
	    execute(curr);
	  }
	  return curr;
	};

	/*  execute all handlers  */
	var execute = function execute(curr) {
	  if (curr.state === STATE_FULFILLED) execute_handlers(curr, 'onFulfilled', curr.fulfillValue);else if (curr.state === STATE_REJECTED) execute_handlers(curr, 'onRejected', curr.rejectReason);
	};

	/*  execute particular set of handlers  */
	var execute_handlers = function execute_handlers(curr, name, value) {
	  /* global setImmediate: true */
	  /* global setTimeout: true */

	  /*  short-circuit processing  */
	  if (curr[name].length === 0) return;

	  /*  iterate over all handlers, exactly once  */
	  var handlers = curr[name];
	  curr[name] = []; /*  [Promises/A+ 2.2.2.3, 2.2.3.3]  */
	  var func = function func() {
	    for (var i = 0; i < handlers.length; i++) {
	      handlers[i](value);
	    } /*  [Promises/A+ 2.2.5]  */
	  };

	  /*  execute procedure asynchronously  */ /*  [Promises/A+ 2.2.4, 3.1]  */
	  if (typeof setImmediate === 'function') setImmediate(func);else setTimeout(func, 0);
	};

	/*  generate a resolver function  */
	var resolver = function resolver(cb, next, method) {
	  return function (value) {
	    if (typeof cb !== 'function') /*  [Promises/A+ 2.2.1, 2.2.7.3, 2.2.7.4]  */
	      next[method].call(next, value); /*  [Promises/A+ 2.2.7.3, 2.2.7.4]  */
	    else {
	        var result;
	        try {
	          result = cb(value);
	        } /*  [Promises/A+ 2.2.2.1, 2.2.3.1, 2.2.5, 3.2]  */
	        catch (e) {
	          next.reject(e); /*  [Promises/A+ 2.2.7.2]  */
	          return;
	        }
	        resolve(next, result); /*  [Promises/A+ 2.2.7.1]  */
	      }
	  };
	};

	/*  "Promise Resolution Procedure"  */ /*  [Promises/A+ 2.3]  */
	var resolve = function resolve(promise, x) {
	  /*  sanity check arguments  */ /*  [Promises/A+ 2.3.1]  */
	  if (promise === x || promise.proxy === x) {
	    promise.reject(new TypeError('cannot resolve promise with itself'));
	    return;
	  }

	  /*  surgically check for a "then" method
	    (mainly to just call the "getter" of "then" only once)  */
	  var then;
	  if ((typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function') {
	    try {
	      then = x.then;
	    } /*  [Promises/A+ 2.3.3.1, 3.5]  */
	    catch (e) {
	      promise.reject(e); /*  [Promises/A+ 2.3.3.2]  */
	      return;
	    }
	  }

	  /*  handle own Thenables    [Promises/A+ 2.3.2]
	    and similar "thenables" [Promises/A+ 2.3.3]  */
	  if (typeof then === 'function') {
	    var resolved = false;
	    try {
	      /*  call retrieved "then" method */ /*  [Promises/A+ 2.3.3.3]  */
	      then.call(x,
	      /*  resolvePromise  */ /*  [Promises/A+ 2.3.3.3.1]  */
	      function (y) {
	        if (resolved) return;resolved = true; /*  [Promises/A+ 2.3.3.3.3]  */
	        if (y === x) /*  [Promises/A+ 3.6]  */
	          promise.reject(new TypeError('circular thenable chain'));else resolve(promise, y);
	      },

	      /*  rejectPromise  */ /*  [Promises/A+ 2.3.3.3.2]  */
	      function (r) {
	        if (resolved) return;resolved = true; /*  [Promises/A+ 2.3.3.3.3]  */
	        promise.reject(r);
	      });
	    } catch (e) {
	      if (!resolved) /*  [Promises/A+ 2.3.3.3.3]  */
	        promise.reject(e); /*  [Promises/A+ 2.3.3.3.4]  */
	    }
	    return;
	  }

	  /*  handle other values  */
	  promise.fulfill(x); /*  [Promises/A+ 2.3.4, 2.3.3.4]  */
	};

	// so we always have Promise.all()
	api.all = function (ps) {
	  return new api(function (resolveAll, rejectAll) {
	    var vals = new Array(ps.length);
	    var doneCount = 0;

	    var fulfill = function fulfill(i, val) {
	      vals[i] = val;
	      doneCount++;

	      if (doneCount === ps.length) {
	        resolveAll(vals);
	      }
	    };

	    for (var i = 0; i < ps.length; i++) {
	      (function (i) {
	        var p = ps[i];
	        var isPromise = p != null && p.then != null;

	        if (isPromise) {
	          p.then(function (val) {
	            fulfill(i, val);
	          }, function (err) {
	            rejectAll(err);
	          });
	        } else {
	          var val = p;
	          fulfill(i, val);
	        }
	      })(i);
	    }
	  });
	};

	api.resolve = function (val) {
	  return new api(function (resolve, reject) {
	    resolve(val);
	  });
	};

	api.reject = function (val) {
	  return new api(function (resolve, reject) {
	    reject(val);
	  });
	};

	module.exports = typeof Promise !== 'undefined' ? Promise : api; // eslint-disable-line no-undef

	/***/ }),
	/* 6 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var util = __webpack_require__(1);
	var newQuery = __webpack_require__(10);

	var Selector = function Selector(selector) {
	  var self = this;

	  self._private = {
	    selectorText: selector,
	    invalid: true
	  };

	  if (selector == null || is.string(selector) && selector.match(/^\s*$/)) {

	    self.length = 0;
	  } else if (selector === '*' || selector === 'edge' || selector === 'node') {

	    // make single, group-only selectors cheap to make and cheap to filter

	    self[0] = newQuery();
	    self[0].group = selector === '*' ? selector : selector + 's';
	    self[0].groupOnly = true;
	    self[0].length = 1;
	    self._private.invalid = false;
	    self.length = 1;
	  } else if (is.elementOrCollection(selector)) {

	    var collection = selector.collection();

	    self[0] = newQuery();
	    self[0].collection = collection;
	    self[0].length = 1;
	    self.length = 1;
	  } else if (is.fn(selector)) {

	    self[0] = newQuery();
	    self[0].filter = selector;
	    self[0].length = 1;
	    self.length = 1;
	  } else if (is.string(selector)) {
	    if (!self.parse(selector)) {
	      return;
	    }
	  } else {
	    util.error('A selector must be created from a string; found ', selector);
	    return;
	  }

	  self._private.invalid = false;
	};

	var selfn = Selector.prototype;

	selfn.valid = function () {
	  return !this._private.invalid;
	};

	selfn.invalid = function () {
	  return this._private.invalid;
	};

	selfn.text = function () {
	  return this._private.selectorText;
	};

	selfn.size = function () {
	  return this.length;
	};

	selfn.eq = function (i) {
	  return this[i];
	};

	selfn.sameText = function (otherSel) {
	  return this.text() === otherSel.text();
	};

	selfn.toString = selfn.selector = function () {

	  if (this._private.toStringCache != null) {
	    return this._private.toStringCache;
	  }

	  var i = void 0;
	  var str = '';

	  var clean = function clean(obj) {
	    if (obj == null) {
	      return '';
	    } else {
	      return obj;
	    }
	  };

	  var cleanVal = function cleanVal(val) {
	    if (is.string(val)) {
	      return '"' + val + '"';
	    } else {
	      return clean(val);
	    }
	  };

	  var space = function space(val) {
	    return ' ' + val + ' ';
	  };

	  var queryToString = function queryToString(query) {
	    var str = '';
	    var j = void 0,
	        sel = void 0;

	    if (query.subject === query) {
	      str += '$';
	    }

	    var group = clean(query.group);
	    str += group.substring(0, group.length - 1);

	    for (j = 0; j < query.data.length; j++) {
	      var data = query.data[j];

	      if (data.value) {
	        str += '[' + data.field + space(clean(data.operator)) + cleanVal(data.value) + ']';
	      } else {
	        str += '[' + clean(data.operator) + data.field + ']';
	      }
	    }

	    for (j = 0; j < query.meta.length; j++) {
	      var meta = query.meta[j];
	      str += '[[' + meta.field + space(clean(meta.operator)) + cleanVal(meta.value) + ']]';
	    }

	    for (j = 0; j < query.colonSelectors.length; j++) {
	      sel = query.colonSelectors[i];
	      str += sel;
	    }

	    for (j = 0; j < query.ids.length; j++) {
	      sel = '#' + query.ids[i];
	      str += sel;
	    }

	    for (j = 0; j < query.classes.length; j++) {
	      sel = '.' + query.classes[j];
	      str += sel;
	    }

	    if (query.source != null && query.target != null) {
	      str = queryToString(query.source) + ' -> ' + queryToString(query.target);
	    }

	    if (query.connectedNodes != null) {
	      var n = query.connectedNodes;

	      str = queryToString(n[0]) + ' <-> ' + queryToString(n[1]);
	    }

	    if (query.parent != null) {
	      str = queryToString(query.parent) + ' > ' + str;
	    }

	    if (query.ancestor != null) {
	      str = queryToString(query.ancestor) + ' ' + str;
	    }

	    if (query.child != null) {
	      str += ' > ' + queryToString(query.child);
	    }

	    if (query.descendant != null) {
	      str += ' ' + queryToString(query.descendant);
	    }

	    return str;
	  };

	  for (i = 0; i < this.length; i++) {
	    var query = this[i];

	    str += queryToString(query);

	    if (this.length > 1 && i < this.length - 1) {
	      str += ', ';
	    }
	  }

	  this._private.toStringCache = str;

	  return str;
	};

	[__webpack_require__(49), __webpack_require__(52)].forEach(function (p) {
	  return util.assign(selfn, p);
	});

	module.exports = Selector;

	/***/ }),
	/* 7 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var is = __webpack_require__(0);
	var Map = __webpack_require__(28);
	var Set = __webpack_require__(8);

	var Element = __webpack_require__(14);

	// factory for generating edge ids when no id is specified for a new element
	var idFactory = {
	  generate: function generate(cy, element, tryThisId) {
	    var id = tryThisId != null ? tryThisId : util.uuid();

	    while (cy.hasElementWithId(id)) {
	      id = util.uuid();
	    }

	    return id;
	  }
	};

	// represents a set of nodes, edges, or both together
	var Collection = function Collection(cy, elements, options) {
	  if (cy === undefined || !is.core(cy)) {
	    util.error('A collection must have a reference to the core');
	    return;
	  }

	  var map = new Map();
	  var createdElements = false;

	  if (!elements) {
	    elements = [];
	  } else if (elements.length > 0 && is.plainObject(elements[0]) && !is.element(elements[0])) {
	    createdElements = true;

	    // make elements from json and restore all at once later
	    var eles = [];
	    var elesIds = new Set();

	    for (var i = 0, l = elements.length; i < l; i++) {
	      var json = elements[i];

	      if (json.data == null) {
	        json.data = {};
	      }

	      var data = json.data;

	      // make sure newly created elements have valid ids
	      if (data.id == null) {
	        data.id = idFactory.generate(cy, json);
	      } else if (cy.hasElementWithId(data.id) || elesIds.has(data.id)) {
	        continue; // can't create element if prior id already exists
	      }

	      var ele = new Element(cy, json, false);
	      eles.push(ele);
	      elesIds.add(data.id);
	    }

	    elements = eles;
	  }

	  this.length = 0;

	  for (var _i = 0, _l = elements.length; _i < _l; _i++) {
	    var element = elements[_i];
	    if (element == null) {
	      continue;
	    }

	    var id = element._private.data.id;

	    if (options == null || options.unique && !map.has(id)) {
	      map.set(id, {
	        index: this.length,
	        ele: element
	      });

	      this[this.length] = element;
	      this.length++;
	    }
	  }

	  this._private = {
	    cy: cy,
	    map: map
	  };

	  // restore the elements if we created them from json
	  if (createdElements) {
	    this.restore();
	  }
	};

	// Functions
	////////////////////////////////////////////////////////////////////////////////////////////////////

	// keep the prototypes in sync (an element has the same functions as a collection)
	// and use elefn and elesfn as shorthands to the prototypes
	var elesfn = Element.prototype = Collection.prototype;

	elesfn.instanceString = function () {
	  return 'collection';
	};

	elesfn.spawn = function (cy, eles, opts) {
	  if (!is.core(cy)) {
	    // cy is optional
	    opts = eles;
	    eles = cy;
	    cy = this.cy();
	  }

	  return new Collection(cy, eles, opts);
	};

	elesfn.spawnSelf = function () {
	  return this.spawn(this);
	};

	elesfn.cy = function () {
	  return this._private.cy;
	};

	elesfn.renderer = function () {
	  return this._private.cy.renderer();
	};

	elesfn.element = function () {
	  return this[0];
	};

	elesfn.collection = function () {
	  if (is.collection(this)) {
	    return this;
	  } else {
	    // an element
	    return new Collection(this._private.cy, [this]);
	  }
	};

	elesfn.unique = function () {
	  return new Collection(this._private.cy, this, { unique: true });
	};

	elesfn.hasElementWithId = function (id) {
	  return this._private.map.has(id);
	};

	elesfn.getElementById = function (id) {
	  var cy = this._private.cy;
	  var entry = this._private.map.get(id);

	  return entry ? entry.ele : new Collection(cy); // get ele or empty collection
	};

	elesfn.$id = elesfn.getElementById;

	elesfn.poolIndex = function () {
	  var cy = this._private.cy;
	  var eles = cy._private.elements;
	  var id = this._private.data.id;

	  return eles._private.map.get(id).index;
	};

	elesfn.json = function (obj) {
	  var ele = this.element();
	  var cy = this.cy();

	  if (ele == null && obj) {
	    return this;
	  } // can't set to no eles

	  if (ele == null) {
	    return undefined;
	  } // can't get from no eles

	  var p = ele._private;

	  if (is.plainObject(obj)) {
	    // set

	    cy.startBatch();

	    if (obj.data) {
	      ele.data(obj.data);
	    }

	    if (obj.position) {
	      ele.position(obj.position);
	    }

	    // ignore group -- immutable

	    var checkSwitch = function checkSwitch(k, trueFnName, falseFnName) {
	      var obj_k = obj[k];

	      if (obj_k != null && obj_k !== p[k]) {
	        if (obj_k) {
	          ele[trueFnName]();
	        } else {
	          ele[falseFnName]();
	        }
	      }
	    };

	    checkSwitch('removed', 'remove', 'restore');

	    checkSwitch('selected', 'select', 'unselect');

	    checkSwitch('selectable', 'selectify', 'unselectify');

	    checkSwitch('locked', 'lock', 'unlock');

	    checkSwitch('grabbable', 'grabify', 'ungrabify');

	    if (obj.classes != null) {
	      ele.classes(obj.classes);
	    }

	    cy.endBatch();

	    return this;
	  } else if (obj === undefined) {
	    // get

	    var json = {
	      data: util.copy(p.data),
	      position: util.copy(p.position),
	      group: p.group,
	      removed: p.removed,
	      selected: p.selected,
	      selectable: p.selectable,
	      locked: p.locked,
	      grabbable: p.grabbable,
	      classes: null
	    };

	    json.classes = '';

	    var i = 0;
	    p.classes.forEach(function (cls) {
	      return json.classes += i++ === 0 ? cls : ' ' + cls;
	    });

	    return json;
	  }
	};

	elesfn.jsons = function () {
	  var jsons = [];

	  for (var i = 0; i < this.length; i++) {
	    var ele = this[i];
	    var json = ele.json();

	    jsons.push(json);
	  }

	  return jsons;
	};

	elesfn.clone = function () {
	  var cy = this.cy();
	  var elesArr = [];

	  for (var i = 0; i < this.length; i++) {
	    var ele = this[i];
	    var json = ele.json();
	    var clone = new Element(cy, json, false); // NB no restore

	    elesArr.push(clone);
	  }

	  return new Collection(cy, elesArr);
	};
	elesfn.copy = elesfn.clone;

	elesfn.restore = function (notifyRenderer) {
	  var self = this;
	  var cy = self.cy();
	  var cy_p = cy._private;

	  if (notifyRenderer === undefined) {
	    notifyRenderer = true;
	  }

	  // create arrays of nodes and edges, since we need to
	  // restore the nodes first
	  var nodes = [];
	  var edges = [];
	  var elements = void 0;
	  for (var _i2 = 0, l = self.length; _i2 < l; _i2++) {
	    var ele = self[_i2];

	    if (!ele.removed()) {
	      // don't need to handle this ele
	      continue;
	    }

	    // keep nodes first in the array and edges after
	    if (ele.isNode()) {
	      // put to front of array if node
	      nodes.push(ele);
	    } else {
	      // put to end of array if edge
	      edges.push(ele);
	    }
	  }

	  elements = nodes.concat(edges);

	  var i = void 0;
	  var removeFromElements = function removeFromElements() {
	    elements.splice(i, 1);
	    i--;
	  };

	  // now, restore each element
	  for (i = 0; i < elements.length; i++) {
	    var _ele = elements[i];

	    var _private = _ele._private;
	    var data = _private.data;

	    // the traversal cache should start fresh when ele is added
	    _ele.clearTraversalCache();

	    // set id and validate
	    if (data.id === undefined) {
	      data.id = idFactory.generate(cy, _ele);
	    } else if (is.number(data.id)) {
	      data.id = '' + data.id; // now it's a string
	    } else if (is.emptyString(data.id) || !is.string(data.id)) {
	      util.error('Can not create element with invalid string ID `' + data.id + '`');

	      // can't create element if it has empty string as id or non-string id
	      removeFromElements();
	      continue;
	    } else if (cy.hasElementWithId(data.id)) {
	      util.error('Can not create second element with ID `' + data.id + '`');

	      // can't create element if one already has that id
	      removeFromElements();
	      continue;
	    }

	    var id = data.id; // id is finalised, now let's keep a ref

	    if (_ele.isNode()) {
	      // extra checks for nodes
	      var pos = _private.position;

	      // make sure the nodes have a defined position

	      if (pos.x == null) {
	        pos.x = 0;
	      }

	      if (pos.y == null) {
	        pos.y = 0;
	      }
	    }

	    if (_ele.isEdge()) {
	      // extra checks for edges

	      var edge = _ele;
	      var fields = ['source', 'target'];
	      var fieldsLength = fields.length;
	      var badSourceOrTarget = false;
	      for (var j = 0; j < fieldsLength; j++) {

	        var field = fields[j];
	        var val = data[field];

	        if (is.number(val)) {
	          val = data[field] = '' + data[field]; // now string
	        }

	        if (val == null || val === '') {
	          // can't create if source or target is not defined properly
	          util.error('Can not create edge `' + id + '` with unspecified ' + field);
	          badSourceOrTarget = true;
	        } else if (!cy.hasElementWithId(val)) {
	          // can't create edge if one of its nodes doesn't exist
	          util.error('Can not create edge `' + id + '` with nonexistant ' + field + ' `' + val + '`');
	          badSourceOrTarget = true;
	        }
	      }

	      if (badSourceOrTarget) {
	        removeFromElements();continue;
	      } // can't create this

	      var src = cy.getElementById(data.source);
	      var tgt = cy.getElementById(data.target);

	      src._private.edges.push(edge);
	      tgt._private.edges.push(edge);

	      edge._private.source = src;
	      edge._private.target = tgt;
	    } // if is edge

	    // create mock ids / indexes maps for element so it can be used like collections
	    _private.map = new Map();
	    _private.map.set(id, { ele: _ele, index: 0 });

	    _private.removed = false;
	    cy.addToPool(_ele);
	  } // for each element

	  // do compound node sanity checks
	  for (var _i3 = 0; _i3 < nodes.length; _i3++) {
	    // each node
	    var node = nodes[_i3];
	    var _data = node._private.data;

	    if (is.number(_data.parent)) {
	      // then automake string
	      _data.parent = '' + _data.parent;
	    }

	    var parentId = _data.parent;

	    var specifiedParent = parentId != null;

	    if (specifiedParent) {
	      var parent = cy.getElementById(parentId);

	      if (parent.empty()) {
	        // non-existant parent; just remove it
	        _data.parent = undefined;
	      } else {
	        var selfAsParent = false;
	        var ancestor = parent;
	        while (!ancestor.empty()) {
	          if (node.same(ancestor)) {
	            // mark self as parent and remove from data
	            selfAsParent = true;
	            _data.parent = undefined; // remove parent reference

	            // exit or we loop forever
	            break;
	          }

	          ancestor = ancestor.parent();
	        }

	        if (!selfAsParent) {
	          // connect with children
	          parent[0]._private.children.push(node);
	          node._private.parent = parent[0];

	          // let the core know we have a compound graph
	          cy_p.hasCompoundNodes = true;
	        }
	      } // else
	    } // if specified parent
	  } // for each node

	  if (elements.length > 0) {
	    var restored = new Collection(cy, elements);

	    for (var _i4 = 0; _i4 < restored.length; _i4++) {
	      var _ele2 = restored[_i4];

	      if (_ele2.isNode()) {
	        continue;
	      }

	      // adding an edge invalidates the traversal caches for the parallel edges
	      _ele2.parallelEdges().clearTraversalCache();

	      // adding an edge invalidates the traversal cache for the connected nodes
	      _ele2.source().clearTraversalCache();
	      _ele2.target().clearTraversalCache();
	    }

	    var toUpdateStyle = void 0;

	    if (cy_p.hasCompoundNodes) {
	      toUpdateStyle = cy.collection().merge(restored).merge(restored.connectedNodes()).merge(restored.parent());
	    } else {
	      toUpdateStyle = restored;
	    }

	    toUpdateStyle.dirtyCompoundBoundsCache().updateStyle(notifyRenderer);

	    if (notifyRenderer) {
	      restored.emitAndNotify('add');
	    } else {
	      restored.emit('add');
	    }
	  }

	  return self; // chainability
	};

	elesfn.removed = function () {
	  var ele = this[0];
	  return ele && ele._private.removed;
	};

	elesfn.inside = function () {
	  var ele = this[0];
	  return ele && !ele._private.removed;
	};

	elesfn.remove = function (notifyRenderer) {
	  var self = this;
	  var removed = [];
	  var elesToRemove = [];
	  var elesToRemoveIds = {};
	  var cy = self._private.cy;

	  if (notifyRenderer === undefined) {
	    notifyRenderer = true;
	  }

	  // add connected edges
	  function addConnectedEdges(node) {
	    var edges = node._private.edges;
	    for (var i = 0; i < edges.length; i++) {
	      add(edges[i]);
	    }
	  }

	  // add descendant nodes
	  function addChildren(node) {
	    var children = node._private.children;

	    for (var i = 0; i < children.length; i++) {
	      add(children[i]);
	    }
	  }

	  function add(ele) {
	    var alreadyAdded = elesToRemoveIds[ele.id()];
	    if (ele.removed() || alreadyAdded) {
	      return;
	    } else {
	      elesToRemoveIds[ele.id()] = true;
	    }

	    if (ele.isNode()) {
	      elesToRemove.push(ele); // nodes are removed last

	      addConnectedEdges(ele);
	      addChildren(ele);
	    } else {
	      elesToRemove.unshift(ele); // edges are removed first
	    }
	  }

	  // make the list of elements to remove
	  // (may be removing more than specified due to connected edges etc)

	  for (var i = 0, l = self.length; i < l; i++) {
	    var ele = self[i];

	    add(ele);
	  }

	  function removeEdgeRef(node, edge) {
	    var connectedEdges = node._private.edges;

	    util.removeFromArray(connectedEdges, edge);

	    // removing an edges invalidates the traversal cache for its nodes
	    node.clearTraversalCache();
	  }

	  function removeParallelRefs(edge) {
	    // removing an edge invalidates the traversal caches for the parallel edges
	    edge.parallelEdges().clearTraversalCache();
	  }

	  var alteredParents = [];
	  alteredParents.ids = {};

	  function removeChildRef(parent, ele) {
	    ele = ele[0];
	    parent = parent[0];

	    var children = parent._private.children;
	    var pid = parent.id();

	    util.removeFromArray(children, ele);

	    if (!alteredParents.ids[pid]) {
	      alteredParents.ids[pid] = true;
	      alteredParents.push(parent);
	    }
	  }

	  self.dirtyCompoundBoundsCache();

	  cy.removeFromPool(elesToRemove); // remove from core pool

	  for (var _i5 = 0; _i5 < elesToRemove.length; _i5++) {
	    var _ele3 = elesToRemove[_i5];

	    // mark as removed
	    _ele3._private.removed = true;

	    // add to list of removed elements
	    removed.push(_ele3);

	    if (_ele3.isEdge()) {
	      // remove references to this edge in its connected nodes
	      var src = _ele3.source()[0];
	      var tgt = _ele3.target()[0];

	      removeEdgeRef(src, _ele3);
	      removeEdgeRef(tgt, _ele3);
	      removeParallelRefs(_ele3);
	    } else {
	      // remove reference to parent
	      var parent = _ele3.parent();

	      if (parent.length !== 0) {
	        removeChildRef(parent, _ele3);
	      }
	    }
	  }

	  // check to see if we have a compound graph or not
	  var elesStillInside = cy._private.elements;
	  cy._private.hasCompoundNodes = false;
	  for (var _i6 = 0; _i6 < elesStillInside.length; _i6++) {
	    var _ele4 = elesStillInside[_i6];

	    if (_ele4.isParent()) {
	      cy._private.hasCompoundNodes = true;
	      break;
	    }
	  }

	  var removedElements = new Collection(this.cy(), removed);
	  if (removedElements.size() > 0) {
	    // must manually notify since trigger won't do this automatically once removed

	    if (notifyRenderer) {
	      this.cy().notify({
	        type: 'remove',
	        eles: removedElements
	      });
	    }

	    removedElements.emit('remove');
	  }

	  // the parents who were modified by the removal need their style updated
	  for (var _i7 = 0; _i7 < alteredParents.length; _i7++) {
	    var _ele5 = alteredParents[_i7];

	    if (!_ele5.removed()) {
	      _ele5.updateStyle();
	    }
	  }

	  return new Collection(cy, removed);
	};

	elesfn.move = function (struct) {
	  var cy = this._private.cy;

	  if (struct.source !== undefined || struct.target !== undefined) {
	    var srcId = struct.source;
	    var tgtId = struct.target;
	    var srcExists = cy.hasElementWithId(srcId);
	    var tgtExists = cy.hasElementWithId(tgtId);

	    if (srcExists || tgtExists) {
	      var jsons = this.jsons();

	      this.remove();

	      for (var i = 0; i < jsons.length; i++) {
	        var json = jsons[i];
	        var ele = this[i];

	        if (json.group === 'edges') {
	          if (srcExists) {
	            json.data.source = srcId;
	          }

	          if (tgtExists) {
	            json.data.target = tgtId;
	          }

	          json.scratch = ele._private.scratch;
	        }
	      }

	      return cy.add(jsons);
	    }
	  } else if (struct.parent !== undefined) {
	    // move node to new parent
	    var parentId = struct.parent;
	    var parentExists = parentId === null || cy.hasElementWithId(parentId);

	    if (parentExists) {
	      var _jsons = this.jsons();
	      var descs = this.descendants();
	      var descsEtcJsons = descs.union(descs.union(this).connectedEdges()).jsons();

	      this.remove(); // NB: also removes descendants and their connected edges

	      for (var _i8 = 0; _i8 < _jsons.length; _i8++) {
	        var _json = _jsons[_i8];
	        var _ele6 = this[_i8];

	        if (_json.group === 'nodes') {
	          _json.data.parent = parentId === null ? undefined : parentId;

	          _json.scratch = _ele6._private.scratch;
	        }
	      }

	      return cy.add(_jsons.concat(descsEtcJsons));
	    }
	  }

	  return this; // if nothing done
	};

	[__webpack_require__(29), __webpack_require__(42), __webpack_require__(47), __webpack_require__(48), __webpack_require__(53), __webpack_require__(54), __webpack_require__(55), __webpack_require__(56), __webpack_require__(61), __webpack_require__(62), __webpack_require__(63), __webpack_require__(7), __webpack_require__(64), __webpack_require__(65), __webpack_require__(66), __webpack_require__(67), __webpack_require__(68)].forEach(function (props) {
	  util.extend(elesfn, props);
	});

	module.exports = Collection;

	/***/ }),
	/* 8 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/* global Set */

	var undef =  true ? 'undefined' : _typeof(undefined);

	var ObjectSet = function () {
	  function ObjectSet(arrayOrObjectSet) {
	    _classCallCheck(this, ObjectSet);

	    this._obj = Object.create(null);

	    if (arrayOrObjectSet != null) {
	      var arr = void 0;

	      if (arrayOrObjectSet.instanceString != null && arrayOrObjectSet.instanceString() === this.instanceString()) {
	        arr = arrayOrObjectSet.toArray();
	      } else {
	        arr = arrayOrObjectSet;
	      }

	      for (var i = 0; i < arr.length; i++) {
	        this.add(arr[i]);
	      }
	    }
	  }

	  _createClass(ObjectSet, [{
	    key: 'instanceString',
	    value: function instanceString() {
	      return 'set';
	    }
	  }, {
	    key: 'add',
	    value: function add(val) {
	      this._obj[val] = 1;
	    }
	  }, {
	    key: 'delete',
	    value: function _delete(val) {
	      this._obj[val] = 0;
	    }
	  }, {
	    key: 'clear',
	    value: function clear() {
	      this._obj = Object.create(null);
	    }
	  }, {
	    key: 'has',
	    value: function has(val) {
	      return this._obj[val] === 1;
	    }
	  }, {
	    key: 'toArray',
	    value: function toArray() {
	      var _this = this;

	      return Object.keys(this._obj).filter(function (key) {
	        return _this.has(key);
	      });
	    }
	  }, {
	    key: 'forEach',
	    value: function forEach(callback, thisArg) {
	      return this.toArray().forEach(callback, thisArg);
	    }
	  }, {
	    key: 'size',
	    get: function get() {
	      return this.toArray().length;
	    }
	  }]);

	  return ObjectSet;
	}();

	// TODO use the stdlib Set in future...
	// module.exports = typeof Set !== undef ? Set : ObjectSet;


	module.exports = ObjectSet;

	/***/ }),
	/* 9 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	module.exports = __webpack_require__(32);

	/***/ }),
	/* 10 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	// storage for parsed queries
	var newQuery = function newQuery() {
	  return {
	    classes: [],
	    colonSelectors: [],
	    data: [],
	    group: null,
	    ids: [],
	    meta: [],

	    // fake selectors
	    collection: null, // a collection to match against
	    filter: null, // filter function

	    // these are defined in the upward direction rather than down (e.g. child)
	    // because we need to go up in Selector.filter()
	    parent: null, // parent query obj
	    ancestor: null, // ancestor query obj
	    subject: null, // defines subject in compound query (subject query obj; points to self if subject)

	    // use these only when subject has been defined
	    child: null,
	    descendant: null
	  };
	};

	module.exports = newQuery;

	/***/ }),
	/* 11 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var is = __webpack_require__(0);
	var Event = __webpack_require__(16);

	var eventRegex = /^([^.]+)(\.(?:[^.]+))?$/; // regex for matching event strings (e.g. "click.namespace")
	var universalNamespace = '.*'; // matches as if no namespace specified and prevents users from unbinding accidentally

	var defaults = {
	  qualifierCompare: function qualifierCompare(q1, q2) {
	    return q1 === q2;
	  },
	  eventMatches: function eventMatches() /*context, listener, eventObj*/{
	    return true;
	  },
	  eventFields: function eventFields() /*context*/{
	    return {};
	  },
	  callbackContext: function callbackContext(context /*, listener, eventObj*/) {
	    return context;
	  },
	  beforeEmit: function beforeEmit() /* context, listener, eventObj */{},
	  afterEmit: function afterEmit() /* context, listener, eventObj */{},
	  bubble: function bubble() /*context*/{
	    return false;
	  },
	  parent: function parent() /*context*/{
	    return null;
	  },
	  context: undefined
	};

	function Emitter(opts) {
	  util.assign(this, defaults, opts);

	  this.listeners = [];
	  this.emitting = 0;
	}

	var p = Emitter.prototype;

	var forEachEvent = function forEachEvent(self, handler, events, qualifier, callback, conf, confOverrides) {
	  if (is.fn(qualifier)) {
	    callback = qualifier;
	    qualifier = null;
	  }

	  if (confOverrides) {
	    if (conf == null) {
	      conf = confOverrides;
	    } else {
	      conf = util.assign({}, conf, confOverrides);
	    }
	  }

	  var eventList = events.split(/\s+/);

	  for (var i = 0; i < eventList.length; i++) {
	    var evt = eventList[i];

	    if (is.emptyString(evt)) {
	      continue;
	    }

	    var match = evt.match(eventRegex); // type[.namespace]

	    if (match) {
	      var type = match[1];
	      var namespace = match[2] ? match[2] : null;
	      var ret = handler(self, evt, type, namespace, qualifier, callback, conf);

	      if (ret === false) {
	        break;
	      } // allow exiting early
	    }
	  }
	};

	var makeEventObj = function makeEventObj(self, obj) {
	  return new Event(obj.type, util.assign(obj, self.eventFields(self.context)));
	};

	var forEachEventObj = function forEachEventObj(self, handler, events) {
	  if (is.event(events)) {
	    handler(self, events);

	    return;
	  } else if (is.plainObject(events)) {
	    handler(self, makeEventObj(self, events));

	    return;
	  }

	  var eventList = events.split(/\s+/);

	  for (var i = 0; i < eventList.length; i++) {
	    var evt = eventList[i];

	    if (is.emptyString(evt)) {
	      continue;
	    }

	    var match = evt.match(eventRegex); // type[.namespace]

	    if (match) {
	      var type = match[1];
	      var namespace = match[2] ? match[2] : null;
	      var eventObj = makeEventObj(self, {
	        type: type,
	        namespace: namespace,
	        target: self.context
	      });

	      handler(self, eventObj);
	    }
	  }
	};

	p.on = p.addListener = function (events, qualifier, callback, conf, confOverrides) {
	  forEachEvent(this, function (self, event, type, namespace, qualifier, callback, conf) {
	    if (is.fn(callback)) {
	      self.listeners.push({
	        event: event, // full event string
	        callback: callback, // callback to run
	        type: type, // the event type (e.g. 'click')
	        namespace: namespace, // the event namespace (e.g. ".foo")
	        qualifier: qualifier, // a restriction on whether to match this emitter
	        conf: conf // additional configuration
	      });
	    }
	  }, events, qualifier, callback, conf, confOverrides);

	  return this;
	};

	p.one = function (events, qualifier, callback, conf) {
	  return this.on(events, qualifier, callback, conf, { one: true });
	};

	p.removeListener = p.off = function (events, qualifier, callback, conf) {
	  var _this = this;

	  if (this.emitting !== 0) {
	    this.listeners = util.copyArray(this.listeners);
	  }

	  var listeners = this.listeners;

	  var _loop = function _loop(i) {
	    var listener = listeners[i];

	    forEachEvent(_this, function (self, event, type, namespace, qualifier, callback /*, conf*/) {
	      if (listener.type === type && (!namespace || listener.namespace === namespace) && (!qualifier || self.qualifierCompare(listener.qualifier, qualifier)) && (!callback || listener.callback === callback)) {
	        listeners.splice(i, 1);

	        return false;
	      }
	    }, events, qualifier, callback, conf);
	  };

	  for (var i = listeners.length - 1; i >= 0; i--) {
	    _loop(i);
	  }

	  return this;
	};

	p.emit = p.trigger = function (events, extraParams, manualCallback) {
	  var listeners = this.listeners;
	  var numListenersBeforeEmit = listeners.length;

	  this.emitting++;

	  if (!is.array(extraParams)) {
	    extraParams = [extraParams];
	  }

	  forEachEventObj(this, function (self, eventObj) {
	    if (manualCallback != null) {
	      listeners = [{
	        event: eventObj.event,
	        type: eventObj.type,
	        namespace: eventObj.namespace,
	        callback: manualCallback
	      }];

	      numListenersBeforeEmit = listeners.length;
	    }

	    var _loop2 = function _loop2(i) {
	      var listener = listeners[i];

	      if (listener.type === eventObj.type && (!listener.namespace || listener.namespace === eventObj.namespace || listener.namespace === universalNamespace) && self.eventMatches(self.context, listener, eventObj)) {
	        var args = [eventObj];

	        if (extraParams != null) {
	          util.push(args, extraParams);
	        }

	        self.beforeEmit(self.context, listener, eventObj);

	        if (listener.conf && listener.conf.one) {
	          self.listeners = self.listeners.filter(function (l) {
	            return l !== listener;
	          });
	        }

	        var context = self.callbackContext(self.context, listener, eventObj);
	        var ret = listener.callback.apply(context, args);

	        self.afterEmit(self.context, listener, eventObj);

	        if (ret === false) {
	          eventObj.stopPropagation();
	          eventObj.preventDefault();
	        }
	      } // if listener matches
	    };

	    for (var i = 0; i < numListenersBeforeEmit; i++) {
	      _loop2(i);
	    } // for listener

	    if (self.bubble(self.context) && !eventObj.isPropagationStopped()) {
	      self.parent(self.context).emit(eventObj, extraParams);
	    }
	  }, events);

	  this.emitting--;

	  return this;
	};

	module.exports = Emitter;

	/***/ }),
	/* 12 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var window = __webpack_require__(3);
	var util = __webpack_require__(1);
	var Collection = __webpack_require__(7);
	var is = __webpack_require__(0);
	var Promise = __webpack_require__(5);
	var define = __webpack_require__(4);

	var Core = function Core(opts) {
	  var cy = this;

	  opts = util.extend({}, opts);

	  var container = opts.container;

	  // allow for passing a wrapped jquery object
	  // e.g. cytoscape({ container: $('#cy') })
	  if (container && !is.htmlElement(container) && is.htmlElement(container[0])) {
	    container = container[0];
	  }

	  var reg = container ? container._cyreg : null; // e.g. already registered some info (e.g. readies) via jquery
	  reg = reg || {};

	  if (reg && reg.cy) {
	    reg.cy.destroy();

	    reg = {}; // old instance => replace reg completely
	  }

	  var readies = reg.readies = reg.readies || [];

	  if (container) {
	    container._cyreg = reg;
	  } // make sure container assoc'd reg points to this cy
	  reg.cy = cy;

	  var head = window !== undefined && container !== undefined && !opts.headless;
	  var options = opts;
	  options.layout = util.extend({ name: head ? 'grid' : 'null' }, options.layout);
	  options.renderer = util.extend({ name: head ? 'canvas' : 'null' }, options.renderer);

	  var defVal = function defVal(def, val, altVal) {
	    if (val !== undefined) {
	      return val;
	    } else if (altVal !== undefined) {
	      return altVal;
	    } else {
	      return def;
	    }
	  };

	  var _p = this._private = {
	    container: container, // html dom ele container
	    ready: false, // whether ready has been triggered
	    options: options, // cached options
	    elements: new Collection(this), // elements in the graph
	    listeners: [], // list of listeners
	    aniEles: new Collection(this), // elements being animated
	    scratch: {}, // scratch object for core
	    layout: null,
	    renderer: null,
	    destroyed: false, // whether destroy was called
	    notificationsEnabled: true, // whether notifications are sent to the renderer
	    minZoom: 1e-50,
	    maxZoom: 1e50,
	    zoomingEnabled: defVal(true, options.zoomingEnabled),
	    userZoomingEnabled: defVal(true, options.userZoomingEnabled),
	    panningEnabled: defVal(true, options.panningEnabled),
	    userPanningEnabled: defVal(true, options.userPanningEnabled),
	    boxSelectionEnabled: defVal(true, options.boxSelectionEnabled),
	    autolock: defVal(false, options.autolock, options.autolockNodes),
	    autoungrabify: defVal(false, options.autoungrabify, options.autoungrabifyNodes),
	    autounselectify: defVal(false, options.autounselectify),
	    styleEnabled: options.styleEnabled === undefined ? head : options.styleEnabled,
	    zoom: is.number(options.zoom) ? options.zoom : 1,
	    pan: {
	      x: is.plainObject(options.pan) && is.number(options.pan.x) ? options.pan.x : 0,
	      y: is.plainObject(options.pan) && is.number(options.pan.y) ? options.pan.y : 0
	    },
	    animation: { // object for currently-running animations
	      current: [],
	      queue: []
	    },
	    hasCompoundNodes: false
	  };

	  this.createEmitter();

	  // set selection type
	  var selType = options.selectionType;
	  if (selType === undefined || selType !== 'additive' && selType !== 'single') {
	    // then set default

	    _p.selectionType = 'single';
	  } else {
	    _p.selectionType = selType;
	  }

	  // init zoom bounds
	  if (is.number(options.minZoom) && is.number(options.maxZoom) && options.minZoom < options.maxZoom) {
	    _p.minZoom = options.minZoom;
	    _p.maxZoom = options.maxZoom;
	  } else if (is.number(options.minZoom) && options.maxZoom === undefined) {
	    _p.minZoom = options.minZoom;
	  } else if (is.number(options.maxZoom) && options.minZoom === undefined) {
	    _p.maxZoom = options.maxZoom;
	  }

	  var loadExtData = function loadExtData(extData, next) {
	    var anyIsPromise = extData.some(is.promise);

	    if (anyIsPromise) {
	      return Promise.all(extData).then(next); // load all data asynchronously, then exec rest of init
	    } else {
	      next(extData); // exec synchronously for convenience
	    }
	  };

	  // start with the default stylesheet so we have something before loading an external stylesheet
	  if (_p.styleEnabled) {
	    cy.setStyle([]);
	  }

	  // create the renderer
	  cy.initRenderer(util.extend({
	    hideEdgesOnViewport: options.hideEdgesOnViewport,
	    textureOnViewport: options.textureOnViewport,
	    wheelSensitivity: is.number(options.wheelSensitivity) && options.wheelSensitivity > 0 ? options.wheelSensitivity : 1,
	    motionBlur: options.motionBlur === undefined ? false : options.motionBlur, // off by default
	    motionBlurOpacity: options.motionBlurOpacity === undefined ? 0.05 : options.motionBlurOpacity,
	    pixelRatio: is.number(options.pixelRatio) && options.pixelRatio > 0 ? options.pixelRatio : undefined,
	    desktopTapThreshold: options.desktopTapThreshold === undefined ? 4 : options.desktopTapThreshold,
	    touchTapThreshold: options.touchTapThreshold === undefined ? 8 : options.touchTapThreshold
	  }, options.renderer));

	  var setElesAndLayout = function setElesAndLayout(elements, onload, ondone) {
	    cy.notifications(false);

	    // remove old elements
	    var oldEles = cy.mutableElements();
	    if (oldEles.length > 0) {
	      oldEles.remove();
	    }

	    if (elements != null) {
	      if (is.plainObject(elements) || is.array(elements)) {
	        cy.add(elements);
	      }
	    }

	    cy.one('layoutready', function (e) {
	      cy.notifications(true);
	      cy.emit(e); // we missed this event by turning notifications off, so pass it on

	      cy.notify({
	        type: 'load',
	        eles: cy.mutableElements()
	      });

	      cy.one('load', onload);
	      cy.emit('load');
	    }).one('layoutstop', function () {
	      cy.one('done', ondone);
	      cy.emit('done');
	    });

	    var layoutOpts = util.extend({}, cy._private.options.layout);
	    layoutOpts.eles = cy.elements();

	    cy.layout(layoutOpts).run();
	  };

	  loadExtData([options.style, options.elements], function (thens) {
	    var initStyle = thens[0];
	    var initEles = thens[1];

	    // init style
	    if (_p.styleEnabled) {
	      cy.style().append(initStyle);
	    }

	    // initial load
	    setElesAndLayout(initEles, function () {
	      // onready
	      cy.startAnimationLoop();
	      _p.ready = true;

	      // if a ready callback is specified as an option, the bind it
	      if (is.fn(options.ready)) {
	        cy.on('ready', options.ready);
	      }

	      // bind all the ready handlers registered before creating this instance
	      for (var i = 0; i < readies.length; i++) {
	        var fn = readies[i];
	        cy.on('ready', fn);
	      }
	      if (reg) {
	        reg.readies = [];
	      } // clear b/c we've bound them all and don't want to keep it around in case a new core uses the same div etc

	      cy.emit('ready');
	    }, options.done);
	  });
	};

	var corefn = Core.prototype; // short alias

	util.extend(corefn, {
	  instanceString: function instanceString() {
	    return 'core';
	  },

	  isReady: function isReady() {
	    return this._private.ready;
	  },

	  isDestroyed: function isDestroyed() {
	    return this._private.destroyed;
	  },

	  ready: function ready(fn) {
	    if (this.isReady()) {
	      this.emitter().emit('ready', [], fn); // just calls fn as though triggered via ready event
	    } else {
	      this.on('ready', fn);
	    }

	    return this;
	  },

	  destroy: function destroy() {
	    var cy = this;
	    if (cy.isDestroyed()) return;

	    cy.stopAnimationLoop();

	    cy.destroyRenderer();

	    this.emit('destroy');

	    cy._private.destroyed = true;

	    return cy;
	  },

	  hasElementWithId: function hasElementWithId(id) {
	    return this._private.elements.hasElementWithId(id);
	  },

	  getElementById: function getElementById(id) {
	    return this._private.elements.getElementById(id);
	  },

	  selectionType: function selectionType() {
	    return this._private.selectionType;
	  },

	  hasCompoundNodes: function hasCompoundNodes() {
	    return this._private.hasCompoundNodes;
	  },

	  headless: function headless() {
	    return this._private.options.renderer.name === 'null';
	  },

	  styleEnabled: function styleEnabled() {
	    return this._private.styleEnabled;
	  },

	  addToPool: function addToPool(eles) {
	    this._private.elements.merge(eles);

	    return this; // chaining
	  },

	  removeFromPool: function removeFromPool(eles) {
	    this._private.elements.unmerge(eles);

	    return this;
	  },

	  container: function container() {
	    return this._private.container;
	  },

	  options: function options() {
	    return util.copy(this._private.options);
	  },

	  json: function json(obj) {
	    var cy = this;
	    var _p = cy._private;
	    var eles = cy.mutableElements();

	    if (is.plainObject(obj)) {
	      // set

	      cy.startBatch();

	      if (obj.elements) {
	        var idInJson = {};

	        var updateEles = function updateEles(jsons, gr) {
	          for (var i = 0; i < jsons.length; i++) {
	            var json = jsons[i];
	            var id = json.data.id;
	            var ele = cy.getElementById(id);

	            idInJson[id] = true;

	            if (ele.length !== 0) {
	              // existing element should be updated
	              ele.json(json);
	            } else {
	              // otherwise should be added
	              if (gr) {
	                cy.add(util.extend({ group: gr }, json));
	              } else {
	                cy.add(json);
	              }
	            }
	          }
	        };

	        if (is.array(obj.elements)) {
	          // elements: []
	          updateEles(obj.elements);
	        } else {
	          // elements: { nodes: [], edges: [] }
	          var grs = ['nodes', 'edges'];
	          for (var i = 0; i < grs.length; i++) {
	            var gr = grs[i];
	            var elements = obj.elements[gr];

	            if (is.array(elements)) {
	              updateEles(elements, gr);
	            }
	          }
	        }

	        // elements not specified in json should be removed
	        eles.stdFilter(function (ele) {
	          return !idInJson[ele.id()];
	        }).remove();
	      }

	      if (obj.style) {
	        cy.style(obj.style);
	      }

	      if (obj.zoom != null && obj.zoom !== _p.zoom) {
	        cy.zoom(obj.zoom);
	      }

	      if (obj.pan) {
	        if (obj.pan.x !== _p.pan.x || obj.pan.y !== _p.pan.y) {
	          cy.pan(obj.pan);
	        }
	      }

	      var fields = ['minZoom', 'maxZoom', 'zoomingEnabled', 'userZoomingEnabled', 'panningEnabled', 'userPanningEnabled', 'boxSelectionEnabled', 'autolock', 'autoungrabify', 'autounselectify'];

	      for (var _i = 0; _i < fields.length; _i++) {
	        var f = fields[_i];

	        if (obj[f] != null) {
	          cy[f](obj[f]);
	        }
	      }

	      cy.endBatch();

	      return this; // chaining
	    } else if (obj === undefined) {
	      // get
	      var json = {};

	      json.elements = {};
	      eles.forEach(function (ele) {
	        var group = ele.group();

	        if (!json.elements[group]) {
	          json.elements[group] = [];
	        }

	        json.elements[group].push(ele.json());
	      });

	      if (this._private.styleEnabled) {
	        json.style = cy.style().json();
	      }

	      json.zoomingEnabled = cy._private.zoomingEnabled;
	      json.userZoomingEnabled = cy._private.userZoomingEnabled;
	      json.zoom = cy._private.zoom;
	      json.minZoom = cy._private.minZoom;
	      json.maxZoom = cy._private.maxZoom;
	      json.panningEnabled = cy._private.panningEnabled;
	      json.userPanningEnabled = cy._private.userPanningEnabled;
	      json.pan = util.copy(cy._private.pan);
	      json.boxSelectionEnabled = cy._private.boxSelectionEnabled;
	      json.renderer = util.copy(cy._private.options.renderer);
	      json.hideEdgesOnViewport = cy._private.options.hideEdgesOnViewport;
	      json.textureOnViewport = cy._private.options.textureOnViewport;
	      json.wheelSensitivity = cy._private.options.wheelSensitivity;
	      json.motionBlur = cy._private.options.motionBlur;

	      return json;
	    }
	  },

	  scratch: define.data({
	    field: 'scratch',
	    bindingEvent: 'scratch',
	    allowBinding: true,
	    allowSetting: true,
	    settingEvent: 'scratch',
	    settingTriggersEvent: true,
	    triggerFnName: 'trigger',
	    allowGetting: true
	  }),

	  removeScratch: define.removeData({
	    field: 'scratch',
	    event: 'scratch',
	    triggerFnName: 'trigger',
	    triggerEvent: true
	  })

	});

	corefn.$id = corefn.getElementById;

	[__webpack_require__(69), __webpack_require__(70), __webpack_require__(78), __webpack_require__(79), __webpack_require__(80), __webpack_require__(81), __webpack_require__(82), __webpack_require__(83), __webpack_require__(84), __webpack_require__(93)].forEach(function (props) {
	  util.extend(corefn, props);
	});

	module.exports = Core;

	/***/ }),
	/* 13 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	module.exports = function memoize(fn, keyFn) {
	  if (!keyFn) {
	    keyFn = function keyFn() {
	      if (arguments.length === 1) {
	        return arguments[0];
	      } else if (arguments.length === 0) {
	        return 'undefined';
	      }

	      var args = [];

	      for (var i = 0; i < arguments.length; i++) {
	        args.push(arguments[i]);
	      }

	      return args.join('$');
	    };
	  }

	  var memoizedFn = function memoizedFn() {
	    var self = this;
	    var args = arguments;
	    var ret = void 0;
	    var k = keyFn.apply(self, args);
	    var cache = memoizedFn.cache;

	    if (!(ret = cache[k])) {
	      ret = cache[k] = fn.apply(self, args);
	    }

	    return ret;
	  };

	  memoizedFn.cache = {};

	  return memoizedFn;
	};

	/***/ }),
	/* 14 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var is = __webpack_require__(0);
	var Set = __webpack_require__(8);

	// represents a node or an edge
	var Element = function Element(cy, params, restore) {
	  restore = restore === undefined || restore ? true : false;

	  if (cy === undefined || params === undefined || !is.core(cy)) {
	    util.error('An element must have a core reference and parameters set');
	    return;
	  }

	  var group = params.group;

	  // try to automatically infer the group if unspecified
	  if (group == null) {
	    if (params.data && params.data.source != null && params.data.target != null) {
	      group = 'edges';
	    } else {
	      group = 'nodes';
	    }
	  }

	  // validate group
	  if (group !== 'nodes' && group !== 'edges') {
	    util.error('An element must be of type `nodes` or `edges`; you specified `' + group + '`');
	    return;
	  }

	  // make the element array-like, just like a collection
	  this.length = 1;
	  this[0] = this;

	  // NOTE: when something is added here, add also to ele.json()
	  var _p = this._private = {
	    cy: cy,
	    single: true, // indicates this is an element
	    data: params.data || {}, // data object
	    position: params.position || {}, // (x, y) position pair
	    autoWidth: undefined, // width and height of nodes calculated by the renderer when set to special 'auto' value
	    autoHeight: undefined,
	    autoPadding: undefined,
	    compoundBoundsClean: false, // whether the compound dimensions need to be recalculated the next time dimensions are read
	    listeners: [], // array of bound listeners
	    group: group, // string; 'nodes' or 'edges'
	    style: {}, // properties as set by the style
	    rstyle: {}, // properties for style sent from the renderer to the core
	    styleCxts: [], // applied style contexts from the styler
	    removed: true, // whether it's inside the vis; true if removed (set true here since we call restore)
	    selected: params.selected ? true : false, // whether it's selected
	    selectable: params.selectable === undefined ? true : params.selectable ? true : false, // whether it's selectable
	    locked: params.locked ? true : false, // whether the element is locked (cannot be moved)
	    grabbed: false, // whether the element is grabbed by the mouse; renderer sets this privately
	    grabbable: params.grabbable === undefined ? true : params.grabbable ? true : false, // whether the element can be grabbed
	    active: false, // whether the element is active from user interaction
	    classes: new Set(), // map ( className => true )
	    animation: { // object for currently-running animations
	      current: [],
	      queue: []
	    },
	    rscratch: {}, // object in which the renderer can store information
	    scratch: params.scratch || {}, // scratch objects
	    edges: [], // array of connected edges
	    children: [], // array of children
	    parent: null, // parent ref
	    traversalCache: {}, // cache of output of traversal functions
	    backgrounding: false // whether background images are loading
	  };

	  // renderedPosition overrides if specified
	  if (params.renderedPosition) {
	    var rpos = params.renderedPosition;
	    var pan = cy.pan();
	    var zoom = cy.zoom();

	    _p.position = {
	      x: (rpos.x - pan.x) / zoom,
	      y: (rpos.y - pan.y) / zoom
	    };
	  }

	  if (is.string(params.classes)) {
	    var classes = params.classes.split(/\s+/);
	    for (var i = 0, l = classes.length; i < l; i++) {
	      var cls = classes[i];
	      if (!cls || cls === '') {
	        continue;
	      }

	      _p.classes.add(cls);
	    }
	  }

	  if (params.style || params.css) {
	    cy.style().applyBypass(this, params.style || params.css);
	  }

	  this.createEmitter();

	  if (restore === undefined || restore) {
	    this.restore();
	  }
	};

	module.exports = Element;

	/***/ }),
	/* 15 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);

	var stateSelectors = [{
	  selector: ':selected',
	  matches: function matches(ele) {
	    return ele.selected();
	  }
	}, {
	  selector: ':unselected',
	  matches: function matches(ele) {
	    return !ele.selected();
	  }
	}, {
	  selector: ':selectable',
	  matches: function matches(ele) {
	    return ele.selectable();
	  }
	}, {
	  selector: ':unselectable',
	  matches: function matches(ele) {
	    return !ele.selectable();
	  }
	}, {
	  selector: ':locked',
	  matches: function matches(ele) {
	    return ele.locked();
	  }
	}, {
	  selector: ':unlocked',
	  matches: function matches(ele) {
	    return !ele.locked();
	  }
	}, {
	  selector: ':visible',
	  matches: function matches(ele) {
	    return ele.visible();
	  }
	}, {
	  selector: ':hidden',
	  matches: function matches(ele) {
	    return !ele.visible();
	  }
	}, {
	  selector: ':transparent',
	  matches: function matches(ele) {
	    return ele.transparent();
	  }
	}, {
	  selector: ':grabbed',
	  matches: function matches(ele) {
	    return ele.grabbed();
	  }
	}, {
	  selector: ':free',
	  matches: function matches(ele) {
	    return !ele.grabbed();
	  }
	}, {
	  selector: ':removed',
	  matches: function matches(ele) {
	    return ele.removed();
	  }
	}, {
	  selector: ':inside',
	  matches: function matches(ele) {
	    return !ele.removed();
	  }
	}, {
	  selector: ':grabbable',
	  matches: function matches(ele) {
	    return ele.grabbable();
	  }
	}, {
	  selector: ':ungrabbable',
	  matches: function matches(ele) {
	    return !ele.grabbable();
	  }
	}, {
	  selector: ':animated',
	  matches: function matches(ele) {
	    return ele.animated();
	  }
	}, {
	  selector: ':unanimated',
	  matches: function matches(ele) {
	    return !ele.animated();
	  }
	}, {
	  selector: ':parent',
	  matches: function matches(ele) {
	    return ele.isParent();
	  }
	}, {
	  selector: ':childless',
	  matches: function matches(ele) {
	    return ele.isChildless();
	  }
	}, {
	  selector: ':child',
	  matches: function matches(ele) {
	    return ele.isChild();
	  }
	}, {
	  selector: ':orphan',
	  matches: function matches(ele) {
	    return ele.isOrphan();
	  }
	}, {
	  selector: ':nonorphan',
	  matches: function matches(ele) {
	    return ele.isChild();
	  }
	}, {
	  selector: ':loop',
	  matches: function matches(ele) {
	    return ele.isLoop();
	  }
	}, {
	  selector: ':simple',
	  matches: function matches(ele) {
	    return ele.isSimple();
	  }
	}, {
	  selector: ':active',
	  matches: function matches(ele) {
	    return ele.active();
	  }
	}, {
	  selector: ':inactive',
	  matches: function matches(ele) {
	    return !ele.active();
	  }
	}, {
	  selector: ':backgrounding',
	  matches: function matches(ele) {
	    return ele.backgrounding();
	  }
	}, {
	  selector: ':nonbackgrounding',
	  matches: function matches(ele) {
	    return !ele.backgrounding();
	  }
	}].sort(function (a, b) {
	  // n.b. selectors that are starting substrings of others must have the longer ones first
	  return util.sort.descending(a.selector, b.selector);
	});

	var stateSelectorMatches = function stateSelectorMatches(sel, ele) {
	  var lookup = stateSelectorMatches.lookup = stateSelectorMatches.lookup || function () {
	    var selToFn = {};
	    var s = void 0;

	    for (var i = 0; i < stateSelectors.length; i++) {
	      s = stateSelectors[i];

	      selToFn[s.selector] = s.matches;
	    }

	    return selToFn;
	  }();

	  return lookup[sel](ele);
	};

	var stateSelectorRegex = '(' + stateSelectors.map(function (s) {
	  return s.selector;
	}).join('|') + ')';

	module.exports = { stateSelectors: stateSelectors, stateSelectorMatches: stateSelectorMatches, stateSelectorRegex: stateSelectorRegex };

	/***/ }),
	/* 16 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	/*!
	Event object based on jQuery events, MIT license

	https://jquery.org/license/
	https://tldrlegal.com/license/mit-license
	https://github.com/jquery/jquery/blob/master/src/event.js
	*/

	var Event = function Event(src, props) {
	  this.recycle(src, props);
	};

	function returnFalse() {
	  return false;
	}

	function returnTrue() {
	  return true;
	}

	// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
	Event.prototype = {
	  instanceString: function instanceString() {
	    return 'event';
	  },

	  recycle: function recycle(src, props) {
	    this.isImmediatePropagationStopped = this.isPropagationStopped = this.isDefaultPrevented = returnFalse;

	    if (src != null && src.preventDefault) {
	      // Browser Event object
	      this.type = src.type;

	      // Events bubbling up the document may have been marked as prevented
	      // by a handler lower down the tree; reflect the correct value.
	      this.isDefaultPrevented = src.defaultPrevented ? returnTrue : returnFalse;
	    } else if (src != null && src.type) {
	      // Plain object containing all event details
	      props = src;
	    } else {
	      // Event string
	      this.type = src;
	    }

	    // Put explicitly provided properties onto the event object
	    if (props != null) {
	      // more efficient to manually copy fields we use
	      this.originalEvent = props.originalEvent;
	      this.type = props.type != null ? props.type : this.type;
	      this.cy = props.cy;
	      this.target = props.target;
	      this.position = props.position;
	      this.renderedPosition = props.renderedPosition;
	      this.namespace = props.namespace;
	      this.layout = props.layout;
	    }

	    if (this.cy != null && this.position != null && this.renderedPosition == null) {
	      // create a rendered position based on the passed position
	      var pos = this.position;
	      var zoom = this.cy.zoom();
	      var pan = this.cy.pan();

	      this.renderedPosition = {
	        x: pos.x * zoom + pan.x,
	        y: pos.y * zoom + pan.y
	      };
	    }

	    // Create a timestamp if incoming event doesn't have one
	    this.timeStamp = src && src.timeStamp || Date.now();
	  },

	  preventDefault: function preventDefault() {
	    this.isDefaultPrevented = returnTrue;

	    var e = this.originalEvent;
	    if (!e) {
	      return;
	    }

	    // if preventDefault exists run it on the original event
	    if (e.preventDefault) {
	      e.preventDefault();
	    }
	  },

	  stopPropagation: function stopPropagation() {
	    this.isPropagationStopped = returnTrue;

	    var e = this.originalEvent;
	    if (!e) {
	      return;
	    }

	    // if stopPropagation exists run it on the original event
	    if (e.stopPropagation) {
	      e.stopPropagation();
	    }
	  },

	  stopImmediatePropagation: function stopImmediatePropagation() {
	    this.isImmediatePropagationStopped = returnTrue;
	    this.stopPropagation();
	  },

	  isDefaultPrevented: returnFalse,
	  isPropagationStopped: returnFalse,
	  isImmediatePropagationStopped: returnFalse
	};

	module.exports = Event;

	/***/ }),
	/* 17 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	/**
	 *  Elements are drawn in a specific order based on compound depth (low to high), the element type (nodes above edges),
	 *  and z-index (low to high).  These styles affect how this applies:
	 *
	 *  z-compound-depth: May be `bottom | orphan | auto | top`.  The first drawn is `bottom`, then `orphan` which is the
	 *      same depth as the root of the compound graph, followed by the default value `auto` which draws in order from
	 *      root to leaves of the compound graph.  The last drawn is `top`.
	 *  z-index-compare: May be `auto | manual`.  The default value is `auto` which always draws edges under nodes.
	 *      `manual` ignores this convention and draws based on the `z-index` value setting.
	 *  z-index: An integer value that affects the relative draw order of elements.  In general, an element with a higher
	 *      `z-index` will be drawn on top of an element with a lower `z-index`.
	 */
	var util = __webpack_require__(1);

	var zIndexSort = function zIndexSort(a, b) {
	  var cy = a.cy();
	  var hasCompoundNodes = cy.hasCompoundNodes();

	  function getDepth(ele) {
	    var style = ele.pstyle('z-compound-depth');
	    if (style.value === 'auto') {
	      return hasCompoundNodes ? ele.zDepth() : 0;
	    } else if (style.value === 'bottom') {
	      return -1;
	    } else if (style.value === 'top') {
	      return util.MAX_INT;
	    }
	    // 'orphan'
	    return 0;
	  }
	  var depthDiff = getDepth(a) - getDepth(b);
	  if (depthDiff !== 0) {
	    return depthDiff;
	  }

	  function getEleDepth(ele) {
	    var style = ele.pstyle('z-index-compare');
	    if (style.value === 'auto') {
	      return ele.isNode() ? 1 : 0;
	    }
	    // 'manual'
	    return 0;
	  }
	  var eleDiff = getEleDepth(a) - getEleDepth(b);
	  if (eleDiff !== 0) {
	    return eleDiff;
	  }

	  var zDiff = a.pstyle('z-index').value - b.pstyle('z-index').value;
	  if (zDiff !== 0) {
	    return zDiff;
	  }
	  // compare indices in the core (order added to graph w/ last on top)
	  return a.poolIndex() - b.poolIndex();
	};

	module.exports = zIndexSort;

	/***/ }),
	/* 18 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var util = __webpack_require__(1);
	var Selector = __webpack_require__(6);

	var Style = function Style(cy) {

	  if (!(this instanceof Style)) {
	    return new Style(cy);
	  }

	  if (!is.core(cy)) {
	    util.error('A style must have a core reference');
	    return;
	  }

	  this._private = {
	    cy: cy,
	    coreStyle: {}
	  };

	  this.length = 0;

	  this.resetToDefault();
	};

	var styfn = Style.prototype;

	styfn.instanceString = function () {
	  return 'style';
	};

	// remove all contexts
	styfn.clear = function () {
	  for (var i = 0; i < this.length; i++) {
	    this[i] = undefined;
	  }
	  this.length = 0;

	  var _p = this._private;

	  _p.newStyle = true;

	  return this; // chaining
	};

	styfn.resetToDefault = function () {
	  this.clear();
	  this.addDefaultStylesheet();

	  return this;
	};

	// builds a style object for the 'core' selector
	styfn.core = function () {
	  return this._private.coreStyle;
	};

	// create a new context from the specified selector string and switch to that context
	styfn.selector = function (selectorStr) {
	  // 'core' is a special case and does not need a selector
	  var selector = selectorStr === 'core' ? null : new Selector(selectorStr);

	  var i = this.length++; // new context means new index
	  this[i] = {
	    selector: selector,
	    properties: [],
	    mappedProperties: [],
	    index: i
	  };

	  return this; // chaining
	};

	// add one or many css rules to the current context
	styfn.css = function () {
	  var self = this;
	  var args = arguments;

	  switch (args.length) {
	    case 1:
	      var map = args[0];

	      for (var i = 0; i < self.properties.length; i++) {
	        var prop = self.properties[i];
	        var mapVal = map[prop.name];

	        if (mapVal === undefined) {
	          mapVal = map[util.dash2camel(prop.name)];
	        }

	        if (mapVal !== undefined) {
	          this.cssRule(prop.name, mapVal);
	        }
	      }

	      break;

	    case 2:
	      this.cssRule(args[0], args[1]);
	      break;

	    default:
	      break; // do nothing if args are invalid
	  }

	  return this; // chaining
	};
	styfn.style = styfn.css;

	// add a single css rule to the current context
	styfn.cssRule = function (name, value) {
	  // name-value pair
	  var property = this.parse(name, value);

	  // add property to current context if valid
	  if (property) {
	    var i = this.length - 1;
	    this[i].properties.push(property);
	    this[i].properties[property.name] = property; // allow access by name as well

	    if (property.name.match(/pie-(\d+)-background-size/) && property.value) {
	      this._private.hasPie = true;
	    }

	    if (property.mapped) {
	      this[i].mappedProperties.push(property);
	    }

	    // add to core style if necessary
	    var currentSelectorIsCore = !this[i].selector;
	    if (currentSelectorIsCore) {
	      this._private.coreStyle[property.name] = property;
	    }
	  }

	  return this; // chaining
	};

	styfn.append = function (style) {
	  if (is.stylesheet(style)) {
	    style.appendToStyle(this);
	  } else if (is.array(style)) {
	    this.appendFromJson(style);
	  } else if (is.string(style)) {
	    this.appendFromString(style);
	  } // you probably wouldn't want to append a Style, since you'd duplicate the default parts

	  return this;
	};

	// static function
	Style.fromJson = function (cy, json) {
	  var style = new Style(cy);

	  style.fromJson(json);

	  return style;
	};

	Style.fromString = function (cy, string) {
	  return new Style(cy).fromString(string);
	};

	[__webpack_require__(85), __webpack_require__(86), __webpack_require__(87), __webpack_require__(88), __webpack_require__(89), __webpack_require__(90), __webpack_require__(91), __webpack_require__(92)].forEach(function (props) {
	  util.extend(styfn, props);
	});

	Style.types = styfn.types;
	Style.properties = styfn.properties;

	module.exports = Style;

	/***/ }),
	/* 19 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);

	var fullFpsTime = 1000 / 60; // assume 60 frames per second

	module.exports = {
	  setupDequeueing: function setupDequeueing(opts) {
	    return function setupDequeueingImpl() {
	      var self = this;
	      var r = this.renderer;

	      if (self.dequeueingSetup) {
	        return;
	      } else {
	        self.dequeueingSetup = true;
	      }

	      var queueRedraw = util.debounce(function () {
	        r.redrawHint('eles', true);
	        r.redrawHint('drag', true);

	        r.redraw();
	      }, opts.deqRedrawThreshold);

	      var dequeue = function dequeue(willDraw, frameStartTime) {
	        var startTime = util.performanceNow();
	        var avgRenderTime = r.averageRedrawTime;
	        var renderTime = r.lastRedrawTime;
	        var deqd = [];
	        var extent = r.cy.extent();
	        var pixelRatio = r.getPixelRatio();

	        while (true) {
	          var now = util.performanceNow();
	          var duration = now - startTime;
	          var frameDuration = now - frameStartTime;

	          if (renderTime < fullFpsTime) {
	            // if we're rendering faster than the ideal fps, then do dequeueing
	            // during all of the remaining frame time

	            var timeAvailable = fullFpsTime - (willDraw ? avgRenderTime : 0);

	            if (frameDuration >= opts.deqFastCost * timeAvailable) {
	              break;
	            }
	          } else {
	            if (willDraw) {
	              if (duration >= opts.deqCost * renderTime || duration >= opts.deqAvgCost * avgRenderTime) {
	                break;
	              }
	            } else if (frameDuration >= opts.deqNoDrawCost * fullFpsTime) {
	              break;
	            }
	          }

	          var thisDeqd = opts.deq(self, pixelRatio, extent);

	          if (thisDeqd.length > 0) {
	            for (var i = 0; i < thisDeqd.length; i++) {
	              deqd.push(thisDeqd[i]);
	            }
	          } else {
	            break;
	          }
	        }

	        // callbacks on dequeue
	        if (deqd.length > 0) {
	          opts.onDeqd(self, deqd);

	          if (!willDraw && opts.shouldRedraw(self, deqd, pixelRatio, extent)) {
	            queueRedraw();
	          }
	        }
	      };

	      var priority = opts.priority || util.noop;

	      r.beforeRender(dequeue, priority(self));
	    };
	  }
	};

	/***/ }),
	/* 20 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var Core = __webpack_require__(12);
	var extension = __webpack_require__(94);
	var Stylesheet = __webpack_require__(136);

	var cytoscape = function cytoscape(options) {
	  // jshint ignore:line
	  // if no options specified, use default
	  if (options === undefined) {
	    options = {};
	  }

	  // create instance
	  if (is.plainObject(options)) {
	    return new Core(options);
	  }

	  // allow for registration of extensions
	  else if (is.string(options)) {
	      return extension.apply(extension, arguments);
	    }
	};

	// e.g. cytoscape.use( require('cytoscape-foo'), bar )
	cytoscape.use = function (ext) {
	  var args = Array.prototype.slice.call(arguments, 1); // args to pass to ext

	  args.unshift(cytoscape); // cytoscape is first arg to ext

	  ext.apply(null, args);

	  return this;
	};

	// replaced by build system
	cytoscape.version = __webpack_require__(137);

	// expose public apis (mostly for extensions)
	cytoscape.stylesheet = cytoscape.Stylesheet = Stylesheet;

	module.exports = cytoscape;

	/***/ }),
	/* 21 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);

	module.exports = {
	  // get [r, g, b] from #abc or #aabbcc
	  hex2tuple: function hex2tuple(hex) {
	    if (!(hex.length === 4 || hex.length === 7) || hex[0] !== '#') {
	      return;
	    }

	    var shortHex = hex.length === 4;
	    var r = void 0,
	        g = void 0,
	        b = void 0;
	    var base = 16;

	    if (shortHex) {
	      r = parseInt(hex[1] + hex[1], base);
	      g = parseInt(hex[2] + hex[2], base);
	      b = parseInt(hex[3] + hex[3], base);
	    } else {
	      r = parseInt(hex[1] + hex[2], base);
	      g = parseInt(hex[3] + hex[4], base);
	      b = parseInt(hex[5] + hex[6], base);
	    }

	    return [r, g, b];
	  },

	  // get [r, g, b, a] from hsl(0, 0, 0) or hsla(0, 0, 0, 0)
	  hsl2tuple: function hsl2tuple(hsl) {
	    var ret = void 0;
	    var h = void 0,
	        s = void 0,
	        l = void 0,
	        a = void 0,
	        r = void 0,
	        g = void 0,
	        b = void 0;
	    function hue2rgb(p, q, t) {
	      if (t < 0) t += 1;
	      if (t > 1) t -= 1;
	      if (t < 1 / 6) return p + (q - p) * 6 * t;
	      if (t < 1 / 2) return q;
	      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
	      return p;
	    }

	    var m = new RegExp('^' + this.regex.hsla + '$').exec(hsl);
	    if (m) {

	      // get hue
	      h = parseInt(m[1]);
	      if (h < 0) {
	        h = (360 - -1 * h % 360) % 360;
	      } else if (h > 360) {
	        h = h % 360;
	      }
	      h /= 360; // normalise on [0, 1]

	      s = parseFloat(m[2]);
	      if (s < 0 || s > 100) {
	        return;
	      } // saturation is [0, 100]
	      s = s / 100; // normalise on [0, 1]

	      l = parseFloat(m[3]);
	      if (l < 0 || l > 100) {
	        return;
	      } // lightness is [0, 100]
	      l = l / 100; // normalise on [0, 1]

	      a = m[4];
	      if (a !== undefined) {
	        a = parseFloat(a);

	        if (a < 0 || a > 1) {
	          return;
	        } // alpha is [0, 1]
	      }

	      // now, convert to rgb
	      // code from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript
	      if (s === 0) {
	        r = g = b = Math.round(l * 255); // achromatic
	      } else {
	        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
	        var p = 2 * l - q;
	        r = Math.round(255 * hue2rgb(p, q, h + 1 / 3));
	        g = Math.round(255 * hue2rgb(p, q, h));
	        b = Math.round(255 * hue2rgb(p, q, h - 1 / 3));
	      }

	      ret = [r, g, b, a];
	    }

	    return ret;
	  },

	  // get [r, g, b, a] from rgb(0, 0, 0) or rgba(0, 0, 0, 0)
	  rgb2tuple: function rgb2tuple(rgb) {
	    var ret = void 0;

	    var m = new RegExp('^' + this.regex.rgba + '$').exec(rgb);
	    if (m) {
	      ret = [];

	      var isPct = [];
	      for (var i = 1; i <= 3; i++) {
	        var channel = m[i];

	        if (channel[channel.length - 1] === '%') {
	          isPct[i] = true;
	        }
	        channel = parseFloat(channel);

	        if (isPct[i]) {
	          channel = channel / 100 * 255; // normalise to [0, 255]
	        }

	        if (channel < 0 || channel > 255) {
	          return;
	        } // invalid channel value

	        ret.push(Math.floor(channel));
	      }

	      var atLeastOneIsPct = isPct[1] || isPct[2] || isPct[3];
	      var allArePct = isPct[1] && isPct[2] && isPct[3];
	      if (atLeastOneIsPct && !allArePct) {
	        return;
	      } // must all be percent values if one is

	      var alpha = m[4];
	      if (alpha !== undefined) {
	        alpha = parseFloat(alpha);

	        if (alpha < 0 || alpha > 1) {
	          return;
	        } // invalid alpha value

	        ret.push(alpha);
	      }
	    }

	    return ret;
	  },

	  colorname2tuple: function colorname2tuple(color) {
	    return this.colors[color.toLowerCase()];
	  },

	  color2tuple: function color2tuple(color) {
	    return (is.array(color) ? color : null) || this.colorname2tuple(color) || this.hex2tuple(color) || this.rgb2tuple(color) || this.hsl2tuple(color);
	  },

	  colors: {
	    // special colour names
	    transparent: [0, 0, 0, 0], // NB alpha === 0

	    // regular colours
	    aliceblue: [240, 248, 255],
	    antiquewhite: [250, 235, 215],
	    aqua: [0, 255, 255],
	    aquamarine: [127, 255, 212],
	    azure: [240, 255, 255],
	    beige: [245, 245, 220],
	    bisque: [255, 228, 196],
	    black: [0, 0, 0],
	    blanchedalmond: [255, 235, 205],
	    blue: [0, 0, 255],
	    blueviolet: [138, 43, 226],
	    brown: [165, 42, 42],
	    burlywood: [222, 184, 135],
	    cadetblue: [95, 158, 160],
	    chartreuse: [127, 255, 0],
	    chocolate: [210, 105, 30],
	    coral: [255, 127, 80],
	    cornflowerblue: [100, 149, 237],
	    cornsilk: [255, 248, 220],
	    crimson: [220, 20, 60],
	    cyan: [0, 255, 255],
	    darkblue: [0, 0, 139],
	    darkcyan: [0, 139, 139],
	    darkgoldenrod: [184, 134, 11],
	    darkgray: [169, 169, 169],
	    darkgreen: [0, 100, 0],
	    darkgrey: [169, 169, 169],
	    darkkhaki: [189, 183, 107],
	    darkmagenta: [139, 0, 139],
	    darkolivegreen: [85, 107, 47],
	    darkorange: [255, 140, 0],
	    darkorchid: [153, 50, 204],
	    darkred: [139, 0, 0],
	    darksalmon: [233, 150, 122],
	    darkseagreen: [143, 188, 143],
	    darkslateblue: [72, 61, 139],
	    darkslategray: [47, 79, 79],
	    darkslategrey: [47, 79, 79],
	    darkturquoise: [0, 206, 209],
	    darkviolet: [148, 0, 211],
	    deeppink: [255, 20, 147],
	    deepskyblue: [0, 191, 255],
	    dimgray: [105, 105, 105],
	    dimgrey: [105, 105, 105],
	    dodgerblue: [30, 144, 255],
	    firebrick: [178, 34, 34],
	    floralwhite: [255, 250, 240],
	    forestgreen: [34, 139, 34],
	    fuchsia: [255, 0, 255],
	    gainsboro: [220, 220, 220],
	    ghostwhite: [248, 248, 255],
	    gold: [255, 215, 0],
	    goldenrod: [218, 165, 32],
	    gray: [128, 128, 128],
	    grey: [128, 128, 128],
	    green: [0, 128, 0],
	    greenyellow: [173, 255, 47],
	    honeydew: [240, 255, 240],
	    hotpink: [255, 105, 180],
	    indianred: [205, 92, 92],
	    indigo: [75, 0, 130],
	    ivory: [255, 255, 240],
	    khaki: [240, 230, 140],
	    lavender: [230, 230, 250],
	    lavenderblush: [255, 240, 245],
	    lawngreen: [124, 252, 0],
	    lemonchiffon: [255, 250, 205],
	    lightblue: [173, 216, 230],
	    lightcoral: [240, 128, 128],
	    lightcyan: [224, 255, 255],
	    lightgoldenrodyellow: [250, 250, 210],
	    lightgray: [211, 211, 211],
	    lightgreen: [144, 238, 144],
	    lightgrey: [211, 211, 211],
	    lightpink: [255, 182, 193],
	    lightsalmon: [255, 160, 122],
	    lightseagreen: [32, 178, 170],
	    lightskyblue: [135, 206, 250],
	    lightslategray: [119, 136, 153],
	    lightslategrey: [119, 136, 153],
	    lightsteelblue: [176, 196, 222],
	    lightyellow: [255, 255, 224],
	    lime: [0, 255, 0],
	    limegreen: [50, 205, 50],
	    linen: [250, 240, 230],
	    magenta: [255, 0, 255],
	    maroon: [128, 0, 0],
	    mediumaquamarine: [102, 205, 170],
	    mediumblue: [0, 0, 205],
	    mediumorchid: [186, 85, 211],
	    mediumpurple: [147, 112, 219],
	    mediumseagreen: [60, 179, 113],
	    mediumslateblue: [123, 104, 238],
	    mediumspringgreen: [0, 250, 154],
	    mediumturquoise: [72, 209, 204],
	    mediumvioletred: [199, 21, 133],
	    midnightblue: [25, 25, 112],
	    mintcream: [245, 255, 250],
	    mistyrose: [255, 228, 225],
	    moccasin: [255, 228, 181],
	    navajowhite: [255, 222, 173],
	    navy: [0, 0, 128],
	    oldlace: [253, 245, 230],
	    olive: [128, 128, 0],
	    olivedrab: [107, 142, 35],
	    orange: [255, 165, 0],
	    orangered: [255, 69, 0],
	    orchid: [218, 112, 214],
	    palegoldenrod: [238, 232, 170],
	    palegreen: [152, 251, 152],
	    paleturquoise: [175, 238, 238],
	    palevioletred: [219, 112, 147],
	    papayawhip: [255, 239, 213],
	    peachpuff: [255, 218, 185],
	    peru: [205, 133, 63],
	    pink: [255, 192, 203],
	    plum: [221, 160, 221],
	    powderblue: [176, 224, 230],
	    purple: [128, 0, 128],
	    red: [255, 0, 0],
	    rosybrown: [188, 143, 143],
	    royalblue: [65, 105, 225],
	    saddlebrown: [139, 69, 19],
	    salmon: [250, 128, 114],
	    sandybrown: [244, 164, 96],
	    seagreen: [46, 139, 87],
	    seashell: [255, 245, 238],
	    sienna: [160, 82, 45],
	    silver: [192, 192, 192],
	    skyblue: [135, 206, 235],
	    slateblue: [106, 90, 205],
	    slategray: [112, 128, 144],
	    slategrey: [112, 128, 144],
	    snow: [255, 250, 250],
	    springgreen: [0, 255, 127],
	    steelblue: [70, 130, 180],
	    tan: [210, 180, 140],
	    teal: [0, 128, 128],
	    thistle: [216, 191, 216],
	    tomato: [255, 99, 71],
	    turquoise: [64, 224, 208],
	    violet: [238, 130, 238],
	    wheat: [245, 222, 179],
	    white: [255, 255, 255],
	    whitesmoke: [245, 245, 245],
	    yellow: [255, 255, 0],
	    yellowgreen: [154, 205, 50]
	  }
	};

	/***/ }),
	/* 22 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);

	module.exports = {
	  // has anything been set in the map
	  mapEmpty: function mapEmpty(map) {
	    var empty = true;

	    if (map != null) {
	      return Object.keys(map).length === 0;
	    }

	    return empty;
	  },

	  // pushes to the array at the end of a map (map may not be built)
	  pushMap: function pushMap(options) {
	    var array = this.getMap(options);

	    if (array == null) {
	      // if empty, put initial array
	      this.setMap(this.extend({}, options, {
	        value: [options.value]
	      }));
	    } else {
	      array.push(options.value);
	    }
	  },

	  // sets the value in a map (map may not be built)
	  setMap: function setMap(options) {
	    var obj = options.map;
	    var key = void 0;
	    var keys = options.keys;
	    var l = keys.length;

	    for (var i = 0; i < l; i++) {
	      var _key = keys[i];

	      if (is.plainObject(_key)) {
	        this.error('Tried to set map with object key');
	      }

	      if (i < keys.length - 1) {

	        // extend the map if necessary
	        if (obj[_key] == null) {
	          obj[_key] = {};
	        }

	        obj = obj[_key];
	      } else {
	        // set the value
	        obj[_key] = options.value;
	      }
	    }
	  },

	  // gets the value in a map even if it's not built in places
	  getMap: function getMap(options) {
	    var obj = options.map;
	    var keys = options.keys;
	    var l = keys.length;

	    for (var i = 0; i < l; i++) {
	      var key = keys[i];

	      if (is.plainObject(key)) {
	        this.error('Tried to get map with object key');
	      }

	      obj = obj[key];

	      if (obj == null) {
	        return obj;
	      }
	    }

	    return obj;
	  },

	  // deletes the entry in the map
	  deleteMap: function deleteMap(options) {
	    var obj = options.map;
	    var keys = options.keys;
	    var l = keys.length;
	    var keepChildren = options.keepChildren;

	    for (var i = 0; i < l; i++) {
	      var key = keys[i];

	      if (is.plainObject(key)) {
	        this.error('Tried to delete map with object key');
	      }

	      var lastKey = i === options.keys.length - 1;
	      if (lastKey) {

	        if (keepChildren) {
	          // then only delete child fields not in keepChildren
	          var children = Object.keys(obj);

	          for (var j = 0; j < children.length; j++) {
	            var child = children[j];

	            if (!keepChildren[child]) {
	              obj[child] = undefined;
	            }
	          }
	        } else {
	          obj[key] = undefined;
	        }
	      } else {
	        obj = obj[key];
	      }
	    }
	  }
	};

	/***/ }),
	/* 23 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var number = '(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))';

	var rgba = 'rgb[a]?\\((' + number + '[%]?)\\s*,\\s*(' + number + '[%]?)\\s*,\\s*(' + number + '[%]?)(?:\\s*,\\s*(' + number + '))?\\)';
	var rgbaNoBackRefs = 'rgb[a]?\\((?:' + number + '[%]?)\\s*,\\s*(?:' + number + '[%]?)\\s*,\\s*(?:' + number + '[%]?)(?:\\s*,\\s*(?:' + number + '))?\\)';

	var hsla = 'hsl[a]?\\((' + number + ')\\s*,\\s*(' + number + '[%])\\s*,\\s*(' + number + '[%])(?:\\s*,\\s*(' + number + '))?\\)';
	var hslaNoBackRefs = 'hsl[a]?\\((?:' + number + ')\\s*,\\s*(?:' + number + '[%])\\s*,\\s*(?:' + number + '[%])(?:\\s*,\\s*(?:' + number + '))?\\)';

	var hex3 = '\\#[0-9a-fA-F]{3}';
	var hex6 = '\\#[0-9a-fA-F]{6}';

	module.exports = {
	  regex: {
	    number: number,
	    rgba: rgba,
	    rgbaNoBackRefs: rgbaNoBackRefs,
	    hsla: hsla,
	    hslaNoBackRefs: hslaNoBackRefs,
	    hex3: hex3,
	    hex6: hex6
	  }
	};

	/***/ }),
	/* 24 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var memoize = __webpack_require__(13);
	var is = __webpack_require__(0);

	module.exports = {

	  camel2dash: memoize(function (str) {
	    return str.replace(/([A-Z])/g, function (v) {
	      return '-' + v.toLowerCase();
	    });
	  }),

	  dash2camel: memoize(function (str) {
	    return str.replace(/(-\w)/g, function (v) {
	      return v[1].toUpperCase();
	    });
	  }),

	  prependCamel: memoize(function (prefix, str) {
	    return prefix + str[0].toUpperCase() + str.substring(1);
	  }, function (prefix, str) {
	    return prefix + '$' + str;
	  }),

	  capitalize: function capitalize(str) {
	    if (is.emptyString(str)) {
	      return str;
	    }

	    return str.charAt(0).toUpperCase() + str.substring(1);
	  }

	};

	/***/ }),
	/* 25 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var window = __webpack_require__(3);
	var performance = window ? window.performance : null;

	var util = {};

	var pnow = performance && performance.now ? function () {
	  return performance.now();
	} : function () {
	  return Date.now();
	};

	var raf = function () {
	  if (window) {
	    if (window.requestAnimationFrame) {
	      return function (fn) {
	        window.requestAnimationFrame(fn);
	      };
	    } else if (window.mozRequestAnimationFrame) {
	      return function (fn) {
	        window.mozRequestAnimationFrame(fn);
	      };
	    } else if (window.webkitRequestAnimationFrame) {
	      return function (fn) {
	        window.webkitRequestAnimationFrame(fn);
	      };
	    } else if (window.msRequestAnimationFrame) {
	      return function (fn) {
	        window.msRequestAnimationFrame(fn);
	      };
	    }
	  }

	  return function (fn) {
	    if (fn) {
	      setTimeout(function () {
	        fn(pnow());
	      }, 1000 / 60);
	    }
	  };
	}();

	util.requestAnimationFrame = function (fn) {
	  raf(fn);
	};

	util.performanceNow = pnow;

	util.debounce = __webpack_require__(26);

	util.now = function () {
	  return Date.now();
	};

	module.exports = util;

	/***/ }),
	/* 26 */
	/***/ (function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_26__;

	/***/ }),
	/* 27 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	function ascending(a, b) {
	  if (a < b) {
	    return -1;
	  } else if (a > b) {
	    return 1;
	  } else {
	    return 0;
	  }
	}

	function descending(a, b) {
	  return -1 * ascending(a, b);
	}

	module.exports = {
	  sort: {
	    ascending: ascending,
	    descending: descending
	  }
	};

	/***/ }),
	/* 28 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	function ObjectMap() {
	  this._obj = {};
	}

	var p = ObjectMap.prototype;

	p.set = function (key, val) {
	  this._obj[key] = val;
	};

	p.delete = function (key) {
	  this._obj[key] = null;
	};

	p.has = function (key) {
	  return this._obj[key] != null;
	};

	p.get = function (key) {
	  return this._obj[key];
	};

	// TODO use the stdlib Map in future...
	// module.exports = typeof Map !== 'undefined' ? Map : ObjectMap;
	module.exports = ObjectMap;

	/***/ }),
	/* 29 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);

	var elesfn = {};

	[__webpack_require__(30), __webpack_require__(31), __webpack_require__(33), __webpack_require__(34), __webpack_require__(35), __webpack_require__(36), __webpack_require__(37), __webpack_require__(38), __webpack_require__(39), __webpack_require__(40), __webpack_require__(41)].forEach(function (props) {
	  util.extend(elesfn, props);
	});

	module.exports = elesfn;

	/***/ }),
	/* 30 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);

	var defineSearch = function defineSearch(params) {
	  params = {
	    bfs: params.bfs || !params.dfs,
	    dfs: params.dfs || !params.bfs
	  };

	  // from pseudocode on wikipedia
	  return function searchFn(roots, fn, directed) {
	    var options;
	    if (is.plainObject(roots) && !is.elementOrCollection(roots)) {
	      options = roots;
	      roots = options.roots || options.root;
	      fn = options.visit;
	      directed = options.directed;
	    }

	    directed = arguments.length === 2 && !is.fn(fn) ? fn : directed;
	    fn = is.fn(fn) ? fn : function () {};

	    var cy = this._private.cy;
	    var v = roots = is.string(roots) ? this.filter(roots) : roots;
	    var Q = [];
	    var connectedNodes = [];
	    var connectedBy = {};
	    var id2depth = {};
	    var V = {};
	    var j = 0;
	    var found;
	    var nodes = this.nodes();
	    var edges = this.edges();

	    // enqueue v
	    for (var i = 0; i < v.length; i++) {
	      if (v[i].isNode()) {
	        Q.unshift(v[i]);

	        if (params.bfs) {
	          V[v[i].id()] = true;

	          connectedNodes.push(v[i]);
	        }

	        id2depth[v[i].id()] = 0;
	      }
	    }

	    while (Q.length !== 0) {
	      var v = params.bfs ? Q.shift() : Q.pop();

	      if (params.dfs) {
	        if (V[v.id()]) {
	          continue;
	        }

	        V[v.id()] = true;

	        connectedNodes.push(v);
	      }

	      var depth = id2depth[v.id()];
	      var prevEdge = connectedBy[v.id()];
	      var prevNode = prevEdge == null ? undefined : prevEdge.connectedNodes().not(v)[0];
	      var ret;

	      ret = fn(v, prevEdge, prevNode, j++, depth);

	      if (ret === true) {
	        found = v;
	        break;
	      }

	      if (ret === false) {
	        break;
	      }

	      var vwEdges = v.connectedEdges(directed ? function (ele) {
	        return ele.data('source') === v.id();
	      } : undefined).intersect(edges);
	      for (var i = 0; i < vwEdges.length; i++) {
	        var e = vwEdges[i];
	        var w = e.connectedNodes(function (n) {
	          return n.id() !== v.id();
	        }).intersect(nodes);

	        if (w.length !== 0 && !V[w.id()]) {
	          w = w[0];

	          Q.push(w);

	          if (params.bfs) {
	            V[w.id()] = true;

	            connectedNodes.push(w);
	          }

	          connectedBy[w.id()] = e;

	          id2depth[w.id()] = id2depth[v.id()] + 1;
	        }
	      }
	    }

	    var connectedEles = [];

	    for (var i = 0; i < connectedNodes.length; i++) {
	      var node = connectedNodes[i];
	      var edge = connectedBy[node.id()];

	      if (edge) {
	        connectedEles.push(edge);
	      }

	      connectedEles.push(node);
	    }

	    return {
	      path: cy.collection(connectedEles, { unique: true }),
	      found: cy.collection(found)
	    };
	  };
	};

	// search, spanning trees, etc
	var elesfn = {
	  breadthFirstSearch: defineSearch({ bfs: true }),
	  depthFirstSearch: defineSearch({ dfs: true })
	};

	// nice, short mathemathical alias
	elesfn.bfs = elesfn.breadthFirstSearch;
	elesfn.dfs = elesfn.depthFirstSearch;

	module.exports = elesfn;

	/***/ }),
	/* 31 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var Heap = __webpack_require__(9);

	var elesfn = {

	  dijkstra: function dijkstra(root, weightFn, directed) {
	    var options;
	    if (is.plainObject(root) && !is.elementOrCollection(root)) {
	      options = root;
	      root = options.root;
	      weightFn = options.weight;
	      directed = options.directed;
	    }

	    var cy = this._private.cy;
	    weightFn = is.fn(weightFn) ? weightFn : function () {
	      return 1;
	    }; // if not specified, assume each edge has equal weight (1)

	    var source = is.string(root) ? this.filter(root)[0] : root[0];
	    var dist = {};
	    var prev = {};
	    var knownDist = {};

	    var edges = this.edges().filter(function (ele) {
	      return !ele.isLoop();
	    });
	    var nodes = this.nodes();

	    var getDist = function getDist(node) {
	      return dist[node.id()];
	    };

	    var setDist = function setDist(node, d) {
	      dist[node.id()] = d;

	      Q.updateItem(node);
	    };

	    var Q = new Heap(function (a, b) {
	      return getDist(a) - getDist(b);
	    });

	    for (var i = 0; i < nodes.length; i++) {
	      var node = nodes[i];

	      dist[node.id()] = node.same(source) ? 0 : Infinity;
	      Q.push(node);
	    }

	    var distBetween = function distBetween(u, v) {
	      var uvs = (directed ? u.edgesTo(v) : u.edgesWith(v)).intersect(edges);
	      var smallestDistance = Infinity;
	      var smallestEdge;

	      for (var i = 0; i < uvs.length; i++) {
	        var edge = uvs[i];
	        var weight = weightFn(edge);

	        if (weight < smallestDistance || !smallestEdge) {
	          smallestDistance = weight;
	          smallestEdge = edge;
	        }
	      }

	      return {
	        edge: smallestEdge,
	        dist: smallestDistance
	      };
	    };

	    while (Q.size() > 0) {
	      var u = Q.pop();
	      var smalletsDist = getDist(u);
	      var uid = u.id();

	      knownDist[uid] = smalletsDist;

	      if (smalletsDist === Infinity) {
	        continue;
	      }

	      var neighbors = u.neighborhood().intersect(nodes);
	      for (var i = 0; i < neighbors.length; i++) {
	        var v = neighbors[i];
	        var vid = v.id();
	        var vDist = distBetween(u, v);

	        var alt = smalletsDist + vDist.dist;

	        if (alt < getDist(v)) {
	          setDist(v, alt);

	          prev[vid] = {
	            node: u,
	            edge: vDist.edge
	          };
	        }
	      } // for
	    } // while

	    return {
	      distanceTo: function distanceTo(node) {
	        var target = is.string(node) ? nodes.filter(node)[0] : node[0];

	        return knownDist[target.id()];
	      },

	      pathTo: function pathTo(node) {
	        var target = is.string(node) ? nodes.filter(node)[0] : node[0];
	        var S = [];
	        var u = target;

	        if (target.length > 0) {
	          S.unshift(target);

	          while (prev[u.id()]) {
	            var p = prev[u.id()];

	            S.unshift(p.edge);
	            S.unshift(p.node);

	            u = p.node;
	          }
	        }

	        return cy.collection(S);
	      }
	    };
	  }
	};

	module.exports = elesfn;

	/***/ }),
	/* 32 */
	/***/ (function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_32__;

	/***/ }),
	/* 33 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);

	// search, spanning trees, etc
	var elesfn = {

	  // kruskal's algorithm (finds min spanning tree, assuming undirected graph)
	  // implemented from pseudocode from wikipedia
	  kruskal: function kruskal(weightFn) {
	    var cy = this.cy();

	    weightFn = is.fn(weightFn) ? weightFn : function () {
	      return 1;
	    }; // if not specified, assume each edge has equal weight (1)

	    function findSet(ele) {
	      for (var i = 0; i < forest.length; i++) {
	        var eles = forest[i];

	        if (eles.anySame(ele)) {
	          return {
	            eles: eles,
	            index: i
	          };
	        }
	      }
	    }

	    var A = cy.collection(cy, []);
	    var forest = [];
	    var nodes = this.nodes();

	    for (var i = 0; i < nodes.length; i++) {
	      forest.push(nodes[i].collection());
	    }

	    var edges = this.edges();
	    var S = edges.toArray().sort(function (a, b) {
	      var weightA = weightFn(a);
	      var weightB = weightFn(b);

	      return weightA - weightB;
	    });

	    for (var i = 0; i < S.length; i++) {
	      var edge = S[i];
	      var u = edge.source()[0];
	      var v = edge.target()[0];
	      var setU = findSet(u);
	      var setV = findSet(v);

	      if (setU.index !== setV.index) {
	        A = A.add(edge);

	        // combine forests for u and v
	        forest[setU.index] = setU.eles.add(setV.eles);
	        forest.splice(setV.index, 1);
	      }
	    }

	    return nodes.add(A);
	  }
	};

	module.exports = elesfn;

	/***/ }),
	/* 34 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);

	var elesfn = {

	  // Implemented from pseudocode from wikipedia
	  aStar: function aStar(options) {
	    var eles = this;

	    options = options || {};

	    // Reconstructs the path from Start to End, acumulating the result in pathAcum
	    var reconstructPath = function reconstructPath(start, end, cameFromMap, pathAcum) {
	      // Base case
	      if (start == end) {
	        pathAcum.unshift(cy.getElementById(end));
	        return pathAcum;
	      }

	      if (end in cameFromMap) {
	        // We know which node is before the last one
	        var previous = cameFromMap[end];
	        var previousEdge = cameFromEdge[end];

	        pathAcum.unshift(cy.getElementById(previousEdge));
	        pathAcum.unshift(cy.getElementById(end));

	        return reconstructPath(start, previous, cameFromMap, pathAcum);
	      }

	      // We should not reach here!
	      return undefined;
	    };

	    // Returns the index of the element in openSet which has minimum fScore
	    var findMin = function findMin(openSet, fScore) {
	      if (openSet.length === 0) {
	        // Should never be the case
	        return undefined;
	      }
	      var minPos = 0;
	      var tempScore = fScore[openSet[0]];
	      for (var i = 1; i < openSet.length; i++) {
	        var s = fScore[openSet[i]];
	        if (s < tempScore) {
	          tempScore = s;
	          minPos = i;
	        }
	      }
	      return minPos;
	    };

	    var cy = this._private.cy;

	    // root - mandatory!
	    if (options != null && options.root != null) {
	      var source = is.string(options.root) ?
	      // use it as a selector, e.g. "#rootID
	      this.filter(options.root)[0] : options.root[0];
	    } else {
	      return undefined;
	    }

	    // goal - mandatory!
	    if (options.goal != null) {
	      var target = is.string(options.goal) ?
	      // use it as a selector, e.g. "#goalID
	      this.filter(options.goal)[0] : options.goal[0];
	    } else {
	      return undefined;
	    }

	    // Heuristic function - optional
	    if (options.heuristic != null && is.fn(options.heuristic)) {
	      var heuristic = options.heuristic;
	    } else {
	      var heuristic = function heuristic() {
	        return 0;
	      }; // use constant if unspecified
	    }

	    // Weight function - optional
	    if (options.weight != null && is.fn(options.weight)) {
	      var weightFn = options.weight;
	    } else {
	      // If not specified, assume each edge has equal weight (1)
	      var weightFn = function weightFn(e) {
	        return 1;
	      };
	    }

	    // directed - optional
	    if (options.directed != null) {
	      var directed = options.directed;
	    } else {
	      var directed = false;
	    }

	    var sid = source.id();
	    var tid = target.id();

	    var closedSet = [];
	    var openSet = [sid];
	    var cameFrom = {};
	    var cameFromEdge = {};
	    var gScore = {};
	    var fScore = {};

	    gScore[sid] = 0;
	    fScore[sid] = heuristic(source);

	    // Counter
	    var steps = 0;

	    // Main loop
	    while (openSet.length > 0) {
	      var minPos = findMin(openSet, fScore);
	      var cMin = cy.getElementById(openSet[minPos]);
	      var cMinId = cMin.id();
	      steps++;

	      // If we've found our goal, then we are done
	      if (cMinId == tid) {
	        var rPath = reconstructPath(sid, tid, cameFrom, []);

	        return {
	          found: true,
	          distance: gScore[cMinId],
	          path: eles.spawn(rPath),
	          steps: steps
	        };
	      }

	      // Add cMin to processed nodes
	      closedSet.push(cMinId);
	      // Remove cMin from boundary nodes
	      openSet.splice(minPos, 1);

	      // Update scores for neighbors of cMin
	      // Take into account if graph is directed or not
	      var vwEdges = cMin._private.edges;

	      for (var i = 0; i < vwEdges.length; i++) {
	        var e = vwEdges[i];

	        // edge must be in set of calling eles
	        if (!this.hasElementWithId(e.id())) {
	          continue;
	        }

	        // cMin must be the source of edge if directed
	        if (directed && e.data('source') !== cMinId) {
	          continue;
	        }

	        var wSrc = e.source();
	        var wTgt = e.target();

	        var w = wSrc.id() !== cMinId ? wSrc : wTgt;
	        var wid = w.id();

	        // node must be in set of calling eles
	        if (!this.hasElementWithId(wid)) {
	          continue;
	        }

	        // if node is in closedSet, ignore it
	        if (closedSet.indexOf(wid) != -1) {
	          continue;
	        }

	        // New tentative score for node w
	        var tempScore = gScore[cMinId] + weightFn(e);

	        // Update gScore for node w if:
	        //   w not present in openSet
	        // OR
	        //   tentative gScore is less than previous value

	        // w not in openSet
	        if (openSet.indexOf(wid) == -1) {
	          gScore[wid] = tempScore;
	          fScore[wid] = tempScore + heuristic(w);
	          openSet.push(wid); // Add node to openSet
	          cameFrom[wid] = cMinId;
	          cameFromEdge[wid] = e.id();
	          continue;
	        }
	        // w already in openSet, but with greater gScore
	        if (tempScore < gScore[wid]) {
	          gScore[wid] = tempScore;
	          fScore[wid] = tempScore + heuristic(w);
	          cameFrom[wid] = cMinId;
	        }
	      } // End of neighbors update
	    } // End of main loop

	    // If we've reached here, then we've not reached our goal
	    return {
	      found: false,
	      distance: undefined,
	      path: undefined,
	      steps: steps
	    };
	  }

	}; // elesfn


	module.exports = elesfn;

	/***/ }),
	/* 35 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);

	var elesfn = {

	  // Implemented from pseudocode from wikipedia
	  floydWarshall: function floydWarshall(options) {
	    options = options || {};

	    var cy = this.cy();

	    // Weight function - optional
	    if (options.weight != null && is.fn(options.weight)) {
	      var weightFn = options.weight;
	    } else {
	      // If not specified, assume each edge has equal weight (1)
	      var weightFn = function weightFn(e) {
	        return 1;
	      };
	    }

	    // directed - optional
	    if (options.directed != null) {
	      var directed = options.directed;
	    } else {
	      var directed = false;
	    }

	    var edges = this.edges().stdFilter(function (e) {
	      return !e.isLoop();
	    });
	    var nodes = this.nodes();
	    var numNodes = nodes.length;

	    // mapping: node id -> position in nodes array
	    var id2position = {};
	    for (var i = 0; i < numNodes; i++) {
	      id2position[nodes[i].id()] = i;
	    }

	    // Initialize distance matrix
	    var dist = [];
	    for (var i = 0; i < numNodes; i++) {
	      var newRow = new Array(numNodes);
	      for (var j = 0; j < numNodes; j++) {
	        if (i == j) {
	          newRow[j] = 0;
	        } else {
	          newRow[j] = Infinity;
	        }
	      }
	      dist.push(newRow);
	    }

	    // Initialize matrix used for path reconstruction
	    // Initialize distance matrix
	    var next = [];
	    var edgeNext = [];

	    var initMatrix = function initMatrix(next) {
	      for (var i = 0; i < numNodes; i++) {
	        var newRow = new Array(numNodes);
	        for (var j = 0; j < numNodes; j++) {
	          newRow[j] = undefined;
	        }
	        next.push(newRow);
	      }
	    };

	    initMatrix(next);
	    initMatrix(edgeNext);

	    // Process edges
	    for (var i = 0; i < edges.length; i++) {
	      var sourceIndex = id2position[edges[i].source().id()];
	      var targetIndex = id2position[edges[i].target().id()];
	      var weight = weightFn(edges[i]);

	      // Check if already process another edge between same 2 nodes
	      if (dist[sourceIndex][targetIndex] > weight) {
	        dist[sourceIndex][targetIndex] = weight;
	        next[sourceIndex][targetIndex] = targetIndex;
	        edgeNext[sourceIndex][targetIndex] = edges[i];
	      }
	    }

	    // If undirected graph, process 'reversed' edges
	    if (!directed) {
	      for (var i = 0; i < edges.length; i++) {
	        var sourceIndex = id2position[edges[i].target().id()];
	        var targetIndex = id2position[edges[i].source().id()];
	        var weight = weightFn(edges[i]);

	        // Check if already process another edge between same 2 nodes
	        if (dist[sourceIndex][targetIndex] > weight) {
	          dist[sourceIndex][targetIndex] = weight;
	          next[sourceIndex][targetIndex] = targetIndex;
	          edgeNext[sourceIndex][targetIndex] = edges[i];
	        }
	      }
	    }

	    // Main loop
	    for (var k = 0; k < numNodes; k++) {
	      for (var i = 0; i < numNodes; i++) {
	        for (var j = 0; j < numNodes; j++) {
	          if (dist[i][k] + dist[k][j] < dist[i][j]) {
	            dist[i][j] = dist[i][k] + dist[k][j];
	            next[i][j] = next[i][k];
	          }
	        }
	      }
	    }

	    // Build result object
	    var position2id = [];
	    for (var i = 0; i < numNodes; i++) {
	      position2id.push(nodes[i].id());
	    }

	    var res = {
	      distance: function distance(from, to) {
	        if (is.string(from)) {
	          // from is a selector string
	          var fromId = cy.filter(from)[0].id();
	        } else {
	          // from is a node
	          var fromId = from.id();
	        }

	        if (is.string(to)) {
	          // to is a selector string
	          var toId = cy.filter(to)[0].id();
	        } else {
	          // to is a node
	          var toId = to.id();
	        }

	        return dist[id2position[fromId]][id2position[toId]];
	      },

	      path: function path(from, to) {
	        var reconstructPathAux = function reconstructPathAux(from, to, next, position2id, edgeNext) {
	          if (from === to) {
	            return cy.getElementById(position2id[from]);
	          }
	          if (next[from][to] === undefined) {
	            return undefined;
	          }

	          var path = [cy.getElementById(position2id[from])];
	          var prev = from;
	          while (from !== to) {
	            prev = from;
	            from = next[from][to];

	            var edge = edgeNext[prev][from];
	            path.push(edge);

	            path.push(cy.getElementById(position2id[from]));
	          }
	          return path;
	        };

	        if (is.string(from)) {
	          // from is a selector string
	          var fromId = cy.filter(from)[0].id();
	        } else {
	          // from is a node
	          var fromId = from.id();
	        }

	        if (is.string(to)) {
	          // to is a selector string
	          var toId = cy.filter(to)[0].id();
	        } else {
	          // to is a node
	          var toId = to.id();
	        }

	        var pathArr = reconstructPathAux(id2position[fromId], id2position[toId], next, position2id, edgeNext);

	        return cy.collection(pathArr);
	      }
	    };

	    return res;
	  } // floydWarshall

	}; // elesfn

	module.exports = elesfn;

	/***/ }),
	/* 36 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var util = __webpack_require__(1);

	var elesfn = {

	  // Implemented from pseudocode from wikipedia
	  bellmanFord: function bellmanFord(options) {
	    var eles = this;

	    options = options || {};

	    // Weight function - optional
	    if (options.weight != null && is.fn(options.weight)) {
	      var weightFn = options.weight;
	    } else {
	      // If not specified, assume each edge has equal weight (1)
	      var weightFn = function weightFn(e) {
	        return 1;
	      };
	    }

	    // directed - optional
	    if (options.directed != null) {
	      var directed = options.directed;
	    } else {
	      var directed = false;
	    }

	    // root - mandatory!
	    if (options.root != null) {
	      if (is.string(options.root)) {
	        // use it as a selector, e.g. "#rootID
	        var source = this.filter(options.root)[0];
	      } else {
	        var source = options.root[0];
	      }
	    } else {
	      return undefined;
	    }

	    var cy = this._private.cy;
	    var edges = this.edges().stdFilter(function (e) {
	      return !e.isLoop();
	    });
	    var nodes = this.nodes();
	    var numNodes = nodes.length;

	    // mapping: node id -> position in nodes array
	    var id2position = {};
	    for (var i = 0; i < numNodes; i++) {
	      id2position[nodes[i].id()] = i;
	    }

	    // Initializations
	    var cost = [];
	    var predecessor = [];
	    var predEdge = [];

	    for (var i = 0; i < numNodes; i++) {
	      if (nodes[i].id() === source.id()) {
	        cost[i] = 0;
	      } else {
	        cost[i] = Infinity;
	      }
	      predecessor[i] = undefined;
	    }

	    // Edges relaxation
	    var flag = false;
	    for (var i = 1; i < numNodes; i++) {
	      flag = false;
	      for (var e = 0; e < edges.length; e++) {
	        var sourceIndex = id2position[edges[e].source().id()];
	        var targetIndex = id2position[edges[e].target().id()];
	        var weight = weightFn(edges[e]);

	        var temp = cost[sourceIndex] + weight;
	        if (temp < cost[targetIndex]) {
	          cost[targetIndex] = temp;
	          predecessor[targetIndex] = sourceIndex;
	          predEdge[targetIndex] = edges[e];
	          flag = true;
	        }

	        // If undirected graph, we need to take into account the 'reverse' edge
	        if (!directed) {
	          var temp = cost[targetIndex] + weight;
	          if (temp < cost[sourceIndex]) {
	            cost[sourceIndex] = temp;
	            predecessor[sourceIndex] = targetIndex;
	            predEdge[sourceIndex] = edges[e];
	            flag = true;
	          }
	        }
	      }

	      if (!flag) {
	        break;
	      }
	    }

	    if (flag) {
	      // Check for negative weight cycles
	      for (var e = 0; e < edges.length; e++) {
	        var sourceIndex = id2position[edges[e].source().id()];
	        var targetIndex = id2position[edges[e].target().id()];
	        var weight = weightFn(edges[e]);

	        if (cost[sourceIndex] + weight < cost[targetIndex]) {
	          util.error('Graph contains a negative weight cycle for Bellman-Ford');
	          return { pathTo: undefined,
	            distanceTo: undefined,
	            hasNegativeWeightCycle: true };
	        }
	      }
	    }

	    // Build result object
	    var position2id = [];
	    for (var i = 0; i < numNodes; i++) {
	      position2id.push(nodes[i].id());
	    }

	    var res = {
	      distanceTo: function distanceTo(to) {
	        if (is.string(to)) {
	          // to is a selector string
	          var toId = cy.filter(to)[0].id();
	        } else {
	          // to is a node
	          var toId = to.id();
	        }

	        return cost[id2position[toId]];
	      },

	      pathTo: function pathTo(to) {

	        var reconstructPathAux = function reconstructPathAux(predecessor, fromPos, toPos, position2id, acumPath, predEdge) {
	          for (;;) {
	            // Add toId to path
	            acumPath.push(cy.getElementById(position2id[toPos]));
	            acumPath.push(predEdge[toPos]);

	            if (fromPos === toPos) {
	              // reached starting node
	              return acumPath;
	            }

	            // If no path exists, discart acumulated path and return undefined
	            var predPos = predecessor[toPos];
	            if (typeof predPos === 'undefined') {
	              return undefined;
	            }

	            toPos = predPos;
	          }
	        };

	        if (is.string(to)) {
	          // to is a selector string
	          var toId = cy.filter(to)[0].id();
	        } else {
	          // to is a node
	          var toId = to.id();
	        }
	        var path = [];

	        // This returns a reversed path
	        var res = reconstructPathAux(predecessor, id2position[source.id()], id2position[toId], position2id, path, predEdge);

	        // Get it in the correct order and return it
	        if (res != null) {
	          res.reverse();
	        }

	        return eles.spawn(res);
	      },

	      hasNegativeWeightCycle: false
	    };

	    return res;
	  } // bellmanFord

	}; // elesfn

	module.exports = elesfn;

	/***/ }),
	/* 37 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);

	var elesfn = {

	  // Computes the minimum cut of an undirected graph
	  // Returns the correct answer with high probability
	  kargerStein: function kargerStein(options) {
	    var eles = this;

	    options = options || {};

	    // Function which colapses 2 (meta) nodes into one
	    // Updates the remaining edge lists
	    // Receives as a paramater the edge which causes the collapse
	    var colapse = function colapse(edgeIndex, nodeMap, remainingEdges) {
	      var edgeInfo = remainingEdges[edgeIndex];
	      var sourceIn = edgeInfo[1];
	      var targetIn = edgeInfo[2];
	      var partition1 = nodeMap[sourceIn];
	      var partition2 = nodeMap[targetIn];

	      // Delete all edges between partition1 and partition2
	      var newEdges = remainingEdges.filter(function (edge) {
	        if (nodeMap[edge[1]] === partition1 && nodeMap[edge[2]] === partition2) {
	          return false;
	        }
	        if (nodeMap[edge[1]] === partition2 && nodeMap[edge[2]] === partition1) {
	          return false;
	        }
	        return true;
	      });

	      // All edges pointing to partition2 should now point to partition1
	      for (var i = 0; i < newEdges.length; i++) {
	        var edge = newEdges[i];
	        if (edge[1] === partition2) {
	          // Check source
	          newEdges[i] = edge.slice(0);
	          newEdges[i][1] = partition1;
	        } else if (edge[2] === partition2) {
	          // Check target
	          newEdges[i] = edge.slice(0);
	          newEdges[i][2] = partition1;
	        }
	      }

	      // Move all nodes from partition2 to partition1
	      for (var i = 0; i < nodeMap.length; i++) {
	        if (nodeMap[i] === partition2) {
	          nodeMap[i] = partition1;
	        }
	      }

	      return newEdges;
	    };

	    // Contracts a graph until we reach a certain number of meta nodes
	    var contractUntil = function contractUntil(metaNodeMap, remainingEdges, size, sizeLimit) {
	      // Stop condition
	      if (size <= sizeLimit) {
	        return remainingEdges;
	      }

	      // Choose an edge randomly
	      var edgeIndex = Math.floor(Math.random() * remainingEdges.length);

	      // Colapse graph based on edge
	      var newEdges = colapse(edgeIndex, metaNodeMap, remainingEdges);

	      return contractUntil(metaNodeMap, newEdges, size - 1, sizeLimit);
	    };

	    var cy = this._private.cy;
	    var edges = this.edges().stdFilter(function (e) {
	      return !e.isLoop();
	    });
	    var nodes = this.nodes();
	    var numNodes = nodes.length;
	    var numEdges = edges.length;
	    var numIter = Math.ceil(Math.pow(Math.log(numNodes) / Math.LN2, 2));
	    var stopSize = Math.floor(numNodes / Math.sqrt(2));

	    if (numNodes < 2) {
	      util.error('At least 2 nodes are required for Karger-Stein algorithm');
	      return undefined;
	    }

	    // Create numerical identifiers for each node
	    // mapping: node id -> position in nodes array
	    // for reverse mapping, simply use nodes array
	    var id2position = {};
	    for (var i = 0; i < numNodes; i++) {
	      id2position[nodes[i].id()] = i;
	    }

	    // Now store edge destination as indexes
	    // Format for each edge (edge index, source node index, target node index)
	    var edgeIndexes = [];
	    for (var i = 0; i < numEdges; i++) {
	      var e = edges[i];
	      edgeIndexes.push([i, id2position[e.source().id()], id2position[e.target().id()]]);
	    }

	    // We will store the best cut found here
	    var minCutSize = Infinity;
	    var minCut;

	    // Initial meta node partition
	    var originalMetaNode = [];
	    for (var i = 0; i < numNodes; i++) {
	      originalMetaNode.push(i);
	    }

	    // Main loop
	    for (var iter = 0; iter <= numIter; iter++) {
	      // Create new meta node partition
	      var metaNodeMap = originalMetaNode.slice(0);

	      // Contract until stop point (stopSize nodes)
	      var edgesState = contractUntil(metaNodeMap, edgeIndexes, numNodes, stopSize);

	      // Create a copy of the colapsed nodes state
	      var metaNodeMap2 = metaNodeMap.slice(0);

	      // Run 2 iterations starting in the stop state
	      var res1 = contractUntil(metaNodeMap, edgesState, stopSize, 2);
	      var res2 = contractUntil(metaNodeMap2, edgesState, stopSize, 2);

	      // Is any of the 2 results the best cut so far?
	      if (res1.length <= res2.length && res1.length < minCutSize) {
	        minCutSize = res1.length;
	        minCut = [res1, metaNodeMap];
	      } else if (res2.length <= res1.length && res2.length < minCutSize) {
	        minCutSize = res2.length;
	        minCut = [res2, metaNodeMap2];
	      }
	    } // end of main loop


	    // Construct result
	    var resEdges = minCut[0].map(function (e) {
	      return edges[e[0]];
	    });
	    var partition1 = [];
	    var partition2 = [];

	    // traverse metaNodeMap for best cut
	    var witnessNodePartition = minCut[1][0];
	    for (var i = 0; i < minCut[1].length; i++) {
	      var partitionId = minCut[1][i];
	      if (partitionId === witnessNodePartition) {
	        partition1.push(nodes[i]);
	      } else {
	        partition2.push(nodes[i]);
	      }
	    }

	    var ret = {
	      cut: eles.spawn(cy, resEdges),
	      partition1: eles.spawn(partition1),
	      partition2: eles.spawn(partition2)
	    };

	    return ret;
	  }
	}; // elesfn


	module.exports = elesfn;

	/***/ }),
	/* 38 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);

	var elesfn = {

	  pageRank: function pageRank(options) {
	    options = options || {};

	    var normalizeVector = function normalizeVector(vector) {
	      var length = vector.length;

	      // First, get sum of all elements
	      var total = 0;
	      for (var i = 0; i < length; i++) {
	        total += vector[i];
	      }

	      // Now, divide each by the sum of all elements
	      for (var i = 0; i < length; i++) {
	        vector[i] = vector[i] / total;
	      }
	    };

	    // dampingFactor - optional
	    if (options != null && options.dampingFactor != null) {
	      var dampingFactor = options.dampingFactor;
	    } else {
	      var dampingFactor = 0.8; // Default damping factor
	    }

	    // desired precision - optional
	    if (options != null && options.precision != null) {
	      var epsilon = options.precision;
	    } else {
	      var epsilon = 0.000001; // Default precision
	    }

	    // Max number of iterations - optional
	    if (options != null && options.iterations != null) {
	      var numIter = options.iterations;
	    } else {
	      var numIter = 200; // Default number of iterations
	    }

	    // Weight function - optional
	    if (options != null && options.weight != null && is.fn(options.weight)) {
	      var weightFn = options.weight;
	    } else {
	      // If not specified, assume each edge has equal weight (1)
	      var weightFn = function weightFn(e) {
	        return 1;
	      };
	    }

	    var cy = this._private.cy;
	    var edges = this.edges().stdFilter(function (e) {
	      return !e.isLoop();
	    });
	    var nodes = this.nodes();
	    var numNodes = nodes.length;
	    var numEdges = edges.length;

	    // Create numerical identifiers for each node
	    // mapping: node id -> position in nodes array
	    // for reverse mapping, simply use nodes array
	    var id2position = {};
	    for (var i = 0; i < numNodes; i++) {
	      id2position[nodes[i].id()] = i;
	    }

	    // Construct transposed adjacency matrix
	    // First lets have a zeroed matrix of the right size
	    // We'll also keep track of the sum of each column
	    var matrix = [];
	    var columnSum = [];
	    var additionalProb = (1 - dampingFactor) / numNodes;

	    // Create null matric
	    for (var i = 0; i < numNodes; i++) {
	      var newRow = [];
	      for (var j = 0; j < numNodes; j++) {
	        newRow.push(0.0);
	      }
	      matrix.push(newRow);
	      columnSum.push(0.0);
	    }

	    // Now, process edges
	    for (var i = 0; i < numEdges; i++) {
	      var edge = edges[i];
	      var s = id2position[edge.source().id()];
	      var t = id2position[edge.target().id()];
	      var w = weightFn(edge);

	      // Update matrix
	      matrix[t][s] += w;

	      // Update column sum
	      columnSum[s] += w;
	    }

	    // Add additional probability based on damping factor
	    // Also, take into account columns that have sum = 0
	    var p = 1.0 / numNodes + additionalProb; // Shorthand
	    // Traverse matrix, column by column
	    for (var j = 0; j < numNodes; j++) {
	      if (columnSum[j] === 0) {
	        // No 'links' out from node jth, assume equal probability for each possible node
	        for (var i = 0; i < numNodes; i++) {
	          matrix[i][j] = p;
	        }
	      } else {
	        // Node jth has outgoing link, compute normalized probabilities
	        for (var i = 0; i < numNodes; i++) {
	          matrix[i][j] = matrix[i][j] / columnSum[j] + additionalProb;
	        }
	      }
	    }

	    // Compute dominant eigenvector using power method
	    var eigenvector = [];
	    var nullVector = [];
	    var previous;

	    // Start with a vector of all 1's
	    // Also, initialize a null vector which will be used as shorthand
	    for (var i = 0; i < numNodes; i++) {
	      eigenvector.push(1.0);
	      nullVector.push(0.0);
	    }

	    for (var iter = 0; iter < numIter; iter++) {
	      // New array with all 0's
	      var temp = nullVector.slice(0);

	      // Multiply matrix with previous result
	      for (var i = 0; i < numNodes; i++) {
	        for (var j = 0; j < numNodes; j++) {
	          temp[i] += matrix[i][j] * eigenvector[j];
	        }
	      }

	      normalizeVector(temp);
	      previous = eigenvector;
	      eigenvector = temp;

	      var diff = 0;
	      // Compute difference (squared module) of both vectors
	      for (var i = 0; i < numNodes; i++) {
	        diff += Math.pow(previous[i] - eigenvector[i], 2);
	      }

	      // If difference is less than the desired threshold, stop iterating
	      if (diff < epsilon) {
	        break;
	      }
	    }

	    // Construct result
	    var res = {
	      rank: function rank(node) {
	        if (is.string(node)) {
	          // is a selector string
	          var nodeId = cy.filter(node)[0].id();
	        } else {
	          // is a node object
	          var nodeId = node.id();
	        }
	        return eigenvector[id2position[nodeId]];
	      }
	    };

	    return res;
	  } // pageRank

	}; // elesfn

	module.exports = elesfn;

	/***/ }),
	/* 39 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var util = __webpack_require__(1);

	var elesfn = {

	  degreeCentralityNormalized: function degreeCentralityNormalized(options) {
	    options = options || {};

	    var cy = this.cy();

	    // directed - optional
	    if (options.directed != null) {
	      var directed = options.directed;
	    } else {
	      var directed = false;
	    }

	    var nodes = this.nodes();
	    var numNodes = nodes.length;

	    if (!directed) {
	      var degrees = {};
	      var maxDegree = 0;

	      for (var i = 0; i < numNodes; i++) {
	        var node = nodes[i];
	        // add current node to the current options object and call degreeCentrality
	        var currDegree = this.degreeCentrality(util.extend({}, options, { root: node }));
	        if (maxDegree < currDegree.degree) maxDegree = currDegree.degree;

	        degrees[node.id()] = currDegree.degree;
	      }

	      return {
	        degree: function degree(node) {
	          if (maxDegree == 0) return 0;

	          if (is.string(node)) {
	            // from is a selector string
	            var node = cy.filter(node)[0].id();
	          } else {
	            // from is a node
	            var node = node.id();
	          }

	          return degrees[node] / maxDegree;
	        }
	      };
	    } else {
	      var indegrees = {};
	      var outdegrees = {};
	      var maxIndegree = 0;
	      var maxOutdegree = 0;

	      for (var i = 0; i < numNodes; i++) {
	        var node = nodes[i];
	        // add current node to the current options object and call degreeCentrality
	        var currDegree = this.degreeCentrality(util.extend({}, options, { root: node }));

	        if (maxIndegree < currDegree.indegree) maxIndegree = currDegree.indegree;

	        if (maxOutdegree < currDegree.outdegree) maxOutdegree = currDegree.outdegree;

	        indegrees[node.id()] = currDegree.indegree;
	        outdegrees[node.id()] = currDegree.outdegree;
	      }

	      return {
	        indegree: function indegree(node) {
	          if (maxIndegree == 0) return 0;

	          if (is.string(node)) {
	            // from is a selector string
	            var node = cy.filter(node)[0].id();
	          } else {
	            // from is a node
	            var node = node.id();
	          }

	          return indegrees[node] / maxIndegree;
	        },
	        outdegree: function outdegree(node) {
	          if (maxOutdegree == 0) return 0;

	          if (is.string(node)) {
	            // from is a selector string
	            var node = cy.filter(node)[0].id();
	          } else {
	            // from is a node
	            var node = node.id();
	          }

	          return outdegrees[node] / maxOutdegree;
	        }

	      };
	    }
	  }, // degreeCentralityNormalized

	  // Implemented from the algorithm in Opsahl's paper
	  // "Node centrality in weighted networks: Generalizing degree and shortest paths"
	  // check the heading 2 "Degree"
	  degreeCentrality: function degreeCentrality(options) {
	    options = options || {};

	    var callingEles = this;

	    // root - mandatory!
	    if (options != null && options.root != null) {
	      var root = is.string(options.root) ? this.filter(options.root)[0] : options.root[0];
	    } else {
	      return undefined;
	    }

	    // weight - optional
	    if (options.weight != null && is.fn(options.weight)) {
	      var weightFn = options.weight;
	    } else {
	      // If not specified, assume each edge has equal weight (1)
	      var weightFn = function weightFn(e) {
	        return 1;
	      };
	    }

	    // directed - optional
	    if (options.directed != null) {
	      var directed = options.directed;
	    } else {
	      var directed = false;
	    }

	    // alpha - optional
	    if (options.alpha != null && is.number(options.alpha)) {
	      var alpha = options.alpha;
	    } else {
	      alpha = 0;
	    }

	    if (!directed) {
	      var connEdges = root.connectedEdges().intersection(callingEles);
	      var k = connEdges.length;
	      var s = 0;

	      // Now, sum edge weights
	      for (var i = 0; i < connEdges.length; i++) {
	        var edge = connEdges[i];
	        s += weightFn(edge);
	      }

	      return {
	        degree: Math.pow(k, 1 - alpha) * Math.pow(s, alpha)
	      };
	    } else {
	      var incoming = root.connectedEdges('edge[target = "' + root.id() + '"]').intersection(callingEles);
	      var outgoing = root.connectedEdges('edge[source = "' + root.id() + '"]').intersection(callingEles);
	      var k_in = incoming.length;
	      var k_out = outgoing.length;
	      var s_in = 0;
	      var s_out = 0;

	      // Now, sum incoming edge weights
	      for (var i = 0; i < incoming.length; i++) {
	        var edge = incoming[i];
	        s_in += weightFn(edge);
	      }

	      // Now, sum outgoing edge weights
	      for (var i = 0; i < outgoing.length; i++) {
	        var edge = outgoing[i];
	        s_out += weightFn(edge);
	      }

	      return {
	        indegree: Math.pow(k_in, 1 - alpha) * Math.pow(s_in, alpha),
	        outdegree: Math.pow(k_out, 1 - alpha) * Math.pow(s_out, alpha)
	      };
	    }
	  } // degreeCentrality

	}; // elesfn

	// nice, short mathemathical alias
	elesfn.dc = elesfn.degreeCentrality;
	elesfn.dcn = elesfn.degreeCentralityNormalised = elesfn.degreeCentralityNormalized;

	module.exports = elesfn;

	/***/ }),
	/* 40 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);

	var elesfn = {

	  closenessCentralityNormalized: function closenessCentralityNormalized(options) {
	    options = options || {};

	    var cy = this.cy();

	    var harmonic = options.harmonic;
	    if (harmonic === undefined) {
	      harmonic = true;
	    }

	    var closenesses = {};
	    var maxCloseness = 0;
	    var nodes = this.nodes();
	    var fw = this.floydWarshall({ weight: options.weight, directed: options.directed });

	    // Compute closeness for every node and find the maximum closeness
	    for (var i = 0; i < nodes.length; i++) {
	      var currCloseness = 0;
	      for (var j = 0; j < nodes.length; j++) {
	        if (i != j) {
	          var d = fw.distance(nodes[i], nodes[j]);

	          if (harmonic) {
	            currCloseness += 1 / d;
	          } else {
	            currCloseness += d;
	          }
	        }
	      }

	      if (!harmonic) {
	        currCloseness = 1 / currCloseness;
	      }

	      if (maxCloseness < currCloseness) {
	        maxCloseness = currCloseness;
	      }

	      closenesses[nodes[i].id()] = currCloseness;
	    }

	    return {
	      closeness: function closeness(node) {
	        if (maxCloseness == 0) {
	          return 0;
	        }

	        if (is.string(node)) {
	          // from is a selector string
	          var node = cy.filter(node)[0].id();
	        } else {
	          // from is a node
	          var node = node.id();
	        }

	        return closenesses[node] / maxCloseness;
	      }
	    };
	  },

	  // Implemented from pseudocode from wikipedia
	  closenessCentrality: function closenessCentrality(options) {
	    options = options || {};

	    // root - mandatory!
	    if (options.root != null) {
	      if (is.string(options.root)) {
	        // use it as a selector, e.g. "#rootID
	        var root = this.filter(options.root)[0];
	      } else {
	        var root = options.root[0];
	      }
	    } else {
	      return undefined;
	    }

	    // weight - optional
	    if (options.weight != null && is.fn(options.weight)) {
	      var weight = options.weight;
	    } else {
	      var weight = function weight() {
	        return 1;
	      };
	    }

	    // directed - optional
	    if (options.directed != null && is.bool(options.directed)) {
	      var directed = options.directed;
	    } else {
	      var directed = false;
	    }

	    var harmonic = options.harmonic;
	    if (harmonic === undefined) {
	      harmonic = true;
	    }

	    // we need distance from this node to every other node
	    var dijkstra = this.dijkstra({
	      root: root,
	      weight: weight,
	      directed: directed
	    });
	    var totalDistance = 0;

	    var nodes = this.nodes();
	    for (var i = 0; i < nodes.length; i++) {
	      if (nodes[i].id() != root.id()) {
	        var d = dijkstra.distanceTo(nodes[i]);

	        if (harmonic) {
	          totalDistance += 1 / d;
	        } else {
	          totalDistance += d;
	        }
	      }
	    }

	    return harmonic ? totalDistance : 1 / totalDistance;
	  } // closenessCentrality

	}; // elesfn

	// nice, short mathemathical alias
	elesfn.cc = elesfn.closenessCentrality;
	elesfn.ccn = elesfn.closenessCentralityNormalised = elesfn.closenessCentralityNormalized;

	module.exports = elesfn;

	/***/ }),
	/* 41 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var Heap = __webpack_require__(9);

	var elesfn = {

	  // Implemented from the algorithm in the paper "On Variants of Shortest-Path Betweenness Centrality and their Generic Computation" by Ulrik Brandes
	  betweennessCentrality: function betweennessCentrality(options) {
	    options = options || {};

	    // Weight - optional
	    var weighted, weightFn;
	    if (is.fn(options.weight)) {
	      weightFn = options.weight;
	      weighted = true;
	    } else {
	      weighted = false;
	    }

	    // Directed - default false
	    var directed = options.directed != null ? options.directed : false;

	    var cy = this._private.cy;

	    // starting
	    var V = this.nodes();
	    var A = {};
	    var _C = {};
	    var max = 0;
	    var C = {
	      set: function set(key, val) {
	        _C[key] = val;

	        if (val > max) {
	          max = val;
	        }
	      },

	      get: function get(key) {
	        return _C[key];
	      }
	    };

	    // A contains the neighborhoods of every node
	    for (var i = 0; i < V.length; i++) {
	      var v = V[i];
	      var vid = v.id();

	      if (directed) {
	        A[vid] = v.outgoers().nodes(); // get outgoers of every node
	      } else {
	        A[vid] = v.openNeighborhood().nodes(); // get neighbors of every node
	      }

	      C.set(vid, 0);
	    }

	    for (var s = 0; s < V.length; s++) {
	      var sid = V[s].id();
	      var S = []; // stack
	      var P = {};
	      var g = {};
	      var d = {};
	      var Q = new Heap(function (a, b) {
	        return d[a] - d[b];
	      }); // queue

	      // init dictionaries
	      for (var i = 0; i < V.length; i++) {
	        var vid = V[i].id();

	        P[vid] = [];
	        g[vid] = 0;
	        d[vid] = Infinity;
	      }

	      g[sid] = 1; // sigma
	      d[sid] = 0; // distance to s

	      Q.push(sid);

	      while (!Q.empty()) {
	        var v = Q.pop();

	        S.push(v);

	        if (weighted) {
	          for (var j = 0; j < A[v].length; j++) {
	            var w = A[v][j];
	            var vEle = cy.getElementById(v);

	            var edge;
	            if (vEle.edgesTo(w).length > 0) {
	              edge = vEle.edgesTo(w)[0];
	            } else {
	              edge = w.edgesTo(vEle)[0];
	            }

	            var edgeWeight = weightFn(edge);

	            w = w.id();

	            if (d[w] > d[v] + edgeWeight) {
	              d[w] = d[v] + edgeWeight;

	              if (Q.nodes.indexOf(w) < 0) {
	                //if w is not in Q
	                Q.push(w);
	              } else {
	                // update position if w is in Q
	                Q.updateItem(w);
	              }

	              g[w] = 0;
	              P[w] = [];
	            }

	            if (d[w] == d[v] + edgeWeight) {
	              g[w] = g[w] + g[v];
	              P[w].push(v);
	            }
	          }
	        } else {
	          for (var j = 0; j < A[v].length; j++) {
	            var w = A[v][j].id();

	            if (d[w] == Infinity) {
	              Q.push(w);

	              d[w] = d[v] + 1;
	            }

	            if (d[w] == d[v] + 1) {
	              g[w] = g[w] + g[v];
	              P[w].push(v);
	            }
	          }
	        }
	      }

	      var e = {};
	      for (var i = 0; i < V.length; i++) {
	        e[V[i].id()] = 0;
	      }

	      while (S.length > 0) {
	        var w = S.pop();

	        for (var j = 0; j < P[w].length; j++) {
	          var v = P[w][j];

	          e[v] = e[v] + g[v] / g[w] * (1 + e[w]);

	          if (w != V[s].id()) {
	            C.set(w, C.get(w) + e[w]);
	          }
	        }
	      }
	    }

	    var ret = {
	      betweenness: function betweenness(node) {
	        if (is.string(node)) {
	          var node = cy.filter(node).id();
	        } else {
	          var node = node.id();
	        }

	        return C.get(node);
	      },

	      betweennessNormalized: function betweennessNormalized(node) {
	        if (max == 0) return 0;

	        if (is.string(node)) {
	          var node = cy.filter(node).id();
	        } else {
	          var node = node.id();
	        }

	        return C.get(node) / max;
	      }
	    };

	    // alias
	    ret.betweennessNormalised = ret.betweennessNormalized;

	    return ret;
	  } // betweennessCentrality

	}; // elesfn

	// nice, short mathemathical alias
	elesfn.bc = elesfn.betweennessCentrality;

	module.exports = elesfn;

	/***/ }),
	/* 42 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var define = __webpack_require__(4);

	var elesfn = {
	  animate: define.animate(),
	  animation: define.animation(),
	  animated: define.animated(),
	  clearQueue: define.clearQueue(),
	  delay: define.delay(),
	  delayAnimation: define.delayAnimation(),
	  stop: define.stop()
	};

	module.exports = elesfn;

	/***/ }),
	/* 43 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var Animation = __webpack_require__(44);
	var math = __webpack_require__(2);
	var is = __webpack_require__(0);

	var define = {

	  animated: function animated() {
	    return function animatedImpl() {
	      var self = this;
	      var selfIsArrayLike = self.length !== undefined;
	      var all = selfIsArrayLike ? self : [self]; // put in array if not array-like
	      var cy = this._private.cy || this;

	      if (!cy.styleEnabled()) {
	        return false;
	      }

	      var ele = all[0];

	      if (ele) {
	        return ele._private.animation.current.length > 0;
	      }
	    };
	  }, // animated

	  clearQueue: function clearQueue() {
	    return function clearQueueImpl() {
	      var self = this;
	      var selfIsArrayLike = self.length !== undefined;
	      var all = selfIsArrayLike ? self : [self]; // put in array if not array-like
	      var cy = this._private.cy || this;

	      if (!cy.styleEnabled()) {
	        return this;
	      }

	      for (var i = 0; i < all.length; i++) {
	        var ele = all[i];
	        ele._private.animation.queue = [];
	      }

	      return this;
	    };
	  }, // clearQueue

	  delay: function delay() {
	    return function delayImpl(time, complete) {
	      var cy = this._private.cy || this;

	      if (!cy.styleEnabled()) {
	        return this;
	      }

	      return this.animate({
	        delay: time,
	        duration: time,
	        complete: complete
	      });
	    };
	  }, // delay

	  delayAnimation: function delayAnimation() {
	    return function delayAnimationImpl(time, complete) {
	      var cy = this._private.cy || this;

	      if (!cy.styleEnabled()) {
	        return this;
	      }

	      return this.animation({
	        delay: time,
	        duration: time,
	        complete: complete
	      });
	    };
	  }, // delay

	  animation: function animation() {
	    return function animationImpl(properties, params) {
	      var self = this;
	      var selfIsArrayLike = self.length !== undefined;
	      var all = selfIsArrayLike ? self : [self]; // put in array if not array-like
	      var cy = this._private.cy || this;
	      var isCore = !selfIsArrayLike;
	      var isEles = !isCore;

	      if (!cy.styleEnabled()) {
	        return this;
	      }

	      var style = cy.style();

	      properties = util.assign({}, properties, params);

	      var propertiesEmpty = Object.keys(properties).length === 0;

	      if (propertiesEmpty) {
	        return new Animation(all[0], properties); // nothing to animate
	      }

	      if (properties.duration === undefined) {
	        properties.duration = 400;
	      }

	      switch (properties.duration) {
	        case 'slow':
	          properties.duration = 600;
	          break;
	        case 'fast':
	          properties.duration = 200;
	          break;
	      }

	      if (isEles) {
	        properties.style = style.getPropsList(properties.style || properties.css);

	        properties.css = undefined;
	      }

	      if (isEles && properties.renderedPosition != null) {
	        var rpos = properties.renderedPosition;
	        var pan = cy.pan();
	        var zoom = cy.zoom();

	        properties.position = math.renderedToModelPosition(rpos, zoom, pan);
	      }

	      // override pan w/ panBy if set
	      if (isCore && properties.panBy != null) {
	        var panBy = properties.panBy;
	        var cyPan = cy.pan();

	        properties.pan = {
	          x: cyPan.x + panBy.x,
	          y: cyPan.y + panBy.y
	        };
	      }

	      // override pan w/ center if set
	      var center = properties.center || properties.centre;
	      if (isCore && center != null) {
	        var centerPan = cy.getCenterPan(center.eles, properties.zoom);

	        if (centerPan != null) {
	          properties.pan = centerPan;
	        }
	      }

	      // override pan & zoom w/ fit if set
	      if (isCore && properties.fit != null) {
	        var fit = properties.fit;
	        var fitVp = cy.getFitViewport(fit.eles || fit.boundingBox, fit.padding);

	        if (fitVp != null) {
	          properties.pan = fitVp.pan;
	          properties.zoom = fitVp.zoom;
	        }
	      }

	      // override zoom (& potentially pan) w/ zoom obj if set
	      if (isCore && is.plainObject(properties.zoom)) {
	        var vp = cy.getZoomedViewport(properties.zoom);

	        if (vp != null) {
	          if (vp.zoomed) {
	            properties.zoom = vp.zoom;
	          }

	          if (vp.panned) {
	            properties.pan = vp.pan;
	          }
	        }
	      }

	      return new Animation(all[0], properties);
	    };
	  }, // animate

	  animate: function animate() {
	    return function animateImpl(properties, params) {
	      var self = this;
	      var selfIsArrayLike = self.length !== undefined;
	      var all = selfIsArrayLike ? self : [self]; // put in array if not array-like
	      var cy = this._private.cy || this;

	      if (!cy.styleEnabled()) {
	        return this;
	      }

	      if (params) {
	        properties = util.extend({}, properties, params);
	      }

	      // manually hook and run the animation
	      for (var i = 0; i < all.length; i++) {
	        var ele = all[i];
	        var queue = ele.animated() && (properties.queue === undefined || properties.queue);

	        var ani = ele.animation(properties, queue ? { queue: true } : undefined);

	        ani.play();
	      }

	      return this; // chaining
	    };
	  }, // animate

	  stop: function stop() {
	    return function stopImpl(clearQueue, jumpToEnd) {
	      var self = this;
	      var selfIsArrayLike = self.length !== undefined;
	      var all = selfIsArrayLike ? self : [self]; // put in array if not array-like
	      var cy = this._private.cy || this;

	      if (!cy.styleEnabled()) {
	        return this;
	      }

	      for (var i = 0; i < all.length; i++) {
	        var ele = all[i];
	        var _p = ele._private;
	        var anis = _p.animation.current;

	        for (var j = 0; j < anis.length; j++) {
	          var ani = anis[j];
	          var ani_p = ani._private;

	          if (jumpToEnd) {
	            // next iteration of the animation loop, the animation
	            // will go straight to the end and be removed
	            ani_p.duration = 0;
	          }
	        }

	        // clear the queue of future animations
	        if (clearQueue) {
	          _p.animation.queue = [];
	        }

	        if (!jumpToEnd) {
	          _p.animation.current = [];
	        }
	      }

	      // we have to notify (the animation loop doesn't do it for us on `stop`)
	      cy.notify({
	        eles: this,
	        type: 'draw'
	      });

	      return this;
	    };
	  } // stop

	}; // define

	module.exports = define;

	/***/ }),
	/* 44 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var is = __webpack_require__(0);
	var Promise = __webpack_require__(5);

	var Animation = function Animation(target, opts, opts2) {
	  var _p = this._private = util.extend({
	    duration: 1000
	  }, opts, opts2);

	  _p.target = target;
	  _p.style = _p.style || _p.css;
	  _p.started = false;
	  _p.playing = false;
	  _p.hooked = false;
	  _p.applying = false;
	  _p.progress = 0;
	  _p.completes = [];
	  _p.frames = [];

	  if (_p.complete && is.fn(_p.complete)) {
	    _p.completes.push(_p.complete);
	  }

	  // for future timeline/animations impl
	  this.length = 1;
	  this[0] = this;
	};

	var anifn = Animation.prototype;

	util.extend(anifn, {

	  instanceString: function instanceString() {
	    return 'animation';
	  },

	  hook: function hook() {
	    var _p = this._private;

	    if (!_p.hooked) {
	      // add to target's animation queue
	      var q = void 0;
	      var tAni = _p.target._private.animation;
	      if (_p.queue) {
	        q = tAni.queue;
	      } else {
	        q = tAni.current;
	      }
	      q.push(this);

	      // add to the animation loop pool
	      if (is.elementOrCollection(_p.target)) {
	        _p.target.cy().addToAnimationPool(_p.target);
	      }

	      _p.hooked = true;
	    }

	    return this;
	  },

	  play: function play() {
	    var _p = this._private;

	    // autorewind
	    if (_p.progress === 1) {
	      _p.progress = 0;
	    }

	    _p.playing = true;
	    _p.started = false; // needs to be started by animation loop
	    _p.stopped = false;

	    this.hook();

	    // the animation loop will start the animation...

	    return this;
	  },

	  playing: function playing() {
	    return this._private.playing;
	  },

	  apply: function apply() {
	    var _p = this._private;

	    _p.applying = true;
	    _p.started = false; // needs to be started by animation loop
	    _p.stopped = false;

	    this.hook();

	    // the animation loop will apply the animation at this progress

	    return this;
	  },

	  applying: function applying() {
	    return this._private.applying;
	  },

	  pause: function pause() {
	    var _p = this._private;

	    _p.playing = false;
	    _p.started = false;

	    return this;
	  },

	  stop: function stop() {
	    var _p = this._private;

	    _p.playing = false;
	    _p.started = false;
	    _p.stopped = true; // to be removed from animation queues

	    return this;
	  },

	  rewind: function rewind() {
	    return this.progress(0);
	  },

	  fastforward: function fastforward() {
	    return this.progress(1);
	  },

	  time: function time(t) {
	    var _p = this._private;

	    if (t === undefined) {
	      return _p.progress * _p.duration;
	    } else {
	      return this.progress(t / _p.duration);
	    }
	  },

	  progress: function progress(p) {
	    var _p = this._private;
	    var wasPlaying = _p.playing;

	    if (p === undefined) {
	      return _p.progress;
	    } else {
	      if (wasPlaying) {
	        this.pause();
	      }

	      _p.progress = p;
	      _p.started = false;

	      if (wasPlaying) {
	        this.play();
	      }
	    }

	    return this;
	  },

	  completed: function completed() {
	    return this._private.progress === 1;
	  },

	  reverse: function reverse() {
	    var _p = this._private;
	    var wasPlaying = _p.playing;

	    if (wasPlaying) {
	      this.pause();
	    }

	    _p.progress = 1 - _p.progress;
	    _p.started = false;

	    var swap = function swap(a, b) {
	      var _pa = _p[a];

	      if (_pa == null) {
	        return;
	      }

	      _p[a] = _p[b];
	      _p[b] = _pa;
	    };

	    swap('zoom', 'startZoom');
	    swap('pan', 'startPan');
	    swap('position', 'startPosition');

	    // swap styles
	    if (_p.style) {
	      for (var i = 0; i < _p.style.length; i++) {
	        var prop = _p.style[i];
	        var name = prop.name;
	        var startStyleProp = _p.startStyle[name];

	        _p.startStyle[name] = prop;
	        _p.style[i] = startStyleProp;
	      }
	    }

	    if (wasPlaying) {
	      this.play();
	    }

	    return this;
	  },

	  promise: function promise(type) {
	    var _p = this._private;

	    var arr = void 0;

	    switch (type) {
	      case 'frame':
	        arr = _p.frames;
	        break;
	      default:
	      case 'complete':
	      case 'completed':
	        arr = _p.completes;
	    }

	    return new Promise(function (resolve, reject) {
	      arr.push(function () {
	        resolve();
	      });
	    });
	  }

	});

	anifn.complete = anifn.completed;

	module.exports = Animation;

	/***/ }),
	/* 45 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	var util = __webpack_require__(1);
	var is = __webpack_require__(0);

	var define = {

	  // access data field
	  data: function data(params) {
	    var defaults = {
	      field: 'data',
	      bindingEvent: 'data',
	      allowBinding: false,
	      allowSetting: false,
	      allowGetting: false,
	      settingEvent: 'data',
	      settingTriggersEvent: false,
	      triggerFnName: 'trigger',
	      immutableKeys: {}, // key => true if immutable
	      updateStyle: false,
	      beforeGet: function beforeGet(self) {},
	      beforeSet: function beforeSet(self, obj) {},
	      onSet: function onSet(self) {},
	      canSet: function canSet(self) {
	        return true;
	      }
	    };
	    params = util.extend({}, defaults, params);

	    return function dataImpl(name, value) {
	      var p = params;
	      var self = this;
	      var selfIsArrayLike = self.length !== undefined;
	      var all = selfIsArrayLike ? self : [self]; // put in array if not array-like
	      var single = selfIsArrayLike ? self[0] : self;

	      // .data('foo', ...)
	      if (is.string(name)) {
	        // set or get property

	        // .data('foo')
	        if (p.allowGetting && value === undefined) {
	          // get

	          var ret = void 0;
	          if (single) {
	            p.beforeGet(single);

	            ret = single._private[p.field][name];
	          }
	          return ret;

	          // .data('foo', 'bar')
	        } else if (p.allowSetting && value !== undefined) {
	          // set
	          var valid = !p.immutableKeys[name];
	          if (valid) {
	            var change = _defineProperty({}, name, value);

	            p.beforeSet(self, change);

	            for (var i = 0, l = all.length; i < l; i++) {
	              var ele = all[i];

	              if (p.canSet(ele)) {
	                ele._private[p.field][name] = value;
	              }
	            }

	            // update mappers if asked
	            if (p.updateStyle) {
	              self.updateStyle();
	            }

	            // call onSet callback
	            p.onSet(self);

	            if (p.settingTriggersEvent) {
	              self[p.triggerFnName](p.settingEvent);
	            }
	          }
	        }

	        // .data({ 'foo': 'bar' })
	      } else if (p.allowSetting && is.plainObject(name)) {
	        // extend
	        var obj = name;
	        var k = void 0,
	            v = void 0;
	        var keys = Object.keys(obj);

	        p.beforeSet(self, obj);

	        for (var _i = 0; _i < keys.length; _i++) {
	          k = keys[_i];
	          v = obj[k];

	          var _valid = !p.immutableKeys[k];
	          if (_valid) {
	            for (var j = 0; j < all.length; j++) {
	              var _ele = all[j];

	              if (p.canSet(_ele)) {
	                _ele._private[p.field][k] = v;
	              }
	            }
	          }
	        }

	        // update mappers if asked
	        if (p.updateStyle) {
	          self.updateStyle();
	        }

	        // call onSet callback
	        p.onSet(self);

	        if (p.settingTriggersEvent) {
	          self[p.triggerFnName](p.settingEvent);
	        }

	        // .data(function(){ ... })
	      } else if (p.allowBinding && is.fn(name)) {
	        // bind to event
	        var fn = name;
	        self.on(p.bindingEvent, fn);

	        // .data()
	      } else if (p.allowGetting && name === undefined) {
	        // get whole object
	        var _ret = void 0;
	        if (single) {
	          p.beforeGet(single);

	          _ret = single._private[p.field];
	        }
	        return _ret;
	      }

	      return self; // maintain chainability
	    }; // function
	  }, // data

	  // remove data field
	  removeData: function removeData(params) {
	    var defaults = {
	      field: 'data',
	      event: 'data',
	      triggerFnName: 'trigger',
	      triggerEvent: false,
	      immutableKeys: {} // key => true if immutable
	    };
	    params = util.extend({}, defaults, params);

	    return function removeDataImpl(names) {
	      var p = params;
	      var self = this;
	      var selfIsArrayLike = self.length !== undefined;
	      var all = selfIsArrayLike ? self : [self]; // put in array if not array-like

	      // .removeData('foo bar')
	      if (is.string(names)) {
	        // then get the list of keys, and delete them
	        var keys = names.split(/\s+/);
	        var l = keys.length;

	        for (var i = 0; i < l; i++) {
	          // delete each non-empty key
	          var key = keys[i];
	          if (is.emptyString(key)) {
	            continue;
	          }

	          var valid = !p.immutableKeys[key]; // not valid if immutable
	          if (valid) {
	            for (var i_a = 0, l_a = all.length; i_a < l_a; i_a++) {
	              all[i_a]._private[p.field][key] = undefined;
	            }
	          }
	        }

	        if (p.triggerEvent) {
	          self[p.triggerFnName](p.event);
	        }

	        // .removeData()
	      } else if (names === undefined) {
	        // then delete all keys

	        for (var _i_a = 0, _l_a = all.length; _i_a < _l_a; _i_a++) {
	          var _privateFields = all[_i_a]._private[p.field];
	          var _keys = Object.keys(_privateFields);

	          for (var _i2 = 0; _i2 < _keys.length; _i2++) {
	            var _key = _keys[_i2];
	            var validKeyToDelete = !p.immutableKeys[_key];

	            if (validKeyToDelete) {
	              _privateFields[_key] = undefined;
	            }
	          }
	        }

	        if (p.triggerEvent) {
	          self[p.triggerFnName](p.event);
	        }
	      }

	      return self; // maintain chaining
	    }; // function
	  } // removeData
	}; // define

	module.exports = define;

	/***/ }),
	/* 46 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var Promise = __webpack_require__(5);

	var define = {

	  eventAliasesOn: function eventAliasesOn(proto) {
	    var p = proto;

	    p.addListener = p.listen = p.bind = p.on;
	    p.unlisten = p.unbind = p.off = p.removeListener;
	    p.trigger = p.emit;

	    // this is just a wrapper alias of .on()
	    p.pon = p.promiseOn = function (events, selector) {
	      var self = this;
	      var args = Array.prototype.slice.call(arguments, 0);

	      return new Promise(function (resolve, reject) {
	        var callback = function callback(e) {
	          self.off.apply(self, offArgs);

	          resolve(e);
	        };

	        var onArgs = args.concat([callback]);
	        var offArgs = onArgs.concat([]);

	        self.on.apply(self, onArgs);
	      });
	    };
	  }

	}; // define

	module.exports = define;

	/***/ }),
	/* 47 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var Set = __webpack_require__(8);

	var elesfn = {
	  classes: function classes(_classes) {
	    _classes = (_classes || '').match(/\S+/g) || [];
	    var self = this;
	    var changed = [];
	    var classesMap = new Set(_classes);

	    // check and update each ele

	    var _loop = function _loop(j) {
	      var ele = self[j];
	      var _p = ele._private;
	      var eleClasses = _p.classes;
	      var changedEle = false;

	      // check if ele has all of the passed classes
	      classesMap.forEach(function (cls) {
	        var eleHasClass = eleClasses.has(cls);

	        if (!eleHasClass) {
	          changedEle = true;
	        }
	      });

	      // check if ele has classes outside of those passed
	      if (!changedEle) {
	        eleClasses.forEach(function (eleCls) {
	          var specdClass = classesMap.has(eleCls);

	          if (!specdClass) {
	            changedEle = true;
	          }
	        });
	      }

	      if (changedEle) {
	        _p.classes = new Set(classesMap);

	        changed.push(ele);
	      }
	    };

	    for (var j = 0; j < self.length; j++) {
	      _loop(j);
	    }

	    // trigger update style on those eles that had class changes
	    if (changed.length > 0) {
	      this.spawn(changed).updateStyle().emit('class');
	    }

	    return self;
	  },

	  addClass: function addClass(classes) {
	    return this.toggleClass(classes, true);
	  },

	  hasClass: function hasClass(className) {
	    var ele = this[0];
	    return ele != null && ele._private.classes.has(className);
	  },

	  toggleClass: function toggleClass(classesStr, toggle) {
	    var classes = classesStr.match(/\S+/g) || [];
	    var self = this;
	    var changed = []; // eles who had classes changed

	    for (var i = 0, il = self.length; i < il; i++) {
	      var _ele = self[i];
	      var _changedEle = false;

	      for (var j = 0; j < classes.length; j++) {
	        var cls = classes[j];
	        var _eleClasses = _ele._private.classes;
	        var hasClass = _eleClasses.has(cls);
	        var shouldAdd = toggle || toggle === undefined && !hasClass;

	        if (shouldAdd) {
	          _eleClasses.add(cls);

	          if (!hasClass && !_changedEle) {
	            changed.push(_ele);
	            _changedEle = true;
	          }
	        } else {
	          // then remove
	          _eleClasses.delete(cls);

	          if (hasClass && !_changedEle) {
	            changed.push(_ele);
	            _changedEle = true;
	          }
	        }
	      } // for j classes
	    } // for i eles

	    // trigger update style on those eles that had class changes
	    if (changed.length > 0) {
	      this.spawn(changed).updateStyle().emit('class');
	    }

	    return self;
	  },

	  removeClass: function removeClass(classes) {
	    return this.toggleClass(classes, false);
	  },

	  flashClass: function flashClass(classes, duration) {
	    var self = this;

	    if (duration == null) {
	      duration = 250;
	    } else if (duration === 0) {
	      return self; // nothing to do really
	    }

	    self.addClass(classes);
	    setTimeout(function () {
	      self.removeClass(classes);
	    }, duration);

	    return self;
	  }
	};

	module.exports = elesfn;

	/***/ }),
	/* 48 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var Selector = __webpack_require__(6);

	var elesfn = {
	  allAre: function allAre(selector) {
	    var selObj = new Selector(selector);

	    return this.every(function (ele) {
	      return selObj.matches(ele);
	    });
	  },

	  is: function is(selector) {
	    var selObj = new Selector(selector);

	    return this.some(function (ele) {
	      return selObj.matches(ele);
	    });
	  },

	  some: function some(fn, thisArg) {
	    for (var i = 0; i < this.length; i++) {
	      var ret = !thisArg ? fn(this[i], i, this) : fn.apply(thisArg, [this[i], i, this]);

	      if (ret) {
	        return true;
	      }
	    }

	    return false;
	  },

	  every: function every(fn, thisArg) {
	    for (var i = 0; i < this.length; i++) {
	      var ret = !thisArg ? fn(this[i], i, this) : fn.apply(thisArg, [this[i], i, this]);

	      if (!ret) {
	        return false;
	      }
	    }

	    return true;
	  },

	  same: function same(collection) {
	    collection = this.cy().collection(collection);

	    // cheap extra check
	    if (this.length !== collection.length) {
	      return false;
	    }

	    return this.every(function (ele) {
	      return collection.hasElementWithId(ele.id());
	    });
	  },

	  anySame: function anySame(collection) {
	    collection = this.cy().collection(collection);

	    return this.some(function (ele) {
	      return collection.hasElementWithId(ele.id());
	    });
	  },

	  allAreNeighbors: function allAreNeighbors(collection) {
	    collection = this.cy().collection(collection);

	    var nhood = this.neighborhood();

	    return collection.every(function (ele) {
	      return nhood.hasElementWithId(ele.id());
	    });
	  },

	  contains: function contains(collection) {
	    collection = this.cy().collection(collection);

	    var self = this;

	    return collection.every(function (ele) {
	      return self.hasElementWithId(ele.id());
	    });
	  }
	};

	elesfn.allAreNeighbours = elesfn.allAreNeighbors;
	elesfn.has = elesfn.contains;

	module.exports = elesfn;

	/***/ }),
	/* 49 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var exprs = __webpack_require__(50);
	var newQuery = __webpack_require__(10);

	// of all the expressions, find the first match in the remaining text
	var consumeExpr = function consumeExpr(remaining) {
	  var expr = void 0;
	  var match = void 0;
	  var name = void 0;

	  for (var j = 0; j < exprs.length; j++) {
	    var e = exprs[j];
	    var n = e.name;

	    var m = remaining.match(e.regexObj);

	    if (m != null) {
	      match = m;
	      expr = e;
	      name = n;

	      var consumed = m[0];
	      remaining = remaining.substring(consumed.length);

	      break; // we've consumed one expr, so we can return now
	    }
	  }

	  return {
	    expr: expr,
	    match: match,
	    name: name,
	    remaining: remaining
	  };
	};

	// consume all leading whitespace
	var consumeWhitespace = function consumeWhitespace(remaining) {
	  var match = remaining.match(/^\s+/);

	  if (match) {
	    var consumed = match[0];
	    remaining = remaining.substring(consumed.length);
	  }

	  return remaining;
	};

	var parse = function parse(selector) {
	  var self = this;

	  var remaining = self._private.selectorText = selector;

	  var currentQuery = self[0] = newQuery();
	  self.length = 1;

	  remaining = consumeWhitespace(remaining); // get rid of leading whitespace

	  for (;;) {
	    var check = consumeExpr(remaining);

	    if (check.expr == null) {
	      util.error('The selector `' + selector + '`is invalid');
	      return false;
	    } else {
	      var args = check.match.slice(1);

	      // let the token populate the selector object in currentQuery
	      var ret = check.expr.populate(self, currentQuery, args);

	      if (ret === false) {
	        return false; // exit if population failed
	      } else if (ret != null) {
	        currentQuery = ret; // change the current query to be filled if the expr specifies
	      }
	    }

	    remaining = check.remaining;

	    // we're done when there's nothing left to parse
	    if (remaining.match(/^\s*$/)) {
	      break;
	    }
	  }

	  // adjust references for subject
	  for (var j = 0; j < self.length; j++) {
	    var query = self[j];

	    if (query.subject != null) {
	      // go up the tree until we reach the subject
	      for (;;) {
	        if (query.subject === query) {
	          break;
	        } // done if subject is self

	        if (query.parent != null) {
	          // swap parent/child reference
	          var parent = query.parent;
	          var child = query;

	          child.parent = null;
	          parent.child = child;

	          query = parent; // go up the tree
	        } else if (query.ancestor != null) {
	          // swap ancestor/descendant
	          var ancestor = query.ancestor;
	          var descendant = query;

	          descendant.ancestor = null;
	          ancestor.descendant = descendant;

	          query = ancestor; // go up the tree
	        } else if (query.source || query.target || query.connectedNodes) {
	          util.error('The selector `' + self.text() + '` can not contain a subject selector that applies to the source or target of an edge selector');
	          return false;
	        } else {
	          util.error('When adjusting references for the selector `' + self.text() + '`, neither parent nor ancestor was found');
	          return false;
	        }
	      } // for

	      self[j] = query.subject; // subject should be the root query
	    } // if
	  } // for

	  return true; // success
	};

	module.exports = { parse: parse };

	/***/ }),
	/* 50 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	var _require = __webpack_require__(15),
	    stateSelectorRegex = _require.stateSelectorRegex;

	var tokens = __webpack_require__(51);
	var util = __webpack_require__(1);
	var newQuery = __webpack_require__(10);

	// when a token like a variable has escaped meta characters, we need to clean the backslashes out
	// so that values get compared properly in Selector.filter()
	var cleanMetaChars = function cleanMetaChars(str) {
	  return str.replace(new RegExp('\\\\(' + tokens.metaChar + ')', 'g'), function (match, $1) {
	    return $1;
	  });
	};

	var replaceLastQuery = function replaceLastQuery(selector, examiningQuery, replacementQuery) {
	  if (examiningQuery === selector[selector.length - 1]) {
	    selector[selector.length - 1] = replacementQuery;
	  }
	};

	// NOTE: add new expression syntax here to have it recognised by the parser;
	// - a query contains all adjacent (i.e. no separator in between) expressions;
	// - the current query is stored in selector[i] --- you can use the reference to `this` in the populate function;
	// - you need to check the query objects in Selector.filter() for it actually filter properly, but that's pretty straight forward
	// - when you add something here, also add to Selector.toString()
	var exprs = [{
	  name: 'group',
	  query: true,
	  regex: '(' + tokens.group + ')',
	  populate: function populate(selector, query, _ref) {
	    var _ref2 = _slicedToArray(_ref, 1),
	        group = _ref2[0];

	    query.group = group === '*' ? group : group + 's';
	  }
	}, {
	  name: 'state',
	  query: true,
	  regex: stateSelectorRegex,
	  populate: function populate(selector, query, _ref3) {
	    var _ref4 = _slicedToArray(_ref3, 1),
	        state = _ref4[0];

	    query.colonSelectors.push(state);
	  }
	}, {
	  name: 'id',
	  query: true,
	  regex: '\\#(' + tokens.id + ')',
	  populate: function populate(selector, query, _ref5) {
	    var _ref6 = _slicedToArray(_ref5, 1),
	        id = _ref6[0];

	    query.ids.push(cleanMetaChars(id));
	  }
	}, {
	  name: 'className',
	  query: true,
	  regex: '\\.(' + tokens.className + ')',
	  populate: function populate(selector, query, _ref7) {
	    var _ref8 = _slicedToArray(_ref7, 1),
	        className = _ref8[0];

	    query.classes.push(cleanMetaChars(className));
	  }
	}, {
	  name: 'dataExists',
	  query: true,
	  regex: '\\[\\s*(' + tokens.variable + ')\\s*\\]',
	  populate: function populate(selector, query, _ref9) {
	    var _ref10 = _slicedToArray(_ref9, 1),
	        variable = _ref10[0];

	    query.data.push({
	      field: cleanMetaChars(variable)
	    });
	  }
	}, {
	  name: 'dataCompare',
	  query: true,
	  regex: '\\[\\s*(' + tokens.variable + ')\\s*(' + tokens.comparatorOp + ')\\s*(' + tokens.value + ')\\s*\\]',
	  populate: function populate(selector, query, _ref11) {
	    var _ref12 = _slicedToArray(_ref11, 3),
	        variable = _ref12[0],
	        comparatorOp = _ref12[1],
	        value = _ref12[2];

	    var valueIsString = new RegExp('^' + tokens.string + '$').exec(value) != null;

	    if (valueIsString) {
	      value = value.substring(1, value.length - 1);
	    } else {
	      value = parseFloat(value);
	    }

	    query.data.push({
	      field: cleanMetaChars(variable),
	      operator: comparatorOp,
	      value: value
	    });
	  }
	}, {
	  name: 'dataBool',
	  query: true,
	  regex: '\\[\\s*(' + tokens.boolOp + ')\\s*(' + tokens.variable + ')\\s*\\]',
	  populate: function populate(selector, query, _ref13) {
	    var _ref14 = _slicedToArray(_ref13, 2),
	        boolOp = _ref14[0],
	        variable = _ref14[1];

	    query.data.push({
	      field: cleanMetaChars(variable),
	      operator: boolOp
	    });
	  }
	}, {
	  name: 'metaCompare',
	  query: true,
	  regex: '\\[\\[\\s*(' + tokens.meta + ')\\s*(' + tokens.comparatorOp + ')\\s*(' + tokens.number + ')\\s*\\]\\]',
	  populate: function populate(selector, query, _ref15) {
	    var _ref16 = _slicedToArray(_ref15, 3),
	        meta = _ref16[0],
	        comparatorOp = _ref16[1],
	        number = _ref16[2];

	    query.meta.push({
	      field: cleanMetaChars(meta),
	      operator: comparatorOp,
	      value: parseFloat(number)
	    });
	  }
	}, {
	  name: 'nextQuery',
	  separator: true,
	  regex: tokens.separator,
	  populate: function populate(selector) {
	    // go on to next query
	    var nextQuery = selector[selector.length++] = newQuery();
	    selector.currentSubject = null;

	    return nextQuery;
	  }
	}, {
	  name: 'directedEdge',
	  separator: true,
	  regex: tokens.directedEdge,
	  populate: function populate(selector, query) {
	    var edgeQuery = newQuery();
	    var source = query;
	    var target = newQuery();

	    edgeQuery.group = 'edges';
	    edgeQuery.target = target;
	    edgeQuery.source = source;
	    edgeQuery.subject = selector.currentSubject;

	    // the query in the selector should be the edge rather than the source
	    replaceLastQuery(selector, query, edgeQuery);

	    // we're now populating the target query with expressions that follow
	    return target;
	  }
	}, {
	  name: 'undirectedEdge',
	  separator: true,
	  regex: tokens.undirectedEdge,
	  populate: function populate(selector, query) {
	    var edgeQuery = newQuery();
	    var source = query;
	    var target = newQuery();

	    edgeQuery.group = 'edges';
	    edgeQuery.connectedNodes = [source, target];
	    edgeQuery.subject = selector.currentSubject;

	    // the query in the selector should be the edge rather than the source
	    replaceLastQuery(selector, query, edgeQuery);

	    // we're now populating the target query with expressions that follow
	    return target;
	  }
	}, {
	  name: 'child',
	  separator: true,
	  regex: tokens.child,
	  populate: function populate(selector, query) {
	    // this query is the parent of the following query
	    var childQuery = newQuery();
	    childQuery.parent = query;
	    childQuery.subject = selector.currentSubject;

	    // it's cheaper to compare children first and go up so replace the parent
	    replaceLastQuery(selector, query, childQuery);

	    // we're now populating the child query with expressions that follow
	    return childQuery;
	  }
	}, {
	  name: 'descendant',
	  separator: true,
	  regex: tokens.descendant,
	  populate: function populate(selector, query) {
	    // this query is the ancestor of the following query
	    var descendantQuery = newQuery();
	    descendantQuery.ancestor = query;
	    descendantQuery.subject = selector.currentSubject;

	    // it's cheaper to compare descendants first and go up so replace the ancestor
	    replaceLastQuery(selector, query, descendantQuery);

	    // we're now populating the descendant query with expressions that follow
	    return descendantQuery;
	  }
	}, {
	  name: 'subject',
	  modifier: true,
	  regex: tokens.subject,
	  populate: function populate(selector, query) {
	    if (selector.currentSubject != null && query.subject != query) {
	      util.error('Redefinition of subject in selector `' + selector.toString() + '`');
	      return false;
	    }

	    selector.currentSubject = query;
	    query.subject = query;
	    selector[selector.length - 1].subject = query;
	  }
	}];

	exprs.forEach(function (e) {
	  return e.regexObj = new RegExp('^' + e.regex);
	});

	module.exports = exprs;

	/***/ }),
	/* 51 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);

	// tokens in the query language
	var tokens = {
	  metaChar: '[\\!\\"\\#\\$\\%\\&\\\'\\(\\)\\*\\+\\,\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\`\\{\\|\\}\\~]', // chars we need to escape in let names, etc
	  comparatorOp: '=|\\!=|>|>=|<|<=|\\$=|\\^=|\\*=', // binary comparison op (used in data selectors)
	  boolOp: '\\?|\\!|\\^', // boolean (unary) operators (used in data selectors)
	  string: '"(?:\\\\"|[^"])*"' + '|' + "'(?:\\\\'|[^'])*'", // string literals (used in data selectors) -- doublequotes | singlequotes
	  number: util.regex.number, // number literal (used in data selectors) --- e.g. 0.1234, 1234, 12e123
	  meta: 'degree|indegree|outdegree', // allowed metadata fields (i.e. allowed functions to use from Collection)
	  separator: '\\s*,\\s*', // queries are separated by commas, e.g. edge[foo = 'bar'], node.someClass
	  descendant: '\\s+',
	  child: '\\s+>\\s+',
	  subject: '\\$',
	  group: 'node|edge|\\*',
	  directedEdge: '\\s+->\\s+',
	  undirectedEdge: '\\s+<->\\s+'
	};
	tokens.variable = '(?:[\\w-]|(?:\\\\' + tokens.metaChar + '))+'; // a variable name
	tokens.value = tokens.string + '|' + tokens.number; // a value literal, either a string or number
	tokens.className = tokens.variable; // a class name (follows variable conventions)
	tokens.id = tokens.variable; // an element id (follows variable conventions)

	(function () {
	  var ops = void 0,
	      op = void 0,
	      i = void 0;

	  // add @ variants to comparatorOp
	  ops = tokens.comparatorOp.split('|');
	  for (i = 0; i < ops.length; i++) {
	    op = ops[i];
	    tokens.comparatorOp += '|@' + op;
	  }

	  // add ! variants to comparatorOp
	  ops = tokens.comparatorOp.split('|');
	  for (i = 0; i < ops.length; i++) {
	    op = ops[i];

	    if (op.indexOf('!') >= 0) {
	      continue;
	    } // skip ops that explicitly contain !
	    if (op === '=') {
	      continue;
	    } // skip = b/c != is explicitly defined

	    tokens.comparatorOp += '|\\!' + op;
	  }
	})();

	module.exports = tokens;

	/***/ }),
	/* 52 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var _require = __webpack_require__(15),
	    stateSelectorMatches = _require.stateSelectorMatches;

	var is = __webpack_require__(0);

	// generic checking for data/metadata
	var operandsMatch = function operandsMatch(query, params) {
	  var allDataMatches = true;
	  for (var k = 0; k < query[params.name].length; k++) {
	    var data = query[params.name][k];
	    var operator = data.operator;
	    var value = data.value;
	    var field = data.field;
	    var _matches = void 0;
	    var fieldVal = params.fieldValue(field);

	    if (operator != null && value != null) {
	      var fieldStr = !is.string(fieldVal) && !is.number(fieldVal) ? '' : '' + fieldVal;
	      var valStr = '' + value;

	      var caseInsensitive = false;
	      if (operator.indexOf('@') >= 0) {
	        fieldStr = fieldStr.toLowerCase();
	        valStr = valStr.toLowerCase();

	        operator = operator.replace('@', '');
	        caseInsensitive = true;
	      }

	      var notExpr = false;
	      if (operator.indexOf('!') >= 0) {
	        operator = operator.replace('!', '');
	        notExpr = true;
	      }

	      // if we're doing a case insensitive comparison, then we're using a STRING comparison
	      // even if we're comparing numbers
	      if (caseInsensitive) {
	        value = valStr.toLowerCase();
	        fieldVal = fieldStr.toLowerCase();
	      }

	      var isIneqCmp = false;

	      switch (operator) {
	        case '*=':
	          _matches = fieldStr.indexOf(valStr) >= 0;
	          break;
	        case '$=':
	          _matches = fieldStr.indexOf(valStr, fieldStr.length - valStr.length) >= 0;
	          break;
	        case '^=':
	          _matches = fieldStr.indexOf(valStr) === 0;
	          break;
	        case '=':
	          _matches = fieldVal === value;
	          break;
	        case '>':
	          isIneqCmp = true;
	          _matches = fieldVal > value;
	          break;
	        case '>=':
	          isIneqCmp = true;
	          _matches = fieldVal >= value;
	          break;
	        case '<':
	          isIneqCmp = true;
	          _matches = fieldVal < value;
	          break;
	        case '<=':
	          isIneqCmp = true;
	          _matches = fieldVal <= value;
	          break;
	        default:
	          _matches = false;
	          break;
	      }

	      // apply the not op, but null vals for inequalities should always stay non-matching
	      if (notExpr && (fieldVal != null || !isIneqCmp)) {
	        _matches = !_matches;
	      }
	    } else if (operator != null) {
	      switch (operator) {
	        case '?':
	          _matches = fieldVal ? true : false;
	          break;
	        case '!':
	          _matches = fieldVal ? false : true;
	          break;
	        case '^':
	          _matches = fieldVal === undefined;
	          break;
	      }
	    } else {
	      _matches = fieldVal !== undefined;
	    }

	    if (!_matches) {
	      allDataMatches = false;
	      break;
	    }
	  } // for

	  return allDataMatches;
	}; // operandsMatch

	// check parent/child relations
	var confirmRelations = function confirmRelations(query, isNecessary, eles) {
	  if (query != null) {
	    var _matches2 = false;

	    if (!isNecessary) {
	      return false;
	    }

	    eles = eles(); // save cycles if query == null

	    // query must match for at least one element (may be recursive)
	    for (var i = 0; i < eles.length; i++) {
	      if (queryMatches(query, eles[i])) {
	        _matches2 = true;
	        break;
	      }
	    }

	    return _matches2;
	  } else {
	    return true;
	  }
	};

	var queryMatches = function queryMatches(query, ele) {
	  // make single group-only selectors really cheap to check since they're the most common ones
	  if (query.groupOnly) {
	    return query.group === '*' || query.group === ele.group();
	  }

	  // check group
	  if (query.group != null && query.group != '*' && query.group != ele.group()) {
	    return false;
	  }

	  var cy = ele.cy();
	  var k = void 0;

	  // check colon selectors
	  var allColonSelectorsMatch = true;
	  for (k = 0; k < query.colonSelectors.length; k++) {
	    var sel = query.colonSelectors[k];

	    allColonSelectorsMatch = stateSelectorMatches(sel, ele);

	    if (!allColonSelectorsMatch) break;
	  }
	  if (!allColonSelectorsMatch) return false;

	  // check id
	  var allIdsMatch = true;
	  for (k = 0; k < query.ids.length; k++) {
	    var id = query.ids[k];
	    var actualId = ele.id();

	    allIdsMatch = allIdsMatch && id == actualId;

	    if (!allIdsMatch) break;
	  }
	  if (!allIdsMatch) return false;

	  // check classes
	  var allClassesMatch = true;
	  for (k = 0; k < query.classes.length; k++) {
	    var cls = query.classes[k];

	    allClassesMatch = allClassesMatch && ele.hasClass(cls);

	    if (!allClassesMatch) break;
	  }
	  if (!allClassesMatch) return false;

	  // check data matches
	  var allDataMatches = operandsMatch(query, {
	    name: 'data',
	    fieldValue: function fieldValue(field) {
	      return ele.data(field);
	    }
	  });

	  if (!allDataMatches) {
	    return false;
	  }

	  // check metadata matches
	  var allMetaMatches = operandsMatch(query, {
	    name: 'meta',
	    fieldValue: function fieldValue(field) {
	      return ele[field]();
	    }
	  });

	  if (!allMetaMatches) {
	    return false;
	  }

	  // check collection
	  if (query.collection != null) {
	    var matchesAny = query.collection.hasElementWithId(ele.id());

	    if (!matchesAny) {
	      return false;
	    }
	  }

	  // check filter function
	  if (query.filter != null && ele.collection().some(query.filter)) {
	    return false;
	  }

	  var isCompound = cy.hasCompoundNodes();
	  var getSource = function getSource() {
	    return ele.source();
	  };
	  var getTarget = function getTarget() {
	    return ele.target();
	  };

	  if (!confirmRelations(query.parent, isCompound, function () {
	    return ele.parent();
	  })) {
	    return false;
	  }

	  if (!confirmRelations(query.ancestor, isCompound, function () {
	    return ele.parents();
	  })) {
	    return false;
	  }

	  if (!confirmRelations(query.child, isCompound, function () {
	    return ele.children();
	  })) {
	    return false;
	  }

	  if (!confirmRelations(query.descendant, isCompound, function () {
	    return ele.descendants();
	  })) {
	    return false;
	  }

	  if (!confirmRelations(query.source, true, getSource)) {
	    return false;
	  }

	  if (!confirmRelations(query.target, true, getTarget)) {
	    return false;
	  }

	  if (query.connectedNodes) {
	    var q0 = query.connectedNodes[0];
	    var q1 = query.connectedNodes[1];

	    if (confirmRelations(q0, true, getSource) && confirmRelations(q1, true, getTarget)) {
	      // match
	    } else if (confirmRelations(q0, true, getTarget) && confirmRelations(q1, true, getSource)) {
	      // match
	    } else {
	      return false;
	    }
	  }

	  // we've reached the end, so we've matched everything for this query
	  return true;
	}; // queryMatches

	// filter an existing collection
	var filter = function filter(collection) {
	  var self = this;
	  var cy = collection.cy();

	  // don't bother trying if it's invalid
	  if (self.invalid()) {
	    return cy.collection();
	  }

	  // for 1 id #foo queries, just get the element
	  if (self.length === 1 && self[0].length === 1 && self[0].ids.length === 1) {
	    return collection.getElementById(self[0].ids[0]).collection();
	  }

	  var selectorFunction = function selectorFunction(element) {
	    for (var j = 0; j < self.length; j++) {
	      var query = self[j];

	      if (queryMatches(query, element)) {
	        return true;
	      }
	    }

	    return false;
	  };

	  if (self.text() == null) {
	    selectorFunction = function selectorFunction() {
	      return true;
	    };
	  }

	  var filteredCollection = collection.filter(selectorFunction);

	  return filteredCollection;
	}; // filter

	// does selector match a single element?
	var matches = function matches(ele) {
	  var self = this;

	  // don't bother trying if it's invalid
	  if (self.invalid()) {
	    return false;
	  }

	  for (var j = 0; j < self.length; j++) {
	    var query = self[j];

	    if (queryMatches(query, ele)) {
	      return true;
	    }
	  }

	  return false;
	}; // filter

	module.exports = { matches: matches, filter: filter };

	/***/ }),
	/* 53 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var Set = __webpack_require__(8);

	var elesfn = {
	  parent: function parent(selector) {
	    var parents = [];

	    // optimisation for single ele call
	    if (this.length === 1) {
	      var parent = this[0]._private.parent;

	      if (parent) {
	        return parent;
	      }
	    }

	    for (var i = 0; i < this.length; i++) {
	      var ele = this[i];
	      var _parent = ele._private.parent;

	      if (_parent) {
	        parents.push(_parent);
	      }
	    }

	    return this.spawn(parents, { unique: true }).filter(selector);
	  },

	  parents: function parents(selector) {
	    var parents = [];

	    var eles = this.parent();
	    while (eles.nonempty()) {
	      for (var i = 0; i < eles.length; i++) {
	        var ele = eles[i];
	        parents.push(ele);
	      }

	      eles = eles.parent();
	    }

	    return this.spawn(parents, { unique: true }).filter(selector);
	  },

	  commonAncestors: function commonAncestors(selector) {
	    var ancestors = void 0;

	    for (var i = 0; i < this.length; i++) {
	      var ele = this[i];
	      var parents = ele.parents();

	      ancestors = ancestors || parents;

	      ancestors = ancestors.intersect(parents); // current list must be common with current ele parents set
	    }

	    return ancestors.filter(selector);
	  },

	  orphans: function orphans(selector) {
	    return this.stdFilter(function (ele) {
	      return ele.isOrphan();
	    }).filter(selector);
	  },

	  nonorphans: function nonorphans(selector) {
	    return this.stdFilter(function (ele) {
	      return ele.isChild();
	    }).filter(selector);
	  },

	  children: function children(selector) {
	    var children = [];

	    for (var i = 0; i < this.length; i++) {
	      var ele = this[i];
	      children = children.concat(ele._private.children);
	    }

	    return this.spawn(children, { unique: true }).filter(selector);
	  },

	  siblings: function siblings(selector) {
	    return this.parent().children().not(this).filter(selector);
	  },

	  isParent: function isParent() {
	    var ele = this[0];

	    if (ele) {
	      return ele.isNode() && ele._private.children.length !== 0;
	    }
	  },

	  isChildless: function isChildless() {
	    var ele = this[0];

	    if (ele) {
	      return ele.isNode() && ele._private.children.length === 0;
	    }
	  },

	  isChild: function isChild() {
	    var ele = this[0];

	    if (ele) {
	      return ele.isNode() && ele._private.parent != null;
	    }
	  },

	  isOrphan: function isOrphan() {
	    var ele = this[0];

	    if (ele) {
	      return ele.isNode() && ele._private.parent == null;
	    }
	  },

	  descendants: function descendants(selector) {
	    var elements = [];

	    function add(eles) {
	      for (var i = 0; i < eles.length; i++) {
	        var ele = eles[i];

	        elements.push(ele);

	        if (ele.children().nonempty()) {
	          add(ele.children());
	        }
	      }
	    }

	    add(this.children());

	    return this.spawn(elements, { unique: true }).filter(selector);
	  }
	};

	function forEachCompound(eles, fn, includeSelf, recursiveStep) {
	  var q = [];
	  var did = new Set();
	  var cy = eles.cy();
	  var hasCompounds = cy.hasCompoundNodes();

	  for (var i = 0; i < eles.length; i++) {
	    var ele = eles[i];

	    if (includeSelf) {
	      q.push(ele);
	    } else if (hasCompounds) {
	      recursiveStep(q, did, ele);
	    }
	  }

	  while (q.length > 0) {
	    var _ele = q.shift();

	    fn(_ele);

	    did.add(_ele.id());

	    if (hasCompounds) {
	      recursiveStep(q, did, _ele);
	    }
	  }

	  return eles;
	}

	function addChildren(q, did, ele) {
	  if (ele.isParent()) {
	    var children = ele._private.children;

	    for (var i = 0; i < children.length; i++) {
	      var child = children[i];

	      if (!did.has(child.id())) {
	        q.push(child);
	      }
	    }
	  }
	}

	// very efficient version of eles.add( eles.descendants() ).forEach()
	// for internal use
	elesfn.forEachDown = function (fn) {
	  var includeSelf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

	  return forEachCompound(this, fn, includeSelf, addChildren);
	};

	function addParent(q, did, ele) {
	  if (ele.isChild()) {
	    var parent = ele._private.parent;

	    if (!did.has(parent.id())) {
	      q.push(parent);
	    }
	  }
	}

	elesfn.forEachUp = function (fn) {
	  var includeSelf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

	  return forEachCompound(this, fn, includeSelf, addParent);
	};

	function addParentAndChildren(q, did, ele) {
	  addParent(q, did, ele);
	  addChildren(q, did, ele);
	}

	elesfn.forEachUpAndDown = function (fn) {
	  var includeSelf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

	  return forEachCompound(this, fn, includeSelf, addParentAndChildren);
	};

	// aliases
	elesfn.ancestors = elesfn.parents;

	module.exports = elesfn;

	/***/ }),
	/* 54 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var define = __webpack_require__(4);
	var fn = void 0,
	    elesfn = void 0;

	fn = elesfn = {

	  data: define.data({
	    field: 'data',
	    bindingEvent: 'data',
	    allowBinding: true,
	    allowSetting: true,
	    settingEvent: 'data',
	    settingTriggersEvent: true,
	    triggerFnName: 'trigger',
	    allowGetting: true,
	    immutableKeys: {
	      'id': true,
	      'source': true,
	      'target': true,
	      'parent': true
	    },
	    updateStyle: true
	  }),

	  removeData: define.removeData({
	    field: 'data',
	    event: 'data',
	    triggerFnName: 'trigger',
	    triggerEvent: true,
	    immutableKeys: {
	      'id': true,
	      'source': true,
	      'target': true,
	      'parent': true
	    },
	    updateStyle: true
	  }),

	  scratch: define.data({
	    field: 'scratch',
	    bindingEvent: 'scratch',
	    allowBinding: true,
	    allowSetting: true,
	    settingEvent: 'scratch',
	    settingTriggersEvent: true,
	    triggerFnName: 'trigger',
	    allowGetting: true,
	    updateStyle: true
	  }),

	  removeScratch: define.removeData({
	    field: 'scratch',
	    event: 'scratch',
	    triggerFnName: 'trigger',
	    triggerEvent: true,
	    updateStyle: true
	  }),

	  rscratch: define.data({
	    field: 'rscratch',
	    allowBinding: false,
	    allowSetting: true,
	    settingTriggersEvent: false,
	    allowGetting: true
	  }),

	  removeRscratch: define.removeData({
	    field: 'rscratch',
	    triggerEvent: false
	  }),

	  id: function id() {
	    var ele = this[0];

	    if (ele) {
	      return ele._private.data.id;
	    }
	  }

	};

	// aliases
	fn.attr = fn.data;
	fn.removeAttr = fn.removeData;

	module.exports = elesfn;

	/***/ }),
	/* 55 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);

	var elesfn = {};

	function defineDegreeFunction(callback) {
	  return function (includeLoops) {
	    var self = this;

	    if (includeLoops === undefined) {
	      includeLoops = true;
	    }

	    if (self.length === 0) {
	      return;
	    }

	    if (self.isNode() && !self.removed()) {
	      var degree = 0;
	      var node = self[0];
	      var connectedEdges = node._private.edges;

	      for (var i = 0; i < connectedEdges.length; i++) {
	        var edge = connectedEdges[i];

	        if (!includeLoops && edge.isLoop()) {
	          continue;
	        }

	        degree += callback(node, edge);
	      }

	      return degree;
	    } else {
	      return;
	    }
	  };
	}

	util.extend(elesfn, {
	  degree: defineDegreeFunction(function (node, edge) {
	    if (edge.source().same(edge.target())) {
	      return 2;
	    } else {
	      return 1;
	    }
	  }),

	  indegree: defineDegreeFunction(function (node, edge) {
	    if (edge.target().same(node)) {
	      return 1;
	    } else {
	      return 0;
	    }
	  }),

	  outdegree: defineDegreeFunction(function (node, edge) {
	    if (edge.source().same(node)) {
	      return 1;
	    } else {
	      return 0;
	    }
	  })
	});

	function defineDegreeBoundsFunction(degreeFn, callback) {
	  return function (includeLoops) {
	    var ret = void 0;
	    var nodes = this.nodes();

	    for (var i = 0; i < nodes.length; i++) {
	      var ele = nodes[i];
	      var degree = ele[degreeFn](includeLoops);
	      if (degree !== undefined && (ret === undefined || callback(degree, ret))) {
	        ret = degree;
	      }
	    }

	    return ret;
	  };
	}

	util.extend(elesfn, {
	  minDegree: defineDegreeBoundsFunction('degree', function (degree, min) {
	    return degree < min;
	  }),

	  maxDegree: defineDegreeBoundsFunction('degree', function (degree, max) {
	    return degree > max;
	  }),

	  minIndegree: defineDegreeBoundsFunction('indegree', function (degree, min) {
	    return degree < min;
	  }),

	  maxIndegree: defineDegreeBoundsFunction('indegree', function (degree, max) {
	    return degree > max;
	  }),

	  minOutdegree: defineDegreeBoundsFunction('outdegree', function (degree, min) {
	    return degree < min;
	  }),

	  maxOutdegree: defineDegreeBoundsFunction('outdegree', function (degree, max) {
	    return degree > max;
	  })
	});

	util.extend(elesfn, {
	  totalDegree: function totalDegree(includeLoops) {
	    var total = 0;
	    var nodes = this.nodes();

	    for (var i = 0; i < nodes.length; i++) {
	      total += nodes[i].degree(includeLoops);
	    }

	    return total;
	  }
	});

	module.exports = elesfn;

	/***/ }),
	/* 56 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var position = __webpack_require__(57);
	var bounds = __webpack_require__(58);
	var widthHeight = __webpack_require__(59);
	var edgePoints = __webpack_require__(60);

	module.exports = util.assign({}, position, bounds, widthHeight, edgePoints);

	/***/ }),
	/* 57 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var define = __webpack_require__(4);
	var is = __webpack_require__(0);
	var math = __webpack_require__(2);
	var fn = void 0,
	    elesfn = void 0;

	var beforePositionSet = function beforePositionSet(eles, newPos) {
	  for (var i = 0; i < eles.length; i++) {
	    var ele = eles[i];

	    if (ele.isParent() && !ele.locked()) {
	      var oldPos = ele._private.position;
	      var delta = {
	        x: newPos.x - oldPos.x,
	        y: newPos.y - oldPos.y
	      };

	      eles.children().shift(delta);
	    }
	  }
	};

	fn = elesfn = {

	  position: define.data({
	    field: 'position',
	    bindingEvent: 'position',
	    allowBinding: true,
	    allowSetting: true,
	    settingEvent: 'position',
	    settingTriggersEvent: true,
	    triggerFnName: 'emitAndNotify',
	    allowGetting: true,
	    validKeys: ['x', 'y'],
	    beforeGet: function beforeGet(ele) {
	      ele.updateCompoundBounds();
	    },
	    beforeSet: beforePositionSet,
	    onSet: function onSet(eles) {
	      eles.dirtyCompoundBoundsCache();
	    },
	    canSet: function canSet(ele) {
	      return !ele.locked();
	    }
	  }),

	  // position but no notification to renderer
	  silentPosition: define.data({
	    field: 'position',
	    bindingEvent: 'position',
	    allowBinding: false,
	    allowSetting: true,
	    settingEvent: 'position',
	    settingTriggersEvent: false,
	    triggerFnName: 'trigger',
	    allowGetting: false,
	    validKeys: ['x', 'y'],
	    beforeSet: beforePositionSet,
	    onSet: function onSet(eles) {
	      eles.dirtyCompoundBoundsCache();
	    },
	    canSet: function canSet(ele) {
	      return !ele.locked();
	    }
	  }),

	  positions: function positions(pos, silent) {
	    if (is.plainObject(pos)) {
	      if (silent) {
	        this.silentPosition(pos);
	      } else {
	        this.position(pos);
	      }
	    } else if (is.fn(pos)) {
	      var _fn = pos;
	      var cy = this.cy();

	      cy.startBatch();

	      for (var i = 0; i < this.length; i++) {
	        var ele = this[i];
	        var _pos = void 0;

	        if (_pos = _fn(ele, i)) {
	          if (silent) {
	            ele.silentPosition(_pos);
	          } else {
	            ele.position(_pos);
	          }
	        }
	      }

	      cy.endBatch();
	    }

	    return this; // chaining
	  },

	  silentPositions: function silentPositions(pos) {
	    return this.positions(pos, true);
	  },

	  shift: function shift(dim, val) {
	    var delta = void 0;

	    if (is.plainObject(dim)) {
	      delta = dim;
	    } else if (is.string(dim) && is.number(val)) {
	      delta = { x: 0, y: 0 };

	      delta[dim] = val;
	    }

	    if (delta != null) {
	      for (var i = 0; i < this.length; i++) {
	        var ele = this[i];
	        var pos = ele.position();

	        ele.position({
	          x: pos.x + delta.x,
	          y: pos.y + delta.y
	        });
	      }
	    }

	    return this;
	  },

	  // get/set the rendered (i.e. on screen) positon of the element
	  renderedPosition: function renderedPosition(dim, val) {
	    var ele = this[0];
	    var cy = this.cy();
	    var zoom = cy.zoom();
	    var pan = cy.pan();
	    var rpos = is.plainObject(dim) ? dim : undefined;
	    var setting = rpos !== undefined || val !== undefined && is.string(dim);

	    if (ele && ele.isNode()) {
	      // must have an element and must be a node to return position
	      if (setting) {
	        for (var i = 0; i < this.length; i++) {
	          var _ele = this[i];

	          if (val !== undefined) {
	            // set one dimension
	            _ele.position(dim, (val - pan[dim]) / zoom);
	          } else if (rpos !== undefined) {
	            // set whole position
	            _ele.position(math.renderedToModelPosition(rpos, zoom, pan));
	          }
	        }
	      } else {
	        // getting
	        var pos = ele.position();
	        rpos = math.modelToRenderedPosition(pos, zoom, pan);

	        if (dim === undefined) {
	          // then return the whole rendered position
	          return rpos;
	        } else {
	          // then return the specified dimension
	          return rpos[dim];
	        }
	      }
	    } else if (!setting) {
	      return undefined; // for empty collection case
	    }

	    return this; // chaining
	  },

	  // get/set the position relative to the parent
	  relativePosition: function relativePosition(dim, val) {
	    var ele = this[0];
	    var cy = this.cy();
	    var ppos = is.plainObject(dim) ? dim : undefined;
	    var setting = ppos !== undefined || val !== undefined && is.string(dim);
	    var hasCompoundNodes = cy.hasCompoundNodes();

	    if (ele && ele.isNode()) {
	      // must have an element and must be a node to return position
	      if (setting) {
	        for (var i = 0; i < this.length; i++) {
	          var _ele2 = this[i];
	          var parent = hasCompoundNodes ? _ele2.parent() : null;
	          var hasParent = parent && parent.length > 0;
	          var relativeToParent = hasParent;

	          if (hasParent) {
	            parent = parent[0];
	          }

	          var origin = relativeToParent ? parent.position() : { x: 0, y: 0 };

	          if (val !== undefined) {
	            // set one dimension
	            _ele2.position(dim, val + origin[dim]);
	          } else if (ppos !== undefined) {
	            // set whole position
	            _ele2.position({
	              x: ppos.x + origin.x,
	              y: ppos.y + origin.y
	            });
	          }
	        }
	      } else {
	        // getting
	        var pos = ele.position();
	        var _parent = hasCompoundNodes ? ele.parent() : null;
	        var _hasParent = _parent && _parent.length > 0;
	        var _relativeToParent = _hasParent;

	        if (_hasParent) {
	          _parent = _parent[0];
	        }

	        var _origin = _relativeToParent ? _parent.position() : { x: 0, y: 0 };

	        ppos = {
	          x: pos.x - _origin.x,
	          y: pos.y - _origin.y
	        };

	        if (dim === undefined) {
	          // then return the whole rendered position
	          return ppos;
	        } else {
	          // then return the specified dimension
	          return ppos[dim];
	        }
	      }
	    } else if (!setting) {
	      return undefined; // for empty collection case
	    }

	    return this; // chaining
	  }
	};

	// aliases
	fn.modelPosition = fn.point = fn.position;
	fn.modelPositions = fn.points = fn.positions;
	fn.renderedPoint = fn.renderedPosition;
	fn.relativePoint = fn.relativePosition;

	module.exports = elesfn;

	/***/ }),
	/* 58 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var util = __webpack_require__(1);
	var math = __webpack_require__(2);
	var fn = void 0,
	    elesfn = void 0;

	fn = elesfn = {};

	elesfn.renderedBoundingBox = function (options) {
	  var bb = this.boundingBox(options);
	  var cy = this.cy();
	  var zoom = cy.zoom();
	  var pan = cy.pan();

	  var x1 = bb.x1 * zoom + pan.x;
	  var x2 = bb.x2 * zoom + pan.x;
	  var y1 = bb.y1 * zoom + pan.y;
	  var y2 = bb.y2 * zoom + pan.y;

	  return {
	    x1: x1,
	    x2: x2,
	    y1: y1,
	    y2: y2,
	    w: x2 - x1,
	    h: y2 - y1
	  };
	};

	elesfn.dirtyCompoundBoundsCache = function () {
	  var cy = this.cy();

	  if (!cy.styleEnabled() || !cy.hasCompoundNodes()) {
	    return this;
	  }

	  this.forEachUp(function (ele) {
	    ele._private.compoundBoundsClean = false;

	    if (ele.isParent()) {
	      ele.emit('bounds');
	    }
	  });

	  return this;
	};

	elesfn.updateCompoundBounds = function () {
	  var cy = this.cy();

	  // save cycles for non compound graphs or when style disabled
	  if (!cy.styleEnabled() || !cy.hasCompoundNodes()) {
	    return this;
	  }

	  // save cycles when batching -- but bounds will be stale (or not exist yet)
	  if (cy.batching()) {
	    return this;
	  }

	  var updated = [];

	  function update(parent) {
	    if (!parent.isParent()) {
	      return;
	    }

	    var _p = parent._private;
	    var children = parent.children();
	    var includeLabels = parent.pstyle('compound-sizing-wrt-labels').value === 'include';

	    var min = {
	      width: {
	        val: parent.pstyle('min-width').pfValue,
	        left: parent.pstyle('min-width-bias-left'),
	        right: parent.pstyle('min-width-bias-right')
	      },
	      height: {
	        val: parent.pstyle('min-height').pfValue,
	        top: parent.pstyle('min-height-bias-top'),
	        bottom: parent.pstyle('min-height-bias-bottom')
	      }
	    };

	    var bb = children.boundingBox({
	      includeLabels: includeLabels,
	      includeOverlays: false,

	      // updating the compound bounds happens outside of the regular
	      // cache cycle (i.e. before fired events)
	      useCache: false
	    });
	    var pos = _p.position;

	    // if children take up zero area then keep position and fall back on stylesheet w/h
	    if (bb.w === 0 || bb.h === 0) {
	      bb = {
	        w: parent.pstyle('width').pfValue,
	        h: parent.pstyle('height').pfValue
	      };

	      bb.x1 = pos.x - bb.w / 2;
	      bb.x2 = pos.x + bb.w / 2;
	      bb.y1 = pos.y - bb.h / 2;
	      bb.y2 = pos.y + bb.h / 2;
	    }

	    function computeBiasValues(propDiff, propBias, propBiasComplement) {
	      var biasDiff = 0;
	      var biasComplementDiff = 0;
	      var biasTotal = propBias + propBiasComplement;

	      if (propDiff > 0 && biasTotal > 0) {
	        biasDiff = propBias / biasTotal * propDiff;
	        biasComplementDiff = propBiasComplement / biasTotal * propDiff;
	      }
	      return {
	        biasDiff: biasDiff,
	        biasComplementDiff: biasComplementDiff
	      };
	    }

	    function computePaddingValues(width, height, paddingObject, relativeTo) {
	      // Assuming percentage is number from 0 to 1
	      if (paddingObject.units === '%') {
	        switch (relativeTo) {
	          case 'width':
	            return width > 0 ? paddingObject.pfValue * width : 0;
	          case 'height':
	            return height > 0 ? paddingObject.pfValue * height : 0;
	          case 'average':
	            return width > 0 && height > 0 ? paddingObject.pfValue * (width + height) / 2 : 0;
	          case 'min':
	            return width > 0 && height > 0 ? width > height ? paddingObject.pfValue * height : paddingObject.pfValue * width : 0;
	          case 'max':
	            return width > 0 && height > 0 ? width > height ? paddingObject.pfValue * width : paddingObject.pfValue * height : 0;
	          default:
	            return 0;
	        }
	      } else if (paddingObject.units === 'px') {
	        return paddingObject.pfValue;
	      } else {
	        return 0;
	      }
	    }

	    var leftVal = min.width.left.value;
	    if (min.width.left.units === 'px' && min.width.val > 0) {
	      leftVal = leftVal * 100 / min.width.val;
	    }
	    var rightVal = min.width.right.value;
	    if (min.width.right.units === 'px' && min.width.val > 0) {
	      rightVal = rightVal * 100 / min.width.val;
	    }

	    var topVal = min.height.top.value;
	    if (min.height.top.units === 'px' && min.height.val > 0) {
	      topVal = topVal * 100 / min.height.val;
	    }

	    var bottomVal = min.height.bottom.value;
	    if (min.height.bottom.units === 'px' && min.height.val > 0) {
	      bottomVal = bottomVal * 100 / min.height.val;
	    }

	    var widthBiasDiffs = computeBiasValues(min.width.val - bb.w, leftVal, rightVal);
	    var diffLeft = widthBiasDiffs.biasDiff;
	    var diffRight = widthBiasDiffs.biasComplementDiff;

	    var heightBiasDiffs = computeBiasValues(min.height.val - bb.h, topVal, bottomVal);
	    var diffTop = heightBiasDiffs.biasDiff;
	    var diffBottom = heightBiasDiffs.biasComplementDiff;

	    _p.autoPadding = computePaddingValues(bb.w, bb.h, parent.pstyle('padding'), parent.pstyle('padding-relative-to').value);

	    _p.autoWidth = Math.max(bb.w, min.width.val);
	    pos.x = (-diffLeft + bb.x1 + bb.x2 + diffRight) / 2;

	    _p.autoHeight = Math.max(bb.h, min.height.val);
	    pos.y = (-diffTop + bb.y1 + bb.y2 + diffBottom) / 2;

	    updated.push(parent);
	  }

	  for (var i = 0; i < this.length; i++) {
	    var ele = this[i];
	    var _p = ele._private;

	    if (!_p.compoundBoundsClean) {
	      update(ele);

	      if (!cy._private.batchingStyle) {
	        _p.compoundBoundsClean = true;
	      }
	    }
	  }

	  return this;
	};

	var noninf = function noninf(x) {
	  if (x === Infinity || x === -Infinity) {
	    return 0;
	  }

	  return x;
	};

	var updateBounds = function updateBounds(b, x1, y1, x2, y2) {
	  // don't update with zero area boxes
	  if (x2 - x1 === 0 || y2 - y1 === 0) {
	    return;
	  }

	  // don't update with null dim
	  if (x1 == null || y1 == null || x2 == null || y2 == null) {
	    return;
	  }

	  b.x1 = x1 < b.x1 ? x1 : b.x1;
	  b.x2 = x2 > b.x2 ? x2 : b.x2;
	  b.y1 = y1 < b.y1 ? y1 : b.y1;
	  b.y2 = y2 > b.y2 ? y2 : b.y2;
	};

	var updateBoundsFromBox = function updateBoundsFromBox(b, b2) {
	  return updateBounds(b, b2.x1, b2.y1, b2.x2, b2.y2);
	};

	var prefixedProperty = function prefixedProperty(obj, field, prefix) {
	  return util.getPrefixedProperty(obj, field, prefix);
	};

	var updateBoundsFromArrow = function updateBoundsFromArrow(bounds, ele, prefix) {
	  if (ele.cy().headless()) {
	    return;
	  }

	  var _p = ele._private;
	  var rstyle = _p.rstyle;
	  var halfArW = rstyle.arrowWidth / 2;
	  var arrowType = ele.pstyle(prefix + '-arrow-shape').value;
	  var x = void 0;
	  var y = void 0;

	  if (arrowType !== 'none') {
	    if (prefix === 'source') {
	      x = rstyle.srcX;
	      y = rstyle.srcY;
	    } else if (prefix === 'target') {
	      x = rstyle.tgtX;
	      y = rstyle.tgtY;
	    } else {
	      x = rstyle.midX;
	      y = rstyle.midY;
	    }

	    updateBounds(bounds, x - halfArW, y - halfArW, x + halfArW, y + halfArW);
	  }
	};

	var updateBoundsFromLabel = function updateBoundsFromLabel(bounds, ele, prefix) {
	  if (ele.cy().headless()) {
	    return;
	  }

	  var prefixDash = void 0;

	  if (prefix) {
	    prefixDash = prefix + '-';
	  } else {
	    prefixDash = '';
	  }

	  var _p = ele._private;
	  var rstyle = _p.rstyle;
	  var label = ele.pstyle(prefixDash + 'label').strValue;

	  if (label) {
	    var halign = ele.pstyle('text-halign');
	    var valign = ele.pstyle('text-valign');
	    var labelWidth = prefixedProperty(rstyle, 'labelWidth', prefix);
	    var labelHeight = prefixedProperty(rstyle, 'labelHeight', prefix);
	    var labelX = prefixedProperty(rstyle, 'labelX', prefix);
	    var labelY = prefixedProperty(rstyle, 'labelY', prefix);
	    var marginX = ele.pstyle(prefixDash + 'text-margin-x').pfValue;
	    var marginY = ele.pstyle(prefixDash + 'text-margin-y').pfValue;
	    var isEdge = ele.isEdge();
	    var rotation = ele.pstyle(prefixDash + 'text-rotation');
	    var outlineWidth = ele.pstyle('text-outline-width').pfValue;
	    var borderWidth = ele.pstyle('text-border-width').pfValue;
	    var halfBorderWidth = borderWidth / 2;
	    var padding = ele.pstyle('text-background-padding').pfValue;

	    var lh = labelHeight + 2 * padding;
	    var lw = labelWidth + 2 * padding;
	    var lw_2 = lw / 2;
	    var lh_2 = lh / 2;
	    var lx1 = void 0,
	        lx2 = void 0,
	        ly1 = void 0,
	        ly2 = void 0;

	    if (isEdge) {
	      lx1 = labelX - lw_2;
	      lx2 = labelX + lw_2;
	      ly1 = labelY - lh_2;
	      ly2 = labelY + lh_2;
	    } else {
	      switch (halign.value) {
	        case 'left':
	          lx1 = labelX - lw;
	          lx2 = labelX;
	          break;

	        case 'center':
	          lx1 = labelX - lw_2;
	          lx2 = labelX + lw_2;
	          break;

	        case 'right':
	          lx1 = labelX;
	          lx2 = labelX + lw;
	          break;
	      }

	      switch (valign.value) {
	        case 'top':
	          ly1 = labelY - lh;
	          ly2 = labelY;
	          break;

	        case 'center':
	          ly1 = labelY - lh_2;
	          ly2 = labelY + lh_2;
	          break;

	        case 'bottom':
	          ly1 = labelY;
	          ly2 = labelY + lh;
	          break;
	      }
	    }

	    var isAutorotate = isEdge && rotation.strValue === 'autorotate';
	    var isPfValue = rotation.pfValue != null && rotation.pfValue !== 0;

	    if (isAutorotate || isPfValue) {
	      var theta = isAutorotate ? prefixedProperty(_p.rstyle, 'labelAngle', prefix) : rotation.pfValue;
	      var cos = Math.cos(theta);
	      var sin = Math.sin(theta);

	      var rotate = function rotate(x, y) {
	        x = x - labelX;
	        y = y - labelY;

	        return {
	          x: x * cos - y * sin + labelX,
	          y: x * sin + y * cos + labelY
	        };
	      };

	      var px1y1 = rotate(lx1, ly1);
	      var px1y2 = rotate(lx1, ly2);
	      var px2y1 = rotate(lx2, ly1);
	      var px2y2 = rotate(lx2, ly2);

	      lx1 = Math.min(px1y1.x, px1y2.x, px2y1.x, px2y2.x);
	      lx2 = Math.max(px1y1.x, px1y2.x, px2y1.x, px2y2.x);
	      ly1 = Math.min(px1y1.y, px1y2.y, px2y1.y, px2y2.y);
	      ly2 = Math.max(px1y1.y, px1y2.y, px2y1.y, px2y2.y);
	    }

	    lx1 += marginX - Math.max(outlineWidth, halfBorderWidth);
	    lx2 += marginX + Math.max(outlineWidth, halfBorderWidth);
	    ly1 += marginY - Math.max(outlineWidth, halfBorderWidth);
	    ly2 += marginY + Math.max(outlineWidth, halfBorderWidth);

	    updateBounds(bounds, lx1, ly1, lx2, ly2);
	  }

	  return bounds;
	};

	// get the bounding box of the elements (in raw model position)
	var boundingBoxImpl = function boundingBoxImpl(ele, options) {
	  var cy = ele._private.cy;
	  var styleEnabled = cy.styleEnabled();
	  var headless = cy.headless();

	  var bounds = {
	    x1: Infinity,
	    y1: Infinity,
	    x2: -Infinity,
	    y2: -Infinity
	  };

	  var _p = ele._private;
	  var display = styleEnabled ? ele.pstyle('display').value : 'element';
	  var isNode = ele.isNode();
	  var isEdge = ele.isEdge();
	  var ex1 = void 0,
	      ex2 = void 0,
	      ey1 = void 0,
	      ey2 = void 0; // extrema of body / lines
	  var x = void 0,
	      y = void 0; // node pos
	  var displayed = display !== 'none';

	  if (displayed) {
	    var overlayOpacity = 0;
	    var overlayPadding = 0;

	    if (styleEnabled && options.includeOverlays) {
	      overlayOpacity = ele.pstyle('overlay-opacity').value;

	      if (overlayOpacity !== 0) {
	        overlayPadding = ele.pstyle('overlay-padding').value;
	      }
	    }

	    var w = 0;
	    var wHalf = 0;

	    if (styleEnabled) {
	      w = ele.pstyle('width').pfValue;
	      wHalf = w / 2;
	    }

	    if (isNode && options.includeNodes) {
	      var pos = ele.position();
	      x = pos.x;
	      y = pos.y;
	      var _w = ele.outerWidth();
	      var halfW = _w / 2;
	      var h = ele.outerHeight();
	      var halfH = h / 2;

	      // handle node dimensions
	      /////////////////////////

	      ex1 = x - halfW - overlayPadding;
	      ex2 = x + halfW + overlayPadding;
	      ey1 = y - halfH - overlayPadding;
	      ey2 = y + halfH + overlayPadding;

	      updateBounds(bounds, ex1, ey1, ex2, ey2);
	    } else if (isEdge && options.includeEdges) {
	      var rstyle = _p.rstyle || {};

	      // handle edge dimensions (rough box estimate)
	      //////////////////////////////////////////////
	      if (styleEnabled && !headless) {
	        ex1 = Math.min(rstyle.srcX, rstyle.midX, rstyle.tgtX);
	        ex2 = Math.max(rstyle.srcX, rstyle.midX, rstyle.tgtX);
	        ey1 = Math.min(rstyle.srcY, rstyle.midY, rstyle.tgtY);
	        ey2 = Math.max(rstyle.srcY, rstyle.midY, rstyle.tgtY);

	        // take into account edge width
	        ex1 -= wHalf;
	        ex2 += wHalf;
	        ey1 -= wHalf;
	        ey2 += wHalf;

	        updateBounds(bounds, ex1, ey1, ex2, ey2);
	      }

	      // precise haystacks
	      ////////////////////
	      if (styleEnabled && !headless && ele.pstyle('curve-style').strValue === 'haystack') {
	        var hpts = rstyle.haystackPts || [];

	        ex1 = hpts[0].x;
	        ey1 = hpts[0].y;
	        ex2 = hpts[1].x;
	        ey2 = hpts[1].y;

	        if (ex1 > ex2) {
	          var temp = ex1;
	          ex1 = ex2;
	          ex2 = temp;
	        }

	        if (ey1 > ey2) {
	          var _temp = ey1;
	          ey1 = ey2;
	          ey2 = _temp;
	        }

	        updateBounds(bounds, ex1 - wHalf, ey1 - wHalf, ex2 + wHalf, ey2 + wHalf);

	        // handle points along edge
	        ///////////////////////////
	      } else {
	        var pts = rstyle.bezierPts || rstyle.linePts || [];

	        for (var j = 0; j < pts.length; j++) {
	          var pt = pts[j];

	          ex1 = pt.x - wHalf;
	          ex2 = pt.x + wHalf;
	          ey1 = pt.y - wHalf;
	          ey2 = pt.y + wHalf;

	          updateBounds(bounds, ex1, ey1, ex2, ey2);
	        }

	        // fallback on source and target positions
	        //////////////////////////////////////////
	        if (pts.length === 0) {
	          var n1 = ele.source();
	          var n1pos = n1.position();

	          var n2 = ele.target();
	          var n2pos = n2.position();

	          ex1 = n1pos.x;
	          ex2 = n2pos.x;
	          ey1 = n1pos.y;
	          ey2 = n2pos.y;

	          if (ex1 > ex2) {
	            var _temp2 = ex1;
	            ex1 = ex2;
	            ex2 = _temp2;
	          }

	          if (ey1 > ey2) {
	            var _temp3 = ey1;
	            ey1 = ey2;
	            ey2 = _temp3;
	          }

	          // take into account edge width
	          ex1 -= wHalf;
	          ex2 += wHalf;
	          ey1 -= wHalf;
	          ey2 += wHalf;

	          updateBounds(bounds, ex1, ey1, ex2, ey2);
	        }
	      }
	    } // edges


	    // handle edge arrow size
	    /////////////////////////

	    if (styleEnabled && options.includeEdges && isEdge) {
	      updateBoundsFromArrow(bounds, ele, 'mid-source', options);
	      updateBoundsFromArrow(bounds, ele, 'mid-target', options);
	      updateBoundsFromArrow(bounds, ele, 'source', options);
	      updateBoundsFromArrow(bounds, ele, 'target', options);
	    }

	    // ghost
	    ////////

	    if (styleEnabled) {
	      var ghost = ele.pstyle('ghost').value === 'yes';

	      if (ghost) {
	        var gx = ele.pstyle('ghost-offset-x').pfValue;
	        var gy = ele.pstyle('ghost-offset-y').pfValue;

	        updateBounds(bounds, bounds.x1 + gx, bounds.y1 + gy, bounds.x2 + gx, bounds.y2 + gy);
	      }
	    }

	    // overlay
	    //////////

	    if (styleEnabled) {

	      ex1 = bounds.x1;
	      ex2 = bounds.x2;
	      ey1 = bounds.y1;
	      ey2 = bounds.y2;

	      updateBounds(bounds, ex1 - overlayPadding, ey1 - overlayPadding, ex2 + overlayPadding, ey2 + overlayPadding);
	    }

	    // handle label dimensions
	    //////////////////////////

	    if (styleEnabled && options.includeLabels) {
	      updateBoundsFromLabel(bounds, ele, null, options);

	      if (isEdge) {
	        updateBoundsFromLabel(bounds, ele, 'source', options);
	        updateBoundsFromLabel(bounds, ele, 'target', options);
	      }
	    } // style enabled for labels
	  } // if displayed

	  bounds.x1 = noninf(bounds.x1);
	  bounds.y1 = noninf(bounds.y1);
	  bounds.x2 = noninf(bounds.x2);
	  bounds.y2 = noninf(bounds.y2);
	  bounds.w = noninf(bounds.x2 - bounds.x1);
	  bounds.h = noninf(bounds.y2 - bounds.y1);

	  // expand bounds by 1 because antialiasing can increase the visual/effective size by 1 on all sides
	  if (bounds.w > 0 && bounds.h > 0 && displayed) {
	    math.expandBoundingBox(bounds, 1);
	  }

	  return bounds;
	};

	var tf = function tf(val) {
	  if (val) {
	    return 't';
	  } else {
	    return 'f';
	  }
	};

	var getKey = function getKey(opts) {
	  var key = '';

	  key += tf(opts.incudeNodes);
	  key += tf(opts.includeEdges);
	  key += tf(opts.includeLabels);
	  key += tf(opts.includeOverlays);

	  return key;
	};

	var cachedBoundingBoxImpl = function cachedBoundingBoxImpl(ele, opts) {
	  var _p = ele._private;
	  var bb = void 0;
	  var headless = ele.cy().headless();
	  var key = opts === defBbOpts ? defBbOptsKey : getKey(opts);

	  if (!opts.useCache || headless || !_p.bbCache || !_p.bbCache[key]) {
	    bb = boundingBoxImpl(ele, opts);

	    if (!headless) {
	      _p.bbCache = _p.bbCache || {};
	      _p.bbCache[key] = bb;
	    }
	  } else {
	    bb = _p.bbCache[key];
	  }

	  return bb;
	};

	var defBbOpts = {
	  includeNodes: true,
	  includeEdges: true,
	  includeLabels: true,
	  includeOverlays: true,
	  useCache: true
	};

	var defBbOptsKey = getKey(defBbOpts);

	function filledBbOpts(options) {
	  return {
	    includeNodes: util.default(options.includeNodes, defBbOpts.includeNodes),
	    includeEdges: util.default(options.includeEdges, defBbOpts.includeEdges),
	    includeLabels: util.default(options.includeLabels, defBbOpts.includeLabels),
	    includeOverlays: util.default(options.includeOverlays, defBbOpts.includeOverlays),
	    useCache: util.default(options.useCache, defBbOpts.useCache)
	  };
	}

	elesfn.boundingBox = function (options) {
	  // the main usecase is ele.boundingBox() for a single element with no/def options
	  // specified s.t. the cache is used, so check for this case to make it faster by
	  // avoiding the overhead of the rest of the function
	  if (this.length === 1 && this[0]._private.bbCache && (options === undefined || options.useCache === undefined || options.useCache === true)) {
	    if (options === undefined) {
	      options = defBbOpts;
	    } else {
	      options = filledBbOpts(options);
	    }

	    return cachedBoundingBoxImpl(this[0], options);
	  }

	  var bounds = {
	    x1: Infinity,
	    y1: Infinity,
	    x2: -Infinity,
	    y2: -Infinity
	  };

	  options = options || util.staticEmptyObject();

	  var opts = filledBbOpts(options);

	  var eles = this;
	  var cy = eles.cy();
	  var styleEnabled = cy.styleEnabled();

	  if (styleEnabled) {
	    this.recalculateRenderedStyle(opts.useCache);
	  }

	  this.updateCompoundBounds();

	  var updatedEdge = {}; // use to avoid duplicated edge updates

	  for (var i = 0; i < eles.length; i++) {
	    var ele = eles[i];

	    if (styleEnabled && ele.isEdge() && ele.pstyle('curve-style').strValue === 'bezier' && !updatedEdge[ele.id()]) {
	      var edges = ele.parallelEdges();

	      for (var j = 0; j < edges.length; j++) {
	        // make all as updated
	        updatedEdge[edges[j].id()] = true;
	      }

	      edges.recalculateRenderedStyle(opts.useCache); // n.b. ele.parallelEdges() single is cached
	    }

	    updateBoundsFromBox(bounds, cachedBoundingBoxImpl(ele, opts));
	  }

	  bounds.x1 = noninf(bounds.x1);
	  bounds.y1 = noninf(bounds.y1);
	  bounds.x2 = noninf(bounds.x2);
	  bounds.y2 = noninf(bounds.y2);
	  bounds.w = noninf(bounds.x2 - bounds.x1);
	  bounds.h = noninf(bounds.y2 - bounds.y1);

	  return bounds;
	};

	// private helper to get bounding box for custom node positions
	// - good for perf in certain cases but currently requires dirtying the rendered style
	// - would be better to not modify the nodes but the nodes are read directly everywhere in the renderer...
	// - try to use for only things like discrete layouts where the node position would change anyway
	elesfn.boundingBoxAt = function (fn) {
	  var nodes = this.nodes();

	  if (is.plainObject(fn)) {
	    var obj = fn;

	    fn = function fn() {
	      return obj;
	    };
	  }

	  // save the current position and set the new one, per node
	  for (var i = 0; i < nodes.length; i++) {
	    var n = nodes[i];
	    var _p = n._private;
	    var pos = _p.position;
	    var newPos = fn.call(n, n, i);

	    _p.bbAtOldPos = { x: pos.x, y: pos.y };

	    if (newPos) {
	      pos.x = newPos.x;
	      pos.y = newPos.y;
	    }
	  }

	  this.emit('dirty'); // let the renderer know we've manually dirtied rendered dim calcs

	  nodes.dirtyCompoundBoundsCache().updateCompoundBounds();

	  var bb = this.boundingBox({ useCache: false });

	  // restore the original position, per node
	  for (var _i = 0; _i < nodes.length; _i++) {
	    var _n = nodes[_i];
	    var _p2 = _n._private;
	    var _pos = _n._private.position;
	    var old = _p2.bbAtOldPos;

	    _pos.x = old.x;
	    _pos.y = old.y;
	  }

	  nodes.dirtyCompoundBoundsCache();

	  this.emit('dirty'); // let the renderer know we've manually dirtied rendered dim calcs

	  return bb;
	};

	fn.boundingbox = fn.boundingBox;
	fn.renderedBoundingbox = fn.renderedBoundingBox;

	module.exports = elesfn;

	/***/ }),
	/* 59 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var fn = void 0,
	    elesfn = void 0;

	fn = elesfn = {};

	var defineDimFns = function defineDimFns(opts) {
	  opts.uppercaseName = util.capitalize(opts.name);
	  opts.autoName = 'auto' + opts.uppercaseName;
	  opts.labelName = 'label' + opts.uppercaseName;
	  opts.outerName = 'outer' + opts.uppercaseName;
	  opts.uppercaseOuterName = util.capitalize(opts.outerName);

	  fn[opts.name] = function dimImpl() {
	    var ele = this[0];
	    var _p = ele._private;
	    var cy = _p.cy;
	    var styleEnabled = cy._private.styleEnabled;

	    if (ele) {
	      if (styleEnabled) {
	        if (ele.isParent()) {
	          ele.updateCompoundBounds();

	          return _p[opts.autoName] || 0;
	        }

	        var d = ele.pstyle(opts.name);

	        switch (d.strValue) {
	          case 'label':
	            ele.recalculateRenderedStyle();

	            return _p.rstyle[opts.labelName] || 0;

	          default:
	            return d.pfValue;
	        }
	      } else {
	        return 1;
	      }
	    }
	  };

	  fn['outer' + opts.uppercaseName] = function outerDimImpl() {
	    var ele = this[0];
	    var _p = ele._private;
	    var cy = _p.cy;
	    var styleEnabled = cy._private.styleEnabled;

	    if (ele) {
	      if (styleEnabled) {
	        var dim = ele[opts.name]();
	        var border = ele.pstyle('border-width').pfValue; // n.b. 1/2 each side
	        var padding = 2 * ele.padding();

	        return dim + border + padding;
	      } else {
	        return 1;
	      }
	    }
	  };

	  fn['rendered' + opts.uppercaseName] = function renderedDimImpl() {
	    var ele = this[0];

	    if (ele) {
	      var d = ele[opts.name]();
	      return d * this.cy().zoom();
	    }
	  };

	  fn['rendered' + opts.uppercaseOuterName] = function renderedOuterDimImpl() {
	    var ele = this[0];

	    if (ele) {
	      var od = ele[opts.outerName]();
	      return od * this.cy().zoom();
	    }
	  };
	};

	defineDimFns({
	  name: 'width'
	});

	defineDimFns({
	  name: 'height'
	});

	elesfn.padding = function () {
	  var ele = this[0];
	  var _p = ele._private;
	  if (ele.isParent()) {
	    ele.updateCompoundBounds();

	    if (_p.autoPadding !== undefined) {
	      return _p.autoPadding;
	    } else {
	      return ele.pstyle('padding').pfValue;
	    }
	  } else {
	    return ele.pstyle('padding').pfValue;
	  }
	};

	module.exports = elesfn;

	/***/ }),
	/* 60 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var ifEdge = function ifEdge(self, then) {
	  if (self.isEdge()) {
	    return then(self.renderer());
	  }
	};

	module.exports = {
	  controlPoints: function controlPoints() {
	    var _this = this;

	    return ifEdge(this, function (renderer) {
	      return renderer.getControlPoints(_this);
	    });
	  },
	  segmentPoints: function segmentPoints() {
	    var _this2 = this;

	    return ifEdge(this, function (renderer) {
	      return renderer.getSegmentPoints(_this2);
	    });
	  },
	  sourceEndpoint: function sourceEndpoint() {
	    var _this3 = this;

	    return ifEdge(this, function (renderer) {
	      return renderer.getSourceEndpoint(_this3);
	    });
	  },
	  targetEndpoint: function targetEndpoint() {
	    var _this4 = this;

	    return ifEdge(this, function (renderer) {
	      return renderer.getTargetEndpoint(_this4);
	    });
	  },
	  midpoint: function midpoint() {
	    var _this5 = this;

	    return ifEdge(this, function (renderer) {
	      return renderer.getEdgeMidpoint(_this5);
	    });
	  }
	};

	/***/ }),
	/* 61 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var Emitter = __webpack_require__(11);
	var define = __webpack_require__(4);
	var is = __webpack_require__(0);
	var util = __webpack_require__(1);
	var Selector = __webpack_require__(6);

	var emitterOptions = {
	  qualifierCompare: function qualifierCompare(selector1, selector2) {
	    if (selector1 == null || selector2 == null) {
	      return selector1 == null && selector2 == null;
	    } else {
	      return selector1.sameText(selector2);
	    }
	  },
	  eventMatches: function eventMatches(ele, listener, eventObj) {
	    var selector = listener.qualifier;

	    if (selector != null) {
	      return ele !== eventObj.target && is.element(eventObj.target) && selector.matches(eventObj.target);
	    }

	    return true;
	  },
	  eventFields: function eventFields(ele) {
	    return {
	      cy: ele.cy(),
	      target: ele
	    };
	  },
	  callbackContext: function callbackContext(ele, listener, eventObj) {
	    return listener.qualifier != null ? eventObj.target : ele;
	  },
	  beforeEmit: function beforeEmit(context, listener /*, eventObj*/) {
	    if (listener.conf && listener.conf.once) {
	      listener.conf.onceCollection.removeListener(listener.event, listener.qualifier, listener.callback);
	    }
	  },
	  bubble: function bubble() {
	    return true;
	  },
	  parent: function parent(ele) {
	    return ele.isChild() ? ele.parent() : ele.cy();
	  }
	};

	var argSelector = function argSelector(arg) {
	  if (is.string(arg)) {
	    return new Selector(arg);
	  } else {
	    return arg;
	  }
	};

	var elesfn = {
	  createEmitter: function createEmitter() {
	    for (var i = 0; i < this.length; i++) {
	      var ele = this[i];
	      var _p = ele._private;

	      if (!_p.emitter) {
	        _p.emitter = new Emitter(util.assign({
	          context: ele
	        }, emitterOptions));
	      }
	    }

	    return this;
	  },

	  emitter: function emitter() {
	    return this._private.emitter;
	  },

	  on: function on(events, selector, callback) {
	    for (var i = 0; i < this.length; i++) {
	      var ele = this[i];

	      ele.emitter().on(events, argSelector(selector), callback);
	    }

	    return this;
	  },

	  removeListener: function removeListener(events, selector, callback) {
	    for (var i = 0; i < this.length; i++) {
	      var ele = this[i];

	      ele.emitter().removeListener(events, argSelector(selector), callback);
	    }

	    return this;
	  },

	  one: function one(events, selector, callback) {
	    for (var i = 0; i < this.length; i++) {
	      var ele = this[i];

	      ele.emitter().one(events, argSelector(selector), callback);
	    }

	    return this;
	  },

	  once: function once(events, selector, callback) {
	    for (var i = 0; i < this.length; i++) {
	      var ele = this[i];

	      ele.emitter().on(events, argSelector(selector), callback, {
	        once: true,
	        onceCollection: this
	      });
	    }
	  },

	  emit: function emit(events, extraParams) {
	    for (var i = 0; i < this.length; i++) {
	      var ele = this[i];

	      ele.emitter().emit(events, extraParams);
	    }

	    return this;
	  },

	  emitAndNotify: function emitAndNotify(event, extraParams) {
	    // for internal use only
	    if (this.length === 0) {
	      return;
	    } // empty collections don't need to notify anything

	    // notify renderer
	    this.cy().notify({
	      type: event,
	      eles: this
	    });

	    this.emit(event, extraParams);

	    return this;
	  }
	};

	define.eventAliasesOn(elesfn);

	module.exports = elesfn;

	/***/ }),
	/* 62 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var Selector = __webpack_require__(6);

	var elesfn = {
	  nodes: function nodes(selector) {
	    return this.filter(function (ele) {
	      return ele.isNode();
	    }).filter(selector);
	  },

	  edges: function edges(selector) {
	    return this.filter(function (ele) {
	      return ele.isEdge();
	    }).filter(selector);
	  },

	  filter: function filter(_filter, thisArg) {
	    if (_filter === undefined) {
	      // check this first b/c it's the most common/performant case
	      return this;
	    } else if (is.string(_filter) || is.elementOrCollection(_filter)) {
	      return new Selector(_filter).filter(this);
	    } else if (is.fn(_filter)) {
	      var filterEles = this.spawn();
	      var eles = this;

	      for (var i = 0; i < eles.length; i++) {
	        var ele = eles[i];
	        var include = thisArg ? _filter.apply(thisArg, [ele, i, eles]) : _filter(ele, i, eles);

	        if (include) {
	          filterEles.merge(ele);
	        }
	      }

	      return filterEles;
	    }

	    return this.spawn(); // if not handled by above, give 'em an empty collection
	  },

	  not: function not(toRemove) {
	    if (!toRemove) {
	      return this;
	    } else {

	      if (is.string(toRemove)) {
	        toRemove = this.filter(toRemove);
	      }

	      var elements = [];
	      var rMap = toRemove._private.map;

	      for (var i = 0; i < this.length; i++) {
	        var element = this[i];

	        var remove = rMap.has(element.id());
	        if (!remove) {
	          elements.push(element);
	        }
	      }

	      return this.spawn(elements);
	    }
	  },

	  absoluteComplement: function absoluteComplement() {
	    var cy = this.cy();

	    return cy.mutableElements().not(this);
	  },

	  intersect: function intersect(other) {
	    // if a selector is specified, then filter by it instead
	    if (is.string(other)) {
	      var selector = other;
	      return this.filter(selector);
	    }

	    var elements = [];
	    var col1 = this;
	    var col2 = other;
	    var col1Smaller = this.length < other.length;
	    var map2 = col1Smaller ? col2._private.map : col1._private.map;
	    var col = col1Smaller ? col1 : col2;

	    for (var i = 0; i < col.length; i++) {
	      var id = col[i]._private.data.id;
	      var entry = map2.get(id);

	      if (entry) {
	        elements.push(entry.ele);
	      }
	    }

	    return this.spawn(elements);
	  },

	  xor: function xor(other) {
	    var cy = this._private.cy;

	    if (is.string(other)) {
	      other = cy.$(other);
	    }

	    var elements = [];
	    var col1 = this;
	    var col2 = other;

	    var add = function add(col, other) {
	      for (var i = 0; i < col.length; i++) {
	        var ele = col[i];
	        var id = ele._private.data.id;
	        var inOther = other.hasElementWithId(id);

	        if (!inOther) {
	          elements.push(ele);
	        }
	      }
	    };

	    add(col1, col2);
	    add(col2, col1);

	    return this.spawn(elements);
	  },

	  diff: function diff(other) {
	    var cy = this._private.cy;

	    if (is.string(other)) {
	      other = cy.$(other);
	    }

	    var left = [];
	    var right = [];
	    var both = [];
	    var col1 = this;
	    var col2 = other;

	    var add = function add(col, other, retEles) {

	      for (var i = 0; i < col.length; i++) {
	        var ele = col[i];
	        var id = ele._private.data.id;
	        var inOther = other.hasElementWithId(id);

	        if (inOther) {
	          both.push(ele);
	        } else {
	          retEles.push(ele);
	        }
	      }
	    };

	    add(col1, col2, left);
	    add(col2, col1, right);

	    return {
	      left: this.spawn(left, { unique: true }),
	      right: this.spawn(right, { unique: true }),
	      both: this.spawn(both, { unique: true })
	    };
	  },

	  add: function add(toAdd) {
	    var cy = this._private.cy;

	    if (!toAdd) {
	      return this;
	    }

	    if (is.string(toAdd)) {
	      var selector = toAdd;
	      toAdd = cy.mutableElements().filter(selector);
	    }

	    var elements = [];

	    for (var i = 0; i < this.length; i++) {
	      elements.push(this[i]);
	    }

	    var map = this._private.map;

	    for (var _i = 0; _i < toAdd.length; _i++) {

	      var add = !map.has(toAdd[_i].id());
	      if (add) {
	        elements.push(toAdd[_i]);
	      }
	    }

	    return this.spawn(elements);
	  },

	  // in place merge on calling collection
	  merge: function merge(toAdd) {
	    var _p = this._private;
	    var cy = _p.cy;

	    if (!toAdd) {
	      return this;
	    }

	    if (toAdd && is.string(toAdd)) {
	      var selector = toAdd;
	      toAdd = cy.mutableElements().filter(selector);
	    }

	    var map = _p.map;

	    for (var i = 0; i < toAdd.length; i++) {
	      var toAddEle = toAdd[i];
	      var id = toAddEle._private.data.id;
	      var add = !map.has(id);

	      if (add) {
	        var index = this.length++;

	        this[index] = toAddEle;

	        map.set(id, { ele: toAddEle, index: index });
	      } else {
	        // replace
	        var _index = map.get(id).index;

	        this[_index] = toAddEle;
	        map.set(id, { ele: toAddEle, index: _index });
	      }
	    }

	    return this; // chaining
	  },

	  // remove single ele in place in calling collection
	  unmergeOne: function unmergeOne(ele) {
	    ele = ele[0];

	    var _p = this._private;
	    var id = ele._private.data.id;
	    var map = _p.map;
	    var entry = map.get(id);

	    if (!entry) {
	      return this; // no need to remove
	    }

	    var i = entry.index;

	    // remove ele
	    this[i] = undefined;
	    map.delete(id);

	    var unmergedLastEle = i === this.length - 1;

	    // replace empty spot with last ele in collection
	    if (this.length > 1 && !unmergedLastEle) {
	      var lastEleI = this.length - 1;
	      var lastEle = this[lastEleI];
	      var lastEleId = lastEle._private.data.id;

	      this[lastEleI] = undefined;
	      this[i] = lastEle;
	      map.set(lastEleId, { ele: lastEle, index: i });
	    }

	    // the collection is now 1 ele smaller
	    this.length--;

	    return this;
	  },

	  // remove eles in place on calling collection
	  unmerge: function unmerge(toRemove) {
	    var cy = this._private.cy;

	    if (!toRemove) {
	      return this;
	    }

	    if (toRemove && is.string(toRemove)) {
	      var selector = toRemove;
	      toRemove = cy.mutableElements().filter(selector);
	    }

	    for (var i = 0; i < toRemove.length; i++) {
	      this.unmergeOne(toRemove[i]);
	    }

	    return this; // chaining
	  },

	  map: function map(mapFn, thisArg) {
	    var arr = [];
	    var eles = this;

	    for (var i = 0; i < eles.length; i++) {
	      var ele = eles[i];
	      var ret = thisArg ? mapFn.apply(thisArg, [ele, i, eles]) : mapFn(ele, i, eles);

	      arr.push(ret);
	    }

	    return arr;
	  },

	  reduce: function reduce(fn, initialValue) {
	    var val = initialValue;
	    var eles = this;

	    for (var i = 0; i < eles.length; i++) {
	      val = fn(val, eles[i], i, eles);
	    }

	    return val;
	  },

	  max: function max(valFn, thisArg) {
	    var max = -Infinity;
	    var maxEle = void 0;
	    var eles = this;

	    for (var i = 0; i < eles.length; i++) {
	      var ele = eles[i];
	      var val = thisArg ? valFn.apply(thisArg, [ele, i, eles]) : valFn(ele, i, eles);

	      if (val > max) {
	        max = val;
	        maxEle = ele;
	      }
	    }

	    return {
	      value: max,
	      ele: maxEle
	    };
	  },

	  min: function min(valFn, thisArg) {
	    var min = Infinity;
	    var minEle = void 0;
	    var eles = this;

	    for (var i = 0; i < eles.length; i++) {
	      var ele = eles[i];
	      var val = thisArg ? valFn.apply(thisArg, [ele, i, eles]) : valFn(ele, i, eles);

	      if (val < min) {
	        min = val;
	        minEle = ele;
	      }
	    }

	    return {
	      value: min,
	      ele: minEle
	    };
	  }
	};

	// aliases
	var fn = elesfn;
	fn['u'] = fn['|'] = fn['+'] = fn.union = fn.or = fn.add;
	fn['\\'] = fn['!'] = fn['-'] = fn.difference = fn.relativeComplement = fn.subtract = fn.not;
	fn['n'] = fn['&'] = fn['.'] = fn.and = fn.intersection = fn.intersect;
	fn['^'] = fn['(+)'] = fn['(-)'] = fn.symmetricDifference = fn.symdiff = fn.xor;
	fn.fnFilter = fn.filterFn = fn.stdFilter = fn.filter;
	fn.complement = fn.abscomp = fn.absoluteComplement;

	module.exports = elesfn;

	/***/ }),
	/* 63 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var elesfn = {
	  isNode: function isNode() {
	    return this.group() === 'nodes';
	  },

	  isEdge: function isEdge() {
	    return this.group() === 'edges';
	  },

	  isLoop: function isLoop() {
	    return this.isEdge() && this.source().id() === this.target().id();
	  },

	  isSimple: function isSimple() {
	    return this.isEdge() && this.source().id() !== this.target().id();
	  },

	  group: function group() {
	    var ele = this[0];

	    if (ele) {
	      return ele._private.group;
	    }
	  }
	};

	module.exports = elesfn;

	/***/ }),
	/* 64 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var zIndexSort = __webpack_require__(17);
	var util = __webpack_require__(1);

	var elesfn = {
	  forEach: function forEach(fn, thisArg) {
	    if (is.fn(fn)) {

	      for (var i = 0; i < this.length; i++) {
	        var ele = this[i];
	        var ret = thisArg ? fn.apply(thisArg, [ele, i, this]) : fn(ele, i, this);

	        if (ret === false) {
	          break;
	        } // exit each early on return false
	      }
	    }

	    return this;
	  },

	  toArray: function toArray() {
	    var array = [];

	    for (var i = 0; i < this.length; i++) {
	      array.push(this[i]);
	    }

	    return array;
	  },

	  slice: function slice(start, end) {
	    var array = [];
	    var thisSize = this.length;

	    if (end == null) {
	      end = thisSize;
	    }

	    if (start == null) {
	      start = 0;
	    }

	    if (start < 0) {
	      start = thisSize + start;
	    }

	    if (end < 0) {
	      end = thisSize + end;
	    }

	    for (var i = start; i >= 0 && i < end && i < thisSize; i++) {
	      array.push(this[i]);
	    }

	    return this.spawn(array);
	  },

	  size: function size() {
	    return this.length;
	  },

	  eq: function eq(i) {
	    return this[i] || this.spawn();
	  },

	  first: function first() {
	    return this[0] || this.spawn();
	  },

	  last: function last() {
	    return this[this.length - 1] || this.spawn();
	  },

	  empty: function empty() {
	    return this.length === 0;
	  },

	  nonempty: function nonempty() {
	    return !this.empty();
	  },

	  sort: function sort(sortFn) {
	    if (!is.fn(sortFn)) {
	      return this;
	    }

	    var sorted = this.toArray().sort(sortFn);

	    return this.spawn(sorted);
	  },

	  sortByZIndex: function sortByZIndex() {
	    return this.sort(zIndexSort);
	  },

	  zDepth: function zDepth() {
	    var ele = this[0];
	    if (!ele) {
	      return undefined;
	    }

	    // let cy = ele.cy();
	    var _p = ele._private;
	    var group = _p.group;

	    if (group === 'nodes') {
	      var depth = _p.data.parent ? ele.parents().size() : 0;

	      if (!ele.isParent()) {
	        return util.MAX_INT - 1; // childless nodes always on top
	      }

	      return depth;
	    } else {
	      var src = _p.source;
	      var tgt = _p.target;
	      var srcDepth = src.zDepth();
	      var tgtDepth = tgt.zDepth();

	      return Math.max(srcDepth, tgtDepth, 0); // depth of deepest parent
	    }
	  }
	};

	elesfn.each = elesfn.forEach;

	module.exports = elesfn;

	/***/ }),
	/* 65 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var util = __webpack_require__(1);
	var Promise = __webpack_require__(5);
	var math = __webpack_require__(2);

	var elesfn = {
	  // Calculates and returns node dimensions { x, y } based on options given
	  layoutDimensions: function layoutDimensions(options) {
	    options = util.assign({
	      nodeDimensionsIncludeLabels: true
	    }, options);

	    if (options.nodeDimensionsIncludeLabels) {
	      var bbDim = this.boundingBox();
	      return {
	        w: bbDim.w,
	        h: bbDim.h
	      };
	    } else {
	      return {
	        w: this.outerWidth(),
	        h: this.outerHeight()
	      };
	    }
	  },

	  // using standard layout options, apply position function (w/ or w/o animation)
	  layoutPositions: function layoutPositions(layout, options, fn) {
	    var nodes = this.nodes();
	    var cy = this.cy();
	    var layoutEles = options.eles; // nodes & edges
	    var getMemoizeKey = function getMemoizeKey(node, i) {
	      return node.id() + '$' + i;
	    };
	    var fnMem = util.memoize(fn, getMemoizeKey); // memoized version of position function

	    layout.emit({ type: 'layoutstart', layout: layout });

	    layout.animations = [];

	    var calculateSpacing = function calculateSpacing(spacing, nodesBb, pos) {
	      var center = {
	        x: nodesBb.x1 + nodesBb.w / 2,
	        y: nodesBb.y1 + nodesBb.h / 2
	      };

	      var spacingVector = { // scale from center of bounding box (not necessarily 0,0)
	        x: (pos.x - center.x) * spacing,
	        y: (pos.y - center.y) * spacing
	      };

	      return {
	        x: center.x + spacingVector.x,
	        y: center.y + spacingVector.y
	      };
	    };

	    var useSpacingFactor = options.spacingFactor && options.spacingFactor !== 1;

	    var spacingBb = function spacingBb() {
	      if (!useSpacingFactor) {
	        return null;
	      }

	      var bb = math.makeBoundingBox();

	      for (var i = 0; i < nodes.length; i++) {
	        var node = nodes[i];
	        var pos = fnMem(node, i);

	        math.expandBoundingBoxByPoint(bb, pos.x, pos.y);
	      }

	      return bb;
	    };

	    var bb = spacingBb();

	    var getFinalPos = util.memoize(function (node, i) {
	      var newPos = fnMem(node, i);
	      var pos = node.position();

	      if (!is.number(pos.x) || !is.number(pos.y)) {
	        node.silentPosition({ x: 0, y: 0 });
	      }

	      if (useSpacingFactor) {
	        var spacing = Math.abs(options.spacingFactor);

	        newPos = calculateSpacing(spacing, bb, newPos);
	      }

	      if (options.transform != null) {
	        newPos = options.transform(node, newPos);
	      }

	      return newPos;
	    }, getMemoizeKey);

	    if (options.animate) {
	      for (var i = 0; i < nodes.length; i++) {
	        var node = nodes[i];
	        var newPos = getFinalPos(node, i);
	        var animateNode = options.animateFilter == null || options.animateFilter(node, i);

	        if (animateNode) {
	          var ani = node.animation({
	            position: newPos,
	            duration: options.animationDuration,
	            easing: options.animationEasing
	          });

	          layout.animations.push(ani);

	          ani.play();
	        } else {
	          node.position(newPos);
	        }
	      }

	      if (options.fit) {
	        var fitAni = cy.animation({
	          fit: {
	            boundingBox: layoutEles.boundingBoxAt(getFinalPos),
	            padding: options.padding
	          },
	          duration: options.animationDuration,
	          easing: options.animationEasing
	        });

	        layout.animations.push(fitAni);

	        fitAni.play();
	      } else if (options.zoom !== undefined && options.pan !== undefined) {
	        var zoomPanAni = cy.animation({
	          zoom: options.zoom,
	          pan: options.pan,
	          duration: options.animationDuration,
	          easing: options.animationEasing
	        });

	        layout.animations.push(zoomPanAni);

	        zoomPanAni.play();
	      }

	      layout.one('layoutready', options.ready);
	      layout.emit({ type: 'layoutready', layout: layout });

	      Promise.all(layout.animations.map(function (ani) {
	        return ani.promise();
	      })).then(function () {
	        layout.one('layoutstop', options.stop);
	        layout.emit({ type: 'layoutstop', layout: layout });
	      });
	    } else {

	      nodes.positions(getFinalPos);

	      if (options.fit) {
	        cy.fit(options.eles, options.padding);
	      }

	      if (options.zoom != null) {
	        cy.zoom(options.zoom);
	      }

	      if (options.pan) {
	        cy.pan(options.pan);
	      }

	      layout.one('layoutready', options.ready);
	      layout.emit({ type: 'layoutready', layout: layout });

	      layout.one('layoutstop', options.stop);
	      layout.emit({ type: 'layoutstop', layout: layout });
	    }

	    return this; // chaining
	  },

	  layout: function layout(options) {
	    var cy = this.cy();

	    return cy.makeLayout(util.extend({}, options, {
	      eles: this
	    }));
	  }

	};

	// aliases:
	elesfn.createLayout = elesfn.makeLayout = elesfn.layout;

	module.exports = elesfn;

	/***/ }),
	/* 66 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);

	function styleCache(key, fn, ele) {
	  var _p = ele._private;
	  var cache = _p.styleCache = _p.styleCache || {};
	  var val;

	  if ((val = cache[key]) != null) {
	    return val;
	  } else {
	    val = cache[key] = fn(ele);

	    return val;
	  }
	}

	function cacheStyleFunction(key, fn) {
	  return function cachedStyleFunction(ele) {
	    return styleCache(key, fn, ele);
	  };
	}

	function cachePrototypeStyleFunction(key, fn) {
	  var selfFn = function selfFn(ele) {
	    return fn.call(ele);
	  };

	  return function cachedPrototypeStyleFunction() {
	    var ele = this[0];

	    if (ele) {
	      return styleCache(key, selfFn, ele);
	    }
	  };
	}

	var elesfn = {

	  recalculateRenderedStyle: function recalculateRenderedStyle(useCache) {
	    var cy = this.cy();
	    var renderer = cy.renderer();
	    var styleEnabled = cy.styleEnabled();

	    if (renderer && styleEnabled) {
	      renderer.recalculateRenderedStyle(this, useCache);
	    }

	    return this;
	  },

	  dirtyStyleCache: function dirtyStyleCache() {
	    var cy = this.cy();
	    var dirty = function dirty(ele) {
	      return ele._private.styleCache = {};
	    };

	    if (cy.hasCompoundNodes()) {
	      var eles = void 0;

	      eles = this.spawnSelf().merge(this.descendants()).merge(this.parents());

	      eles.merge(eles.connectedEdges());

	      eles.forEach(dirty);
	    } else {
	      this.forEach(function (ele) {
	        dirty(ele);

	        ele.connectedEdges().forEach(dirty);
	      });
	    }

	    return this;
	  },

	  // fully updates (recalculates) the style for the elements
	  updateStyle: function updateStyle(notifyRenderer) {
	    var cy = this._private.cy;

	    if (!cy.styleEnabled()) {
	      return this;
	    }

	    if (cy._private.batchingStyle) {
	      var bEles = cy._private.batchStyleEles;

	      bEles.merge(this);

	      return this; // chaining and exit early when batching
	    }

	    var hasCompounds = cy.hasCompoundNodes();
	    var style = cy.style();
	    var updatedEles = this;

	    notifyRenderer = notifyRenderer || notifyRenderer === undefined ? true : false;

	    if (hasCompounds) {
	      // then add everything up and down for compound selector checks
	      updatedEles = this.spawnSelf().merge(this.descendants()).merge(this.parents());
	    }

	    var changedEles = style.apply(updatedEles);

	    changedEles.dirtyStyleCache();
	    changedEles.dirtyCompoundBoundsCache();

	    if (notifyRenderer) {
	      changedEles.emitAndNotify('style'); // let renderer know we changed style
	    } else {
	      changedEles.emit('style'); // just fire the event
	    }

	    return this; // chaining
	  },

	  // just update the mappers in the elements' styles; cheaper than eles.updateStyle()
	  updateMappers: function updateMappers(notifyRenderer) {
	    var cy = this._private.cy;
	    var style = cy.style();
	    notifyRenderer = notifyRenderer || notifyRenderer === undefined ? true : false;

	    if (!cy.styleEnabled()) {
	      return this;
	    }

	    var changedEles = style.updateMappers(this);

	    changedEles.dirtyStyleCache();
	    changedEles.dirtyCompoundBoundsCache();

	    if (notifyRenderer) {
	      changedEles.emitAndNotify('style'); // let renderer know we changed style
	    } else {
	      changedEles.emit('style'); // just fire the event
	    }
	    return this; // chaining
	  },

	  // get the internal parsed style object for the specified property
	  parsedStyle: function parsedStyle(property) {
	    var ele = this[0];
	    var cy = ele.cy();

	    if (!cy.styleEnabled()) {
	      return;
	    }

	    if (ele) {
	      return ele._private.style[property] || cy.style().getDefaultProperty(property);
	    }
	  },

	  numericStyle: function numericStyle(property) {
	    var ele = this[0];

	    if (!ele.cy().styleEnabled()) {
	      return;
	    }

	    if (ele) {
	      var pstyle = ele.pstyle(property);

	      return pstyle.pfValue !== undefined ? pstyle.pfValue : pstyle.value;
	    }
	  },

	  numericStyleUnits: function numericStyleUnits(property) {
	    var ele = this[0];

	    if (!ele.cy().styleEnabled()) {
	      return;
	    }

	    if (ele) {
	      return ele.pstyle(property).units;
	    }
	  },

	  // get the specified css property as a rendered value (i.e. on-screen value)
	  // or get the whole rendered style if no property specified (NB doesn't allow setting)
	  renderedStyle: function renderedStyle(property) {
	    var cy = this.cy();
	    if (!cy.styleEnabled()) {
	      return this;
	    }

	    var ele = this[0];

	    if (ele) {
	      return cy.style().getRenderedStyle(ele, property);
	    }
	  },

	  // read the calculated css style of the element or override the style (via a bypass)
	  style: function style(name, value) {
	    var cy = this.cy();

	    if (!cy.styleEnabled()) {
	      return this;
	    }

	    var updateTransitions = false;
	    var style = cy.style();

	    if (is.plainObject(name)) {
	      // then extend the bypass
	      var props = name;
	      style.applyBypass(this, props, updateTransitions);

	      this.dirtyStyleCache();
	      this.dirtyCompoundBoundsCache();

	      this.emitAndNotify('style'); // let the renderer know we've updated style
	    } else if (is.string(name)) {

	      if (value === undefined) {
	        // then get the property from the style
	        var ele = this[0];

	        if (ele) {
	          return style.getStylePropertyValue(ele, name);
	        } else {
	          // empty collection => can't get any value
	          return;
	        }
	      } else {
	        // then set the bypass with the property value
	        style.applyBypass(this, name, value, updateTransitions);

	        this.dirtyStyleCache();
	        this.dirtyCompoundBoundsCache();

	        this.emitAndNotify('style'); // let the renderer know we've updated style
	      }
	    } else if (name === undefined) {
	      var _ele = this[0];

	      if (_ele) {
	        return style.getRawStyle(_ele);
	      } else {
	        // empty collection => can't get any value
	        return;
	      }
	    }

	    return this; // chaining
	  },

	  removeStyle: function removeStyle(names) {
	    var cy = this.cy();

	    if (!cy.styleEnabled()) {
	      return this;
	    }

	    var updateTransitions = false;
	    var style = cy.style();
	    var eles = this;

	    if (names === undefined) {
	      for (var i = 0; i < eles.length; i++) {
	        var ele = eles[i];

	        style.removeAllBypasses(ele, updateTransitions);
	      }
	    } else {
	      names = names.split(/\s+/);

	      for (var _i = 0; _i < eles.length; _i++) {
	        var _ele2 = eles[_i];

	        style.removeBypasses(_ele2, names, updateTransitions);
	      }
	    }

	    this.dirtyStyleCache();
	    this.dirtyCompoundBoundsCache();

	    this.emitAndNotify('style'); // let the renderer know we've updated style

	    return this; // chaining
	  },

	  show: function show() {
	    this.css('display', 'element');
	    return this; // chaining
	  },

	  hide: function hide() {
	    this.css('display', 'none');
	    return this; // chaining
	  },

	  effectiveOpacity: function effectiveOpacity() {
	    var cy = this.cy();
	    if (!cy.styleEnabled()) {
	      return 1;
	    }

	    var hasCompoundNodes = cy.hasCompoundNodes();
	    var ele = this[0];

	    if (ele) {
	      var _p = ele._private;
	      var parentOpacity = ele.pstyle('opacity').value;

	      if (!hasCompoundNodes) {
	        return parentOpacity;
	      }

	      var parents = !_p.data.parent ? null : ele.parents();

	      if (parents) {
	        for (var i = 0; i < parents.length; i++) {
	          var parent = parents[i];
	          var opacity = parent.pstyle('opacity').value;

	          parentOpacity = opacity * parentOpacity;
	        }
	      }

	      return parentOpacity;
	    }
	  },

	  transparent: function transparent() {
	    var cy = this.cy();
	    if (!cy.styleEnabled()) {
	      return false;
	    }

	    var ele = this[0];
	    var hasCompoundNodes = ele.cy().hasCompoundNodes();

	    if (ele) {
	      if (!hasCompoundNodes) {
	        return ele.pstyle('opacity').value === 0;
	      } else {
	        return ele.effectiveOpacity() === 0;
	      }
	    }
	  },

	  backgrounding: function backgrounding() {
	    var cy = this.cy();
	    if (!cy.styleEnabled()) {
	      return false;
	    }

	    var ele = this[0];

	    return ele._private.backgrounding ? true : false;
	  }

	};

	function checkCompound(ele, parentOk) {
	  var _p = ele._private;
	  var parents = _p.data.parent ? ele.parents() : null;

	  if (parents) {
	    for (var i = 0; i < parents.length; i++) {
	      var parent = parents[i];

	      if (!parentOk(parent)) {
	        return false;
	      }
	    }
	  }

	  return true;
	}

	function defineDerivedStateFunction(specs) {
	  var ok = specs.ok;
	  var edgeOkViaNode = specs.edgeOkViaNode || specs.ok;
	  var parentOk = specs.parentOk || specs.ok;

	  return function () {
	    var cy = this.cy();
	    if (!cy.styleEnabled()) {
	      return true;
	    }

	    var ele = this[0];
	    var hasCompoundNodes = cy.hasCompoundNodes();

	    if (ele) {
	      var _p = ele._private;

	      if (!ok(ele)) {
	        return false;
	      }

	      if (ele.isNode()) {
	        return !hasCompoundNodes || checkCompound(ele, parentOk);
	      } else {
	        var src = _p.source;
	        var tgt = _p.target;

	        return edgeOkViaNode(src) && (!hasCompoundNodes || checkCompound(src, edgeOkViaNode)) && (src === tgt || edgeOkViaNode(tgt) && (!hasCompoundNodes || checkCompound(tgt, edgeOkViaNode)));
	      }
	    }
	  };
	}

	var eleTakesUpSpace = cacheStyleFunction('eleTakesUpSpace', function (ele) {
	  return ele.pstyle('display').value === 'element' && ele.width() !== 0 && (ele.isNode() ? ele.height() !== 0 : true);
	});

	elesfn.takesUpSpace = cachePrototypeStyleFunction('takesUpSpace', defineDerivedStateFunction({
	  ok: eleTakesUpSpace
	}));

	var eleInteractive = cacheStyleFunction('eleInteractive', function (ele) {
	  return ele.pstyle('events').value === 'yes' && ele.pstyle('visibility').value === 'visible' && eleTakesUpSpace(ele);
	});

	var parentInteractive = cacheStyleFunction('parentInteractive', function (parent) {
	  return parent.pstyle('visibility').value === 'visible' && eleTakesUpSpace(parent);
	});

	elesfn.interactive = cachePrototypeStyleFunction('interactive', defineDerivedStateFunction({
	  ok: eleInteractive,
	  parentOk: parentInteractive,
	  edgeOkViaNode: eleTakesUpSpace
	}));

	elesfn.noninteractive = function () {
	  var ele = this[0];

	  if (ele) {
	    return !ele.interactive();
	  }
	};

	var eleVisible = cacheStyleFunction('eleVisible', function (ele) {
	  return ele.pstyle('visibility').value === 'visible' && ele.pstyle('opacity').pfValue !== 0 && eleTakesUpSpace(ele);
	});

	var edgeVisibleViaNode = eleTakesUpSpace;

	elesfn.visible = cachePrototypeStyleFunction('visible', defineDerivedStateFunction({
	  ok: eleVisible,
	  edgeOkViaNode: edgeVisibleViaNode
	}));

	elesfn.hidden = function () {
	  var ele = this[0];

	  if (ele) {
	    return !ele.visible();
	  }
	};

	elesfn.bypass = elesfn.css = elesfn.style;
	elesfn.renderedCss = elesfn.renderedStyle;
	elesfn.removeBypass = elesfn.removeCss = elesfn.removeStyle;
	elesfn.pstyle = elesfn.parsedStyle;

	module.exports = elesfn;

	/***/ }),
	/* 67 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var elesfn = {};

	function defineSwitchFunction(params) {
	  return function () {
	    var args = arguments;
	    var changedEles = [];

	    // e.g. cy.nodes().select( data, handler )
	    if (args.length === 2) {
	      var data = args[0];
	      var handler = args[1];
	      this.on(params.event, data, handler);
	    }

	    // e.g. cy.nodes().select( handler )
	    else if (args.length === 1) {
	        var _handler = args[0];
	        this.on(params.event, _handler);
	      }

	      // e.g. cy.nodes().select()
	      else if (args.length === 0) {
	          for (var i = 0; i < this.length; i++) {
	            var ele = this[i];
	            var able = !params.ableField || ele._private[params.ableField];
	            var changed = ele._private[params.field] != params.value;

	            if (params.overrideAble) {
	              var overrideAble = params.overrideAble(ele);

	              if (overrideAble !== undefined) {
	                able = overrideAble;

	                if (!overrideAble) {
	                  return this;
	                } // to save cycles assume not able for all on override
	              }
	            }

	            if (able) {
	              ele._private[params.field] = params.value;

	              if (changed) {
	                changedEles.push(ele);
	              }
	            }
	          }

	          var changedColl = this.spawn(changedEles);
	          changedColl.updateStyle(); // change of state => possible change of style
	          changedColl.emit(params.event);
	        }

	    return this;
	  };
	}

	function defineSwitchSet(params) {
	  elesfn[params.field] = function () {
	    var ele = this[0];

	    if (ele) {
	      if (params.overrideField) {
	        var val = params.overrideField(ele);

	        if (val !== undefined) {
	          return val;
	        }
	      }

	      return ele._private[params.field];
	    }
	  };

	  elesfn[params.on] = defineSwitchFunction({
	    event: params.on,
	    field: params.field,
	    ableField: params.ableField,
	    overrideAble: params.overrideAble,
	    value: true
	  });

	  elesfn[params.off] = defineSwitchFunction({
	    event: params.off,
	    field: params.field,
	    ableField: params.ableField,
	    overrideAble: params.overrideAble,
	    value: false
	  });
	}

	defineSwitchSet({
	  field: 'locked',
	  overrideField: function overrideField(ele) {
	    return ele.cy().autolock() ? true : undefined;
	  },
	  on: 'lock',
	  off: 'unlock'
	});

	defineSwitchSet({
	  field: 'grabbable',
	  overrideField: function overrideField(ele) {
	    return ele.cy().autoungrabify() ? false : undefined;
	  },
	  on: 'grabify',
	  off: 'ungrabify'
	});

	defineSwitchSet({
	  field: 'selected',
	  ableField: 'selectable',
	  overrideAble: function overrideAble(ele) {
	    return ele.cy().autounselectify() ? false : undefined;
	  },
	  on: 'select',
	  off: 'unselect'
	});

	defineSwitchSet({
	  field: 'selectable',
	  overrideField: function overrideField(ele) {
	    return ele.cy().autounselectify() ? false : undefined;
	  },
	  on: 'selectify',
	  off: 'unselectify'
	});

	elesfn.deselect = elesfn.unselect;

	elesfn.grabbed = function () {
	  var ele = this[0];
	  if (ele) {
	    return ele._private.grabbed;
	  }
	};

	defineSwitchSet({
	  field: 'active',
	  on: 'activate',
	  off: 'unactivate'
	});

	elesfn.inactive = function () {
	  var ele = this[0];
	  if (ele) {
	    return !ele._private.active;
	  }
	};

	module.exports = elesfn;

	/***/ }),
	/* 68 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var is = __webpack_require__(0);

	var elesfn = {};

	var cache = function cache(fn, name) {
	  return function traversalCache(arg1, arg2, arg3, arg4) {
	    var selectorOrEles = arg1;
	    var eles = this;
	    var key = void 0;

	    if (selectorOrEles == null) {
	      key = 'null';
	    } else if (is.elementOrCollection(selectorOrEles) && selectorOrEles.length === 1) {
	      key = '#' + selectorOrEles.id();
	    }

	    if (eles.length === 1 && key) {
	      var _p = eles[0]._private;
	      var tch = _p.traversalCache = _p.traversalCache || {};
	      var ch = tch[name] = tch[name] || {};
	      var cacheHit = ch[key];

	      if (cacheHit) {
	        return cacheHit;
	      } else {
	        return ch[key] = fn.call(eles, arg1, arg2, arg3, arg4);
	      }
	    } else {
	      return fn.call(eles, arg1, arg2, arg3, arg4);
	    }
	  };
	};

	// DAG functions
	////////////////

	var defineDagExtremity = function defineDagExtremity(params) {
	  return function dagExtremityImpl(selector) {
	    var eles = this;
	    var ret = [];

	    for (var i = 0; i < eles.length; i++) {
	      var ele = eles[i];
	      if (!ele.isNode()) {
	        continue;
	      }

	      var disqualified = false;
	      var edges = ele.connectedEdges();

	      for (var j = 0; j < edges.length; j++) {
	        var edge = edges[j];
	        var src = edge.source();
	        var tgt = edge.target();

	        if (params.noIncomingEdges && tgt === ele && src !== ele || params.noOutgoingEdges && src === ele && tgt !== ele) {
	          disqualified = true;
	          break;
	        }
	      }

	      if (!disqualified) {
	        ret.push(ele);
	      }
	    }

	    return this.spawn(ret, { unique: true }).filter(selector);
	  };
	};

	var defineDagOneHop = function defineDagOneHop(params) {
	  return function (selector) {
	    var eles = this;
	    var oEles = [];

	    for (var i = 0; i < eles.length; i++) {
	      var ele = eles[i];

	      if (!ele.isNode()) {
	        continue;
	      }

	      var edges = ele.connectedEdges();
	      for (var j = 0; j < edges.length; j++) {
	        var edge = edges[j];
	        var src = edge.source();
	        var tgt = edge.target();

	        if (params.outgoing && src === ele) {
	          oEles.push(edge);
	          oEles.push(tgt);
	        } else if (params.incoming && tgt === ele) {
	          oEles.push(edge);
	          oEles.push(src);
	        }
	      }
	    }

	    return this.spawn(oEles, { unique: true }).filter(selector);
	  };
	};

	var defineDagAllHops = function defineDagAllHops(params) {
	  return function (selector) {
	    var eles = this;
	    var sEles = [];
	    var sElesIds = {};

	    for (;;) {
	      var next = params.outgoing ? eles.outgoers() : eles.incomers();

	      if (next.length === 0) {
	        break;
	      } // done if none left

	      var newNext = false;
	      for (var i = 0; i < next.length; i++) {
	        var n = next[i];
	        var nid = n.id();

	        if (!sElesIds[nid]) {
	          sElesIds[nid] = true;
	          sEles.push(n);
	          newNext = true;
	        }
	      }

	      if (!newNext) {
	        break;
	      } // done if touched all outgoers already

	      eles = next;
	    }

	    return this.spawn(sEles, { unique: true }).filter(selector);
	  };
	};

	elesfn.clearTraversalCache = function () {
	  for (var i = 0; i < this.length; i++) {
	    this[i]._private.traversalCache = null;
	  }
	};

	util.extend(elesfn, {
	  // get the root nodes in the DAG
	  roots: defineDagExtremity({ noIncomingEdges: true }),

	  // get the leaf nodes in the DAG
	  leaves: defineDagExtremity({ noOutgoingEdges: true }),

	  // normally called children in graph theory
	  // these nodes =edges=> outgoing nodes
	  outgoers: cache(defineDagOneHop({ outgoing: true }), 'outgoers'),

	  // aka DAG descendants
	  successors: defineDagAllHops({ outgoing: true }),

	  // normally called parents in graph theory
	  // these nodes <=edges= incoming nodes
	  incomers: cache(defineDagOneHop({ incoming: true }), 'incomers'),

	  // aka DAG ancestors
	  predecessors: defineDagAllHops({ incoming: true })
	});

	// Neighbourhood functions
	//////////////////////////

	util.extend(elesfn, {
	  neighborhood: cache(function (selector) {
	    var elements = [];
	    var nodes = this.nodes();

	    for (var i = 0; i < nodes.length; i++) {
	      // for all nodes
	      var node = nodes[i];
	      var connectedEdges = node.connectedEdges();

	      // for each connected edge, add the edge and the other node
	      for (var j = 0; j < connectedEdges.length; j++) {
	        var edge = connectedEdges[j];
	        var src = edge.source();
	        var tgt = edge.target();
	        var otherNode = node === src ? tgt : src;

	        // need check in case of loop
	        if (otherNode.length > 0) {
	          elements.push(otherNode[0]); // add node 1 hop away
	        }

	        // add connected edge
	        elements.push(edge[0]);
	      }
	    }

	    return this.spawn(elements, { unique: true }).filter(selector);
	  }, 'neighborhood'),

	  closedNeighborhood: function closedNeighborhood(selector) {
	    return this.neighborhood().add(this).filter(selector);
	  },

	  openNeighborhood: function openNeighborhood(selector) {
	    return this.neighborhood(selector);
	  }
	});

	// aliases
	elesfn.neighbourhood = elesfn.neighborhood;
	elesfn.closedNeighbourhood = elesfn.closedNeighborhood;
	elesfn.openNeighbourhood = elesfn.openNeighborhood;

	// Edge functions
	/////////////////

	util.extend(elesfn, {
	  source: cache(function sourceImpl(selector) {
	    var ele = this[0];
	    var src = void 0;

	    if (ele) {
	      src = ele._private.source || ele.cy().collection();
	    }

	    return src && selector ? src.filter(selector) : src;
	  }, 'source'),

	  target: cache(function targetImpl(selector) {
	    var ele = this[0];
	    var tgt = void 0;

	    if (ele) {
	      tgt = ele._private.target || ele.cy().collection();
	    }

	    return tgt && selector ? tgt.filter(selector) : tgt;
	  }, 'target'),

	  sources: defineSourceFunction({
	    attr: 'source'
	  }),

	  targets: defineSourceFunction({
	    attr: 'target'
	  })
	});

	function defineSourceFunction(params) {
	  return function sourceImpl(selector) {
	    var sources = [];

	    for (var i = 0; i < this.length; i++) {
	      var ele = this[i];
	      var src = ele._private[params.attr];

	      if (src) {
	        sources.push(src);
	      }
	    }

	    return this.spawn(sources, { unique: true }).filter(selector);
	  };
	}

	util.extend(elesfn, {
	  edgesWith: cache(defineEdgesWithFunction(), 'edgesWith'),

	  edgesTo: cache(defineEdgesWithFunction({
	    thisIsSrc: true
	  }), 'edgesTo')
	});

	function defineEdgesWithFunction(params) {

	  return function edgesWithImpl(otherNodes) {
	    var elements = [];
	    var cy = this._private.cy;
	    var p = params || {};

	    // get elements if a selector is specified
	    if (is.string(otherNodes)) {
	      otherNodes = cy.$(otherNodes);
	    }

	    for (var h = 0; h < otherNodes.length; h++) {
	      var edges = otherNodes[h]._private.edges;

	      for (var i = 0; i < edges.length; i++) {
	        var edge = edges[i];
	        var edgeData = edge._private.data;
	        var thisToOther = this.hasElementWithId(edgeData.source) && otherNodes.hasElementWithId(edgeData.target);
	        var otherToThis = otherNodes.hasElementWithId(edgeData.source) && this.hasElementWithId(edgeData.target);
	        var edgeConnectsThisAndOther = thisToOther || otherToThis;

	        if (!edgeConnectsThisAndOther) {
	          continue;
	        }

	        if (p.thisIsSrc || p.thisIsTgt) {
	          if (p.thisIsSrc && !thisToOther) {
	            continue;
	          }

	          if (p.thisIsTgt && !otherToThis) {
	            continue;
	          }
	        }

	        elements.push(edge);
	      }
	    }

	    return this.spawn(elements, { unique: true });
	  };
	}

	util.extend(elesfn, {
	  connectedEdges: cache(function (selector) {
	    var retEles = [];

	    var eles = this;
	    for (var i = 0; i < eles.length; i++) {
	      var node = eles[i];
	      if (!node.isNode()) {
	        continue;
	      }

	      var edges = node._private.edges;

	      for (var j = 0; j < edges.length; j++) {
	        var edge = edges[j];
	        retEles.push(edge);
	      }
	    }

	    return this.spawn(retEles, { unique: true }).filter(selector);
	  }, 'connectedEdges'),

	  connectedNodes: cache(function (selector) {
	    var retEles = [];

	    var eles = this;
	    for (var i = 0; i < eles.length; i++) {
	      var edge = eles[i];
	      if (!edge.isEdge()) {
	        continue;
	      }

	      retEles.push(edge.source()[0]);
	      retEles.push(edge.target()[0]);
	    }

	    return this.spawn(retEles, { unique: true }).filter(selector);
	  }, 'connectedNodes'),

	  parallelEdges: cache(defineParallelEdgesFunction(), 'parallelEdges'),

	  codirectedEdges: cache(defineParallelEdgesFunction({
	    codirected: true
	  }), 'codirectedEdges')
	});

	function defineParallelEdgesFunction(params) {
	  var defaults = {
	    codirected: false
	  };
	  params = util.extend({}, defaults, params);

	  return function parallelEdgesImpl(selector) {
	    // micro-optimised for renderer
	    var elements = [];
	    var edges = this.edges();
	    var p = params;

	    // look at all the edges in the collection
	    for (var i = 0; i < edges.length; i++) {
	      var edge1 = edges[i];
	      var edge1_p = edge1._private;
	      var src1 = edge1_p.source;
	      var srcid1 = src1._private.data.id;
	      var tgtid1 = edge1_p.data.target;
	      var srcEdges1 = src1._private.edges;

	      // look at edges connected to the src node of this edge
	      for (var j = 0; j < srcEdges1.length; j++) {
	        var edge2 = srcEdges1[j];
	        var edge2data = edge2._private.data;
	        var tgtid2 = edge2data.target;
	        var srcid2 = edge2data.source;

	        var codirected = tgtid2 === tgtid1 && srcid2 === srcid1;
	        var oppdirected = srcid1 === tgtid2 && tgtid1 === srcid2;

	        if (p.codirected && codirected || !p.codirected && (codirected || oppdirected)) {
	          elements.push(edge2);
	        }
	      }
	    }

	    return this.spawn(elements, { unique: true }).filter(selector);
	  };
	}

	// Misc functions
	/////////////////

	util.extend(elesfn, {
	  components: function components() {
	    var self = this;
	    var cy = self.cy();
	    var visited = self.spawn();
	    var unvisited = self.nodes().spawnSelf();
	    var components = [];

	    var visitInComponent = function visitInComponent(node, component) {
	      visited.merge(node);
	      unvisited.unmerge(node);
	      component.merge(node);
	    };

	    if (unvisited.empty()) {
	      return self.spawn();
	    }

	    var _loop = function _loop() {
	      var component = cy.collection();
	      components.push(component);

	      var root = unvisited[0];
	      visitInComponent(root, component);

	      self.bfs({
	        directed: false,
	        roots: root,
	        visit: function visit(v, e, u, i, depth) {
	          visitInComponent(v, component);
	        }
	      });
	    };

	    do {
	      _loop();
	    } while (unvisited.length > 0);

	    return components.map(function (component) {
	      var connectedEdges = component.connectedEdges().stdFilter(function (edge) {
	        return component.anySame(edge.source()) && component.anySame(edge.target());
	      });

	      return component.union(connectedEdges);
	    });
	  }
	});

	module.exports = elesfn;

	/***/ }),
	/* 69 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var util = __webpack_require__(1);
	var Collection = __webpack_require__(7);
	var Element = __webpack_require__(14);

	var corefn = {
	  add: function add(opts) {

	    var elements = void 0;
	    var cy = this;

	    // add the elements
	    if (is.elementOrCollection(opts)) {
	      var eles = opts;

	      if (eles._private.cy === cy) {
	        // same instance => just restore
	        elements = eles.restore();
	      } else {
	        // otherwise, copy from json
	        var jsons = [];

	        for (var i = 0; i < eles.length; i++) {
	          var ele = eles[i];
	          jsons.push(ele.json());
	        }

	        elements = new Collection(cy, jsons);
	      }
	    }

	    // specify an array of options
	    else if (is.array(opts)) {
	        var _jsons = opts;

	        elements = new Collection(cy, _jsons);
	      }

	      // specify via opts.nodes and opts.edges
	      else if (is.plainObject(opts) && (is.array(opts.nodes) || is.array(opts.edges))) {
	          var elesByGroup = opts;
	          var _jsons2 = [];

	          var grs = ['nodes', 'edges'];
	          for (var _i = 0, il = grs.length; _i < il; _i++) {
	            var group = grs[_i];
	            var elesArray = elesByGroup[group];

	            if (is.array(elesArray)) {

	              for (var j = 0, jl = elesArray.length; j < jl; j++) {
	                var json = util.extend({ group: group }, elesArray[j]);

	                _jsons2.push(json);
	              }
	            }
	          }

	          elements = new Collection(cy, _jsons2);
	        }

	        // specify options for one element
	        else {
	            var _json = opts;
	            elements = new Element(cy, _json).collection();
	          }

	    return elements;
	  },

	  remove: function remove(collection) {
	    if (is.elementOrCollection(collection)) {
	      // already have right ref
	    } else if (is.string(collection)) {
	      var selector = collection;
	      collection = this.$(selector);
	    }

	    return collection.remove();
	  }
	};

	module.exports = corefn;

	/***/ }),
	/* 70 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var define = __webpack_require__(4);
	var util = __webpack_require__(1);
	var stepAll = __webpack_require__(71);

	var corefn = {

	  // pull in animation functions
	  animate: define.animate(),
	  animation: define.animation(),
	  animated: define.animated(),
	  clearQueue: define.clearQueue(),
	  delay: define.delay(),
	  delayAnimation: define.delayAnimation(),
	  stop: define.stop(),

	  addToAnimationPool: function addToAnimationPool(eles) {
	    var cy = this;

	    if (!cy.styleEnabled()) {
	      return;
	    } // save cycles when no style used

	    cy._private.aniEles.merge(eles);
	  },

	  stopAnimationLoop: function stopAnimationLoop() {
	    this._private.animationsRunning = false;
	  },

	  startAnimationLoop: function startAnimationLoop() {
	    var cy = this;

	    cy._private.animationsRunning = true;

	    if (!cy.styleEnabled()) {
	      return;
	    } // save cycles when no style used

	    // NB the animation loop will exec in headless environments if style enabled
	    // and explicit cy.destroy() is necessary to stop the loop

	    function headlessStep() {
	      if (!cy._private.animationsRunning) {
	        return;
	      }

	      util.requestAnimationFrame(function animationStep(now) {
	        stepAll(now, cy);
	        headlessStep();
	      });
	    }

	    var renderer = cy.renderer();

	    if (renderer && renderer.beforeRender) {
	      // let the renderer schedule animations
	      renderer.beforeRender(function rendererAnimationStep(willDraw, now) {
	        stepAll(now, cy);
	      }, renderer.beforeRenderPriorities.animations);
	    } else {
	      // manage the animation loop ourselves
	      headlessStep(); // first call
	    }
	  }

	};

	module.exports = corefn;

	/***/ }),
	/* 71 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var step = __webpack_require__(72);
	var startAnimation = __webpack_require__(77);

	function stepAll(now, cy) {
	  var eles = cy._private.aniEles;
	  var doneEles = [];

	  function stepOne(ele, isCore) {
	    var _p = ele._private;
	    var current = _p.animation.current;
	    var queue = _p.animation.queue;
	    var ranAnis = false;

	    // cancel all animations on display:none ele
	    if (!isCore && ele.pstyle('display').value === 'none') {
	      // put all current and queue animations in this tick's current list
	      // and empty the lists for the element
	      current = current.splice(0, current.length).concat(queue.splice(0, queue.length));

	      // stop all animations
	      for (var i = 0; i < current.length; i++) {
	        current[i].stop();
	      }
	    }

	    // if nothing currently animating, get something from the queue
	    if (current.length === 0) {
	      var next = queue.shift();

	      if (next) {
	        current.push(next);
	      }
	    }

	    var callbacks = function callbacks(_callbacks) {
	      for (var j = _callbacks.length - 1; j >= 0; j--) {
	        var cb = _callbacks[j];

	        cb();
	      }

	      _callbacks.splice(0, _callbacks.length);
	    };

	    // step and remove if done
	    for (var _i = current.length - 1; _i >= 0; _i--) {
	      var ani = current[_i];
	      var ani_p = ani._private;

	      if (ani_p.stopped) {
	        current.splice(_i, 1);

	        ani_p.hooked = false;
	        ani_p.playing = false;
	        ani_p.started = false;

	        callbacks(ani_p.frames);

	        continue;
	      }

	      if (!ani_p.playing && !ani_p.applying) {
	        continue;
	      }

	      // an apply() while playing shouldn't do anything
	      if (ani_p.playing && ani_p.applying) {
	        ani_p.applying = false;
	      }

	      if (!ani_p.started) {
	        startAnimation(ele, ani, now, isCore);
	      }

	      step(ele, ani, now, isCore);

	      if (ani_p.applying) {
	        ani_p.applying = false;
	      }

	      callbacks(ani_p.frames);

	      if (ani.completed()) {
	        current.splice(_i, 1);

	        ani_p.hooked = false;
	        ani_p.playing = false;
	        ani_p.started = false;

	        callbacks(ani_p.completes);
	      }

	      ranAnis = true;
	    }

	    if (!isCore && current.length === 0 && queue.length === 0) {
	      doneEles.push(ele);
	    }

	    return ranAnis;
	  } // stepElement

	  // handle all eles
	  var ranEleAni = false;
	  for (var e = 0; e < eles.length; e++) {
	    var ele = eles[e];
	    var handledThisEle = stepOne(ele);

	    ranEleAni = ranEleAni || handledThisEle;
	  } // each element

	  var ranCoreAni = stepOne(cy, true);

	  // notify renderer
	  if (ranEleAni || ranCoreAni) {
	    if (eles.length > 0) {
	      eles.dirtyCompoundBoundsCache();

	      cy.notify({
	        type: 'draw',
	        eles: eles
	      });
	    } else {
	      cy.notify({
	        type: 'draw'
	      });
	    }
	  }

	  // remove elements from list of currently animating if its queues are empty
	  eles.unmerge(doneEles);

	  cy.emit('step');
	} // stepAll

	module.exports = stepAll;

	/***/ }),
	/* 72 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var easings = __webpack_require__(73);
	var ease = __webpack_require__(76);
	var is = __webpack_require__(0);

	function step(self, ani, now, isCore) {
	  var isEles = !isCore;
	  var _p = self._private;
	  var ani_p = ani._private;
	  var pEasing = ani_p.easing;
	  var startTime = ani_p.startTime;
	  var cy = isCore ? self : self.cy();
	  var style = cy.style();

	  if (!ani_p.easingImpl) {

	    if (pEasing == null) {
	      // use default
	      ani_p.easingImpl = easings['linear'];
	    } else {
	      // then define w/ name
	      var easingVals = void 0;

	      if (is.string(pEasing)) {
	        var easingProp = style.parse('transition-timing-function', pEasing);

	        easingVals = easingProp.value;
	      } else {
	        // then assume preparsed array
	        easingVals = pEasing;
	      }

	      var name = void 0,
	          args = void 0;

	      if (is.string(easingVals)) {
	        name = easingVals;
	        args = [];
	      } else {
	        name = easingVals[1];
	        args = easingVals.slice(2).map(function (n) {
	          return +n;
	        });
	      }

	      if (args.length > 0) {
	        // create with args
	        if (name === 'spring') {
	          args.push(ani_p.duration); // need duration to generate spring
	        }

	        ani_p.easingImpl = easings[name].apply(null, args);
	      } else {
	        // static impl by name
	        ani_p.easingImpl = easings[name];
	      }
	    }
	  }

	  var easing = ani_p.easingImpl;
	  var percent = void 0;

	  if (ani_p.duration === 0) {
	    percent = 1;
	  } else {
	    percent = (now - startTime) / ani_p.duration;
	  }

	  if (ani_p.applying) {
	    percent = ani_p.progress;
	  }

	  if (percent < 0) {
	    percent = 0;
	  } else if (percent > 1) {
	    percent = 1;
	  }

	  if (ani_p.delay == null) {
	    // then update

	    var startPos = ani_p.startPosition;
	    var endPos = ani_p.position;

	    if (endPos && isEles && !self.locked()) {
	      var pos = self.position();

	      if (valid(startPos.x, endPos.x)) {
	        pos.x = ease(startPos.x, endPos.x, percent, easing);
	      }

	      if (valid(startPos.y, endPos.y)) {
	        pos.y = ease(startPos.y, endPos.y, percent, easing);
	      }

	      self.emit('position');
	    }

	    var startPan = ani_p.startPan;
	    var endPan = ani_p.pan;
	    var pan = _p.pan;
	    var animatingPan = endPan != null && isCore;
	    if (animatingPan) {
	      if (valid(startPan.x, endPan.x)) {
	        pan.x = ease(startPan.x, endPan.x, percent, easing);
	      }

	      if (valid(startPan.y, endPan.y)) {
	        pan.y = ease(startPan.y, endPan.y, percent, easing);
	      }

	      self.emit('pan');
	    }

	    var startZoom = ani_p.startZoom;
	    var endZoom = ani_p.zoom;
	    var animatingZoom = endZoom != null && isCore;
	    if (animatingZoom) {
	      if (valid(startZoom, endZoom)) {
	        _p.zoom = ease(startZoom, endZoom, percent, easing);
	      }

	      self.emit('zoom');
	    }

	    if (animatingPan || animatingZoom) {
	      self.emit('viewport');
	    }

	    var props = ani_p.style;
	    if (props && props.length > 0 && isEles) {
	      for (var i = 0; i < props.length; i++) {
	        var prop = props[i];
	        var _name = prop.name;
	        var end = prop;
	        var start = ani_p.startStyle[_name];
	        var propSpec = style.properties[start.name];
	        var easedVal = ease(start, end, percent, easing, propSpec);

	        style.overrideBypass(self, _name, easedVal);
	      } // for props

	      self.emit('style');
	    } // if
	  }

	  ani_p.progress = percent;

	  return percent;
	}

	function valid(start, end) {
	  if (start == null || end == null) {
	    return false;
	  }

	  if (is.number(start) && is.number(end)) {
	    return true;
	  } else if (start && end) {
	    return true;
	  }

	  return false;
	}

	module.exports = step;

	/***/ }),
	/* 73 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var generateCubicBezier = __webpack_require__(74);
	var generateSpringRK4 = __webpack_require__(75);

	var cubicBezier = function cubicBezier(t1, p1, t2, p2) {
	  var bezier = generateCubicBezier(t1, p1, t2, p2);

	  return function (start, end, percent) {
	    return start + (end - start) * bezier(percent);
	  };
	};

	var easings = {
	  'linear': function linear(start, end, percent) {
	    return start + (end - start) * percent;
	  },

	  // default easings
	  'ease': cubicBezier(0.25, 0.1, 0.25, 1),
	  'ease-in': cubicBezier(0.42, 0, 1, 1),
	  'ease-out': cubicBezier(0, 0, 0.58, 1),
	  'ease-in-out': cubicBezier(0.42, 0, 0.58, 1),

	  // sine
	  'ease-in-sine': cubicBezier(0.47, 0, 0.745, 0.715),
	  'ease-out-sine': cubicBezier(0.39, 0.575, 0.565, 1),
	  'ease-in-out-sine': cubicBezier(0.445, 0.05, 0.55, 0.95),

	  // quad
	  'ease-in-quad': cubicBezier(0.55, 0.085, 0.68, 0.53),
	  'ease-out-quad': cubicBezier(0.25, 0.46, 0.45, 0.94),
	  'ease-in-out-quad': cubicBezier(0.455, 0.03, 0.515, 0.955),

	  // cubic
	  'ease-in-cubic': cubicBezier(0.55, 0.055, 0.675, 0.19),
	  'ease-out-cubic': cubicBezier(0.215, 0.61, 0.355, 1),
	  'ease-in-out-cubic': cubicBezier(0.645, 0.045, 0.355, 1),

	  // quart
	  'ease-in-quart': cubicBezier(0.895, 0.03, 0.685, 0.22),
	  'ease-out-quart': cubicBezier(0.165, 0.84, 0.44, 1),
	  'ease-in-out-quart': cubicBezier(0.77, 0, 0.175, 1),

	  // quint
	  'ease-in-quint': cubicBezier(0.755, 0.05, 0.855, 0.06),
	  'ease-out-quint': cubicBezier(0.23, 1, 0.32, 1),
	  'ease-in-out-quint': cubicBezier(0.86, 0, 0.07, 1),

	  // expo
	  'ease-in-expo': cubicBezier(0.95, 0.05, 0.795, 0.035),
	  'ease-out-expo': cubicBezier(0.19, 1, 0.22, 1),
	  'ease-in-out-expo': cubicBezier(1, 0, 0, 1),

	  // circ
	  'ease-in-circ': cubicBezier(0.6, 0.04, 0.98, 0.335),
	  'ease-out-circ': cubicBezier(0.075, 0.82, 0.165, 1),
	  'ease-in-out-circ': cubicBezier(0.785, 0.135, 0.15, 0.86),

	  // user param easings...

	  'spring': function spring(tension, friction, duration) {
	    if (duration === 0) {
	      // can't get a spring w/ duration 0
	      return easings.linear; // duration 0 => jump to end so impl doesn't matter
	    }

	    var spring = generateSpringRK4(tension, friction, duration);

	    return function (start, end, percent) {
	      return start + (end - start) * spring(percent);
	    };
	  },

	  'cubic-bezier': cubicBezier
	};

	module.exports = easings;

	/***/ }),
	/* 74 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	/* global Float32Array */

	/*! Bezier curve function generator. Copyright Gaetan Renaudeau. MIT License: http://en.wikipedia.org/wiki/MIT_License */
	function generateCubicBezier(mX1, mY1, mX2, mY2) {
	  var NEWTON_ITERATIONS = 4,
	      NEWTON_MIN_SLOPE = 0.001,
	      SUBDIVISION_PRECISION = 0.0000001,
	      SUBDIVISION_MAX_ITERATIONS = 10,
	      kSplineTableSize = 11,
	      kSampleStepSize = 1.0 / (kSplineTableSize - 1.0),
	      float32ArraySupported = typeof Float32Array !== 'undefined';

	  /* Must contain four arguments. */
	  if (arguments.length !== 4) {
	    return false;
	  }

	  /* Arguments must be numbers. */
	  for (var i = 0; i < 4; ++i) {
	    if (typeof arguments[i] !== "number" || isNaN(arguments[i]) || !isFinite(arguments[i])) {
	      return false;
	    }
	  }

	  /* X values must be in the [0, 1] range. */
	  mX1 = Math.min(mX1, 1);
	  mX2 = Math.min(mX2, 1);
	  mX1 = Math.max(mX1, 0);
	  mX2 = Math.max(mX2, 0);

	  var mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);

	  function A(aA1, aA2) {
	    return 1.0 - 3.0 * aA2 + 3.0 * aA1;
	  }

	  function B(aA1, aA2) {
	    return 3.0 * aA2 - 6.0 * aA1;
	  }

	  function C(aA1) {
	    return 3.0 * aA1;
	  }

	  function calcBezier(aT, aA1, aA2) {
	    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
	  }

	  function getSlope(aT, aA1, aA2) {
	    return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
	  }

	  function newtonRaphsonIterate(aX, aGuessT) {
	    for (var _i = 0; _i < NEWTON_ITERATIONS; ++_i) {
	      var currentSlope = getSlope(aGuessT, mX1, mX2);

	      if (currentSlope === 0.0) {
	        return aGuessT;
	      }

	      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
	      aGuessT -= currentX / currentSlope;
	    }

	    return aGuessT;
	  }

	  function calcSampleValues() {
	    for (var _i2 = 0; _i2 < kSplineTableSize; ++_i2) {
	      mSampleValues[_i2] = calcBezier(_i2 * kSampleStepSize, mX1, mX2);
	    }
	  }

	  function binarySubdivide(aX, aA, aB) {
	    var currentX = void 0,
	        currentT = void 0,
	        i = 0;

	    do {
	      currentT = aA + (aB - aA) / 2.0;
	      currentX = calcBezier(currentT, mX1, mX2) - aX;
	      if (currentX > 0.0) {
	        aB = currentT;
	      } else {
	        aA = currentT;
	      }
	    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);

	    return currentT;
	  }

	  function getTForX(aX) {
	    var intervalStart = 0.0,
	        currentSample = 1,
	        lastSample = kSplineTableSize - 1;

	    for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {
	      intervalStart += kSampleStepSize;
	    }

	    --currentSample;

	    var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]),
	        guessForT = intervalStart + dist * kSampleStepSize,
	        initialSlope = getSlope(guessForT, mX1, mX2);

	    if (initialSlope >= NEWTON_MIN_SLOPE) {
	      return newtonRaphsonIterate(aX, guessForT);
	    } else if (initialSlope === 0.0) {
	      return guessForT;
	    } else {
	      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize);
	    }
	  }

	  var _precomputed = false;

	  function precompute() {
	    _precomputed = true;
	    if (mX1 !== mY1 || mX2 !== mY2) {
	      calcSampleValues();
	    }
	  }

	  var f = function f(aX) {
	    if (!_precomputed) {
	      precompute();
	    }
	    if (mX1 === mY1 && mX2 === mY2) {
	      return aX;
	    }
	    if (aX === 0) {
	      return 0;
	    }
	    if (aX === 1) {
	      return 1;
	    }

	    return calcBezier(getTForX(aX), mY1, mY2);
	  };

	  f.getControlPoints = function () {
	    return [{
	      x: mX1,
	      y: mY1
	    }, {
	      x: mX2,
	      y: mY2
	    }];
	  };

	  var str = "generateBezier(" + [mX1, mY1, mX2, mY2] + ")";
	  f.toString = function () {
	    return str;
	  };

	  return f;
	}

	module.exports = generateCubicBezier;

	/***/ }),
	/* 75 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	/*! Runge-Kutta spring physics function generator. Adapted from Framer.js, copyright Koen Bok. MIT License: http://en.wikipedia.org/wiki/MIT_License */
	/* Given a tension, friction, and duration, a simulation at 60FPS will first run without a defined duration in order to calculate the full path. A second pass
	   then adjusts the time delta -- using the relation between actual time and duration -- to calculate the path for the duration-constrained animation. */
	var generateSpringRK4 = function () {
	  function springAccelerationForState(state) {
	    return -state.tension * state.x - state.friction * state.v;
	  }

	  function springEvaluateStateWithDerivative(initialState, dt, derivative) {
	    var state = {
	      x: initialState.x + derivative.dx * dt,
	      v: initialState.v + derivative.dv * dt,
	      tension: initialState.tension,
	      friction: initialState.friction
	    };

	    return { dx: state.v, dv: springAccelerationForState(state) };
	  }

	  function springIntegrateState(state, dt) {
	    var a = {
	      dx: state.v,
	      dv: springAccelerationForState(state)
	    },
	        b = springEvaluateStateWithDerivative(state, dt * 0.5, a),
	        c = springEvaluateStateWithDerivative(state, dt * 0.5, b),
	        d = springEvaluateStateWithDerivative(state, dt, c),
	        dxdt = 1.0 / 6.0 * (a.dx + 2.0 * (b.dx + c.dx) + d.dx),
	        dvdt = 1.0 / 6.0 * (a.dv + 2.0 * (b.dv + c.dv) + d.dv);

	    state.x = state.x + dxdt * dt;
	    state.v = state.v + dvdt * dt;

	    return state;
	  }

	  return function springRK4Factory(tension, friction, duration) {

	    var initState = {
	      x: -1,
	      v: 0,
	      tension: null,
	      friction: null
	    },
	        path = [0],
	        time_lapsed = 0,
	        tolerance = 1 / 10000,
	        DT = 16 / 1000,
	        have_duration = void 0,
	        dt = void 0,
	        last_state = void 0;

	    tension = parseFloat(tension) || 500;
	    friction = parseFloat(friction) || 20;
	    duration = duration || null;

	    initState.tension = tension;
	    initState.friction = friction;

	    have_duration = duration !== null;

	    /* Calculate the actual time it takes for this animation to complete with the provided conditions. */
	    if (have_duration) {
	      /* Run the simulation without a duration. */
	      time_lapsed = springRK4Factory(tension, friction);
	      /* Compute the adjusted time delta. */
	      dt = time_lapsed / duration * DT;
	    } else {
	      dt = DT;
	    }

	    for (;;) {
	      /* Next/step function .*/
	      last_state = springIntegrateState(last_state || initState, dt);
	      /* Store the position. */
	      path.push(1 + last_state.x);
	      time_lapsed += 16;
	      /* If the change threshold is reached, break. */
	      if (!(Math.abs(last_state.x) > tolerance && Math.abs(last_state.v) > tolerance)) {
	        break;
	      }
	    }

	    /* If duration is not defined, return the actual time required for completing this animation. Otherwise, return a closure that holds the
	       computed path and returns a snapshot of the position according to a given percentComplete. */
	    return !have_duration ? time_lapsed : function (percentComplete) {
	      return path[percentComplete * (path.length - 1) | 0];
	    };
	  };
	}();

	module.exports = generateSpringRK4;

	/***/ }),
	/* 76 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);

	function getEasedValue(type, start, end, percent, easingFn) {
	  if (percent === 1) {
	    return end;
	  }

	  var val = easingFn(start, end, percent);

	  if (type == null) {
	    return val;
	  }

	  if (type.roundValue || type.color) {
	    val = Math.round(val);
	  }

	  if (type.min !== undefined) {
	    val = Math.max(val, type.min);
	  }

	  if (type.max !== undefined) {
	    val = Math.min(val, type.max);
	  }

	  return val;
	}

	function getValue(prop, spec) {
	  if (prop.pfValue != null || prop.value != null) {
	    if (prop.pfValue != null && (spec == null || spec.type.units !== '%')) {
	      return prop.pfValue;
	    } else {
	      return prop.value;
	    }
	  } else {
	    return prop;
	  }
	}

	function ease(startProp, endProp, percent, easingFn, propSpec) {
	  var type = propSpec != null ? propSpec.type : null;

	  if (percent < 0) {
	    percent = 0;
	  } else if (percent > 1) {
	    percent = 1;
	  }

	  var start = getValue(startProp, propSpec);
	  var end = getValue(endProp, propSpec);

	  if (is.number(start) && is.number(end)) {
	    return getEasedValue(type, start, end, percent, easingFn);
	  } else if (is.array(start) && is.array(end)) {
	    var easedArr = [];

	    for (var i = 0; i < end.length; i++) {
	      var si = start[i];
	      var ei = end[i];

	      if (si != null && ei != null) {
	        var val = getEasedValue(type, si, ei, percent, easingFn);

	        easedArr.push(val);
	      } else {
	        easedArr.push(ei);
	      }
	    }

	    return easedArr;
	  }

	  return undefined;
	}

	module.exports = ease;

	/***/ }),
	/* 77 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	function startAnimation(self, ani, now, isCore) {
	  var isEles = !isCore;
	  var ele = self;
	  var ani_p = ani._private;
	  var cy = isCore ? self : self.cy();
	  var style = cy.style();

	  if (isEles) {
	    var pos = ele.position();

	    ani_p.startPosition = ani_p.startPosition || {
	      x: pos.x,
	      y: pos.y
	    };

	    ani_p.startStyle = ani_p.startStyle || style.getAnimationStartStyle(ele, ani_p.style);
	  }

	  if (isCore) {
	    var pan = cy._private.pan;

	    ani_p.startPan = ani_p.startPan || {
	      x: pan.x,
	      y: pan.y
	    };

	    ani_p.startZoom = ani_p.startZoom != null ? ani_p.startZoom : cy._private.zoom;
	  }

	  ani_p.started = true;
	  ani_p.startTime = now - ani_p.progress * ani_p.duration;
	}

	module.exports = startAnimation;

	/***/ }),
	/* 78 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var Emitter = __webpack_require__(11);
	var define = __webpack_require__(4);
	var is = __webpack_require__(0);
	var util = __webpack_require__(1);
	var Selector = __webpack_require__(6);

	var emitterOptions = {
	  qualifierCompare: function qualifierCompare(selector1, selector2) {
	    if (selector1 == null || selector2 == null) {
	      return selector1 == null && selector2 == null;
	    } else {
	      return selector1.sameText(selector2);
	    }
	  },
	  eventMatches: function eventMatches(cy, listener, eventObj) {
	    var selector = listener.qualifier;

	    if (selector != null) {
	      return cy !== eventObj.target && is.element(eventObj.target) && selector.matches(eventObj.target);
	    }

	    return true;
	  },
	  eventFields: function eventFields(cy) {
	    return {
	      cy: cy,
	      target: cy
	    };
	  },
	  callbackContext: function callbackContext(cy, listener, eventObj) {
	    return listener.qualifier != null ? eventObj.target : cy;
	  }
	};

	var argSelector = function argSelector(arg) {
	  if (is.string(arg)) {
	    return new Selector(arg);
	  } else {
	    return arg;
	  }
	};

	var elesfn = {
	  createEmitter: function createEmitter() {
	    var _p = this._private;

	    if (!_p.emitter) {
	      _p.emitter = new Emitter(util.assign({
	        context: this
	      }, emitterOptions));
	    }

	    return this;
	  },

	  emitter: function emitter() {
	    return this._private.emitter;
	  },

	  on: function on(events, selector, callback) {
	    this.emitter().on(events, argSelector(selector), callback);

	    return this;
	  },

	  removeListener: function removeListener(events, selector, callback) {
	    this.emitter().removeListener(events, argSelector(selector), callback);

	    return this;
	  },

	  one: function one(events, selector, callback) {
	    this.emitter().one(events, argSelector(selector), callback);

	    return this;
	  },

	  once: function once(events, selector, callback) {
	    this.emitter().one(events, argSelector(selector), callback);

	    return this;
	  },

	  emit: function emit(events, extraParams) {
	    this.emitter().emit(events, extraParams);

	    return this;
	  }
	};

	define.eventAliasesOn(elesfn);

	module.exports = elesfn;

	/***/ }),
	/* 79 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var corefn = {

	  png: function png(options) {
	    var renderer = this._private.renderer;
	    options = options || {};

	    return renderer.png(options);
	  },

	  jpg: function jpg(options) {
	    var renderer = this._private.renderer;
	    options = options || {};

	    options.bg = options.bg || '#fff';

	    return renderer.jpg(options);
	  }

	};

	corefn.jpeg = corefn.jpg;

	module.exports = corefn;

	/***/ }),
	/* 80 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var is = __webpack_require__(0);

	var corefn = {

	  layout: function layout(options) {
	    var cy = this;

	    if (options == null) {
	      util.error('Layout options must be specified to make a layout');
	      return;
	    }

	    if (options.name == null) {
	      util.error('A `name` must be specified to make a layout');
	      return;
	    }

	    var name = options.name;
	    var Layout = cy.extension('layout', name);

	    if (Layout == null) {
	      util.error('Can not apply layout: No such layout `' + name + '` found; did you include its JS file?');
	      return;
	    }

	    var eles = void 0;
	    if (is.string(options.eles)) {
	      eles = cy.$(options.eles);
	    } else {
	      eles = options.eles != null ? options.eles : cy.$();
	    }

	    var layout = new Layout(util.extend({}, options, {
	      cy: cy,
	      eles: eles
	    }));

	    return layout;
	  }

	};

	corefn.createLayout = corefn.makeLayout = corefn.layout;

	module.exports = corefn;

	/***/ }),
	/* 81 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var corefn = {
	  notify: function notify(params) {
	    var _p = this._private;

	    if (_p.batchingNotify) {
	      var bEles = _p.batchNotifyEles;
	      var bTypes = _p.batchNotifyTypes;

	      if (params.eles) {
	        bEles.merge(params.eles);
	      }

	      if (!bTypes.ids[params.type]) {
	        bTypes.push(params.type);
	        bTypes.ids[params.type] = true;
	      }

	      return; // notifications are disabled during batching
	    }

	    if (!_p.notificationsEnabled) {
	      return;
	    } // exit on disabled

	    var renderer = this.renderer();

	    // exit if destroy() called on core or renderer in between frames #1499 #1528
	    if (this.isDestroyed() || !renderer) {
	      return;
	    }

	    renderer.notify(params);
	  },

	  notifications: function notifications(bool) {
	    var p = this._private;

	    if (bool === undefined) {
	      return p.notificationsEnabled;
	    } else {
	      p.notificationsEnabled = bool ? true : false;
	    }
	  },

	  noNotifications: function noNotifications(callback) {
	    this.notifications(false);
	    callback();
	    this.notifications(true);
	  },

	  batching: function batching() {
	    return this._private.batchCount > 0;
	  },

	  startBatch: function startBatch() {
	    var _p = this._private;

	    if (_p.batchCount == null) {
	      _p.batchCount = 0;
	    }

	    if (_p.batchCount === 0) {
	      _p.batchingStyle = _p.batchingNotify = true;
	      _p.batchStyleEles = this.collection();
	      _p.batchNotifyEles = this.collection();
	      _p.batchNotifyTypes = [];
	      _p.batchNotifyTypes.ids = {};
	    }

	    _p.batchCount++;

	    return this;
	  },

	  endBatch: function endBatch() {
	    var _p = this._private;

	    _p.batchCount--;

	    if (_p.batchCount === 0) {
	      // update style for dirty eles
	      _p.batchingStyle = false;
	      _p.batchStyleEles.updateStyle();

	      // notify the renderer of queued eles and event types
	      _p.batchingNotify = false;
	      this.notify({
	        type: _p.batchNotifyTypes,
	        eles: _p.batchNotifyEles
	      });
	    }

	    return this;
	  },

	  batch: function batch(callback) {
	    this.startBatch();
	    callback();
	    this.endBatch();

	    return this;
	  },

	  // for backwards compatibility
	  batchData: function batchData(map) {
	    var cy = this;

	    return this.batch(function () {
	      var ids = Object.keys(map);

	      for (var i = 0; i < ids.length; i++) {
	        var id = ids[i];
	        var data = map[id];
	        var ele = cy.getElementById(id);

	        ele.data(data);
	      }
	    });
	  }
	};

	module.exports = corefn;

	/***/ }),
	/* 82 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);

	var corefn = {

	  renderTo: function renderTo(context, zoom, pan, pxRatio) {
	    var r = this._private.renderer;

	    r.renderTo(context, zoom, pan, pxRatio);
	    return this;
	  },

	  renderer: function renderer() {
	    return this._private.renderer;
	  },

	  forceRender: function forceRender() {
	    this.notify({
	      type: 'draw'
	    });

	    return this;
	  },

	  resize: function resize() {
	    this.invalidateSize();

	    this.notify({
	      type: 'resize'
	    });

	    this.emit('resize');

	    return this;
	  },

	  initRenderer: function initRenderer(options) {
	    var cy = this;

	    var RendererProto = cy.extension('renderer', options.name);
	    if (RendererProto == null) {
	      util.error('Can not initialise: No such renderer `%s` found; did you include its JS file?', options.name);
	      return;
	    }

	    cy._private.renderer = new RendererProto(util.extend({}, options, { cy: cy }));

	    this.notify({ type: 'init' });
	  },

	  destroyRenderer: function destroyRenderer() {
	    var cy = this;

	    cy.notify({ type: 'destroy' }); // destroy the renderer

	    var domEle = cy.container();
	    if (domEle) {
	      domEle._cyreg = null;

	      while (domEle.childNodes.length > 0) {
	        domEle.removeChild(domEle.childNodes[0]);
	      }
	    }

	    cy._private.renderer = null; // to be extra safe, remove the ref
	  },

	  onRender: function onRender(fn) {
	    return this.on('render', fn);
	  },

	  offRender: function offRender(fn) {
	    return this.off('render', fn);
	  }

	};

	corefn.invalidateDimensions = corefn.resize;

	module.exports = corefn;

	/***/ }),
	/* 83 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var Collection = __webpack_require__(7);

	var corefn = {

	  // get a collection
	  // - empty collection on no args
	  // - collection of elements in the graph on selector arg
	  // - guarantee a returned collection when elements or collection specified
	  collection: function collection(eles, opts) {

	    if (is.string(eles)) {
	      return this.$(eles);
	    } else if (is.elementOrCollection(eles)) {
	      return eles.collection();
	    } else if (is.array(eles)) {
	      return new Collection(this, eles, opts);
	    }

	    return new Collection(this);
	  },

	  nodes: function nodes(selector) {
	    var nodes = this.$(function (ele) {
	      return ele.isNode();
	    });

	    if (selector) {
	      return nodes.filter(selector);
	    }

	    return nodes;
	  },

	  edges: function edges(selector) {
	    var edges = this.$(function (ele) {
	      return ele.isEdge();
	    });

	    if (selector) {
	      return edges.filter(selector);
	    }

	    return edges;
	  },

	  // search the graph like jQuery
	  $: function $(selector) {
	    var eles = this._private.elements;

	    if (selector) {
	      return eles.filter(selector);
	    } else {
	      return eles.spawnSelf();
	    }
	  },

	  mutableElements: function mutableElements() {
	    return this._private.elements;
	  }

	};

	// aliases
	corefn.elements = corefn.filter = corefn.$;

	module.exports = corefn;

	/***/ }),
	/* 84 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var Style = __webpack_require__(18);

	var corefn = {

	  style: function style(newStyle) {
	    if (newStyle) {
	      var s = this.setStyle(newStyle);

	      s.update();
	    }

	    return this._private.style;
	  },

	  setStyle: function setStyle(style) {
	    var _p = this._private;

	    if (is.stylesheet(style)) {
	      _p.style = style.generateStyle(this);
	    } else if (is.array(style)) {
	      _p.style = Style.fromJson(this, style);
	    } else if (is.string(style)) {
	      _p.style = Style.fromString(this, style);
	    } else {
	      _p.style = Style(this);
	    }

	    return _p.style;
	  }
	};

	module.exports = corefn;

	/***/ }),
	/* 85 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var is = __webpack_require__(0);
	var Promise = __webpack_require__(5);

	var styfn = {};

	// (potentially expensive calculation)
	// apply the style to the element based on
	// - its bypass
	// - what selectors match it
	styfn.apply = function (eles) {
	  var self = this;
	  var _p = self._private;
	  var cy = _p.cy;
	  var updatedEles = cy.collection();

	  if (_p.newStyle) {
	    // clear style caches
	    _p.contextStyles = {};
	    _p.propDiffs = {};

	    self.cleanElements(eles, true);
	  }

	  for (var ie = 0; ie < eles.length; ie++) {
	    var ele = eles[ie];

	    var cxtMeta = self.getContextMeta(ele);

	    if (cxtMeta.empty) {
	      continue;
	    } else {
	      updatedEles.merge(ele);
	    }

	    var cxtStyle = self.getContextStyle(cxtMeta);
	    var app = self.applyContextStyle(cxtMeta, cxtStyle, ele);

	    if (!_p.newStyle) {
	      self.updateTransitions(ele, app.diffProps);
	    }

	    self.updateStyleHints(ele);
	  } // for elements

	  _p.newStyle = false;

	  return updatedEles;
	};

	styfn.getPropertiesDiff = function (oldCxtKey, newCxtKey) {
	  var self = this;
	  var cache = self._private.propDiffs = self._private.propDiffs || {};
	  var dualCxtKey = oldCxtKey + '-' + newCxtKey;
	  var cachedVal = cache[dualCxtKey];

	  if (cachedVal) {
	    return cachedVal;
	  }

	  var diffProps = [];
	  var addedProp = {};

	  for (var i = 0; i < self.length; i++) {
	    var cxt = self[i];
	    var oldHasCxt = oldCxtKey[i] === 't';
	    var newHasCxt = newCxtKey[i] === 't';
	    var cxtHasDiffed = oldHasCxt !== newHasCxt;
	    var cxtHasMappedProps = cxt.mappedProperties.length > 0;

	    if (cxtHasDiffed || cxtHasMappedProps) {
	      var props = void 0;

	      if (cxtHasDiffed && cxtHasMappedProps) {
	        props = cxt.properties; // suffices b/c mappedProperties is a subset of properties
	      } else if (cxtHasDiffed) {
	        props = cxt.properties; // need to check them all
	      } else if (cxtHasMappedProps) {
	        props = cxt.mappedProperties; // only need to check mapped
	      }

	      for (var j = 0; j < props.length; j++) {
	        var prop = props[j];
	        var name = prop.name;

	        // if a later context overrides this property, then the fact that this context has switched/diffed doesn't matter
	        // (semi expensive check since it makes this function O(n^2) on context length, but worth it since overall result
	        // is cached)
	        var laterCxtOverrides = false;
	        for (var k = i + 1; k < self.length; k++) {
	          var laterCxt = self[k];
	          var hasLaterCxt = newCxtKey[k] === 't';

	          if (!hasLaterCxt) {
	            continue;
	          } // can't override unless the context is active

	          laterCxtOverrides = laterCxt.properties[prop.name] != null;

	          if (laterCxtOverrides) {
	            break;
	          } // exit early as long as one later context overrides
	        }

	        if (!addedProp[name] && !laterCxtOverrides) {
	          addedProp[name] = true;
	          diffProps.push(name);
	        }
	      } // for props
	    } // if
	  } // for contexts

	  cache[dualCxtKey] = diffProps;
	  return diffProps;
	};

	styfn.getContextMeta = function (ele) {
	  var self = this;
	  var cxtKey = '';
	  var diffProps = void 0;
	  var prevKey = ele._private.styleCxtKey || '';

	  if (self._private.newStyle) {
	    prevKey = ''; // since we need to apply all style if a fresh stylesheet
	  }

	  // get the cxt key
	  for (var i = 0; i < self.length; i++) {
	    var context = self[i];
	    var contextSelectorMatches = context.selector && context.selector.matches(ele); // NB: context.selector may be null for 'core'

	    if (contextSelectorMatches) {
	      cxtKey += 't';
	    } else {
	      cxtKey += 'f';
	    }
	  } // for context

	  diffProps = self.getPropertiesDiff(prevKey, cxtKey);

	  ele._private.styleCxtKey = cxtKey;

	  return {
	    key: cxtKey,
	    diffPropNames: diffProps,
	    empty: diffProps.length === 0
	  };
	};

	// gets a computed ele style object based on matched contexts
	styfn.getContextStyle = function (cxtMeta) {
	  var cxtKey = cxtMeta.key;
	  var self = this;
	  var cxtStyles = this._private.contextStyles = this._private.contextStyles || {};

	  // if already computed style, returned cached copy
	  if (cxtStyles[cxtKey]) {
	    return cxtStyles[cxtKey];
	  }

	  var style = {
	    _private: {
	      key: cxtKey
	    }
	  };

	  for (var i = 0; i < self.length; i++) {
	    var cxt = self[i];
	    var hasCxt = cxtKey[i] === 't';

	    if (!hasCxt) {
	      continue;
	    }

	    for (var j = 0; j < cxt.properties.length; j++) {
	      var prop = cxt.properties[j];

	      style[prop.name] = prop;
	    }
	  }

	  cxtStyles[cxtKey] = style;
	  return style;
	};

	styfn.applyContextStyle = function (cxtMeta, cxtStyle, ele) {
	  var self = this;
	  var diffProps = cxtMeta.diffPropNames;
	  var retDiffProps = {};

	  for (var i = 0; i < diffProps.length; i++) {
	    var diffPropName = diffProps[i];
	    var cxtProp = cxtStyle[diffPropName];
	    var eleProp = ele.pstyle(diffPropName);

	    if (!cxtProp) {
	      // no context prop means delete
	      if (!eleProp) {
	        continue; // no existing prop means nothing needs to be removed
	        // nb affects initial application on mapped values like control-point-distances
	      } else if (eleProp.bypass) {
	        cxtProp = { name: diffPropName, deleteBypassed: true };
	      } else {
	        cxtProp = { name: diffPropName, delete: true };
	      }
	    }

	    // save cycles when the context prop doesn't need to be applied
	    if (eleProp === cxtProp) {
	      continue;
	    }

	    var retDiffProp = retDiffProps[diffPropName] = {
	      prev: eleProp
	    };

	    self.applyParsedProperty(ele, cxtProp);

	    retDiffProp.next = ele.pstyle(diffPropName);

	    if (retDiffProp.next && retDiffProp.next.bypass) {
	      retDiffProp.next = retDiffProp.next.bypassed;
	    }
	  }

	  return {
	    diffProps: retDiffProps
	  };
	};

	styfn.updateStyleHints = function (ele) {
	  var _p = ele._private;
	  var self = this;

	  if (ele.removed()) {
	    return;
	  }

	  // set whether has pie or not; for greater efficiency
	  var hasPie = false;
	  if (_p.group === 'nodes') {
	    for (var i = 1; i <= self.pieBackgroundN; i++) {
	      // 1..N
	      var _size = ele.pstyle('pie-' + i + '-background-size').value;

	      if (_size > 0) {
	        hasPie = true;
	        break;
	      }
	    }
	  }

	  _p.hasPie = hasPie;

	  var transform = ele.pstyle('text-transform').strValue;
	  var content = ele.pstyle('label').strValue;
	  var srcContent = ele.pstyle('source-label').strValue;
	  var tgtContent = ele.pstyle('target-label').strValue;
	  var fStyle = ele.pstyle('font-style').strValue;
	  var size = ele.pstyle('font-size').pfValue + 'px';
	  var family = ele.pstyle('font-family').strValue;
	  // let letiant = style['font-letiant'].strValue;
	  var weight = ele.pstyle('font-weight').strValue;
	  var valign = ele.pstyle('text-valign').strValue;
	  var halign = ele.pstyle('text-valign').strValue;
	  var oWidth = ele.pstyle('text-outline-width').pfValue;
	  var wrap = ele.pstyle('text-wrap').strValue;
	  var wrapW = ele.pstyle('text-max-width').pfValue;
	  var labelStyleKey = fStyle + '$' + size + '$' + family + '$' + weight + '$' + transform + '$' + valign + '$' + halign + '$' + oWidth + '$' + wrap + '$' + wrapW;
	  _p.labelStyleKey = labelStyleKey;
	  _p.sourceLabelKey = labelStyleKey + '$' + srcContent;
	  _p.targetLabelKey = labelStyleKey + '$' + tgtContent;
	  _p.labelKey = labelStyleKey + '$' + content;
	  _p.fontKey = fStyle + '$' + weight + '$' + size + '$' + family;

	  _p.styleKey = Date.now();
	};

	// apply a property to the style (for internal use)
	// returns whether application was successful
	//
	// now, this function flattens the property, and here's how:
	//
	// for parsedProp:{ bypass: true, deleteBypass: true }
	// no property is generated, instead the bypass property in the
	// element's style is replaced by what's pointed to by the `bypassed`
	// field in the bypass property (i.e. restoring the property the
	// bypass was overriding)
	//
	// for parsedProp:{ mapped: truthy }
	// the generated flattenedProp:{ mapping: prop }
	//
	// for parsedProp:{ bypass: true }
	// the generated flattenedProp:{ bypassed: parsedProp }
	styfn.applyParsedProperty = function (ele, parsedProp) {
	  var self = this;
	  var prop = parsedProp;
	  var style = ele._private.style;
	  var fieldVal = void 0,
	      flatProp = void 0;
	  var types = self.types;
	  var type = self.properties[prop.name].type;
	  var propIsBypass = prop.bypass;
	  var origProp = style[prop.name];
	  var origPropIsBypass = origProp && origProp.bypass;
	  var _p = ele._private;
	  var flatPropMapping = 'mapping';

	  var checkZOrder = function checkZOrder() {
	    self.checkZOrderTrigger(ele, prop.name, origProp ? origProp.value : null, prop.value);
	  };

	  // edges connected to compound nodes can not be haystacks
	  if (parsedProp.name === 'curve-style' && parsedProp.value === 'haystack' && ele.isEdge() && (ele.isLoop() || ele.source().isParent() || ele.target().isParent())) {
	    prop = parsedProp = this.parse(parsedProp.name, 'bezier', propIsBypass);
	  }

	  if (prop.delete) {
	    // delete the property and use the default value on falsey value
	    style[prop.name] = undefined;

	    checkZOrder();

	    return true;
	  }

	  if (prop.deleteBypassed) {
	    // delete the property that the
	    if (!origProp) {
	      checkZOrder();

	      return true; // can't delete if no prop
	    } else if (origProp.bypass) {
	      // delete bypassed
	      origProp.bypassed = undefined;

	      checkZOrder();

	      return true;
	    } else {
	      return false; // we're unsuccessful deleting the bypassed
	    }
	  }

	  // check if we need to delete the current bypass
	  if (prop.deleteBypass) {
	    // then this property is just here to indicate we need to delete
	    if (!origProp) {
	      checkZOrder();

	      return true; // property is already not defined
	    } else if (origProp.bypass) {
	      // then replace the bypass property with the original
	      // because the bypassed property was already applied (and therefore parsed), we can just replace it (no reapplying necessary)
	      style[prop.name] = origProp.bypassed;

	      checkZOrder();

	      return true;
	    } else {
	      return false; // we're unsuccessful deleting the bypass
	    }
	  }

	  var printMappingErr = function printMappingErr() {
	    util.error('Do not assign mappings to elements without corresponding data (e.g. ele `' + ele.id() + '` for property `' + prop.name + '` with data field `' + prop.field + '`); try a `[' + prop.field + ']` selector to limit scope to elements with `' + prop.field + '` defined');
	  };

	  // put the property in the style objects
	  switch (prop.mapped) {// flatten the property if mapped
	    case types.mapData:
	      {
	        // flatten the field (e.g. data.foo.bar)
	        var fields = prop.field.split('.');
	        var _fieldVal = _p.data;

	        for (var i = 0; i < fields.length && _fieldVal; i++) {
	          var field = fields[i];
	          _fieldVal = _fieldVal[field];
	        }

	        var percent = void 0;
	        if (!is.number(_fieldVal)) {
	          // then keep the mapping but assume 0% for now
	          percent = 0;
	        } else {
	          percent = (_fieldVal - prop.fieldMin) / (prop.fieldMax - prop.fieldMin);
	        }

	        // make sure to bound percent value
	        if (percent < 0) {
	          percent = 0;
	        } else if (percent > 1) {
	          percent = 1;
	        }

	        if (type.color) {
	          var r1 = prop.valueMin[0];
	          var r2 = prop.valueMax[0];
	          var g1 = prop.valueMin[1];
	          var g2 = prop.valueMax[1];
	          var b1 = prop.valueMin[2];
	          var b2 = prop.valueMax[2];
	          var a1 = prop.valueMin[3] == null ? 1 : prop.valueMin[3];
	          var a2 = prop.valueMax[3] == null ? 1 : prop.valueMax[3];

	          var clr = [Math.round(r1 + (r2 - r1) * percent), Math.round(g1 + (g2 - g1) * percent), Math.round(b1 + (b2 - b1) * percent), Math.round(a1 + (a2 - a1) * percent)];

	          flatProp = { // colours are simple, so just create the flat property instead of expensive string parsing
	            bypass: prop.bypass, // we're a bypass if the mapping property is a bypass
	            name: prop.name,
	            value: clr,
	            strValue: 'rgb(' + clr[0] + ', ' + clr[1] + ', ' + clr[2] + ')'
	          };
	        } else if (type.number) {
	          var calcValue = prop.valueMin + (prop.valueMax - prop.valueMin) * percent;
	          flatProp = this.parse(prop.name, calcValue, prop.bypass, flatPropMapping);
	        } else {
	          return false; // can only map to colours and numbers
	        }

	        if (!flatProp) {
	          // if we can't flatten the property, then use the origProp so we still keep the mapping itself
	          flatProp = this.parse(prop.name, origProp.strValue, prop.bypass, flatPropMapping);
	        }

	        if (!flatProp) {
	          printMappingErr();
	        }
	        flatProp.mapping = prop; // keep a reference to the mapping
	        prop = flatProp; // the flattened (mapped) property is the one we want

	        break;
	      }

	    // direct mapping
	    case types.data:
	      {
	        // flatten the field (e.g. data.foo.bar)
	        var _fields = prop.field.split('.');
	        var _fieldVal2 = _p.data;

	        if (_fieldVal2) {
	          for (var _i = 0; _i < _fields.length; _i++) {
	            var _field = _fields[_i];
	            _fieldVal2 = _fieldVal2[_field];
	          }
	        }

	        flatProp = this.parse(prop.name, _fieldVal2, prop.bypass, flatPropMapping);

	        if (!flatProp) {
	          // if we can't flatten the property, then use the origProp so we still keep the mapping itself
	          var flatPropVal = origProp ? origProp.strValue : '';

	          flatProp = this.parse(prop.name, flatPropVal, prop.bypass, flatPropMapping);
	        }

	        if (!flatProp) {
	          printMappingErr();
	        }
	        flatProp.mapping = prop; // keep a reference to the mapping
	        prop = flatProp; // the flattened (mapped) property is the one we want

	        break;
	      }

	    case types.fn:
	      {
	        var fn = prop.value;
	        var fnRetVal = fn(ele);

	        flatProp = this.parse(prop.name, fnRetVal, prop.bypass, flatPropMapping);
	        flatProp.mapping = prop; // keep a reference to the mapping
	        prop = flatProp; // the flattened (mapped) property is the one we want

	        break;
	      }

	    case undefined:
	      break; // just set the property

	    default:
	      return false; // not a valid mapping
	  }

	  // if the property is a bypass property, then link the resultant property to the original one
	  if (propIsBypass) {
	    if (origPropIsBypass) {
	      // then this bypass overrides the existing one
	      prop.bypassed = origProp.bypassed; // steal bypassed prop from old bypass
	    } else {
	      // then link the orig prop to the new bypass
	      prop.bypassed = origProp;
	    }

	    style[prop.name] = prop; // and set
	  } else {
	    // prop is not bypass
	    if (origPropIsBypass) {
	      // then keep the orig prop (since it's a bypass) and link to the new prop
	      origProp.bypassed = prop;
	    } else {
	      // then just replace the old prop with the new one
	      style[prop.name] = prop;
	    }
	  }

	  checkZOrder();

	  return true;
	};

	styfn.cleanElements = function (eles, keepBypasses) {
	  var self = this;
	  var props = self.properties;

	  for (var i = 0; i < eles.length; i++) {
	    var ele = eles[i];

	    if (!keepBypasses) {
	      ele._private.style = {};
	    } else {
	      var style = ele._private.style;

	      for (var j = 0; j < props.length; j++) {
	        var prop = props[j];
	        var eleProp = style[prop.name];

	        if (eleProp) {
	          if (eleProp.bypass) {
	            eleProp.bypassed = null;
	          } else {
	            style[prop.name] = null;
	          }
	        }
	      }
	    }
	  }
	};

	// updates the visual style for all elements (useful for manual style modification after init)
	styfn.update = function () {
	  var cy = this._private.cy;
	  var eles = cy.mutableElements();

	  eles.updateStyle();
	};

	// just update the functional properties (i.e. mappings) in the elements'
	// styles (less expensive than recalculation)
	styfn.updateMappers = function (eles) {
	  var self = this;
	  var cy = this._private.cy;
	  var updatedEles = cy.collection();

	  for (var i = 0; i < eles.length; i++) {
	    // for each ele
	    var ele = eles[i];
	    var style = ele._private.style;
	    var updatedEle = false;

	    for (var j = 0; j < self.properties.length; j++) {
	      // for each prop
	      var prop = self.properties[j];
	      var propInStyle = style[prop.name];

	      if (propInStyle && propInStyle.mapping) {
	        var mapping = propInStyle.mapping;

	        this.applyParsedProperty(ele, mapping); // reapply the mapping property

	        updatedEle = true;
	      }
	    }

	    if (updatedEle) {
	      this.updateStyleHints(ele);

	      updatedEles.merge(ele);
	    }
	  }

	  return updatedEles;
	};

	// diffProps : { name => { prev, next } }
	styfn.updateTransitions = function (ele, diffProps, isBypass) {
	  var self = this;
	  var _p = ele._private;
	  var props = ele.pstyle('transition-property').value;
	  var duration = ele.pstyle('transition-duration').pfValue;
	  var delay = ele.pstyle('transition-delay').pfValue;

	  if (props.length > 0 && duration > 0) {

	    var style = {};

	    // build up the style to animate towards
	    var anyPrev = false;
	    for (var i = 0; i < props.length; i++) {
	      var prop = props[i];
	      var styProp = ele.pstyle(prop);
	      var diffProp = diffProps[prop];

	      if (!diffProp) {
	        continue;
	      }

	      var prevProp = diffProp.prev;
	      var fromProp = prevProp;
	      var toProp = diffProp.next != null ? diffProp.next : styProp;
	      var diff = false;
	      var initVal = void 0;
	      var initDt = 0.000001; // delta time % value for initVal (allows animating out of init zero opacity)

	      if (!fromProp) {
	        continue;
	      }

	      // consider px values
	      if (is.number(fromProp.pfValue) && is.number(toProp.pfValue)) {
	        diff = toProp.pfValue - fromProp.pfValue; // nonzero is truthy
	        initVal = fromProp.pfValue + initDt * diff;

	        // consider numerical values
	      } else if (is.number(fromProp.value) && is.number(toProp.value)) {
	        diff = toProp.value - fromProp.value; // nonzero is truthy
	        initVal = fromProp.value + initDt * diff;

	        // consider colour values
	      } else if (is.array(fromProp.value) && is.array(toProp.value)) {
	        diff = fromProp.value[0] !== toProp.value[0] || fromProp.value[1] !== toProp.value[1] || fromProp.value[2] !== toProp.value[2];

	        initVal = fromProp.strValue;
	      }

	      // the previous value is good for an animation only if it's different
	      if (diff) {
	        style[prop] = toProp.strValue; // to val
	        this.applyBypass(ele, prop, initVal); // from val
	        anyPrev = true;
	      }
	    } // end if props allow ani

	    // can't transition if there's nothing previous to transition from
	    if (!anyPrev) {
	      return;
	    }

	    _p.transitioning = true;

	    new Promise(function (resolve) {
	      if (delay > 0) {
	        ele.delayAnimation(delay).play().promise().then(resolve);
	      } else {
	        resolve();
	      }
	    }).then(function () {
	      return ele.animation({
	        style: style,
	        duration: duration,
	        easing: ele.pstyle('transition-timing-function').value,
	        queue: false
	      }).play().promise();
	    }).then(function () {
	      // if( !isBypass ){
	      self.removeBypasses(ele, props);
	      ele.emitAndNotify('style');
	      // }

	      _p.transitioning = false;
	    });
	  } else if (_p.transitioning) {
	    this.removeBypasses(ele, props);
	    ele.emitAndNotify('style');

	    _p.transitioning = false;
	  }
	};

	styfn.checkZOrderTrigger = function (ele, name, fromValue, toValue) {
	  var prop = this.properties[name];

	  if (prop.triggersZOrder != null && (fromValue == null || prop.triggersZOrder(fromValue, toValue))) {
	    this._private.cy.notify({
	      type: 'zorder',
	      eles: ele
	    });
	  }
	};

	module.exports = styfn;

	/***/ }),
	/* 86 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var util = __webpack_require__(1);

	var styfn = {};

	// bypasses are applied to an existing style on an element, and just tacked on temporarily
	// returns true iff application was successful for at least 1 specified property
	styfn.applyBypass = function (eles, name, value, updateTransitions) {
	  var self = this;
	  var props = [];
	  var isBypass = true;

	  // put all the properties (can specify one or many) in an array after parsing them
	  if (name === '*' || name === '**') {
	    // apply to all property names

	    if (value !== undefined) {
	      for (var i = 0; i < self.properties.length; i++) {
	        var prop = self.properties[i];
	        var _name = prop.name;

	        var parsedProp = this.parse(_name, value, true);

	        if (parsedProp) {
	          props.push(parsedProp);
	        }
	      }
	    }
	  } else if (is.string(name)) {
	    // then parse the single property
	    var _parsedProp = this.parse(name, value, true);

	    if (_parsedProp) {
	      props.push(_parsedProp);
	    }
	  } else if (is.plainObject(name)) {
	    // then parse each property
	    var specifiedProps = name;
	    updateTransitions = value;

	    var names = Object.keys(specifiedProps);

	    for (var _i = 0; _i < names.length; _i++) {
	      var _name2 = names[_i];
	      var _prop = self.properties[_name2];
	      var _value = specifiedProps[_name2];

	      if (_value === undefined) {
	        // try camel case name too
	        _value = specifiedProps[util.dash2camel(_name2)];
	      }

	      if (_value !== undefined) {
	        var _parsedProp2 = this.parse(_name2, _value, true);

	        if (_parsedProp2) {
	          props.push(_parsedProp2);
	        }
	      }
	    }
	  } else {
	    // can't do anything without well defined properties
	    return false;
	  }

	  // we've failed if there are no valid properties
	  if (props.length === 0) {
	    return false;
	  }

	  // now, apply the bypass properties on the elements
	  var ret = false; // return true if at least one succesful bypass applied
	  for (var _i2 = 0; _i2 < eles.length; _i2++) {
	    // for each ele
	    var ele = eles[_i2];
	    var diffProps = {};
	    var diffProp = void 0;

	    for (var j = 0; j < props.length; j++) {
	      // for each prop
	      var _prop2 = props[j];

	      if (updateTransitions) {
	        var prevProp = ele.pstyle(_prop2.name);
	        diffProp = diffProps[_prop2.name] = { prev: prevProp };
	      }

	      ret = this.applyParsedProperty(ele, _prop2) || ret;

	      if (updateTransitions) {
	        diffProp.next = ele.pstyle(_prop2.name);
	      }
	    } // for props

	    if (ret) {
	      this.updateStyleHints(ele);
	    }

	    if (updateTransitions) {
	      this.updateTransitions(ele, diffProps, isBypass);
	    }
	  } // for eles

	  return ret;
	};

	// only useful in specific cases like animation
	styfn.overrideBypass = function (eles, name, value) {
	  name = util.camel2dash(name);

	  for (var i = 0; i < eles.length; i++) {
	    var ele = eles[i];
	    var prop = ele._private.style[name];
	    var type = this.properties[name].type;
	    var isColor = type.color;
	    var isMulti = type.mutiple;

	    if (!prop || !prop.bypass) {
	      // need a bypass if one doesn't exist
	      this.applyBypass(ele, name, value);
	      continue;
	    }

	    var oldValue = prop.pfValue != null ? prop.pfValue : prop.value;

	    prop.value = value;

	    if (prop.pfValue != null) {
	      prop.pfValue = value;
	    }

	    if (isColor) {
	      prop.strValue = 'rgb(' + value.join(',') + ')';
	    } else if (isMulti) {
	      prop.strValue = value.join(' ');
	    } else {
	      prop.strValue = '' + value;
	    }

	    this.checkZOrderTrigger(ele, name, oldValue, value);
	  }
	};

	styfn.removeAllBypasses = function (eles, updateTransitions) {
	  return this.removeBypasses(eles, this.propertyNames, updateTransitions);
	};

	styfn.removeBypasses = function (eles, props, updateTransitions) {
	  var isBypass = true;

	  for (var j = 0; j < eles.length; j++) {
	    var ele = eles[j];
	    var diffProps = {};

	    for (var i = 0; i < props.length; i++) {
	      var name = props[i];
	      var prop = this.properties[name];
	      var prevProp = ele.pstyle(prop.name);

	      if (!prevProp || !prevProp.bypass) {
	        // if a bypass doesn't exist for the prop, nothing needs to be removed
	        continue;
	      }

	      var value = ''; // empty => remove bypass
	      var parsedProp = this.parse(name, value, true);
	      var diffProp = diffProps[prop.name] = { prev: prevProp };

	      this.applyParsedProperty(ele, parsedProp);

	      diffProp.next = ele.pstyle(prop.name);
	    } // for props

	    this.updateStyleHints(ele);

	    if (updateTransitions) {
	      this.updateTransitions(ele, diffProps, isBypass);
	    }
	  } // for eles
	};

	module.exports = styfn;

	/***/ }),
	/* 87 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var window = __webpack_require__(3);

	var styfn = {};

	// gets what an em size corresponds to in pixels relative to a dom element
	styfn.getEmSizeInPixels = function () {
	  var px = this.containerCss('font-size');

	  if (px != null) {
	    return parseFloat(px);
	  } else {
	    return 1; // for headless
	  }
	};

	// gets css property from the core container
	styfn.containerCss = function (propName) {
	  var cy = this._private.cy;
	  var domElement = cy.container();

	  if (window && domElement && window.getComputedStyle) {
	    return window.getComputedStyle(domElement).getPropertyValue(propName);
	  }
	};

	module.exports = styfn;

	/***/ }),
	/* 88 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var is = __webpack_require__(0);

	var styfn = {};

	// gets the rendered style for an element
	styfn.getRenderedStyle = function (ele, prop) {
	  if (prop) {
	    return this.getStylePropertyValue(ele, prop, true);
	  } else {
	    return this.getRawStyle(ele, true);
	  }
	};

	// gets the raw style for an element
	styfn.getRawStyle = function (ele, isRenderedVal) {
	  var self = this;

	  ele = ele[0]; // insure it's an element

	  if (ele) {
	    var rstyle = {};

	    for (var i = 0; i < self.properties.length; i++) {
	      var prop = self.properties[i];
	      var val = self.getStylePropertyValue(ele, prop.name, isRenderedVal);

	      if (val != null) {
	        rstyle[prop.name] = val;
	        rstyle[util.dash2camel(prop.name)] = val;
	      }
	    }

	    return rstyle;
	  }
	};

	styfn.getIndexedStyle = function (ele, property, subproperty, index) {
	  var pstyle = ele.pstyle(property)[subproperty][index];
	  return pstyle != null ? pstyle : ele.cy().style().getDefaultProperty(property)[subproperty][0];
	};

	styfn.getStylePropertyValue = function (ele, propName, isRenderedVal) {
	  var self = this;

	  ele = ele[0]; // insure it's an element

	  if (ele) {
	    var prop = self.properties[propName];

	    if (prop.alias) {
	      prop = prop.pointsTo;
	    }

	    var type = prop.type;
	    var styleProp = ele.pstyle(prop.name);
	    var zoom = ele.cy().zoom();

	    if (styleProp) {
	      var units = styleProp.units ? type.implicitUnits || 'px' : null;
	      var val = units ? [].concat(styleProp.pfValue).map(function (pfValue) {
	        return pfValue * (isRenderedVal ? zoom : 1) + units;
	      }).join(' ') : styleProp.strValue;

	      return val;
	    }
	  }
	};

	styfn.getAnimationStartStyle = function (ele, aniProps) {
	  var rstyle = {};

	  for (var i = 0; i < aniProps.length; i++) {
	    var aniProp = aniProps[i];
	    var name = aniProp.name;

	    var styleProp = ele.pstyle(name);

	    if (styleProp !== undefined) {
	      // then make a prop of it
	      if (is.plainObject(styleProp)) {
	        styleProp = this.parse(name, styleProp.strValue);
	      } else {
	        styleProp = this.parse(name, styleProp);
	      }
	    }

	    if (styleProp) {
	      rstyle[name] = styleProp;
	    }
	  }

	  return rstyle;
	};

	styfn.getPropsList = function (propsObj) {
	  var self = this;
	  var rstyle = [];
	  var style = propsObj;
	  var props = self.properties;

	  if (style) {
	    var names = Object.keys(style);

	    for (var i = 0; i < names.length; i++) {
	      var name = names[i];
	      var val = style[name];
	      var prop = props[name] || props[util.camel2dash(name)];
	      var styleProp = this.parse(prop.name, val);

	      if (styleProp) {
	        rstyle.push(styleProp);
	      }
	    }
	  }

	  return rstyle;
	};

	module.exports = styfn;

	/***/ }),
	/* 89 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var styfn = {};

	styfn.appendFromJson = function (json) {
	  var style = this;

	  for (var i = 0; i < json.length; i++) {
	    var context = json[i];
	    var selector = context.selector;
	    var props = context.style || context.css;
	    var names = Object.keys(props);

	    style.selector(selector); // apply selector

	    for (var j = 0; j < names.length; j++) {
	      var name = names[j];
	      var value = props[name];

	      style.css(name, value); // apply property
	    }
	  }

	  return style;
	};

	// accessible cy.style() function
	styfn.fromJson = function (json) {
	  var style = this;

	  style.resetToDefault();
	  style.appendFromJson(json);

	  return style;
	};

	// get json from cy.style() api
	styfn.json = function () {
	  var json = [];

	  for (var i = this.defaultLength; i < this.length; i++) {
	    var cxt = this[i];
	    var selector = cxt.selector;
	    var props = cxt.properties;
	    var css = {};

	    for (var j = 0; j < props.length; j++) {
	      var prop = props[j];
	      css[prop.name] = prop.strValue;
	    }

	    json.push({
	      selector: !selector ? 'core' : selector.toString(),
	      style: css
	    });
	  }

	  return json;
	};

	module.exports = styfn;

	/***/ }),
	/* 90 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var Selector = __webpack_require__(6);

	var styfn = {};

	styfn.appendFromString = function (string) {
	  var self = this;
	  var style = this;
	  var remaining = '' + string;
	  var selAndBlockStr = void 0;
	  var blockRem = void 0;
	  var propAndValStr = void 0;

	  // remove comments from the style string
	  remaining = remaining.replace(/[/][*](\s|.)+?[*][/]/g, '');

	  function removeSelAndBlockFromRemaining() {
	    // remove the parsed selector and block from the remaining text to parse
	    if (remaining.length > selAndBlockStr.length) {
	      remaining = remaining.substr(selAndBlockStr.length);
	    } else {
	      remaining = '';
	    }
	  }

	  function removePropAndValFromRem() {
	    // remove the parsed property and value from the remaining block text to parse
	    if (blockRem.length > propAndValStr.length) {
	      blockRem = blockRem.substr(propAndValStr.length);
	    } else {
	      blockRem = '';
	    }
	  }

	  while (true) {
	    var nothingLeftToParse = remaining.match(/^\s*$/);
	    if (nothingLeftToParse) {
	      break;
	    }

	    var selAndBlock = remaining.match(/^\s*((?:.|\s)+?)\s*\{((?:.|\s)+?)\}/);

	    if (!selAndBlock) {
	      util.error('Halting stylesheet parsing: String stylesheet contains more to parse but no selector and block found in: ' + remaining);
	      break;
	    }

	    selAndBlockStr = selAndBlock[0];

	    // parse the selector
	    var selectorStr = selAndBlock[1];
	    if (selectorStr !== 'core') {
	      var selector = new Selector(selectorStr);
	      if (selector._private.invalid) {
	        util.error('Skipping parsing of block: Invalid selector found in string stylesheet: ' + selectorStr);

	        // skip this selector and block
	        removeSelAndBlockFromRemaining();
	        continue;
	      }
	    }

	    // parse the block of properties and values
	    var blockStr = selAndBlock[2];
	    var invalidBlock = false;
	    blockRem = blockStr;
	    var props = [];

	    while (true) {
	      var _nothingLeftToParse = blockRem.match(/^\s*$/);
	      if (_nothingLeftToParse) {
	        break;
	      }

	      var propAndVal = blockRem.match(/^\s*(.+?)\s*:\s*(.+?)\s*;/);

	      if (!propAndVal) {
	        util.error('Skipping parsing of block: Invalid formatting of style property and value definitions found in:' + blockStr);
	        invalidBlock = true;
	        break;
	      }

	      propAndValStr = propAndVal[0];
	      var propStr = propAndVal[1];
	      var valStr = propAndVal[2];

	      var prop = self.properties[propStr];
	      if (!prop) {
	        util.error('Skipping property: Invalid property name in: ' + propAndValStr);

	        // skip this property in the block
	        removePropAndValFromRem();
	        continue;
	      }

	      var parsedProp = style.parse(propStr, valStr);

	      if (!parsedProp) {
	        util.error('Skipping property: Invalid property definition in: ' + propAndValStr);

	        // skip this property in the block
	        removePropAndValFromRem();
	        continue;
	      }

	      props.push({
	        name: propStr,
	        val: valStr
	      });
	      removePropAndValFromRem();
	    }

	    if (invalidBlock) {
	      removeSelAndBlockFromRemaining();
	      break;
	    }

	    // put the parsed block in the style
	    style.selector(selectorStr);
	    for (var i = 0; i < props.length; i++) {
	      var _prop = props[i];
	      style.css(_prop.name, _prop.val);
	    }

	    removeSelAndBlockFromRemaining();
	  }

	  return style;
	};

	styfn.fromString = function (string) {
	  var style = this;

	  style.resetToDefault();
	  style.appendFromString(string);

	  return style;
	};

	module.exports = styfn;

	/***/ }),
	/* 91 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var is = __webpack_require__(0);

	var styfn = {};

	(function () {
	  var number = util.regex.number;
	  var rgba = util.regex.rgbaNoBackRefs;
	  var hsla = util.regex.hslaNoBackRefs;
	  var hex3 = util.regex.hex3;
	  var hex6 = util.regex.hex6;
	  var data = function data(prefix) {
	    return '^' + prefix + '\\s*\\(\\s*([\\w\\.]+)\\s*\\)$';
	  };
	  var mapData = function mapData(prefix) {
	    var mapArg = number + '|\\w+|' + rgba + '|' + hsla + '|' + hex3 + '|' + hex6;
	    return '^' + prefix + '\\s*\\(([\\w\\.]+)\\s*\\,\\s*(' + number + ')\\s*\\,\\s*(' + number + ')\\s*,\\s*(' + mapArg + ')\\s*\\,\\s*(' + mapArg + ')\\)$';
	  };
	  var urlRegexes = ['^url\\s*\\(\\s*[\'"]?(.+?)[\'"]?\\s*\\)$', '^(none)$', '^(.+)$'];

	  // each visual style property has a type and needs to be validated according to it
	  styfn.types = {
	    time: { number: true, min: 0, units: 's|ms', implicitUnits: 'ms' },
	    percent: { number: true, min: 0, max: 100, units: '%', implicitUnits: '%' },
	    zeroOneNumber: { number: true, min: 0, max: 1, unitless: true },
	    zeroOneNumbers: { number: true, min: 0, max: 1, unitless: true, multiple: true },
	    nOneOneNumber: { number: true, min: -1, max: 1, unitless: true },
	    nonNegativeInt: { number: true, min: 0, integer: true, unitless: true },
	    position: { enums: ['parent', 'origin'] },
	    nodeSize: { number: true, min: 0, enums: ['label'] },
	    number: { number: true, unitless: true },
	    numbers: { number: true, unitless: true, multiple: true },
	    positiveNumber: { number: true, unitless: true, min: 0, strictMin: true },
	    size: { number: true, min: 0 },
	    bidirectionalSize: { number: true }, // allows negative
	    bidirectionalSizes: { number: true, multiple: true }, // allows negative
	    sizeMaybePercent: { number: true, min: 0, allowPercent: true },
	    paddingRelativeTo: { enums: ['width', 'height', 'average', 'min', 'max'] },
	    bgWH: { number: true, min: 0, allowPercent: true, enums: ['auto'], multiple: true },
	    bgPos: { number: true, allowPercent: true, multiple: true },
	    bgRelativeTo: { enums: ['inner', 'include-padding'], multiple: true },
	    bgRepeat: { enums: ['repeat', 'repeat-x', 'repeat-y', 'no-repeat'], multiple: true },
	    bgFit: { enums: ['none', 'contain', 'cover'], multiple: true },
	    bgCrossOrigin: { enums: ['anonymous', 'use-credentials'], multiple: true },
	    bgClip: { enums: ['none', 'node'] },
	    color: { color: true },
	    bool: { enums: ['yes', 'no'] },
	    lineStyle: { enums: ['solid', 'dotted', 'dashed'] },
	    borderStyle: { enums: ['solid', 'dotted', 'dashed', 'double'] },
	    curveStyle: { enums: ['bezier', 'unbundled-bezier', 'haystack', 'segments'] },
	    fontFamily: { regex: '^([\\w- \\"]+(?:\\s*,\\s*[\\w- \\"]+)*)$' },
	    fontletiant: { enums: ['small-caps', 'normal'] },
	    fontStyle: { enums: ['italic', 'normal', 'oblique'] },
	    fontWeight: { enums: ['normal', 'bold', 'bolder', 'lighter', '100', '200', '300', '400', '500', '600', '800', '900', 100, 200, 300, 400, 500, 600, 700, 800, 900] },
	    textDecoration: { enums: ['none', 'underline', 'overline', 'line-through'] },
	    textTransform: { enums: ['none', 'uppercase', 'lowercase'] },
	    textWrap: { enums: ['none', 'wrap', 'ellipsis'] },
	    textBackgroundShape: { enums: ['rectangle', 'roundrectangle'] },
	    nodeShape: { enums: ['rectangle', 'roundrectangle', 'cutrectangle', 'bottomroundrectangle', 'barrel', 'ellipse', 'triangle', 'square', 'pentagon', 'hexagon', 'concavehexagon', 'heptagon', 'octagon', 'tag', 'star', 'diamond', 'vee', 'rhomboid', 'polygon'] },
	    compoundIncludeLabels: { enums: ['include', 'exclude'] },
	    arrowShape: { enums: ['tee', 'triangle', 'triangle-tee', 'triangle-cross', 'triangle-backcurve', 'half-triangle-overshot', 'vee', 'square', 'circle', 'diamond', 'none'] },
	    arrowFill: { enums: ['filled', 'hollow'] },
	    display: { enums: ['element', 'none'] },
	    visibility: { enums: ['hidden', 'visible'] },
	    zCompoundDepth: { enums: ['bottom', 'orphan', 'auto', 'top'] },
	    zIndexCompare: { enums: ['auto', 'manual'] },
	    valign: { enums: ['top', 'center', 'bottom'] },
	    halign: { enums: ['left', 'center', 'right'] },
	    text: { string: true },
	    data: { mapping: true, regex: data('data') },
	    layoutData: { mapping: true, regex: data('layoutData') },
	    scratch: { mapping: true, regex: data('scratch') },
	    mapData: { mapping: true, regex: mapData('mapData') },
	    mapLayoutData: { mapping: true, regex: mapData('mapLayoutData') },
	    mapScratch: { mapping: true, regex: mapData('mapScratch') },
	    fn: { mapping: true, fn: true },
	    url: { regexes: urlRegexes, singleRegexMatchValue: true },
	    urls: { regexes: urlRegexes, singleRegexMatchValue: true, multiple: true },
	    propList: { propList: true },
	    angle: { number: true, units: 'deg|rad', implicitUnits: 'rad' },
	    textRotation: { number: true, units: 'deg|rad', implicitUnits: 'rad', enums: ['none', 'autorotate'] },
	    polygonPointList: { number: true, multiple: true, evenMultiple: true, min: -1, max: 1, unitless: true },
	    edgeDistances: { enums: ['intersection', 'node-position'] },
	    edgeEndpoint: {
	      number: true, multiple: true, units: '%|px|em|deg|rad', implicitUnits: 'px',
	      enums: ['inside-to-node', 'outside-to-node', 'outside-to-line'], singleEnum: true,
	      validate: function validate(valArr, unitsArr) {
	        switch (valArr.length) {
	          case 2:
	            // can be % or px only
	            return unitsArr[0] !== 'deg' && unitsArr[0] !== 'rad' && unitsArr[1] !== 'deg' && unitsArr[1] !== 'rad';
	          case 1:
	            // can be enum, deg, or rad only
	            return is.string(valArr[0]) || unitsArr[0] === 'deg' || unitsArr[0] === 'rad';
	          default:
	            return false;
	        }
	      }
	    },
	    easing: {
	      regexes: ['^(spring)\\s*\\(\\s*(' + number + ')\\s*,\\s*(' + number + ')\\s*\\)$', '^(cubic-bezier)\\s*\\(\\s*(' + number + ')\\s*,\\s*(' + number + ')\\s*,\\s*(' + number + ')\\s*,\\s*(' + number + ')\\s*\\)$'],
	      enums: ['linear', 'ease', 'ease-in', 'ease-out', 'ease-in-out', 'ease-in-sine', 'ease-out-sine', 'ease-in-out-sine', 'ease-in-quad', 'ease-out-quad', 'ease-in-out-quad', 'ease-in-cubic', 'ease-out-cubic', 'ease-in-out-cubic', 'ease-in-quart', 'ease-out-quart', 'ease-in-out-quart', 'ease-in-quint', 'ease-out-quint', 'ease-in-out-quint', 'ease-in-expo', 'ease-out-expo', 'ease-in-out-expo', 'ease-in-circ', 'ease-out-circ', 'ease-in-out-circ']
	    }
	  };

	  var zOrderDiff = {
	    zeroNonZero: function zeroNonZero(val1, val2) {
	      if (val1 === 0 && val2 !== 0) {
	        return true;
	      } else if (val1 !== 0 && val2 === 0) {
	        return true;
	      } else {
	        return false;
	      }
	    },
	    anyDiff: function anyDiff(val1, val2) {
	      return val1 !== val2;
	    }
	  };

	  var zd = zOrderDiff;

	  // define visual style properties
	  var t = styfn.types;
	  var props = styfn.properties = [
	  // main label
	  { name: 'label', type: t.text }, { name: 'text-rotation', type: t.textRotation }, { name: 'text-margin-x', type: t.bidirectionalSize }, { name: 'text-margin-y', type: t.bidirectionalSize },

	  // source label
	  { name: 'source-label', type: t.text }, { name: 'source-text-rotation', type: t.textRotation }, { name: 'source-text-margin-x', type: t.bidirectionalSize }, { name: 'source-text-margin-y', type: t.bidirectionalSize }, { name: 'source-text-offset', type: t.size },

	  // target label
	  { name: 'target-label', type: t.text }, { name: 'target-text-rotation', type: t.textRotation }, { name: 'target-text-margin-x', type: t.bidirectionalSize }, { name: 'target-text-margin-y', type: t.bidirectionalSize }, { name: 'target-text-offset', type: t.size },

	  // common label style
	  { name: 'text-valign', type: t.valign }, { name: 'text-halign', type: t.halign }, { name: 'color', type: t.color }, { name: 'text-outline-color', type: t.color }, { name: 'text-outline-width', type: t.size }, { name: 'text-outline-opacity', type: t.zeroOneNumber }, { name: 'text-opacity', type: t.zeroOneNumber }, { name: 'text-background-color', type: t.color }, { name: 'text-background-opacity', type: t.zeroOneNumber }, { name: 'text-background-padding', type: t.size }, { name: 'text-border-opacity', type: t.zeroOneNumber }, { name: 'text-border-color', type: t.color }, { name: 'text-border-width', type: t.size }, { name: 'text-border-style', type: t.borderStyle }, { name: 'text-background-shape', type: t.textBackgroundShape },
	  // { name: 'text-decoration', type: t.textDecoration }, // not supported in canvas
	  { name: 'text-transform', type: t.textTransform }, { name: 'text-wrap', type: t.textWrap }, { name: 'text-max-width', type: t.size }, { name: 'text-events', type: t.bool }, { name: 'font-family', type: t.fontFamily }, { name: 'font-style', type: t.fontStyle },
	  // { name: 'font-letiant', type: t.fontletiant }, // not useful
	  { name: 'font-weight', type: t.fontWeight }, { name: 'font-size', type: t.size }, { name: 'min-zoomed-font-size', type: t.size },

	  // behaviour
	  { name: 'events', type: t.bool },

	  // visibility
	  { name: 'display', type: t.display, triggersZOrder: zd.anyDiff }, { name: 'visibility', type: t.visibility, triggersZOrder: zd.anyDiff }, { name: 'opacity', type: t.zeroOneNumber, triggersZOrder: zd.zeroNonZero }, { name: 'z-compound-depth', type: t.zCompoundDepth, triggersZOrder: zd.anyDiff }, { name: 'z-index-compare', type: t.zIndexCompare, triggersZOrder: zd.anyDiff }, { name: 'z-index', type: t.nonNegativeInt, triggersZOrder: zd.anyDiff },

	  // overlays
	  { name: 'overlay-padding', type: t.size }, { name: 'overlay-color', type: t.color }, { name: 'overlay-opacity', type: t.zeroOneNumber },

	  // transition anis
	  { name: 'transition-property', type: t.propList }, { name: 'transition-duration', type: t.time }, { name: 'transition-delay', type: t.time }, { name: 'transition-timing-function', type: t.easing },

	  // node body
	  { name: 'height', type: t.nodeSize }, { name: 'width', type: t.nodeSize }, { name: 'shape', type: t.nodeShape }, { name: 'shape-polygon-points', type: t.polygonPointList }, { name: 'background-color', type: t.color }, { name: 'background-opacity', type: t.zeroOneNumber }, { name: 'background-blacken', type: t.nOneOneNumber }, { name: 'padding', type: t.sizeMaybePercent }, { name: 'padding-relative-to', type: t.paddingRelativeTo },

	  // node border
	  { name: 'border-color', type: t.color }, { name: 'border-opacity', type: t.zeroOneNumber }, { name: 'border-width', type: t.size }, { name: 'border-style', type: t.borderStyle },

	  // node background images
	  { name: 'background-image', type: t.urls }, { name: 'background-image-crossorigin', type: t.bgCrossOrigin }, { name: 'background-image-opacity', type: t.zeroOneNumbers }, { name: 'background-position-x', type: t.bgPos }, { name: 'background-position-y', type: t.bgPos }, { name: 'background-width-relative-to', type: t.bgRelativeTo }, { name: 'background-height-relative-to', type: t.bgRelativeTo }, { name: 'background-repeat', type: t.bgRepeat }, { name: 'background-fit', type: t.bgFit }, { name: 'background-clip', type: t.bgClip }, { name: 'background-width', type: t.bgWH }, { name: 'background-height', type: t.bgWH },

	  // compound props
	  { name: 'position', type: t.position }, { name: 'compound-sizing-wrt-labels', type: t.compoundIncludeLabels }, { name: 'min-width', type: t.size }, { name: 'min-width-bias-left', type: t.sizeMaybePercent }, { name: 'min-width-bias-right', type: t.sizeMaybePercent }, { name: 'min-height', type: t.size }, { name: 'min-height-bias-top', type: t.sizeMaybePercent }, { name: 'min-height-bias-bottom', type: t.sizeMaybePercent },

	  // edge line
	  { name: 'line-style', type: t.lineStyle }, { name: 'line-color', type: t.color }, { name: 'curve-style', type: t.curveStyle }, { name: 'haystack-radius', type: t.zeroOneNumber }, { name: 'source-endpoint', type: t.edgeEndpoint }, { name: 'target-endpoint', type: t.edgeEndpoint }, { name: 'control-point-step-size', type: t.size }, { name: 'control-point-distances', type: t.bidirectionalSizes }, { name: 'control-point-weights', type: t.numbers }, { name: 'segment-distances', type: t.bidirectionalSizes }, { name: 'segment-weights', type: t.numbers }, { name: 'edge-distances', type: t.edgeDistances }, { name: 'arrow-scale', type: t.positiveNumber }, { name: 'loop-direction', type: t.angle }, { name: 'loop-sweep', type: t.angle }, { name: 'source-distance-from-node', type: t.size }, { name: 'target-distance-from-node', type: t.size },

	  // ghost properties
	  { name: 'ghost', type: t.bool }, { name: 'ghost-offset-x', type: t.bidirectionalSize }, { name: 'ghost-offset-y', type: t.bidirectionalSize }, { name: 'ghost-opacity', type: t.zeroOneNumber },

	  // these are just for the core
	  { name: 'selection-box-color', type: t.color }, { name: 'selection-box-opacity', type: t.zeroOneNumber }, { name: 'selection-box-border-color', type: t.color }, { name: 'selection-box-border-width', type: t.size }, { name: 'active-bg-color', type: t.color }, { name: 'active-bg-opacity', type: t.zeroOneNumber }, { name: 'active-bg-size', type: t.size }, { name: 'outside-texture-bg-color', type: t.color }, { name: 'outside-texture-bg-opacity', type: t.zeroOneNumber }];

	  // define aliases
	  var aliases = styfn.aliases = [{ name: 'content', pointsTo: 'label' }, { name: 'control-point-distance', pointsTo: 'control-point-distances' }, { name: 'control-point-weight', pointsTo: 'control-point-weights' }, { name: 'edge-text-rotation', pointsTo: 'text-rotation' }, { name: 'padding-left', pointsTo: 'padding' }, { name: 'padding-right', pointsTo: 'padding' }, { name: 'padding-top', pointsTo: 'padding' }, { name: 'padding-bottom', pointsTo: 'padding' }];

	  // pie backgrounds for nodes
	  styfn.pieBackgroundN = 16; // because the pie properties are numbered, give access to a constant N (for renderer use)
	  props.push({ name: 'pie-size', type: t.sizeMaybePercent });
	  for (var i = 1; i <= styfn.pieBackgroundN; i++) {
	    props.push({ name: 'pie-' + i + '-background-color', type: t.color });
	    props.push({ name: 'pie-' + i + '-background-size', type: t.percent });
	    props.push({ name: 'pie-' + i + '-background-opacity', type: t.zeroOneNumber });
	  }

	  // edge arrows
	  var arrowPrefixes = styfn.arrowPrefixes = ['source', 'mid-source', 'target', 'mid-target'];
	  [{ name: 'arrow-shape', type: t.arrowShape }, { name: 'arrow-color', type: t.color }, { name: 'arrow-fill', type: t.arrowFill }].forEach(function (prop) {
	    arrowPrefixes.forEach(function (prefix) {
	      var name = prefix + '-' + prop.name;
	      var type = prop.type;

	      props.push({ name: name, type: type });
	    });
	  }, {});

	  // list of property names
	  styfn.propertyNames = props.map(function (p) {
	    return p.name;
	  });

	  // allow access of properties by name ( e.g. style.properties.height )
	  for (var _i = 0; _i < props.length; _i++) {
	    var prop = props[_i];

	    props[prop.name] = prop; // allow lookup by name
	  }

	  // map aliases
	  for (var _i2 = 0; _i2 < aliases.length; _i2++) {
	    var alias = aliases[_i2];
	    var pointsToProp = props[alias.pointsTo];
	    var aliasProp = {
	      name: alias.name,
	      alias: true,
	      pointsTo: pointsToProp
	    };

	    // add alias prop for parsing
	    props.push(aliasProp);

	    props[alias.name] = aliasProp; // allow lookup by name
	  }
	})();

	styfn.getDefaultProperty = function (name) {
	  return this.getDefaultProperties()[name];
	};

	styfn.getDefaultProperties = util.memoize(function () {
	  var rawProps = util.extend({
	    // common node/edge props
	    'events': 'yes',
	    'text-events': 'no',
	    'text-valign': 'top',
	    'text-halign': 'center',
	    'color': '#000',
	    'text-outline-color': '#000',
	    'text-outline-width': 0,
	    'text-outline-opacity': 1,
	    'text-opacity': 1,
	    'text-decoration': 'none',
	    'text-transform': 'none',
	    'text-wrap': 'none',
	    'text-max-width': 9999,
	    'text-background-color': '#000',
	    'text-background-opacity': 0,
	    'text-background-shape': 'rectangle',
	    'text-background-padding': 0,
	    'text-border-opacity': 0,
	    'text-border-width': 0,
	    'text-border-style': 'solid',
	    'text-border-color': '#000',
	    'font-family': 'Helvetica Neue, Helvetica, sans-serif',
	    'font-style': 'normal',
	    // 'font-letiant': fontletiant,
	    'font-weight': 'normal',
	    'font-size': 16,
	    'min-zoomed-font-size': 0,
	    'text-rotation': 'none',
	    'source-text-rotation': 'none',
	    'target-text-rotation': 'none',
	    'visibility': 'visible',
	    'display': 'element',
	    'opacity': 1,
	    'z-compound-depth': 'auto',
	    'z-index-compare': 'auto',
	    'z-index': 0,
	    'label': '',
	    'text-margin-x': 0,
	    'text-margin-y': 0,
	    'source-label': '',
	    'source-text-offset': 0,
	    'source-text-margin-x': 0,
	    'source-text-margin-y': 0,
	    'target-label': '',
	    'target-text-offset': 0,
	    'target-text-margin-x': 0,
	    'target-text-margin-y': 0,
	    'overlay-opacity': 0,
	    'overlay-color': '#000',
	    'overlay-padding': 10,
	    'transition-property': 'none',
	    'transition-duration': 0,
	    'transition-delay': 0,
	    'transition-timing-function': 'linear',

	    // node props
	    'background-blacken': 0,
	    'background-color': '#999',
	    'background-opacity': 1,
	    'background-image': 'none',
	    'background-image-crossorigin': 'anonymous',
	    'background-image-opacity': 1,
	    'background-position-x': '50%',
	    'background-position-y': '50%',
	    'background-width-relative-to': 'include-padding',
	    'background-height-relative-to': 'include-padding',
	    'background-repeat': 'no-repeat',
	    'background-fit': 'none',
	    'background-clip': 'node',
	    'background-width': 'auto',
	    'background-height': 'auto',
	    'border-color': '#000',
	    'border-opacity': 1,
	    'border-width': 0,
	    'border-style': 'solid',
	    'height': 30,
	    'width': 30,
	    'shape': 'ellipse',
	    'shape-polygon-points': '-1, -1,   1, -1,   1, 1,   -1, 1',

	    // ghost props
	    'ghost': 'no',
	    'ghost-offset-y': 0,
	    'ghost-offset-x': 0,
	    'ghost-opacity': 0,

	    // compound props
	    'padding': 0,
	    'padding-relative-to': 'width',
	    'position': 'origin',
	    'compound-sizing-wrt-labels': 'include',
	    'min-width': 0,
	    'min-width-bias-left': 0,
	    'min-width-bias-right': 0,
	    'min-height': 0,
	    'min-height-bias-top': 0,
	    'min-height-bias-bottom': 0
	  }, {
	    // node pie bg
	    'pie-size': '100%'
	  }, [{ name: 'pie-{{i}}-background-color', value: 'black' }, { name: 'pie-{{i}}-background-size', value: '0%' }, { name: 'pie-{{i}}-background-opacity', value: 1 }].reduce(function (css, prop) {
	    for (var i = 1; i <= styfn.pieBackgroundN; i++) {
	      var name = prop.name.replace('{{i}}', i);
	      var val = prop.value;

	      css[name] = val;
	    }

	    return css;
	  }, {}), {
	    // edge props
	    'line-style': 'solid',
	    'line-color': '#999',
	    'control-point-step-size': 40,
	    'control-point-weights': 0.5,
	    'segment-weights': 0.5,
	    'segment-distances': 20,
	    'edge-distances': 'intersection',
	    'curve-style': 'bezier',
	    'haystack-radius': 0,
	    'arrow-scale': 1,
	    'loop-direction': '-45deg',
	    'loop-sweep': '-90deg',
	    'source-distance-from-node': 0,
	    'target-distance-from-node': 0,
	    'source-endpoint': 'outside-to-node',
	    'target-endpoint': 'outside-to-node'
	  }, [{ name: 'arrow-shape', value: 'none' }, { name: 'arrow-color', value: '#999' }, { name: 'arrow-fill', value: 'filled' }].reduce(function (css, prop) {
	    styfn.arrowPrefixes.forEach(function (prefix) {
	      var name = prefix + '-' + prop.name;
	      var val = prop.value;

	      css[name] = val;
	    });

	    return css;
	  }, {}));

	  var parsedProps = {};

	  for (var i = 0; i < this.properties.length; i++) {
	    var prop = this.properties[i];

	    if (prop.pointsTo) {
	      continue;
	    }

	    var name = prop.name;
	    var val = rawProps[name];
	    var parsedProp = this.parse(name, val);

	    parsedProps[name] = parsedProp;
	  }

	  return parsedProps;
	});

	styfn.addDefaultStylesheet = function () {
	  this.selector('$node > node') // compound (parent) node properties
	  .css({
	    'shape': 'rectangle',
	    'padding': 10,
	    'background-color': '#eee',
	    'border-color': '#ccc',
	    'border-width': 1
	  }).selector('edge') // just edge properties
	  .css({
	    'width': 3,
	    'curve-style': 'haystack'
	  }).selector(':parent <-> node').css({
	    'curve-style': 'bezier',
	    'source-endpoint': 'outside-to-line',
	    'target-endpoint': 'outside-to-line'
	  }).selector(':selected').css({
	    'background-color': '#0169D9',
	    'line-color': '#0169D9',
	    'source-arrow-color': '#0169D9',
	    'target-arrow-color': '#0169D9',
	    'mid-source-arrow-color': '#0169D9',
	    'mid-target-arrow-color': '#0169D9'
	  }).selector('node:parent:selected').css({
	    'background-color': '#CCE1F9',
	    'border-color': '#aec8e5'
	  }).selector(':active').css({
	    'overlay-color': 'black',
	    'overlay-padding': 10,
	    'overlay-opacity': 0.25
	  }).selector('core') // just core properties
	  .css({
	    'selection-box-color': '#ddd',
	    'selection-box-opacity': 0.65,
	    'selection-box-border-color': '#aaa',
	    'selection-box-border-width': 1,
	    'active-bg-color': 'black',
	    'active-bg-opacity': 0.15,
	    'active-bg-size': 30,
	    'outside-texture-bg-color': '#000',
	    'outside-texture-bg-opacity': 0.125
	  });

	  this.defaultLength = this.length;
	};

	module.exports = styfn;

	/***/ }),
	/* 92 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var is = __webpack_require__(0);
	var math = __webpack_require__(2);

	var styfn = {};

	// a caching layer for property parsing
	styfn.parse = function (name, value, propIsBypass, propIsFlat) {
	  var self = this;

	  // function values can't be cached in all cases, and there isn't much benefit of caching them anyway
	  if (is.fn(value)) {
	    return self.parseImplWarn(name, value, propIsBypass, propIsFlat);
	  }

	  var flatKey = propIsFlat === 'mapping' || propIsFlat === true || propIsFlat === false || propIsFlat == null ? 'dontcare' : propIsFlat;
	  var argHash = [name, value, propIsBypass, flatKey].join('$');
	  var propCache = self.propCache = self.propCache || {};
	  var ret = void 0;

	  if (!(ret = propCache[argHash])) {
	    ret = propCache[argHash] = self.parseImplWarn(name, value, propIsBypass, propIsFlat);
	  }

	  // - bypasses can't be shared b/c the value can be changed by animations or otherwise overridden
	  // - mappings can't be shared b/c mappings are per-element
	  if (propIsBypass || propIsFlat === 'mapping') {
	    // need a copy since props are mutated later in their lifecycles
	    ret = util.copy(ret);

	    if (ret) {
	      ret.value = util.copy(ret.value); // because it could be an array, e.g. colour
	    }
	  }

	  return ret;
	};

	styfn.parseImplWarn = function (name, value, propIsBypass, propIsFlat) {
	  var prop = this.parseImpl(name, value, propIsBypass, propIsFlat);

	  if (!prop && value != null) {
	    util.error('The style property `%s: %s` is invalid', name, value);
	  }

	  return prop;
	};

	// parse a property; return null on invalid; return parsed property otherwise
	// fields :
	// - name : the name of the property
	// - value : the parsed, native-typed value of the property
	// - strValue : a string value that represents the property value in valid css
	// - bypass : true iff the property is a bypass property
	styfn.parseImpl = function (name, value, propIsBypass, propIsFlat) {
	  var self = this;

	  name = util.camel2dash(name); // make sure the property name is in dash form (e.g. 'property-name' not 'propertyName')

	  var property = self.properties[name];
	  var passedValue = value;
	  var types = self.types;

	  if (!property) {
	    return null;
	  } // return null on property of unknown name
	  if (value === undefined) {
	    return null;
	  } // can't assign undefined

	  // the property may be an alias
	  if (property.alias) {
	    property = property.pointsTo;
	    name = property.name;
	  }

	  var valueIsString = is.string(value);
	  if (valueIsString) {
	    // trim the value to make parsing easier
	    value = value.trim();
	  }

	  var type = property.type;
	  if (!type) {
	    return null;
	  } // no type, no luck

	  // check if bypass is null or empty string (i.e. indication to delete bypass property)
	  if (propIsBypass && (value === '' || value === null)) {
	    return {
	      name: name,
	      value: value,
	      bypass: true,
	      deleteBypass: true
	    };
	  }

	  // check if value is a function used as a mapper
	  if (is.fn(value)) {
	    return {
	      name: name,
	      value: value,
	      strValue: 'fn',
	      mapped: types.fn,
	      bypass: propIsBypass
	    };
	  }

	  // check if value is mapped
	  var data = void 0,
	      mapData = void 0;
	  if (!valueIsString || propIsFlat) {
	    // then don't bother to do the expensive regex checks

	  } else if (data = new RegExp(types.data.regex).exec(value)) {
	    if (propIsBypass) {
	      return false;
	    } // mappers not allowed in bypass

	    var mapped = types.data;

	    return {
	      name: name,
	      value: data,
	      strValue: '' + value,
	      mapped: mapped,
	      field: data[1],
	      bypass: propIsBypass
	    };
	  } else if (mapData = new RegExp(types.mapData.regex).exec(value)) {
	    if (propIsBypass) {
	      return false;
	    } // mappers not allowed in bypass
	    if (type.multiple) {
	      return false;
	    } // impossible to map to num

	    var _mapped = types.mapData;

	    // we can map only if the type is a colour or a number
	    if (!(type.color || type.number)) {
	      return false;
	    }

	    var valueMin = this.parse(name, mapData[4]); // parse to validate
	    if (!valueMin || valueMin.mapped) {
	      return false;
	    } // can't be invalid or mapped

	    var valueMax = this.parse(name, mapData[5]); // parse to validate
	    if (!valueMax || valueMax.mapped) {
	      return false;
	    } // can't be invalid or mapped

	    // check if valueMin and valueMax are the same
	    if (valueMin.value === valueMax.value) {
	      return false; // can't make much of a mapper without a range
	    } else if (type.color) {
	      var c1 = valueMin.value;
	      var c2 = valueMax.value;

	      var same = c1[0] === c2[0] // red
	      && c1[1] === c2[1] // green
	      && c1[2] === c2[2] // blue
	      && ( // optional alpha
	      c1[3] === c2[3] // same alpha outright
	      || (c1[3] == null || c1[3] === 1) && ( // full opacity for colour 1?
	      c2[3] == null || c2[3] === 1) // full opacity for colour 2?
	      );

	      if (same) {
	        return false;
	      } // can't make a mapper without a range
	    }

	    return {
	      name: name,
	      value: mapData,
	      strValue: '' + value,
	      mapped: _mapped,
	      field: mapData[1],
	      fieldMin: parseFloat(mapData[2]), // min & max are numeric
	      fieldMax: parseFloat(mapData[3]),
	      valueMin: valueMin.value,
	      valueMax: valueMax.value,
	      bypass: propIsBypass
	    };
	  }

	  if (type.multiple && propIsFlat !== 'multiple') {
	    var vals = void 0;

	    if (valueIsString) {
	      vals = value.split(/\s+/);
	    } else if (is.array(value)) {
	      vals = value;
	    } else {
	      vals = [value];
	    }

	    if (type.evenMultiple && vals.length % 2 !== 0) {
	      return null;
	    }

	    var valArr = [];
	    var unitsArr = [];
	    var pfValArr = [];
	    var hasEnum = false;

	    for (var i = 0; i < vals.length; i++) {
	      var p = self.parse(name, vals[i], propIsBypass, 'multiple');

	      hasEnum = hasEnum || is.string(p.value);

	      valArr.push(p.value);
	      pfValArr.push(p.pfValue != null ? p.pfValue : p.value);
	      unitsArr.push(p.units);
	    }

	    if (type.validate && !type.validate(valArr, unitsArr)) {
	      return null;
	    }

	    if (type.singleEnum && hasEnum) {
	      if (valArr.length === 1 && is.string(valArr[0])) {
	        return {
	          name: name,
	          value: valArr[0],
	          strValue: valArr[0],
	          bypass: propIsBypass
	        };
	      } else {
	        return null;
	      }
	    }

	    return {
	      name: name,
	      value: valArr,
	      pfValue: pfValArr,
	      strValue: valArr.map(function (val, i) {
	        return val + (unitsArr[i] || '');
	      }).join(' '),
	      bypass: propIsBypass,
	      units: unitsArr
	    };
	  }

	  // several types also allow enums
	  var checkEnums = function checkEnums() {
	    for (var _i = 0; _i < type.enums.length; _i++) {
	      var en = type.enums[_i];

	      if (en === value) {
	        return {
	          name: name,
	          value: value,
	          strValue: '' + value,
	          bypass: propIsBypass
	        };
	      }
	    }

	    return null;
	  };

	  // check the type and return the appropriate object
	  if (type.number) {
	    var units = void 0;
	    var implicitUnits = 'px'; // not set => px

	    if (type.units) {
	      // use specified units if set
	      units = type.units;
	    }

	    if (type.implicitUnits) {
	      implicitUnits = type.implicitUnits;
	    }

	    if (!type.unitless) {
	      if (valueIsString) {
	        var unitsRegex = 'px|em' + (type.allowPercent ? '|\\%' : '');
	        if (units) {
	          unitsRegex = units;
	        } // only allow explicit units if so set
	        var match = value.match('^(' + util.regex.number + ')(' + unitsRegex + ')?' + '$');

	        if (match) {
	          value = match[1];
	          units = match[2] || implicitUnits;
	        }
	      } else if (!units || type.implicitUnits) {
	        units = implicitUnits; // implicitly px if unspecified
	      }
	    }

	    value = parseFloat(value);

	    // if not a number and enums not allowed, then the value is invalid
	    if (isNaN(value) && type.enums === undefined) {
	      return null;
	    }

	    // check if this number type also accepts special keywords in place of numbers
	    // (i.e. `left`, `auto`, etc)
	    if (isNaN(value) && type.enums !== undefined) {
	      value = passedValue;

	      return checkEnums();
	    }

	    // check if value must be an integer
	    if (type.integer && !is.integer(value)) {
	      return null;
	    }

	    // check value is within range
	    if (type.min !== undefined && (value < type.min || type.strictMin && value === type.min) || type.max !== undefined && (value > type.max || type.strictMax && value === type.max)) {
	      return null;
	    }

	    var ret = {
	      name: name,
	      value: value,
	      strValue: '' + value + (units ? units : ''),
	      units: units,
	      bypass: propIsBypass
	    };

	    // normalise value in pixels
	    if (type.unitless || units !== 'px' && units !== 'em') {
	      ret.pfValue = value;
	    } else {
	      ret.pfValue = units === 'px' || !units ? value : this.getEmSizeInPixels() * value;
	    }

	    // normalise value in ms
	    if (units === 'ms' || units === 's') {
	      ret.pfValue = units === 'ms' ? value : 1000 * value;
	    }

	    // normalise value in rad
	    if (units === 'deg' || units === 'rad') {
	      ret.pfValue = units === 'rad' ? value : math.deg2rad(value);
	    }

	    // normalize value in %
	    if (units === '%') {
	      ret.pfValue = value / 100;
	    }

	    return ret;
	  } else if (type.propList) {

	    var props = [];
	    var propsStr = '' + value;

	    if (propsStr === 'none') {
	      // leave empty

	    } else {
	      // go over each prop

	      var propsSplit = propsStr.split(',');
	      for (var _i2 = 0; _i2 < propsSplit.length; _i2++) {
	        var propName = propsSplit[_i2].trim();

	        if (self.properties[propName]) {
	          props.push(propName);
	        }
	      }

	      if (props.length === 0) {
	        return null;
	      }
	    }

	    return {
	      name: name,
	      value: props,
	      strValue: props.length === 0 ? 'none' : props.join(', '),
	      bypass: propIsBypass
	    };
	  } else if (type.color) {
	    var tuple = util.color2tuple(value);

	    if (!tuple) {
	      return null;
	    }

	    return {
	      name: name,
	      value: tuple,
	      pfValue: tuple,
	      strValue: '' + value,
	      bypass: propIsBypass
	    };
	  } else if (type.regex || type.regexes) {

	    // first check enums
	    if (type.enums) {
	      var enumProp = checkEnums();

	      if (enumProp) {
	        return enumProp;
	      }
	    }

	    var regexes = type.regexes ? type.regexes : [type.regex];

	    for (var _i3 = 0; _i3 < regexes.length; _i3++) {
	      var regex = new RegExp(regexes[_i3]); // make a regex from the type string
	      var m = regex.exec(value);

	      if (m) {
	        // regex matches
	        return {
	          name: name,
	          value: type.singleRegexMatchValue ? m[1] : m,
	          strValue: '' + value,
	          bypass: propIsBypass
	        };
	      }
	    }

	    return null; // didn't match any
	  } else if (type.string) {
	    // just return
	    return {
	      name: name,
	      value: '' + value,
	      strValue: '' + value,
	      bypass: propIsBypass
	    };
	  } else if (type.enums) {
	    // check enums last because it's a combo type in others
	    return checkEnums();
	  } else {
	    return null; // not a type we can handle
	  }
	};

	module.exports = styfn;

	/***/ }),
	/* 93 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var window = __webpack_require__(3);
	var math = __webpack_require__(2);

	var corefn = {

	  autolock: function autolock(bool) {
	    if (bool !== undefined) {
	      this._private.autolock = bool ? true : false;
	    } else {
	      return this._private.autolock;
	    }

	    return this; // chaining
	  },

	  autoungrabify: function autoungrabify(bool) {
	    if (bool !== undefined) {
	      this._private.autoungrabify = bool ? true : false;
	    } else {
	      return this._private.autoungrabify;
	    }

	    return this; // chaining
	  },

	  autounselectify: function autounselectify(bool) {
	    if (bool !== undefined) {
	      this._private.autounselectify = bool ? true : false;
	    } else {
	      return this._private.autounselectify;
	    }

	    return this; // chaining
	  },

	  panningEnabled: function panningEnabled(bool) {
	    if (bool !== undefined) {
	      this._private.panningEnabled = bool ? true : false;
	    } else {
	      return this._private.panningEnabled;
	    }

	    return this; // chaining
	  },

	  userPanningEnabled: function userPanningEnabled(bool) {
	    if (bool !== undefined) {
	      this._private.userPanningEnabled = bool ? true : false;
	    } else {
	      return this._private.userPanningEnabled;
	    }

	    return this; // chaining
	  },

	  zoomingEnabled: function zoomingEnabled(bool) {
	    if (bool !== undefined) {
	      this._private.zoomingEnabled = bool ? true : false;
	    } else {
	      return this._private.zoomingEnabled;
	    }

	    return this; // chaining
	  },

	  userZoomingEnabled: function userZoomingEnabled(bool) {
	    if (bool !== undefined) {
	      this._private.userZoomingEnabled = bool ? true : false;
	    } else {
	      return this._private.userZoomingEnabled;
	    }

	    return this; // chaining
	  },

	  boxSelectionEnabled: function boxSelectionEnabled(bool) {
	    if (bool !== undefined) {
	      this._private.boxSelectionEnabled = bool ? true : false;
	    } else {
	      return this._private.boxSelectionEnabled;
	    }

	    return this; // chaining
	  },

	  pan: function pan() {
	    var args = arguments;
	    var pan = this._private.pan;
	    var dim = void 0,
	        val = void 0,
	        dims = void 0,
	        x = void 0,
	        y = void 0;

	    switch (args.length) {
	      case 0:
	        // .pan()
	        return pan;

	      case 1:

	        if (is.string(args[0])) {
	          // .pan('x')
	          dim = args[0];
	          return pan[dim];
	        } else if (is.plainObject(args[0])) {
	          // .pan({ x: 0, y: 100 })
	          if (!this._private.panningEnabled) {
	            return this;
	          }

	          dims = args[0];
	          x = dims.x;
	          y = dims.y;

	          if (is.number(x)) {
	            pan.x = x;
	          }

	          if (is.number(y)) {
	            pan.y = y;
	          }

	          this.emit('pan viewport');
	        }
	        break;

	      case 2:
	        // .pan('x', 100)
	        if (!this._private.panningEnabled) {
	          return this;
	        }

	        dim = args[0];
	        val = args[1];

	        if ((dim === 'x' || dim === 'y') && is.number(val)) {
	          pan[dim] = val;
	        }

	        this.emit('pan viewport');
	        break;

	      default:
	        break; // invalid
	    }

	    this.notify({ // notify the renderer that the viewport changed
	      type: 'viewport'
	    });

	    return this; // chaining
	  },

	  panBy: function panBy(arg0, arg1) {
	    var args = arguments;
	    var pan = this._private.pan;
	    var dim = void 0,
	        val = void 0,
	        dims = void 0,
	        x = void 0,
	        y = void 0;

	    if (!this._private.panningEnabled) {
	      return this;
	    }

	    switch (args.length) {
	      case 1:

	        if (is.plainObject(arg0)) {
	          // .panBy({ x: 0, y: 100 })
	          dims = args[0];
	          x = dims.x;
	          y = dims.y;

	          if (is.number(x)) {
	            pan.x += x;
	          }

	          if (is.number(y)) {
	            pan.y += y;
	          }

	          this.emit('pan viewport');
	        }
	        break;

	      case 2:
	        // .panBy('x', 100)
	        dim = arg0;
	        val = arg1;

	        if ((dim === 'x' || dim === 'y') && is.number(val)) {
	          pan[dim] += val;
	        }

	        this.emit('pan viewport');
	        break;

	      default:
	        break; // invalid
	    }

	    this.notify({ // notify the renderer that the viewport changed
	      type: 'viewport'
	    });

	    return this; // chaining
	  },

	  fit: function fit(elements, padding) {
	    var viewportState = this.getFitViewport(elements, padding);

	    if (viewportState) {
	      var _p = this._private;
	      _p.zoom = viewportState.zoom;
	      _p.pan = viewportState.pan;

	      this.emit('pan zoom viewport');

	      this.notify({ // notify the renderer that the viewport changed
	        type: 'viewport'
	      });
	    }

	    return this; // chaining
	  },

	  getFitViewport: function getFitViewport(elements, padding) {
	    if (is.number(elements) && padding === undefined) {
	      // elements is optional
	      padding = elements;
	      elements = undefined;
	    }

	    if (!this._private.panningEnabled || !this._private.zoomingEnabled) {
	      return;
	    }

	    var bb = void 0;

	    if (is.string(elements)) {
	      var sel = elements;
	      elements = this.$(sel);
	    } else if (is.boundingBox(elements)) {
	      // assume bb
	      var bbe = elements;
	      bb = {
	        x1: bbe.x1,
	        y1: bbe.y1,
	        x2: bbe.x2,
	        y2: bbe.y2
	      };

	      bb.w = bb.x2 - bb.x1;
	      bb.h = bb.y2 - bb.y1;
	    } else if (!is.elementOrCollection(elements)) {
	      elements = this.mutableElements();
	    }

	    if (is.elementOrCollection(elements) && elements.empty()) {
	      return;
	    } // can't fit to nothing

	    bb = bb || elements.boundingBox();

	    var w = this.width();
	    var h = this.height();
	    var zoom = void 0;
	    padding = is.number(padding) ? padding : 0;

	    if (!isNaN(w) && !isNaN(h) && w > 0 && h > 0 && !isNaN(bb.w) && !isNaN(bb.h) && bb.w > 0 && bb.h > 0) {
	      zoom = Math.min((w - 2 * padding) / bb.w, (h - 2 * padding) / bb.h);

	      // crop zoom
	      zoom = zoom > this._private.maxZoom ? this._private.maxZoom : zoom;
	      zoom = zoom < this._private.minZoom ? this._private.minZoom : zoom;

	      var pan = { // now pan to middle
	        x: (w - zoom * (bb.x1 + bb.x2)) / 2,
	        y: (h - zoom * (bb.y1 + bb.y2)) / 2
	      };

	      return {
	        zoom: zoom,
	        pan: pan
	      };
	    }

	    return;
	  },

	  minZoom: function minZoom(zoom) {
	    if (zoom === undefined) {
	      return this._private.minZoom;
	    } else if (is.number(zoom)) {
	      this._private.minZoom = zoom;
	    }

	    return this;
	  },

	  maxZoom: function maxZoom(zoom) {
	    if (zoom === undefined) {
	      return this._private.maxZoom;
	    } else if (is.number(zoom)) {
	      this._private.maxZoom = zoom;
	    }

	    return this;
	  },

	  getZoomedViewport: function getZoomedViewport(params) {
	    var _p = this._private;
	    var currentPan = _p.pan;
	    var currentZoom = _p.zoom;
	    var pos = void 0; // in rendered px
	    var zoom = void 0;
	    var bail = false;

	    if (!_p.zoomingEnabled) {
	      // zooming disabled
	      bail = true;
	    }

	    if (is.number(params)) {
	      // then set the zoom
	      zoom = params;
	    } else if (is.plainObject(params)) {
	      // then zoom about a point
	      zoom = params.level;

	      if (params.position != null) {
	        pos = math.modelToRenderedPosition(params.position, currentZoom, currentPan);
	      } else if (params.renderedPosition != null) {
	        pos = params.renderedPosition;
	      }

	      if (pos != null && !_p.panningEnabled) {
	        // panning disabled
	        bail = true;
	      }
	    }

	    // crop zoom
	    zoom = zoom > _p.maxZoom ? _p.maxZoom : zoom;
	    zoom = zoom < _p.minZoom ? _p.minZoom : zoom;

	    // can't zoom with invalid params
	    if (bail || !is.number(zoom) || zoom === currentZoom || pos != null && (!is.number(pos.x) || !is.number(pos.y))) {
	      return null;
	    }

	    if (pos != null) {
	      // set zoom about position
	      var pan1 = currentPan;
	      var zoom1 = currentZoom;
	      var zoom2 = zoom;

	      var pan2 = {
	        x: -zoom2 / zoom1 * (pos.x - pan1.x) + pos.x,
	        y: -zoom2 / zoom1 * (pos.y - pan1.y) + pos.y
	      };

	      return {
	        zoomed: true,
	        panned: true,
	        zoom: zoom2,
	        pan: pan2
	      };
	    } else {
	      // just set the zoom
	      return {
	        zoomed: true,
	        panned: false,
	        zoom: zoom,
	        pan: currentPan
	      };
	    }
	  },

	  zoom: function zoom(params) {
	    if (params === undefined) {
	      // get
	      return this._private.zoom;
	    } else {
	      // set
	      var vp = this.getZoomedViewport(params);
	      var _p = this._private;

	      if (vp == null || !vp.zoomed) {
	        return this;
	      }

	      _p.zoom = vp.zoom;

	      if (vp.panned) {
	        _p.pan.x = vp.pan.x;
	        _p.pan.y = vp.pan.y;
	      }

	      this.emit('zoom' + (vp.panned ? ' pan' : '') + ' viewport');

	      this.notify({ // notify the renderer that the viewport changed
	        type: 'viewport'
	      });

	      return this; // chaining
	    }
	  },

	  viewport: function viewport(opts) {
	    var _p = this._private;
	    var zoomDefd = true;
	    var panDefd = true;
	    var events = []; // to trigger
	    var zoomFailed = false;
	    var panFailed = false;

	    if (!opts) {
	      return this;
	    }
	    if (!is.number(opts.zoom)) {
	      zoomDefd = false;
	    }
	    if (!is.plainObject(opts.pan)) {
	      panDefd = false;
	    }
	    if (!zoomDefd && !panDefd) {
	      return this;
	    }

	    if (zoomDefd) {
	      var z = opts.zoom;

	      if (z < _p.minZoom || z > _p.maxZoom || !_p.zoomingEnabled) {
	        zoomFailed = true;
	      } else {
	        _p.zoom = z;

	        events.push('zoom');
	      }
	    }

	    if (panDefd && (!zoomFailed || !opts.cancelOnFailedZoom) && _p.panningEnabled) {
	      var p = opts.pan;

	      if (is.number(p.x)) {
	        _p.pan.x = p.x;
	        panFailed = false;
	      }

	      if (is.number(p.y)) {
	        _p.pan.y = p.y;
	        panFailed = false;
	      }

	      if (!panFailed) {
	        events.push('pan');
	      }
	    }

	    if (events.length > 0) {
	      events.push('viewport');
	      this.emit(events.join(' '));

	      this.notify({
	        type: 'viewport'
	      });
	    }

	    return this; // chaining
	  },

	  center: function center(elements) {
	    var pan = this.getCenterPan(elements);

	    if (pan) {
	      this._private.pan = pan;

	      this.emit('pan viewport');

	      this.notify({ // notify the renderer that the viewport changed
	        type: 'viewport'
	      });
	    }

	    return this; // chaining
	  },

	  getCenterPan: function getCenterPan(elements, zoom) {
	    if (!this._private.panningEnabled) {
	      return;
	    }

	    if (is.string(elements)) {
	      var selector = elements;
	      elements = this.mutableElements().filter(selector);
	    } else if (!is.elementOrCollection(elements)) {
	      elements = this.mutableElements();
	    }

	    if (elements.length === 0) {
	      return;
	    } // can't centre pan to nothing

	    var bb = elements.boundingBox();
	    var w = this.width();
	    var h = this.height();
	    zoom = zoom === undefined ? this._private.zoom : zoom;

	    var pan = { // middle
	      x: (w - zoom * (bb.x1 + bb.x2)) / 2,
	      y: (h - zoom * (bb.y1 + bb.y2)) / 2
	    };

	    return pan;
	  },

	  reset: function reset() {
	    if (!this._private.panningEnabled || !this._private.zoomingEnabled) {
	      return this;
	    }

	    this.viewport({
	      pan: { x: 0, y: 0 },
	      zoom: 1
	    });

	    return this; // chaining
	  },

	  invalidateSize: function invalidateSize() {
	    this._private.sizeCache = null;
	  },

	  size: function size() {
	    var _p = this._private;
	    var container = _p.container;

	    return _p.sizeCache = _p.sizeCache || (container ? function () {
	      var style = window.getComputedStyle(container);
	      var val = function val(name) {
	        return parseFloat(style.getPropertyValue(name));
	      };

	      return {
	        width: container.clientWidth - val('padding-left') - val('padding-right'),
	        height: container.clientHeight - val('padding-top') - val('padding-bottom')
	      };
	    }() : { // fallback if no container (not 0 b/c can be used for dividing etc)
	      width: 1,
	      height: 1
	    });
	  },

	  width: function width() {
	    return this.size().width;
	  },

	  height: function height() {
	    return this.size().height;
	  },

	  extent: function extent() {
	    var pan = this._private.pan;
	    var zoom = this._private.zoom;
	    var rb = this.renderedExtent();

	    var b = {
	      x1: (rb.x1 - pan.x) / zoom,
	      x2: (rb.x2 - pan.x) / zoom,
	      y1: (rb.y1 - pan.y) / zoom,
	      y2: (rb.y2 - pan.y) / zoom
	    };

	    b.w = b.x2 - b.x1;
	    b.h = b.y2 - b.y1;

	    return b;
	  },

	  renderedExtent: function renderedExtent() {
	    var width = this.width();
	    var height = this.height();

	    return {
	      x1: 0,
	      y1: 0,
	      x2: width,
	      y2: height,
	      w: width,
	      h: height
	    };
	  }
	};

	// aliases
	corefn.centre = corefn.center;

	// backwards compatibility
	corefn.autolockNodes = corefn.autolock;
	corefn.autoungrabifyNodes = corefn.autoungrabify;

	module.exports = corefn;

	/***/ }),
	/* 94 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var define = __webpack_require__(4);
	var Collection = __webpack_require__(7);
	var Core = __webpack_require__(12);
	var incExts = __webpack_require__(95);
	var is = __webpack_require__(0);
	var Emitter = __webpack_require__(11);

	// registered extensions to cytoscape, indexed by name
	var extensions = {};

	// registered modules for extensions, indexed by name
	var modules = {};

	function setExtension(type, name, registrant) {

	  var ext = registrant;

	  var overrideErr = function overrideErr(field) {
	    util.error('Can not register `' + name + '` for `' + type + '` since `' + field + '` already exists in the prototype and can not be overridden');
	  };

	  if (type === 'core') {
	    if (Core.prototype[name]) {
	      return overrideErr(name);
	    } else {
	      Core.prototype[name] = registrant;
	    }
	  } else if (type === 'collection') {
	    if (Collection.prototype[name]) {
	      return overrideErr(name);
	    } else {
	      Collection.prototype[name] = registrant;
	    }
	  } else if (type === 'layout') {
	    // fill in missing layout functions in the prototype

	    var Layout = function Layout(options) {
	      this.options = options;

	      registrant.call(this, options);

	      // make sure layout has _private for use w/ std apis like .on()
	      if (!is.plainObject(this._private)) {
	        this._private = {};
	      }

	      this._private.cy = options.cy;
	      this._private.listeners = [];

	      this.createEmitter();
	    };

	    var layoutProto = Layout.prototype = Object.create(registrant.prototype);

	    var optLayoutFns = [];

	    for (var i = 0; i < optLayoutFns.length; i++) {
	      var fnName = optLayoutFns[i];

	      layoutProto[fnName] = layoutProto[fnName] || function () {
	        return this;
	      };
	    }

	    // either .start() or .run() is defined, so autogen the other
	    if (layoutProto.start && !layoutProto.run) {
	      layoutProto.run = function () {
	        this.start();return this;
	      };
	    } else if (!layoutProto.start && layoutProto.run) {
	      layoutProto.start = function () {
	        this.run();return this;
	      };
	    }

	    var regStop = registrant.prototype.stop;
	    layoutProto.stop = function () {
	      var opts = this.options;

	      if (opts && opts.animate) {
	        var anis = this.animations;

	        if (anis) {
	          for (var _i = 0; _i < anis.length; _i++) {
	            anis[_i].stop();
	          }
	        }
	      }

	      if (regStop) {
	        regStop.call(this);
	      } else {
	        this.emit('layoutstop');
	      }

	      return this;
	    };

	    if (!layoutProto.destroy) {
	      layoutProto.destroy = function () {
	        return this;
	      };
	    }

	    layoutProto.cy = function () {
	      return this._private.cy;
	    };

	    var getCy = function getCy(layout) {
	      return layout._private.cy;
	    };

	    util.assign(layoutProto, {
	      createEmitter: function createEmitter() {
	        this._private.emitter = new Emitter({
	          eventFields: function eventFields(layout) {
	            return {
	              layout: layout,
	              cy: getCy(layout),
	              target: layout
	            };
	          },
	          bubble: function bubble() {
	            return true;
	          },
	          parent: function parent(layout) {
	            return getCy(layout);
	          },
	          context: this
	        });

	        return this;
	      },
	      emitter: function emitter() {
	        return this._private.emitter;
	      },
	      on: function on(evt, cb) {
	        this.emitter().on(evt, cb);return this;
	      },
	      one: function one(evt, cb) {
	        this.emitter().one(evt, cb);return this;
	      },
	      once: function once(evt, cb) {
	        this.emitter().one(evt, cb);return this;
	      },
	      removeListener: function removeListener(evt, cb) {
	        this.emitter().removeListener(evt, cb);return this;
	      },
	      emit: function emit(evt, params) {
	        this.emitter().emit(evt, params);return this;
	      }
	    });

	    define.eventAliasesOn(layoutProto);

	    ext = Layout; // replace with our wrapped layout
	  } else if (type === 'renderer' && name !== 'null' && name !== 'base') {
	    // user registered renderers inherit from base

	    var BaseRenderer = getExtension('renderer', 'base');
	    var bProto = BaseRenderer.prototype;
	    var RegistrantRenderer = registrant;
	    var rProto = registrant.prototype;

	    var Renderer = function Renderer() {
	      BaseRenderer.apply(this, arguments);
	      RegistrantRenderer.apply(this, arguments);
	    };

	    var proto = Renderer.prototype;

	    for (var pName in bProto) {
	      var pVal = bProto[pName];
	      var existsInR = rProto[pName] != null;

	      if (existsInR) {
	        return overrideErr(pName);
	      }

	      proto[pName] = pVal; // take impl from base
	    }

	    for (var _pName in rProto) {
	      proto[_pName] = rProto[_pName]; // take impl from registrant
	    }

	    bProto.clientFunctions.forEach(function (name) {
	      proto[name] = proto[name] || function () {
	        util.error('Renderer does not implement `renderer.' + name + '()` on its prototype');
	      };
	    });

	    ext = Renderer;
	  }

	  return util.setMap({
	    map: extensions,
	    keys: [type, name],
	    value: ext
	  });
	}

	function getExtension(type, name) {
	  return util.getMap({
	    map: extensions,
	    keys: [type, name]
	  });
	}

	function setModule(type, name, moduleType, moduleName, registrant) {
	  return util.setMap({
	    map: modules,
	    keys: [type, name, moduleType, moduleName],
	    value: registrant
	  });
	}

	function getModule(type, name, moduleType, moduleName) {
	  return util.getMap({
	    map: modules,
	    keys: [type, name, moduleType, moduleName]
	  });
	}

	var extension = function extension() {
	  // e.g. extension('renderer', 'svg')
	  if (arguments.length === 2) {
	    return getExtension.apply(null, arguments);
	  }

	  // e.g. extension('renderer', 'svg', { ... })
	  else if (arguments.length === 3) {
	      return setExtension.apply(null, arguments);
	    }

	    // e.g. extension('renderer', 'svg', 'nodeShape', 'ellipse')
	    else if (arguments.length === 4) {
	        return getModule.apply(null, arguments);
	      }

	      // e.g. extension('renderer', 'svg', 'nodeShape', 'ellipse', { ... })
	      else if (arguments.length === 5) {
	          return setModule.apply(null, arguments);
	        } else {
	          util.error('Invalid extension access syntax');
	        }
	};

	// allows a core instance to access extensions internally
	Core.prototype.extension = extension;

	// included extensions
	incExts.forEach(function (group) {
	  group.extensions.forEach(function (ext) {
	    setExtension(group.type, ext.name, ext.impl);
	  });
	});

	module.exports = extension;

	/***/ }),
	/* 95 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	module.exports = [{
	  type: 'layout',
	  extensions: __webpack_require__(96)
	}, {
	  type: 'renderer',
	  extensions: __webpack_require__(105)
	}];

	/***/ }),
	/* 96 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	module.exports = [{ name: 'breadthfirst', impl: __webpack_require__(97) }, { name: 'circle', impl: __webpack_require__(98) }, { name: 'concentric', impl: __webpack_require__(99) }, { name: 'cose', impl: __webpack_require__(100) }, { name: 'grid', impl: __webpack_require__(101) }, { name: 'null', impl: __webpack_require__(102) }, { name: 'preset', impl: __webpack_require__(103) }, { name: 'random', impl: __webpack_require__(104) }];

	/***/ }),
	/* 97 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var math = __webpack_require__(2);
	var is = __webpack_require__(0);

	var defaults = {
	  fit: true, // whether to fit the viewport to the graph
	  directed: false, // whether the tree is directed downwards (or edges can point in any direction if false)
	  padding: 30, // padding on fit
	  circle: false, // put depths in concentric circles if true, put depths top down if false
	  spacingFactor: 1.75, // positive spacing factor, larger => more space between nodes (N.B. n/a if causes overlap)
	  boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }
	  avoidOverlap: true, // prevents node overlap, may overflow boundingBox if not enough space
	  nodeDimensionsIncludeLabels: false, // Excludes the label when calculating node bounding boxes for the layout algorithm
	  roots: undefined, // the roots of the trees
	  maximalAdjustments: 0, // how many times to try to position the nodes in a maximal way (i.e. no backtracking)
	  animate: false, // whether to transition the node positions
	  animationDuration: 500, // duration of animation in ms if enabled
	  animationEasing: undefined, // easing of animation if enabled,
	  animateFilter: function animateFilter(node, i) {
	    return true;
	  }, // a function that determines whether the node should be animated.  All nodes animated by default on animate enabled.  Non-animated nodes are positioned immediately when the layout starts
	  ready: undefined, // callback on layoutready
	  stop: undefined, // callback on layoutstop
	  transform: function transform(node, position) {
	    return position;
	  } // transform a given node position. Useful for changing flow direction in discrete layouts
	};

	function BreadthFirstLayout(options) {
	  this.options = util.extend({}, defaults, options);
	}

	BreadthFirstLayout.prototype.run = function () {
	  var params = this.options;
	  var options = params;

	  var cy = params.cy;
	  var eles = options.eles;
	  var nodes = eles.nodes().not(':parent');
	  var graph = eles;

	  var bb = math.makeBoundingBox(options.boundingBox ? options.boundingBox : {
	    x1: 0, y1: 0, w: cy.width(), h: cy.height()
	  });

	  var roots = void 0;
	  if (is.elementOrCollection(options.roots)) {
	    roots = options.roots;
	  } else if (is.array(options.roots)) {
	    var rootsArray = [];

	    for (var i = 0; i < options.roots.length; i++) {
	      var id = options.roots[i];
	      var ele = cy.getElementById(id);
	      rootsArray.push(ele);
	    }

	    roots = cy.collection(rootsArray);
	  } else if (is.string(options.roots)) {
	    roots = cy.$(options.roots);
	  } else {
	    if (options.directed) {
	      roots = nodes.roots();
	    } else {
	      var components = [];
	      var unhandledNodes = nodes;

	      var _loop = function _loop() {
	        var currComp = cy.collection();

	        eles.bfs({
	          roots: unhandledNodes[0],
	          visit: function visit(node, edge, pNode, i, depth) {
	            currComp = currComp.add(node);
	          },
	          directed: false
	        });

	        unhandledNodes = unhandledNodes.not(currComp);
	        components.push(currComp);
	      };

	      while (unhandledNodes.length > 0) {
	        _loop();
	      }

	      roots = cy.collection();

	      var _loop2 = function _loop2(_i) {
	        var comp = components[_i];
	        var maxDegree = comp.maxDegree(false);
	        var compRoots = comp.filter(function (ele) {
	          return ele.degree(false) === maxDegree;
	        });

	        roots = roots.add(compRoots);
	      };

	      for (var _i = 0; _i < components.length; _i++) {
	        _loop2(_i);
	      }
	    }
	  }

	  var depths = [];
	  var foundByBfs = {};
	  var id2depth = {};
	  var prevNode = {};
	  var prevEdge = {};
	  var successors = {};

	  // find the depths of the nodes
	  graph.bfs({
	    roots: roots,
	    directed: options.directed,
	    visit: function visit(node, edge, pNode, i, depth) {
	      var ele = node[0];
	      var id = ele.id();

	      if (!depths[depth]) {
	        depths[depth] = [];
	      }

	      depths[depth].push(ele);
	      foundByBfs[id] = true;
	      id2depth[id] = depth;
	      prevNode[id] = pNode;
	      prevEdge[id] = edge;

	      if (pNode) {
	        var prevId = pNode.id();
	        var succ = successors[prevId] = successors[prevId] || [];

	        succ.push(node);
	      }
	    }
	  });

	  // check for nodes not found by bfs
	  var orphanNodes = [];
	  for (var _i2 = 0; _i2 < nodes.length; _i2++) {
	    var _ele = nodes[_i2];

	    if (foundByBfs[_ele.id()]) {
	      continue;
	    } else {
	      orphanNodes.push(_ele);
	    }
	  }

	  // assign orphan nodes a depth from their neighborhood
	  var maxChecks = orphanNodes.length * 3;
	  var checks = 0;
	  while (orphanNodes.length !== 0 && checks < maxChecks) {
	    var node = orphanNodes.shift();
	    var neighbors = node.neighborhood().nodes();
	    var assignedDepth = false;

	    for (var _i3 = 0; _i3 < neighbors.length; _i3++) {
	      var depth = id2depth[neighbors[_i3].id()];

	      if (depth !== undefined) {
	        depths[depth].push(node);
	        assignedDepth = true;
	        break;
	      }
	    }

	    if (!assignedDepth) {
	      orphanNodes.push(node);
	    }

	    checks++;
	  }

	  // assign orphan nodes that are still left to the depth of their subgraph
	  while (orphanNodes.length !== 0) {
	    var _node = orphanNodes.shift();
	    //let subgraph = graph.bfs( node ).path;
	    var _assignedDepth = false;

	    // for( let i = 0; i < subgraph.length; i++ ){
	    //   let depth = id2depth[ subgraph[i].id() ];

	    //   if( depth !== undefined ){
	    //     depths[depth].push( node );
	    //     assignedDepth = true;
	    //     break;
	    //   }
	    // }

	    if (!_assignedDepth) {
	      // worst case if the graph really isn't tree friendly, then just dump it in 0
	      if (depths.length === 0) {
	        depths.push([]);
	      }

	      depths[0].push(_node);
	    }
	  }

	  // assign the nodes a depth and index
	  var assignDepthsToEles = function assignDepthsToEles() {
	    for (var _i4 = 0; _i4 < depths.length; _i4++) {
	      var _eles = depths[_i4];

	      for (var j = 0; j < _eles.length; j++) {
	        var _ele2 = _eles[j];

	        if (_ele2 == null) {
	          _eles.splice(j, 1);
	          j--;
	          continue;
	        }

	        _ele2._private.scratch.breadthfirst = {
	          depth: _i4,
	          index: j
	        };
	      }
	    }
	  };
	  assignDepthsToEles();

	  var intersectsDepth = function intersectsDepth(node) {
	    // returns true if has edges pointing in from a higher depth
	    var edges = node.connectedEdges(function (ele) {
	      return ele.data('target') === node.id();
	    });
	    var thisInfo = node._private.scratch.breadthfirst;
	    var highestDepthOfOther = 0;
	    var highestOther = void 0;
	    for (var _i5 = 0; _i5 < edges.length; _i5++) {
	      var edge = edges[_i5];
	      var otherNode = edge.source()[0];
	      var otherInfo = otherNode._private.scratch.breadthfirst;

	      if (thisInfo.depth <= otherInfo.depth && highestDepthOfOther < otherInfo.depth) {
	        highestDepthOfOther = otherInfo.depth;
	        highestOther = otherNode;
	      }
	    }

	    return highestOther;
	  };

	  // make maximal if so set by adjusting depths
	  for (var adj = 0; adj < options.maximalAdjustments; adj++) {

	    var nDepths = depths.length;
	    var elesToMove = [];
	    for (var _i6 = 0; _i6 < nDepths; _i6++) {
	      var _depth = depths[_i6];

	      var nDepth = _depth.length;
	      for (var j = 0; j < nDepth; j++) {
	        var _ele3 = _depth[j];
	        var info = _ele3._private.scratch.breadthfirst;
	        var intEle = intersectsDepth(_ele3);

	        if (intEle) {
	          info.intEle = intEle;
	          elesToMove.push(_ele3);
	        }
	      }
	    }

	    for (var _i7 = 0; _i7 < elesToMove.length; _i7++) {
	      var _ele4 = elesToMove[_i7];
	      var _info = _ele4._private.scratch.breadthfirst;
	      var _intEle = _info.intEle;
	      var intInfo = _intEle._private.scratch.breadthfirst;

	      depths[_info.depth][_info.index] = null; // remove from old depth & index (create hole to be cleaned)

	      // add to end of new depth
	      var newDepth = intInfo.depth + 1;
	      while (newDepth > depths.length - 1) {
	        depths.push([]);
	      }
	      depths[newDepth].push(_ele4);

	      _info.depth = newDepth;
	      _info.index = depths[newDepth].length - 1;
	    }

	    assignDepthsToEles();
	  }

	  // find min distance we need to leave between nodes
	  var minDistance = 0;
	  if (options.avoidOverlap) {
	    for (var _i8 = 0; _i8 < nodes.length; _i8++) {
	      var n = nodes[_i8];
	      var nbb = n.layoutDimensions(options);
	      var w = nbb.w;
	      var h = nbb.h;

	      minDistance = Math.max(minDistance, w, h);
	    }
	  }

	  // get the weighted percent for an element based on its connectivity to other levels
	  var cachedWeightedPercent = {};
	  var getWeightedPercent = function getWeightedPercent(ele) {
	    if (cachedWeightedPercent[ele.id()]) {
	      return cachedWeightedPercent[ele.id()];
	    }

	    var eleDepth = ele._private.scratch.breadthfirst.depth;
	    var neighbors = ele.neighborhood().nodes().not(':parent').intersection(nodes);
	    var percent = 0;
	    var samples = 0;

	    for (var _i9 = 0; _i9 < neighbors.length; _i9++) {
	      var neighbor = neighbors[_i9];
	      var bf = neighbor._private.scratch.breadthfirst;
	      var index = bf.index;
	      var _depth2 = bf.depth;
	      var _nDepth = depths[_depth2].length;

	      if (eleDepth > _depth2 || eleDepth === 0) {
	        // only get influenced by elements above
	        percent += index / _nDepth;
	        samples++;
	      }
	    }

	    samples = Math.max(1, samples);
	    percent = percent / samples;

	    if (samples === 0) {
	      // so lone nodes have a "don't care" state in sorting
	      percent = undefined;
	    }

	    cachedWeightedPercent[ele.id()] = percent;
	    return percent;
	  };

	  // rearrange the indices in each depth level based on connectivity

	  var sortFn = function sortFn(a, b) {
	    var apct = getWeightedPercent(a);
	    var bpct = getWeightedPercent(b);

	    return apct - bpct;
	  };

	  for (var times = 0; times < 3; times++) {
	    // do it a few times b/c the depths are dynamic and we want a more stable result

	    for (var _i10 = 0; _i10 < depths.length; _i10++) {
	      depths[_i10] = depths[_i10].sort(sortFn);
	    }
	    assignDepthsToEles(); // and update
	  }

	  var biggestDepthSize = 0;
	  for (var _i11 = 0; _i11 < depths.length; _i11++) {
	    biggestDepthSize = Math.max(depths[_i11].length, biggestDepthSize);
	  }

	  var center = {
	    x: bb.x1 + bb.w / 2,
	    y: bb.x1 + bb.h / 2
	  };

	  var getPosition = function getPosition(ele, isBottomDepth) {
	    var info = ele._private.scratch.breadthfirst;
	    var depth = info.depth;
	    var index = info.index;
	    var depthSize = depths[depth].length;

	    var distanceX = Math.max(bb.w / (depthSize + 1), minDistance);
	    var distanceY = Math.max(bb.h / (depths.length + 1), minDistance);
	    var radiusStepSize = Math.min(bb.w / 2 / depths.length, bb.h / 2 / depths.length);
	    radiusStepSize = Math.max(radiusStepSize, minDistance);

	    if (!options.circle) {

	      var epos = {
	        x: center.x + (index + 1 - (depthSize + 1) / 2) * distanceX,
	        y: (depth + 1) * distanceY
	      };

	      if (isBottomDepth) {
	        return epos;
	      }

	      // let succs = successors[ ele.id() ];
	      // if( succs ){
	      //   epos.x = 0;
	      //
	      //   for( let i = 0 ; i < succs.length; i++ ){
	      //     let spos = pos[ succs[i].id() ];
	      //
	      //     epos.x += spos.x;
	      //   }
	      //
	      //   epos.x /= succs.length;
	      // } else {
	      //   //debugger;
	      // }

	      return epos;
	    } else {
	      if (options.circle) {
	        var radius = radiusStepSize * depth + radiusStepSize - (depths.length > 0 && depths[0].length <= 3 ? radiusStepSize / 2 : 0);
	        var theta = 2 * Math.PI / depths[depth].length * index;

	        if (depth === 0 && depths[0].length === 1) {
	          radius = 1;
	        }

	        return {
	          x: center.x + radius * Math.cos(theta),
	          y: center.y + radius * Math.sin(theta)
	        };
	      } else {
	        return {
	          x: center.x + (index + 1 - (depthSize + 1) / 2) * distanceX,
	          y: (depth + 1) * distanceY
	        };
	      }
	    }
	  };

	  // get positions in reverse depth order
	  var pos = {};
	  for (var _i12 = depths.length - 1; _i12 >= 0; _i12--) {
	    var _depth3 = depths[_i12];

	    for (var _j = 0; _j < _depth3.length; _j++) {
	      var _node2 = _depth3[_j];

	      pos[_node2.id()] = getPosition(_node2, _i12 === depths.length - 1);
	    }
	  }

	  nodes.layoutPositions(this, options, function (node) {
	    return pos[node.id()];
	  });

	  return this; // chaining
	};

	module.exports = BreadthFirstLayout;

	/***/ }),
	/* 98 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var math = __webpack_require__(2);
	var is = __webpack_require__(0);

	var defaults = {
	  fit: true, // whether to fit the viewport to the graph
	  padding: 30, // the padding on fit
	  boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }
	  avoidOverlap: true, // prevents node overlap, may overflow boundingBox and radius if not enough space
	  nodeDimensionsIncludeLabels: false, // Excludes the label when calculating node bounding boxes for the layout algorithm
	  spacingFactor: undefined, // Applies a multiplicative factor (>0) to expand or compress the overall area that the nodes take up
	  radius: undefined, // the radius of the circle
	  startAngle: 3 / 2 * Math.PI, // where nodes start in radians
	  sweep: undefined, // how many radians should be between the first and last node (defaults to full circle)
	  clockwise: true, // whether the layout should go clockwise (true) or counterclockwise/anticlockwise (false)
	  sort: undefined, // a sorting function to order the nodes; e.g. function(a, b){ return a.data('weight') - b.data('weight') }
	  animate: false, // whether to transition the node positions
	  animationDuration: 500, // duration of animation in ms if enabled
	  animationEasing: undefined, // easing of animation if enabled
	  animateFilter: function animateFilter(node, i) {
	    return true;
	  }, // a function that determines whether the node should be animated.  All nodes animated by default on animate enabled.  Non-animated nodes are positioned immediately when the layout starts
	  ready: undefined, // callback on layoutready
	  stop: undefined, // callback on layoutstop
	  transform: function transform(node, position) {
	    return position;
	  } // transform a given node position. Useful for changing flow direction in discrete layouts 

	};

	function CircleLayout(options) {
	  this.options = util.extend({}, defaults, options);
	}

	CircleLayout.prototype.run = function () {
	  var params = this.options;
	  var options = params;

	  var cy = params.cy;
	  var eles = options.eles;

	  var clockwise = options.counterclockwise !== undefined ? !options.counterclockwise : options.clockwise;

	  var nodes = eles.nodes().not(':parent');

	  if (options.sort) {
	    nodes = nodes.sort(options.sort);
	  }

	  var bb = math.makeBoundingBox(options.boundingBox ? options.boundingBox : {
	    x1: 0, y1: 0, w: cy.width(), h: cy.height()
	  });

	  var center = {
	    x: bb.x1 + bb.w / 2,
	    y: bb.y1 + bb.h / 2
	  };

	  var sweep = options.sweep === undefined ? 2 * Math.PI - 2 * Math.PI / nodes.length : options.sweep;
	  var dTheta = sweep / Math.max(1, nodes.length - 1);
	  var r = void 0;

	  var minDistance = 0;
	  for (var i = 0; i < nodes.length; i++) {
	    var n = nodes[i];
	    var nbb = n.layoutDimensions(options);
	    var w = nbb.w;
	    var h = nbb.h;

	    minDistance = Math.max(minDistance, w, h);
	  }

	  if (is.number(options.radius)) {
	    r = options.radius;
	  } else if (nodes.length <= 1) {
	    r = 0;
	  } else {
	    r = Math.min(bb.h, bb.w) / 2 - minDistance;
	  }

	  // calculate the radius
	  if (nodes.length > 1 && options.avoidOverlap) {
	    // but only if more than one node (can't overlap)
	    minDistance *= 1.75; // just to have some nice spacing

	    var dcos = Math.cos(dTheta) - Math.cos(0);
	    var dsin = Math.sin(dTheta) - Math.sin(0);
	    var rMin = Math.sqrt(minDistance * minDistance / (dcos * dcos + dsin * dsin)); // s.t. no nodes overlapping
	    r = Math.max(rMin, r);
	  }

	  var getPos = function getPos(ele, i) {
	    var theta = options.startAngle + i * dTheta * (clockwise ? 1 : -1);

	    var rx = r * Math.cos(theta);
	    var ry = r * Math.sin(theta);
	    var pos = {
	      x: center.x + rx,
	      y: center.y + ry
	    };

	    return pos;
	  };

	  nodes.layoutPositions(this, options, getPos);

	  return this; // chaining
	};

	module.exports = CircleLayout;

	/***/ }),
	/* 99 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var math = __webpack_require__(2);

	var defaults = {
	  fit: true, // whether to fit the viewport to the graph
	  padding: 30, // the padding on fit
	  startAngle: 3 / 2 * Math.PI, // where nodes start in radians
	  sweep: undefined, // how many radians should be between the first and last node (defaults to full circle)
	  clockwise: true, // whether the layout should go clockwise (true) or counterclockwise/anticlockwise (false)
	  equidistant: false, // whether levels have an equal radial distance betwen them, may cause bounding box overflow
	  minNodeSpacing: 10, // min spacing between outside of nodes (used for radius adjustment)
	  boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }
	  avoidOverlap: true, // prevents node overlap, may overflow boundingBox if not enough space
	  nodeDimensionsIncludeLabels: false, // Excludes the label when calculating node bounding boxes for the layout algorithm
	  height: undefined, // height of layout area (overrides container height)
	  width: undefined, // width of layout area (overrides container width)
	  spacingFactor: undefined, // Applies a multiplicative factor (>0) to expand or compress the overall area that the nodes take up
	  concentric: function concentric(node) {
	    // returns numeric value for each node, placing higher nodes in levels towards the centre
	    return node.degree();
	  },
	  levelWidth: function levelWidth(nodes) {
	    // the letiation of concentric values in each level
	    return nodes.maxDegree() / 4;
	  },
	  animate: false, // whether to transition the node positions
	  animationDuration: 500, // duration of animation in ms if enabled
	  animationEasing: undefined, // easing of animation if enabled
	  animateFilter: function animateFilter(node, i) {
	    return true;
	  }, // a function that determines whether the node should be animated.  All nodes animated by default on animate enabled.  Non-animated nodes are positioned immediately when the layout starts
	  ready: undefined, // callback on layoutready
	  stop: undefined, // callback on layoutstop
	  transform: function transform(node, position) {
	    return position;
	  } // transform a given node position. Useful for changing flow direction in discrete layouts 
	};

	function ConcentricLayout(options) {
	  this.options = util.extend({}, defaults, options);
	}

	ConcentricLayout.prototype.run = function () {
	  var params = this.options;
	  var options = params;

	  var clockwise = options.counterclockwise !== undefined ? !options.counterclockwise : options.clockwise;

	  var cy = params.cy;

	  var eles = options.eles;
	  var nodes = eles.nodes().not(':parent');

	  var bb = math.makeBoundingBox(options.boundingBox ? options.boundingBox : {
	    x1: 0, y1: 0, w: cy.width(), h: cy.height()
	  });

	  var center = {
	    x: bb.x1 + bb.w / 2,
	    y: bb.y1 + bb.h / 2
	  };

	  var nodeValues = []; // { node, value }
	  var theta = options.startAngle;
	  var maxNodeSize = 0;

	  for (var i = 0; i < nodes.length; i++) {
	    var node = nodes[i];
	    var value = void 0;

	    // calculate the node value
	    value = options.concentric(node);
	    nodeValues.push({
	      value: value,
	      node: node
	    });

	    // for style mapping
	    node._private.scratch.concentric = value;
	  }

	  // in case we used the `concentric` in style
	  nodes.updateStyle();

	  // calculate max size now based on potentially updated mappers
	  for (var _i = 0; _i < nodes.length; _i++) {
	    var _node = nodes[_i];
	    var nbb = _node.layoutDimensions(options);

	    maxNodeSize = Math.max(maxNodeSize, nbb.w, nbb.h);
	  }

	  // sort node values in descreasing order
	  nodeValues.sort(function (a, b) {
	    return b.value - a.value;
	  });

	  var levelWidth = options.levelWidth(nodes);

	  // put the values into levels
	  var levels = [[]];
	  var currentLevel = levels[0];
	  for (var _i2 = 0; _i2 < nodeValues.length; _i2++) {
	    var val = nodeValues[_i2];

	    if (currentLevel.length > 0) {
	      var diff = Math.abs(currentLevel[0].value - val.value);

	      if (diff >= levelWidth) {
	        currentLevel = [];
	        levels.push(currentLevel);
	      }
	    }

	    currentLevel.push(val);
	  }

	  // create positions from levels

	  var minDist = maxNodeSize + options.minNodeSpacing; // min dist between nodes

	  if (!options.avoidOverlap) {
	    // then strictly constrain to bb
	    var firstLvlHasMulti = levels.length > 0 && levels[0].length > 1;
	    var maxR = Math.min(bb.w, bb.h) / 2 - minDist;
	    var rStep = maxR / (levels.length + firstLvlHasMulti ? 1 : 0);

	    minDist = Math.min(minDist, rStep);
	  }

	  // find the metrics for each level
	  var r = 0;
	  for (var _i3 = 0; _i3 < levels.length; _i3++) {
	    var level = levels[_i3];
	    var sweep = options.sweep === undefined ? 2 * Math.PI - 2 * Math.PI / level.length : options.sweep;
	    var dTheta = level.dTheta = sweep / Math.max(1, level.length - 1);

	    // calculate the radius
	    if (level.length > 1 && options.avoidOverlap) {
	      // but only if more than one node (can't overlap)
	      var dcos = Math.cos(dTheta) - Math.cos(0);
	      var dsin = Math.sin(dTheta) - Math.sin(0);
	      var rMin = Math.sqrt(minDist * minDist / (dcos * dcos + dsin * dsin)); // s.t. no nodes overlapping

	      r = Math.max(rMin, r);
	    }

	    level.r = r;

	    r += minDist;
	  }

	  if (options.equidistant) {
	    var rDeltaMax = 0;
	    var _r = 0;

	    for (var _i4 = 0; _i4 < levels.length; _i4++) {
	      var _level = levels[_i4];
	      var rDelta = _level.r - _r;

	      rDeltaMax = Math.max(rDeltaMax, rDelta);
	    }

	    _r = 0;
	    for (var _i5 = 0; _i5 < levels.length; _i5++) {
	      var _level2 = levels[_i5];

	      if (_i5 === 0) {
	        _r = _level2.r;
	      }

	      _level2.r = _r;

	      _r += rDeltaMax;
	    }
	  }

	  // calculate the node positions
	  var pos = {}; // id => position
	  for (var _i6 = 0; _i6 < levels.length; _i6++) {
	    var _level3 = levels[_i6];
	    var _dTheta = _level3.dTheta;
	    var _r2 = _level3.r;

	    for (var j = 0; j < _level3.length; j++) {
	      var _val = _level3[j];
	      var _theta = options.startAngle + (clockwise ? 1 : -1) * _dTheta * j;

	      var p = {
	        x: center.x + _r2 * Math.cos(_theta),
	        y: center.y + _r2 * Math.sin(_theta)
	      };

	      pos[_val.node.id()] = p;
	    }
	  }

	  // position the nodes
	  nodes.layoutPositions(this, options, function (ele) {
	    var id = ele.id();

	    return pos[id];
	  });

	  return this; // chaining
	};

	module.exports = ConcentricLayout;

	/***/ }),
	/* 100 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	/*
	The CoSE layout was written by Gerardo Huck.
	https://www.linkedin.com/in/gerardohuck/

	Based on the following article:
	http://dl.acm.org/citation.cfm?id=1498047

	Modifications tracked on Github.
	*/

	var util = __webpack_require__(1);
	var math = __webpack_require__(2);
	var is = __webpack_require__(0);
	var Promise = __webpack_require__(5);

	var DEBUG;

	/**
	 * @brief :  default layout options
	 */
	var defaults = {
	  // Called on `layoutready`
	  ready: function ready() {},

	  // Called on `layoutstop`
	  stop: function stop() {},

	  // Whether to animate while running the layout
	  // true : Animate continuously as the layout is running
	  // false : Just show the end result
	  // 'end' : Animate with the end result, from the initial positions to the end positions
	  animate: true,

	  // Easing of the animation for animate:'end'
	  animationEasing: undefined,

	  // The duration of the animation for animate:'end'
	  animationDuration: undefined,

	  // A function that determines whether the node should be animated
	  // All nodes animated by default on animate enabled
	  // Non-animated nodes are positioned immediately when the layout starts
	  animateFilter: function animateFilter(node, i) {
	    return true;
	  },

	  // The layout animates only after this many milliseconds for animate:true
	  // (prevents flashing on fast runs)
	  animationThreshold: 250,

	  // Number of iterations between consecutive screen positions update
	  // (0 -> only updated on the end)
	  refresh: 20,

	  // Whether to fit the network view after when done
	  fit: true,

	  // Padding on fit
	  padding: 30,

	  // Constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }
	  boundingBox: undefined,

	  // Excludes the label when calculating node bounding boxes for the layout algorithm
	  nodeDimensionsIncludeLabels: false,

	  // Randomize the initial positions of the nodes (true) or use existing positions (false)
	  randomize: false,

	  // Extra spacing between components in non-compound graphs
	  componentSpacing: 40,

	  // Node repulsion (non overlapping) multiplier
	  nodeRepulsion: function nodeRepulsion(node) {
	    return 2048;
	  },

	  // Node repulsion (overlapping) multiplier
	  nodeOverlap: 4,

	  // Ideal edge (non nested) length
	  idealEdgeLength: function idealEdgeLength(edge) {
	    return 32;
	  },

	  // Divisor to compute edge forces
	  edgeElasticity: function edgeElasticity(edge) {
	    return 32;
	  },

	  // Nesting factor (multiplier) to compute ideal edge length for nested edges
	  nestingFactor: 1.2,

	  // Gravity force (constant)
	  gravity: 1,

	  // Maximum number of iterations to perform
	  numIter: 1000,

	  // Initial temperature (maximum node displacement)
	  initialTemp: 1000,

	  // Cooling factor (how the temperature is reduced between consecutive iterations
	  coolingFactor: 0.99,

	  // Lower temperature threshold (below this point the layout will end)
	  minTemp: 1.0,

	  // Pass a reference to weaver to use threads for calculations
	  weaver: false
	};

	/**
	 * @brief       : constructor
	 * @arg options : object containing layout options
	 */
	function CoseLayout(options) {
	  this.options = util.extend({}, defaults, options);

	  this.options.layout = this;
	}

	/**
	 * @brief : runs the layout
	 */
	CoseLayout.prototype.run = function () {
	  var options = this.options;
	  var cy = options.cy;
	  var layout = this;
	  var thread = this.thread;
	  var Thread = options.weaver ? options.weaver.Thread : null;

	  var falseThread = { // use false thread as polyfill
	    listeners: [],
	    on: function on(e, cb) {
	      this.listeners.push({ event: e, callback: cb });

	      return this;
	    },
	    trigger: function trigger(e) {
	      if (is.string(e)) {
	        e = { type: e };
	      }

	      var matchesEvent = function matchesEvent(l) {
	        return l.event === e.type;
	      };
	      var trigger = function trigger(l) {
	        l.callback(e);
	      };

	      this.listeners.filter(matchesEvent).forEach(trigger);

	      return this;
	    },
	    pass: function pass(data) {
	      this.pass = data;

	      return this;
	    },
	    run: function run(cb) {
	      var pass = this.pass;

	      return new Promise(function (resolve) {
	        resolve(cb(pass));
	      });
	    },
	    stop: function stop() {
	      return this;
	    },
	    stopped: function stopped() {
	      return true;
	    }
	  };

	  function broadcast(message) {
	    // for false thread
	    var e = { type: 'message', message: message };

	    falseThread.trigger(e);
	  }

	  if (!thread || thread.stopped()) {
	    thread = this.thread = Thread ? new Thread() : falseThread;
	  }

	  layout.stopped = false;

	  if (options.animate === true || options.animate === false) {
	    layout.emit({ type: 'layoutstart', layout: layout });
	  }

	  // Set DEBUG - Global variable
	  if (true === options.debug) {
	    DEBUG = true;
	  } else {
	    DEBUG = false;
	  }

	  // Initialize layout info
	  var layoutInfo = createLayoutInfo(cy, layout, options);

	  // Show LayoutInfo contents if debugging
	  if (DEBUG) {
	    printLayoutInfo(layoutInfo);
	  }

	  // If required, randomize node positions
	  if (options.randomize) {
	    randomizePositions(layoutInfo, cy);
	  }

	  var startTime = Date.now();
	  var refreshRequested = false;
	  var refresh = function refresh(rOpts) {
	    rOpts = rOpts || {};

	    if (refreshRequested && !rOpts.next) {
	      return;
	    }

	    if (!rOpts.force && Date.now() - startTime < options.animationThreshold) {
	      return;
	    }

	    refreshRequested = true;

	    util.requestAnimationFrame(function () {
	      refreshPositions(layoutInfo, cy, options);

	      // Fit the graph if necessary
	      if (true === options.fit) {
	        cy.fit(options.padding);
	      }

	      refreshRequested = false;

	      if (rOpts.next) {
	        rOpts.next();
	      }
	    });
	  };

	  thread.on('message', function (e) {
	    var layoutNodes = e.message;

	    layoutInfo.layoutNodes = layoutNodes;
	    refresh();
	  });

	  thread.pass({
	    layoutInfo: layoutInfo,
	    options: {
	      animate: options.animate,
	      refresh: options.refresh,
	      componentSpacing: options.componentSpacing,
	      nodeOverlap: options.nodeOverlap,
	      nestingFactor: options.nestingFactor,
	      gravity: options.gravity,
	      numIter: options.numIter,
	      initialTemp: options.initialTemp,
	      coolingFactor: options.coolingFactor,
	      minTemp: options.minTemp
	    }
	  }).run(function (pass) {
	    var layoutInfo = pass.layoutInfo;
	    var options = pass.options;
	    var stopped = false;

	    /**
	     * @brief          : Performs one iteration of the physical simulation
	     * @arg layoutInfo : LayoutInfo object already initialized
	     * @arg cy         : Cytoscape object
	     * @arg options    : Layout options
	     */
	    var step = function step(layoutInfo, options, _step) {
	      // var s = "\n\n###############################";
	      // s += "\nSTEP: " + step;
	      // s += "\n###############################\n";
	      // logDebug(s);

	      // Calculate node repulsions
	      calculateNodeForces(layoutInfo, options);
	      // Calculate edge forces
	      calculateEdgeForces(layoutInfo, options);
	      // Calculate gravity forces
	      calculateGravityForces(layoutInfo, options);
	      // Propagate forces from parent to child
	      propagateForces(layoutInfo, options);
	      // Update positions based on calculated forces
	      updatePositions(layoutInfo, options);
	    };

	    /**
	     * @brief : Computes the node repulsion forces
	     */
	    var calculateNodeForces = function calculateNodeForces(layoutInfo, options) {
	      // Go through each of the graphs in graphSet
	      // Nodes only repel each other if they belong to the same graph
	      // var s = 'calculateNodeForces';
	      // logDebug(s);
	      for (var i = 0; i < layoutInfo.graphSet.length; i++) {
	        var graph = layoutInfo.graphSet[i];
	        var numNodes = graph.length;

	        // s = "Set: " + graph.toString();
	        // logDebug(s);

	        // Now get all the pairs of nodes
	        // Only get each pair once, (A, B) = (B, A)
	        for (var j = 0; j < numNodes; j++) {
	          var node1 = layoutInfo.layoutNodes[layoutInfo.idToIndex[graph[j]]];

	          for (var k = j + 1; k < numNodes; k++) {
	            var node2 = layoutInfo.layoutNodes[layoutInfo.idToIndex[graph[k]]];

	            nodeRepulsion(node1, node2, layoutInfo, options);
	          }
	        }
	      }
	    };

	    var randomDistance = function randomDistance(max) {
	      return -max + 2 * max * Math.random();
	    };

	    /**
	     * @brief : Compute the node repulsion forces between a pair of nodes
	     */
	    var nodeRepulsion = function nodeRepulsion(node1, node2, layoutInfo, options) {
	      // var s = "Node repulsion. Node1: " + node1.id + " Node2: " + node2.id;

	      var cmptId1 = node1.cmptId;
	      var cmptId2 = node2.cmptId;

	      if (cmptId1 !== cmptId2 && !layoutInfo.isCompound) {
	        return;
	      }

	      // Get direction of line connecting both node centers
	      var directionX = node2.positionX - node1.positionX;
	      var directionY = node2.positionY - node1.positionY;
	      var maxRandDist = 1;
	      // s += "\ndirectionX: " + directionX + ", directionY: " + directionY;

	      // If both centers are the same, apply a random force
	      if (0 === directionX && 0 === directionY) {
	        directionX = randomDistance(maxRandDist);
	        directionY = randomDistance(maxRandDist);
	      }

	      var overlap = nodesOverlap(node1, node2, directionX, directionY);

	      if (overlap > 0) {
	        // s += "\nNodes DO overlap.";
	        // s += "\nOverlap: " + overlap;
	        // If nodes overlap, repulsion force is proportional
	        // to the overlap
	        var force = options.nodeOverlap * overlap;

	        // Compute the module and components of the force vector
	        var distance = Math.sqrt(directionX * directionX + directionY * directionY);
	        // s += "\nDistance: " + distance;
	        var forceX = force * directionX / distance;
	        var forceY = force * directionY / distance;
	      } else {
	        // s += "\nNodes do NOT overlap.";
	        // If there's no overlap, force is inversely proportional
	        // to squared distance

	        // Get clipping points for both nodes
	        var point1 = findClippingPoint(node1, directionX, directionY);
	        var point2 = findClippingPoint(node2, -1 * directionX, -1 * directionY);

	        // Use clipping points to compute distance
	        var distanceX = point2.x - point1.x;
	        var distanceY = point2.y - point1.y;
	        var distanceSqr = distanceX * distanceX + distanceY * distanceY;
	        var distance = Math.sqrt(distanceSqr);
	        // s += "\nDistance: " + distance;

	        // Compute the module and components of the force vector
	        var force = (node1.nodeRepulsion + node2.nodeRepulsion) / distanceSqr;
	        var forceX = force * distanceX / distance;
	        var forceY = force * distanceY / distance;
	      }

	      // Apply force
	      if (!node1.isLocked) {
	        node1.offsetX -= forceX;
	        node1.offsetY -= forceY;
	      }

	      if (!node2.isLocked) {
	        node2.offsetX += forceX;
	        node2.offsetY += forceY;
	      }

	      // s += "\nForceX: " + forceX + " ForceY: " + forceY;
	      // logDebug(s);

	      return;
	    };

	    /**
	     * @brief  : Determines whether two nodes overlap or not
	     * @return : Amount of overlapping (0 => no overlap)
	     */
	    var nodesOverlap = function nodesOverlap(node1, node2, dX, dY) {

	      if (dX > 0) {
	        var overlapX = node1.maxX - node2.minX;
	      } else {
	        var overlapX = node2.maxX - node1.minX;
	      }

	      if (dY > 0) {
	        var overlapY = node1.maxY - node2.minY;
	      } else {
	        var overlapY = node2.maxY - node1.minY;
	      }

	      if (overlapX >= 0 && overlapY >= 0) {
	        return Math.sqrt(overlapX * overlapX + overlapY * overlapY);
	      } else {
	        return 0;
	      }
	    };

	    /**
	     * @brief : Finds the point in which an edge (direction dX, dY) intersects
	     *          the rectangular bounding box of it's source/target node
	     */
	    var findClippingPoint = function findClippingPoint(node, dX, dY) {

	      // Shorcuts
	      var X = node.positionX;
	      var Y = node.positionY;
	      var H = node.height || 1;
	      var W = node.width || 1;
	      var dirSlope = dY / dX;
	      var nodeSlope = H / W;

	      // var s = 'Computing clipping point of node ' + node.id +
	      //   " . Height:  " + H + ", Width: " + W +
	      //   "\nDirection " + dX + ", " + dY;
	      //
	      // Compute intersection
	      var res = {};

	      // Case: Vertical direction (up)
	      if (0 === dX && 0 < dY) {
	        res.x = X;
	        // s += "\nUp direction";
	        res.y = Y + H / 2;

	        return res;
	      }

	      // Case: Vertical direction (down)
	      if (0 === dX && 0 > dY) {
	        res.x = X;
	        res.y = Y + H / 2;
	        // s += "\nDown direction";

	        return res;
	      }

	      // Case: Intersects the right border
	      if (0 < dX && -1 * nodeSlope <= dirSlope && dirSlope <= nodeSlope) {
	        res.x = X + W / 2;
	        res.y = Y + W * dY / 2 / dX;
	        // s += "\nRightborder";

	        return res;
	      }

	      // Case: Intersects the left border
	      if (0 > dX && -1 * nodeSlope <= dirSlope && dirSlope <= nodeSlope) {
	        res.x = X - W / 2;
	        res.y = Y - W * dY / 2 / dX;
	        // s += "\nLeftborder";

	        return res;
	      }

	      // Case: Intersects the top border
	      if (0 < dY && (dirSlope <= -1 * nodeSlope || dirSlope >= nodeSlope)) {
	        res.x = X + H * dX / 2 / dY;
	        res.y = Y + H / 2;
	        // s += "\nTop border";

	        return res;
	      }

	      // Case: Intersects the bottom border
	      if (0 > dY && (dirSlope <= -1 * nodeSlope || dirSlope >= nodeSlope)) {
	        res.x = X - H * dX / 2 / dY;
	        res.y = Y - H / 2;
	        // s += "\nBottom border";

	        return res;
	      }

	      // s += "\nClipping point found at " + res.x + ", " + res.y;
	      // logDebug(s);
	      return res;
	    };

	    /**
	     * @brief : Calculates all edge forces
	     */
	    var calculateEdgeForces = function calculateEdgeForces(layoutInfo, options) {
	      // Iterate over all edges
	      for (var i = 0; i < layoutInfo.edgeSize; i++) {
	        // Get edge, source & target nodes
	        var edge = layoutInfo.layoutEdges[i];
	        var sourceIx = layoutInfo.idToIndex[edge.sourceId];
	        var source = layoutInfo.layoutNodes[sourceIx];
	        var targetIx = layoutInfo.idToIndex[edge.targetId];
	        var target = layoutInfo.layoutNodes[targetIx];

	        // Get direction of line connecting both node centers
	        var directionX = target.positionX - source.positionX;
	        var directionY = target.positionY - source.positionY;

	        // If both centers are the same, do nothing.
	        // A random force has already been applied as node repulsion
	        if (0 === directionX && 0 === directionY) {
	          continue;
	        }

	        // Get clipping points for both nodes
	        var point1 = findClippingPoint(source, directionX, directionY);
	        var point2 = findClippingPoint(target, -1 * directionX, -1 * directionY);

	        var lx = point2.x - point1.x;
	        var ly = point2.y - point1.y;
	        var l = Math.sqrt(lx * lx + ly * ly);

	        var force = Math.pow(edge.idealLength - l, 2) / edge.elasticity;

	        if (0 !== l) {
	          var forceX = force * lx / l;
	          var forceY = force * ly / l;
	        } else {
	          var forceX = 0;
	          var forceY = 0;
	        }

	        // Add this force to target and source nodes
	        if (!source.isLocked) {
	          source.offsetX += forceX;
	          source.offsetY += forceY;
	        }

	        if (!target.isLocked) {
	          target.offsetX -= forceX;
	          target.offsetY -= forceY;
	        }

	        // var s = 'Edge force between nodes ' + source.id + ' and ' + target.id;
	        // s += "\nDistance: " + l + " Force: (" + forceX + ", " + forceY + ")";
	        // logDebug(s);
	      }
	    };

	    /**
	     * @brief : Computes gravity forces for all nodes
	     */
	    var calculateGravityForces = function calculateGravityForces(layoutInfo, options) {
	      var distThreshold = 1;

	      // var s = 'calculateGravityForces';
	      // logDebug(s);
	      for (var i = 0; i < layoutInfo.graphSet.length; i++) {
	        var graph = layoutInfo.graphSet[i];
	        var numNodes = graph.length;

	        // s = "Set: " + graph.toString();
	        // logDebug(s);

	        // Compute graph center
	        if (0 === i) {
	          var centerX = layoutInfo.clientHeight / 2;
	          var centerY = layoutInfo.clientWidth / 2;
	        } else {
	          // Get Parent node for this graph, and use its position as center
	          var temp = layoutInfo.layoutNodes[layoutInfo.idToIndex[graph[0]]];
	          var parent = layoutInfo.layoutNodes[layoutInfo.idToIndex[temp.parentId]];
	          var centerX = parent.positionX;
	          var centerY = parent.positionY;
	        }
	        // s = "Center found at: " + centerX + ", " + centerY;
	        // logDebug(s);

	        // Apply force to all nodes in graph
	        for (var j = 0; j < numNodes; j++) {
	          var node = layoutInfo.layoutNodes[layoutInfo.idToIndex[graph[j]]];
	          // s = "Node: " + node.id;

	          if (node.isLocked) {
	            continue;
	          }

	          var dx = centerX - node.positionX;
	          var dy = centerY - node.positionY;
	          var d = Math.sqrt(dx * dx + dy * dy);
	          if (d > distThreshold) {
	            var fx = options.gravity * dx / d;
	            var fy = options.gravity * dy / d;
	            node.offsetX += fx;
	            node.offsetY += fy;
	            // s += ": Applied force: " + fx + ", " + fy;
	          } else {}
	            // s += ": skypped since it's too close to center";

	            // logDebug(s);
	        }
	      }
	    };

	    /**
	     * @brief          : This function propagates the existing offsets from
	     *                   parent nodes to its descendents.
	     * @arg layoutInfo : layoutInfo Object
	     * @arg cy         : cytoscape Object
	     * @arg options    : Layout options
	     */
	    var propagateForces = function propagateForces(layoutInfo, options) {
	      // Inline implementation of a queue, used for traversing the graph in BFS order
	      var queue = [];
	      var start = 0; // Points to the start the queue
	      var end = -1; // Points to the end of the queue

	      // logDebug('propagateForces');

	      // Start by visiting the nodes in the root graph
	      queue.push.apply(queue, layoutInfo.graphSet[0]);
	      end += layoutInfo.graphSet[0].length;

	      // Traverse the graph, level by level,
	      while (start <= end) {
	        // Get the node to visit and remove it from queue
	        var nodeId = queue[start++];
	        var nodeIndex = layoutInfo.idToIndex[nodeId];
	        var node = layoutInfo.layoutNodes[nodeIndex];
	        var children = node.children;

	        // We only need to process the node if it's compound
	        if (0 < children.length && !node.isLocked) {
	          var offX = node.offsetX;
	          var offY = node.offsetY;

	          // var s = "Propagating offset from parent node : " + node.id +
	          //   ". OffsetX: " + offX + ". OffsetY: " + offY;
	          // s += "\n Children: " + children.toString();
	          // logDebug(s);

	          for (var i = 0; i < children.length; i++) {
	            var childNode = layoutInfo.layoutNodes[layoutInfo.idToIndex[children[i]]];
	            // Propagate offset
	            childNode.offsetX += offX;
	            childNode.offsetY += offY;
	            // Add children to queue to be visited
	            queue[++end] = children[i];
	          }

	          // Reset parent offsets
	          node.offsetX = 0;
	          node.offsetY = 0;
	        }
	      }
	    };

	    /**
	     * @brief : Updates the layout model positions, based on
	     *          the accumulated forces
	     */
	    var updatePositions = function updatePositions(layoutInfo, options) {
	      // var s = 'Updating positions';
	      // logDebug(s);

	      // Reset boundaries for compound nodes
	      for (var i = 0; i < layoutInfo.nodeSize; i++) {
	        var n = layoutInfo.layoutNodes[i];
	        if (0 < n.children.length) {
	          // logDebug("Resetting boundaries of compound node: " + n.id);
	          n.maxX = undefined;
	          n.minX = undefined;
	          n.maxY = undefined;
	          n.minY = undefined;
	        }
	      }

	      for (var i = 0; i < layoutInfo.nodeSize; i++) {
	        var n = layoutInfo.layoutNodes[i];
	        if (0 < n.children.length || n.isLocked) {
	          // No need to set compound or locked node position
	          // logDebug("Skipping position update of node: " + n.id);
	          continue;
	        }
	        // s = "Node: " + n.id + " Previous position: (" +
	        // n.positionX + ", " + n.positionY + ").";

	        // Limit displacement in order to improve stability
	        var tempForce = limitForce(n.offsetX, n.offsetY, layoutInfo.temperature);
	        n.positionX += tempForce.x;
	        n.positionY += tempForce.y;
	        n.offsetX = 0;
	        n.offsetY = 0;
	        n.minX = n.positionX - n.width;
	        n.maxX = n.positionX + n.width;
	        n.minY = n.positionY - n.height;
	        n.maxY = n.positionY + n.height;
	        // s += " New Position: (" + n.positionX + ", " + n.positionY + ").";
	        // logDebug(s);

	        // Update ancestry boudaries
	        updateAncestryBoundaries(n, layoutInfo);
	      }

	      // Update size, position of compund nodes
	      for (var i = 0; i < layoutInfo.nodeSize; i++) {
	        var n = layoutInfo.layoutNodes[i];
	        if (0 < n.children.length && !n.isLocked) {
	          n.positionX = (n.maxX + n.minX) / 2;
	          n.positionY = (n.maxY + n.minY) / 2;
	          n.width = n.maxX - n.minX;
	          n.height = n.maxY - n.minY;
	          // s = "Updating position, size of compound node " + n.id;
	          // s += "\nPositionX: " + n.positionX + ", PositionY: " + n.positionY;
	          // s += "\nWidth: " + n.width + ", Height: " + n.height;
	          // logDebug(s);
	        }
	      }
	    };

	    /**
	     * @brief : Limits a force (forceX, forceY) to be not
	     *          greater (in modulo) than max.
	     8          Preserves force direction.
	     */
	    var limitForce = function limitForce(forceX, forceY, max) {
	      // var s = "Limiting force: (" + forceX + ", " + forceY + "). Max: " + max;
	      var force = Math.sqrt(forceX * forceX + forceY * forceY);

	      if (force > max) {
	        var res = {
	          x: max * forceX / force,
	          y: max * forceY / force
	        };
	      } else {
	        var res = {
	          x: forceX,
	          y: forceY
	        };
	      }

	      // s += ".\nResult: (" + res.x + ", " + res.y + ")";
	      // logDebug(s);

	      return res;
	    };

	    /**
	     * @brief : Function used for keeping track of compound node
	     *          sizes, since they should bound all their subnodes.
	     */
	    var updateAncestryBoundaries = function updateAncestryBoundaries(node, layoutInfo) {
	      // var s = "Propagating new position/size of node " + node.id;
	      var parentId = node.parentId;
	      if (null == parentId) {
	        // If there's no parent, we are done
	        // s += ". No parent node.";
	        // logDebug(s);
	        return;
	      }

	      // Get Parent Node
	      var p = layoutInfo.layoutNodes[layoutInfo.idToIndex[parentId]];
	      var flag = false;

	      // MaxX
	      if (null == p.maxX || node.maxX + p.padRight > p.maxX) {
	        p.maxX = node.maxX + p.padRight;
	        flag = true;
	        // s += "\nNew maxX for parent node " + p.id + ": " + p.maxX;
	      }

	      // MinX
	      if (null == p.minX || node.minX - p.padLeft < p.minX) {
	        p.minX = node.minX - p.padLeft;
	        flag = true;
	        // s += "\nNew minX for parent node " + p.id + ": " + p.minX;
	      }

	      // MaxY
	      if (null == p.maxY || node.maxY + p.padBottom > p.maxY) {
	        p.maxY = node.maxY + p.padBottom;
	        flag = true;
	        // s += "\nNew maxY for parent node " + p.id + ": " + p.maxY;
	      }

	      // MinY
	      if (null == p.minY || node.minY - p.padTop < p.minY) {
	        p.minY = node.minY - p.padTop;
	        flag = true;
	        // s += "\nNew minY for parent node " + p.id + ": " + p.minY;
	      }

	      // If updated boundaries, propagate changes upward
	      if (flag) {
	        // logDebug(s);
	        return updateAncestryBoundaries(p, layoutInfo);
	      }

	      // s += ". No changes in boundaries/position of parent node " + p.id;
	      // logDebug(s);
	      return;
	    };

	    var separateComponents = function separateComponents(layutInfo, options) {
	      var nodes = layoutInfo.layoutNodes;
	      var components = [];

	      for (var i = 0; i < nodes.length; i++) {
	        var node = nodes[i];
	        var cid = node.cmptId;
	        var component = components[cid] = components[cid] || [];

	        component.push(node);
	      }

	      var totalA = 0;

	      for (var i = 0; i < components.length; i++) {
	        var c = components[i];

	        if (!c) {
	          continue;
	        }

	        c.x1 = Infinity;
	        c.x2 = -Infinity;
	        c.y1 = Infinity;
	        c.y2 = -Infinity;

	        for (var j = 0; j < c.length; j++) {
	          var n = c[j];

	          c.x1 = Math.min(c.x1, n.positionX - n.width / 2);
	          c.x2 = Math.max(c.x2, n.positionX + n.width / 2);
	          c.y1 = Math.min(c.y1, n.positionY - n.height / 2);
	          c.y2 = Math.max(c.y2, n.positionY + n.height / 2);
	        }

	        c.w = c.x2 - c.x1;
	        c.h = c.y2 - c.y1;

	        totalA += c.w * c.h;
	      }

	      components.sort(function (c1, c2) {
	        return c2.w * c2.h - c1.w * c1.h;
	      });

	      var x = 0;
	      var y = 0;
	      var usedW = 0;
	      var rowH = 0;
	      var maxRowW = Math.sqrt(totalA) * layoutInfo.clientWidth / layoutInfo.clientHeight;

	      for (var i = 0; i < components.length; i++) {
	        var c = components[i];

	        if (!c) {
	          continue;
	        }

	        for (var j = 0; j < c.length; j++) {
	          var n = c[j];

	          if (!n.isLocked) {
	            n.positionX += x;
	            n.positionY += y;
	          }
	        }

	        x += c.w + options.componentSpacing;
	        usedW += c.w + options.componentSpacing;
	        rowH = Math.max(rowH, c.h);

	        if (usedW > maxRowW) {
	          y += rowH + options.componentSpacing;
	          x = 0;
	          usedW = 0;
	          rowH = 0;
	        }
	      }
	    };

	    var mainLoop = function mainLoop(i) {
	      if (stopped) {
	        // logDebug("Layout manually stopped. Stopping computation in step " + i);
	        return false;
	      }

	      // Do one step in the phisical simulation
	      step(layoutInfo, options, i);

	      // Update temperature
	      layoutInfo.temperature = layoutInfo.temperature * options.coolingFactor;
	      // logDebug("New temperature: " + layoutInfo.temperature);

	      if (layoutInfo.temperature < options.minTemp) {
	        // logDebug("Temperature drop below minimum threshold. Stopping computation in step " + i);
	        return false;
	      }

	      return true;
	    };

	    var i = 0;
	    var loopRet;

	    do {
	      var f = 0;

	      while (f < options.refresh && i < options.numIter) {
	        var loopRet = mainLoop(i);
	        if (!loopRet) {
	          break;
	        }

	        f++;
	        i++;
	      }

	      if (options.animate === true) {
	        broadcast(layoutInfo.layoutNodes); // eslint-disable-line no-undef
	      }
	    } while (loopRet && i + 1 < options.numIter);

	    separateComponents(layoutInfo, options);

	    return layoutInfo;
	  }).then(function (layoutInfoUpdated) {
	    layoutInfo.layoutNodes = layoutInfoUpdated.layoutNodes; // get the positions

	    thread.stop();
	    done();
	  });

	  var done = function done() {
	    if (options.animate === true || options.animate === false) {
	      refresh({
	        force: true,
	        next: function next() {
	          // Layout has finished
	          layout.one('layoutstop', options.stop);
	          layout.emit({ type: 'layoutstop', layout: layout });
	        }
	      });
	    } else {
	      options.eles.nodes().layoutPositions(layout, options, function (node) {
	        var lnode = layoutInfo.layoutNodes[layoutInfo.idToIndex[node.data('id')]];

	        return { x: lnode.positionX, y: lnode.positionY };
	      });
	    }
	  };

	  return this; // chaining
	};

	/**
	 * @brief : called on continuous layouts to stop them before they finish
	 */
	CoseLayout.prototype.stop = function () {
	  this.stopped = true;

	  if (this.thread) {
	    this.thread.stop();
	  }

	  this.emit('layoutstop');

	  return this; // chaining
	};

	CoseLayout.prototype.destroy = function () {
	  if (this.thread) {
	    this.thread.stop();
	  }

	  return this; // chaining
	};

	/**
	 * @brief     : Creates an object which is contains all the data
	 *              used in the layout process
	 * @arg cy    : cytoscape.js object
	 * @return    : layoutInfo object initialized
	 */
	var createLayoutInfo = function createLayoutInfo(cy, layout, options) {
	  // Shortcut
	  var edges = options.eles.edges();
	  var nodes = options.eles.nodes();

	  var layoutInfo = {
	    isCompound: cy.hasCompoundNodes(),
	    layoutNodes: [],
	    idToIndex: {},
	    nodeSize: nodes.size(),
	    graphSet: [],
	    indexToGraph: [],
	    layoutEdges: [],
	    edgeSize: edges.size(),
	    temperature: options.initialTemp,
	    clientWidth: cy.width(),
	    clientHeight: cy.width(),
	    boundingBox: math.makeBoundingBox(options.boundingBox ? options.boundingBox : {
	      x1: 0, y1: 0, w: cy.width(), h: cy.height()
	    })
	  };

	  var components = options.eles.components();
	  var id2cmptId = {};

	  for (var i = 0; i < components.length; i++) {
	    var component = components[i];

	    for (var j = 0; j < component.length; j++) {
	      var node = component[j];

	      id2cmptId[node.id()] = i;
	    }
	  }

	  // Iterate over all nodes, creating layout nodes
	  for (var i = 0; i < layoutInfo.nodeSize; i++) {
	    var n = nodes[i];
	    var nbb = n.layoutDimensions(options);

	    var tempNode = {};
	    tempNode.isLocked = n.locked();
	    tempNode.id = n.data('id');
	    tempNode.parentId = n.data('parent');
	    tempNode.cmptId = id2cmptId[n.id()];
	    tempNode.children = [];
	    tempNode.positionX = n.position('x');
	    tempNode.positionY = n.position('y');
	    tempNode.offsetX = 0;
	    tempNode.offsetY = 0;
	    tempNode.height = nbb.w;
	    tempNode.width = nbb.h;
	    tempNode.maxX = tempNode.positionX + tempNode.width / 2;
	    tempNode.minX = tempNode.positionX - tempNode.width / 2;
	    tempNode.maxY = tempNode.positionY + tempNode.height / 2;
	    tempNode.minY = tempNode.positionY - tempNode.height / 2;
	    tempNode.padLeft = parseFloat(n.style('padding'));
	    tempNode.padRight = parseFloat(n.style('padding'));
	    tempNode.padTop = parseFloat(n.style('padding'));
	    tempNode.padBottom = parseFloat(n.style('padding'));

	    // forces
	    tempNode.nodeRepulsion = is.fn(options.nodeRepulsion) ? options.nodeRepulsion(n) : options.nodeRepulsion;

	    // Add new node
	    layoutInfo.layoutNodes.push(tempNode);
	    // Add entry to id-index map
	    layoutInfo.idToIndex[tempNode.id] = i;
	  }

	  // Inline implementation of a queue, used for traversing the graph in BFS order
	  var queue = [];
	  var start = 0; // Points to the start the queue
	  var end = -1; // Points to the end of the queue

	  var tempGraph = [];

	  // Second pass to add child information and
	  // initialize queue for hierarchical traversal
	  for (var i = 0; i < layoutInfo.nodeSize; i++) {
	    var n = layoutInfo.layoutNodes[i];
	    var p_id = n.parentId;
	    // Check if node n has a parent node
	    if (null != p_id) {
	      // Add node Id to parent's list of children
	      layoutInfo.layoutNodes[layoutInfo.idToIndex[p_id]].children.push(n.id);
	    } else {
	      // If a node doesn't have a parent, then it's in the root graph
	      queue[++end] = n.id;
	      tempGraph.push(n.id);
	    }
	  }

	  // Add root graph to graphSet
	  layoutInfo.graphSet.push(tempGraph);

	  // Traverse the graph, level by level,
	  while (start <= end) {
	    // Get the node to visit and remove it from queue
	    var node_id = queue[start++];
	    var node_ix = layoutInfo.idToIndex[node_id];
	    var node = layoutInfo.layoutNodes[node_ix];
	    var children = node.children;
	    if (children.length > 0) {
	      // Add children nodes as a new graph to graph set
	      layoutInfo.graphSet.push(children);
	      // Add children to que queue to be visited
	      for (var i = 0; i < children.length; i++) {
	        queue[++end] = children[i];
	      }
	    }
	  }

	  // Create indexToGraph map
	  for (var i = 0; i < layoutInfo.graphSet.length; i++) {
	    var graph = layoutInfo.graphSet[i];
	    for (var j = 0; j < graph.length; j++) {
	      var index = layoutInfo.idToIndex[graph[j]];
	      layoutInfo.indexToGraph[index] = i;
	    }
	  }

	  // Iterate over all edges, creating Layout Edges
	  for (var i = 0; i < layoutInfo.edgeSize; i++) {
	    var e = edges[i];
	    var tempEdge = {};
	    tempEdge.id = e.data('id');
	    tempEdge.sourceId = e.data('source');
	    tempEdge.targetId = e.data('target');

	    // Compute ideal length
	    var idealLength = is.fn(options.idealEdgeLength) ? options.idealEdgeLength(e) : options.idealEdgeLength;
	    var elasticity = is.fn(options.edgeElasticity) ? options.edgeElasticity(e) : options.edgeElasticity;

	    // Check if it's an inter graph edge
	    var sourceIx = layoutInfo.idToIndex[tempEdge.sourceId];
	    var targetIx = layoutInfo.idToIndex[tempEdge.targetId];
	    var sourceGraph = layoutInfo.indexToGraph[sourceIx];
	    var targetGraph = layoutInfo.indexToGraph[targetIx];

	    if (sourceGraph != targetGraph) {
	      // Find lowest common graph ancestor
	      var lca = findLCA(tempEdge.sourceId, tempEdge.targetId, layoutInfo);

	      // Compute sum of node depths, relative to lca graph
	      var lcaGraph = layoutInfo.graphSet[lca];
	      var depth = 0;

	      // Source depth
	      var tempNode = layoutInfo.layoutNodes[sourceIx];
	      while (-1 === lcaGraph.indexOf(tempNode.id)) {
	        tempNode = layoutInfo.layoutNodes[layoutInfo.idToIndex[tempNode.parentId]];
	        depth++;
	      }

	      // Target depth
	      tempNode = layoutInfo.layoutNodes[targetIx];
	      while (-1 === lcaGraph.indexOf(tempNode.id)) {
	        tempNode = layoutInfo.layoutNodes[layoutInfo.idToIndex[tempNode.parentId]];
	        depth++;
	      }

	      // logDebug('LCA of nodes ' + tempEdge.sourceId + ' and ' + tempEdge.targetId +
	      //  ". Index: " + lca + " Contents: " + lcaGraph.toString() +
	      //  ". Depth: " + depth);

	      // Update idealLength
	      idealLength *= depth * options.nestingFactor;
	    }

	    tempEdge.idealLength = idealLength;
	    tempEdge.elasticity = elasticity;

	    layoutInfo.layoutEdges.push(tempEdge);
	  }

	  // Finally, return layoutInfo object
	  return layoutInfo;
	};

	/**
	 * @brief : This function finds the index of the lowest common
	 *          graph ancestor between 2 nodes in the subtree
	 *          (from the graph hierarchy induced tree) whose
	 *          root is graphIx
	 *
	 * @arg node1: node1's ID
	 * @arg node2: node2's ID
	 * @arg layoutInfo: layoutInfo object
	 *
	 */
	var findLCA = function findLCA(node1, node2, layoutInfo) {
	  // Find their common ancester, starting from the root graph
	  var res = findLCA_aux(node1, node2, 0, layoutInfo);
	  if (2 > res.count) {
	    // If aux function couldn't find the common ancester,
	    // then it is the root graph
	    return 0;
	  } else {
	    return res.graph;
	  }
	};

	/**
	 * @brief          : Auxiliary function used for LCA computation
	 *
	 * @arg node1      : node1's ID
	 * @arg node2      : node2's ID
	 * @arg graphIx    : subgraph index
	 * @arg layoutInfo : layoutInfo object
	 *
	 * @return         : object of the form {count: X, graph: Y}, where:
	 *                   X is the number of ancesters (max: 2) found in
	 *                   graphIx (and it's subgraphs),
	 *                   Y is the graph index of the lowest graph containing
	 *                   all X nodes
	 */
	var findLCA_aux = function findLCA_aux(node1, node2, graphIx, layoutInfo) {
	  var graph = layoutInfo.graphSet[graphIx];
	  // If both nodes belongs to graphIx
	  if (-1 < graph.indexOf(node1) && -1 < graph.indexOf(node2)) {
	    return { count: 2, graph: graphIx };
	  }

	  // Make recursive calls for all subgraphs
	  var c = 0;
	  for (var i = 0; i < graph.length; i++) {
	    var nodeId = graph[i];
	    var nodeIx = layoutInfo.idToIndex[nodeId];
	    var children = layoutInfo.layoutNodes[nodeIx].children;

	    // If the node has no child, skip it
	    if (0 === children.length) {
	      continue;
	    }

	    var childGraphIx = layoutInfo.indexToGraph[layoutInfo.idToIndex[children[0]]];
	    var result = findLCA_aux(node1, node2, childGraphIx, layoutInfo);
	    if (0 === result.count) {
	      // Neither node1 nor node2 are present in this subgraph
	      continue;
	    } else if (1 === result.count) {
	      // One of (node1, node2) is present in this subgraph
	      c++;
	      if (2 === c) {
	        // We've already found both nodes, no need to keep searching
	        break;
	      }
	    } else {
	      // Both nodes are present in this subgraph
	      return result;
	    }
	  }

	  return { count: c, graph: graphIx };
	};

	/**
	 * @brief: printsLayoutInfo into js console
	 *         Only used for debbuging
	 */
	var printLayoutInfo = function printLayoutInfo(layoutInfo) {
	  /* eslint-disable */

	  if (!DEBUG) {
	    return;
	  }
	  console.debug('layoutNodes:');
	  for (var i = 0; i < layoutInfo.nodeSize; i++) {
	    var n = layoutInfo.layoutNodes[i];
	    var s = '\nindex: ' + i + '\nId: ' + n.id + '\nChildren: ' + n.children.toString() + '\nparentId: ' + n.parentId + '\npositionX: ' + n.positionX + '\npositionY: ' + n.positionY + '\nOffsetX: ' + n.offsetX + '\nOffsetY: ' + n.offsetY + '\npadLeft: ' + n.padLeft + '\npadRight: ' + n.padRight + '\npadTop: ' + n.padTop + '\npadBottom: ' + n.padBottom;

	    console.debug(s);
	  }

	  console.debug('idToIndex');
	  for (var i in layoutInfo.idToIndex) {
	    console.debug('Id: ' + i + '\nIndex: ' + layoutInfo.idToIndex[i]);
	  }

	  console.debug('Graph Set');
	  var set = layoutInfo.graphSet;
	  for (var i = 0; i < set.length; i++) {
	    console.debug('Set : ' + i + ': ' + set[i].toString());
	  }

	  var s = 'IndexToGraph';
	  for (var i = 0; i < layoutInfo.indexToGraph.length; i++) {
	    s += '\nIndex : ' + i + ' Graph: ' + layoutInfo.indexToGraph[i];
	  }
	  console.debug(s);

	  s = 'Layout Edges';
	  for (var i = 0; i < layoutInfo.layoutEdges.length; i++) {
	    var e = layoutInfo.layoutEdges[i];
	    s += '\nEdge Index: ' + i + ' ID: ' + e.id + ' SouceID: ' + e.sourceId + ' TargetId: ' + e.targetId + ' Ideal Length: ' + e.idealLength;
	  }
	  console.debug(s);

	  s = 'nodeSize: ' + layoutInfo.nodeSize;
	  s += '\nedgeSize: ' + layoutInfo.edgeSize;
	  s += '\ntemperature: ' + layoutInfo.temperature;
	  console.debug(s);

	  return;
	  /* eslint-enable */
	};

	/**
	 * @brief : Randomizes the position of all nodes
	 */
	var randomizePositions = function randomizePositions(layoutInfo, cy) {
	  var width = layoutInfo.clientWidth;
	  var height = layoutInfo.clientHeight;

	  for (var i = 0; i < layoutInfo.nodeSize; i++) {
	    var n = layoutInfo.layoutNodes[i];

	    // No need to randomize compound nodes or locked nodes
	    if (0 === n.children.length && !n.isLocked) {
	      n.positionX = Math.random() * width;
	      n.positionY = Math.random() * height;
	    }
	  }
	};

	/**
	 * @brief          : Updates the positions of nodes in the network
	 * @arg layoutInfo : LayoutInfo object
	 * @arg cy         : Cytoscape object
	 * @arg options    : Layout options
	 */
	var refreshPositions = function refreshPositions(layoutInfo, cy, options) {
	  // var s = 'Refreshing positions';
	  // logDebug(s);

	  var layout = options.layout;
	  var nodes = options.eles.nodes();
	  var bb = layoutInfo.boundingBox;
	  var coseBB = { x1: Infinity, x2: -Infinity, y1: Infinity, y2: -Infinity };

	  if (options.boundingBox) {
	    nodes.forEach(function (node) {
	      var lnode = layoutInfo.layoutNodes[layoutInfo.idToIndex[node.data('id')]];

	      coseBB.x1 = Math.min(coseBB.x1, lnode.positionX);
	      coseBB.x2 = Math.max(coseBB.x2, lnode.positionX);

	      coseBB.y1 = Math.min(coseBB.y1, lnode.positionY);
	      coseBB.y2 = Math.max(coseBB.y2, lnode.positionY);
	    });

	    coseBB.w = coseBB.x2 - coseBB.x1;
	    coseBB.h = coseBB.y2 - coseBB.y1;
	  }

	  nodes.positions(function (ele, i) {
	    var lnode = layoutInfo.layoutNodes[layoutInfo.idToIndex[ele.data('id')]];
	    // s = "Node: " + lnode.id + ". Refreshed position: (" +
	    // lnode.positionX + ", " + lnode.positionY + ").";
	    // logDebug(s);

	    if (options.boundingBox) {
	      // then add extra bounding box constraint
	      var pctX = (lnode.positionX - coseBB.x1) / coseBB.w;
	      var pctY = (lnode.positionY - coseBB.y1) / coseBB.h;

	      return {
	        x: bb.x1 + pctX * bb.w,
	        y: bb.y1 + pctY * bb.h
	      };
	    } else {
	      return {
	        x: lnode.positionX,
	        y: lnode.positionY
	      };
	    }
	  });

	  // Trigger layoutReady only on first call
	  if (true !== layoutInfo.ready) {
	    // s = 'Triggering layoutready';
	    // logDebug(s);
	    layoutInfo.ready = true;
	    layout.one('layoutready', options.ready);
	    layout.emit({ type: 'layoutready', layout: this });
	  }
	};

	/**
	 * @brief : Logs a debug message in JS console, if DEBUG is ON
	 */
	// var logDebug = function(text) {
	//   if (DEBUG) {
	//     console.debug(text);
	//   }
	// };

	module.exports = CoseLayout;

	/***/ }),
	/* 101 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var math = __webpack_require__(2);

	var defaults = {
	  fit: true, // whether to fit the viewport to the graph
	  padding: 30, // padding used on fit
	  boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }
	  avoidOverlap: true, // prevents node overlap, may overflow boundingBox if not enough space
	  avoidOverlapPadding: 10, // extra spacing around nodes when avoidOverlap: true
	  nodeDimensionsIncludeLabels: false, // Excludes the label when calculating node bounding boxes for the layout algorithm
	  spacingFactor: undefined, // Applies a multiplicative factor (>0) to expand or compress the overall area that the nodes take up
	  condense: false, // uses all available space on false, uses minimal space on true
	  rows: undefined, // force num of rows in the grid
	  cols: undefined, // force num of columns in the grid
	  position: function position(node) {}, // returns { row, col } for element
	  sort: undefined, // a sorting function to order the nodes; e.g. function(a, b){ return a.data('weight') - b.data('weight') }
	  animate: false, // whether to transition the node positions
	  animationDuration: 500, // duration of animation in ms if enabled
	  animationEasing: undefined, // easing of animation if enabled
	  animateFilter: function animateFilter(node, i) {
	    return true;
	  }, // a function that determines whether the node should be animated.  All nodes animated by default on animate enabled.  Non-animated nodes are positioned immediately when the layout starts
	  ready: undefined, // callback on layoutready
	  stop: undefined, // callback on layoutstop
	  transform: function transform(node, position) {
	    return position;
	  } // transform a given node position. Useful for changing flow direction in discrete layouts 
	};

	function GridLayout(options) {
	  this.options = util.extend({}, defaults, options);
	}

	GridLayout.prototype.run = function () {
	  var params = this.options;
	  var options = params;

	  var cy = params.cy;
	  var eles = options.eles;
	  var nodes = eles.nodes().not(':parent');

	  if (options.sort) {
	    nodes = nodes.sort(options.sort);
	  }

	  var bb = math.makeBoundingBox(options.boundingBox ? options.boundingBox : {
	    x1: 0, y1: 0, w: cy.width(), h: cy.height()
	  });

	  if (bb.h === 0 || bb.w === 0) {
	    nodes.layoutPositions(this, options, function (ele) {
	      return { x: bb.x1, y: bb.y1 };
	    });
	  } else {

	    // width/height * splits^2 = cells where splits is number of times to split width
	    var cells = nodes.size();
	    var splits = Math.sqrt(cells * bb.h / bb.w);
	    var rows = Math.round(splits);
	    var cols = Math.round(bb.w / bb.h * splits);

	    var small = function small(val) {
	      if (val == null) {
	        return Math.min(rows, cols);
	      } else {
	        var min = Math.min(rows, cols);
	        if (min == rows) {
	          rows = val;
	        } else {
	          cols = val;
	        }
	      }
	    };

	    var large = function large(val) {
	      if (val == null) {
	        return Math.max(rows, cols);
	      } else {
	        var max = Math.max(rows, cols);
	        if (max == rows) {
	          rows = val;
	        } else {
	          cols = val;
	        }
	      }
	    };

	    var oRows = options.rows;
	    var oCols = options.cols != null ? options.cols : options.columns;

	    // if rows or columns were set in options, use those values
	    if (oRows != null && oCols != null) {
	      rows = oRows;
	      cols = oCols;
	    } else if (oRows != null && oCols == null) {
	      rows = oRows;
	      cols = Math.ceil(cells / rows);
	    } else if (oRows == null && oCols != null) {
	      cols = oCols;
	      rows = Math.ceil(cells / cols);
	    }

	    // otherwise use the automatic values and adjust accordingly

	    // if rounding was up, see if we can reduce rows or columns
	    else if (cols * rows > cells) {
	        var sm = small();
	        var lg = large();

	        // reducing the small side takes away the most cells, so try it first
	        if ((sm - 1) * lg >= cells) {
	          small(sm - 1);
	        } else if ((lg - 1) * sm >= cells) {
	          large(lg - 1);
	        }
	      } else {

	        // if rounding was too low, add rows or columns
	        while (cols * rows < cells) {
	          var _sm = small();
	          var _lg = large();

	          // try to add to larger side first (adds less in multiplication)
	          if ((_lg + 1) * _sm >= cells) {
	            large(_lg + 1);
	          } else {
	            small(_sm + 1);
	          }
	        }
	      }

	    var cellWidth = bb.w / cols;
	    var cellHeight = bb.h / rows;

	    if (options.condense) {
	      cellWidth = 0;
	      cellHeight = 0;
	    }

	    if (options.avoidOverlap) {
	      for (var i = 0; i < nodes.length; i++) {
	        var node = nodes[i];
	        var pos = node._private.position;

	        if (pos.x == null || pos.y == null) {
	          // for bb
	          pos.x = 0;
	          pos.y = 0;
	        }

	        var nbb = node.layoutDimensions(options);
	        var p = options.avoidOverlapPadding;

	        var w = nbb.w + p;
	        var h = nbb.h + p;

	        cellWidth = Math.max(cellWidth, w);
	        cellHeight = Math.max(cellHeight, h);
	      }
	    }

	    var cellUsed = {}; // e.g. 'c-0-2' => true

	    var used = function used(row, col) {
	      return cellUsed['c-' + row + '-' + col] ? true : false;
	    };

	    var use = function use(row, col) {
	      cellUsed['c-' + row + '-' + col] = true;
	    };

	    // to keep track of current cell position
	    var row = 0;
	    var col = 0;
	    var moveToNextCell = function moveToNextCell() {
	      col++;
	      if (col >= cols) {
	        col = 0;
	        row++;
	      }
	    };

	    // get a cache of all the manual positions
	    var id2manPos = {};
	    for (var _i = 0; _i < nodes.length; _i++) {
	      var _node = nodes[_i];
	      var rcPos = options.position(_node);

	      if (rcPos && (rcPos.row !== undefined || rcPos.col !== undefined)) {
	        // must have at least row or col def'd
	        var _pos = {
	          row: rcPos.row,
	          col: rcPos.col
	        };

	        if (_pos.col === undefined) {
	          // find unused col
	          _pos.col = 0;

	          while (used(_pos.row, _pos.col)) {
	            _pos.col++;
	          }
	        } else if (_pos.row === undefined) {
	          // find unused row
	          _pos.row = 0;

	          while (used(_pos.row, _pos.col)) {
	            _pos.row++;
	          }
	        }

	        id2manPos[_node.id()] = _pos;
	        use(_pos.row, _pos.col);
	      }
	    }

	    var getPos = function getPos(element, i) {
	      var x = void 0,
	          y = void 0;

	      if (element.locked() || element.isParent()) {
	        return false;
	      }

	      // see if we have a manual position set
	      var rcPos = id2manPos[element.id()];
	      if (rcPos) {
	        x = rcPos.col * cellWidth + cellWidth / 2 + bb.x1;
	        y = rcPos.row * cellHeight + cellHeight / 2 + bb.y1;
	      } else {
	        // otherwise set automatically

	        while (used(row, col)) {
	          moveToNextCell();
	        }

	        x = col * cellWidth + cellWidth / 2 + bb.x1;
	        y = row * cellHeight + cellHeight / 2 + bb.y1;
	        use(row, col);

	        moveToNextCell();
	      }

	      return { x: x, y: y };
	    };

	    nodes.layoutPositions(this, options, getPos);
	  }

	  return this; // chaining
	};

	module.exports = GridLayout;

	/***/ }),
	/* 102 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);

	// default layout options
	var defaults = {
	  ready: function ready() {}, // on layoutready
	  stop: function stop() {} // on layoutstop
	};

	// constructor
	// options : object containing layout options
	function NullLayout(options) {
	  this.options = util.extend({}, defaults, options);
	}

	// runs the layout
	NullLayout.prototype.run = function () {
	  var options = this.options;
	  var eles = options.eles; // elements to consider in the layout
	  var layout = this;

	  // cy is automatically populated for us in the constructor
	  var cy = options.cy; // jshint ignore:line

	  layout.emit('layoutstart');

	  // puts all nodes at (0, 0)
	  eles.nodes().positions(function () {
	    return {
	      x: 0,
	      y: 0
	    };
	  });

	  // trigger layoutready when each node has had its position set at least once
	  layout.one('layoutready', options.ready);
	  layout.emit('layoutready');

	  // trigger layoutstop when the layout stops (e.g. finishes)
	  layout.one('layoutstop', options.stop);
	  layout.emit('layoutstop');

	  return this; // chaining
	};

	// called on continuous layouts to stop them before they finish
	NullLayout.prototype.stop = function () {
	  return this; // chaining
	};

	module.exports = NullLayout;

	/***/ }),
	/* 103 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var is = __webpack_require__(0);

	var defaults = {
	  positions: undefined, // map of (node id) => (position obj); or function(node){ return somPos; }
	  zoom: undefined, // the zoom level to set (prob want fit = false if set)
	  pan: undefined, // the pan level to set (prob want fit = false if set)
	  fit: true, // whether to fit to viewport
	  padding: 30, // padding on fit
	  animate: false, // whether to transition the node positions
	  animationDuration: 500, // duration of animation in ms if enabled
	  animationEasing: undefined, // easing of animation if enabled
	  animateFilter: function animateFilter(node, i) {
	    return true;
	  }, // a function that determines whether the node should be animated.  All nodes animated by default on animate enabled.  Non-animated nodes are positioned immediately when the layout starts
	  ready: undefined, // callback on layoutready
	  stop: undefined, // callback on layoutstop
	  transform: function transform(node, position) {
	    return position;
	  } // transform a given node position. Useful for changing flow direction in discrete layouts 
	};

	function PresetLayout(options) {
	  this.options = util.extend({}, defaults, options);
	}

	PresetLayout.prototype.run = function () {
	  var options = this.options;
	  var eles = options.eles;

	  var nodes = eles.nodes();
	  var posIsFn = is.fn(options.positions);

	  function getPosition(node) {
	    if (options.positions == null) {
	      return null;
	    }

	    if (posIsFn) {
	      return options.positions(node);
	    }

	    var pos = options.positions[node._private.data.id];

	    if (pos == null) {
	      return null;
	    }

	    return pos;
	  }

	  nodes.layoutPositions(this, options, function (node, i) {
	    var position = getPosition(node);

	    if (node.locked() || position == null) {
	      return false;
	    }

	    return position;
	  });

	  return this; // chaining
	};

	module.exports = PresetLayout;

	/***/ }),
	/* 104 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var math = __webpack_require__(2);

	var defaults = {
	  fit: true, // whether to fit to viewport
	  padding: 30, // fit padding
	  boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }
	  animate: false, // whether to transition the node positions
	  animationDuration: 500, // duration of animation in ms if enabled
	  animationEasing: undefined, // easing of animation if enabled
	  animateFilter: function animateFilter(node, i) {
	    return true;
	  }, // a function that determines whether the node should be animated.  All nodes animated by default on animate enabled.  Non-animated nodes are positioned immediately when the layout starts
	  ready: undefined, // callback on layoutready
	  stop: undefined, // callback on layoutstop
	  transform: function transform(node, position) {
	    return position;
	  } // transform a given node position. Useful for changing flow direction in discrete layouts 
	};

	function RandomLayout(options) {
	  this.options = util.extend({}, defaults, options);
	}

	RandomLayout.prototype.run = function () {
	  var options = this.options;
	  var cy = options.cy;
	  var eles = options.eles;
	  var nodes = eles.nodes().not(':parent');

	  var bb = math.makeBoundingBox(options.boundingBox ? options.boundingBox : {
	    x1: 0, y1: 0, w: cy.width(), h: cy.height()
	  });

	  var getPos = function getPos(node, i) {
	    return {
	      x: bb.x1 + Math.round(Math.random() * bb.w),
	      y: bb.y1 + Math.round(Math.random() * bb.h)
	    };
	  };

	  nodes.layoutPositions(this, options, getPos);

	  return this; // chaining
	};

	module.exports = RandomLayout;

	/***/ }),
	/* 105 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	module.exports = [{ name: 'null', impl: __webpack_require__(106) }, { name: 'base', impl: __webpack_require__(107) }, { name: 'canvas', impl: __webpack_require__(123) }];

	/***/ }),
	/* 106 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	function NullRenderer(options) {
	  this.options = options;
	  this.notifications = 0; // for testing
	}

	var noop = function noop() {};

	NullRenderer.prototype = {
	  recalculateRenderedStyle: noop,
	  notify: function notify() {
	    this.notifications++;
	  },
	  init: noop
	};

	module.exports = NullRenderer;

	/***/ }),
	/* 107 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var util = __webpack_require__(1);
	var window = __webpack_require__(3);

	var BaseRenderer = function BaseRenderer(options) {
	  this.init(options);
	};
	var BR = BaseRenderer;
	var BRp = BR.prototype;

	BRp.clientFunctions = ['redrawHint', 'render', 'renderTo', 'matchCanvasSize', 'nodeShapeImpl', 'arrowShapeImpl'];

	BRp.init = function (options) {
	  var r = this;

	  r.options = options;

	  r.cy = options.cy;

	  var ctr = r.container = options.cy.container();

	  // prepend a stylesheet in the head such that
	  if (window) {
	    var document = window.document;
	    var head = document.head;
	    var stylesheetId = '__________cytoscape_stylesheet';
	    var className = '__________cytoscape_container';
	    var stylesheetAlreadyExists = document.getElementById(stylesheetId) != null;

	    if (ctr.className.indexOf(className) < 0) {
	      ctr.className = (ctr.className || '') + ' ' + className;
	    }

	    if (!stylesheetAlreadyExists) {
	      var stylesheet = document.createElement('style');

	      stylesheet.id = stylesheetId;
	      stylesheet.innerHTML = '.' + className + ' { position: relative; }';

	      head.insertBefore(stylesheet, head.children[0]); // first so lowest priority
	    }

	    var computedStyle = window.getComputedStyle(ctr);
	    var position = computedStyle.getPropertyValue('position');

	    if (position === 'static') {
	      util.error('A Cytoscape container has style position:static and so can not use UI extensions properly');
	    }
	  }

	  r.selection = [undefined, undefined, undefined, undefined, 0]; // Coordinates for selection box, plus enabled flag

	  r.bezierProjPcts = [0.05, 0.225, 0.4, 0.5, 0.6, 0.775, 0.95];

	  //--Pointer-related data
	  r.hoverData = { down: null, last: null,
	    downTime: null, triggerMode: null,
	    dragging: false,
	    initialPan: [null, null], capture: false };

	  r.dragData = { possibleDragElements: [] };

	  r.touchData = {
	    start: null, capture: false,

	    // These 3 fields related to tap, taphold events
	    startPosition: [null, null, null, null, null, null],
	    singleTouchStartTime: null,
	    singleTouchMoved: true,

	    now: [null, null, null, null, null, null],
	    earlier: [null, null, null, null, null, null]
	  };

	  r.redraws = 0;
	  r.showFps = options.showFps;
	  r.debug = options.debug;

	  r.hideEdgesOnViewport = options.hideEdgesOnViewport;
	  r.hideLabelsOnViewport = options.hideLabelsOnViewport;
	  r.textureOnViewport = options.textureOnViewport;
	  r.wheelSensitivity = options.wheelSensitivity;
	  r.motionBlurEnabled = options.motionBlur; // on by default
	  r.forcedPixelRatio = options.pixelRatio;
	  r.motionBlur = options.motionBlur; // for initial kick off
	  r.motionBlurOpacity = options.motionBlurOpacity;
	  r.motionBlurTransparency = 1 - r.motionBlurOpacity;
	  r.motionBlurPxRatio = 1;
	  r.mbPxRBlurry = 1; //0.8;
	  r.minMbLowQualFrames = 4;
	  r.fullQualityMb = false;
	  r.clearedForMotionBlur = [];
	  r.desktopTapThreshold = options.desktopTapThreshold;
	  r.desktopTapThreshold2 = options.desktopTapThreshold * options.desktopTapThreshold;
	  r.touchTapThreshold = options.touchTapThreshold;
	  r.touchTapThreshold2 = options.touchTapThreshold * options.touchTapThreshold;
	  r.tapholdDuration = 500;

	  r.bindings = [];
	  r.beforeRenderCallbacks = [];
	  r.beforeRenderPriorities = { // higher priority execs before lower one
	    animations: 400,
	    eleCalcs: 300,
	    eleTxrDeq: 200,
	    lyrTxrDeq: 100
	  };

	  r.registerNodeShapes();
	  r.registerArrowShapes();
	  r.registerCalculationListeners();
	};

	BRp.notify = function (params) {
	  var types;
	  var r = this;

	  // the renderer can't be notified after it's destroyed
	  if (this.destroyed) {
	    return;
	  }

	  if (is.array(params.type)) {
	    types = params.type;
	  } else {
	    types = [params.type];
	  }

	  var has = {};
	  for (var i = 0; i < types.length; i++) {
	    var type = types[i];

	    has[type] = true;
	  } // for

	  if (has['init']) {
	    r.load();
	    return;
	  }

	  if (has['destroy']) {
	    r.destroy();
	    return;
	  }

	  if (has['add'] || has['remove'] || has['load'] || has['zorder']) {
	    r.invalidateCachedZSortedEles();
	  }

	  if (has['viewport']) {
	    r.redrawHint('select', true);
	  }

	  if (has['load'] || has['resize']) {
	    r.invalidateContainerClientCoordsCache();
	    r.matchCanvasSize(r.container);
	  }

	  r.redrawHint('eles', true);
	  r.redrawHint('drag', true);

	  this.startRenderLoop();

	  this.redraw();
	};

	BRp.destroy = function () {
	  var r = this;

	  r.destroyed = true;

	  r.cy.stopAnimationLoop();

	  for (var i = 0; i < r.bindings.length; i++) {
	    var binding = r.bindings[i];
	    var b = binding;
	    var tgt = b.target;

	    (tgt.off || tgt.removeEventListener).apply(tgt, b.args);
	  }

	  r.bindings = [];
	  r.beforeRenderCallbacks = [];
	  r.onUpdateEleCalcsFns = [];

	  if (r.removeObserver) {
	    r.removeObserver.disconnect();
	  }

	  if (r.styleObserver) {
	    r.styleObserver.disconnect();
	  }

	  if (r.labelCalcDiv) {
	    try {
	      document.body.removeChild(r.labelCalcDiv); // eslint-disable-line no-undef
	    } catch (e) {
	      // ie10 issue #1014
	    }
	  }
	};

	[__webpack_require__(108), __webpack_require__(109), __webpack_require__(119), __webpack_require__(120), __webpack_require__(121), __webpack_require__(122)].forEach(function (props) {
	  util.extend(BRp, props);
	});

	module.exports = BR;

	/***/ }),
	/* 108 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var math = __webpack_require__(2);
	var is = __webpack_require__(0);
	var util = __webpack_require__(1);

	var BRp = {};

	BRp.arrowShapeWidth = 0.3;

	BRp.registerArrowShapes = function () {
	  var arrowShapes = this.arrowShapes = {};
	  var renderer = this;

	  // Contract for arrow shapes:
	  // 0, 0 is arrow tip
	  // (0, 1) is direction towards node
	  // (1, 0) is right
	  //
	  // functional api:
	  // collide: check x, y in shape
	  // roughCollide: called before collide, no false negatives
	  // draw: draw
	  // spacing: dist(arrowTip, nodeBoundary)
	  // gap: dist(edgeTip, nodeBoundary), edgeTip may != arrowTip

	  var bbCollide = function bbCollide(x, y, size, angle, translation, edgeWidth, padding) {
	    var x1 = translation.x - size / 2 - padding;
	    var x2 = translation.x + size / 2 + padding;
	    var y1 = translation.y - size / 2 - padding;
	    var y2 = translation.y + size / 2 + padding;

	    var inside = x1 <= x && x <= x2 && y1 <= y && y <= y2;

	    return inside;
	  };

	  var transform = function transform(x, y, size, angle, translation) {
	    var xRotated = x * Math.cos(angle) - y * Math.sin(angle);
	    var yRotated = x * Math.sin(angle) + y * Math.cos(angle);

	    var xScaled = xRotated * size;
	    var yScaled = yRotated * size;

	    var xTranslated = xScaled + translation.x;
	    var yTranslated = yScaled + translation.y;

	    return {
	      x: xTranslated,
	      y: yTranslated
	    };
	  };

	  var transformPoints = function transformPoints(pts, size, angle, translation) {
	    var retPts = [];

	    for (var i = 0; i < pts.length; i += 2) {
	      var x = pts[i];
	      var y = pts[i + 1];

	      retPts.push(transform(x, y, size, angle, translation));
	    }

	    return retPts;
	  };

	  var pointsToArr = function pointsToArr(pts) {
	    var ret = [];

	    for (var i = 0; i < pts.length; i++) {
	      var p = pts[i];

	      ret.push(p.x, p.y);
	    }

	    return ret;
	  };

	  var standardGap = function standardGap(edge) {
	    return edge.pstyle('width').pfValue * edge.pstyle('arrow-scale').pfValue * 2;
	  };

	  var defineArrowShape = function defineArrowShape(name, defn) {
	    if (is.string(defn)) {
	      defn = arrowShapes[defn];
	    }

	    arrowShapes[name] = util.extend({
	      name: name,

	      points: [-0.15, -0.3, 0.15, -0.3, 0.15, 0.3, -0.15, 0.3],

	      collide: function collide(x, y, size, angle, translation, padding) {
	        var points = pointsToArr(transformPoints(this.points, size + 2 * padding, angle, translation));
	        var inside = math.pointInsidePolygonPoints(x, y, points);

	        return inside;
	      },

	      roughCollide: bbCollide,

	      draw: function draw(context, size, angle, translation) {
	        var points = transformPoints(this.points, size, angle, translation);

	        renderer.arrowShapeImpl('polygon')(context, points);
	      },

	      spacing: function spacing(edge) {
	        return 0;
	      },

	      gap: standardGap
	    }, defn);
	  };

	  defineArrowShape('none', {
	    collide: util.falsify,

	    roughCollide: util.falsify,

	    draw: util.noop,

	    spacing: util.zeroify,

	    gap: util.zeroify
	  });

	  defineArrowShape('triangle', {
	    points: [-0.15, -0.3, 0, 0, 0.15, -0.3]
	  });

	  defineArrowShape('arrow', 'triangle');

	  defineArrowShape('triangle-backcurve', {
	    points: arrowShapes['triangle'].points,

	    controlPoint: [0, -0.15],

	    roughCollide: bbCollide,

	    draw: function draw(context, size, angle, translation, edgeWidth) {
	      var ptsTrans = transformPoints(this.points, size, angle, translation);
	      var ctrlPt = this.controlPoint;
	      var ctrlPtTrans = transform(ctrlPt[0], ctrlPt[1], size, angle, translation);

	      renderer.arrowShapeImpl(this.name)(context, ptsTrans, ctrlPtTrans);
	    },

	    gap: function gap(edge) {
	      return standardGap(edge) * 0.8;
	    }
	  });

	  defineArrowShape('triangle-tee', {
	    points: [-0.15, -0.3, 0, 0, 0.15, -0.3, -0.15, -0.3],

	    pointsTee: [-0.15, -0.4, -0.15, -0.5, 0.15, -0.5, 0.15, -0.4],

	    collide: function collide(x, y, size, angle, translation, edgeWidth, padding) {
	      var triPts = pointsToArr(transformPoints(this.points, size + 2 * padding, angle, translation));
	      var teePts = pointsToArr(transformPoints(this.pointsTee, size + 2 * padding, angle, translation));

	      var inside = math.pointInsidePolygonPoints(x, y, triPts) || math.pointInsidePolygonPoints(x, y, teePts);

	      return inside;
	    },

	    draw: function draw(context, size, angle, translation, edgeWidth) {
	      var triPts = transformPoints(this.points, size, angle, translation);
	      var teePts = transformPoints(this.pointsTee, size, angle, translation);

	      renderer.arrowShapeImpl(this.name)(context, triPts, teePts);
	    }
	  });

	  defineArrowShape('triangle-cross', {
	    points: [-0.15, -0.3, 0, 0, 0.15, -0.3, -0.15, -0.3],

	    baseCrossLinePts: [-0.15, -0.4, // first half of the rectangle
	    -0.15, -0.4, 0.15, -0.4, // second half of the rectangle
	    0.15, -0.4],

	    crossLinePts: function crossLinePts(size, edgeWidth) {
	      // shift points so that the distance between the cross points matches edge width
	      var p = this.baseCrossLinePts.slice();
	      var shiftFactor = edgeWidth / size;
	      var y0 = 3;
	      var y1 = 5;

	      p[y0] = p[y0] - shiftFactor;
	      p[y1] = p[y1] - shiftFactor;

	      return p;
	    },

	    collide: function collide(x, y, size, angle, translation, edgeWidth, padding) {
	      var triPts = pointsToArr(transformPoints(this.points, size + 2 * padding, angle, translation));
	      var teePts = pointsToArr(transformPoints(this.crossLinePts(size, edgeWidth), size + 2 * padding, angle, translation));
	      var inside = math.pointInsidePolygonPoints(x, y, triPts) || math.pointInsidePolygonPoints(x, y, teePts);

	      return inside;
	    },

	    draw: function draw(context, size, angle, translation, edgeWidth) {
	      var triPts = transformPoints(this.points, size, angle, translation);
	      var crossLinePts = transformPoints(this.crossLinePts(size, edgeWidth), size, angle, translation);

	      renderer.arrowShapeImpl(this.name)(context, triPts, crossLinePts);
	    }
	  });

	  defineArrowShape('vee', {
	    points: [-0.15, -0.3, 0, 0, 0.15, -0.3, 0, -0.15],

	    gap: function gap(edge) {
	      return standardGap(edge) * 0.525;
	    }
	  });

	  defineArrowShape('circle', {
	    radius: 0.15,

	    collide: function collide(x, y, size, angle, translation, edgeWidth, padding) {
	      var t = translation;
	      var inside = Math.pow(t.x - x, 2) + Math.pow(t.y - y, 2) <= Math.pow((size + 2 * padding) * this.radius, 2);

	      return inside;
	    },

	    draw: function draw(context, size, angle, translation, edgeWidth) {
	      renderer.arrowShapeImpl(this.name)(context, translation.x, translation.y, this.radius * size);
	    },

	    spacing: function spacing(edge) {
	      return renderer.getArrowWidth(edge.pstyle('width').pfValue, edge.pstyle('arrow-scale').value) * this.radius;
	    }
	  });

	  defineArrowShape('tee', {
	    points: [-0.15, 0, -0.15, -0.1, 0.15, -0.1, 0.15, 0],

	    spacing: function spacing(edge) {
	      return 1;
	    },

	    gap: function gap(edge) {
	      return 1;
	    }
	  });

	  defineArrowShape('square', {
	    points: [-0.15, 0.00, 0.15, 0.00, 0.15, -0.3, -0.15, -0.3]
	  });

	  defineArrowShape('diamond', {
	    points: [-0.15, -0.15, 0, -0.3, 0.15, -0.15, 0, 0],

	    gap: function gap(edge) {
	      return edge.pstyle('width').pfValue * edge.pstyle('arrow-scale').value;
	    }
	  });
	};

	module.exports = BRp;

	/***/ }),
	/* 109 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);

	var BRp = {};

	[__webpack_require__(110), __webpack_require__(111), __webpack_require__(112), __webpack_require__(113), __webpack_require__(114), __webpack_require__(115), __webpack_require__(116), __webpack_require__(117), __webpack_require__(118)].forEach(function (props) {
	  util.extend(BRp, props);
	});

	module.exports = BRp;

	/***/ }),
	/* 110 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var window = __webpack_require__(3);
	var math = __webpack_require__(2);
	var util = __webpack_require__(1);
	var window = __webpack_require__(3);

	var BRp = {};

	// Project mouse
	BRp.projectIntoViewport = function (clientX, clientY) {
	  var cy = this.cy;
	  var offsets = this.findContainerClientCoords();
	  var offsetLeft = offsets[0];
	  var offsetTop = offsets[1];
	  var scale = offsets[4];
	  var pan = cy.pan();
	  var zoom = cy.zoom();

	  var x = ((clientX - offsetLeft) / scale - pan.x) / zoom;
	  var y = ((clientY - offsetTop) / scale - pan.y) / zoom;

	  return [x, y];
	};

	BRp.findContainerClientCoords = function () {
	  if (this.containerBB) {
	    return this.containerBB;
	  }

	  var container = this.container;
	  var rect = container.getBoundingClientRect();
	  var style = window.getComputedStyle(container);
	  var styleValue = function styleValue(name) {
	    return parseFloat(style.getPropertyValue(name));
	  };

	  var padding = {
	    left: styleValue('padding-left'),
	    right: styleValue('padding-right'),
	    top: styleValue('padding-top'),
	    bottom: styleValue('padding-bottom')
	  };

	  var border = {
	    left: styleValue('border-left-width'),
	    right: styleValue('border-right-width'),
	    top: styleValue('border-top-width'),
	    bottom: styleValue('border-bottom-width')
	  };

	  var clientWidth = container.clientWidth;
	  var clientHeight = container.clientHeight;

	  var paddingHor = padding.left + padding.right;
	  var paddingVer = padding.top + padding.bottom;

	  var borderHor = border.left + border.right;
	  var borderVer = border.top + border.bottom;

	  var scale = rect.width / (clientWidth + borderHor);

	  var unscaledW = clientWidth - paddingHor;
	  var unscaledH = clientHeight - paddingVer;

	  var scaledW = rect.width - (paddingHor + borderHor) * scale;
	  var scaledH = rect.height - (paddingVer + borderVer) * scale;

	  var left = rect.left + padding.left + border.left;
	  var top = rect.top + padding.top + border.top;

	  return this.containerBB = [left, top, unscaledW, unscaledH, scale];
	};

	BRp.invalidateContainerClientCoordsCache = function () {
	  this.containerBB = null;
	};

	BRp.findNearestElement = function (x, y, interactiveElementsOnly, isTouch) {
	  return this.findNearestElements(x, y, interactiveElementsOnly, isTouch)[0];
	};

	BRp.findNearestElements = function (x, y, interactiveElementsOnly, isTouch) {
	  var self = this;
	  var r = this;
	  var eles = r.getCachedZSortedEles();
	  var near = []; // 1 node max, 1 edge max
	  var zoom = r.cy.zoom();
	  var hasCompounds = r.cy.hasCompoundNodes();
	  var edgeThreshold = (isTouch ? 24 : 8) / zoom;
	  var nodeThreshold = (isTouch ? 8 : 2) / zoom;
	  var labelThreshold = (isTouch ? 8 : 2) / zoom;
	  var minSqDist = Infinity;
	  var nearEdge;
	  var nearNode;

	  if (interactiveElementsOnly) {
	    eles = eles.interactive;
	  }

	  function addEle(ele, sqDist) {
	    if (ele.isNode()) {
	      if (nearNode) {
	        return; // can't replace node
	      } else {
	        nearNode = ele;
	        near.push(ele);
	      }
	    }

	    if (ele.isEdge() && (sqDist == null || sqDist < minSqDist)) {
	      if (nearEdge) {
	        // then replace existing edge
	        // can replace only if same z-index
	        if (nearEdge.pstyle('z-index').value === ele.pstyle('z-index').value) {
	          for (var i = 0; i < near.length; i++) {
	            if (near[i].isEdge()) {
	              near[i] = ele;
	              nearEdge = ele;
	              minSqDist = sqDist != null ? sqDist : minSqDist;
	              break;
	            }
	          }
	        }
	      } else {
	        near.push(ele);
	        nearEdge = ele;
	        minSqDist = sqDist != null ? sqDist : minSqDist;
	      }
	    }
	  }

	  function checkNode(node) {
	    var width = node.outerWidth() + 2 * nodeThreshold;
	    var height = node.outerHeight() + 2 * nodeThreshold;
	    var hw = width / 2;
	    var hh = height / 2;
	    var pos = node.position();

	    if (pos.x - hw <= x && x <= pos.x + hw // bb check x
	    && pos.y - hh <= y && y <= pos.y + hh // bb check y
	    ) {
	        var shape = r.nodeShapes[self.getNodeShape(node)];

	        if (shape.checkPoint(x, y, 0, width, height, pos.x, pos.y)) {
	          addEle(node, 0);
	          return true;
	        }
	      }
	  }

	  function checkEdge(edge) {
	    var _p = edge._private;

	    var rs = _p.rscratch;
	    var styleWidth = edge.pstyle('width').pfValue;
	    var scale = edge.pstyle('arrow-scale').value;
	    var width = styleWidth / 2 + edgeThreshold; // more like a distance radius from centre
	    var widthSq = width * width;
	    var width2 = width * 2;
	    var src = _p.source;
	    var tgt = _p.target;
	    var inEdgeBB = false;
	    var sqDist;

	    if (rs.edgeType === 'segments' || rs.edgeType === 'straight' || rs.edgeType === 'haystack') {
	      var pts = rs.allpts;

	      for (var i = 0; i + 3 < pts.length; i += 2) {
	        if ((inEdgeBB = math.inLineVicinity(x, y, pts[i], pts[i + 1], pts[i + 2], pts[i + 3], width2)) && widthSq > (sqDist = math.sqdistToFiniteLine(x, y, pts[i], pts[i + 1], pts[i + 2], pts[i + 3]))) {
	          addEle(edge, sqDist);
	          return true;
	        }
	      }
	    } else if (rs.edgeType === 'bezier' || rs.edgeType === 'multibezier' || rs.edgeType === 'self' || rs.edgeType === 'compound') {
	      var pts = rs.allpts;
	      for (var i = 0; i + 5 < rs.allpts.length; i += 4) {
	        if ((inEdgeBB = math.inBezierVicinity(x, y, pts[i], pts[i + 1], pts[i + 2], pts[i + 3], pts[i + 4], pts[i + 5], width2)) && widthSq > (sqDist = math.sqdistToQuadraticBezier(x, y, pts[i], pts[i + 1], pts[i + 2], pts[i + 3], pts[i + 4], pts[i + 5]))) {
	          addEle(edge, sqDist);
	          return true;
	        }
	      }
	    }

	    // if we're close to the edge but didn't hit it, maybe we hit its arrows

	    var src = src || _p.source;
	    var tgt = tgt || _p.target;

	    var arSize = self.getArrowWidth(styleWidth, scale);

	    var arrows = [{ name: 'source', x: rs.arrowStartX, y: rs.arrowStartY, angle: rs.srcArrowAngle }, { name: 'target', x: rs.arrowEndX, y: rs.arrowEndY, angle: rs.tgtArrowAngle }, { name: 'mid-source', x: rs.midX, y: rs.midY, angle: rs.midsrcArrowAngle }, { name: 'mid-target', x: rs.midX, y: rs.midY, angle: rs.midtgtArrowAngle }];

	    for (var i = 0; i < arrows.length; i++) {
	      var ar = arrows[i];
	      var shape = r.arrowShapes[edge.pstyle(ar.name + '-arrow-shape').value];
	      var edgeWidth = edge.pstyle('width').pfValue;
	      if (shape.roughCollide(x, y, arSize, ar.angle, { x: ar.x, y: ar.y }, edgeWidth, edgeThreshold) && shape.collide(x, y, arSize, ar.angle, { x: ar.x, y: ar.y }, edgeWidth, edgeThreshold)) {
	        addEle(edge);
	        return true;
	      }
	    }

	    // for compound graphs, hitting edge may actually want a connected node instead (b/c edge may have greater z-index precedence)
	    if (hasCompounds && near.length > 0) {
	      checkNode(src);
	      checkNode(tgt);
	    }
	  }

	  function preprop(obj, name, pre) {
	    return util.getPrefixedProperty(obj, name, pre);
	  }

	  function checkLabel(ele, prefix) {
	    var _p = ele._private;
	    var th = labelThreshold;

	    var prefixDash;
	    if (prefix) {
	      prefixDash = prefix + '-';
	    } else {
	      prefixDash = '';
	    }

	    var text = ele.pstyle(prefixDash + 'label').value;
	    var eventsEnabled = ele.pstyle('text-events').strValue === 'yes';

	    if (!eventsEnabled || !text) {
	      return;
	    }

	    var rstyle = _p.rstyle;
	    var bw = ele.pstyle('text-border-width').pfValue;
	    var pw = ele.pstyle('text-background-padding').pfValue;
	    var lw = preprop(rstyle, 'labelWidth', prefix) + bw + 2 * th + 2 * pw;
	    var lh = preprop(rstyle, 'labelHeight', prefix) + bw + 2 * th + 2 * pw;
	    var lx = preprop(rstyle, 'labelX', prefix);
	    var ly = preprop(rstyle, 'labelY', prefix);

	    var theta = preprop(_p.rscratch, 'labelAngle', prefix);

	    var lx1 = lx - lw / 2;
	    var lx2 = lx + lw / 2;
	    var ly1 = ly - lh / 2;
	    var ly2 = ly + lh / 2;

	    if (theta) {
	      var cos = Math.cos(theta);
	      var sin = Math.sin(theta);

	      var rotate = function rotate(x, y) {
	        x = x - lx;
	        y = y - ly;

	        return {
	          x: x * cos - y * sin + lx,
	          y: x * sin + y * cos + ly
	        };
	      };

	      var px1y1 = rotate(lx1, ly1);
	      var px1y2 = rotate(lx1, ly2);
	      var px2y1 = rotate(lx2, ly1);
	      var px2y2 = rotate(lx2, ly2);

	      var points = [px1y1.x, px1y1.y, px2y1.x, px2y1.y, px2y2.x, px2y2.y, px1y2.x, px1y2.y];

	      if (math.pointInsidePolygonPoints(x, y, points)) {
	        addEle(ele);
	        return true;
	      }
	    } else {
	      // do a cheaper bb check
	      var bb = {
	        w: lw,
	        h: lh,
	        x1: lx1,
	        x2: lx2,
	        y1: ly1,
	        y2: ly2
	      };

	      if (math.inBoundingBox(bb, x, y)) {
	        addEle(ele);
	        return true;
	      }
	    }
	  }

	  for (var i = eles.length - 1; i >= 0; i--) {
	    // reverse order for precedence
	    var ele = eles[i];

	    if (ele.isNode()) {
	      checkNode(ele) || checkLabel(ele);
	    } else {
	      // then edge
	      checkEdge(ele) || checkLabel(ele) || checkLabel(ele, 'source') || checkLabel(ele, 'target');
	    }
	  }

	  return near;
	};

	// 'Give me everything from this box'
	BRp.getAllInBox = function (x1, y1, x2, y2) {
	  var eles = this.getCachedZSortedEles().interactive;
	  var box = [];

	  var x1c = Math.min(x1, x2);
	  var x2c = Math.max(x1, x2);
	  var y1c = Math.min(y1, y2);
	  var y2c = Math.max(y1, y2);

	  x1 = x1c;
	  x2 = x2c;
	  y1 = y1c;
	  y2 = y2c;

	  var boxBb = math.makeBoundingBox({
	    x1: x1, y1: y1,
	    x2: x2, y2: y2
	  });

	  for (var e = 0; e < eles.length; e++) {
	    var ele = eles[e];

	    if (ele.isNode()) {
	      var node = ele;
	      var nodeBb = node.boundingBox({
	        includeNodes: true,
	        includeEdges: false,
	        includeLabels: false
	      });

	      if (math.boundingBoxesIntersect(boxBb, nodeBb) && !math.boundingBoxInBoundingBox(nodeBb, boxBb)) {
	        box.push(node);
	      }
	    } else {
	      var edge = ele;
	      var _p = edge._private;
	      var rs = _p.rscratch;

	      if (rs.startX != null && rs.startY != null && !math.inBoundingBox(boxBb, rs.startX, rs.startY)) {
	        continue;
	      }
	      if (rs.endX != null && rs.endY != null && !math.inBoundingBox(boxBb, rs.endX, rs.endY)) {
	        continue;
	      }

	      if (rs.edgeType === 'bezier' || rs.edgeType === 'multibezier' || rs.edgeType === 'self' || rs.edgeType === 'compound' || rs.edgeType === 'segments' || rs.edgeType === 'haystack') {

	        var pts = _p.rstyle.bezierPts || _p.rstyle.linePts || _p.rstyle.haystackPts;
	        var allInside = true;

	        for (var i = 0; i < pts.length; i++) {
	          if (!math.pointInBoundingBox(boxBb, pts[i])) {
	            allInside = false;
	            break;
	          }
	        }

	        if (allInside) {
	          box.push(edge);
	        }
	      } else if (rs.edgeType === 'haystack' || rs.edgeType === 'straight') {
	        box.push(edge);
	      }
	    }
	  }

	  return box;
	};

	module.exports = BRp;

	/***/ }),
	/* 111 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var math = __webpack_require__(2);

	var BRp = {};

	BRp.calculateArrowAngles = function (edge) {
	  var rs = edge._private.rscratch;
	  var isHaystack = rs.edgeType === 'haystack';
	  var isBezier = rs.edgeType === 'bezier';
	  var isMultibezier = rs.edgeType === 'multibezier';
	  var isSegments = rs.edgeType === 'segments';
	  var isCompound = rs.edgeType === 'compound';
	  var isSelf = rs.edgeType === 'self';

	  // Displacement gives direction for arrowhead orientation
	  var dispX, dispY;
	  var startX, startY, endX, endY, midX, midY;

	  if (isHaystack) {
	    startX = rs.haystackPts[0];
	    startY = rs.haystackPts[1];
	    endX = rs.haystackPts[2];
	    endY = rs.haystackPts[3];
	  } else {
	    startX = rs.arrowStartX;
	    startY = rs.arrowStartY;
	    endX = rs.arrowEndX;
	    endY = rs.arrowEndY;
	  }

	  midX = rs.midX;
	  midY = rs.midY;

	  // source
	  //

	  if (isSegments) {
	    dispX = startX - rs.segpts[0];
	    dispY = startY - rs.segpts[1];
	  } else if (isMultibezier || isCompound || isSelf || isBezier) {
	    var pts = rs.allpts;
	    var bX = math.qbezierAt(pts[0], pts[2], pts[4], 0.1);
	    var bY = math.qbezierAt(pts[1], pts[3], pts[5], 0.1);

	    dispX = startX - bX;
	    dispY = startY - bY;
	  } else {
	    dispX = startX - midX;
	    dispY = startY - midY;
	  }

	  rs.srcArrowAngle = math.getAngleFromDisp(dispX, dispY);

	  // mid target
	  //

	  var midX = rs.midX;
	  var midY = rs.midY;

	  if (isHaystack) {
	    midX = (startX + endX) / 2;
	    midY = (startY + endY) / 2;
	  }

	  dispX = endX - startX;
	  dispY = endY - startY;

	  if (isSegments) {
	    var pts = rs.allpts;

	    if (pts.length / 2 % 2 === 0) {
	      var i2 = pts.length / 2;
	      var i1 = i2 - 2;

	      dispX = pts[i2] - pts[i1];
	      dispY = pts[i2 + 1] - pts[i1 + 1];
	    } else {
	      var i2 = pts.length / 2 - 1;
	      var i1 = i2 - 2;
	      var i3 = i2 + 2;

	      dispX = pts[i2] - pts[i1];
	      dispY = pts[i2 + 1] - pts[i1 + 1];
	    }
	  } else if (isMultibezier || isCompound || isSelf) {
	    var pts = rs.allpts;
	    var cpts = rs.ctrlpts;
	    var bp0x, bp0y;
	    var bp1x, bp1y;

	    if (cpts.length / 2 % 2 === 0) {
	      var p0 = pts.length / 2 - 1; // startpt
	      var ic = p0 + 2;
	      var p1 = ic + 2;

	      bp0x = math.qbezierAt(pts[p0], pts[ic], pts[p1], 0.0);
	      bp0y = math.qbezierAt(pts[p0 + 1], pts[ic + 1], pts[p1 + 1], 0.0);

	      bp1x = math.qbezierAt(pts[p0], pts[ic], pts[p1], 0.0001);
	      bp1y = math.qbezierAt(pts[p0 + 1], pts[ic + 1], pts[p1 + 1], 0.0001);
	    } else {
	      var ic = pts.length / 2 - 1; // ctrpt
	      var p0 = ic - 2; // startpt
	      var p1 = ic + 2; // endpt

	      bp0x = math.qbezierAt(pts[p0], pts[ic], pts[p1], 0.4999);
	      bp0y = math.qbezierAt(pts[p0 + 1], pts[ic + 1], pts[p1 + 1], 0.4999);

	      bp1x = math.qbezierAt(pts[p0], pts[ic], pts[p1], 0.5);
	      bp1y = math.qbezierAt(pts[p0 + 1], pts[ic + 1], pts[p1 + 1], 0.5);
	    }

	    dispX = bp1x - bp0x;
	    dispY = bp1y - bp0y;
	  }

	  rs.midtgtArrowAngle = math.getAngleFromDisp(dispX, dispY);

	  rs.midDispX = dispX;
	  rs.midDispY = dispY;

	  // mid source
	  //

	  dispX *= -1;
	  dispY *= -1;

	  if (isSegments) {
	    var pts = rs.allpts;

	    if (pts.length / 2 % 2 === 0) {
	      // already ok
	    } else {
	      var i2 = pts.length / 2 - 1;
	      var i3 = i2 + 2;

	      dispX = -(pts[i3] - pts[i2]);
	      dispY = -(pts[i3 + 1] - pts[i2 + 1]);
	    }
	  }

	  rs.midsrcArrowAngle = math.getAngleFromDisp(dispX, dispY);

	  // target
	  //

	  if (isSegments) {
	    dispX = endX - rs.segpts[rs.segpts.length - 2];
	    dispY = endY - rs.segpts[rs.segpts.length - 1];
	  } else if (isMultibezier || isCompound || isSelf || isBezier) {
	    var pts = rs.allpts;
	    var l = pts.length;
	    var bX = math.qbezierAt(pts[l - 6], pts[l - 4], pts[l - 2], 0.9);
	    var bY = math.qbezierAt(pts[l - 5], pts[l - 3], pts[l - 1], 0.9);

	    dispX = endX - bX;
	    dispY = endY - bY;
	  } else {
	    dispX = endX - midX;
	    dispY = endY - midY;
	  }

	  rs.tgtArrowAngle = math.getAngleFromDisp(dispX, dispY);
	};

	BRp.getArrowWidth = BRp.getArrowHeight = function (edgeWidth, scale) {
	  var cache = this.arrowWidthCache = this.arrowWidthCache || {};

	  var cachedVal = cache[edgeWidth + ', ' + scale];
	  if (cachedVal) {
	    return cachedVal;
	  }

	  cachedVal = Math.max(Math.pow(edgeWidth * 13.37, 0.9), 29) * scale;
	  cache[edgeWidth + ', ' + scale] = cachedVal;

	  return cachedVal;
	};

	module.exports = BRp;

	/***/ }),
	/* 112 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var math = __webpack_require__(2);
	var is = __webpack_require__(0);

	var BRp = {};

	BRp.findEdgeControlPoints = function (edges) {
	  if (!edges || edges.length === 0) {
	    return;
	  }

	  var r = this;
	  var cy = r.cy;
	  var hasCompounds = cy.hasCompoundNodes();
	  var hashTable = {};
	  var pairIds = [];
	  var haystackEdges = [];

	  // create a table of edge (src, tgt) => list of edges between them
	  var pairId;
	  for (var i = 0; i < edges.length; i++) {
	    var edge = edges[i];
	    var _p = edge._private;
	    var data = _p.data;
	    var curveStyle = edge.pstyle('curve-style').value;
	    var edgeIsUnbundled = curveStyle === 'unbundled-bezier' || curveStyle === 'segments';
	    var edgeIsBezier = curveStyle === 'unbundled-bezier' || curveStyle === 'bezier';

	    // ignore edges who are not to be displayed
	    // they shouldn't take up space
	    if (edge.pstyle('display').value === 'none') {
	      continue;
	    }

	    if (curveStyle === 'haystack') {
	      haystackEdges.push(edge);
	      continue;
	    }

	    var srcId = data.source;
	    var tgtId = data.target;

	    pairId = srcId > tgtId ? tgtId + '$-$' + srcId : srcId + '$-$' + tgtId;

	    if (edgeIsUnbundled) {
	      pairId = 'unbundled' + '$-$' + data.id;
	    }

	    var tableEntry = hashTable[pairId];

	    if (tableEntry == null) {
	      tableEntry = hashTable[pairId] = [];
	      pairIds.push(pairId);
	    }

	    tableEntry.push(edge);

	    if (edgeIsUnbundled) {
	      tableEntry.hasUnbundled = true;
	    }

	    if (edgeIsBezier) {
	      tableEntry.hasBezier = true;
	    }
	  }

	  var src, tgt, srcPos, tgtPos, srcW, srcH, tgtW, tgtH, srcShape, tgtShape;
	  var vectorNormInverse;
	  var badBezier;

	  // for each pair (src, tgt), create the ctrl pts
	  // Nested for loop is OK; total number of iterations for both loops = edgeCount
	  for (var p = 0; p < pairIds.length; p++) {
	    pairId = pairIds[p];
	    var pairEdges = hashTable[pairId];

	    // for each pair id, the edges should be sorted by index
	    pairEdges.sort(function (edge1, edge2) {
	      return edge1.poolIndex() - edge2.poolIndex();
	    });

	    src = pairEdges[0]._private.source;
	    tgt = pairEdges[0]._private.target;

	    // make sure src/tgt distinction is consistent for bundled edges
	    if (!pairEdges.hasUnbundled && src.id() > tgt.id()) {
	      var temp = src;
	      src = tgt;
	      tgt = temp;
	    }

	    srcPos = src.position();
	    tgtPos = tgt.position();

	    srcW = src.outerWidth();
	    srcH = src.outerHeight();

	    tgtW = tgt.outerWidth();
	    tgtH = tgt.outerHeight();

	    srcShape = r.nodeShapes[this.getNodeShape(src)];
	    tgtShape = r.nodeShapes[this.getNodeShape(tgt)];

	    badBezier = false;

	    var edge;
	    var edge_p;
	    var rs;

	    var dirCounts = {
	      'north': 0,
	      'west': 0,
	      'south': 0,
	      'east': 0,
	      'northwest': 0,
	      'southwest': 0,
	      'northeast': 0,
	      'southeast': 0
	    };

	    var srcX2 = srcPos.x;
	    var srcY2 = srcPos.y;
	    var srcW2 = srcW;
	    var srcH2 = srcH;

	    var tgtX2 = tgtPos.x;
	    var tgtY2 = tgtPos.y;
	    var tgtW2 = tgtW;
	    var tgtH2 = tgtH;

	    var numEdges2 = pairEdges.length;

	    for (var i = 0; i < pairEdges.length; i++) {
	      edge = pairEdges[i];
	      edge_p = edge._private;
	      rs = edge_p.rscratch;

	      var edgeIndex1 = rs.lastEdgeIndex;
	      var edgeIndex2 = i;

	      var numEdges1 = rs.lastNumEdges;

	      var curveStyle = edge.pstyle('curve-style').value;

	      var edgeIsUnbundled = curveStyle === 'unbundled-bezier' || curveStyle === 'segments';

	      // whether the normalised pair order is the reverse of the edge's src-tgt order
	      var edgeIsSwapped = src.id() !== edge.source().id();

	      var ctrlptDists = edge.pstyle('control-point-distances');
	      var loopDir = edge.pstyle('loop-direction').pfValue;
	      var loopSwp = edge.pstyle('loop-sweep').pfValue;
	      var ctrlptWs = edge.pstyle('control-point-weights');
	      var bezierN = ctrlptDists && ctrlptWs ? Math.min(ctrlptDists.value.length, ctrlptWs.value.length) : 1;
	      var stepSize = edge.pstyle('control-point-step-size').pfValue;
	      var ctrlptDist = ctrlptDists ? ctrlptDists.pfValue[0] : undefined;
	      var ctrlptWeight = ctrlptWs.value[0];
	      var edgeDistances = edge.pstyle('edge-distances').value;
	      var segmentWs = edge.pstyle('segment-weights');
	      var segmentDs = edge.pstyle('segment-distances');
	      var segmentsN = Math.min(segmentWs.pfValue.length, segmentDs.pfValue.length);
	      var srcEndpt = edge.pstyle('source-endpoint').value;
	      var tgtEndpt = edge.pstyle('target-endpoint').value;
	      var srcArrShape = edge.pstyle('source-arrow-shape').value;
	      var tgtArrShape = edge.pstyle('target-arrow-shape').value;
	      var arrowScale = edge.pstyle('arrow-scale').value;
	      var lineWidth = edge.pstyle('width').pfValue;

	      var srcX1 = rs.lastSrcCtlPtX;
	      var srcY1 = rs.lastSrcCtlPtY;
	      var srcW1 = rs.lastSrcCtlPtW;
	      var srcH1 = rs.lastSrcCtlPtH;

	      var tgtX1 = rs.lastTgtCtlPtX;
	      var tgtY1 = rs.lastTgtCtlPtY;
	      var tgtW1 = rs.lastTgtCtlPtW;
	      var tgtH1 = rs.lastTgtCtlPtH;

	      var curveStyle1 = rs.lastCurveStyle;
	      var curveStyle2 = curveStyle;

	      var ctrlptDists1 = rs.lastCtrlptDists;
	      var ctrlptDists2 = ctrlptDists ? ctrlptDists.strValue : null;

	      var ctrlptWs1 = rs.lastCtrlptWs;
	      var ctrlptWs2 = ctrlptWs.strValue;

	      var segmentWs1 = rs.lastSegmentWs;
	      var segmentWs2 = segmentWs.strValue;

	      var segmentDs1 = rs.lastSegmentDs;
	      var segmentDs2 = segmentDs.strValue;

	      var stepSize1 = rs.lastStepSize;
	      var stepSize2 = stepSize;

	      var loopDir1 = rs.lastLoopDir;
	      var loopDir2 = loopDir;

	      var loopSwp1 = rs.lastLoopSwp;
	      var loopSwp2 = loopSwp;

	      var edgeDistances1 = rs.lastEdgeDistances;
	      var edgeDistances2 = edgeDistances;

	      var srcEndpt1 = rs.lastSrcEndpt;
	      var srcEndpt2 = srcEndpt;

	      var tgtEndpt1 = rs.lastTgtEndpt;
	      var tgtEndpt2 = tgtEndpt;

	      var srcArr1 = rs.lastSrcArr;
	      var srcArr2 = srcArrShape;

	      var tgtArr1 = rs.lastTgtArr;
	      var tgtArr2 = tgtArrShape;

	      var lineW1 = rs.lastLineW;
	      var lineW2 = lineWidth;

	      var arrScl1 = rs.lastArrScl;
	      var arrScl2 = arrowScale;

	      if (badBezier) {
	        rs.badBezier = true;
	      } else {
	        rs.badBezier = false;
	      }

	      var ptCacheHit;

	      if (srcX1 === srcX2 && srcY1 === srcY2 && srcW1 === srcW2 && srcH1 === srcH2 && tgtX1 === tgtX2 && tgtY1 === tgtY2 && tgtW1 === tgtW2 && tgtH1 === tgtH2 && curveStyle1 === curveStyle2 && ctrlptDists1 === ctrlptDists2 && ctrlptWs1 === ctrlptWs2 && segmentWs1 === segmentWs2 && segmentDs1 === segmentDs2 && stepSize1 === stepSize2 && loopDir1 === loopDir2 && loopSwp1 === loopSwp2 && edgeDistances1 === edgeDistances2 && srcEndpt1 === srcEndpt2 && tgtEndpt1 === tgtEndpt2 && srcArr1 === srcArr2 && tgtArr1 === tgtArr2 && lineW1 === lineW2 && arrScl1 === arrScl2 && (edgeIndex1 === edgeIndex2 && numEdges1 === numEdges2 || edgeIsUnbundled)) {
	        ptCacheHit = true; // then the control points haven't changed and we can skip calculating them
	      } else {
	        ptCacheHit = false;

	        rs.lastSrcCtlPtX = srcX2;
	        rs.lastSrcCtlPtY = srcY2;
	        rs.lastSrcCtlPtW = srcW2;
	        rs.lastSrcCtlPtH = srcH2;
	        rs.lastTgtCtlPtX = tgtX2;
	        rs.lastTgtCtlPtY = tgtY2;
	        rs.lastTgtCtlPtW = tgtW2;
	        rs.lastTgtCtlPtH = tgtH2;
	        rs.lastEdgeIndex = edgeIndex2;
	        rs.lastNumEdges = numEdges2;
	        rs.lastCurveStyle = curveStyle2;
	        rs.lastCtrlptDists = ctrlptDists2;
	        rs.lastCtrlptWs = ctrlptWs2;
	        rs.lastSegmentDs = segmentDs2;
	        rs.lastSegmentWs = segmentWs2;
	        rs.lastStepSize = stepSize2;
	        rs.lastLoopDir = loopDir2;
	        rs.lastLoopSwp = loopSwp2;
	        rs.lastEdgeDistances = edgeDistances2;
	        rs.lastSrcEndpt = srcEndpt2;
	        rs.lastTgtEndpt = tgtEndpt2;
	        rs.lastSrcArr = srcArr2;
	        rs.lastTgtArr = tgtArr2;
	        rs.lastLineW = lineW2;
	        rs.lastArrScl = arrScl2;
	      }

	      if (!ptCacheHit) {

	        if (!pairEdges.calculatedIntersection && src !== tgt && (pairEdges.hasBezier || pairEdges.hasUnbundled)) {

	          pairEdges.calculatedIntersection = true;

	          // pt outside src shape to calc distance/displacement from src to tgt
	          var srcOutside = srcShape.intersectLine(srcPos.x, srcPos.y, srcW, srcH, tgtPos.x, tgtPos.y, 0);

	          pairEdges.srcIntn = srcOutside;

	          // pt outside tgt shape to calc distance/displacement from src to tgt
	          var tgtOutside = tgtShape.intersectLine(tgtPos.x, tgtPos.y, tgtW, tgtH, srcPos.x, srcPos.y, 0);

	          pairEdges.tgtIntn = tgtOutside;

	          var midptSrcPts = {
	            x1: srcOutside[0],
	            x2: tgtOutside[0],
	            y1: srcOutside[1],
	            y2: tgtOutside[1]
	          };

	          var posPts = {
	            x1: srcPos.x,
	            x2: tgtPos.x,
	            y1: srcPos.y,
	            y2: tgtPos.y
	          };

	          var dy = tgtOutside[1] - srcOutside[1];
	          var dx = tgtOutside[0] - srcOutside[0];
	          var l = Math.sqrt(dx * dx + dy * dy);

	          var vector = {
	            x: dx,
	            y: dy
	          };

	          var vectorNorm = {
	            x: vector.x / l,
	            y: vector.y / l
	          };
	          vectorNormInverse = {
	            x: -vectorNorm.y,
	            y: vectorNorm.x
	          };

	          // if node shapes overlap, then no ctrl pts to draw
	          if (tgtShape.checkPoint(srcOutside[0], srcOutside[1], 0, tgtW, tgtH, tgtPos.x, tgtPos.y) && srcShape.checkPoint(tgtOutside[0], tgtOutside[1], 0, srcW, srcH, srcPos.x, srcPos.y)) {
	            vectorNormInverse = {};
	            badBezier = true;
	          }
	        }

	        if (!edgeIsSwapped) {
	          rs.srcIntn = pairEdges.srcIntn;
	          rs.tgtIntn = pairEdges.tgtIntn;
	        } else {
	          // ensure that the per-edge cached value for intersections are correct for swapped bundled edges
	          rs.srcIntn = pairEdges.tgtIntn;
	          rs.tgtIntn = pairEdges.srcIntn;
	        }

	        if (src === tgt) {
	          // Self-edge

	          rs.edgeType = 'self';

	          var j = i;
	          var loopDist = stepSize;

	          if (edgeIsUnbundled) {
	            j = 0;
	            loopDist = ctrlptDist;
	          }

	          var loopAngle = loopDir - Math.PI / 2;
	          var outAngle = loopAngle - loopSwp / 2;
	          var inAngle = loopAngle + loopSwp / 2;

	          // increase by step size for overlapping loops, keyed on direction and sweep values
	          var dc = String(loopDir + '_' + loopSwp);
	          j = dirCounts[dc] === undefined ? dirCounts[dc] = 0 : ++dirCounts[dc];

	          rs.ctrlpts = [srcPos.x + Math.cos(outAngle) * 1.4 * loopDist * (j / 3 + 1), srcPos.y + Math.sin(outAngle) * 1.4 * loopDist * (j / 3 + 1), srcPos.x + Math.cos(inAngle) * 1.4 * loopDist * (j / 3 + 1), srcPos.y + Math.sin(inAngle) * 1.4 * loopDist * (j / 3 + 1)];
	        } else if (hasCompounds && (src.isParent() || src.isChild() || tgt.isParent() || tgt.isChild()) && (src.parents().anySame(tgt) || tgt.parents().anySame(src))) {
	          // Compound edge

	          rs.edgeType = 'compound';

	          // because the line approximation doesn't apply for compound beziers
	          // (loop/self edges are already elided b/c of cheap src==tgt check)
	          rs.badBezier = false;

	          var j = i;
	          var loopDist = stepSize;

	          if (edgeIsUnbundled) {
	            j = 0;
	            loopDist = ctrlptDist;
	          }

	          var loopW = 50;

	          var loopaPos = {
	            x: srcPos.x - srcW / 2,
	            y: srcPos.y - srcH / 2
	          };

	          var loopbPos = {
	            x: tgtPos.x - tgtW / 2,
	            y: tgtPos.y - tgtH / 2
	          };

	          var loopPos = {
	            x: Math.min(loopaPos.x, loopbPos.x),
	            y: Math.min(loopaPos.y, loopbPos.y)
	          };

	          // avoids cases with impossible beziers
	          var minCompoundStretch = 0.5;
	          var compoundStretchA = Math.max(minCompoundStretch, Math.log(srcW * 0.01));
	          var compoundStretchB = Math.max(minCompoundStretch, Math.log(tgtW * 0.01));

	          rs.ctrlpts = [loopPos.x, loopPos.y - (1 + Math.pow(loopW, 1.12) / 100) * loopDist * (j / 3 + 1) * compoundStretchA, loopPos.x - (1 + Math.pow(loopW, 1.12) / 100) * loopDist * (j / 3 + 1) * compoundStretchB, loopPos.y];
	        } else if (curveStyle === 'segments') {
	          // Segments (multiple straight lines)

	          rs.edgeType = 'segments';
	          rs.segpts = [];

	          for (var s = 0; s < segmentsN; s++) {
	            var w = segmentWs.pfValue[s];
	            var d = segmentDs.pfValue[s];

	            var w1 = 1 - w;
	            var w2 = w;

	            var midptPts = edgeDistances === 'node-position' ? posPts : midptSrcPts;

	            var adjustedMidpt = {
	              x: midptPts.x1 * w1 + midptPts.x2 * w2,
	              y: midptPts.y1 * w1 + midptPts.y2 * w2
	            };

	            rs.segpts.push(adjustedMidpt.x + vectorNormInverse.x * d, adjustedMidpt.y + vectorNormInverse.y * d);
	          }

	          // Straight edge
	        } else if (pairEdges.length % 2 === 1 && i === Math.floor(pairEdges.length / 2) && !edgeIsUnbundled) {

	          rs.edgeType = 'straight';
	        } else {
	          // (Multi)bezier

	          var multi = edgeIsUnbundled;

	          rs.edgeType = multi ? 'multibezier' : 'bezier';
	          rs.ctrlpts = [];

	          for (var b = 0; b < bezierN; b++) {
	            var normctrlptDist = (0.5 - pairEdges.length / 2 + i) * stepSize;
	            var manctrlptDist;
	            var sign = math.signum(normctrlptDist);

	            if (multi) {
	              ctrlptDist = ctrlptDists ? ctrlptDists.pfValue[b] : stepSize; // fall back on step size
	              ctrlptWeight = ctrlptWs.value[b];
	            }

	            if (edgeIsUnbundled) {
	              // multi or single unbundled
	              manctrlptDist = ctrlptDist;
	            } else {
	              manctrlptDist = ctrlptDist !== undefined ? sign * ctrlptDist : undefined;
	            }

	            var distanceFromMidpoint = manctrlptDist !== undefined ? manctrlptDist : normctrlptDist;

	            var w1 = 1 - ctrlptWeight;
	            var w2 = ctrlptWeight;

	            if (edgeIsSwapped) {
	              var temp = w1;
	              w1 = w2;
	              w2 = temp;
	            }

	            var midptPts = edgeDistances === 'node-position' ? posPts : midptSrcPts;

	            var adjustedMidpt = {
	              x: midptPts.x1 * w1 + midptPts.x2 * w2,
	              y: midptPts.y1 * w1 + midptPts.y2 * w2
	            };

	            rs.ctrlpts.push(adjustedMidpt.x + vectorNormInverse.x * distanceFromMidpoint, adjustedMidpt.y + vectorNormInverse.y * distanceFromMidpoint);
	          }
	        }

	        // find endpts for edge
	        this.findEndpoints(edge);

	        var badStart = !is.number(rs.startX) || !is.number(rs.startY);
	        var badAStart = !is.number(rs.arrowStartX) || !is.number(rs.arrowStartY);
	        var badEnd = !is.number(rs.endX) || !is.number(rs.endY);
	        var badAEnd = !is.number(rs.arrowEndX) || !is.number(rs.arrowEndY);

	        var minCpADistFactor = 3;
	        var arrowW = this.getArrowWidth(edge.pstyle('width').pfValue, edge.pstyle('arrow-scale').value) * this.arrowShapeWidth;
	        var minCpADist = minCpADistFactor * arrowW;

	        if (rs.edgeType === 'bezier') {
	          var startACpDist = math.dist({ x: rs.ctrlpts[0], y: rs.ctrlpts[1] }, { x: rs.startX, y: rs.startY });
	          var closeStartACp = startACpDist < minCpADist;
	          var endACpDist = math.dist({ x: rs.ctrlpts[0], y: rs.ctrlpts[1] }, { x: rs.endX, y: rs.endY });
	          var closeEndACp = endACpDist < minCpADist;

	          var overlapping = false;

	          if (badStart || badAStart || closeStartACp) {
	            overlapping = true;

	            // project control point along line from src centre to outside the src shape
	            // (otherwise intersection will yield nothing)
	            var cpD = { // delta
	              x: rs.ctrlpts[0] - srcPos.x,
	              y: rs.ctrlpts[1] - srcPos.y
	            };
	            var cpL = Math.sqrt(cpD.x * cpD.x + cpD.y * cpD.y); // length of line
	            var cpM = { // normalised delta
	              x: cpD.x / cpL,
	              y: cpD.y / cpL
	            };
	            var radius = Math.max(srcW, srcH);
	            var cpProj = { // *2 radius guarantees outside shape
	              x: rs.ctrlpts[0] + cpM.x * 2 * radius,
	              y: rs.ctrlpts[1] + cpM.y * 2 * radius
	            };

	            var srcCtrlPtIntn = srcShape.intersectLine(srcPos.x, srcPos.y, srcW, srcH, cpProj.x, cpProj.y, 0);

	            if (closeStartACp) {
	              rs.ctrlpts[0] = rs.ctrlpts[0] + cpM.x * (minCpADist - startACpDist);
	              rs.ctrlpts[1] = rs.ctrlpts[1] + cpM.y * (minCpADist - startACpDist);
	            } else {
	              rs.ctrlpts[0] = srcCtrlPtIntn[0] + cpM.x * minCpADist;
	              rs.ctrlpts[1] = srcCtrlPtIntn[1] + cpM.y * minCpADist;
	            }
	          }

	          if (badEnd || badAEnd || closeEndACp) {
	            overlapping = true;

	            // project control point along line from tgt centre to outside the tgt shape
	            // (otherwise intersection will yield nothing)
	            var cpD = { // delta
	              x: rs.ctrlpts[0] - tgtPos.x,
	              y: rs.ctrlpts[1] - tgtPos.y
	            };
	            var cpL = Math.sqrt(cpD.x * cpD.x + cpD.y * cpD.y); // length of line
	            var cpM = { // normalised delta
	              x: cpD.x / cpL,
	              y: cpD.y / cpL
	            };
	            var radius = Math.max(srcW, srcH);
	            var cpProj = { // *2 radius guarantees outside shape
	              x: rs.ctrlpts[0] + cpM.x * 2 * radius,
	              y: rs.ctrlpts[1] + cpM.y * 2 * radius
	            };

	            var tgtCtrlPtIntn = tgtShape.intersectLine(tgtPos.x, tgtPos.y, tgtW, tgtH, cpProj.x, cpProj.y, 0);

	            if (closeEndACp) {
	              rs.ctrlpts[0] = rs.ctrlpts[0] + cpM.x * (minCpADist - endACpDist);
	              rs.ctrlpts[1] = rs.ctrlpts[1] + cpM.y * (minCpADist - endACpDist);
	            } else {
	              rs.ctrlpts[0] = tgtCtrlPtIntn[0] + cpM.x * minCpADist;
	              rs.ctrlpts[1] = tgtCtrlPtIntn[1] + cpM.y * minCpADist;
	            }
	          }

	          if (overlapping) {
	            // recalc endpts
	            this.findEndpoints(edge);
	          }
	        }

	        if (rs.edgeType === 'multibezier' || rs.edgeType === 'bezier' || rs.edgeType === 'self' || rs.edgeType === 'compound') {
	          rs.allpts = [];

	          rs.allpts.push(rs.startX, rs.startY);

	          for (var b = 0; b + 1 < rs.ctrlpts.length; b += 2) {
	            // ctrl pt itself
	            rs.allpts.push(rs.ctrlpts[b], rs.ctrlpts[b + 1]);

	            // the midpt between ctrlpts as intermediate destination pts
	            if (b + 3 < rs.ctrlpts.length) {
	              rs.allpts.push((rs.ctrlpts[b] + rs.ctrlpts[b + 2]) / 2, (rs.ctrlpts[b + 1] + rs.ctrlpts[b + 3]) / 2);
	            }
	          }

	          rs.allpts.push(rs.endX, rs.endY);

	          var m, mt;
	          if (rs.ctrlpts.length / 2 % 2 === 0) {
	            m = rs.allpts.length / 2 - 1;

	            rs.midX = rs.allpts[m];
	            rs.midY = rs.allpts[m + 1];
	          } else {
	            m = rs.allpts.length / 2 - 3;
	            mt = 0.5;

	            rs.midX = math.qbezierAt(rs.allpts[m], rs.allpts[m + 2], rs.allpts[m + 4], mt);
	            rs.midY = math.qbezierAt(rs.allpts[m + 1], rs.allpts[m + 3], rs.allpts[m + 5], mt);
	          }
	        } else if (rs.edgeType === 'straight') {
	          // need to calc these after endpts
	          rs.allpts = [rs.startX, rs.startY, rs.endX, rs.endY];

	          // default midpt for labels etc
	          rs.midX = (rs.startX + rs.endX + rs.arrowStartX + rs.arrowEndX) / 4;
	          rs.midY = (rs.startY + rs.endY + rs.arrowStartY + rs.arrowEndY) / 4;
	        } else if (rs.edgeType === 'segments') {
	          rs.allpts = [];
	          rs.allpts.push(rs.startX, rs.startY);
	          rs.allpts.push.apply(rs.allpts, rs.segpts);
	          rs.allpts.push(rs.endX, rs.endY);

	          if (rs.segpts.length % 4 === 0) {
	            var i2 = rs.segpts.length / 2;
	            var i1 = i2 - 2;

	            rs.midX = (rs.segpts[i1] + rs.segpts[i2]) / 2;
	            rs.midY = (rs.segpts[i1 + 1] + rs.segpts[i2 + 1]) / 2;
	          } else {
	            var i1 = rs.segpts.length / 2 - 1;

	            rs.midX = rs.segpts[i1];
	            rs.midY = rs.segpts[i1 + 1];
	          }
	        }

	        this.storeEdgeProjections(edge);
	        this.calculateArrowAngles(edge);
	      } // if point cache miss

	      this.recalculateEdgeLabelProjections(edge);
	      this.calculateLabelAngles(edge);
	    } // for pair edges
	  } // for pair ids

	  for (var i = 0; i < haystackEdges.length; i++) {
	    var edge = haystackEdges[i];
	    var _p = edge._private;
	    var rscratch = _p.rscratch;
	    var rs = rscratch;

	    if (!rscratch.haystack) {
	      var angle = Math.random() * 2 * Math.PI;

	      rscratch.source = {
	        x: Math.cos(angle),
	        y: Math.sin(angle)
	      };

	      var angle = Math.random() * 2 * Math.PI;

	      rscratch.target = {
	        x: Math.cos(angle),
	        y: Math.sin(angle)
	      };
	    }

	    var src = _p.source;
	    var tgt = _p.target;
	    var srcPos = src.position();
	    var tgtPos = tgt.position();
	    var srcW = src.width();
	    var tgtW = tgt.width();
	    var srcH = src.height();
	    var tgtH = tgt.height();
	    var radius = edge.pstyle('haystack-radius').value;
	    var halfRadius = radius / 2; // b/c have to half width/height

	    rs.haystackPts = rs.allpts = [rs.source.x * srcW * halfRadius + srcPos.x, rs.source.y * srcH * halfRadius + srcPos.y, rs.target.x * tgtW * halfRadius + tgtPos.x, rs.target.y * tgtH * halfRadius + tgtPos.y];

	    rs.midX = (rs.allpts[0] + rs.allpts[2]) / 2;
	    rs.midY = (rs.allpts[1] + rs.allpts[3]) / 2;

	    // always override as haystack in case set to different type previously
	    rscratch.edgeType = rscratch.lastCurveStyle = 'haystack';
	    rscratch.haystack = true;

	    this.storeEdgeProjections(edge);
	    this.calculateArrowAngles(edge);
	    this.recalculateEdgeLabelProjections(edge);
	    this.calculateLabelAngles(edge);
	  }
	};

	function getPts(pts) {
	  var retPts = [];

	  if (pts == null) {
	    return;
	  }

	  for (var i = 0; i < pts.length; i += 2) {
	    var x = pts[i];
	    var y = pts[i + 1];

	    retPts.push({ x: x, y: y });
	  }

	  return retPts;
	}

	BRp.getSegmentPoints = function (edge) {
	  var rs = edge[0]._private.rscratch;
	  var type = rs.edgeType;

	  if (type === 'segments') {
	    return getPts(rs.segpts);
	  }
	};

	BRp.getControlPoints = function (edge) {
	  var rs = edge[0]._private.rscratch;
	  var type = rs.edgeType;

	  if (type === 'bezier' || type === 'multibezier' || type === 'self' || type === 'compound') {
	    return getPts(rs.ctrlpts);
	  }
	};

	BRp.getEdgeMidpoint = function (edge) {
	  var rs = edge[0]._private.rscratch;

	  return {
	    x: rs.midX,
	    y: rs.midY
	  };
	};

	module.exports = BRp;

	/***/ }),
	/* 113 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var math = __webpack_require__(2);
	var is = __webpack_require__(0);

	var BRp = {};

	BRp.manualEndptToPx = function (node, prop) {
	  var r = this;
	  var npos = node.position();
	  var w = node.outerWidth();
	  var h = node.outerHeight();

	  if (prop.value.length === 2) {
	    var p = [prop.pfValue[0], prop.pfValue[1]];

	    if (prop.units[0] === '%') {
	      p[0] = p[0] * w;
	    }

	    if (prop.units[1] === '%') {
	      p[1] = p[1] * h;
	    }

	    p[0] += npos.x;
	    p[1] += npos.y;

	    return p;
	  } else {
	    var angle = prop.pfValue[0];

	    angle = -Math.PI / 2 + angle; // start at 12 o'clock

	    var l = 2 * Math.max(w, h);

	    var _p = [npos.x + Math.cos(angle) * l, npos.y + Math.sin(angle) * l];

	    return r.nodeShapes[this.getNodeShape(node)].intersectLine(npos.x, npos.y, w, h, _p[0], _p[1], 0);
	  }
	};

	BRp.findEndpoints = function (edge) {
	  var r = this;
	  var intersect = void 0;

	  var source = edge.source()[0];
	  var target = edge.target()[0];

	  var srcPos = source.position();
	  var tgtPos = target.position();

	  var tgtArShape = edge.pstyle('target-arrow-shape').value;
	  var srcArShape = edge.pstyle('source-arrow-shape').value;

	  var tgtDist = edge.pstyle('target-distance-from-node').pfValue;
	  var srcDist = edge.pstyle('source-distance-from-node').pfValue;

	  var rs = edge._private.rscratch;

	  var et = rs.edgeType;
	  var self = et === 'self' || et === 'compound';
	  var bezier = et === 'bezier' || et === 'multibezier' || self;
	  var multi = et !== 'bezier';
	  var lines = et === 'straight' || et === 'segments';
	  var segments = et === 'segments';
	  var hasEndpts = bezier || multi || lines;
	  var srcManEndpt = edge.pstyle('source-endpoint');
	  var srcManEndptVal = self ? 'outside-to-node' : srcManEndpt.value;
	  var tgtManEndpt = edge.pstyle('target-endpoint');
	  var tgtManEndptVal = self ? 'outside-to-node' : tgtManEndpt.value;

	  rs.srcManEndpt = srcManEndpt;
	  rs.tgtManEndpt = tgtManEndpt;

	  var p1 = void 0; // last known point of edge on target side
	  var p2 = void 0; // last known point of edge on source side

	  var p1_i = void 0; // point to intersect with target shape
	  var p2_i = void 0; // point to intersect with source shape

	  if (bezier) {
	    var cpStart = [rs.ctrlpts[0], rs.ctrlpts[1]];
	    var cpEnd = multi ? [rs.ctrlpts[rs.ctrlpts.length - 2], rs.ctrlpts[rs.ctrlpts.length - 1]] : cpStart;

	    p1 = cpEnd;
	    p2 = cpStart;
	  } else if (lines) {
	    var srcArrowFromPt = !segments ? [tgtPos.x, tgtPos.y] : rs.segpts.slice(0, 2);
	    var tgtArrowFromPt = !segments ? [srcPos.x, srcPos.y] : rs.segpts.slice(rs.segpts.length - 2);

	    p1 = tgtArrowFromPt;
	    p2 = srcArrowFromPt;
	  }

	  if (tgtManEndptVal === 'inside-to-node') {
	    intersect = [tgtPos.x, tgtPos.y];
	  } else if (tgtManEndpt.units) {
	    intersect = this.manualEndptToPx(target, tgtManEndpt);
	  } else if (tgtManEndptVal === 'outside-to-line') {
	    intersect = rs.tgtIntn; // use cached value from ctrlpt calc
	  } else {
	    if (tgtManEndptVal === 'outside-to-node') {
	      p1_i = p1;
	    } else if (tgtManEndptVal === 'outside-to-line') {
	      p1_i = [srcPos.x, srcPos.y];
	    }

	    intersect = r.nodeShapes[this.getNodeShape(target)].intersectLine(tgtPos.x, tgtPos.y, target.outerWidth(), target.outerHeight(), p1_i[0], p1_i[1], 0);
	  }

	  var arrowEnd = math.shortenIntersection(intersect, p1, r.arrowShapes[tgtArShape].spacing(edge) + tgtDist);
	  var edgeEnd = math.shortenIntersection(intersect, p1, r.arrowShapes[tgtArShape].gap(edge) + tgtDist);

	  rs.endX = edgeEnd[0];
	  rs.endY = edgeEnd[1];

	  rs.arrowEndX = arrowEnd[0];
	  rs.arrowEndY = arrowEnd[1];

	  if (srcManEndptVal === 'inside-to-node') {
	    intersect = [srcPos.x, srcPos.y];
	  } else if (srcManEndpt.units) {
	    intersect = this.manualEndptToPx(source, srcManEndpt);
	  } else if (srcManEndptVal === 'outside-to-line') {
	    intersect = rs.srcIntn; // use cached value from ctrlpt calc
	  } else {
	    if (srcManEndptVal === 'outside-to-node') {
	      p2_i = p2;
	    } else if (srcManEndptVal === 'outside-to-line') {
	      p2_i = [tgtPos.x, tgtPos.y];
	    }

	    intersect = r.nodeShapes[this.getNodeShape(source)].intersectLine(srcPos.x, srcPos.y, source.outerWidth(), source.outerHeight(), p2_i[0], p2_i[1], 0);
	  }

	  var arrowStart = math.shortenIntersection(intersect, p2, r.arrowShapes[srcArShape].spacing(edge) + srcDist);
	  var edgeStart = math.shortenIntersection(intersect, p2, r.arrowShapes[srcArShape].gap(edge) + srcDist);

	  rs.startX = edgeStart[0];
	  rs.startY = edgeStart[1];

	  rs.arrowStartX = arrowStart[0];
	  rs.arrowStartY = arrowStart[1];

	  if (hasEndpts) {
	    if (!is.number(rs.startX) || !is.number(rs.startY) || !is.number(rs.endX) || !is.number(rs.endY)) {
	      rs.badLine = true;
	    } else {
	      rs.badLine = false;
	    }
	  }
	};

	BRp.getSourceEndpoint = function (edge) {
	  var rs = edge[0]._private.rscratch;

	  switch (rs.edgeType) {
	    case 'haystack':
	      return {
	        x: rs.haystackPts[0],
	        y: rs.haystackPts[1]
	      };
	    default:
	      return {
	        x: rs.arrowStartX,
	        y: rs.arrowStartY
	      };
	  }
	};

	BRp.getTargetEndpoint = function (edge) {
	  var rs = edge[0]._private.rscratch;

	  switch (rs.edgeType) {
	    case 'haystack':
	      return {
	        x: rs.haystackPts[2],
	        y: rs.haystackPts[3]
	      };
	    default:
	      return {
	        x: rs.arrowEndX,
	        y: rs.arrowEndY
	      };
	  }
	};

	module.exports = BRp;

	/***/ }),
	/* 114 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var math = __webpack_require__(2);

	var BRp = {};

	function pushBezierPts(r, edge, pts) {
	  var qbezierAt = function qbezierAt(p1, p2, p3, t) {
	    return math.qbezierAt(p1, p2, p3, t);
	  };
	  var _p = edge._private;
	  var bpts = _p.rstyle.bezierPts;

	  for (var i = 0; i < r.bezierProjPcts.length; i++) {
	    var p = r.bezierProjPcts[i];

	    bpts.push({
	      x: qbezierAt(pts[0], pts[2], pts[4], p),
	      y: qbezierAt(pts[1], pts[3], pts[5], p)
	    });
	  }
	}

	BRp.storeEdgeProjections = function (edge) {
	  var _p = edge._private;
	  var rs = _p.rscratch;
	  var et = rs.edgeType;

	  // clear the cached points state
	  _p.rstyle.bezierPts = null;
	  _p.rstyle.linePts = null;
	  _p.rstyle.haystackPts = null;

	  if (et === 'multibezier' || et === 'bezier' || et === 'self' || et === 'compound') {
	    var bpts = _p.rstyle.bezierPts = []; // jshint ignore:line

	    for (var i = 0; i + 5 < rs.allpts.length; i += 4) {
	      pushBezierPts(this, edge, rs.allpts.slice(i, i + 6));
	    }
	  } else if (et === 'segments') {
	    var lpts = _p.rstyle.linePts = [];

	    for (var i = 0; i + 1 < rs.allpts.length; i += 2) {
	      lpts.push({
	        x: rs.allpts[i],
	        y: rs.allpts[i + 1]
	      });
	    }
	  } else if (et === 'haystack') {
	    var hpts = rs.haystackPts;

	    _p.rstyle.haystackPts = [{ x: hpts[0], y: hpts[1] }, { x: hpts[2], y: hpts[3] }];
	  }

	  _p.rstyle.arrowWidth = this.getArrowWidth(edge.pstyle('width').pfValue, edge.pstyle('arrow-scale').value) * this.arrowShapeWidth;
	};

	BRp.recalculateEdgeProjections = function (edges) {
	  this.findEdgeControlPoints(edges);
	};

	module.exports = BRp;

	/***/ }),
	/* 115 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var math = __webpack_require__(2);
	var is = __webpack_require__(0);
	var util = __webpack_require__(1);

	var BRp = {};

	BRp.recalculateNodeLabelProjection = function (node) {
	  var content = node.pstyle('label').strValue;

	  if (is.emptyString(content)) {
	    return;
	  }

	  var textX, textY;
	  var _p = node._private;
	  var nodeWidth = node.width();
	  var nodeHeight = node.height();
	  var padding = node.padding();
	  var nodePos = node.position();
	  var textHalign = node.pstyle('text-halign').strValue;
	  var textValign = node.pstyle('text-valign').strValue;
	  var rs = _p.rscratch;
	  var rstyle = _p.rstyle;

	  switch (textHalign) {
	    case 'left':
	      textX = nodePos.x - nodeWidth / 2 - padding;
	      break;

	    case 'right':
	      textX = nodePos.x + nodeWidth / 2 + padding;
	      break;

	    default:
	      // e.g. center
	      textX = nodePos.x;
	  }

	  switch (textValign) {
	    case 'top':
	      textY = nodePos.y - nodeHeight / 2 - padding;
	      break;

	    case 'bottom':
	      textY = nodePos.y + nodeHeight / 2 + padding;
	      break;

	    default:
	      // e.g. middle
	      textY = nodePos.y;
	  }

	  rs.labelX = textX;
	  rs.labelY = textY;
	  rstyle.labelX = textX;
	  rstyle.labelY = textY;

	  this.applyLabelDimensions(node);
	};

	BRp.recalculateEdgeLabelProjections = function (edge) {
	  var p;
	  var _p = edge._private;
	  var rs = _p.rscratch;
	  var r = this;
	  var content = {
	    mid: edge.pstyle('label').strValue,
	    source: edge.pstyle('source-label').strValue,
	    target: edge.pstyle('target-label').strValue
	  };

	  if (content.mid || content.source || content.target) {
	    // then we have to calculate...
	  } else {
	      return; // no labels => no calcs
	    }

	  // add center point to style so bounding box calculations can use it
	  //
	  p = {
	    x: rs.midX,
	    y: rs.midY
	  };

	  var setRs = function setRs(propName, prefix, value) {
	    util.setPrefixedProperty(_p.rscratch, propName, prefix, value);
	    util.setPrefixedProperty(_p.rstyle, propName, prefix, value);
	  };

	  setRs('labelX', null, p.x);
	  setRs('labelY', null, p.y);

	  var createControlPointInfo = function createControlPointInfo() {
	    if (createControlPointInfo.cache) {
	      return createControlPointInfo.cache;
	    } // use cache so only 1x per edge

	    var ctrlpts = [];

	    // store each ctrlpt info init
	    for (var i = 0; i + 5 < rs.allpts.length; i += 4) {
	      var p0 = { x: rs.allpts[i], y: rs.allpts[i + 1] };
	      var p1 = { x: rs.allpts[i + 2], y: rs.allpts[i + 3] }; // ctrlpt
	      var p2 = { x: rs.allpts[i + 4], y: rs.allpts[i + 5] };

	      ctrlpts.push({
	        p0: p0,
	        p1: p1,
	        p2: p2,
	        startDist: 0,
	        length: 0,
	        segments: []
	      });
	    }

	    var bpts = _p.rstyle.bezierPts;
	    var nProjs = r.bezierProjPcts.length;

	    function addSegment(cp, p0, p1, t0, t1) {
	      var length = math.dist(p0, p1);
	      var prevSegment = cp.segments[cp.segments.length - 1];
	      var segment = {
	        p0: p0,
	        p1: p1,
	        t0: t0,
	        t1: t1,
	        startDist: prevSegment ? prevSegment.startDist + prevSegment.length : 0,
	        length: length
	      };

	      cp.segments.push(segment);

	      cp.length += length;
	    }

	    // update each ctrlpt with segment info
	    for (var i = 0; i < ctrlpts.length; i++) {
	      var cp = ctrlpts[i];
	      var prevCp = ctrlpts[i - 1];

	      if (prevCp) {
	        cp.startDist = prevCp.startDist + prevCp.length;
	      }

	      addSegment(cp, cp.p0, bpts[i * nProjs], 0, r.bezierProjPcts[0]); // first

	      for (var j = 0; j < nProjs - 1; j++) {
	        addSegment(cp, bpts[i * nProjs + j], bpts[i * nProjs + j + 1], r.bezierProjPcts[j], r.bezierProjPcts[j + 1]);
	      }

	      addSegment(cp, bpts[i * nProjs + nProjs - 1], cp.p2, r.bezierProjPcts[nProjs - 1], 1); // last
	    }

	    return createControlPointInfo.cache = ctrlpts;
	  };

	  var calculateEndProjection = function calculateEndProjection(prefix) {
	    var angle;
	    var isSrc = prefix === 'source';

	    if (!content[prefix]) {
	      return;
	    }

	    var offset = edge.pstyle(prefix + '-text-offset').pfValue;

	    var lineAngle = function lineAngle(p0, p1) {
	      var dx = p1.x - p0.x;
	      var dy = p1.y - p0.y;

	      return Math.atan(dy / dx);
	    };

	    var bezierAngle = function bezierAngle(p0, p1, p2, t) {
	      var t0 = math.bound(0, t - 0.001, 1);
	      var t1 = math.bound(0, t + 0.001, 1);

	      var lp0 = math.qbezierPtAt(p0, p1, p2, t0);
	      var lp1 = math.qbezierPtAt(p0, p1, p2, t1);

	      return lineAngle(lp0, lp1);
	    };

	    switch (rs.edgeType) {
	      case 'self':
	      case 'compound':
	      case 'bezier':
	      case 'multibezier':
	        var cps = createControlPointInfo();
	        var selected;
	        var startDist = 0;
	        var totalDist = 0;

	        // find the segment we're on
	        for (var i = 0; i < cps.length; i++) {
	          var cp = cps[isSrc ? i : cps.length - 1 - i];

	          for (var j = 0; j < cp.segments.length; j++) {
	            var seg = cp.segments[isSrc ? j : cp.segments.length - 1 - j];
	            var lastSeg = i === cps.length - 1 && j === cp.segments.length - 1;

	            startDist = totalDist;
	            totalDist += seg.length;

	            if (totalDist >= offset || lastSeg) {
	              selected = { cp: cp, segment: seg };
	              break;
	            }
	          }

	          if (selected) {
	            break;
	          }
	        }

	        var cp = selected.cp;
	        var seg = selected.segment;
	        var tSegment = (offset - startDist) / seg.length;
	        var segDt = seg.t1 - seg.t0;
	        var t = isSrc ? seg.t0 + segDt * tSegment : seg.t1 - segDt * tSegment;

	        t = math.bound(0, t, 1);
	        p = math.qbezierPtAt(cp.p0, cp.p1, cp.p2, t);
	        angle = bezierAngle(cp.p0, cp.p1, cp.p2, t, p);

	        break;

	      case 'straight':
	      case 'segments':
	      case 'haystack':
	        var d = 0,
	            di,
	            d0;
	        var p0, p1;
	        var l = rs.allpts.length;

	        for (var i = 0; i + 3 < l; i += 2) {
	          if (isSrc) {
	            p0 = { x: rs.allpts[i], y: rs.allpts[i + 1] };
	            p1 = { x: rs.allpts[i + 2], y: rs.allpts[i + 3] };
	          } else {
	            p0 = { x: rs.allpts[l - 2 - i], y: rs.allpts[l - 1 - i] };
	            p1 = { x: rs.allpts[l - 4 - i], y: rs.allpts[l - 3 - i] };
	          }

	          di = math.dist(p0, p1);
	          d0 = d;
	          d += di;

	          if (d >= offset) {
	            break;
	          }
	        }

	        var pD = offset - d0;
	        var t = pD / di;

	        t = math.bound(0, t, 1);
	        p = math.lineAt(p0, p1, t);
	        angle = lineAngle(p0, p1);

	        break;
	    }

	    setRs('labelX', prefix, p.x);
	    setRs('labelY', prefix, p.y);
	    setRs('labelAutoAngle', prefix, angle);
	  };

	  calculateEndProjection('source');
	  calculateEndProjection('target');

	  this.applyLabelDimensions(edge);
	};

	BRp.applyLabelDimensions = function (ele) {
	  this.applyPrefixedLabelDimensions(ele);

	  if (ele.isEdge()) {
	    this.applyPrefixedLabelDimensions(ele, 'source');
	    this.applyPrefixedLabelDimensions(ele, 'target');
	  }
	};

	BRp.applyPrefixedLabelDimensions = function (ele, prefix) {
	  var _p = ele._private;

	  var text = this.getLabelText(ele, prefix);
	  var labelDims = this.calculateLabelDimensions(ele, text);

	  util.setPrefixedProperty(_p.rstyle, 'labelWidth', prefix, labelDims.width);
	  util.setPrefixedProperty(_p.rscratch, 'labelWidth', prefix, labelDims.width);

	  util.setPrefixedProperty(_p.rstyle, 'labelHeight', prefix, labelDims.height);
	  util.setPrefixedProperty(_p.rscratch, 'labelHeight', prefix, labelDims.height);
	};

	BRp.getLabelText = function (ele, prefix) {
	  var _p = ele._private;
	  var pfd = prefix ? prefix + '-' : '';
	  var text = ele.pstyle(pfd + 'label').strValue;
	  var textTransform = ele.pstyle('text-transform').value;
	  var rscratch = function rscratch(propName, value) {
	    if (value) {
	      util.setPrefixedProperty(_p.rscratch, propName, prefix, value);
	      return value;
	    } else {
	      return util.getPrefixedProperty(_p.rscratch, propName, prefix);
	    }
	  };

	  // for empty text, skip all processing
	  if (!text) {
	    return '';
	  }

	  if (textTransform == 'none') {
	    // passthrough
	  } else if (textTransform == 'uppercase') {
	    text = text.toUpperCase();
	  } else if (textTransform == 'lowercase') {
	    text = text.toLowerCase();
	  }

	  var wrapStyle = ele.pstyle('text-wrap').value;

	  if (wrapStyle === 'wrap') {
	    //console.log('wrap');

	    var labelKey = rscratch('labelKey');

	    // save recalc if the label is the same as before
	    if (labelKey && rscratch('labelWrapKey') === labelKey) {
	      // console.log('wrap cache hit');
	      return rscratch('labelWrapCachedText');
	    }
	    // console.log('wrap cache miss');

	    var lines = text.split('\n');
	    var maxW = ele.pstyle('text-max-width').pfValue;
	    var wrappedLines = [];

	    for (var l = 0; l < lines.length; l++) {
	      var line = lines[l];
	      var lineDims = this.calculateLabelDimensions(ele, line, 'line=' + line);
	      var lineW = lineDims.width;

	      if (lineW > maxW) {
	        // line is too long
	        var words = line.split(/\s+/); // NB: assume collapsed whitespace into single space
	        var subline = '';

	        for (var w = 0; w < words.length; w++) {
	          var word = words[w];
	          var testLine = subline.length === 0 ? word : subline + ' ' + word;
	          var testDims = this.calculateLabelDimensions(ele, testLine, 'testLine=' + testLine);
	          var testW = testDims.width;

	          if (testW <= maxW) {
	            // word fits on current line
	            subline += word + ' ';
	          } else {
	            // word starts new line
	            wrappedLines.push(subline);
	            subline = word + ' ';
	          }
	        }

	        // if there's remaining text, put it in a wrapped line
	        if (!subline.match(/^\s+$/)) {
	          wrappedLines.push(subline);
	        }
	      } else {
	        // line is already short enough
	        wrappedLines.push(line);
	      }
	    } // for

	    rscratch('labelWrapCachedLines', wrappedLines);
	    text = rscratch('labelWrapCachedText', wrappedLines.join('\n'));
	    rscratch('labelWrapKey', labelKey);

	    // console.log(text)
	  } else if (wrapStyle === 'ellipsis') {
	    var maxW = ele.pstyle('text-max-width').pfValue;
	    var ellipsized = '';
	    var ellipsis = '\u2026';
	    var incLastCh = false;

	    for (var i = 0; i < text.length; i++) {
	      var widthWithNextCh = this.calculateLabelDimensions(ele, ellipsized + text[i] + ellipsis).width;

	      if (widthWithNextCh > maxW) {
	        break;
	      }

	      ellipsized += text[i];

	      if (i === text.length - 1) {
	        incLastCh = true;
	      }
	    }

	    if (!incLastCh) {
	      ellipsized += ellipsis;
	    }

	    return ellipsized;
	  } // if ellipsize

	  return text;
	};

	BRp.calculateLabelDimensions = function (ele, text, extraKey) {
	  var r = this;

	  var cacheKey = ele._private.labelStyleKey + '$@$' + text;

	  if (extraKey) {
	    cacheKey += '$@$' + extraKey;
	  }

	  var cache = r.labelDimCache || (r.labelDimCache = {});

	  if (cache[cacheKey]) {
	    return cache[cacheKey];
	  }

	  var sizeMult = 1; // increase the scale to increase accuracy w.r.t. zoomed text
	  var fStyle = ele.pstyle('font-style').strValue;
	  var size = sizeMult * ele.pstyle('font-size').pfValue + 'px';
	  var family = ele.pstyle('font-family').strValue;
	  var weight = ele.pstyle('font-weight').strValue;

	  var div = this.labelCalcDiv;

	  if (!div) {
	    div = this.labelCalcDiv = document.createElement('div'); // eslint-disable-line no-undef
	    document.body.appendChild(div); // eslint-disable-line no-undef
	  }

	  var ds = div.style;

	  // from ele style
	  ds.fontFamily = family;
	  ds.fontStyle = fStyle;
	  ds.fontSize = size;
	  ds.fontWeight = weight;

	  // forced style
	  ds.position = 'absolute';
	  ds.left = '-9999px';
	  ds.top = '-9999px';
	  ds.zIndex = '-1';
	  ds.visibility = 'hidden';
	  ds.pointerEvents = 'none';
	  ds.padding = '0';
	  ds.lineHeight = '1';

	  if (ele.pstyle('text-wrap').value === 'wrap') {
	    ds.whiteSpace = 'pre'; // so newlines are taken into account
	  } else {
	    ds.whiteSpace = 'normal';
	  }

	  // put label content in div
	  div.textContent = text;

	  cache[cacheKey] = {
	    width: Math.ceil(div.clientWidth / sizeMult),
	    height: Math.ceil(div.clientHeight / sizeMult)
	  };

	  return cache[cacheKey];
	};

	BRp.calculateLabelAngles = function (ele) {
	  var _p = ele._private;
	  var rs = _p.rscratch;
	  var isEdge = ele.isEdge();
	  var rot = ele.pstyle('text-rotation');
	  var rotStr = rot.strValue;

	  if (rotStr === 'none') {
	    rs.labelAngle = rs.sourceLabelAngle = rs.targetLabelAngle = 0;
	  } else if (isEdge && rotStr === 'autorotate') {
	    rs.labelAngle = Math.atan(rs.midDispY / rs.midDispX);
	    rs.sourceLabelAngle = rs.sourceLabelAutoAngle;
	    rs.targetLabelAngle = rs.targetLabelAutoAngle;
	  } else if (rotStr === 'autorotate') {
	    rs.labelAngle = rs.sourceLabelAngle = rs.targetLabelAngle = 0;
	  } else {
	    rs.labelAngle = rs.sourceLabelAngle = rs.targetLabelAngle = rot.pfValue;
	  }
	};

	module.exports = BRp;

	/***/ }),
	/* 116 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var BRp = {};

	BRp.getNodeShape = function (node) {
	  var r = this;
	  var shape = node.pstyle('shape').value;

	  if (node.isParent()) {
	    if (shape === 'rectangle' || shape === 'roundrectangle' || shape === 'cutrectangle' || shape === 'barrel') {
	      return shape;
	    } else {
	      return 'rectangle';
	    }
	  }

	  if (shape === 'polygon') {
	    var points = node.pstyle('shape-polygon-points').value;

	    return r.nodeShapes.makePolygon(points).name;
	  }

	  return shape;
	};

	module.exports = BRp;

	/***/ }),
	/* 117 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var BRp = {};

	BRp.registerCalculationListeners = function () {
	  var cy = this.cy;
	  var elesToUpdate = cy.collection();
	  var r = this;

	  var enqueue = function enqueue(eles, e) {
	    var dirtyStyleCaches = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

	    elesToUpdate.merge(eles);

	    for (var i = 0; i < eles.length; i++) {
	      var ele = eles[i];
	      var _p = ele._private;
	      var rstyle = _p.rstyle;

	      if (dirtyStyleCaches) {
	        rstyle.clean = false;
	        _p.bbCache = null;
	      }

	      var evts = rstyle.dirtyEvents = rstyle.dirtyEvents || { length: 0 };

	      if (!evts[e.type]) {
	        evts[e.type] = true;
	        evts.length++;
	      }
	    }
	  };

	  r.binder(cy)
	  // nodes

	  .on('position.* style.* free.* bounds.*', 'node', function onDirtyModNode(e) {
	    var node = e.target;

	    enqueue(node, e);
	    enqueue(node.connectedEdges(), e);
	  }).on('add.*', 'node', function onDirtyAddNode(e) {
	    var ele = e.target;

	    enqueue(ele, e);
	  }).on('background.*', 'node', function onDirtyBgNode(e) {
	    var ele = e.target;

	    enqueue(ele, e, false);
	  })

	  // edges

	  .on('add.* style.*', 'edge', function onDirtyEdge(e) {
	    var edge = e.target;

	    enqueue(edge, e);
	    enqueue(edge.parallelEdges(), e);
	  }).on('remove.*', 'edge', function onDirtyRemoveEdge(e) {
	    var edge = e.target;
	    var pEdges = edge.parallelEdges();

	    for (var i = 0; i < pEdges.length; i++) {
	      var pEdge = pEdges[i];

	      if (!pEdge.removed()) {
	        enqueue(pEdge, e);
	      }
	    }
	  })

	  // manual dirtying

	  .on('dirty.*', 'node', function onDirtyEle(e) {
	    var ele = e.target;

	    enqueue(ele, e);
	  });

	  var updateEleCalcs = function updateEleCalcs(willDraw) {
	    if (willDraw) {
	      var fns = r.onUpdateEleCalcsFns;

	      if (fns) {
	        for (var i = 0; i < fns.length; i++) {
	          var fn = fns[i];

	          fn(willDraw, elesToUpdate);
	        }
	      }

	      r.recalculateRenderedStyle(elesToUpdate, false);

	      for (var i = 0; i < elesToUpdate.length; i++) {
	        elesToUpdate[i]._private.rstyle.dirtyEvents = null;
	      }

	      elesToUpdate = cy.collection();
	    }
	  };

	  r.beforeRender(updateEleCalcs, r.beforeRenderPriorities.eleCalcs);
	};

	BRp.onUpdateEleCalcs = function (fn) {
	  var fns = this.onUpdateEleCalcsFns = this.onUpdateEleCalcsFns || [];

	  fns.push(fn);
	};

	BRp.recalculateRenderedStyle = function (eles, useCache) {
	  var edges = [];
	  var nodes = [];

	  // the renderer can't be used for calcs when destroyed, e.g. ele.boundingBox()
	  if (this.destroyed) {
	    return;
	  }

	  // use cache by default for perf
	  if (useCache === undefined) {
	    useCache = true;
	  }

	  for (var i = 0; i < eles.length; i++) {
	    var ele = eles[i];
	    var _p = ele._private;
	    var rstyle = _p.rstyle;

	    // only update if dirty and in graph
	    if (useCache && rstyle.clean || ele.removed()) {
	      continue;
	    }

	    // only update if not display: none
	    if (ele.pstyle('display').value === 'none') {
	      continue;
	    }

	    if (_p.group === 'nodes') {
	      nodes.push(ele);
	    } else {
	      // edges
	      edges.push(ele);
	    }

	    rstyle.clean = true;
	    // rstyle.dirtyEvents = null;
	  }

	  // update node data from projections
	  for (var i = 0; i < nodes.length; i++) {
	    var ele = nodes[i];
	    var _p = ele._private;
	    var rstyle = _p.rstyle;
	    var pos = ele.position();

	    this.recalculateNodeLabelProjection(ele);

	    rstyle.nodeX = pos.x;
	    rstyle.nodeY = pos.y;
	    rstyle.nodeW = ele.pstyle('width').pfValue;
	    rstyle.nodeH = ele.pstyle('height').pfValue;
	  }

	  this.recalculateEdgeProjections(edges);

	  // update edge data from projections
	  for (var i = 0; i < edges.length; i++) {
	    var ele = edges[i];
	    var _p = ele._private;
	    var rstyle = _p.rstyle;
	    var rs = _p.rscratch;

	    this.recalculateEdgeLabelProjections(ele);

	    // update rstyle positions
	    rstyle.srcX = rs.arrowStartX;
	    rstyle.srcY = rs.arrowStartY;
	    rstyle.tgtX = rs.arrowEndX;
	    rstyle.tgtY = rs.arrowEndY;
	    rstyle.midX = rs.midX;
	    rstyle.midY = rs.midY;
	    rstyle.labelAngle = rs.labelAngle;
	    rstyle.sourceLabelAngle = rs.sourceLabelAngle;
	    rstyle.targetLabelAngle = rs.targetLabelAngle;
	  }
	};

	module.exports = BRp;

	/***/ }),
	/* 118 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var zIndexSort = __webpack_require__(17);

	var BRp = {};

	BRp.updateCachedGrabbedEles = function () {
	  var eles = this.cachedZSortedEles;

	  if (!eles) {
	    // just let this be recalculated on the next z sort tick
	    return;
	  }

	  eles.drag = [];
	  eles.nondrag = [];

	  var grabTargets = [];

	  for (var i = 0; i < eles.length; i++) {
	    var ele = eles[i];
	    var rs = ele._private.rscratch;

	    if (ele.grabbed() && !ele.isParent()) {
	      grabTargets.push(ele);
	    } else if (rs.inDragLayer) {
	      eles.drag.push(ele);
	    } else {
	      eles.nondrag.push(ele);
	    }
	  }

	  // put the grab target nodes last so it's on top of its neighbourhood
	  for (var i = 0; i < grabTargets.length; i++) {
	    var ele = grabTargets[i];

	    eles.drag.push(ele);
	  }
	};

	BRp.invalidateCachedZSortedEles = function () {
	  this.cachedZSortedEles = null;
	};

	BRp.getCachedZSortedEles = function (forceRecalc) {
	  if (forceRecalc || !this.cachedZSortedEles) {
	    //console.time('cachezorder')

	    var eles = this.cy.mutableElements().toArray();

	    eles.sort(zIndexSort);

	    eles.interactive = eles.filter(function (ele) {
	      return ele.interactive();
	    });

	    this.cachedZSortedEles = eles;

	    this.updateCachedGrabbedEles();
	  } else {
	    eles = this.cachedZSortedEles;
	  }

	  return eles;
	};

	module.exports = BRp;

	/***/ }),
	/* 119 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var BRp = {};

	BRp.getCachedImage = function (url, crossOrigin, onLoad) {
	  var r = this;
	  var imageCache = r.imageCache = r.imageCache || {};
	  var cache = imageCache[url];

	  if (cache) {
	    if (!cache.image.complete) {
	      cache.image.addEventListener('load', onLoad);
	    }

	    return cache.image;
	  } else {
	    cache = imageCache[url] = imageCache[url] || {};

	    var image = cache.image = new Image(); // eslint-disable-line no-undef

	    image.addEventListener('load', onLoad);
	    image.addEventListener('error', function () {
	      image.error = true;
	    });

	    // #1582 safari doesn't load data uris with crossOrigin properly
	    // https://bugs.webkit.org/show_bug.cgi?id=123978
	    var dataUriPrefix = 'data:';
	    var isDataUri = url.substring(0, dataUriPrefix.length).toLowerCase() === dataUriPrefix;
	    if (!isDataUri) {
	      image.crossOrigin = crossOrigin; // prevent tainted canvas
	    }

	    image.src = url;

	    return image;
	  }
	};

	module.exports = BRp;

	/***/ }),
	/* 120 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var util = __webpack_require__(1);
	var math = __webpack_require__(2);
	var Event = __webpack_require__(16);

	var BRp = {};

	BRp.registerBinding = function (target, event, handler, useCapture) {
	  var args = Array.prototype.slice.apply(arguments, [1]); // copy
	  var b = this.binder(target);

	  return b.on.apply(b, args);
	};

	BRp.binder = function (tgt) {
	  var r = this;

	  var tgtIsDom = tgt === window || tgt === document || tgt === document.body || is.domElement(tgt);

	  if (r.supportsPassiveEvents == null) {

	    // from https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection
	    var supportsPassive = false;
	    try {
	      var opts = Object.defineProperty({}, 'passive', {
	        get: function get() {
	          supportsPassive = true;
	        }
	      });

	      window.addEventListener('test', null, opts);
	    } catch (err) {}

	    r.supportsPassiveEvents = supportsPassive;
	  }

	  var on = function on(event, handler, useCapture) {
	    var args = Array.prototype.slice.call(arguments);

	    if (tgtIsDom && r.supportsPassiveEvents) {
	      // replace useCapture w/ opts obj
	      args[2] = {
	        capture: useCapture != null ? useCapture : false,
	        passive: false,
	        once: false
	      };
	    }

	    r.bindings.push({
	      target: tgt,
	      args: args
	    });

	    (tgt.addEventListener || tgt.on).apply(tgt, args);

	    return this;
	  };

	  return {
	    on: on,
	    addEventListener: on,
	    addListener: on,
	    bind: on
	  };
	};

	BRp.nodeIsDraggable = function (node) {
	  return node && node.isNode() && !node.locked() && node.grabbable();
	};

	BRp.nodeIsGrabbable = function (node) {
	  return this.nodeIsDraggable(node) && node.interactive();
	};

	BRp.load = function () {
	  var r = this;

	  var triggerEvents = function triggerEvents(target, names, e, props) {
	    if (target == null) {
	      target = r.cy;
	    }

	    for (var i = 0; i < names.length; i++) {
	      var name = names[i];

	      target.emit(util.extend({ originalEvent: e, type: name }, props));
	    }
	  };

	  var isMultSelKeyDown = function isMultSelKeyDown(e) {
	    return e.shiftKey || e.metaKey || e.ctrlKey; // maybe e.altKey
	  };

	  var allowPanningPassthrough = function allowPanningPassthrough(down, downs) {
	    var allowPassthrough = true;

	    if (r.cy.hasCompoundNodes() && down && down.isEdge()) {
	      // a compound node below the edge => no passthrough panning
	      for (var i = 0; downs && i < downs.length; i++) {
	        var down = downs[i];

	        if (down.isNode() && down.isParent()) {
	          allowPassthrough = false;
	          break;
	        }
	      }
	    } else {
	      allowPassthrough = true;
	    }

	    return allowPassthrough;
	  };

	  var getDragListIds = function getDragListIds(opts) {
	    var listHasId;

	    if (opts.addToList && r.cy.hasCompoundNodes()) {
	      // only needed for compound graphs
	      if (!opts.addToList.hasId) {
	        // build ids lookup if doesn't already exist
	        opts.addToList.hasId = {};

	        for (var i = 0; i < opts.addToList.length; i++) {
	          var ele = opts.addToList[i];

	          opts.addToList.hasId[ele.id()] = true;
	        }
	      }

	      listHasId = opts.addToList.hasId;
	    }

	    return listHasId || {};
	  };

	  var setGrabbed = function setGrabbed(ele) {
	    ele[0]._private.grabbed = true;
	  };

	  var setFreed = function setFreed(ele) {
	    ele[0]._private.grabbed = false;
	  };

	  var setInDragLayer = function setInDragLayer(ele) {
	    ele[0]._private.rscratch.inDragLayer = true;
	  };

	  var setOutDragLayer = function setOutDragLayer(ele) {
	    ele[0]._private.rscratch.inDragLayer = false;
	  };

	  var setGrabTarget = function setGrabTarget(ele) {
	    ele[0]._private.rscratch.isGrabTarget = true;
	  };

	  var removeGrabTarget = function removeGrabTarget(ele) {
	    ele[0]._private.rscratch.isGrabTarget = false;
	  };

	  var addToDragList = function addToDragList(ele, opts) {
	    var listHasId = getDragListIds(opts);

	    if (!listHasId[ele.id()]) {
	      opts.addToList.push(ele);
	      listHasId[ele.id()] = true;

	      setGrabbed(ele);
	    }
	  };

	  // helper function to determine which child nodes and inner edges
	  // of a compound node to be dragged as well as the grabbed and selected nodes
	  var addDescendantsToDrag = function addDescendantsToDrag(node, opts) {
	    if (!node.cy().hasCompoundNodes()) {
	      return;
	    }

	    if (opts.inDragLayer == null && opts.addToList == null) {
	      return;
	    } // nothing to do

	    var innerNodes = node.descendants();

	    if (opts.inDragLayer) {
	      innerNodes.forEach(setInDragLayer);
	      innerNodes.connectedEdges().forEach(setInDragLayer);
	    }

	    if (opts.addToList) {
	      innerNodes.forEach(function (ele) {
	        addToDragList(ele, opts);
	      });
	    }
	  };

	  // adds the given nodes and its neighbourhood to the drag layer
	  var addNodesToDrag = function addNodesToDrag(nodes, opts) {
	    opts = opts || {};

	    var hasCompoundNodes = nodes.cy().hasCompoundNodes();

	    if (opts.inDragLayer) {
	      nodes.forEach(setInDragLayer);

	      nodes.neighborhood().stdFilter(function (ele) {
	        return !hasCompoundNodes || ele.isEdge();
	      }).forEach(setInDragLayer);
	    }

	    if (opts.addToList) {
	      nodes.forEach(function (ele) {
	        addToDragList(ele, opts);
	      });
	    }

	    addDescendantsToDrag(nodes, opts); // always add to drag

	    // also add nodes and edges related to the topmost ancestor
	    updateAncestorsInDragLayer(nodes, {
	      inDragLayer: opts.inDragLayer
	    });

	    r.updateCachedGrabbedEles();
	  };

	  var addNodeToDrag = addNodesToDrag;

	  var freeDraggedElements = function freeDraggedElements(grabbedEles) {
	    if (!grabbedEles) {
	      return;
	    }

	    grabbedEles.hasId = {}; // clear the id list

	    // just go over all elements rather than doing a bunch of (possibly expensive) traversals
	    r.getCachedZSortedEles().forEach(function (ele) {
	      setFreed(ele);
	      setOutDragLayer(ele);
	      removeGrabTarget(ele);
	    });

	    r.updateCachedGrabbedEles();
	  };

	  // helper function to determine which ancestor nodes and edges should go
	  // to the drag layer (or should be removed from drag layer).
	  var updateAncestorsInDragLayer = function updateAncestorsInDragLayer(node, opts) {

	    if (opts.inDragLayer == null && opts.addToList == null) {
	      return;
	    } // nothing to do

	    if (!node.cy().hasCompoundNodes()) {
	      return;
	    }

	    // find top-level parent
	    var parent = node.ancestors().orphans();

	    // no parent node: no nodes to add to the drag layer
	    if (parent.same(node)) {
	      return;
	    }

	    var nodes = parent.descendants().spawnSelf().merge(parent).unmerge(node).unmerge(node.descendants());

	    var edges = nodes.connectedEdges();

	    if (opts.inDragLayer) {
	      edges.forEach(setInDragLayer);
	      nodes.forEach(setInDragLayer);
	    }

	    if (opts.addToList) {
	      nodes.forEach(function (ele) {
	        addToDragList(ele, opts);
	      });
	    }
	  };

	  var haveMutationsApi = typeof MutationObserver !== 'undefined';

	  // watch for when the cy container is removed from the dom
	  if (haveMutationsApi) {
	    r.removeObserver = new MutationObserver(function (mutns) {
	      // eslint-disable-line no-undef
	      for (var i = 0; i < mutns.length; i++) {
	        var mutn = mutns[i];
	        var rNodes = mutn.removedNodes;

	        if (rNodes) {
	          for (var j = 0; j < rNodes.length; j++) {
	            var rNode = rNodes[j];

	            if (rNode === r.container) {
	              r.destroy();
	              break;
	            }
	          }
	        }
	      }
	    });

	    if (r.container.parentNode) {
	      r.removeObserver.observe(r.container.parentNode, { childList: true });
	    }
	  } else {
	    r.registerBinding(r.container, 'DOMNodeRemoved', function (e) {
	      r.destroy();
	    });
	  }

	  var onResize = util.debounce(function () {
	    r.cy.resize();
	  }, 100);

	  if (haveMutationsApi) {
	    r.styleObserver = new MutationObserver(onResize); // eslint-disable-line no-undef

	    r.styleObserver.observe(r.container, { attributes: true });
	  }

	  // auto resize
	  r.registerBinding(window, 'resize', onResize); // eslint-disable-line no-undef

	  var forEachUp = function forEachUp(domEle, fn) {
	    while (domEle != null) {
	      fn(domEle);

	      domEle = domEle.parentNode;
	    }
	  };

	  var invalidateCoords = function invalidateCoords() {
	    r.invalidateContainerClientCoordsCache();
	  };

	  forEachUp(r.container, function (domEle) {
	    r.registerBinding(domEle, 'transitionend', invalidateCoords);
	    r.registerBinding(domEle, 'animationend', invalidateCoords);
	    r.registerBinding(domEle, 'scroll', invalidateCoords);
	  });

	  // stop right click menu from appearing on cy
	  r.registerBinding(r.container, 'contextmenu', function (e) {
	    e.preventDefault();
	  });

	  var inBoxSelection = function inBoxSelection() {
	    return r.selection[4] !== 0;
	  };

	  var eventInContainer = function eventInContainer(e) {
	    // save cycles if mouse events aren't to be captured
	    var containerPageCoords = r.findContainerClientCoords();
	    var x = containerPageCoords[0];
	    var y = containerPageCoords[1];
	    var width = containerPageCoords[2];
	    var height = containerPageCoords[3];

	    var positions = e.touches ? e.touches : [e];
	    var atLeastOnePosInside = false;

	    for (var i = 0; i < positions.length; i++) {
	      var p = positions[i];

	      if (x <= p.clientX && p.clientX <= x + width && y <= p.clientY && p.clientY <= y + height) {
	        atLeastOnePosInside = true;
	        break;
	      }
	    }

	    if (!atLeastOnePosInside) {
	      return false;
	    }

	    var container = r.container;
	    var target = e.target;
	    var tParent = target.parentNode;
	    var containerIsTarget = false;

	    while (tParent) {
	      if (tParent === container) {
	        containerIsTarget = true;
	        break;
	      }

	      tParent = tParent.parentNode;
	    }

	    if (!containerIsTarget) {
	      return false;
	    } // if target is outisde cy container, then this event is not for us

	    return true;
	  };

	  // Primary key
	  r.registerBinding(r.container, 'mousedown', function mousedownHandler(e) {
	    if (!eventInContainer(e)) {
	      return;
	    }

	    e.preventDefault();
	    r.hoverData.capture = true;
	    r.hoverData.which = e.which;

	    var cy = r.cy;
	    var gpos = [e.clientX, e.clientY];
	    var pos = r.projectIntoViewport(gpos[0], gpos[1]);
	    var select = r.selection;
	    var nears = r.findNearestElements(pos[0], pos[1], true, false);
	    var near = nears[0];
	    var draggedElements = r.dragData.possibleDragElements;

	    r.hoverData.mdownPos = pos;
	    r.hoverData.mdownGPos = gpos;

	    var checkForTaphold = function checkForTaphold() {
	      r.hoverData.tapholdCancelled = false;

	      clearTimeout(r.hoverData.tapholdTimeout);

	      r.hoverData.tapholdTimeout = setTimeout(function () {

	        if (r.hoverData.tapholdCancelled) {
	          return;
	        } else {
	          var ele = r.hoverData.down;

	          if (ele) {
	            ele.emit({
	              originalEvent: e,
	              type: 'taphold',
	              position: { x: pos[0], y: pos[1] }
	            });
	          } else {
	            cy.emit({
	              originalEvent: e,
	              type: 'taphold',
	              position: { x: pos[0], y: pos[1] }
	            });
	          }
	        }
	      }, r.tapholdDuration);
	    };

	    // Right click button
	    if (e.which == 3) {

	      r.hoverData.cxtStarted = true;

	      var cxtEvt = {
	        originalEvent: e,
	        type: 'cxttapstart',
	        position: { x: pos[0], y: pos[1] }
	      };

	      if (near) {
	        near.activate();
	        near.emit(cxtEvt);

	        r.hoverData.down = near;
	      } else {
	        cy.emit(cxtEvt);
	      }

	      r.hoverData.downTime = new Date().getTime();
	      r.hoverData.cxtDragged = false;

	      // Primary button
	    } else if (e.which == 1) {

	      if (near) {
	        near.activate();
	      }

	      // Element dragging
	      {
	        // If something is under the cursor and it is draggable, prepare to grab it
	        if (near != null) {

	          if (r.nodeIsGrabbable(near)) {

	            var makeEvent = function makeEvent(type) {
	              return {
	                originalEvent: e,
	                type: type,
	                position: { x: pos[0], y: pos[1] }
	              };
	            };

	            var triggerGrab = function triggerGrab(ele) {
	              ele.emit(makeEvent('grab'));
	            };

	            setGrabTarget(near);

	            if (!near.selected()) {

	              draggedElements = r.dragData.possibleDragElements = [];
	              addNodeToDrag(near, { addToList: draggedElements });

	              near.emit(makeEvent('grabon')).emit(makeEvent('grab'));
	            } else {
	              draggedElements = r.dragData.possibleDragElements = [];

	              var selectedNodes = cy.$(function (ele) {
	                return ele.isNode() && ele.selected() && r.nodeIsGrabbable(ele);
	              });

	              addNodesToDrag(selectedNodes, { addToList: draggedElements });

	              near.emit(makeEvent('grabon'));

	              selectedNodes.forEach(triggerGrab);
	            }

	            r.redrawHint('eles', true);
	            r.redrawHint('drag', true);
	          }
	        }

	        r.hoverData.down = near;
	        r.hoverData.downs = nears;
	        r.hoverData.downTime = new Date().getTime();
	      }

	      triggerEvents(near, ['mousedown', 'tapstart', 'vmousedown'], e, {
	        position: { x: pos[0], y: pos[1] }
	      });

	      if (near == null) {
	        select[4] = 1;

	        r.data.bgActivePosistion = {
	          x: pos[0],
	          y: pos[1]
	        };

	        r.redrawHint('select', true);

	        r.redraw();
	      } else if (near.isEdge()) {
	        select[4] = 1; // for future pan
	      }

	      checkForTaphold();
	    }

	    // Initialize selection box coordinates
	    select[0] = select[2] = pos[0];
	    select[1] = select[3] = pos[1];
	  }, false);

	  r.registerBinding(window, 'mousemove', function mousemoveHandler(e) {
	    // eslint-disable-line no-undef
	    var capture = r.hoverData.capture;

	    if (!capture && !eventInContainer(e)) {
	      return;
	    }

	    var preventDefault = false;
	    var cy = r.cy;
	    var zoom = cy.zoom();
	    var gpos = [e.clientX, e.clientY];
	    var pos = r.projectIntoViewport(gpos[0], gpos[1]);
	    var mdownPos = r.hoverData.mdownPos;
	    var mdownGPos = r.hoverData.mdownGPos;
	    var select = r.selection;

	    var near = null;
	    if (!r.hoverData.draggingEles && !r.hoverData.dragging && !r.hoverData.selecting) {
	      near = r.findNearestElement(pos[0], pos[1], true, false);
	    }
	    var last = r.hoverData.last;
	    var down = r.hoverData.down;

	    var disp = [pos[0] - select[2], pos[1] - select[3]];

	    var draggedElements = r.dragData.possibleDragElements;

	    var isOverThresholdDrag;

	    if (mdownGPos) {
	      var dx = gpos[0] - mdownGPos[0];
	      var dx2 = dx * dx;
	      var dy = gpos[1] - mdownGPos[1];
	      var dy2 = dy * dy;
	      var dist2 = dx2 + dy2;

	      r.hoverData.isOverThresholdDrag = isOverThresholdDrag = dist2 >= r.desktopTapThreshold2;
	    }

	    var multSelKeyDown = isMultSelKeyDown(e);

	    if (isOverThresholdDrag) {
	      r.hoverData.tapholdCancelled = true;
	    }

	    var updateDragDelta = function updateDragDelta() {
	      var dragDelta = r.hoverData.dragDelta = r.hoverData.dragDelta || [];

	      if (dragDelta.length === 0) {
	        dragDelta.push(disp[0]);
	        dragDelta.push(disp[1]);
	      } else {
	        dragDelta[0] += disp[0];
	        dragDelta[1] += disp[1];
	      }
	    };

	    preventDefault = true;

	    triggerEvents(near, ['mousemove', 'vmousemove', 'tapdrag'], e, {
	      position: { x: pos[0], y: pos[1] }
	    });

	    var goIntoBoxMode = function goIntoBoxMode() {
	      r.data.bgActivePosistion = undefined;

	      if (!r.hoverData.selecting) {
	        cy.emit('boxstart');
	      }

	      select[4] = 1;
	      r.hoverData.selecting = true;

	      r.redrawHint('select', true);
	      r.redraw();
	    };

	    // trigger context drag if rmouse down
	    if (r.hoverData.which === 3) {
	      // but only if over threshold
	      if (isOverThresholdDrag) {
	        var cxtEvt = {
	          originalEvent: e,
	          type: 'cxtdrag',
	          position: { x: pos[0], y: pos[1] }
	        };

	        if (down) {
	          down.emit(cxtEvt);
	        } else {
	          cy.emit(cxtEvt);
	        }

	        r.hoverData.cxtDragged = true;

	        if (!r.hoverData.cxtOver || near !== r.hoverData.cxtOver) {

	          if (r.hoverData.cxtOver) {
	            r.hoverData.cxtOver.emit({
	              originalEvent: e,
	              type: 'cxtdragout',
	              position: { x: pos[0], y: pos[1] }
	            });
	          }

	          r.hoverData.cxtOver = near;

	          if (near) {
	            near.emit({
	              originalEvent: e,
	              type: 'cxtdragover',
	              position: { x: pos[0], y: pos[1] }
	            });
	          }
	        }
	      }

	      // Check if we are drag panning the entire graph
	    } else if (r.hoverData.dragging) {
	      preventDefault = true;

	      if (cy.panningEnabled() && cy.userPanningEnabled()) {
	        var deltaP;

	        if (r.hoverData.justStartedPan) {
	          var mdPos = r.hoverData.mdownPos;

	          deltaP = {
	            x: (pos[0] - mdPos[0]) * zoom,
	            y: (pos[1] - mdPos[1]) * zoom
	          };

	          r.hoverData.justStartedPan = false;
	        } else {
	          deltaP = {
	            x: disp[0] * zoom,
	            y: disp[1] * zoom
	          };
	        }

	        cy.panBy(deltaP);

	        r.hoverData.dragged = true;
	      }

	      // Needs reproject due to pan changing viewport
	      pos = r.projectIntoViewport(e.clientX, e.clientY);

	      // Checks primary button down & out of time & mouse not moved much
	    } else if (select[4] == 1 && (down == null || down.isEdge())) {

	      if (isOverThresholdDrag) {

	        if (!r.hoverData.dragging && cy.boxSelectionEnabled() && (multSelKeyDown || !cy.panningEnabled() || !cy.userPanningEnabled())) {
	          goIntoBoxMode();
	        } else if (!r.hoverData.selecting && cy.panningEnabled() && cy.userPanningEnabled()) {
	          var allowPassthrough = allowPanningPassthrough(down, r.hoverData.downs);

	          if (allowPassthrough) {
	            r.hoverData.dragging = true;
	            r.hoverData.justStartedPan = true;
	            select[4] = 0;

	            r.data.bgActivePosistion = math.array2point(mdownPos);

	            r.redrawHint('select', true);
	            r.redraw();
	          }
	        }

	        if (down && down.isEdge() && down.active()) {
	          down.unactivate();
	        }
	      }
	    } else {
	      if (down && down.isEdge() && down.active()) {
	        down.unactivate();
	      }

	      if ((!down || !down.grabbed()) && near != last) {

	        if (last) {
	          triggerEvents(last, ['mouseout', 'tapdragout'], e, {
	            position: { x: pos[0], y: pos[1] }
	          });
	        }

	        if (near) {
	          triggerEvents(near, ['mouseover', 'tapdragover'], e, {
	            position: { x: pos[0], y: pos[1] }
	          });
	        }

	        r.hoverData.last = near;
	      }

	      if (down) {

	        if (isOverThresholdDrag) {
	          // then we can take action

	          if (cy.boxSelectionEnabled() && multSelKeyDown) {
	            // then selection overrides
	            if (down && down.grabbed()) {
	              freeDraggedElements(draggedElements);

	              down.emit('free');
	            }

	            goIntoBoxMode();
	          } else if (down && down.grabbed() && r.nodeIsDraggable(down)) {
	            // drag node
	            var justStartedDrag = !r.dragData.didDrag;

	            if (justStartedDrag) {
	              r.redrawHint('eles', true);
	            }

	            r.dragData.didDrag = true; // indicate that we actually did drag the node

	            var toTrigger = [];

	            // now, add the elements to the drag layer if not done already
	            if (!r.hoverData.draggingEles) {
	              addNodesToDrag(cy.collection(draggedElements), { inDragLayer: true });
	            }

	            for (var i = 0; i < draggedElements.length; i++) {
	              var dEle = draggedElements[i];

	              // Locked nodes not draggable, as well as non-visible nodes
	              if (r.nodeIsDraggable(dEle) && dEle.grabbed()) {
	                var dPos = dEle.position();

	                toTrigger.push(dEle);

	                if (is.number(disp[0]) && is.number(disp[1])) {
	                  dPos.x += disp[0];
	                  dPos.y += disp[1];

	                  if (justStartedDrag) {
	                    var dragDelta = r.hoverData.dragDelta;

	                    if (dragDelta && is.number(dragDelta[0]) && is.number(dragDelta[1])) {
	                      dPos.x += dragDelta[0];
	                      dPos.y += dragDelta[1];
	                    }
	                  }
	                }
	              }
	            }

	            r.hoverData.draggingEles = true;

	            var tcol = cy.collection(toTrigger);

	            tcol.dirtyCompoundBoundsCache();
	            tcol.emit('position drag');

	            r.redrawHint('drag', true);
	            r.redraw();
	          }
	        } else {
	          // otherwise save drag delta for when we actually start dragging so the relative grab pos is constant
	          updateDragDelta();
	        }
	      }

	      // prevent the dragging from triggering text selection on the page
	      preventDefault = true;
	    }

	    select[2] = pos[0];select[3] = pos[1];

	    if (preventDefault) {
	      if (e.stopPropagation) e.stopPropagation();
	      if (e.preventDefault) e.preventDefault();
	      return false;
	    }
	  }, false);

	  r.registerBinding(window, 'mouseup', function mouseupHandler(e) {
	    // eslint-disable-line no-undef
	    var capture = r.hoverData.capture;
	    if (!capture) {
	      return;
	    }
	    r.hoverData.capture = false;

	    var cy = r.cy;var pos = r.projectIntoViewport(e.clientX, e.clientY);var select = r.selection;
	    var near = r.findNearestElement(pos[0], pos[1], true, false);
	    var draggedElements = r.dragData.possibleDragElements;var down = r.hoverData.down;
	    var multSelKeyDown = isMultSelKeyDown(e);

	    if (r.data.bgActivePosistion) {
	      r.redrawHint('select', true);
	      r.redraw();
	    }

	    r.hoverData.tapholdCancelled = true;

	    r.data.bgActivePosistion = undefined; // not active bg now

	    if (down) {
	      down.unactivate();
	    }

	    if (r.hoverData.which === 3) {
	      var cxtEvt = {
	        originalEvent: e,
	        type: 'cxttapend',
	        position: { x: pos[0], y: pos[1] }
	      };

	      if (down) {
	        down.emit(cxtEvt);
	      } else {
	        cy.emit(cxtEvt);
	      }

	      if (!r.hoverData.cxtDragged) {
	        var cxtTap = {
	          originalEvent: e,
	          type: 'cxttap',
	          position: { x: pos[0], y: pos[1] }
	        };

	        if (down) {
	          down.emit(cxtTap);
	        } else {
	          cy.emit(cxtTap);
	        }
	      }

	      r.hoverData.cxtDragged = false;
	      r.hoverData.which = null;
	    } else if (r.hoverData.which === 1) {

	      // Deselect all elements if nothing is currently under the mouse cursor and we aren't dragging something
	      if (down == null && // not mousedown on node
	      !r.dragData.didDrag // didn't move the node around
	      && !r.hoverData.selecting // not box selection
	      && !r.hoverData.dragged // didn't pan
	      && !isMultSelKeyDown(e)) {

	        cy.$(function (ele) {
	          return ele.selected();
	        }).unselect();

	        if (draggedElements.length > 0) {
	          r.redrawHint('eles', true);
	        }

	        r.dragData.possibleDragElements = draggedElements = [];
	      }

	      triggerEvents(near, ['mouseup', 'tapend', 'vmouseup'], e, {
	        position: { x: pos[0], y: pos[1] }
	      });

	      if (!r.dragData.didDrag // didn't move a node around
	      && !r.hoverData.dragged // didn't pan
	      && !r.hoverData.selecting // not box selection
	      && !r.hoverData.isOverThresholdDrag // didn't move too much
	      ) {
	          triggerEvents(down, ['click', 'tap', 'vclick'], e, {
	            position: { x: pos[0], y: pos[1] }
	          });
	        }

	      // Single selection
	      if (near == down && !r.dragData.didDrag && !r.hoverData.selecting) {
	        if (near != null && near._private.selectable) {

	          if (r.hoverData.dragging) {
	            // if panning, don't change selection state
	          } else if (cy.selectionType() === 'additive' || multSelKeyDown) {
	            if (near.selected()) {
	              near.unselect();
	            } else {
	              near.select();
	            }
	          } else {
	            if (!multSelKeyDown) {
	              cy.$(':selected').unmerge(near).unselect();
	              near.select();
	            }
	          }

	          r.redrawHint('eles', true);
	        }
	      }

	      if (r.hoverData.selecting) {
	        var box = cy.collection(r.getAllInBox(select[0], select[1], select[2], select[3]));

	        r.redrawHint('select', true);

	        if (box.length > 0) {
	          r.redrawHint('eles', true);
	        }

	        cy.emit('boxend');

	        var eleWouldBeSelected = function eleWouldBeSelected(ele) {
	          return ele.selectable() && !ele.selected();
	        };

	        if (cy.selectionType() === 'additive') {
	          box.emit('box').stdFilter(eleWouldBeSelected).select().emit('boxselect');
	        } else {
	          if (!multSelKeyDown) {
	            cy.$(':selected').unmerge(box).unselect();
	          }

	          box.emit('box').stdFilter(eleWouldBeSelected).select().emit('boxselect');
	        }

	        // always need redraw in case eles unselectable
	        r.redraw();
	      }

	      // Cancel drag pan
	      if (r.hoverData.dragging) {
	        r.hoverData.dragging = false;

	        r.redrawHint('select', true);
	        r.redrawHint('eles', true);

	        r.redraw();
	      }

	      if (!select[4]) {
	        r.redrawHint('drag', true);
	        r.redrawHint('eles', true);

	        var downWasGrabbed = down && down.grabbed();

	        freeDraggedElements(draggedElements);

	        if (downWasGrabbed) {
	          down.emit('free');
	        }
	      }
	    } // else not right mouse

	    select[4] = 0;r.hoverData.down = null;

	    r.hoverData.cxtStarted = false;
	    r.hoverData.draggingEles = false;
	    r.hoverData.selecting = false;
	    r.hoverData.isOverThresholdDrag = false;
	    r.dragData.didDrag = false;
	    r.hoverData.dragged = false;
	    r.hoverData.dragDelta = [];
	    r.hoverData.mdownPos = null;
	    r.hoverData.mdownGPos = null;
	  }, false);

	  var wheelHandler = function wheelHandler(e) {

	    if (r.scrollingPage) {
	      return;
	    } // while scrolling, ignore wheel-to-zoom

	    var cy = r.cy;
	    var pos = r.projectIntoViewport(e.clientX, e.clientY);
	    var rpos = [pos[0] * cy.zoom() + cy.pan().x, pos[1] * cy.zoom() + cy.pan().y];

	    if (r.hoverData.draggingEles || r.hoverData.dragging || r.hoverData.cxtStarted || inBoxSelection()) {
	      // if pan dragging or cxt dragging, wheel movements make no zoom
	      e.preventDefault();
	      return;
	    }

	    if (cy.panningEnabled() && cy.userPanningEnabled() && cy.zoomingEnabled() && cy.userZoomingEnabled()) {
	      e.preventDefault();

	      r.data.wheelZooming = true;
	      clearTimeout(r.data.wheelTimeout);
	      r.data.wheelTimeout = setTimeout(function () {
	        r.data.wheelZooming = false;

	        r.redrawHint('eles', true);
	        r.redraw();
	      }, 150);

	      var diff;

	      if (e.deltaY != null) {
	        diff = e.deltaY / -250;
	      } else if (e.wheelDeltaY != null) {
	        diff = e.wheelDeltaY / 1000;
	      } else {
	        diff = e.wheelDelta / 1000;
	      }

	      diff = diff * r.wheelSensitivity;

	      var needsWheelFix = e.deltaMode === 1;
	      if (needsWheelFix) {
	        // fixes slow wheel events on ff/linux and ff/windows
	        diff *= 33;
	      }

	      cy.zoom({
	        level: cy.zoom() * Math.pow(10, diff),
	        renderedPosition: { x: rpos[0], y: rpos[1] }
	      });
	    }
	  };

	  // Functions to help with whether mouse wheel should trigger zooming
	  // --
	  r.registerBinding(r.container, 'wheel', wheelHandler, true);

	  // disable nonstandard wheel events
	  // r.registerBinding(r.container, 'mousewheel', wheelHandler, true);
	  // r.registerBinding(r.container, 'DOMMouseScroll', wheelHandler, true);
	  // r.registerBinding(r.container, 'MozMousePixelScroll', wheelHandler, true); // older firefox

	  r.registerBinding(window, 'scroll', function scrollHandler(e) {
	    // eslint-disable-line no-undef
	    r.scrollingPage = true;

	    clearTimeout(r.scrollingPageTimeout);
	    r.scrollingPageTimeout = setTimeout(function () {
	      r.scrollingPage = false;
	    }, 250);
	  }, true);

	  // Functions to help with handling mouseout/mouseover on the Cytoscape container
	  // Handle mouseout on Cytoscape container
	  r.registerBinding(r.container, 'mouseout', function mouseOutHandler(e) {
	    var pos = r.projectIntoViewport(e.clientX, e.clientY);

	    r.cy.emit({
	      originalEvent: e,
	      type: 'mouseout',
	      position: { x: pos[0], y: pos[1] }
	    });
	  }, false);

	  r.registerBinding(r.container, 'mouseover', function mouseOverHandler(e) {
	    var pos = r.projectIntoViewport(e.clientX, e.clientY);

	    r.cy.emit({
	      originalEvent: e,
	      type: 'mouseover',
	      position: { x: pos[0], y: pos[1] }
	    });
	  }, false);

	  var f1x1, f1y1, f2x1, f2y1; // starting points for pinch-to-zoom
	  var distance1, distance1Sq; // initial distance between finger 1 and finger 2 for pinch-to-zoom
	  var center1, modelCenter1; // center point on start pinch to zoom
	  var offsetLeft, offsetTop;
	  var containerWidth, containerHeight;
	  var twoFingersStartInside;

	  var distance = function distance(x1, y1, x2, y2) {
	    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
	  };

	  var distanceSq = function distanceSq(x1, y1, x2, y2) {
	    return (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);
	  };

	  var touchstartHandler;
	  r.registerBinding(r.container, 'touchstart', touchstartHandler = function touchstartHandler(e) {
	    if (!eventInContainer(e)) {
	      return;
	    }

	    r.touchData.capture = true;
	    r.data.bgActivePosistion = undefined;

	    var cy = r.cy;
	    var now = r.touchData.now;
	    var earlier = r.touchData.earlier;

	    if (e.touches[0]) {
	      var pos = r.projectIntoViewport(e.touches[0].clientX, e.touches[0].clientY);now[0] = pos[0];now[1] = pos[1];
	    }
	    if (e.touches[1]) {
	      var pos = r.projectIntoViewport(e.touches[1].clientX, e.touches[1].clientY);now[2] = pos[0];now[3] = pos[1];
	    }
	    if (e.touches[2]) {
	      var pos = r.projectIntoViewport(e.touches[2].clientX, e.touches[2].clientY);now[4] = pos[0];now[5] = pos[1];
	    }

	    // record starting points for pinch-to-zoom
	    if (e.touches[1]) {

	      freeDraggedElements(r.dragData.touchDragEles);

	      var offsets = r.findContainerClientCoords();
	      offsetLeft = offsets[0];
	      offsetTop = offsets[1];
	      containerWidth = offsets[2];
	      containerHeight = offsets[3];

	      f1x1 = e.touches[0].clientX - offsetLeft;
	      f1y1 = e.touches[0].clientY - offsetTop;

	      f2x1 = e.touches[1].clientX - offsetLeft;
	      f2y1 = e.touches[1].clientY - offsetTop;

	      twoFingersStartInside = 0 <= f1x1 && f1x1 <= containerWidth && 0 <= f2x1 && f2x1 <= containerWidth && 0 <= f1y1 && f1y1 <= containerHeight && 0 <= f2y1 && f2y1 <= containerHeight;

	      var pan = cy.pan();
	      var zoom = cy.zoom();

	      distance1 = distance(f1x1, f1y1, f2x1, f2y1);
	      distance1Sq = distanceSq(f1x1, f1y1, f2x1, f2y1);
	      center1 = [(f1x1 + f2x1) / 2, (f1y1 + f2y1) / 2];
	      modelCenter1 = [(center1[0] - pan.x) / zoom, (center1[1] - pan.y) / zoom];

	      // consider context tap
	      var cxtDistThreshold = 200;
	      var cxtDistThresholdSq = cxtDistThreshold * cxtDistThreshold;
	      if (distance1Sq < cxtDistThresholdSq && !e.touches[2]) {

	        var near1 = r.findNearestElement(now[0], now[1], true, true);
	        var near2 = r.findNearestElement(now[2], now[3], true, true);

	        if (near1 && near1.isNode()) {
	          near1.activate().emit({
	            originalEvent: e,
	            type: 'cxttapstart',
	            position: { x: now[0], y: now[1] }
	          });
	          r.touchData.start = near1;
	        } else if (near2 && near2.isNode()) {
	          near2.activate().emit({
	            originalEvent: e,
	            type: 'cxttapstart',
	            position: { x: now[0], y: now[1] }
	          });
	          r.touchData.start = near2;
	        } else {
	          cy.emit({
	            originalEvent: e,
	            type: 'cxttapstart',
	            position: { x: now[0], y: now[1] }
	          });
	        }

	        if (r.touchData.start) {
	          r.touchData.start._private.grabbed = false;
	        }
	        r.touchData.cxt = true;
	        r.touchData.cxtDragged = false;
	        r.data.bgActivePosistion = undefined;

	        r.redraw();
	        return;
	      }
	    }

	    if (e.touches[2]) {
	      // ignore
	    } else if (e.touches[1]) {
	      // ignore
	    } else if (e.touches[0]) {
	      var nears = r.findNearestElements(now[0], now[1], true, true);
	      var near = nears[0];

	      if (near != null) {
	        near.activate();

	        r.touchData.start = near;
	        r.touchData.starts = nears;

	        if (r.nodeIsGrabbable(near)) {

	          var draggedEles = r.dragData.touchDragEles = [];
	          var selectedNodes = null;

	          r.redrawHint('eles', true);
	          r.redrawHint('drag', true);

	          if (near.selected()) {
	            // reset drag elements, since near will be added again

	            selectedNodes = cy.$(function (ele) {
	              return ele.selected() && r.nodeIsGrabbable(ele);
	            });

	            addNodesToDrag(selectedNodes, { addToList: draggedEles });
	          } else {
	            addNodeToDrag(near, { addToList: draggedEles });
	          }

	          setGrabTarget(near);

	          var makeEvent = function makeEvent(type) {
	            return {
	              originalEvent: e,
	              type: type,
	              position: { x: now[0], y: now[1] }
	            };
	          };

	          near.emit(makeEvent('grabon'));

	          if (selectedNodes) {
	            selectedNodes.forEach(function (n) {
	              n.emit(makeEvent('grab'));
	            });
	          } else {
	            near.emit(makeEvent('grab'));
	          }
	        }
	      }

	      triggerEvents(near, ['touchstart', 'tapstart', 'vmousedown'], e, {
	        position: { x: now[0], y: now[1] }
	      });

	      if (near == null) {
	        r.data.bgActivePosistion = {
	          x: pos[0],
	          y: pos[1]
	        };

	        r.redrawHint('select', true);
	        r.redraw();
	      }

	      // Tap, taphold
	      // -----

	      r.touchData.singleTouchMoved = false;
	      r.touchData.singleTouchStartTime = +new Date();

	      clearTimeout(r.touchData.tapholdTimeout);
	      r.touchData.tapholdTimeout = setTimeout(function () {
	        if (r.touchData.singleTouchMoved === false && !r.pinching // if pinching, then taphold unselect shouldn't take effect
	        && !r.touchData.selecting // box selection shouldn't allow taphold through
	        ) {
	            triggerEvents(r.touchData.start, ['taphold'], e, {
	              position: { x: now[0], y: now[1] }
	            });

	            if (!r.touchData.start) {
	              cy.$(':selected').unselect();
	            }
	          }
	      }, r.tapholdDuration);
	    }

	    if (e.touches.length >= 1) {
	      var sPos = r.touchData.startPosition = [];

	      for (var i = 0; i < now.length; i++) {
	        sPos[i] = earlier[i] = now[i];
	      }

	      var touch0 = e.touches[0];

	      r.touchData.startGPosition = [touch0.clientX, touch0.clientY];
	    }
	  }, false);

	  var touchmoveHandler;
	  r.registerBinding(window, 'touchmove', touchmoveHandler = function touchmoveHandler(e) {
	    // eslint-disable-line no-undef
	    var capture = r.touchData.capture;

	    if (!capture && !eventInContainer(e)) {
	      return;
	    }

	    var select = r.selection;
	    var cy = r.cy;
	    var now = r.touchData.now;
	    var earlier = r.touchData.earlier;
	    var zoom = cy.zoom();

	    if (e.touches[0]) {
	      var pos = r.projectIntoViewport(e.touches[0].clientX, e.touches[0].clientY);now[0] = pos[0];now[1] = pos[1];
	    }
	    if (e.touches[1]) {
	      var pos = r.projectIntoViewport(e.touches[1].clientX, e.touches[1].clientY);now[2] = pos[0];now[3] = pos[1];
	    }
	    if (e.touches[2]) {
	      var pos = r.projectIntoViewport(e.touches[2].clientX, e.touches[2].clientY);now[4] = pos[0];now[5] = pos[1];
	    }

	    var startGPos = r.touchData.startGPosition;
	    var isOverThresholdDrag;

	    if (capture && e.touches[0] && startGPos) {
	      var disp = [];for (var j = 0; j < now.length; j++) {
	        disp[j] = now[j] - earlier[j];
	      }
	      var dx = e.touches[0].clientX - startGPos[0];
	      var dx2 = dx * dx;
	      var dy = e.touches[0].clientY - startGPos[1];
	      var dy2 = dy * dy;
	      var dist2 = dx2 + dy2;

	      isOverThresholdDrag = dist2 >= r.touchTapThreshold2;
	    }

	    // context swipe cancelling
	    if (capture && r.touchData.cxt) {
	      e.preventDefault();

	      var f1x2 = e.touches[0].clientX - offsetLeft,
	          f1y2 = e.touches[0].clientY - offsetTop;
	      var f2x2 = e.touches[1].clientX - offsetLeft,
	          f2y2 = e.touches[1].clientY - offsetTop;
	      // var distance2 = distance( f1x2, f1y2, f2x2, f2y2 );
	      var distance2Sq = distanceSq(f1x2, f1y2, f2x2, f2y2);
	      var factorSq = distance2Sq / distance1Sq;

	      var distThreshold = 150;
	      var distThresholdSq = distThreshold * distThreshold;
	      var factorThreshold = 1.5;
	      var factorThresholdSq = factorThreshold * factorThreshold;

	      // cancel ctx gestures if the distance b/t the fingers increases
	      if (factorSq >= factorThresholdSq || distance2Sq >= distThresholdSq) {
	        r.touchData.cxt = false;

	        r.data.bgActivePosistion = undefined;

	        r.redrawHint('select', true);

	        var cxtEvt = {
	          originalEvent: e,
	          type: 'cxttapend',
	          position: { x: now[0], y: now[1] }
	        };

	        if (r.touchData.start) {
	          r.touchData.start.unactivate().emit(cxtEvt);

	          r.touchData.start = null;
	        } else {
	          cy.emit(cxtEvt);
	        }
	      }
	    }

	    // context swipe
	    if (capture && r.touchData.cxt) {
	      var cxtEvt = {
	        originalEvent: e,
	        type: 'cxtdrag',
	        position: { x: now[0], y: now[1] }
	      };
	      r.data.bgActivePosistion = undefined;
	      r.redrawHint('select', true);

	      if (r.touchData.start) {
	        r.touchData.start.emit(cxtEvt);
	      } else {
	        cy.emit(cxtEvt);
	      }

	      if (r.touchData.start) {
	        r.touchData.start._private.grabbed = false;
	      }
	      r.touchData.cxtDragged = true;

	      var near = r.findNearestElement(now[0], now[1], true, true);

	      if (!r.touchData.cxtOver || near !== r.touchData.cxtOver) {

	        if (r.touchData.cxtOver) {
	          r.touchData.cxtOver.emit({
	            originalEvent: e,
	            type: 'cxtdragout',
	            position: { x: now[0], y: now[1] }
	          });
	        }

	        r.touchData.cxtOver = near;

	        if (near) {
	          near.emit({
	            originalEvent: e,
	            type: 'cxtdragover',
	            position: { x: now[0], y: now[1] }
	          });
	        }
	      }

	      // box selection
	    } else if (capture && e.touches[2] && cy.boxSelectionEnabled()) {
	      e.preventDefault();

	      r.data.bgActivePosistion = undefined;

	      this.lastThreeTouch = +new Date();

	      if (!r.touchData.selecting) {
	        cy.emit('boxstart');
	      }

	      r.touchData.selecting = true;

	      r.redrawHint('select', true);

	      if (!select || select.length === 0 || select[0] === undefined) {
	        select[0] = (now[0] + now[2] + now[4]) / 3;
	        select[1] = (now[1] + now[3] + now[5]) / 3;
	        select[2] = (now[0] + now[2] + now[4]) / 3 + 1;
	        select[3] = (now[1] + now[3] + now[5]) / 3 + 1;
	      } else {
	        select[2] = (now[0] + now[2] + now[4]) / 3;
	        select[3] = (now[1] + now[3] + now[5]) / 3;
	      }

	      select[4] = 1;
	      r.touchData.selecting = true;

	      r.redraw();

	      // pinch to zoom
	    } else if (capture && e.touches[1] && cy.zoomingEnabled() && cy.panningEnabled() && cy.userZoomingEnabled() && cy.userPanningEnabled()) {
	      // two fingers => pinch to zoom
	      e.preventDefault();

	      r.data.bgActivePosistion = undefined;
	      r.redrawHint('select', true);

	      var draggedEles = r.dragData.touchDragEles;
	      if (draggedEles) {
	        r.redrawHint('drag', true);

	        for (var i = 0; i < draggedEles.length; i++) {
	          var de_p = draggedEles[i]._private;

	          de_p.grabbed = false;
	          de_p.rscratch.inDragLayer = false;
	        }
	      }

	      // (x2, y2) for fingers 1 and 2
	      var f1x2 = e.touches[0].clientX - offsetLeft,
	          f1y2 = e.touches[0].clientY - offsetTop;
	      var f2x2 = e.touches[1].clientX - offsetLeft,
	          f2y2 = e.touches[1].clientY - offsetTop;

	      var distance2 = distance(f1x2, f1y2, f2x2, f2y2);
	      // var distance2Sq = distanceSq( f1x2, f1y2, f2x2, f2y2 );
	      // var factor = Math.sqrt( distance2Sq ) / Math.sqrt( distance1Sq );
	      var factor = distance2 / distance1;

	      if (twoFingersStartInside) {
	        // delta finger1
	        var df1x = f1x2 - f1x1;
	        var df1y = f1y2 - f1y1;

	        // delta finger 2
	        var df2x = f2x2 - f2x1;
	        var df2y = f2y2 - f2y1;

	        // translation is the normalised vector of the two fingers movement
	        // i.e. so pinching cancels out and moving together pans
	        var tx = (df1x + df2x) / 2;
	        var ty = (df1y + df2y) / 2;

	        // adjust factor by the speed multiplier
	        // var speed = 1.5;
	        // if( factor > 1 ){
	        //   factor = (factor - 1) * speed + 1;
	        // } else {
	        //   factor = 1 - (1 - factor) * speed;
	        // }

	        // now calculate the zoom
	        var zoom1 = cy.zoom();
	        var zoom2 = zoom1 * factor;
	        var pan1 = cy.pan();

	        // the model center point converted to the current rendered pos
	        var ctrx = modelCenter1[0] * zoom1 + pan1.x;
	        var ctry = modelCenter1[1] * zoom1 + pan1.y;

	        var pan2 = {
	          x: -zoom2 / zoom1 * (ctrx - pan1.x - tx) + ctrx,
	          y: -zoom2 / zoom1 * (ctry - pan1.y - ty) + ctry
	        };

	        // remove dragged eles
	        if (r.touchData.start && r.touchData.start.active()) {
	          var draggedEles = r.dragData.touchDragEles;

	          freeDraggedElements(draggedEles);

	          r.redrawHint('drag', true);
	          r.redrawHint('eles', true);

	          r.touchData.start.unactivate().emit('free');
	        }

	        cy.viewport({
	          zoom: zoom2,
	          pan: pan2,
	          cancelOnFailedZoom: true
	        });

	        distance1 = distance2;
	        f1x1 = f1x2;
	        f1y1 = f1y2;
	        f2x1 = f2x2;
	        f2y1 = f2y2;

	        r.pinching = true;
	      }

	      // Re-project
	      if (e.touches[0]) {
	        var pos = r.projectIntoViewport(e.touches[0].clientX, e.touches[0].clientY);now[0] = pos[0];now[1] = pos[1];
	      }
	      if (e.touches[1]) {
	        var pos = r.projectIntoViewport(e.touches[1].clientX, e.touches[1].clientY);now[2] = pos[0];now[3] = pos[1];
	      }
	      if (e.touches[2]) {
	        var pos = r.projectIntoViewport(e.touches[2].clientX, e.touches[2].clientY);now[4] = pos[0];now[5] = pos[1];
	      }
	    } else if (e.touches[0]) {
	      var start = r.touchData.start;
	      var last = r.touchData.last;
	      var near;

	      if (!r.hoverData.draggingEles && !r.swipePanning) {
	        near = r.findNearestElement(now[0], now[1], true, true);
	      }

	      if (capture && start != null) {
	        e.preventDefault();
	      }

	      // dragging nodes
	      if (capture && start != null && r.nodeIsDraggable(start)) {

	        if (isOverThresholdDrag) {
	          // then dragging can happen
	          var draggedEles = r.dragData.touchDragEles;
	          var justStartedDrag = !r.dragData.didDrag;

	          if (justStartedDrag) {
	            addNodesToDrag(cy.collection(draggedEles), { inDragLayer: true });
	          }

	          for (var k = 0; k < draggedEles.length; k++) {
	            var draggedEle = draggedEles[k];

	            if (r.nodeIsDraggable(draggedEle) && draggedEle.grabbed()) {
	              r.dragData.didDrag = true;
	              var dPos = draggedEle.position();

	              if (is.number(disp[0]) && is.number(disp[1])) {
	                dPos.x += disp[0];
	                dPos.y += disp[1];
	              }

	              if (justStartedDrag) {
	                r.redrawHint('eles', true);

	                var dragDelta = r.touchData.dragDelta;

	                if (dragDelta && is.number(dragDelta[0]) && is.number(dragDelta[1])) {
	                  dPos.x += dragDelta[0];
	                  dPos.y += dragDelta[1];
	                }
	              }
	            }
	          }

	          var tcol = cy.collection(draggedEles);

	          tcol.dirtyCompoundBoundsCache();
	          tcol.emit('position drag');

	          r.hoverData.draggingEles = true;

	          r.redrawHint('drag', true);

	          if (r.touchData.startPosition[0] == earlier[0] && r.touchData.startPosition[1] == earlier[1]) {

	            r.redrawHint('eles', true);
	          }

	          r.redraw();
	        } else {
	          // otherise keep track of drag delta for later
	          var dragDelta = r.touchData.dragDelta = r.touchData.dragDelta || [];

	          if (dragDelta.length === 0) {
	            dragDelta.push(disp[0]);
	            dragDelta.push(disp[1]);
	          } else {
	            dragDelta[0] += disp[0];
	            dragDelta[1] += disp[1];
	          }
	        }
	      }

	      // touchmove
	      {
	        triggerEvents(start || near, ['touchmove', 'tapdrag', 'vmousemove'], e, {
	          position: { x: now[0], y: now[1] }
	        });

	        if ((!start || !start.grabbed()) && near != last) {
	          if (last) {
	            last.emit({ originalEvent: e, type: 'tapdragout', position: { x: now[0], y: now[1] } });
	          }
	          if (near) {
	            near.emit({ originalEvent: e, type: 'tapdragover', position: { x: now[0], y: now[1] } });
	          }
	        }

	        r.touchData.last = near;
	      }

	      // check to cancel taphold
	      if (capture) {
	        for (var i = 0; i < now.length; i++) {
	          if (now[i] && r.touchData.startPosition[i] && isOverThresholdDrag) {

	            r.touchData.singleTouchMoved = true;
	          }
	        }
	      }

	      // panning
	      if (capture && (start == null || start.isEdge()) && cy.panningEnabled() && cy.userPanningEnabled()) {

	        var allowPassthrough = allowPanningPassthrough(start, r.touchData.starts);

	        if (allowPassthrough) {
	          e.preventDefault();

	          if (r.swipePanning) {
	            cy.panBy({
	              x: disp[0] * zoom,
	              y: disp[1] * zoom
	            });
	          } else if (isOverThresholdDrag) {
	            r.swipePanning = true;

	            cy.panBy({
	              x: dx * zoom,
	              y: dy * zoom
	            });

	            if (start) {
	              start.unactivate();

	              if (!r.data.bgActivePosistion) {
	                r.data.bgActivePosistion = math.array2point(r.touchData.startPosition);
	              }

	              r.redrawHint('select', true);

	              r.touchData.start = null;
	            }
	          }
	        }

	        // Re-project
	        var pos = r.projectIntoViewport(e.touches[0].clientX, e.touches[0].clientY);
	        now[0] = pos[0];now[1] = pos[1];
	      }
	    }

	    for (var j = 0; j < now.length; j++) {
	      earlier[j] = now[j];
	    }
	    //r.redraw();

	    // the active bg indicator should be removed when making a swipe that is neither for dragging nodes or panning
	    if (capture && e.touches.length > 0 && !r.hoverData.draggingEles && !r.swipePanning && r.data.bgActivePosistion != null) {
	      r.data.bgActivePosistion = undefined;
	      r.redrawHint('select', true);
	      r.redraw();
	    }
	  }, false);
	  var touchcancelHandler;
	  r.registerBinding(window, 'touchcancel', touchcancelHandler = function touchcancelHandler(e) {
	    // eslint-disable-line no-undef
	    var start = r.touchData.start;

	    r.touchData.capture = false;

	    if (start) {
	      start.unactivate();
	    }
	  });

	  var touchendHandler;
	  r.registerBinding(window, 'touchend', touchendHandler = function touchendHandler(e) {
	    // eslint-disable-line no-undef
	    var start = r.touchData.start;

	    var capture = r.touchData.capture;

	    if (capture) {
	      if (e.touches.length === 0) {
	        r.touchData.capture = false;
	      }

	      e.preventDefault();
	    } else {
	      return;
	    }

	    var select = r.selection;

	    r.swipePanning = false;
	    r.hoverData.draggingEles = false;

	    var cy = r.cy;
	    var zoom = cy.zoom();
	    var now = r.touchData.now;
	    var earlier = r.touchData.earlier;

	    if (e.touches[0]) {
	      var pos = r.projectIntoViewport(e.touches[0].clientX, e.touches[0].clientY);now[0] = pos[0];now[1] = pos[1];
	    }
	    if (e.touches[1]) {
	      var pos = r.projectIntoViewport(e.touches[1].clientX, e.touches[1].clientY);now[2] = pos[0];now[3] = pos[1];
	    }
	    if (e.touches[2]) {
	      var pos = r.projectIntoViewport(e.touches[2].clientX, e.touches[2].clientY);now[4] = pos[0];now[5] = pos[1];
	    }

	    if (start) {
	      start.unactivate();
	    }

	    var ctxTapend;
	    if (r.touchData.cxt) {
	      ctxTapend = {
	        originalEvent: e,
	        type: 'cxttapend',
	        position: { x: now[0], y: now[1] }
	      };

	      if (start) {
	        start.emit(ctxTapend);
	      } else {
	        cy.emit(ctxTapend);
	      }

	      if (!r.touchData.cxtDragged) {
	        var ctxTap = {
	          originalEvent: e,
	          type: 'cxttap',
	          position: { x: now[0], y: now[1] }
	        };

	        if (start) {
	          start.emit(ctxTap);
	        } else {
	          cy.emit(ctxTap);
	        }
	      }

	      if (r.touchData.start) {
	        r.touchData.start._private.grabbed = false;
	      }
	      r.touchData.cxt = false;
	      r.touchData.start = null;

	      r.redraw();
	      return;
	    }

	    // no more box selection if we don't have three fingers
	    if (!e.touches[2] && cy.boxSelectionEnabled() && r.touchData.selecting) {
	      r.touchData.selecting = false;

	      var box = cy.collection(r.getAllInBox(select[0], select[1], select[2], select[3]));

	      select[0] = undefined;
	      select[1] = undefined;
	      select[2] = undefined;
	      select[3] = undefined;
	      select[4] = 0;

	      r.redrawHint('select', true);

	      cy.emit('boxend');

	      var eleWouldBeSelected = function eleWouldBeSelected(ele) {
	        return ele.selectable() && !ele.selected();
	      };

	      box.emit('box').stdFilter(eleWouldBeSelected).select().emit('boxselect');

	      if (box.nonempty()) {
	        r.redrawHint('eles', true);
	      }

	      r.redraw();
	    }

	    if (start != null) {
	      start.unactivate();
	    }

	    if (e.touches[2]) {
	      r.data.bgActivePosistion = undefined;
	      r.redrawHint('select', true);
	    } else if (e.touches[1]) {
	      // ignore
	    } else if (e.touches[0]) {
	      // ignore

	      // Last touch released
	    } else if (!e.touches[0]) {

	      r.data.bgActivePosistion = undefined;
	      r.redrawHint('select', true);

	      var draggedEles = r.dragData.touchDragEles;

	      if (start != null) {

	        var startWasGrabbed = start._private.grabbed;

	        freeDraggedElements(draggedEles);

	        r.redrawHint('drag', true);
	        r.redrawHint('eles', true);

	        if (startWasGrabbed) {
	          start.emit('free');
	        }

	        triggerEvents(start, ['touchend', 'tapend', 'vmouseup', 'tapdragout'], e, {
	          position: { x: now[0], y: now[1] }
	        });

	        start.unactivate();

	        r.touchData.start = null;
	      } else {
	        var near = r.findNearestElement(now[0], now[1], true, true);

	        triggerEvents(near, ['touchend', 'tapend', 'vmouseup', 'tapdragout'], e, {
	          position: { x: now[0], y: now[1] }
	        });
	      }

	      var dx = r.touchData.startPosition[0] - now[0];
	      var dx2 = dx * dx;
	      var dy = r.touchData.startPosition[1] - now[1];
	      var dy2 = dy * dy;
	      var dist2 = dx2 + dy2;
	      var rdist2 = dist2 * zoom * zoom;

	      // Prepare to select the currently touched node, only if it hasn't been dragged past a certain distance
	      if (start != null && !r.dragData.didDrag // didn't drag nodes around
	      && start._private.selectable && rdist2 < r.touchTapThreshold2 && !r.pinching // pinch to zoom should not affect selection
	      ) {

	          if (cy.selectionType() === 'single') {
	            cy.$(':selected').unmerge(start).unselect();
	            start.select();
	          } else {
	            if (start.selected()) {
	              start.unselect();
	            } else {
	              start.select();
	            }
	          }

	          r.redrawHint('eles', true);
	        }

	      // Tap event, roughly same as mouse click event for touch
	      if (!r.touchData.singleTouchMoved) {
	        triggerEvents(start, ['tap', 'vclick'], e, {
	          position: { x: now[0], y: now[1] }
	        });
	      }

	      r.touchData.singleTouchMoved = true;
	    }

	    for (var j = 0; j < now.length; j++) {
	      earlier[j] = now[j];
	    }

	    r.dragData.didDrag = false; // reset for next mousedown

	    if (e.touches.length === 0) {
	      r.touchData.dragDelta = [];
	      r.touchData.startPosition = null;
	      r.touchData.startGPosition = null;
	    }

	    if (e.touches.length < 2) {
	      r.pinching = false;
	      r.redrawHint('eles', true);
	      r.redraw();
	    }

	    //r.redraw();
	  }, false);

	  // fallback compatibility layer for ms pointer events
	  if (typeof TouchEvent === 'undefined') {

	    var pointers = [];

	    var makeTouch = function makeTouch(e) {
	      return {
	        clientX: e.clientX,
	        clientY: e.clientY,
	        force: 1,
	        identifier: e.pointerId,
	        pageX: e.pageX,
	        pageY: e.pageY,
	        radiusX: e.width / 2,
	        radiusY: e.height / 2,
	        screenX: e.screenX,
	        screenY: e.screenY,
	        target: e.target
	      };
	    };

	    var makePointer = function makePointer(e) {
	      return {
	        event: e,
	        touch: makeTouch(e)
	      };
	    };

	    var addPointer = function addPointer(e) {
	      pointers.push(makePointer(e));
	    };

	    var removePointer = function removePointer(e) {
	      for (var i = 0; i < pointers.length; i++) {
	        var p = pointers[i];

	        if (p.event.pointerId === e.pointerId) {
	          pointers.splice(i, 1);
	          return;
	        }
	      }
	    };

	    var updatePointer = function updatePointer(e) {
	      var p = pointers.filter(function (p) {
	        return p.event.pointerId === e.pointerId;
	      })[0];

	      p.event = e;
	      p.touch = makeTouch(e);
	    };

	    var addTouchesToEvent = function addTouchesToEvent(e) {
	      e.touches = pointers.map(function (p) {
	        return p.touch;
	      });
	    };

	    var pointerIsMouse = function pointerIsMouse(e) {
	      return e.pointerType === 'mouse' || e.pointerType === 4;
	    };

	    r.registerBinding(r.container, 'pointerdown', function (e) {
	      if (pointerIsMouse(e)) {
	        return;
	      } // mouse already handled

	      e.preventDefault();

	      addPointer(e);

	      addTouchesToEvent(e);
	      touchstartHandler(e);
	    });

	    r.registerBinding(r.container, 'pointerup', function (e) {
	      if (pointerIsMouse(e)) {
	        return;
	      } // mouse already handled

	      removePointer(e);

	      addTouchesToEvent(e);
	      touchendHandler(e);
	    });

	    r.registerBinding(r.container, 'pointercancel', function (e) {
	      if (pointerIsMouse(e)) {
	        return;
	      } // mouse already handled

	      removePointer(e);

	      addTouchesToEvent(e);
	      touchcancelHandler(e);
	    });

	    r.registerBinding(r.container, 'pointermove', function (e) {
	      if (pointerIsMouse(e)) {
	        return;
	      } // mouse already handled

	      e.preventDefault();

	      updatePointer(e);

	      addTouchesToEvent(e);
	      touchmoveHandler(e);
	    });
	  }
	};

	module.exports = BRp;

	/***/ }),
	/* 121 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var math = __webpack_require__(2);

	var BRp = {};

	BRp.generatePolygon = function (name, points) {
	  return this.nodeShapes[name] = {
	    renderer: this,

	    name: name,

	    points: points,

	    draw: function draw(context, centerX, centerY, width, height) {
	      this.renderer.nodeShapeImpl('polygon', context, centerX, centerY, width, height, this.points);
	    },

	    intersectLine: function intersectLine(nodeX, nodeY, width, height, x, y, padding) {
	      return math.polygonIntersectLine(x, y, this.points, nodeX, nodeY, width / 2, height / 2, padding);
	    },

	    checkPoint: function checkPoint(x, y, padding, width, height, centerX, centerY) {
	      return math.pointInsidePolygon(x, y, this.points, centerX, centerY, width, height, [0, -1], padding);
	    }
	  };
	};

	BRp.generateEllipse = function () {
	  return this.nodeShapes['ellipse'] = {
	    renderer: this,

	    name: 'ellipse',

	    draw: function draw(context, centerX, centerY, width, height) {
	      this.renderer.nodeShapeImpl(this.name, context, centerX, centerY, width, height);
	    },

	    intersectLine: function intersectLine(nodeX, nodeY, width, height, x, y, padding) {
	      return math.intersectLineEllipse(x, y, nodeX, nodeY, width / 2 + padding, height / 2 + padding);
	    },

	    checkPoint: function checkPoint(x, y, padding, width, height, centerX, centerY) {
	      return math.checkInEllipse(x, y, width, height, centerX, centerY, padding);
	    }
	  };
	};

	BRp.generateRoundRectangle = function () {
	  return this.nodeShapes['roundrectangle'] = {
	    renderer: this,

	    name: 'roundrectangle',

	    points: math.generateUnitNgonPointsFitToSquare(4, 0),

	    draw: function draw(context, centerX, centerY, width, height) {
	      this.renderer.nodeShapeImpl(this.name, context, centerX, centerY, width, height);
	    },

	    intersectLine: function intersectLine(nodeX, nodeY, width, height, x, y, padding) {
	      return math.roundRectangleIntersectLine(x, y, nodeX, nodeY, width, height, padding);
	    },

	    checkPoint: function checkPoint(x, y, padding, width, height, centerX, centerY) {

	      var cornerRadius = math.getRoundRectangleRadius(width, height);
	      var diam = cornerRadius * 2;

	      // Check hBox
	      if (math.pointInsidePolygon(x, y, this.points, centerX, centerY, width, height - diam, [0, -1], padding)) {
	        return true;
	      }

	      // Check vBox
	      if (math.pointInsidePolygon(x, y, this.points, centerX, centerY, width - diam, height, [0, -1], padding)) {
	        return true;
	      }

	      // Check top left quarter circle
	      if (math.checkInEllipse(x, y, diam, diam, centerX - width / 2 + cornerRadius, centerY - height / 2 + cornerRadius, padding)) {

	        return true;
	      }

	      // Check top right quarter circle
	      if (math.checkInEllipse(x, y, diam, diam, centerX + width / 2 - cornerRadius, centerY - height / 2 + cornerRadius, padding)) {

	        return true;
	      }

	      // Check bottom right quarter circle
	      if (math.checkInEllipse(x, y, diam, diam, centerX + width / 2 - cornerRadius, centerY + height / 2 - cornerRadius, padding)) {

	        return true;
	      }

	      // Check bottom left quarter circle
	      if (math.checkInEllipse(x, y, diam, diam, centerX - width / 2 + cornerRadius, centerY + height / 2 - cornerRadius, padding)) {

	        return true;
	      }

	      return false;
	    }
	  };
	};

	BRp.generateCutRectangle = function () {
	  return this.nodeShapes['cutrectangle'] = {
	    renderer: this,

	    name: 'cutrectangle',

	    cornerLength: math.getCutRectangleCornerLength(),

	    points: math.generateUnitNgonPointsFitToSquare(4, 0),

	    draw: function draw(context, centerX, centerY, width, height) {
	      this.renderer.nodeShapeImpl(this.name, context, centerX, centerY, width, height);
	    },

	    generateCutTrianglePts: function generateCutTrianglePts(width, height, centerX, centerY) {
	      var cl = this.cornerLength;
	      var hh = height / 2;
	      var hw = width / 2;
	      var xBegin = centerX - hw;
	      var xEnd = centerX + hw;
	      var yBegin = centerY - hh;
	      var yEnd = centerY + hh;

	      // points are in clockwise order, inner (imaginary) triangle pt on [4, 5]
	      return {
	        topLeft: [xBegin, yBegin + cl, xBegin + cl, yBegin, xBegin + cl, yBegin + cl],
	        topRight: [xEnd - cl, yBegin, xEnd, yBegin + cl, xEnd - cl, yBegin + cl],
	        bottomRight: [xEnd, yEnd - cl, xEnd - cl, yEnd, xEnd - cl, yEnd - cl],
	        bottomLeft: [xBegin + cl, yEnd, xBegin, yEnd - cl, xBegin + cl, yEnd - cl]
	      };
	    },

	    intersectLine: function intersectLine(nodeX, nodeY, width, height, x, y, padding) {
	      var cPts = this.generateCutTrianglePts(width + 2 * padding, height + 2 * padding, nodeX, nodeY);
	      var pts = [].concat.apply([], [cPts.topLeft.splice(0, 4), cPts.topRight.splice(0, 4), cPts.bottomRight.splice(0, 4), cPts.bottomLeft.splice(0, 4)]);

	      return math.polygonIntersectLine(x, y, pts, nodeX, nodeY);
	    },

	    checkPoint: function checkPoint(x, y, padding, width, height, centerX, centerY) {
	      // Check hBox
	      if (math.pointInsidePolygon(x, y, this.points, centerX, centerY, width, height - 2 * this.cornerLength, [0, -1], padding)) {
	        return true;
	      }

	      // Check vBox
	      if (math.pointInsidePolygon(x, y, this.points, centerX, centerY, width - 2 * this.cornerLength, height, [0, -1], padding)) {
	        return true;
	      }
	      var cutTrianglePts = this.generateCutTrianglePts(width, height, centerX, centerY);
	      return math.pointInsidePolygonPoints(x, y, cutTrianglePts.topLeft) || math.pointInsidePolygonPoints(x, y, cutTrianglePts.topRight) || math.pointInsidePolygonPoints(x, y, cutTrianglePts.bottomRight) || math.pointInsidePolygonPoints(x, y, cutTrianglePts.bottomLeft);
	    }

	  };
	};

	BRp.generateBarrel = function () {
	  return this.nodeShapes['barrel'] = {
	    renderer: this,

	    name: 'barrel',

	    points: math.generateUnitNgonPointsFitToSquare(4, 0),

	    draw: function draw(context, centerX, centerY, width, height) {
	      this.renderer.nodeShapeImpl(this.name, context, centerX, centerY, width, height);
	    },

	    intersectLine: function intersectLine(nodeX, nodeY, width, height, x, y, padding) {
	      // use two fixed t values for the bezier curve approximation

	      var t0 = 0.15;
	      var t1 = 0.5;
	      var t2 = 0.85;

	      var bPts = this.generateBarrelBezierPts(width + 2 * padding, height + 2 * padding, nodeX, nodeY);

	      var approximateBarrelCurvePts = function approximateBarrelCurvePts(pts) {
	        // approximate curve pts based on the two t values
	        var m0 = math.qbezierPtAt({ x: pts[0], y: pts[1] }, { x: pts[2], y: pts[3] }, { x: pts[4], y: pts[5] }, t0);
	        var m1 = math.qbezierPtAt({ x: pts[0], y: pts[1] }, { x: pts[2], y: pts[3] }, { x: pts[4], y: pts[5] }, t1);
	        var m2 = math.qbezierPtAt({ x: pts[0], y: pts[1] }, { x: pts[2], y: pts[3] }, { x: pts[4], y: pts[5] }, t2);

	        return [pts[0], pts[1], m0.x, m0.y, m1.x, m1.y, m2.x, m2.y, pts[4], pts[5]];
	      };

	      var pts = [].concat(approximateBarrelCurvePts(bPts.topLeft), approximateBarrelCurvePts(bPts.topRight), approximateBarrelCurvePts(bPts.bottomRight), approximateBarrelCurvePts(bPts.bottomLeft));

	      return math.polygonIntersectLine(x, y, pts, nodeX, nodeY);
	    },

	    generateBarrelBezierPts: function generateBarrelBezierPts(width, height, centerX, centerY) {
	      var hh = height / 2;
	      var hw = width / 2;
	      var xBegin = centerX - hw;
	      var xEnd = centerX + hw;
	      var yBegin = centerY - hh;
	      var yEnd = centerY + hh;

	      var curveConstants = math.getBarrelCurveConstants(width, height);
	      var hOffset = curveConstants.heightOffset;
	      var wOffset = curveConstants.widthOffset;
	      var ctrlPtXOffset = curveConstants.ctrlPtOffsetPct * width;

	      // points are in clockwise order, inner (imaginary) control pt on [4, 5]
	      var pts = {
	        topLeft: [xBegin, yBegin + hOffset, xBegin + ctrlPtXOffset, yBegin, xBegin + wOffset, yBegin],
	        topRight: [xEnd - wOffset, yBegin, xEnd - ctrlPtXOffset, yBegin, xEnd, yBegin + hOffset],
	        bottomRight: [xEnd, yEnd - hOffset, xEnd - ctrlPtXOffset, yEnd, xEnd - wOffset, yEnd],
	        bottomLeft: [xBegin + wOffset, yEnd, xBegin + ctrlPtXOffset, yEnd, xBegin, yEnd - hOffset]
	      };

	      pts.topLeft.isTop = true;
	      pts.topRight.isTop = true;
	      pts.bottomLeft.isBottom = true;
	      pts.bottomRight.isBottom = true;

	      return pts;
	    },

	    checkPoint: function checkPoint(x, y, padding, width, height, centerX, centerY) {

	      var curveConstants = math.getBarrelCurveConstants(width, height);
	      var hOffset = curveConstants.heightOffset;
	      var wOffset = curveConstants.widthOffset;

	      // Check hBox
	      if (math.pointInsidePolygon(x, y, this.points, centerX, centerY, width, height - 2 * hOffset, [0, -1], padding)) {
	        return true;
	      }

	      // Check vBox
	      if (math.pointInsidePolygon(x, y, this.points, centerX, centerY, width - 2 * wOffset, height, [0, -1], padding)) {
	        return true;
	      }

	      var barrelCurvePts = this.generateBarrelBezierPts(width, height, centerX, centerY);

	      var getCurveT = function getCurveT(x, y, curvePts) {
	        var x0 = curvePts[4];
	        var x1 = curvePts[2];
	        var x2 = curvePts[0];
	        var y0 = curvePts[5];
	        // var y1 = curvePts[ 3 ];
	        var y2 = curvePts[1];

	        var xMin = Math.min(x0, x2);
	        var xMax = Math.max(x0, x2);
	        var yMin = Math.min(y0, y2);
	        var yMax = Math.max(y0, y2);

	        if (xMin <= x && x <= xMax && yMin <= y && y <= yMax) {
	          var coeff = math.bezierPtsToQuadCoeff(x0, x1, x2);
	          var roots = math.solveQuadratic(coeff[0], coeff[1], coeff[2], x);

	          var validRoots = roots.filter(function (r) {
	            return 0 <= r && r <= 1;
	          });

	          if (validRoots.length > 0) {
	            return validRoots[0];
	          }
	        }
	        return null;
	      };

	      var curveRegions = Object.keys(barrelCurvePts);
	      for (var i = 0; i < curveRegions.length; i++) {
	        var corner = curveRegions[i];
	        var cornerPts = barrelCurvePts[corner];
	        var t = getCurveT(x, y, cornerPts);

	        if (t == null) {
	          continue;
	        }

	        var y0 = cornerPts[5];
	        var y1 = cornerPts[3];
	        var y2 = cornerPts[1];
	        var bezY = math.qbezierAt(y0, y1, y2, t);

	        if (cornerPts.isTop && bezY <= y) {
	          return true;
	        }
	        if (cornerPts.isBottom && y <= bezY) {
	          return true;
	        }
	      }
	      return false;
	    }
	  };
	};

	BRp.generateBottomRoundrectangle = function () {
	  return this.nodeShapes['bottomroundrectangle'] = {
	    renderer: this,

	    name: 'bottomroundrectangle',

	    points: math.generateUnitNgonPointsFitToSquare(4, 0),

	    draw: function draw(context, centerX, centerY, width, height) {
	      this.renderer.nodeShapeImpl(this.name, context, centerX, centerY, width, height);
	    },

	    intersectLine: function intersectLine(nodeX, nodeY, width, height, x, y, padding) {
	      var topStartX = nodeX - (width / 2 + padding);
	      var topStartY = nodeY - (height / 2 + padding);
	      var topEndY = topStartY;
	      var topEndX = nodeX + (width / 2 + padding);

	      var topIntersections = math.finiteLinesIntersect(x, y, nodeX, nodeY, topStartX, topStartY, topEndX, topEndY, false);
	      if (topIntersections.length > 0) {
	        return topIntersections;
	      }

	      return math.roundRectangleIntersectLine(x, y, nodeX, nodeY, width, height, padding);
	    },

	    checkPoint: function checkPoint(x, y, padding, width, height, centerX, centerY) {

	      var cornerRadius = math.getRoundRectangleRadius(width, height);
	      var diam = 2 * cornerRadius;

	      // Check hBox
	      if (math.pointInsidePolygon(x, y, this.points, centerX, centerY, width, height - diam, [0, -1], padding)) {
	        return true;
	      }

	      // Check vBox
	      if (math.pointInsidePolygon(x, y, this.points, centerX, centerY, width - diam, height, [0, -1], padding)) {
	        return true;
	      }

	      // check non-rounded top side
	      var outerWidth = width / 2 + 2 * padding;
	      var outerHeight = height / 2 + 2 * padding;
	      var points = [centerX - outerWidth, centerY - outerHeight, centerX - outerWidth, centerY, centerX + outerWidth, centerY, centerX + outerWidth, centerY - outerHeight];
	      if (math.pointInsidePolygonPoints(x, y, points)) {
	        return true;
	      }

	      // Check bottom right quarter circle
	      if (math.checkInEllipse(x, y, diam, diam, centerX + width / 2 - cornerRadius, centerY + height / 2 - cornerRadius, padding)) {

	        return true;
	      }

	      // Check bottom left quarter circle
	      if (math.checkInEllipse(x, y, diam, diam, centerX - width / 2 + cornerRadius, centerY + height / 2 - cornerRadius, padding)) {

	        return true;
	      }

	      return false;
	    }
	  };
	};

	BRp.registerNodeShapes = function () {
	  var nodeShapes = this.nodeShapes = {};
	  var renderer = this;

	  this.generateEllipse();

	  this.generatePolygon('triangle', math.generateUnitNgonPointsFitToSquare(3, 0));

	  this.generatePolygon('rectangle', math.generateUnitNgonPointsFitToSquare(4, 0));
	  nodeShapes['square'] = nodeShapes['rectangle'];

	  this.generateRoundRectangle();

	  this.generateCutRectangle();

	  this.generateBarrel();

	  this.generateBottomRoundrectangle();

	  this.generatePolygon('diamond', [0, 1, 1, 0, 0, -1, -1, 0]);

	  this.generatePolygon('pentagon', math.generateUnitNgonPointsFitToSquare(5, 0));

	  this.generatePolygon('hexagon', math.generateUnitNgonPointsFitToSquare(6, 0));

	  this.generatePolygon('heptagon', math.generateUnitNgonPointsFitToSquare(7, 0));

	  this.generatePolygon('octagon', math.generateUnitNgonPointsFitToSquare(8, 0));

	  var star5Points = new Array(20);
	  {
	    var outerPoints = math.generateUnitNgonPoints(5, 0);
	    var innerPoints = math.generateUnitNgonPoints(5, Math.PI / 5);

	    // Outer radius is 1; inner radius of star is smaller
	    var innerRadius = 0.5 * (3 - Math.sqrt(5));
	    innerRadius *= 1.57;

	    for (var i = 0; i < innerPoints.length / 2; i++) {
	      innerPoints[i * 2] *= innerRadius;
	      innerPoints[i * 2 + 1] *= innerRadius;
	    }

	    for (var i = 0; i < 20 / 4; i++) {
	      star5Points[i * 4] = outerPoints[i * 2];
	      star5Points[i * 4 + 1] = outerPoints[i * 2 + 1];

	      star5Points[i * 4 + 2] = innerPoints[i * 2];
	      star5Points[i * 4 + 3] = innerPoints[i * 2 + 1];
	    }
	  }

	  star5Points = math.fitPolygonToSquare(star5Points);

	  this.generatePolygon('star', star5Points);

	  this.generatePolygon('vee', [-1, -1, 0, -0.333, 1, -1, 0, 1]);

	  this.generatePolygon('rhomboid', [-1, -1, 0.333, -1, 1, 1, -0.333, 1]);

	  this.generatePolygon('concavehexagon', [-1, -0.95, -0.75, 0, -1, 0.95, 1, 0.95, 0.75, 0, 1, -0.95]);

	  this.generatePolygon('tag', [-1, -1, 0.25, -1, 1, 0, 0.25, 1, -1, 1]);

	  nodeShapes.makePolygon = function (points) {

	    // use caching on user-specified polygons so they are as fast as native shapes

	    var key = points.join('$');
	    var name = 'polygon-' + key;
	    var shape;

	    if (shape = this[name]) {
	      // got cached shape
	      return shape;
	    }

	    // create and cache new shape
	    return renderer.generatePolygon(name, points);
	  };
	};

	module.exports = BRp;

	/***/ }),
	/* 122 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);

	var BRp = {};

	BRp.timeToRender = function () {
	  return this.redrawTotalTime / this.redrawCount;
	};

	BRp.redraw = function (options) {
	  options = options || util.staticEmptyObject();

	  var r = this;

	  if (r.averageRedrawTime === undefined) {
	    r.averageRedrawTime = 0;
	  }
	  if (r.lastRedrawTime === undefined) {
	    r.lastRedrawTime = 0;
	  }
	  if (r.lastDrawTime === undefined) {
	    r.lastDrawTime = 0;
	  }

	  r.requestedFrame = true;
	  r.renderOptions = options;
	};

	BRp.beforeRender = function (fn, priority) {
	  // the renderer can't add tick callbacks when destroyed
	  if (this.destroyed) {
	    return;
	  }

	  priority = priority || 0;

	  var cbs = this.beforeRenderCallbacks;

	  cbs.push({ fn: fn, priority: priority });

	  // higher priority callbacks executed first
	  cbs.sort(function (a, b) {
	    return b.priority - a.priority;
	  });
	};

	var beforeRenderCallbacks = function beforeRenderCallbacks(r, willDraw, startTime) {
	  var cbs = r.beforeRenderCallbacks;

	  for (var i = 0; i < cbs.length; i++) {
	    cbs[i].fn(willDraw, startTime);
	  }
	};

	BRp.startRenderLoop = function () {
	  var r = this;

	  if (r.renderLoopStarted) {
	    return;
	  } else {
	    r.renderLoopStarted = true;
	  }

	  var renderFn = function renderFn(requestTime) {
	    if (r.destroyed) {
	      return;
	    }

	    if (r.requestedFrame && !r.skipFrame) {
	      beforeRenderCallbacks(r, true, requestTime);

	      var startTime = util.performanceNow();

	      r.render(r.renderOptions);

	      var endTime = r.lastDrawTime = util.performanceNow();

	      if (r.averageRedrawTime === undefined) {
	        r.averageRedrawTime = endTime - startTime;
	      }

	      if (r.redrawCount === undefined) {
	        r.redrawCount = 0;
	      }

	      r.redrawCount++;

	      if (r.redrawTotalTime === undefined) {
	        r.redrawTotalTime = 0;
	      }

	      var duration = endTime - startTime;

	      r.redrawTotalTime += duration;
	      r.lastRedrawTime = duration;

	      // use a weighted average with a bias from the previous average so we don't spike so easily
	      r.averageRedrawTime = r.averageRedrawTime / 2 + duration / 2;

	      r.requestedFrame = false;
	    } else {
	      beforeRenderCallbacks(r, false, requestTime);
	    }

	    r.skipFrame = false;

	    util.requestAnimationFrame(renderFn);
	  };

	  util.requestAnimationFrame(renderFn);
	};

	module.exports = BRp;

	/***/ }),
	/* 123 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	/*
	The canvas renderer was written by Yue Dong.

	Modifications tracked on Github.
	*/

	var util = __webpack_require__(1);
	var is = __webpack_require__(0);
	var ElementTextureCache = __webpack_require__(124);
	var LayeredTextureCache = __webpack_require__(125);

	var CR = CanvasRenderer;
	var CRp = CanvasRenderer.prototype;

	CRp.CANVAS_LAYERS = 3;
	//
	CRp.SELECT_BOX = 0;
	CRp.DRAG = 1;
	CRp.NODE = 2;

	CRp.BUFFER_COUNT = 3;
	//
	CRp.TEXTURE_BUFFER = 0;
	CRp.MOTIONBLUR_BUFFER_NODE = 1;
	CRp.MOTIONBLUR_BUFFER_DRAG = 2;

	function CanvasRenderer(options) {
	  var r = this;

	  r.data = {
	    canvases: new Array(CRp.CANVAS_LAYERS),
	    contexts: new Array(CRp.CANVAS_LAYERS),
	    canvasNeedsRedraw: new Array(CRp.CANVAS_LAYERS),

	    bufferCanvases: new Array(CRp.BUFFER_COUNT),
	    bufferContexts: new Array(CRp.CANVAS_LAYERS)
	  };

	  var tapHlOff = '-webkit-tap-highlight-color: rgba(0,0,0,0);';

	  r.data.canvasContainer = document.createElement('div'); // eslint-disable-line no-undef
	  var containerStyle = r.data.canvasContainer.style;
	  r.data.canvasContainer.setAttribute('style', tapHlOff);
	  containerStyle.position = 'relative';
	  containerStyle.zIndex = '0';
	  containerStyle.overflow = 'hidden';

	  var container = options.cy.container();
	  container.appendChild(r.data.canvasContainer);

	  if ((container.getAttribute('style') || '').indexOf(tapHlOff) < 0) {
	    container.setAttribute('style', (container.getAttribute('style') || '') + tapHlOff);
	  }

	  for (var i = 0; i < CRp.CANVAS_LAYERS; i++) {
	    var canvas = r.data.canvases[i] = document.createElement('canvas'); // eslint-disable-line no-undef
	    r.data.contexts[i] = canvas.getContext('2d');
	    canvas.setAttribute('style', '-webkit-user-select: none; -moz-user-select: -moz-none; user-select: none; -webkit-tap-highlight-color: rgba(0,0,0,0); outline-style: none;' + (is.ms() ? ' -ms-touch-action: none; touch-action: none; ' : ''));
	    canvas.style.position = 'absolute';
	    canvas.setAttribute('data-id', 'layer' + i);
	    canvas.style.zIndex = String(CRp.CANVAS_LAYERS - i);
	    r.data.canvasContainer.appendChild(canvas);

	    r.data.canvasNeedsRedraw[i] = false;
	  }
	  r.data.topCanvas = r.data.canvases[0];

	  r.data.canvases[CRp.NODE].setAttribute('data-id', 'layer' + CRp.NODE + '-node');
	  r.data.canvases[CRp.SELECT_BOX].setAttribute('data-id', 'layer' + CRp.SELECT_BOX + '-selectbox');
	  r.data.canvases[CRp.DRAG].setAttribute('data-id', 'layer' + CRp.DRAG + '-drag');

	  for (var i = 0; i < CRp.BUFFER_COUNT; i++) {
	    r.data.bufferCanvases[i] = document.createElement('canvas'); // eslint-disable-line no-undef
	    r.data.bufferContexts[i] = r.data.bufferCanvases[i].getContext('2d');
	    r.data.bufferCanvases[i].style.position = 'absolute';
	    r.data.bufferCanvases[i].setAttribute('data-id', 'buffer' + i);
	    r.data.bufferCanvases[i].style.zIndex = String(-i - 1);
	    r.data.bufferCanvases[i].style.visibility = 'hidden';
	    //r.data.canvasContainer.appendChild(r.data.bufferCanvases[i]);
	  }

	  r.pathsEnabled = true;

	  r.data.eleTxrCache = new ElementTextureCache(r);
	  r.data.lyrTxrCache = new LayeredTextureCache(r, r.data.eleTxrCache);

	  r.onUpdateEleCalcs(function invalidateTextureCaches(willDraw, eles) {
	    for (var i = 0; i < eles.length; i++) {
	      var ele = eles[i];
	      var rs = ele._private.rstyle;
	      var de = rs.dirtyEvents;

	      if (ele.isNode() && de && de.length === 1 && de['position']) {
	        // then keep cached ele texture
	      } else {
	        r.data.eleTxrCache.invalidateElement(ele);

	        // NB this block of code should not be ported to 3.3 (unstable branch).
	        // - This check is unneccesary in 3.3 as caches will be stored without respect to opacity.
	        // - This fix may result in lowered performance for compound graphs.
	        // - Ref : Opacity of child node is not updated for certain zoom levels after parent opacity is overriden #2078
	        if (ele.isParent() && de['style']) {
	          var op1 = rs.prevParentOpacity;
	          var op2 = ele.pstyle('opacity').pfValue;

	          rs.prevParentOpacity = op2;

	          if (op1 !== op2) {
	            var descs = ele.descendants();

	            for (var j = 0; j < descs.length; j++) {
	              r.data.eleTxrCache.invalidateElement(descs[j]);
	            }
	          }
	        }
	      }
	    }

	    if (eles.length > 0) {
	      r.data.lyrTxrCache.invalidateElements(eles);
	    }
	  });
	}

	CRp.redrawHint = function (group, bool) {
	  var r = this;

	  switch (group) {
	    case 'eles':
	      r.data.canvasNeedsRedraw[CRp.NODE] = bool;
	      break;
	    case 'drag':
	      r.data.canvasNeedsRedraw[CRp.DRAG] = bool;
	      break;
	    case 'select':
	      r.data.canvasNeedsRedraw[CRp.SELECT_BOX] = bool;
	      break;
	  }
	};

	// whether to use Path2D caching for drawing
	var pathsImpld = typeof Path2D !== 'undefined';

	CRp.path2dEnabled = function (on) {
	  if (on === undefined) {
	    return this.pathsEnabled;
	  }

	  this.pathsEnabled = on ? true : false;
	};

	CRp.usePaths = function () {
	  return pathsImpld && this.pathsEnabled;
	};

	[__webpack_require__(126), __webpack_require__(127), __webpack_require__(128), __webpack_require__(129), __webpack_require__(130), __webpack_require__(131), __webpack_require__(132), __webpack_require__(133), __webpack_require__(134), __webpack_require__(135)].forEach(function (props) {
	  util.extend(CRp, props);
	});

	module.exports = CR;

	/***/ }),
	/* 124 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var math = __webpack_require__(2);
	var util = __webpack_require__(1);
	var Heap = __webpack_require__(9);
	var defs = __webpack_require__(19);

	var minTxrH = 25; // the size of the texture cache for small height eles (special case)
	var txrStepH = 50; // the min size of the regular cache, and the size it increases with each step up
	var minLvl = -4; // when scaling smaller than that we don't need to re-render
	var maxLvl = 2; // when larger than this scale just render directly (caching is not helpful)
	var maxZoom = 3.99; // beyond this zoom level, layered textures are not used
	var eleTxrSpacing = 8; // spacing between elements on textures to avoid blitting overlaps
	var defTxrWidth = 1024; // default/minimum texture width
	var maxTxrW = 1024; // the maximum width of a texture
	var maxTxrH = 1024; // the maximum height of a texture
	var minUtility = 0.5; // if usage of texture is less than this, it is retired
	var maxFullness = 0.8; // fullness of texture after which queue removal is checked
	var maxFullnessChecks = 10; // dequeued after this many checks
	var allowEdgeTxrCaching = false; // whether edges can be cached as textures (TODO maybe better on if webgl supported?)
	var allowParentTxrCaching = false; // whether parent nodes can be cached as textures (TODO maybe better on if webgl supported?)
	var deqCost = 0.15; // % of add'l rendering cost allowed for dequeuing ele caches each frame
	var deqAvgCost = 0.1; // % of add'l rendering cost compared to average overall redraw time
	var deqNoDrawCost = 0.9; // % of avg frame time that can be used for dequeueing when not drawing
	var deqFastCost = 0.9; // % of frame time to be used when >60fps
	var deqRedrawThreshold = 100; // time to batch redraws together from dequeueing to allow more dequeueing calcs to happen in the meanwhile
	var maxDeqSize = 1; // number of eles to dequeue and render at higher texture in each batch

	var getTxrReasons = {
	  dequeue: 'dequeue',
	  downscale: 'downscale',
	  highQuality: 'highQuality'
	};

	var ElementTextureCache = function ElementTextureCache(renderer) {
	  var self = this;

	  self.renderer = renderer;
	  self.onDequeues = [];

	  self.setupDequeueing();
	};

	var ETCp = ElementTextureCache.prototype;

	ETCp.reasons = getTxrReasons;

	// the list of textures in which new subtextures for elements can be placed
	ETCp.getTextureQueue = function (txrH) {
	  var self = this;
	  self.eleImgCaches = self.eleImgCaches || {};

	  return self.eleImgCaches[txrH] = self.eleImgCaches[txrH] || [];
	};

	// the list of usused textures which can be recycled (in use in texture queue)
	ETCp.getRetiredTextureQueue = function (txrH) {
	  var self = this;

	  var rtxtrQs = self.eleImgCaches.retired = self.eleImgCaches.retired || {};
	  var rtxtrQ = rtxtrQs[txrH] = rtxtrQs[txrH] || [];

	  return rtxtrQ;
	};

	// queue of element draw requests at different scale levels
	ETCp.getElementQueue = function () {
	  var self = this;

	  var q = self.eleCacheQueue = self.eleCacheQueue || new Heap(function (a, b) {
	    return b.reqs - a.reqs;
	  });

	  return q;
	};

	// queue of element draw requests at different scale levels (element id lookup)
	ETCp.getElementIdToQueue = function () {
	  var self = this;

	  var id2q = self.eleIdToCacheQueue = self.eleIdToCacheQueue || {};

	  return id2q;
	};

	ETCp.getElement = function (ele, bb, pxRatio, lvl, reason) {
	  var self = this;
	  var r = this.renderer;
	  var rs = ele._private.rscratch;
	  var zoom = r.cy.zoom();

	  if (bb.w === 0 || bb.h === 0 || !ele.visible()) {
	    return null;
	  }

	  if (lvl == null) {
	    lvl = Math.ceil(math.log2(zoom * pxRatio));
	  }

	  if (lvl < minLvl) {
	    lvl = minLvl;
	  } else if (zoom >= maxZoom || lvl > maxLvl) {
	    return null;
	  }

	  var scale = Math.pow(2, lvl);
	  var eleScaledH = bb.h * scale;
	  var eleScaledW = bb.w * scale;
	  var caches = rs.imgCaches = rs.imgCaches || {};
	  var eleCache = caches[lvl];

	  if (eleCache) {
	    return eleCache;
	  }

	  var txrH; // which texture height this ele belongs to

	  if (eleScaledH <= minTxrH) {
	    txrH = minTxrH;
	  } else if (eleScaledH <= txrStepH) {
	    txrH = txrStepH;
	  } else {
	    txrH = Math.ceil(eleScaledH / txrStepH) * txrStepH;
	  }

	  if (eleScaledH > maxTxrH || eleScaledW > maxTxrW || !allowEdgeTxrCaching && ele.isEdge() || !allowParentTxrCaching && ele.isParent()) {
	    return null; // caching large elements is not efficient
	  }

	  var txrQ = self.getTextureQueue(txrH);

	  // first try the second last one in case it has space at the end
	  var txr = txrQ[txrQ.length - 2];

	  var addNewTxr = function addNewTxr() {
	    return self.recycleTexture(txrH, eleScaledW) || self.addTexture(txrH, eleScaledW);
	  };

	  // try the last one if there is no second last one
	  if (!txr) {
	    txr = txrQ[txrQ.length - 1];
	  }

	  // if the last one doesn't exist, we need a first one
	  if (!txr) {
	    txr = addNewTxr();
	  }

	  // if there's no room in the current texture, we need a new one
	  if (txr.width - txr.usedWidth < eleScaledW) {
	    txr = addNewTxr();
	  }

	  var scaledLabelShown = r.eleTextBiggerThanMin(ele, scale);
	  var scalableFrom = function scalableFrom(otherCache) {
	    return otherCache && otherCache.scaledLabelShown === scaledLabelShown;
	  };

	  var deqing = reason && reason === getTxrReasons.dequeue;
	  var highQualityReq = reason && reason === getTxrReasons.highQuality;
	  var downscaleReq = reason && reason === getTxrReasons.downscale;

	  var higherCache; // the nearest cache with a higher level
	  for (var l = lvl + 1; l <= maxLvl; l++) {
	    var c = caches[l];

	    if (c) {
	      higherCache = c;break;
	    }
	  }

	  var oneUpCache = higherCache && higherCache.level === lvl + 1 ? higherCache : null;

	  var downscale = function downscale() {
	    txr.context.drawImage(oneUpCache.texture.canvas, oneUpCache.x, 0, oneUpCache.width, oneUpCache.height, txr.usedWidth, 0, eleScaledW, eleScaledH);
	  };

	  // reset ele area in texture
	  txr.context.setTransform(1, 0, 0, 1, 0, 0);
	  txr.context.clearRect(txr.usedWidth, 0, eleScaledW, txrH);

	  if (scalableFrom(oneUpCache)) {
	    // then we can relatively cheaply rescale the existing image w/o rerendering
	    downscale();
	  } else if (scalableFrom(higherCache)) {
	    // then use the higher cache for now and queue the next level down
	    // to cheaply scale towards the smaller level

	    if (highQualityReq) {
	      for (var l = higherCache.level; l > lvl; l--) {
	        oneUpCache = self.getElement(ele, bb, pxRatio, l, getTxrReasons.downscale);
	      }

	      downscale();
	    } else {
	      self.queueElement(ele, higherCache.level - 1);

	      return higherCache;
	    }
	  } else {

	    var lowerCache; // the nearest cache with a lower level
	    if (!deqing && !highQualityReq && !downscaleReq) {
	      for (var l = lvl - 1; l >= minLvl; l--) {
	        var c = caches[l];

	        if (c) {
	          lowerCache = c;break;
	        }
	      }
	    }

	    if (scalableFrom(lowerCache)) {
	      // then use the lower quality cache for now and queue the better one for later

	      self.queueElement(ele, lvl);

	      return lowerCache;
	    }

	    txr.context.translate(txr.usedWidth, 0);
	    txr.context.scale(scale, scale);

	    r.drawElement(txr.context, ele, bb, scaledLabelShown);

	    txr.context.scale(1 / scale, 1 / scale);
	    txr.context.translate(-txr.usedWidth, 0);
	  }

	  eleCache = caches[lvl] = {
	    ele: ele,
	    x: txr.usedWidth,
	    texture: txr,
	    level: lvl,
	    scale: scale,
	    width: eleScaledW,
	    height: eleScaledH,
	    scaledLabelShown: scaledLabelShown
	  };

	  txr.usedWidth += Math.ceil(eleScaledW + eleTxrSpacing);

	  txr.eleCaches.push(eleCache);

	  self.checkTextureFullness(txr);

	  return eleCache;
	};

	ETCp.invalidateElement = function (ele) {
	  var self = this;
	  var caches = ele._private.rscratch.imgCaches;

	  if (caches) {
	    for (var lvl = minLvl; lvl <= maxLvl; lvl++) {
	      var cache = caches[lvl];

	      if (cache) {
	        var txr = cache.texture;

	        // remove space from the texture it belongs to
	        txr.invalidatedWidth += cache.width;

	        // remove refs with the element
	        caches[lvl] = null;
	        util.removeFromArray(txr.eleCaches, cache);

	        // remove from queue since the old req was for the old state
	        self.removeFromQueue(ele);

	        // might have to remove the entire texture if it's not efficiently using its space
	        self.checkTextureUtility(txr);
	      }
	    }
	  }
	};

	ETCp.checkTextureUtility = function (txr) {
	  // invalidate all entries in the cache if the cache size is small
	  if (txr.invalidatedWidth >= minUtility * txr.width) {
	    this.retireTexture(txr);
	  }
	};

	ETCp.checkTextureFullness = function (txr) {
	  // if texture has been mostly filled and passed over several times, remove
	  // it from the queue so we don't need to waste time looking at it to put new things

	  var self = this;
	  var txrQ = self.getTextureQueue(txr.height);

	  if (txr.usedWidth / txr.width > maxFullness && txr.fullnessChecks >= maxFullnessChecks) {
	    util.removeFromArray(txrQ, txr);
	  } else {
	    txr.fullnessChecks++;
	  }
	};

	ETCp.retireTexture = function (txr) {
	  var self = this;
	  var txrH = txr.height;
	  var txrQ = self.getTextureQueue(txrH);

	  // retire the texture from the active / searchable queue:

	  util.removeFromArray(txrQ, txr);

	  txr.retired = true;

	  // remove the refs from the eles to the caches:

	  var eleCaches = txr.eleCaches;

	  for (var i = 0; i < eleCaches.length; i++) {
	    var eleCache = eleCaches[i];
	    var ele = eleCache.ele;
	    var lvl = eleCache.level;
	    var imgCaches = ele._private.rscratch.imgCaches;

	    if (imgCaches) {
	      imgCaches[lvl] = null;
	    }
	  }

	  util.clearArray(eleCaches);

	  // add the texture to a retired queue so it can be recycled in future:

	  var rtxtrQ = self.getRetiredTextureQueue(txrH);

	  rtxtrQ.push(txr);
	};

	ETCp.addTexture = function (txrH, minW) {
	  var self = this;
	  var txrQ = self.getTextureQueue(txrH);
	  var txr = {};

	  txrQ.push(txr);

	  txr.eleCaches = [];

	  txr.height = txrH;
	  txr.width = Math.max(defTxrWidth, minW);
	  txr.usedWidth = 0;
	  txr.invalidatedWidth = 0;
	  txr.fullnessChecks = 0;

	  txr.canvas = document.createElement('canvas'); // eslint-disable-line no-undef
	  txr.canvas.width = txr.width;
	  txr.canvas.height = txr.height;

	  txr.context = txr.canvas.getContext('2d');

	  return txr;
	};

	ETCp.recycleTexture = function (txrH, minW) {
	  var self = this;
	  var txrQ = self.getTextureQueue(txrH);
	  var rtxtrQ = self.getRetiredTextureQueue(txrH);

	  for (var i = 0; i < rtxtrQ.length; i++) {
	    var txr = rtxtrQ[i];

	    if (txr.width >= minW) {
	      txr.retired = false;

	      txr.usedWidth = 0;
	      txr.invalidatedWidth = 0;
	      txr.fullnessChecks = 0;

	      util.clearArray(txr.eleCaches);

	      txr.context.setTransform(1, 0, 0, 1, 0, 0);
	      txr.context.clearRect(0, 0, txr.width, txr.height);

	      util.removeFromArray(rtxtrQ, txr);
	      txrQ.push(txr);

	      return txr;
	    }
	  }
	};

	ETCp.queueElement = function (ele, lvl) {
	  var self = this;
	  var q = self.getElementQueue();
	  var id2q = self.getElementIdToQueue();
	  var id = ele.id();
	  var existingReq = id2q[id];

	  if (existingReq) {
	    // use the max lvl b/c in between lvls are cheap to make
	    existingReq.level = Math.max(existingReq.level, lvl);
	    existingReq.reqs++;

	    q.updateItem(existingReq);
	  } else {
	    var req = {
	      ele: ele,
	      level: lvl,
	      reqs: 1
	    };

	    q.push(req);

	    id2q[id] = req;
	  }
	};

	ETCp.dequeue = function (pxRatio /*, extent*/) {
	  var self = this;
	  var q = self.getElementQueue();
	  var id2q = self.getElementIdToQueue();
	  var dequeued = [];

	  for (var i = 0; i < maxDeqSize; i++) {
	    if (q.size() > 0) {
	      var req = q.pop();
	      var ele = req.ele;
	      var caches = ele._private.rscratch.imgCaches;

	      // dequeueing isn't necessary when an existing cache exists
	      if (caches[req.level] != null) {
	        continue;
	      }

	      id2q[ele.id()] = null;

	      dequeued.push(req);

	      var bb = ele.boundingBox();

	      self.getElement(ele, bb, pxRatio, req.level, getTxrReasons.dequeue);
	    } else {
	      break;
	    }
	  }

	  return dequeued;
	};

	ETCp.removeFromQueue = function (ele) {
	  var self = this;
	  var q = self.getElementQueue();
	  var id2q = self.getElementIdToQueue();
	  var req = id2q[ele.id()];

	  if (req != null) {
	    // bring to front of queue
	    req.reqs = util.MAX_INT;
	    q.updateItem(req);

	    q.pop(); // remove from queue

	    id2q[ele.id()] = null; // remove from lookup map
	  }
	};

	ETCp.onDequeue = function (fn) {
	  this.onDequeues.push(fn);
	};
	ETCp.offDequeue = function (fn) {
	  util.removeFromArray(this.onDequeues, fn);
	};

	ETCp.setupDequeueing = defs.setupDequeueing({
	  deqRedrawThreshold: deqRedrawThreshold,
	  deqCost: deqCost,
	  deqAvgCost: deqAvgCost,
	  deqNoDrawCost: deqNoDrawCost,
	  deqFastCost: deqFastCost,
	  deq: function deq(self, pxRatio, extent) {
	    return self.dequeue(pxRatio, extent);
	  },
	  onDeqd: function onDeqd(self, deqd) {
	    for (var i = 0; i < self.onDequeues.length; i++) {
	      var fn = self.onDequeues[i];

	      fn(deqd);
	    }
	  },
	  shouldRedraw: function shouldRedraw(self, deqd, pxRatio, extent) {
	    for (var i = 0; i < deqd.length; i++) {
	      var bb = deqd[i].ele.boundingBox();

	      if (math.boundingBoxesIntersect(bb, extent)) {
	        return true;
	      }
	    }

	    return false;
	  },
	  priority: function priority(self) {
	    return self.renderer.beforeRenderPriorities.eleTxrDeq;
	  }
	});

	module.exports = ElementTextureCache;

	/***/ }),
	/* 125 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var math = __webpack_require__(2);
	var Heap = __webpack_require__(9);
	var is = __webpack_require__(0);
	var defs = __webpack_require__(19);

	var defNumLayers = 1; // default number of layers to use
	var minLvl = -4; // when scaling smaller than that we don't need to re-render
	var maxLvl = 2; // when larger than this scale just render directly (caching is not helpful)
	var maxZoom = 3.99; // beyond this zoom level, layered textures are not used
	var deqRedrawThreshold = 50; // time to batch redraws together from dequeueing to allow more dequeueing calcs to happen in the meanwhile
	var refineEleDebounceTime = 50; // time to debounce sharper ele texture updates
	var disableEleImgSmoothing = true; // when drawing eles on layers from an ele cache ; crisper and more performant when true
	var deqCost = 0.15; // % of add'l rendering cost allowed for dequeuing ele caches each frame
	var deqAvgCost = 0.1; // % of add'l rendering cost compared to average overall redraw time
	var deqNoDrawCost = 0.9; // % of avg frame time that can be used for dequeueing when not drawing
	var deqFastCost = 0.9; // % of frame time to be used when >60fps
	var maxDeqSize = 1; // number of eles to dequeue and render at higher texture in each batch
	var invalidThreshold = 250; // time threshold for disabling b/c of invalidations
	var maxLayerArea = 4000 * 4000; // layers can't be bigger than this
	var alwaysQueue = true; // never draw all the layers in a level on a frame; draw directly until all dequeued
	var useHighQualityEleTxrReqs = true; // whether to use high quality ele txr requests (generally faster and cheaper in the longterm)

	var useEleTxrCaching = true; // whether to use individual ele texture caching underneath this cache

	// var log = function(){ console.log.apply( console, arguments ); };

	var LayeredTextureCache = function LayeredTextureCache(renderer, eleTxrCache) {
	  var self = this;

	  var r = self.renderer = renderer;

	  self.layersByLevel = {}; // e.g. 2 => [ layer1, layer2, ..., layerN ]

	  self.firstGet = true;

	  self.lastInvalidationTime = util.performanceNow() - 2 * invalidThreshold;

	  self.skipping = false;

	  r.beforeRender(function (willDraw, now) {
	    if (now - self.lastInvalidationTime <= invalidThreshold) {
	      self.skipping = true;
	    } else {
	      self.skipping = false;
	    }
	  });

	  var qSort = function qSort(a, b) {
	    return b.reqs - a.reqs;
	  };

	  self.layersQueue = new Heap(qSort);

	  self.eleTxrCache = eleTxrCache;

	  self.setupEleCacheInvalidation();

	  self.setupDequeueing();
	};

	var LTCp = LayeredTextureCache.prototype;

	var layerIdPool = 0;
	var MAX_INT = Math.pow(2, 53) - 1;

	LTCp.makeLayer = function (bb, lvl) {
	  var scale = Math.pow(2, lvl);

	  var w = Math.ceil(bb.w * scale);
	  var h = Math.ceil(bb.h * scale);

	  var canvas = document.createElement('canvas'); // eslint-disable-line no-undef

	  canvas.width = w;
	  canvas.height = h;

	  var layer = {
	    id: layerIdPool = ++layerIdPool % MAX_INT,
	    bb: bb,
	    level: lvl,
	    width: w,
	    height: h,
	    canvas: canvas,
	    context: canvas.getContext('2d'),
	    eles: [],
	    elesQueue: [],
	    reqs: 0
	  };

	  // log('make layer %s with w %s and h %s and lvl %s', layer.id, layer.width, layer.height, layer.level);

	  var cxt = layer.context;
	  var dx = -layer.bb.x1;
	  var dy = -layer.bb.y1;

	  // do the transform on creation to save cycles (it's the same for all eles)
	  cxt.scale(scale, scale);
	  cxt.translate(dx, dy);

	  return layer;
	};

	LTCp.getLayers = function (eles, pxRatio, lvl) {
	  var self = this;
	  var r = self.renderer;
	  var cy = r.cy;
	  var zoom = cy.zoom();
	  var firstGet = self.firstGet;

	  self.firstGet = false;

	  // log('--\nget layers with %s eles', eles.length);
	  //log eles.map(function(ele){ return ele.id() }) );

	  if (lvl == null) {
	    lvl = Math.ceil(math.log2(zoom * pxRatio));

	    if (lvl < minLvl) {
	      lvl = minLvl;
	    } else if (zoom >= maxZoom || lvl > maxLvl) {
	      return null;
	    }
	  }

	  self.validateLayersElesOrdering(lvl, eles);

	  var layersByLvl = self.layersByLevel;
	  var scale = Math.pow(2, lvl);
	  var layers = layersByLvl[lvl] = layersByLvl[lvl] || [];
	  var bb;

	  var lvlComplete = self.levelIsComplete(lvl, eles);
	  var tmpLayers;

	  var checkTempLevels = function checkTempLevels() {
	    var canUseAsTmpLvl = function canUseAsTmpLvl(l) {
	      self.validateLayersElesOrdering(l, eles);

	      if (self.levelIsComplete(l, eles)) {
	        tmpLayers = layersByLvl[l];
	        return true;
	      }
	    };

	    var checkLvls = function checkLvls(dir) {
	      if (tmpLayers) {
	        return;
	      }

	      for (var l = lvl + dir; minLvl <= l && l <= maxLvl; l += dir) {
	        if (canUseAsTmpLvl(l)) {
	          break;
	        }
	      }
	    };

	    checkLvls(+1);
	    checkLvls(-1);

	    // remove the invalid layers; they will be replaced as needed later in this function
	    for (var i = layers.length - 1; i >= 0; i--) {
	      var layer = layers[i];

	      if (layer.invalid) {
	        util.removeFromArray(layers, layer);
	      }
	    }
	  };

	  if (!lvlComplete) {
	    // if the current level is incomplete, then use the closest, best quality layerset temporarily
	    // and later queue the current layerset so we can get the proper quality level soon

	    checkTempLevels();
	  } else {
	    // log('level complete, using existing layers\n--');
	    return layers;
	  }

	  var getBb = function getBb() {
	    if (!bb) {
	      bb = math.makeBoundingBox();

	      for (var i = 0; i < eles.length; i++) {
	        math.updateBoundingBox(bb, eles[i].boundingBox());
	      }
	    }

	    return bb;
	  };

	  var makeLayer = function makeLayer(opts) {
	    opts = opts || {};

	    var after = opts.after;

	    getBb();

	    var area = bb.w * scale * (bb.h * scale);

	    if (area > maxLayerArea) {
	      return null;
	    }

	    var layer = self.makeLayer(bb, lvl);

	    if (after != null) {
	      var index = layers.indexOf(after) + 1;

	      layers.splice(index, 0, layer);
	    } else if (opts.insert === undefined || opts.insert) {
	      // no after specified => first layer made so put at start
	      layers.unshift(layer);
	    }

	    // if( tmpLayers ){
	    //self.queueLayer( layer );
	    // }

	    return layer;
	  };

	  if (self.skipping && !firstGet) {
	    // log('skip layers');
	    return null;
	  }

	  // log('do layers');

	  var layer = null;
	  var maxElesPerLayer = eles.length / defNumLayers;
	  var allowLazyQueueing = alwaysQueue && !firstGet;

	  for (var i = 0; i < eles.length; i++) {
	    var ele = eles[i];
	    var rs = ele._private.rscratch;
	    var caches = rs.imgLayerCaches = rs.imgLayerCaches || {};

	    // log('look at ele', ele.id());

	    var existingLayer = caches[lvl];

	    if (existingLayer) {
	      // reuse layer for later eles
	      // log('reuse layer for', ele.id());
	      layer = existingLayer;
	      continue;
	    }

	    if (!layer || layer.eles.length >= maxElesPerLayer || !math.boundingBoxInBoundingBox(layer.bb, ele.boundingBox())) {
	      // log('make new layer for ele %s', ele.id());

	      layer = makeLayer({ insert: true, after: layer });

	      // if now layer can be built then we can't use layers at this level
	      if (!layer) {
	        return null;
	      }

	      // log('new layer with id %s', layer.id);
	    }

	    if (tmpLayers || allowLazyQueueing) {
	      // log('queue ele %s in layer %s', ele.id(), layer.id);
	      self.queueLayer(layer, ele);
	    } else {
	      // log('draw ele %s in layer %s', ele.id(), layer.id);
	      self.drawEleInLayer(layer, ele, lvl, pxRatio);
	    }

	    layer.eles.push(ele);

	    caches[lvl] = layer;
	  }

	  // log('--');

	  if (tmpLayers) {
	    // then we only queued the current layerset and can't draw it yet
	    return tmpLayers;
	  }

	  if (allowLazyQueueing) {
	    // log('lazy queue level', lvl);
	    return null;
	  }

	  return layers;
	};

	// a layer may want to use an ele cache of a higher level to avoid blurriness
	// so the layer level might not equal the ele level
	LTCp.getEleLevelForLayerLevel = function (lvl, pxRatio) {
	  return lvl;
	};

	function imgSmoothing(context, bool) {
	  if (context.imageSmoothingEnabled != null) {
	    context.imageSmoothingEnabled = bool;
	  } else {
	    context.webkitImageSmoothingEnabled = bool;
	    context.mozImageSmoothingEnabled = bool;
	    context.msImageSmoothingEnabled = bool;
	  }
	}

	LTCp.drawEleInLayer = function (layer, ele, lvl, pxRatio) {
	  var self = this;
	  var r = this.renderer;
	  var context = layer.context;
	  var bb = ele.boundingBox();

	  if (bb.w === 0 || bb.h === 0 || !ele.visible()) {
	    return;
	  }

	  var eleCache = self.eleTxrCache;
	  var reason = useHighQualityEleTxrReqs ? eleCache.reasons.highQuality : undefined;

	  lvl = self.getEleLevelForLayerLevel(lvl, pxRatio);

	  var cache = useEleTxrCaching ? eleCache.getElement(ele, bb, null, lvl, reason) : null;

	  if (cache) {
	    if (disableEleImgSmoothing) {
	      imgSmoothing(context, false);
	    }

	    context.drawImage(cache.texture.canvas, cache.x, 0, cache.width, cache.height, bb.x1, bb.y1, bb.w, bb.h);

	    if (disableEleImgSmoothing) {
	      imgSmoothing(context, true);
	    }
	  } else {
	    // if the element is not cacheable, then draw directly
	    r.drawElement(context, ele);
	  }
	};

	LTCp.levelIsComplete = function (lvl, eles) {
	  var self = this;
	  var layers = self.layersByLevel[lvl];

	  if (!layers || layers.length === 0) {
	    return false;
	  }

	  var numElesInLayers = 0;

	  for (var i = 0; i < layers.length; i++) {
	    var layer = layers[i];

	    // if there are any eles needed to be drawn yet, the level is not complete
	    if (layer.reqs > 0) {
	      return false;
	    }

	    // if the layer is invalid, the level is not complete
	    if (layer.invalid) {
	      return false;
	    }

	    numElesInLayers += layer.eles.length;
	  }

	  // we should have exactly the number of eles passed in to be complete
	  if (numElesInLayers !== eles.length) {
	    return false;
	  }

	  return true;
	};

	LTCp.validateLayersElesOrdering = function (lvl, eles) {
	  var layers = this.layersByLevel[lvl];

	  if (!layers) {
	    return;
	  }

	  // if in a layer the eles are not in the same order, then the layer is invalid
	  // (i.e. there is an ele in between the eles in the layer)

	  for (var i = 0; i < layers.length; i++) {
	    var layer = layers[i];
	    var offset = -1;

	    // find the offset
	    for (var j = 0; j < eles.length; j++) {
	      if (layer.eles[0] === eles[j]) {
	        offset = j;
	        break;
	      }
	    }

	    if (offset < 0) {
	      // then the layer has nonexistant elements and is invalid
	      this.invalidateLayer(layer);
	      continue;
	    }

	    // the eles in the layer must be in the same continuous order, else the layer is invalid

	    var o = offset;

	    for (var j = 0; j < layer.eles.length; j++) {
	      if (layer.eles[j] !== eles[o + j]) {
	        // log('invalidate based on ordering', layer.id);

	        this.invalidateLayer(layer);
	        break;
	      }
	    }
	  }
	};

	LTCp.updateElementsInLayers = function (eles, update) {
	  var self = this;
	  var isEles = is.element(eles[0]);

	  // collect udpated elements (cascaded from the layers) and update each
	  // layer itself along the way
	  for (var i = 0; i < eles.length; i++) {
	    var req = isEles ? null : eles[i];
	    var ele = isEles ? eles[i] : eles[i].ele;
	    var rs = ele._private.rscratch;
	    var caches = rs.imgLayerCaches = rs.imgLayerCaches || {};

	    for (var l = minLvl; l <= maxLvl; l++) {
	      var layer = caches[l];

	      if (!layer) {
	        continue;
	      }

	      // if update is a request from the ele cache, then it affects only
	      // the matching level
	      if (req && self.getEleLevelForLayerLevel(layer.level) !== req.level) {
	        continue;
	      }

	      update(layer, ele, req);
	    }
	  }
	};

	LTCp.haveLayers = function () {
	  var self = this;
	  var haveLayers = false;

	  for (var l = minLvl; l <= maxLvl; l++) {
	    var layers = self.layersByLevel[l];

	    if (layers && layers.length > 0) {
	      haveLayers = true;
	      break;
	    }
	  }

	  return haveLayers;
	};

	LTCp.invalidateElements = function (eles) {
	  var self = this;

	  self.lastInvalidationTime = util.performanceNow();

	  // log('update invalidate layer time from eles');

	  if (eles.length === 0 || !self.haveLayers()) {
	    return;
	  }

	  self.updateElementsInLayers(eles, function invalAssocLayers(layer, ele, req) {
	    self.invalidateLayer(layer);
	  });
	};

	LTCp.invalidateLayer = function (layer) {
	  // log('update invalidate layer time');

	  this.lastInvalidationTime = util.performanceNow();

	  if (layer.invalid) {
	    return;
	  } // save cycles

	  var lvl = layer.level;
	  var eles = layer.eles;
	  var layers = this.layersByLevel[lvl];

	  // log('invalidate layer', layer.id );

	  util.removeFromArray(layers, layer);
	  // layer.eles = [];

	  layer.elesQueue = [];

	  layer.invalid = true;

	  if (layer.replacement) {
	    layer.replacement.invalid = true;
	  }

	  for (var i = 0; i < eles.length; i++) {
	    var caches = eles[i]._private.rscratch.imgLayerCaches;

	    if (caches) {
	      caches[lvl] = null;
	    }
	  }
	};

	LTCp.refineElementTextures = function (eles) {
	  var self = this;

	  // log('refine', eles.length);

	  self.updateElementsInLayers(eles, function refineEachEle(layer, ele, req) {
	    var rLyr = layer.replacement;

	    if (!rLyr) {
	      rLyr = layer.replacement = self.makeLayer(layer.bb, layer.level);
	      rLyr.replaces = layer;
	      rLyr.eles = layer.eles;

	      // log('make replacement layer %s for %s with level %s', rLyr.id, layer.id, rLyr.level);
	    }

	    if (!rLyr.reqs) {
	      for (var i = 0; i < rLyr.eles.length; i++) {
	        self.queueLayer(rLyr, rLyr.eles[i]);
	      }

	      // log('queue replacement layer refinement', rLyr.id);
	    }
	  });
	};

	LTCp.setupEleCacheInvalidation = function () {
	  var self = this;
	  var eleDeqs = [];

	  if (!useEleTxrCaching) {
	    return;
	  }

	  var updatedElesInLayers = util.debounce(function () {
	    self.refineElementTextures(eleDeqs);

	    eleDeqs = [];
	  }, refineEleDebounceTime);

	  self.eleTxrCache.onDequeue(function (reqs) {
	    for (var i = 0; i < reqs.length; i++) {
	      eleDeqs.push(reqs[i]);
	    }

	    updatedElesInLayers();
	  });
	};

	LTCp.queueLayer = function (layer, ele) {
	  var self = this;
	  var q = self.layersQueue;
	  var elesQ = layer.elesQueue;
	  var hasId = elesQ.hasId = elesQ.hasId || {};

	  // if a layer is going to be replaced, queuing is a waste of time
	  if (layer.replacement) {
	    return;
	  }

	  if (ele) {
	    if (hasId[ele.id()]) {
	      return;
	    }

	    elesQ.push(ele);
	    hasId[ele.id()] = true;
	  }

	  if (layer.reqs) {
	    layer.reqs++;

	    q.updateItem(layer);
	  } else {
	    layer.reqs = 1;

	    q.push(layer);
	  }
	};

	LTCp.dequeue = function (pxRatio) {
	  var self = this;
	  var q = self.layersQueue;
	  var deqd = [];
	  var eleDeqs = 0;

	  while (eleDeqs < maxDeqSize) {
	    if (q.size() === 0) {
	      break;
	    }

	    var layer = q.peek();

	    // if a layer has been or will be replaced, then don't waste time with it
	    if (layer.replacement) {
	      // log('layer %s in queue skipped b/c it already has a replacement', layer.id);
	      q.pop();
	      continue;
	    }

	    // if this is a replacement layer that has been superceded, then forget it
	    if (layer.replaces && layer !== layer.replaces.replacement) {
	      // log('layer is no longer the most uptodate replacement; dequeued', layer.id)
	      q.pop();
	      continue;
	    }

	    if (layer.invalid) {
	      // log('replacement layer %s is invalid; dequeued', layer.id);
	      q.pop();
	      continue;
	    }

	    var ele = layer.elesQueue.shift();

	    if (ele) {
	      // log('dequeue layer %s', layer.id);

	      self.drawEleInLayer(layer, ele, layer.level, pxRatio);

	      eleDeqs++;
	    }

	    if (deqd.length === 0) {
	      // we need only one entry in deqd to queue redrawing etc
	      deqd.push(true);
	    }

	    // if the layer has all its eles done, then remove from the queue
	    if (layer.elesQueue.length === 0) {
	      q.pop();

	      layer.reqs = 0;

	      // log('dequeue of layer %s complete', layer.id);

	      // when a replacement layer is dequeued, it replaces the old layer in the level
	      if (layer.replaces) {
	        self.applyLayerReplacement(layer);
	      }

	      self.requestRedraw();
	    }
	  }

	  return deqd;
	};

	LTCp.applyLayerReplacement = function (layer) {
	  var self = this;
	  var layersInLevel = self.layersByLevel[layer.level];
	  var replaced = layer.replaces;
	  var index = layersInLevel.indexOf(replaced);

	  // if the replaced layer is not in the active list for the level, then replacing
	  // refs would be a mistake (i.e. overwriting the true active layer)
	  if (index < 0 || replaced.invalid) {
	    // log('replacement layer would have no effect', layer.id);
	    return;
	  }

	  layersInLevel[index] = layer; // replace level ref

	  // replace refs in eles
	  for (var i = 0; i < layer.eles.length; i++) {
	    var _p = layer.eles[i]._private;
	    var cache = _p.imgLayerCaches = _p.imgLayerCaches || {};

	    if (cache) {
	      cache[layer.level] = layer;
	    }
	  }

	  // log('apply replacement layer %s over %s', layer.id, replaced.id);

	  self.requestRedraw();
	};

	LTCp.requestRedraw = util.debounce(function () {
	  var r = this.renderer;

	  r.redrawHint('eles', true);
	  r.redrawHint('drag', true);
	  r.redraw();
	}, 100);

	LTCp.setupDequeueing = defs.setupDequeueing({
	  deqRedrawThreshold: deqRedrawThreshold,
	  deqCost: deqCost,
	  deqAvgCost: deqAvgCost,
	  deqNoDrawCost: deqNoDrawCost,
	  deqFastCost: deqFastCost,
	  deq: function deq(self, pxRatio) {
	    return self.dequeue(pxRatio);
	  },
	  onDeqd: util.noop,
	  shouldRedraw: util.trueify,
	  priority: function priority(self) {
	    return self.renderer.beforeRenderPriorities.lyrTxrDeq;
	  }
	});

	module.exports = LayeredTextureCache;

	/***/ }),
	/* 126 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var CRp = {};

	var impl;

	CRp.arrowShapeImpl = function (name) {
	  return (impl || (impl = {
	    'polygon': function polygon(context, points) {
	      for (var i = 0; i < points.length; i++) {
	        var pt = points[i];

	        context.lineTo(pt.x, pt.y);
	      }
	    },

	    'triangle-backcurve': function triangleBackcurve(context, points, controlPoint) {
	      var firstPt;

	      for (var i = 0; i < points.length; i++) {
	        var pt = points[i];

	        if (i === 0) {
	          firstPt = pt;
	        }

	        context.lineTo(pt.x, pt.y);
	      }

	      context.quadraticCurveTo(controlPoint.x, controlPoint.y, firstPt.x, firstPt.y);
	    },

	    'triangle-tee': function triangleTee(context, trianglePoints, teePoints) {
	      if (context.beginPath) {
	        context.beginPath();
	      }

	      var triPts = trianglePoints;
	      for (var i = 0; i < triPts.length; i++) {
	        var pt = triPts[i];

	        context.lineTo(pt.x, pt.y);
	      }

	      if (context.closePath) {
	        context.closePath();
	      }

	      if (context.beginPath) {
	        context.beginPath();
	      }

	      var teePts = teePoints;
	      var firstTeePt = teePoints[0];
	      context.moveTo(firstTeePt.x, firstTeePt.y);

	      for (var i = 0; i < teePts.length; i++) {
	        var pt = teePts[i];

	        context.lineTo(pt.x, pt.y);
	      }
	      if (context.closePath) {
	        context.closePath();
	      }
	    },

	    'triangle-cross': function triangleCross(context, trianglePoints, crossLinePoints) {
	      if (context.beginPath) {
	        context.beginPath();
	      }

	      var triPts = trianglePoints;
	      for (var i = 0; i < triPts.length; i++) {
	        var pt = triPts[i];

	        context.lineTo(pt.x, pt.y);
	      }

	      if (context.closePath) {
	        context.closePath();
	      }

	      if (context.beginPath) {
	        context.beginPath();
	      }

	      var teePts = crossLinePoints;
	      var firstTeePt = crossLinePoints[0];
	      context.moveTo(firstTeePt.x, firstTeePt.y);

	      for (var i = 0; i < teePts.length; i++) {
	        var pt = teePts[i];

	        context.lineTo(pt.x, pt.y);
	      }
	      if (context.closePath) {
	        context.closePath();
	      }
	    },

	    'circle': function circle(context, rx, ry, r) {
	      context.arc(rx, ry, r, 0, Math.PI * 2, false);
	    }
	  }))[name];
	};

	module.exports = CRp;

	/***/ }),
	/* 127 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var math = __webpack_require__(2);

	var CRp = {};

	CRp.drawElement = function (context, ele, shiftToOriginWithBb, showLabel) {
	  var r = this;

	  if (ele.isNode()) {
	    r.drawNode(context, ele, shiftToOriginWithBb, showLabel);
	  } else {
	    r.drawEdge(context, ele, shiftToOriginWithBb, showLabel);
	  }
	};

	CRp.drawCachedElement = function (context, ele, pxRatio, extent) {
	  var r = this;
	  var bb = ele.boundingBox();

	  if (bb.w === 0 || bb.h === 0) {
	    return;
	  }

	  if (!extent || math.boundingBoxesIntersect(bb, extent)) {
	    var cache = r.data.eleTxrCache.getElement(ele, bb, pxRatio);

	    if (cache != null) {
	      context.drawImage(cache.texture.canvas, cache.x, 0, cache.width, cache.height, bb.x1, bb.y1, bb.w, bb.h);
	    } else {
	      // if the element is not cacheable, then draw directly
	      r.drawElement(context, ele);
	    }
	  }
	};

	CRp.drawElements = function (context, eles) {
	  var r = this;

	  for (var i = 0; i < eles.length; i++) {
	    var ele = eles[i];

	    r.drawElement(context, ele);
	  }
	};

	CRp.drawCachedElements = function (context, eles, pxRatio, extent) {
	  var r = this;

	  for (var i = 0; i < eles.length; i++) {
	    var ele = eles[i];

	    r.drawCachedElement(context, ele, pxRatio, extent);
	  }
	};

	CRp.drawCachedNodes = function (context, eles, pxRatio, extent) {
	  var r = this;

	  for (var i = 0; i < eles.length; i++) {
	    var ele = eles[i];

	    if (!ele.isNode()) {
	      continue;
	    }

	    r.drawCachedElement(context, ele, pxRatio, extent);
	  }
	};

	CRp.drawLayeredElements = function (context, eles, pxRatio, extent) {
	  var r = this;

	  var layers = r.data.lyrTxrCache.getLayers(eles, pxRatio);

	  if (layers) {
	    for (var i = 0; i < layers.length; i++) {
	      var layer = layers[i];
	      var bb = layer.bb;

	      if (bb.w === 0 || bb.h === 0) {
	        continue;
	      }

	      context.drawImage(layer.canvas, bb.x1, bb.y1, bb.w, bb.h);
	    }
	  } else {
	    // fall back on plain caching if no layers
	    r.drawCachedElements(context, eles, pxRatio, extent);
	  }
	};

	CRp.drawDebugPoints = function (context, eles) {
	  var draw = function draw(x, y, color) {
	    context.fillStyle = color;
	    context.fillRect(x - 1, y - 1, 3, 3);
	  };

	  for (var i = 0; i < eles.length; i++) {
	    var ele = eles[i];
	    var rs = ele._private.rscratch;

	    if (ele.isNode()) {
	      var p = ele.position();

	      draw(p.x, p.y, 'magenta');
	    } else {
	      var pts = rs.allpts;

	      for (var j = 0; j + 1 < pts.length; j += 2) {
	        var x = pts[j];
	        var y = pts[j + 1];

	        draw(x, y, 'cyan');
	      }

	      draw(rs.midX, rs.midY, 'yellow');
	    }
	  }
	};

	module.exports = CRp;

	/***/ }),
	/* 128 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var CRp = {};

	CRp.drawEdge = function (context, edge, shiftToOriginWithBb, drawLabel) {
	  var r = this;
	  var rs = edge._private.rscratch;
	  var usePaths = r.usePaths();

	  if (!edge.visible()) {
	    return;
	  }

	  // if bezier ctrl pts can not be calculated, then die
	  if (rs.badLine || rs.allpts == null || isNaN(rs.allpts[0])) {
	    // isNaN in case edge is impossible and browser bugs (e.g. safari)
	    return;
	  }

	  var bb = void 0;
	  if (shiftToOriginWithBb) {
	    bb = shiftToOriginWithBb;

	    context.translate(-bb.x1, -bb.y1);
	  }

	  var overlayPadding = edge.pstyle('overlay-padding').pfValue;
	  var overlayWidth = 2 * overlayPadding;
	  var overlayOpacity = edge.pstyle('overlay-opacity').value;
	  var overlayColor = edge.pstyle('overlay-color').value;
	  var lineColor = edge.pstyle('line-color').value;
	  var opacity = edge.pstyle('opacity').value;
	  var lineStyle = edge.pstyle('line-style').value;
	  var edgeWidth = edge.pstyle('width').pfValue;

	  var drawLine = function drawLine() {
	    var strokeOpacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : opacity;

	    context.lineWidth = edgeWidth;
	    context.lineCap = 'butt';

	    r.strokeStyle(context, lineColor[0], lineColor[1], lineColor[2], strokeOpacity);

	    r.drawEdgePath(edge, context, rs.allpts, lineStyle);
	  };

	  var drawOverlay = function drawOverlay() {
	    var strokeOpacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : overlayOpacity;

	    context.lineWidth = overlayWidth;

	    if (rs.edgeType === 'self' && !usePaths) {
	      context.lineCap = 'butt';
	    } else {
	      context.lineCap = 'round';
	    }

	    r.strokeStyle(context, overlayColor[0], overlayColor[1], overlayColor[2], strokeOpacity);

	    r.drawEdgePath(edge, context, rs.allpts, 'solid');
	  };

	  var drawArrows = function drawArrows() {
	    var arrowOpacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : opacity;

	    r.drawArrowheads(context, edge, arrowOpacity);
	  };

	  var drawText = function drawText() {
	    r.drawElementText(context, edge, drawLabel);
	  };

	  context.lineJoin = 'round';

	  var ghost = edge.pstyle('ghost').value === 'yes';

	  if (ghost) {
	    var gx = edge.pstyle('ghost-offset-x').pfValue;
	    var gy = edge.pstyle('ghost-offset-y').pfValue;
	    var ghostOpacity = edge.pstyle('ghost-opacity').value;
	    var effectiveGhostOpacity = opacity * ghostOpacity;

	    context.translate(gx, gy);

	    drawLine(effectiveGhostOpacity);
	    drawArrows(effectiveGhostOpacity);

	    context.translate(-gx, -gy);
	  }

	  drawLine();
	  drawArrows();
	  drawOverlay();
	  drawText();

	  if (shiftToOriginWithBb) {
	    context.translate(bb.x1, bb.y1);
	  }
	};

	CRp.drawEdgePath = function (edge, context, pts, type) {
	  var rs = edge._private.rscratch;
	  var canvasCxt = context;
	  var path = void 0;
	  var pathCacheHit = false;
	  var usePaths = this.usePaths();

	  if (usePaths) {
	    var pathCacheKey = pts.join('$');
	    var keyMatches = rs.pathCacheKey && rs.pathCacheKey === pathCacheKey;

	    if (keyMatches) {
	      path = context = rs.pathCache;
	      pathCacheHit = true;
	    } else {
	      path = context = new Path2D(); // eslint-disable-line no-undef
	      rs.pathCacheKey = pathCacheKey;
	      rs.pathCache = path;
	    }
	  }

	  if (canvasCxt.setLineDash) {
	    // for very outofdate browsers
	    switch (type) {
	      case 'dotted':
	        canvasCxt.setLineDash([1, 1]);
	        break;

	      case 'dashed':
	        canvasCxt.setLineDash([6, 3]);
	        break;

	      case 'solid':
	        canvasCxt.setLineDash([]);
	        break;
	    }
	  }

	  if (!pathCacheHit && !rs.badLine) {
	    if (context.beginPath) {
	      context.beginPath();
	    }
	    context.moveTo(pts[0], pts[1]);

	    switch (rs.edgeType) {
	      case 'bezier':
	      case 'self':
	      case 'compound':
	      case 'multibezier':
	        for (var i = 2; i + 3 < pts.length; i += 4) {
	          context.quadraticCurveTo(pts[i], pts[i + 1], pts[i + 2], pts[i + 3]);
	        }
	        break;

	      case 'straight':
	      case 'segments':
	      case 'haystack':
	        for (var _i = 2; _i + 1 < pts.length; _i += 2) {
	          context.lineTo(pts[_i], pts[_i + 1]);
	        }
	        break;
	    }
	  }

	  context = canvasCxt;
	  if (usePaths) {
	    context.stroke(path);
	  } else {
	    context.stroke();
	  }

	  // reset any line dashes
	  if (context.setLineDash) {
	    // for very outofdate browsers
	    context.setLineDash([]);
	  }
	};

	CRp.drawArrowheads = function (context, edge, opacity) {
	  var rs = edge._private.rscratch;
	  var isHaystack = rs.edgeType === 'haystack';

	  if (!isHaystack) {
	    this.drawArrowhead(context, edge, 'source', rs.arrowStartX, rs.arrowStartY, rs.srcArrowAngle, opacity);
	  }

	  this.drawArrowhead(context, edge, 'mid-target', rs.midX, rs.midY, rs.midtgtArrowAngle, opacity);

	  this.drawArrowhead(context, edge, 'mid-source', rs.midX, rs.midY, rs.midsrcArrowAngle, opacity);

	  if (!isHaystack) {
	    this.drawArrowhead(context, edge, 'target', rs.arrowEndX, rs.arrowEndY, rs.tgtArrowAngle, opacity);
	  }
	};

	CRp.drawArrowhead = function (context, edge, prefix, x, y, angle, opacity) {
	  if (isNaN(x) || x == null || isNaN(y) || y == null || isNaN(angle) || angle == null) {
	    return;
	  }

	  var self = this;
	  var arrowShape = edge.pstyle(prefix + '-arrow-shape').value;
	  if (arrowShape === 'none') {
	    return;
	  }

	  var arrowClearFill = edge.pstyle(prefix + '-arrow-fill').value === 'hollow' ? 'both' : 'filled';
	  var arrowFill = edge.pstyle(prefix + '-arrow-fill').value;
	  var edgeWidth = edge.pstyle('width').pfValue;
	  var edgeOpacity = edge.pstyle('opacity').value;

	  if (opacity === undefined) {
	    opacity = edgeOpacity;
	  }

	  var gco = context.globalCompositeOperation;

	  if (opacity !== 1 || arrowFill === 'hollow') {
	    // then extra clear is needed
	    context.globalCompositeOperation = 'destination-out';

	    self.fillStyle(context, 255, 255, 255, 1);
	    self.strokeStyle(context, 255, 255, 255, 1);

	    self.drawArrowShape(edge, prefix, context, arrowClearFill, edgeWidth, arrowShape, x, y, angle);

	    context.globalCompositeOperation = gco;
	  } // otherwise, the opaque arrow clears it for free :)

	  var color = edge.pstyle(prefix + '-arrow-color').value;
	  self.fillStyle(context, color[0], color[1], color[2], opacity);
	  self.strokeStyle(context, color[0], color[1], color[2], opacity);

	  self.drawArrowShape(edge, prefix, context, arrowFill, edgeWidth, arrowShape, x, y, angle);
	};

	CRp.drawArrowShape = function (edge, arrowType, context, fill, edgeWidth, shape, x, y, angle) {
	  var r = this;
	  var usePaths = this.usePaths();
	  var rs = edge._private.rscratch;
	  var pathCacheHit = false;
	  var path = void 0;
	  var canvasContext = context;
	  var translation = { x: x, y: y };
	  var scale = edge.pstyle('arrow-scale').value;
	  var size = this.getArrowWidth(edgeWidth, scale);
	  var shapeImpl = r.arrowShapes[shape];

	  if (usePaths) {
	    var pathCacheKey = size + '$' + shape + '$' + angle + '$' + x + '$' + y;
	    rs.arrowPathCacheKey = rs.arrowPathCacheKey || {};
	    rs.arrowPathCache = rs.arrowPathCache || {};

	    var alreadyCached = rs.arrowPathCacheKey[arrowType] === pathCacheKey;
	    if (alreadyCached) {
	      path = context = rs.arrowPathCache[arrowType];
	      pathCacheHit = true;
	    } else {
	      path = context = new Path2D(); // eslint-disable-line no-undef
	      rs.arrowPathCacheKey[arrowType] = pathCacheKey;
	      rs.arrowPathCache[arrowType] = path;
	    }
	  }

	  if (context.beginPath) {
	    context.beginPath();
	  }

	  if (!pathCacheHit) {
	    shapeImpl.draw(context, size, angle, translation, edgeWidth);
	  }

	  if (!shapeImpl.leavePathOpen && context.closePath) {
	    context.closePath();
	  }

	  context = canvasContext;

	  if (fill === 'filled' || fill === 'both') {
	    if (usePaths) {
	      context.fill(path);
	    } else {
	      context.fill();
	    }
	  }

	  if (fill === 'hollow' || fill === 'both') {
	    context.lineWidth = shapeImpl.matchEdgeWidth ? edgeWidth : 1;
	    context.lineJoin = 'miter';

	    if (usePaths) {
	      context.stroke(path);
	    } else {
	      context.stroke();
	    }
	  }
	};

	module.exports = CRp;

	/***/ }),
	/* 129 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var CRp = {};

	CRp.safeDrawImage = function (context, img, ix, iy, iw, ih, x, y, w, h) {
	  var r = this;

	  // detect problematic cases for old browsers with bad images (cheaper than try-catch)
	  if (iw <= 0 || ih <= 0 || w <= 0 || h <= 0) {
	    return;
	  }

	  context.drawImage(img, ix, iy, iw, ih, x, y, w, h);
	};

	CRp.drawInscribedImage = function (context, img, node, index, nodeOpacity) {
	  var r = this;
	  var pos = node.position();
	  var nodeX = pos.x;
	  var nodeY = pos.y;
	  var styleObj = node.cy().style();
	  var getIndexedStyle = styleObj.getIndexedStyle.bind(styleObj);
	  var fit = getIndexedStyle(node, 'background-fit', 'value', index);
	  var repeat = getIndexedStyle(node, 'background-repeat', 'value', index);
	  var nodeW = node.width();
	  var nodeH = node.height();
	  var paddingX2 = node.padding() * 2;
	  var nodeTW = nodeW + (getIndexedStyle(node, 'background-width-relative-to', 'value', index) === 'inner' ? 0 : paddingX2);
	  var nodeTH = nodeH + (getIndexedStyle(node, 'background-height-relative-to', 'value', index) === 'inner' ? 0 : paddingX2);
	  var rs = node._private.rscratch;
	  var clip = node.pstyle('background-clip').value;
	  var shouldClip = clip === 'node';
	  var imgOpacity = getIndexedStyle(node, 'background-image-opacity', 'value', index) * nodeOpacity;

	  var imgW = img.width || img.cachedW;
	  var imgH = img.height || img.cachedH;

	  // workaround for broken browsers like ie
	  if (null == imgW || null == imgH) {
	    document.body.appendChild(img); // eslint-disable-line no-undef

	    imgW = img.cachedW = img.width || img.offsetWidth;
	    imgH = img.cachedH = img.height || img.offsetHeight;

	    document.body.removeChild(img); // eslint-disable-line no-undef
	  }

	  var w = imgW;
	  var h = imgH;

	  if (getIndexedStyle(node, 'background-width', 'value', index) !== 'auto') {
	    if (getIndexedStyle(node, 'background-width', 'units', index) === '%') {
	      w = getIndexedStyle(node, 'background-width', 'pfValue', index) * nodeTW;
	    } else {
	      w = getIndexedStyle(node, 'background-width', 'pfValue', index);
	    }
	  }

	  if (getIndexedStyle(node, 'background-height', 'value', index) !== 'auto') {
	    if (getIndexedStyle(node, 'background-height', 'units', index) === '%') {
	      h = getIndexedStyle(node, 'background-height', 'pfValue', index) * nodeTH;
	    } else {
	      h = getIndexedStyle(node, 'background-height', 'pfValue', index);
	    }
	  }

	  if (w === 0 || h === 0) {
	    return; // no point in drawing empty image (and chrome is broken in this case)
	  }

	  if (fit === 'contain') {
	    var scale = Math.min(nodeTW / w, nodeTH / h);

	    w *= scale;
	    h *= scale;
	  } else if (fit === 'cover') {
	    var scale = Math.max(nodeTW / w, nodeTH / h);

	    w *= scale;
	    h *= scale;
	  }

	  var x = nodeX - nodeTW / 2; // left
	  if (getIndexedStyle(node, 'background-position-x', 'units', index) === '%') {
	    x += (nodeTW - w) * getIndexedStyle(node, 'background-position-x', 'pfValue', index);
	  } else {
	    x += getIndexedStyle(node, 'background-position-x', 'pfValue', index);
	  }

	  var y = nodeY - nodeTH / 2; // top
	  if (getIndexedStyle(node, 'background-position-y', 'units', index) === '%') {
	    y += (nodeTH - h) * getIndexedStyle(node, 'background-position-y', 'pfValue', index);
	  } else {
	    y += getIndexedStyle(node, 'background-position-y', 'pfValue', index);
	  }

	  if (rs.pathCache) {
	    x -= nodeX;
	    y -= nodeY;

	    nodeX = 0;
	    nodeY = 0;
	  }

	  var gAlpha = context.globalAlpha;

	  context.globalAlpha = imgOpacity;

	  if (repeat === 'no-repeat') {

	    if (shouldClip) {
	      context.save();

	      if (rs.pathCache) {
	        context.clip(rs.pathCache);
	      } else {
	        r.nodeShapes[r.getNodeShape(node)].draw(context, nodeX, nodeY, nodeTW, nodeTH);

	        context.clip();
	      }
	    }

	    r.safeDrawImage(context, img, 0, 0, imgW, imgH, x, y, w, h);

	    if (shouldClip) {
	      context.restore();
	    }
	  } else {
	    var pattern = context.createPattern(img, repeat);
	    context.fillStyle = pattern;

	    r.nodeShapes[r.getNodeShape(node)].draw(context, nodeX, nodeY, nodeTW, nodeTH);

	    context.translate(x, y);
	    context.fill();
	    context.translate(-x, -y);
	  }

	  context.globalAlpha = gAlpha;
	};

	module.exports = CRp;

	/***/ }),
	/* 130 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var util = __webpack_require__(1);
	var math = __webpack_require__(2);

	var CRp = {};

	CRp.eleTextBiggerThanMin = function (ele, scale) {
	  if (!scale) {
	    var zoom = ele.cy().zoom();
	    var pxRatio = this.getPixelRatio();
	    var lvl = Math.ceil(math.log2(zoom * pxRatio)); // the effective texture level

	    scale = Math.pow(2, lvl);
	  }

	  var computedSize = ele.pstyle('font-size').pfValue * scale;
	  var minSize = ele.pstyle('min-zoomed-font-size').pfValue;

	  if (computedSize < minSize) {
	    return false;
	  }

	  return true;
	};

	CRp.drawElementText = function (context, ele, force) {
	  var r = this;

	  if (force === undefined) {
	    if (!r.eleTextBiggerThanMin(ele)) {
	      return;
	    }
	  } else {
	    if (!force) {
	      return;
	    }
	  }

	  if (ele.isNode()) {
	    var label = ele.pstyle('label');

	    if (!label || !label.value) {
	      return;
	    }

	    var textHalign = ele.pstyle('text-halign').strValue;
	    var textValign = ele.pstyle('text-valign').strValue;

	    switch (textHalign) {
	      case 'left':
	        context.textAlign = 'right';
	        break;

	      case 'right':
	        context.textAlign = 'left';
	        break;

	      default:
	        // e.g. center
	        context.textAlign = 'center';
	    }

	    context.textBaseline = 'bottom';
	  } else {
	    var label = ele.pstyle('label');
	    var srcLabel = ele.pstyle('source-label');
	    var tgtLabel = ele.pstyle('target-label');

	    if ((!label || !label.value) && (!srcLabel || !srcLabel.value) && (!tgtLabel || !tgtLabel.value)) {
	      return;
	    }

	    context.textAlign = 'center';
	    context.textBaseline = 'bottom';
	  }

	  r.drawText(context, ele);

	  if (ele.isEdge()) {
	    r.drawText(context, ele, 'source');

	    r.drawText(context, ele, 'target');
	  }
	};

	CRp.drawNodeText = CRp.drawEdgeText = CRp.drawElementText;

	CRp.getFontCache = function (context) {
	  var cache;

	  this.fontCaches = this.fontCaches || [];

	  for (var i = 0; i < this.fontCaches.length; i++) {
	    cache = this.fontCaches[i];

	    if (cache.context === context) {
	      return cache;
	    }
	  }

	  cache = {
	    context: context
	  };
	  this.fontCaches.push(cache);

	  return cache;
	};

	// set up canvas context with font
	// returns transformed text string
	CRp.setupTextStyle = function (context, ele) {
	  // Font style
	  var parentOpacity = ele.effectiveOpacity();
	  var labelStyle = ele.pstyle('font-style').strValue;
	  var labelSize = ele.pstyle('font-size').pfValue + 'px';
	  var labelFamily = ele.pstyle('font-family').strValue;
	  var labelWeight = ele.pstyle('font-weight').strValue;
	  var opacity = ele.pstyle('text-opacity').value * ele.pstyle('opacity').value * parentOpacity;
	  var outlineOpacity = ele.pstyle('text-outline-opacity').value * opacity;
	  var color = ele.pstyle('color').value;
	  var outlineColor = ele.pstyle('text-outline-color').value;

	  var fontCacheKey = ele._private.fontKey;
	  var cache = this.getFontCache(context);

	  if (cache.key !== fontCacheKey) {
	    context.font = labelStyle + ' ' + labelWeight + ' ' + labelSize + ' ' + labelFamily;

	    cache.key = fontCacheKey;
	  }

	  // Calculate text draw position based on text alignment

	  // so text outlines aren't jagged
	  context.lineJoin = 'round';

	  this.fillStyle(context, color[0], color[1], color[2], opacity);

	  this.strokeStyle(context, outlineColor[0], outlineColor[1], outlineColor[2], outlineOpacity);
	};

	function roundRect(ctx, x, y, width, height, radius) {
	  var radius = radius || 5;
	  ctx.beginPath();
	  ctx.moveTo(x + radius, y);
	  ctx.lineTo(x + width - radius, y);
	  ctx.quadraticCurveTo(x + width, y, x + width, y + radius);
	  ctx.lineTo(x + width, y + height - radius);
	  ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);
	  ctx.lineTo(x + radius, y + height);
	  ctx.quadraticCurveTo(x, y + height, x, y + height - radius);
	  ctx.lineTo(x, y + radius);
	  ctx.quadraticCurveTo(x, y, x + radius, y);
	  ctx.closePath();
	  ctx.fill();
	}

	// Draw text
	CRp.drawText = function (context, ele, prefix) {
	  var _p = ele._private;
	  var rscratch = _p.rscratch;
	  var parentOpacity = ele.effectiveOpacity();
	  if (parentOpacity === 0 || ele.pstyle('text-opacity').value === 0) {
	    return;
	  }

	  var textX = util.getPrefixedProperty(rscratch, 'labelX', prefix);
	  var textY = util.getPrefixedProperty(rscratch, 'labelY', prefix);
	  var text = this.getLabelText(ele, prefix);

	  if (text != null && text !== '' && !isNaN(textX) && !isNaN(textY)) {
	    this.setupTextStyle(context, ele);

	    var pdash = prefix ? prefix + '-' : '';
	    var textW = util.getPrefixedProperty(rscratch, 'labelWidth', prefix);
	    var textH = util.getPrefixedProperty(rscratch, 'labelHeight', prefix);
	    var textAngle = util.getPrefixedProperty(rscratch, 'labelAngle', prefix);
	    var marginX = ele.pstyle(pdash + 'text-margin-x').pfValue;
	    var marginY = ele.pstyle(pdash + 'text-margin-y').pfValue;

	    var isEdge = ele.isEdge();
	    var isNode = ele.isNode();

	    var halign = ele.pstyle('text-halign').value;
	    var valign = ele.pstyle('text-valign').value;

	    if (isEdge) {
	      halign = 'center';
	      valign = 'center';
	    }

	    textX += marginX;
	    textY += marginY;

	    var rotation = ele.pstyle(pdash + 'text-rotation');
	    var theta;

	    if (rotation.strValue === 'autorotate') {
	      theta = isEdge ? textAngle : 0;
	    } else if (rotation.strValue === 'none') {
	      theta = 0;
	    } else {
	      theta = rotation.pfValue;
	    }

	    if (theta !== 0) {
	      var orgTextX = textX;
	      var orgTextY = textY;

	      context.translate(orgTextX, orgTextY);
	      context.rotate(theta);

	      textX = 0;
	      textY = 0;
	    }

	    switch (valign) {
	      case 'top':
	        break;
	      case 'center':
	        textY += textH / 2;
	        break;
	      case 'bottom':
	        textY += textH;
	        break;
	    }

	    var backgroundOpacity = ele.pstyle('text-background-opacity').value;
	    var borderOpacity = ele.pstyle('text-border-opacity').value;
	    var textBorderWidth = ele.pstyle('text-border-width').pfValue;
	    var backgroundPadding = ele.pstyle('text-background-padding').pfValue;

	    if (backgroundOpacity > 0 || textBorderWidth > 0 && borderOpacity > 0) {
	      var bgX = textX - backgroundPadding;

	      switch (halign) {
	        case 'left':
	          bgX -= textW;
	          break;
	        case 'center':
	          bgX -= textW / 2;
	          break;
	        case 'right':
	          break;
	      }

	      var bgY = textY - textH - backgroundPadding;
	      var bgW = textW + 2 * backgroundPadding;
	      var bgH = textH + 2 * backgroundPadding;

	      if (backgroundOpacity > 0) {
	        var textFill = context.fillStyle;
	        var textBackgroundColor = ele.pstyle('text-background-color').value;

	        context.fillStyle = 'rgba(' + textBackgroundColor[0] + ',' + textBackgroundColor[1] + ',' + textBackgroundColor[2] + ',' + backgroundOpacity * parentOpacity + ')';
	        var styleShape = ele.pstyle('text-background-shape').strValue;
	        if (styleShape == 'roundrectangle') {
	          roundRect(context, bgX, bgY, bgW, bgH, 2);
	        } else {
	          context.fillRect(bgX, bgY, bgW, bgH);
	        }
	        context.fillStyle = textFill;
	      }

	      if (textBorderWidth > 0 && borderOpacity > 0) {
	        var textStroke = context.strokeStyle;
	        var textLineWidth = context.lineWidth;
	        var textBorderColor = ele.pstyle('text-border-color').value;
	        var textBorderStyle = ele.pstyle('text-border-style').value;

	        context.strokeStyle = 'rgba(' + textBorderColor[0] + ',' + textBorderColor[1] + ',' + textBorderColor[2] + ',' + borderOpacity * parentOpacity + ')';
	        context.lineWidth = textBorderWidth;

	        if (context.setLineDash) {
	          // for very outofdate browsers
	          switch (textBorderStyle) {
	            case 'dotted':
	              context.setLineDash([1, 1]);
	              break;
	            case 'dashed':
	              context.setLineDash([4, 2]);
	              break;
	            case 'double':
	              context.lineWidth = textBorderWidth / 4; // 50% reserved for white between the two borders
	              context.setLineDash([]);
	              break;
	            case 'solid':
	              context.setLineDash([]);
	              break;
	          }
	        }

	        context.strokeRect(bgX, bgY, bgW, bgH);

	        if (textBorderStyle === 'double') {
	          var whiteWidth = textBorderWidth / 2;

	          context.strokeRect(bgX + whiteWidth, bgY + whiteWidth, bgW - whiteWidth * 2, bgH - whiteWidth * 2);
	        }

	        if (context.setLineDash) {
	          // for very outofdate browsers
	          context.setLineDash([]);
	        }
	        context.lineWidth = textLineWidth;
	        context.strokeStyle = textStroke;
	      }
	    }

	    var lineWidth = 2 * ele.pstyle('text-outline-width').pfValue; // *2 b/c the stroke is drawn centred on the middle

	    if (lineWidth > 0) {
	      context.lineWidth = lineWidth;
	    }

	    if (ele.pstyle('text-wrap').value === 'wrap') {
	      var lines = util.getPrefixedProperty(rscratch, 'labelWrapCachedLines', prefix);
	      var lineHeight = textH / lines.length;

	      switch (valign) {
	        case 'top':
	          textY -= (lines.length - 1) * lineHeight;
	          break;
	        case 'center':
	        case 'bottom':
	          textY -= (lines.length - 1) * lineHeight;
	          break;
	      }

	      for (var l = 0; l < lines.length; l++) {
	        if (lineWidth > 0) {
	          context.strokeText(lines[l], textX, textY);
	        }

	        context.fillText(lines[l], textX, textY);

	        textY += lineHeight;
	      }
	    } else {
	      if (lineWidth > 0) {
	        context.strokeText(text, textX, textY);
	      }

	      context.fillText(text, textX, textY);
	    }

	    if (theta !== 0) {
	      context.rotate(-theta);
	      context.translate(-orgTextX, -orgTextY);
	    }
	  }
	};

	module.exports = CRp;

	/***/ }),
	/* 131 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	/* global Path2D */

	var is = __webpack_require__(0);

	var CRp = {};

	CRp.drawNode = function (context, node, shiftToOriginWithBb, drawLabel) {
	  var r = this;
	  var nodeWidth = void 0,
	      nodeHeight = void 0;
	  var _p = node._private;
	  var rs = _p.rscratch;
	  var pos = node.position();

	  if (!is.number(pos.x) || !is.number(pos.y)) {
	    return; // can't draw node with undefined position
	  }

	  if (!node.visible()) {
	    return;
	  }

	  var parentOpacity = node.effectiveOpacity();

	  var usePaths = r.usePaths();
	  var path = void 0;
	  var pathCacheHit = false;

	  var padding = node.padding();

	  nodeWidth = node.width() + 2 * padding;
	  nodeHeight = node.height() + 2 * padding;

	  //
	  // setup shift

	  var bb = void 0;
	  if (shiftToOriginWithBb) {
	    bb = shiftToOriginWithBb;

	    context.translate(-bb.x1, -bb.y1);
	  }

	  //
	  // load bg image

	  var bgImgProp = node.pstyle('background-image');
	  var urls = bgImgProp.value;
	  var urlDefined = new Array(urls.length);
	  var image = new Array(urls.length);
	  var numImages = 0;
	  for (var i = 0; i < urls.length; i++) {
	    var url = urls[i];
	    var defd = urlDefined[i] = url != null && url !== 'none';

	    if (defd) {
	      var bgImgCrossOrigin = node.cy().style().getIndexedStyle(node, 'background-image-crossorigin', 'value', i);

	      numImages++;

	      // get image, and if not loaded then ask to redraw when later loaded
	      image[i] = r.getCachedImage(url, bgImgCrossOrigin, function () {
	        node.emitAndNotify('background');
	      });
	    }
	  }

	  //
	  // setup styles

	  var darkness = node.pstyle('background-blacken').value;
	  var borderWidth = node.pstyle('border-width').pfValue;
	  var bgColor = node.pstyle('background-color').value;
	  var bgOpacity = node.pstyle('background-opacity').value * parentOpacity;
	  var borderColor = node.pstyle('border-color').value;
	  var borderStyle = node.pstyle('border-style').value;
	  var borderOpacity = node.pstyle('border-opacity').value * parentOpacity;

	  context.lineJoin = 'miter'; // so borders are square with the node shape

	  var setupShapeColor = function setupShapeColor() {
	    var bgOpy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : bgOpacity;

	    r.fillStyle(context, bgColor[0], bgColor[1], bgColor[2], bgOpy);
	  };

	  var setupBorderColor = function setupBorderColor() {
	    var bdrOpy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : borderOpacity;

	    r.strokeStyle(context, borderColor[0], borderColor[1], borderColor[2], bdrOpy);
	  };

	  //
	  // setup shape

	  var styleShape = node.pstyle('shape').strValue;
	  var shapePts = node.pstyle('shape-polygon-points').pfValue;

	  if (usePaths) {
	    var pathCacheKey = styleShape + '$' + nodeWidth + '$' + nodeHeight + (styleShape === 'polygon' ? '$' + shapePts.join('$') : '');

	    context.translate(pos.x, pos.y);

	    if (rs.pathCacheKey === pathCacheKey) {
	      path = rs.pathCache;
	      pathCacheHit = true;
	    } else {
	      path = new Path2D();
	      rs.pathCacheKey = pathCacheKey;
	      rs.pathCache = path;
	    }
	  }

	  var drawShape = function drawShape() {
	    if (!pathCacheHit) {

	      var npos = pos;

	      if (usePaths) {
	        npos = {
	          x: 0,
	          y: 0
	        };
	      }

	      r.nodeShapes[r.getNodeShape(node)].draw(path || context, npos.x, npos.y, nodeWidth, nodeHeight);
	    }

	    if (usePaths) {
	      context.fill(path);
	    } else {
	      context.fill();
	    }
	  };

	  var drawImages = function drawImages() {
	    var nodeOpacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : parentOpacity;

	    var prevBging = _p.backgrounding;
	    var totalCompleted = 0;

	    for (var _i = 0; _i < image.length; _i++) {
	      if (urlDefined[_i] && image[_i].complete && !image[_i].error) {
	        totalCompleted++;
	        r.drawInscribedImage(context, image[_i], node, _i, nodeOpacity);
	      }
	    }

	    _p.backgrounding = !(totalCompleted === numImages);
	    if (prevBging !== _p.backgrounding) {
	      // update style b/c :backgrounding state changed
	      node.updateStyle(false);
	    }
	  };

	  var drawPie = function drawPie() {
	    var redrawShape = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	    var pieOpacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : parentOpacity;

	    if (r.hasPie(node)) {
	      r.drawPie(context, node, pieOpacity);

	      // redraw/restore path if steps after pie need it
	      if (redrawShape) {

	        if (!usePaths) {
	          r.nodeShapes[r.getNodeShape(node)].draw(context, pos.x, pos.y, nodeWidth, nodeHeight);
	        }
	      }
	    }
	  };

	  var darken = function darken() {
	    var darkenOpacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : parentOpacity;

	    var opacity = (darkness > 0 ? darkness : -darkness) * darkenOpacity;
	    var c = darkness > 0 ? 0 : 255;

	    if (darkness !== 0) {
	      r.fillStyle(context, c, c, c, opacity);

	      if (usePaths) {
	        context.fill(path);
	      } else {
	        context.fill();
	      }
	    }
	  };

	  var drawBorder = function drawBorder() {
	    if (borderWidth > 0) {

	      context.lineWidth = borderWidth;
	      context.lineCap = 'butt';

	      if (context.setLineDash) {
	        // for very outofdate browsers
	        switch (borderStyle) {
	          case 'dotted':
	            context.setLineDash([1, 1]);
	            break;

	          case 'dashed':
	            context.setLineDash([4, 2]);
	            break;

	          case 'solid':
	          case 'double':
	            context.setLineDash([]);
	            break;
	        }
	      }

	      if (usePaths) {
	        context.stroke(path);
	      } else {
	        context.stroke();
	      }

	      if (borderStyle === 'double') {
	        context.lineWidth = borderWidth / 3;

	        var gco = context.globalCompositeOperation;
	        context.globalCompositeOperation = 'destination-out';

	        if (usePaths) {
	          context.stroke(path);
	        } else {
	          context.stroke();
	        }

	        context.globalCompositeOperation = gco;
	      }

	      // reset in case we changed the border style
	      if (context.setLineDash) {
	        // for very outofdate browsers
	        context.setLineDash([]);
	      }
	    }
	  };

	  var drawOverlay = function drawOverlay() {
	    var overlayPadding = node.pstyle('overlay-padding').pfValue;
	    var overlayOpacity = node.pstyle('overlay-opacity').value;
	    var overlayColor = node.pstyle('overlay-color').value;

	    if (overlayOpacity > 0) {
	      r.fillStyle(context, overlayColor[0], overlayColor[1], overlayColor[2], overlayOpacity);

	      r.nodeShapes['roundrectangle'].draw(context, pos.x, pos.y, nodeWidth + overlayPadding * 2, nodeHeight + overlayPadding * 2);

	      context.fill();
	    }
	  };

	  var drawText = function drawText() {
	    r.drawElementText(context, node, drawLabel);
	  };

	  var ghost = node.pstyle('ghost').value === 'yes';

	  if (ghost) {
	    var gx = node.pstyle('ghost-offset-x').pfValue;
	    var gy = node.pstyle('ghost-offset-y').pfValue;
	    var ghostOpacity = node.pstyle('ghost-opacity').value;
	    var effGhostOpacity = ghostOpacity * parentOpacity;

	    context.translate(gx, gy);

	    setupShapeColor(ghostOpacity * bgOpacity);
	    drawShape();
	    drawImages(effGhostOpacity);
	    drawPie(darkness !== 0 || borderWidth !== 0);
	    darken(effGhostOpacity);
	    setupBorderColor(ghostOpacity * borderOpacity);
	    drawBorder();

	    context.translate(-gx, -gy);
	  }

	  setupShapeColor();
	  drawShape();
	  drawImages();
	  drawPie(darkness !== 0 || borderWidth !== 0);
	  darken();
	  setupBorderColor();
	  drawBorder();

	  if (usePaths) {
	    context.translate(-pos.x, -pos.y);
	  }

	  drawText();
	  drawOverlay();

	  //
	  // clean up shift

	  if (shiftToOriginWithBb) {
	    context.translate(bb.x1, bb.y1);
	  }
	};

	// does the node have at least one pie piece?
	CRp.hasPie = function (node) {
	  node = node[0]; // ensure ele ref

	  return node._private.hasPie;
	};

	CRp.drawPie = function (context, node, nodeOpacity, pos) {
	  node = node[0]; // ensure ele ref
	  pos = pos || node.position();

	  var cyStyle = node.cy().style();
	  var pieSize = node.pstyle('pie-size');
	  var x = pos.x;
	  var y = pos.y;
	  var nodeW = node.width();
	  var nodeH = node.height();
	  var radius = Math.min(nodeW, nodeH) / 2; // must fit in node
	  var lastPercent = 0; // what % to continue drawing pie slices from on [0, 1]
	  var usePaths = this.usePaths();

	  if (usePaths) {
	    x = 0;
	    y = 0;
	  }

	  if (pieSize.units === '%') {
	    radius = radius * pieSize.pfValue;
	  } else if (pieSize.pfValue !== undefined) {
	    radius = pieSize.pfValue / 2;
	  }

	  for (var i = 1; i <= cyStyle.pieBackgroundN; i++) {
	    // 1..N
	    var size = node.pstyle('pie-' + i + '-background-size').value;
	    var color = node.pstyle('pie-' + i + '-background-color').value;
	    var opacity = node.pstyle('pie-' + i + '-background-opacity').value * nodeOpacity;
	    var percent = size / 100; // map integer range [0, 100] to [0, 1]

	    // percent can't push beyond 1
	    if (percent + lastPercent > 1) {
	      percent = 1 - lastPercent;
	    }

	    var angleStart = 1.5 * Math.PI + 2 * Math.PI * lastPercent; // start at 12 o'clock and go clockwise
	    var angleDelta = 2 * Math.PI * percent;
	    var angleEnd = angleStart + angleDelta;

	    // ignore if
	    // - zero size
	    // - we're already beyond the full circle
	    // - adding the current slice would go beyond the full circle
	    if (size === 0 || lastPercent >= 1 || lastPercent + percent > 1) {
	      continue;
	    }

	    context.beginPath();
	    context.moveTo(x, y);
	    context.arc(x, y, radius, angleStart, angleEnd);
	    context.closePath();

	    this.fillStyle(context, color[0], color[1], color[2], opacity);

	    context.fill();

	    lastPercent += percent;
	  }
	};

	module.exports = CRp;

	/***/ }),
	/* 132 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var CRp = {};

	var util = __webpack_require__(1);

	var motionBlurDelay = 100;

	// var isFirefox = typeof InstallTrigger !== 'undefined';

	CRp.getPixelRatio = function () {
	  var context = this.data.contexts[0];

	  if (this.forcedPixelRatio != null) {
	    return this.forcedPixelRatio;
	  }

	  var backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;

	  return (window.devicePixelRatio || 1) / backingStore; // eslint-disable-line no-undef
	};

	CRp.paintCache = function (context) {
	  var caches = this.paintCaches = this.paintCaches || [];
	  var needToCreateCache = true;
	  var cache;

	  for (var i = 0; i < caches.length; i++) {
	    cache = caches[i];

	    if (cache.context === context) {
	      needToCreateCache = false;
	      break;
	    }
	  }

	  if (needToCreateCache) {
	    cache = {
	      context: context
	    };
	    caches.push(cache);
	  }

	  return cache;
	};

	CRp.fillStyle = function (context, r, g, b, a) {
	  context.fillStyle = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';

	  // turn off for now, seems context does its own caching

	  // var cache = this.paintCache(context);

	  // var fillStyle = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';

	  // if( cache.fillStyle !== fillStyle ){
	  //   context.fillStyle = cache.fillStyle = fillStyle;
	  // }
	};

	CRp.strokeStyle = function (context, r, g, b, a) {
	  context.strokeStyle = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';

	  // turn off for now, seems context does its own caching

	  // var cache = this.paintCache(context);

	  // var strokeStyle = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';

	  // if( cache.strokeStyle !== strokeStyle ){
	  //   context.strokeStyle = cache.strokeStyle = strokeStyle;
	  // }
	};

	// Resize canvas
	CRp.matchCanvasSize = function (container) {
	  var r = this;
	  var data = r.data;
	  var bb = r.findContainerClientCoords();
	  var width = bb[2];
	  var height = bb[3];
	  var pixelRatio = r.getPixelRatio();
	  var mbPxRatio = r.motionBlurPxRatio;

	  if (container === r.data.bufferCanvases[r.MOTIONBLUR_BUFFER_NODE] || container === r.data.bufferCanvases[r.MOTIONBLUR_BUFFER_DRAG]) {
	    pixelRatio = mbPxRatio;
	  }

	  var canvasWidth = width * pixelRatio;
	  var canvasHeight = height * pixelRatio;
	  var canvas;

	  if (canvasWidth === r.canvasWidth && canvasHeight === r.canvasHeight) {
	    return; // save cycles if same
	  }

	  r.fontCaches = null; // resizing resets the style

	  var canvasContainer = data.canvasContainer;
	  canvasContainer.style.width = width + 'px';
	  canvasContainer.style.height = height + 'px';

	  for (var i = 0; i < r.CANVAS_LAYERS; i++) {
	    canvas = data.canvases[i];

	    canvas.width = canvasWidth;
	    canvas.height = canvasHeight;

	    canvas.style.width = width + 'px';
	    canvas.style.height = height + 'px';
	  }

	  for (var i = 0; i < r.BUFFER_COUNT; i++) {
	    canvas = data.bufferCanvases[i];

	    canvas.width = canvasWidth;
	    canvas.height = canvasHeight;

	    canvas.style.width = width + 'px';
	    canvas.style.height = height + 'px';
	  }

	  r.textureMult = 1;
	  if (pixelRatio <= 1) {
	    canvas = data.bufferCanvases[r.TEXTURE_BUFFER];

	    r.textureMult = 2;
	    canvas.width = canvasWidth * r.textureMult;
	    canvas.height = canvasHeight * r.textureMult;
	  }

	  r.canvasWidth = canvasWidth;
	  r.canvasHeight = canvasHeight;
	};

	CRp.renderTo = function (cxt, zoom, pan, pxRatio) {
	  this.render({
	    forcedContext: cxt,
	    forcedZoom: zoom,
	    forcedPan: pan,
	    drawAllLayers: true,
	    forcedPxRatio: pxRatio
	  });
	};

	CRp.render = function (options) {
	  options = options || util.staticEmptyObject();

	  var forcedContext = options.forcedContext;
	  var drawAllLayers = options.drawAllLayers;
	  var drawOnlyNodeLayer = options.drawOnlyNodeLayer;
	  var forcedZoom = options.forcedZoom;
	  var forcedPan = options.forcedPan;
	  var r = this;
	  var pixelRatio = options.forcedPxRatio === undefined ? this.getPixelRatio() : options.forcedPxRatio;
	  var cy = r.cy;var data = r.data;
	  var needDraw = data.canvasNeedsRedraw;
	  var textureDraw = r.textureOnViewport && !forcedContext && (r.pinching || r.hoverData.dragging || r.swipePanning || r.data.wheelZooming);
	  var motionBlur = options.motionBlur !== undefined ? options.motionBlur : r.motionBlur;
	  var mbPxRatio = r.motionBlurPxRatio;
	  var hasCompoundNodes = cy.hasCompoundNodes();
	  var inNodeDragGesture = r.hoverData.draggingEles;
	  var inBoxSelection = r.hoverData.selecting || r.touchData.selecting ? true : false;
	  motionBlur = motionBlur && !forcedContext && r.motionBlurEnabled && !inBoxSelection;
	  var motionBlurFadeEffect = motionBlur;

	  if (!forcedContext) {
	    if (r.prevPxRatio !== pixelRatio) {
	      r.invalidateContainerClientCoordsCache();
	      r.matchCanvasSize(r.container);

	      r.redrawHint('eles', true);
	      r.redrawHint('drag', true);
	    }

	    r.prevPxRatio = pixelRatio;
	  }

	  if (!forcedContext && r.motionBlurTimeout) {
	    clearTimeout(r.motionBlurTimeout);
	  }

	  if (motionBlur) {
	    if (r.mbFrames == null) {
	      r.mbFrames = 0;
	    }

	    r.mbFrames++;

	    if (r.mbFrames < 3) {
	      // need several frames before even high quality motionblur
	      motionBlurFadeEffect = false;
	    }

	    // go to lower quality blurry frames when several m/b frames have been rendered (avoids flashing)
	    if (r.mbFrames > r.minMbLowQualFrames) {
	      //r.fullQualityMb = false;
	      r.motionBlurPxRatio = r.mbPxRBlurry;
	    }
	  }

	  if (r.clearingMotionBlur) {
	    r.motionBlurPxRatio = 1;
	  }

	  // b/c drawToContext() may be async w.r.t. redraw(), keep track of last texture frame
	  // because a rogue async texture frame would clear needDraw
	  if (r.textureDrawLastFrame && !textureDraw) {
	    needDraw[r.NODE] = true;
	    needDraw[r.SELECT_BOX] = true;
	  }

	  var coreStyle = cy.style()._private.coreStyle;

	  var zoom = cy.zoom();
	  var effectiveZoom = forcedZoom !== undefined ? forcedZoom : zoom;
	  var pan = cy.pan();
	  var effectivePan = {
	    x: pan.x,
	    y: pan.y
	  };

	  var vp = {
	    zoom: zoom,
	    pan: {
	      x: pan.x,
	      y: pan.y
	    }
	  };
	  var prevVp = r.prevViewport;
	  var viewportIsDiff = prevVp === undefined || vp.zoom !== prevVp.zoom || vp.pan.x !== prevVp.pan.x || vp.pan.y !== prevVp.pan.y;

	  // we want the low quality motionblur only when the viewport is being manipulated etc (where it's not noticed)
	  if (!viewportIsDiff && !(inNodeDragGesture && !hasCompoundNodes)) {
	    r.motionBlurPxRatio = 1;
	  }

	  if (forcedPan) {
	    effectivePan = forcedPan;
	  }

	  // apply pixel ratio

	  effectiveZoom *= pixelRatio;
	  effectivePan.x *= pixelRatio;
	  effectivePan.y *= pixelRatio;

	  var eles = r.getCachedZSortedEles();

	  function mbclear(context, x, y, w, h) {
	    var gco = context.globalCompositeOperation;

	    context.globalCompositeOperation = 'destination-out';
	    r.fillStyle(context, 255, 255, 255, r.motionBlurTransparency);
	    context.fillRect(x, y, w, h);

	    context.globalCompositeOperation = gco;
	  }

	  function setContextTransform(context, clear) {
	    var ePan, eZoom, w, h;

	    if (!r.clearingMotionBlur && (context === data.bufferContexts[r.MOTIONBLUR_BUFFER_NODE] || context === data.bufferContexts[r.MOTIONBLUR_BUFFER_DRAG])) {
	      ePan = {
	        x: pan.x * mbPxRatio,
	        y: pan.y * mbPxRatio
	      };

	      eZoom = zoom * mbPxRatio;

	      w = r.canvasWidth * mbPxRatio;
	      h = r.canvasHeight * mbPxRatio;
	    } else {
	      ePan = effectivePan;
	      eZoom = effectiveZoom;

	      w = r.canvasWidth;
	      h = r.canvasHeight;
	    }

	    context.setTransform(1, 0, 0, 1, 0, 0);

	    if (clear === 'motionBlur') {
	      mbclear(context, 0, 0, w, h);
	    } else if (!forcedContext && (clear === undefined || clear)) {
	      context.clearRect(0, 0, w, h);
	    }

	    if (!drawAllLayers) {
	      context.translate(ePan.x, ePan.y);
	      context.scale(eZoom, eZoom);
	    }
	    if (forcedPan) {
	      context.translate(forcedPan.x, forcedPan.y);
	    }
	    if (forcedZoom) {
	      context.scale(forcedZoom, forcedZoom);
	    }
	  }

	  if (!textureDraw) {
	    r.textureDrawLastFrame = false;
	  }

	  if (textureDraw) {
	    r.textureDrawLastFrame = true;

	    var bb;

	    if (!r.textureCache) {
	      r.textureCache = {};

	      bb = r.textureCache.bb = cy.mutableElements().boundingBox();

	      r.textureCache.texture = r.data.bufferCanvases[r.TEXTURE_BUFFER];

	      var cxt = r.data.bufferContexts[r.TEXTURE_BUFFER];

	      cxt.setTransform(1, 0, 0, 1, 0, 0);
	      cxt.clearRect(0, 0, r.canvasWidth * r.textureMult, r.canvasHeight * r.textureMult);

	      r.render({
	        forcedContext: cxt,
	        drawOnlyNodeLayer: true,
	        forcedPxRatio: pixelRatio * r.textureMult
	      });

	      var vp = r.textureCache.viewport = {
	        zoom: cy.zoom(),
	        pan: cy.pan(),
	        width: r.canvasWidth,
	        height: r.canvasHeight
	      };

	      vp.mpan = {
	        x: (0 - vp.pan.x) / vp.zoom,
	        y: (0 - vp.pan.y) / vp.zoom
	      };
	    }

	    needDraw[r.DRAG] = false;
	    needDraw[r.NODE] = false;

	    var context = data.contexts[r.NODE];

	    var texture = r.textureCache.texture;
	    var vp = r.textureCache.viewport;
	    bb = r.textureCache.bb;

	    context.setTransform(1, 0, 0, 1, 0, 0);

	    if (motionBlur) {
	      mbclear(context, 0, 0, vp.width, vp.height);
	    } else {
	      context.clearRect(0, 0, vp.width, vp.height);
	    }

	    var outsideBgColor = coreStyle['outside-texture-bg-color'].value;
	    var outsideBgOpacity = coreStyle['outside-texture-bg-opacity'].value;
	    r.fillStyle(context, outsideBgColor[0], outsideBgColor[1], outsideBgColor[2], outsideBgOpacity);
	    context.fillRect(0, 0, vp.width, vp.height);

	    var zoom = cy.zoom();

	    setContextTransform(context, false);

	    context.clearRect(vp.mpan.x, vp.mpan.y, vp.width / vp.zoom / pixelRatio, vp.height / vp.zoom / pixelRatio);
	    context.drawImage(texture, vp.mpan.x, vp.mpan.y, vp.width / vp.zoom / pixelRatio, vp.height / vp.zoom / pixelRatio);
	  } else if (r.textureOnViewport && !forcedContext) {
	    // clear the cache since we don't need it
	    r.textureCache = null;
	  }

	  var extent = cy.extent();
	  var vpManip = r.pinching || r.hoverData.dragging || r.swipePanning || r.data.wheelZooming || r.hoverData.draggingEles;
	  var hideEdges = r.hideEdgesOnViewport && vpManip;

	  var needMbClear = [];

	  needMbClear[r.NODE] = !needDraw[r.NODE] && motionBlur && !r.clearedForMotionBlur[r.NODE] || r.clearingMotionBlur;
	  if (needMbClear[r.NODE]) {
	    r.clearedForMotionBlur[r.NODE] = true;
	  }

	  needMbClear[r.DRAG] = !needDraw[r.DRAG] && motionBlur && !r.clearedForMotionBlur[r.DRAG] || r.clearingMotionBlur;
	  if (needMbClear[r.DRAG]) {
	    r.clearedForMotionBlur[r.DRAG] = true;
	  }

	  if (needDraw[r.NODE] || drawAllLayers || drawOnlyNodeLayer || needMbClear[r.NODE]) {
	    var useBuffer = motionBlur && !needMbClear[r.NODE] && mbPxRatio !== 1;
	    var context = forcedContext || (useBuffer ? r.data.bufferContexts[r.MOTIONBLUR_BUFFER_NODE] : data.contexts[r.NODE]);
	    var clear = motionBlur && !useBuffer ? 'motionBlur' : undefined;

	    setContextTransform(context, clear);

	    if (hideEdges) {
	      r.drawCachedNodes(context, eles.nondrag, pixelRatio, extent);
	    } else {
	      r.drawLayeredElements(context, eles.nondrag, pixelRatio, extent);
	    }

	    if (r.debug) {
	      r.drawDebugPoints(context, eles.nondrag);
	    }

	    if (!drawAllLayers && !motionBlur) {
	      needDraw[r.NODE] = false;
	    }
	  }

	  if (!drawOnlyNodeLayer && (needDraw[r.DRAG] || drawAllLayers || needMbClear[r.DRAG])) {
	    var useBuffer = motionBlur && !needMbClear[r.DRAG] && mbPxRatio !== 1;
	    var context = forcedContext || (useBuffer ? r.data.bufferContexts[r.MOTIONBLUR_BUFFER_DRAG] : data.contexts[r.DRAG]);

	    setContextTransform(context, motionBlur && !useBuffer ? 'motionBlur' : undefined);

	    if (hideEdges) {
	      r.drawCachedNodes(context, eles.drag, pixelRatio, extent);
	    } else {
	      r.drawCachedElements(context, eles.drag, pixelRatio, extent);
	    }

	    if (r.debug) {
	      r.drawDebugPoints(context, eles.drag);
	    }

	    if (!drawAllLayers && !motionBlur) {
	      needDraw[r.DRAG] = false;
	    }
	  }

	  if (r.showFps || !drawOnlyNodeLayer && needDraw[r.SELECT_BOX] && !drawAllLayers) {
	    var context = forcedContext || data.contexts[r.SELECT_BOX];

	    setContextTransform(context);

	    if (r.selection[4] == 1 && (r.hoverData.selecting || r.touchData.selecting)) {
	      var zoom = r.cy.zoom();
	      var borderWidth = coreStyle['selection-box-border-width'].value / zoom;

	      context.lineWidth = borderWidth;
	      context.fillStyle = 'rgba(' + coreStyle['selection-box-color'].value[0] + ',' + coreStyle['selection-box-color'].value[1] + ',' + coreStyle['selection-box-color'].value[2] + ',' + coreStyle['selection-box-opacity'].value + ')';

	      context.fillRect(r.selection[0], r.selection[1], r.selection[2] - r.selection[0], r.selection[3] - r.selection[1]);

	      if (borderWidth > 0) {
	        context.strokeStyle = 'rgba(' + coreStyle['selection-box-border-color'].value[0] + ',' + coreStyle['selection-box-border-color'].value[1] + ',' + coreStyle['selection-box-border-color'].value[2] + ',' + coreStyle['selection-box-opacity'].value + ')';

	        context.strokeRect(r.selection[0], r.selection[1], r.selection[2] - r.selection[0], r.selection[3] - r.selection[1]);
	      }
	    }

	    if (data.bgActivePosistion && !r.hoverData.selecting) {
	      var zoom = r.cy.zoom();
	      var pos = data.bgActivePosistion;

	      context.fillStyle = 'rgba(' + coreStyle['active-bg-color'].value[0] + ',' + coreStyle['active-bg-color'].value[1] + ',' + coreStyle['active-bg-color'].value[2] + ',' + coreStyle['active-bg-opacity'].value + ')';

	      context.beginPath();
	      context.arc(pos.x, pos.y, coreStyle['active-bg-size'].pfValue / zoom, 0, 2 * Math.PI);
	      context.fill();
	    }

	    var timeToRender = r.lastRedrawTime;
	    if (r.showFps && timeToRender) {
	      timeToRender = Math.round(timeToRender);
	      var fps = Math.round(1000 / timeToRender);

	      context.setTransform(1, 0, 0, 1, 0, 0);

	      context.fillStyle = 'rgba(255, 0, 0, 0.75)';
	      context.strokeStyle = 'rgba(255, 0, 0, 0.75)';
	      context.lineWidth = 1;
	      context.fillText('1 frame = ' + timeToRender + ' ms = ' + fps + ' fps', 0, 20);

	      var maxFps = 60;
	      context.strokeRect(0, 30, 250, 20);
	      context.fillRect(0, 30, 250 * Math.min(fps / maxFps, 1), 20);
	    }

	    if (!drawAllLayers) {
	      needDraw[r.SELECT_BOX] = false;
	    }
	  }

	  // motionblur: blit rendered blurry frames
	  if (motionBlur && mbPxRatio !== 1) {
	    var cxtNode = data.contexts[r.NODE];
	    var txtNode = r.data.bufferCanvases[r.MOTIONBLUR_BUFFER_NODE];

	    var cxtDrag = data.contexts[r.DRAG];
	    var txtDrag = r.data.bufferCanvases[r.MOTIONBLUR_BUFFER_DRAG];

	    var drawMotionBlur = function drawMotionBlur(cxt, txt, needClear) {
	      cxt.setTransform(1, 0, 0, 1, 0, 0);

	      if (needClear || !motionBlurFadeEffect) {
	        cxt.clearRect(0, 0, r.canvasWidth, r.canvasHeight);
	      } else {
	        mbclear(cxt, 0, 0, r.canvasWidth, r.canvasHeight);
	      }

	      var pxr = mbPxRatio;

	      cxt.drawImage(txt, // img
	      0, 0, // sx, sy
	      r.canvasWidth * pxr, r.canvasHeight * pxr, // sw, sh
	      0, 0, // x, y
	      r.canvasWidth, r.canvasHeight // w, h
	      );
	    };

	    if (needDraw[r.NODE] || needMbClear[r.NODE]) {
	      drawMotionBlur(cxtNode, txtNode, needMbClear[r.NODE]);
	      needDraw[r.NODE] = false;
	    }

	    if (needDraw[r.DRAG] || needMbClear[r.DRAG]) {
	      drawMotionBlur(cxtDrag, txtDrag, needMbClear[r.DRAG]);
	      needDraw[r.DRAG] = false;
	    }
	  }

	  r.prevViewport = vp;

	  if (r.clearingMotionBlur) {
	    r.clearingMotionBlur = false;
	    r.motionBlurCleared = true;
	    r.motionBlur = true;
	  }

	  if (motionBlur) {
	    r.motionBlurTimeout = setTimeout(function () {
	      r.motionBlurTimeout = null;

	      r.clearedForMotionBlur[r.NODE] = false;
	      r.clearedForMotionBlur[r.DRAG] = false;
	      r.motionBlur = false;
	      r.clearingMotionBlur = !textureDraw;
	      r.mbFrames = 0;

	      needDraw[r.NODE] = true;
	      needDraw[r.DRAG] = true;

	      r.redraw();
	    }, motionBlurDelay);
	  }

	  if (!forcedContext) {
	    cy.emit('render');
	  }
	};

	module.exports = CRp;

	/***/ }),
	/* 133 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var math = __webpack_require__(2);

	var CRp = {};

	// @O Polygon drawing
	CRp.drawPolygonPath = function (context, x, y, width, height, points) {

	  var halfW = width / 2;
	  var halfH = height / 2;

	  if (context.beginPath) {
	    context.beginPath();
	  }

	  context.moveTo(x + halfW * points[0], y + halfH * points[1]);

	  for (var i = 1; i < points.length / 2; i++) {
	    context.lineTo(x + halfW * points[i * 2], y + halfH * points[i * 2 + 1]);
	  }

	  context.closePath();
	};

	// Round rectangle drawing
	CRp.drawRoundRectanglePath = function (context, x, y, width, height) {

	  var halfWidth = width / 2;
	  var halfHeight = height / 2;
	  var cornerRadius = math.getRoundRectangleRadius(width, height);

	  if (context.beginPath) {
	    context.beginPath();
	  }

	  // Start at top middle
	  context.moveTo(x, y - halfHeight);
	  // Arc from middle top to right side
	  context.arcTo(x + halfWidth, y - halfHeight, x + halfWidth, y, cornerRadius);
	  // Arc from right side to bottom
	  context.arcTo(x + halfWidth, y + halfHeight, x, y + halfHeight, cornerRadius);
	  // Arc from bottom to left side
	  context.arcTo(x - halfWidth, y + halfHeight, x - halfWidth, y, cornerRadius);
	  // Arc from left side to topBorder
	  context.arcTo(x - halfWidth, y - halfHeight, x, y - halfHeight, cornerRadius);
	  // Join line
	  context.lineTo(x, y - halfHeight);

	  context.closePath();
	};

	CRp.drawBottomRoundRectanglePath = function (context, x, y, width, height) {

	  var halfWidth = width / 2;
	  var halfHeight = height / 2;
	  var cornerRadius = math.getRoundRectangleRadius(width, height);

	  if (context.beginPath) {
	    context.beginPath();
	  }

	  // Start at top middle
	  context.moveTo(x, y - halfHeight);
	  context.lineTo(x + halfWidth, y - halfHeight);
	  context.lineTo(x + halfWidth, y);

	  context.arcTo(x + halfWidth, y + halfHeight, x, y + halfHeight, cornerRadius);
	  context.arcTo(x - halfWidth, y + halfHeight, x - halfWidth, y, cornerRadius);

	  context.lineTo(x - halfWidth, y - halfHeight);
	  context.lineTo(x, y - halfHeight);

	  context.closePath();
	};

	CRp.drawCutRectanglePath = function (context, x, y, width, height) {

	  var halfWidth = width / 2;
	  var halfHeight = height / 2;
	  var cornerLength = math.getCutRectangleCornerLength();

	  if (context.beginPath) {
	    context.beginPath();
	  }

	  context.moveTo(x - halfWidth + cornerLength, y - halfHeight);

	  context.lineTo(x + halfWidth - cornerLength, y - halfHeight);
	  context.lineTo(x + halfWidth, y - halfHeight + cornerLength);
	  context.lineTo(x + halfWidth, y + halfHeight - cornerLength);
	  context.lineTo(x + halfWidth - cornerLength, y + halfHeight);
	  context.lineTo(x - halfWidth + cornerLength, y + halfHeight);
	  context.lineTo(x - halfWidth, y + halfHeight - cornerLength);
	  context.lineTo(x - halfWidth, y - halfHeight + cornerLength);

	  context.closePath();
	};

	CRp.drawBarrelPath = function (context, x, y, width, height) {

	  var halfWidth = width / 2;
	  var halfHeight = height / 2;

	  var xBegin = x - halfWidth;
	  var xEnd = x + halfWidth;
	  var yBegin = y - halfHeight;
	  var yEnd = y + halfHeight;

	  var barrelCurveConstants = math.getBarrelCurveConstants(width, height);
	  var wOffset = barrelCurveConstants.widthOffset;
	  var hOffset = barrelCurveConstants.heightOffset;
	  var ctrlPtXOffset = barrelCurveConstants.ctrlPtOffsetPct * wOffset;

	  if (context.beginPath) {
	    context.beginPath();
	  }

	  context.moveTo(xBegin, yBegin + hOffset);

	  context.lineTo(xBegin, yEnd - hOffset);
	  context.quadraticCurveTo(xBegin + ctrlPtXOffset, yEnd, xBegin + wOffset, yEnd);

	  context.lineTo(xEnd - wOffset, yEnd);
	  context.quadraticCurveTo(xEnd - ctrlPtXOffset, yEnd, xEnd, yEnd - hOffset);

	  context.lineTo(xEnd, yBegin + hOffset);
	  context.quadraticCurveTo(xEnd - ctrlPtXOffset, yBegin, xEnd - wOffset, yBegin);

	  context.lineTo(xBegin + wOffset, yBegin);
	  context.quadraticCurveTo(xBegin + ctrlPtXOffset, yBegin, xBegin, yBegin + hOffset);

	  context.closePath();
	};

	var sin0 = Math.sin(0);
	var cos0 = Math.cos(0);

	var sin = {};
	var cos = {};

	var ellipseStepSize = Math.PI / 40;

	for (var i = 0 * Math.PI; i < 2 * Math.PI; i += ellipseStepSize) {
	  sin[i] = Math.sin(i);
	  cos[i] = Math.cos(i);
	}

	CRp.drawEllipsePath = function (context, centerX, centerY, width, height) {
	  if (context.beginPath) {
	    context.beginPath();
	  }

	  if (context.ellipse) {
	    context.ellipse(centerX, centerY, width / 2, height / 2, 0, 0, 2 * Math.PI);
	  } else {
	    var xPos, yPos;
	    var rw = width / 2;
	    var rh = height / 2;
	    for (var i = 0 * Math.PI; i < 2 * Math.PI; i += ellipseStepSize) {
	      xPos = centerX - rw * sin[i] * sin0 + rw * cos[i] * cos0;
	      yPos = centerY + rh * cos[i] * sin0 + rh * sin[i] * cos0;

	      if (i === 0) {
	        context.moveTo(xPos, yPos);
	      } else {
	        context.lineTo(xPos, yPos);
	      }
	    }
	  }

	  context.closePath();
	};

	module.exports = CRp;

	/***/ }),
	/* 134 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);

	var CRp = {};

	CRp.createBuffer = function (w, h) {
	  var buffer = document.createElement('canvas'); // eslint-disable-line no-undef
	  buffer.width = w;
	  buffer.height = h;

	  return [buffer, buffer.getContext('2d')];
	};

	CRp.bufferCanvasImage = function (options) {
	  var cy = this.cy;
	  var eles = cy.mutableElements();
	  var bb = eles.boundingBox();
	  var ctrRect = this.findContainerClientCoords();
	  var width = options.full ? Math.ceil(bb.w) : ctrRect[2];
	  var height = options.full ? Math.ceil(bb.h) : ctrRect[3];
	  var specdMaxDims = is.number(options.maxWidth) || is.number(options.maxHeight);
	  var pxRatio = this.getPixelRatio();
	  var scale = 1;

	  if (options.scale !== undefined) {
	    width *= options.scale;
	    height *= options.scale;

	    scale = options.scale;
	  } else if (specdMaxDims) {
	    var maxScaleW = Infinity;
	    var maxScaleH = Infinity;

	    if (is.number(options.maxWidth)) {
	      maxScaleW = scale * options.maxWidth / width;
	    }

	    if (is.number(options.maxHeight)) {
	      maxScaleH = scale * options.maxHeight / height;
	    }

	    scale = Math.min(maxScaleW, maxScaleH);

	    width *= scale;
	    height *= scale;
	  }

	  if (!specdMaxDims) {
	    width *= pxRatio;
	    height *= pxRatio;
	    scale *= pxRatio;
	  }

	  var buffCanvas = document.createElement('canvas'); // eslint-disable-line no-undef

	  buffCanvas.width = width;
	  buffCanvas.height = height;

	  buffCanvas.style.width = width + 'px';
	  buffCanvas.style.height = height + 'px';

	  var buffCxt = buffCanvas.getContext('2d');

	  // Rasterize the layers, but only if container has nonzero size
	  if (width > 0 && height > 0) {

	    buffCxt.clearRect(0, 0, width, height);

	    buffCxt.globalCompositeOperation = 'source-over';

	    var zsortedEles = this.getCachedZSortedEles();

	    if (options.full) {
	      // draw the full bounds of the graph
	      buffCxt.translate(-bb.x1 * scale, -bb.y1 * scale);
	      buffCxt.scale(scale, scale);

	      this.drawElements(buffCxt, zsortedEles);

	      buffCxt.scale(1 / scale, 1 / scale);
	      buffCxt.translate(bb.x1 * scale, bb.y1 * scale);
	    } else {
	      // draw the current view
	      var pan = cy.pan();

	      var translation = {
	        x: pan.x * scale,
	        y: pan.y * scale
	      };

	      scale *= cy.zoom();

	      buffCxt.translate(translation.x, translation.y);
	      buffCxt.scale(scale, scale);

	      this.drawElements(buffCxt, zsortedEles);

	      buffCxt.scale(1 / scale, 1 / scale);
	      buffCxt.translate(-translation.x, -translation.y);
	    }

	    // need to fill bg at end like this in order to fill cleared transparent pixels in jpgs
	    if (options.bg) {
	      buffCxt.globalCompositeOperation = 'destination-over';

	      buffCxt.fillStyle = options.bg;
	      buffCxt.rect(0, 0, width, height);
	      buffCxt.fill();
	    }
	  }

	  return buffCanvas;
	};

	function b64ToBlob(b64, mimeType) {
	  var bytes = atob(b64);
	  var buff = new ArrayBuffer(bytes.length);
	  var buffUint8 = new Uint8Array(buff);

	  for (var i = 0; i < bytes.length; i++) {
	    buffUint8[i] = bytes.charCodeAt(i);
	  }

	  return new Blob([buff], { type: mimeType });
	}

	function b64UriToB64(b64uri) {
	  var i = b64uri.indexOf(',');

	  return b64uri.substr(i + 1);
	};

	function output(options, canvas, mimeType) {
	  var b64Uri = canvas.toDataURL(mimeType, options.quality);

	  switch (options.output) {
	    case 'blob':
	      return b64ToBlob(b64UriToB64(b64Uri), mimeType);

	    case 'base64':
	      return b64UriToB64(b64Uri);

	    case 'base64uri':
	    default:
	      return b64Uri;
	  }
	}

	CRp.png = function (options) {
	  return output(options, this.bufferCanvasImage(options), 'image/png');
	};

	CRp.jpg = function (options) {
	  return output(options, this.bufferCanvasImage(options), 'image/jpeg');
	};

	module.exports = CRp;

	/***/ }),
	/* 135 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var CRp = {};

	CRp.nodeShapeImpl = function (name, context, centerX, centerY, width, height, points) {
	  switch (name) {
	    case 'ellipse':
	      return this.drawEllipsePath(context, centerX, centerY, width, height);
	    case 'polygon':
	      return this.drawPolygonPath(context, centerX, centerY, width, height, points);
	    case 'roundrectangle':
	      return this.drawRoundRectanglePath(context, centerX, centerY, width, height);
	    case 'cutrectangle':
	      return this.drawCutRectanglePath(context, centerX, centerY, width, height);
	    case 'bottomroundrectangle':
	      return this.drawBottomRoundRectanglePath(context, centerX, centerY, width, height);
	    case 'barrel':
	      return this.drawBarrelPath(context, centerX, centerY, width, height);
	  }
	};

	module.exports = CRp;

	/***/ }),
	/* 136 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	var is = __webpack_require__(0);
	var util = __webpack_require__(1);
	var Style = __webpack_require__(18);

	// a dummy stylesheet object that doesn't need a reference to the core
	// (useful for init)
	var Stylesheet = function Stylesheet() {
	  if (!(this instanceof Stylesheet)) {
	    return new Stylesheet();
	  }

	  this.length = 0;
	};

	var sheetfn = Stylesheet.prototype;

	sheetfn.instanceString = function () {
	  return 'stylesheet';
	};

	// just store the selector to be parsed later
	sheetfn.selector = function (selector) {
	  var i = this.length++;

	  this[i] = {
	    selector: selector,
	    properties: []
	  };

	  return this; // chaining
	};

	// just store the property to be parsed later
	sheetfn.css = function (name, value) {
	  var i = this.length - 1;

	  if (is.string(name)) {
	    this[i].properties.push({
	      name: name,
	      value: value
	    });
	  } else if (is.plainObject(name)) {
	    var map = name;

	    for (var j = 0; j < Style.properties.length; j++) {
	      var prop = Style.properties[j];
	      var mapVal = map[prop.name];

	      if (mapVal === undefined) {
	        // also try camel case name
	        mapVal = map[util.dash2camel(prop.name)];
	      }

	      if (mapVal !== undefined) {
	        var _name = prop.name;
	        var _value = mapVal;

	        this[i].properties.push({
	          name: _name,
	          value: _value
	        });
	      }
	    }
	  }

	  return this; // chaining
	};

	sheetfn.style = sheetfn.css;

	// generate a real style object from the dummy stylesheet
	sheetfn.generateStyle = function (cy) {
	  var style = new Style(cy);

	  return this.appendToStyle(style);
	};

	// append a dummy stylesheet object on a real style object
	sheetfn.appendToStyle = function (style) {
	  for (var i = 0; i < this.length; i++) {
	    var context = this[i];
	    var selector = context.selector;
	    var props = context.properties;

	    style.selector(selector); // apply selector

	    for (var j = 0; j < props.length; j++) {
	      var prop = props[j];

	      style.css(prop.name, prop.value); // apply property
	    }
	  }

	  return style;
	};

	module.exports = Stylesheet;

	/***/ }),
	/* 137 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	module.exports = "3.2.16";

	/***/ })
	/******/ ]);
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(263).setImmediate))

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(264).nextTick;
	var apply = Function.prototype.apply;
	var slice = Array.prototype.slice;
	var immediateIds = {};
	var nextImmediateId = 0;

	// DOM APIs, for completeness

	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) { timeout.close(); };

	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(window, this._id);
	};

	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};

	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};

	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);

	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};

	// That's not how node.js implements it but the exposed api is the same.
	exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
	  var id = nextImmediateId++;
	  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

	  immediateIds[id] = true;

	  nextTick(function onNextTick() {
	    if (immediateIds[id]) {
	      // fn.call() is faster so we optimize for the common use-case
	      // @see http://jsperf.com/call-apply-segu
	      if (args) {
	        fn.apply(null, args);
	      } else {
	        fn.call(null);
	      }
	      // Prevent ids from leaking
	      exports.clearImmediate(id);
	    }
	  });

	  return id;
	};

	exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
	  delete immediateIds[id];
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(263).setImmediate, __webpack_require__(263).clearImmediate))

/***/ },
/* 264 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;

	process.listeners = function (name) { return [] }

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 265 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/**
	 * lodash (Custom Build) <https://lodash.com/>
	 * Build: `lodash modularize exports="npm" -o ./`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */

	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;

	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';

	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;

	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;

	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;

	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;

	/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max,
	    nativeMin = Math.min;

	/**
	 * Gets the timestamp of the number of milliseconds that have elapsed since
	 * the Unix epoch (1 January 1970 00:00:00 UTC).
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Date
	 * @returns {number} Returns the timestamp.
	 * @example
	 *
	 * _.defer(function(stamp) {
	 *   console.log(_.now() - stamp);
	 * }, _.now());
	 * // => Logs the number of milliseconds it took for the deferred invocation.
	 */
	var now = function() {
	  return root.Date.now();
	};

	/**
	 * Creates a debounced function that delays invoking `func` until after `wait`
	 * milliseconds have elapsed since the last time the debounced function was
	 * invoked. The debounced function comes with a `cancel` method to cancel
	 * delayed `func` invocations and a `flush` method to immediately invoke them.
	 * Provide `options` to indicate whether `func` should be invoked on the
	 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	 * with the last arguments provided to the debounced function. Subsequent
	 * calls to the debounced function return the result of the last `func`
	 * invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is
	 * invoked on the trailing edge of the timeout only if the debounced function
	 * is invoked more than once during the `wait` timeout.
	 *
	 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	 *
	 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	 * for details over the differences between `_.debounce` and `_.throttle`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to debounce.
	 * @param {number} [wait=0] The number of milliseconds to delay.
	 * @param {Object} [options={}] The options object.
	 * @param {boolean} [options.leading=false]
	 *  Specify invoking on the leading edge of the timeout.
	 * @param {number} [options.maxWait]
	 *  The maximum time `func` is allowed to be delayed before it's invoked.
	 * @param {boolean} [options.trailing=true]
	 *  Specify invoking on the trailing edge of the timeout.
	 * @returns {Function} Returns the new debounced function.
	 * @example
	 *
	 * // Avoid costly calculations while the window size is in flux.
	 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	 *
	 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	 * jQuery(element).on('click', _.debounce(sendMail, 300, {
	 *   'leading': true,
	 *   'trailing': false
	 * }));
	 *
	 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	 * var source = new EventSource('/stream');
	 * jQuery(source).on('message', debounced);
	 *
	 * // Cancel the trailing debounced invocation.
	 * jQuery(window).on('popstate', debounced.cancel);
	 */
	function debounce(func, wait, options) {
	  var lastArgs,
	      lastThis,
	      maxWait,
	      result,
	      timerId,
	      lastCallTime,
	      lastInvokeTime = 0,
	      leading = false,
	      maxing = false,
	      trailing = true;

	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  wait = toNumber(wait) || 0;
	  if (isObject(options)) {
	    leading = !!options.leading;
	    maxing = 'maxWait' in options;
	    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }

	  function invokeFunc(time) {
	    var args = lastArgs,
	        thisArg = lastThis;

	    lastArgs = lastThis = undefined;
	    lastInvokeTime = time;
	    result = func.apply(thisArg, args);
	    return result;
	  }

	  function leadingEdge(time) {
	    // Reset any `maxWait` timer.
	    lastInvokeTime = time;
	    // Start the timer for the trailing edge.
	    timerId = setTimeout(timerExpired, wait);
	    // Invoke the leading edge.
	    return leading ? invokeFunc(time) : result;
	  }

	  function remainingWait(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime,
	        result = wait - timeSinceLastCall;

	    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
	  }

	  function shouldInvoke(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime;

	    // Either this is the first call, activity has stopped and we're at the
	    // trailing edge, the system time has gone backwards and we're treating
	    // it as the trailing edge, or we've hit the `maxWait` limit.
	    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
	      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	  }

	  function timerExpired() {
	    var time = now();
	    if (shouldInvoke(time)) {
	      return trailingEdge(time);
	    }
	    // Restart the timer.
	    timerId = setTimeout(timerExpired, remainingWait(time));
	  }

	  function trailingEdge(time) {
	    timerId = undefined;

	    // Only invoke if we have `lastArgs` which means `func` has been
	    // debounced at least once.
	    if (trailing && lastArgs) {
	      return invokeFunc(time);
	    }
	    lastArgs = lastThis = undefined;
	    return result;
	  }

	  function cancel() {
	    if (timerId !== undefined) {
	      clearTimeout(timerId);
	    }
	    lastInvokeTime = 0;
	    lastArgs = lastCallTime = lastThis = timerId = undefined;
	  }

	  function flush() {
	    return timerId === undefined ? result : trailingEdge(now());
	  }

	  function debounced() {
	    var time = now(),
	        isInvoking = shouldInvoke(time);

	    lastArgs = arguments;
	    lastThis = this;
	    lastCallTime = time;

	    if (isInvoking) {
	      if (timerId === undefined) {
	        return leadingEdge(lastCallTime);
	      }
	      if (maxing) {
	        // Handle invocations in a tight loop.
	        timerId = setTimeout(timerExpired, wait);
	        return invokeFunc(lastCallTime);
	      }
	    }
	    if (timerId === undefined) {
	      timerId = setTimeout(timerExpired, wait);
	    }
	    return result;
	  }
	  debounced.cancel = cancel;
	  debounced.flush = flush;
	  return debounced;
	}

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}

	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && objectToString.call(value) == symbolTag);
	}

	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}

	module.exports = debounce;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(267);


/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Generated by CoffeeScript 1.8.0
	(function() {
	  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;

	  floor = Math.floor, min = Math.min;


	  /*
	  Default comparison function to be used
	   */

	  defaultCmp = function(x, y) {
	    if (x < y) {
	      return -1;
	    }
	    if (x > y) {
	      return 1;
	    }
	    return 0;
	  };


	  /*
	  Insert item x in list a, and keep it sorted assuming a is sorted.
	  
	  If x is already in a, insert it to the right of the rightmost x.
	  
	  Optional args lo (default 0) and hi (default a.length) bound the slice
	  of a to be searched.
	   */

	  insort = function(a, x, lo, hi, cmp) {
	    var mid;
	    if (lo == null) {
	      lo = 0;
	    }
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    if (lo < 0) {
	      throw new Error('lo must be non-negative');
	    }
	    if (hi == null) {
	      hi = a.length;
	    }
	    while (lo < hi) {
	      mid = floor((lo + hi) / 2);
	      if (cmp(x, a[mid]) < 0) {
	        hi = mid;
	      } else {
	        lo = mid + 1;
	      }
	    }
	    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);
	  };


	  /*
	  Push item onto heap, maintaining the heap invariant.
	   */

	  heappush = function(array, item, cmp) {
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    array.push(item);
	    return _siftdown(array, 0, array.length - 1, cmp);
	  };


	  /*
	  Pop the smallest item off the heap, maintaining the heap invariant.
	   */

	  heappop = function(array, cmp) {
	    var lastelt, returnitem;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    lastelt = array.pop();
	    if (array.length) {
	      returnitem = array[0];
	      array[0] = lastelt;
	      _siftup(array, 0, cmp);
	    } else {
	      returnitem = lastelt;
	    }
	    return returnitem;
	  };


	  /*
	  Pop and return the current smallest value, and add the new item.
	  
	  This is more efficient than heappop() followed by heappush(), and can be
	  more appropriate when using a fixed size heap. Note that the value
	  returned may be larger than item! That constrains reasonable use of
	  this routine unless written as part of a conditional replacement:
	      if item > array[0]
	        item = heapreplace(array, item)
	   */

	  heapreplace = function(array, item, cmp) {
	    var returnitem;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    returnitem = array[0];
	    array[0] = item;
	    _siftup(array, 0, cmp);
	    return returnitem;
	  };


	  /*
	  Fast version of a heappush followed by a heappop.
	   */

	  heappushpop = function(array, item, cmp) {
	    var _ref;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    if (array.length && cmp(array[0], item) < 0) {
	      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];
	      _siftup(array, 0, cmp);
	    }
	    return item;
	  };


	  /*
	  Transform list into a heap, in-place, in O(array.length) time.
	   */

	  heapify = function(array, cmp) {
	    var i, _i, _j, _len, _ref, _ref1, _results, _results1;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    _ref1 = (function() {
	      _results1 = [];
	      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }
	      return _results1;
	    }).apply(this).reverse();
	    _results = [];
	    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
	      i = _ref1[_i];
	      _results.push(_siftup(array, i, cmp));
	    }
	    return _results;
	  };


	  /*
	  Update the position of the given item in the heap.
	  This function should be called every time the item is being modified.
	   */

	  updateItem = function(array, item, cmp) {
	    var pos;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    pos = array.indexOf(item);
	    if (pos === -1) {
	      return;
	    }
	    _siftdown(array, 0, pos, cmp);
	    return _siftup(array, pos, cmp);
	  };


	  /*
	  Find the n largest elements in a dataset.
	   */

	  nlargest = function(array, n, cmp) {
	    var elem, result, _i, _len, _ref;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    result = array.slice(0, n);
	    if (!result.length) {
	      return result;
	    }
	    heapify(result, cmp);
	    _ref = array.slice(n);
	    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	      elem = _ref[_i];
	      heappushpop(result, elem, cmp);
	    }
	    return result.sort(cmp).reverse();
	  };


	  /*
	  Find the n smallest elements in a dataset.
	   */

	  nsmallest = function(array, n, cmp) {
	    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    if (n * 10 <= array.length) {
	      result = array.slice(0, n).sort(cmp);
	      if (!result.length) {
	        return result;
	      }
	      los = result[result.length - 1];
	      _ref = array.slice(n);
	      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	        elem = _ref[_i];
	        if (cmp(elem, los) < 0) {
	          insort(result, elem, 0, null, cmp);
	          result.pop();
	          los = result[result.length - 1];
	        }
	      }
	      return result;
	    }
	    heapify(array, cmp);
	    _results = [];
	    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
	      _results.push(heappop(array, cmp));
	    }
	    return _results;
	  };

	  _siftdown = function(array, startpos, pos, cmp) {
	    var newitem, parent, parentpos;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    newitem = array[pos];
	    while (pos > startpos) {
	      parentpos = (pos - 1) >> 1;
	      parent = array[parentpos];
	      if (cmp(newitem, parent) < 0) {
	        array[pos] = parent;
	        pos = parentpos;
	        continue;
	      }
	      break;
	    }
	    return array[pos] = newitem;
	  };

	  _siftup = function(array, pos, cmp) {
	    var childpos, endpos, newitem, rightpos, startpos;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    endpos = array.length;
	    startpos = pos;
	    newitem = array[pos];
	    childpos = 2 * pos + 1;
	    while (childpos < endpos) {
	      rightpos = childpos + 1;
	      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {
	        childpos = rightpos;
	      }
	      array[pos] = array[childpos];
	      pos = childpos;
	      childpos = 2 * pos + 1;
	    }
	    array[pos] = newitem;
	    return _siftdown(array, startpos, pos, cmp);
	  };

	  Heap = (function() {
	    Heap.push = heappush;

	    Heap.pop = heappop;

	    Heap.replace = heapreplace;

	    Heap.pushpop = heappushpop;

	    Heap.heapify = heapify;

	    Heap.updateItem = updateItem;

	    Heap.nlargest = nlargest;

	    Heap.nsmallest = nsmallest;

	    function Heap(cmp) {
	      this.cmp = cmp != null ? cmp : defaultCmp;
	      this.nodes = [];
	    }

	    Heap.prototype.push = function(x) {
	      return heappush(this.nodes, x, this.cmp);
	    };

	    Heap.prototype.pop = function() {
	      return heappop(this.nodes, this.cmp);
	    };

	    Heap.prototype.peek = function() {
	      return this.nodes[0];
	    };

	    Heap.prototype.contains = function(x) {
	      return this.nodes.indexOf(x) !== -1;
	    };

	    Heap.prototype.replace = function(x) {
	      return heapreplace(this.nodes, x, this.cmp);
	    };

	    Heap.prototype.pushpop = function(x) {
	      return heappushpop(this.nodes, x, this.cmp);
	    };

	    Heap.prototype.heapify = function() {
	      return heapify(this.nodes, this.cmp);
	    };

	    Heap.prototype.updateItem = function(x) {
	      return updateItem(this.nodes, x, this.cmp);
	    };

	    Heap.prototype.clear = function() {
	      return this.nodes = [];
	    };

	    Heap.prototype.empty = function() {
	      return this.nodes.length === 0;
	    };

	    Heap.prototype.size = function() {
	      return this.nodes.length;
	    };

	    Heap.prototype.clone = function() {
	      var heap;
	      heap = new Heap();
	      heap.nodes = this.nodes.slice(0);
	      return heap;
	    };

	    Heap.prototype.toArray = function() {
	      return this.nodes.slice(0);
	    };

	    Heap.prototype.insert = Heap.prototype.push;

	    Heap.prototype.top = Heap.prototype.peek;

	    Heap.prototype.front = Heap.prototype.peek;

	    Heap.prototype.has = Heap.prototype.contains;

	    Heap.prototype.copy = Heap.prototype.clone;

	    return Heap;

	  })();

	  (function(root, factory) {
	    if (true) {
	      return !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if (typeof exports === 'object') {
	      return module.exports = factory();
	    } else {
	      return root.Heap = factory();
	    }
	  })(this, function() {
	    return Heap;
	  });

	}).call(this);


/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _mobxReact = __webpack_require__(62);

	var _styledComponents = __webpack_require__(64);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _reactClickOutside = __webpack_require__(269);

	var _reactClickOutside2 = _interopRequireDefault(_reactClickOutside);

	var _button = __webpack_require__(156);

	var _button2 = _interopRequireDefault(_button);

	var _configControl = __webpack_require__(258);

	var _configControl2 = _interopRequireDefault(_configControl);

	var _store = __webpack_require__(118);

	var _store2 = _interopRequireDefault(_store);

	var _colors = __webpack_require__(127);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var StyledMatingControls = _styledComponents2.default.div.withConfig({
	  displayName: "matingControls__StyledMatingControls",
	  componentId: "leucbk-0"
	})(["display:inline-block;position:relative;float:", ";"], function (props) {
	  return props.right ? "right" : props.left ? "left" : "none";
	});

	var ControlsHeader = _styledComponents2.default.div.withConfig({
	  displayName: "matingControls__ControlsHeader",
	  componentId: "leucbk-1"
	})(["display:inline-block;font-size:18px;font-family:\"Hind Madurai\";margin:6px;margin-top:", ";"], function (props) {
	  return props.topMargin == null || props.topMargin ? "18px" : 0;
	});

	var StyledMatingControlPanel = _styledComponents2.default.div.withConfig({
	  displayName: "matingControls__StyledMatingControlPanel",
	  componentId: "leucbk-2"
	})(["background-color:", ";border-radius:3px;border:2px solid ", ";box-shadow:0px 0px 5px 3px rgba(255,255,255,0.8);display:inline-block;font-family:sans-serif;font-size:16px;right:10px;min-height:200px;padding:15px;position:absolute;top:52px;visibility:", ";z-index:1;"], _colors.panelBackground, _colors.blue, function (props) {
	  return props.show ? "visible" : "hidden";
	});

	var MatingControl = (0, _reactClickOutside2.default)(_class = (0, _mobxReact.observer)(_class = function (_Component) {
	  _inherits(MatingControl, _Component);

	  function MatingControl() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, MatingControl);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MatingControl.__proto__ || Object.getPrototypeOf(MatingControl)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      show: false
	    }, _this.toggleShow = function () {
	      _this.setState({ show: !_this.state.show });
	    }, _this.handleClickOutside = function () {
	      _this.setState({ show: false });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(MatingControl, [{
	    key: "render",
	    value: function render() {
	      return _react2.default.createElement(
	        StyledMatingControls,
	        { left: this.props.left, right: this.props.right },
	        _react2.default.createElement(
	          _button2.default,
	          {
	            active: this.state.show,
	            onClick: this.toggleShow
	          },
	          "Mating Controls"
	        ),
	        _react2.default.createElement(
	          StyledMatingControlPanel,
	          { show: this.state.show },
	          _react2.default.createElement(
	            ControlsHeader,
	            { topMargin: false },
	            "Mutation"
	          ),
	          _react2.default.createElement(_configControl2.default, {
	            name: "Note Mutation Rate",
	            value: _store2.default.noteMutationRate,
	            changeHandler: _store2.default.setNoteMutationRate,
	            min: 0,
	            max: 100
	          }),
	          _react2.default.createElement(_configControl2.default, {
	            name: "Sample Mutation Rate",
	            value: _store2.default.sampleMutationRate,
	            changeHandler: _store2.default.setSampleMutationRate,
	            min: 0,
	            max: 100
	          }),
	          _react2.default.createElement(
	            ControlsHeader,
	            null,
	            "New Generation"
	          ),
	          _react2.default.createElement(_configControl2.default, {
	            name: "Number of Children",
	            value: _store2.default.numChildren,
	            changeHandler: _store2.default.setNumChildren,
	            min: 1,
	            max: 20
	          }),
	          _react2.default.createElement(_configControl2.default, {
	            name: "Number of Survivors",
	            value: _store2.default.numSurvivors,
	            changeHandler: _store2.default.setNumSurvivors,
	            min: 1,
	            max: 20
	          }),
	          _react2.default.createElement(_configControl2.default, {
	            name: "Fitness Threshold",
	            value: _store2.default.fitnessPercentile,
	            changeHandler: _store2.default.setFitnessPercentile,
	            min: 0,
	            max: 100
	          })
	        )
	      );
	    }
	  }]);

	  return MatingControl;
	}(_react.Component)) || _class) || _class;

	exports.default = MatingControl;

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var hoistNonReactStatic = __webpack_require__(68);
	var React = __webpack_require__(2);
	var ReactDOM = __webpack_require__(13);

	module.exports = function enhanceWithClickOutside(WrappedComponent) {
	  var componentName = WrappedComponent.displayName || WrappedComponent.name;

	  var EnhancedComponent = function (_React$Component) {
	    _inherits(EnhancedComponent, _React$Component);

	    function EnhancedComponent(props) {
	      _classCallCheck(this, EnhancedComponent);

	      var _this = _possibleConstructorReturn(this, (EnhancedComponent.__proto__ || Object.getPrototypeOf(EnhancedComponent)).call(this, props));

	      _this.handleClickOutside = _this.handleClickOutside.bind(_this);
	      return _this;
	    }

	    _createClass(EnhancedComponent, [{
	      key: 'componentDidMount',
	      value: function componentDidMount() {
	        document.addEventListener('click', this.handleClickOutside, true);
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        document.removeEventListener('click', this.handleClickOutside, true);
	      }
	    }, {
	      key: 'handleClickOutside',
	      value: function handleClickOutside(e) {
	        var domNode = this.__domNode;
	        if ((!domNode || !domNode.contains(e.target)) && this.__wrappedInstance && typeof this.__wrappedInstance.handleClickOutside === 'function') {
	          this.__wrappedInstance.handleClickOutside(e);
	        }
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _this2 = this;

	        var _props = this.props,
	            wrappedRef = _props.wrappedRef,
	            rest = _objectWithoutProperties(_props, ['wrappedRef']);

	        return React.createElement(WrappedComponent, _extends({}, rest, {
	          ref: function ref(c) {
	            _this2.__wrappedInstance = c;
	            _this2.__domNode = ReactDOM.findDOMNode(c);
	            wrappedRef && wrappedRef(c);
	          }
	        }));
	      }
	    }]);

	    return EnhancedComponent;
	  }(React.Component);

	  EnhancedComponent.displayName = 'clickOutside(' + componentName + ')';

	  return hoistNonReactStatic(EnhancedComponent, WrappedComponent);
	};

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _class, _class2, _temp2;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _mobxReact = __webpack_require__(62);

	var _styledComponents = __webpack_require__(64);

	var _styledComponents2 = _interopRequireDefault(_styledComponents);

	var _ti = __webpack_require__(271);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var starSize = 40;
	var NUM_STARS = 10;
	var colors = ["#FF0000", "#FF3400", "#FF6900", "#FF9E00", "#FFD300", "#E5FF00", "#9FFF00", "#6AFF00", "#35FF00", "#00FF00"];

	var StyledStarRating = _styledComponents2.default.span.withConfig({
	  displayName: "starRating__StyledStarRating",
	  componentId: "zhzhl7-0"
	})(["display:inline-block;margin:31px 0 25px;svg:hover{cursor:pointer;}"]);

	var StarRating = (0, _mobxReact.observer)(_class = (_temp2 = _class2 = function (_Component) {
	  _inherits(StarRating, _Component);

	  function StarRating() {
	    var _ref;

	    var _temp, _this, _ret;

	    _classCallCheck(this, StarRating);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = StarRating.__proto__ || Object.getPrototypeOf(StarRating)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      score: null
	    }, _this.handleStarHover = function (e, i) {
	      _this.setState({ score: i + 1 });
	    }, _this.handleStarUnhover = function (e) {
	      _this.setState({ score: null });
	    }, _this.handleStarClick = function (e) {
	      _this.props.handleSetScore(_this.state.score);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  _createClass(StarRating, [{
	    key: "render",
	    value: function render() {
	      var _this2 = this;

	      var stars = Array(NUM_STARS).fill(0).map(function (temp, i) {
	        var props = {
	          key: i,
	          size: starSize,
	          //color        : colors[i],
	          onMouseEnter: function onMouseEnter(e) {
	            return _this2.handleStarHover(e, i);
	          },
	          onClick: _this2.handleStarClick
	        };

	        var score = _this2.state.score || _this2.props.score;

	        return i < score ? _react2.default.createElement(_ti.TiStarFullOutline, props) : _react2.default.createElement(_ti.TiStarOutline, props);
	      });

	      return _react2.default.createElement(
	        StyledStarRating,
	        {
	          onMouseLeave: this.handleStarUnhover
	        },
	        stars
	      );
	    }
	  }]);

	  return StarRating;
	}(_react.Component), _class2.defaultProps = {
	  score: 0
	}, _temp2)) || _class;

	exports.default = StarRating;

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	// THIS FILE IS AUTO GENERATED
	const { GenIcon } = __webpack_require__(116)
	module.exports.TiAdjustBrightness = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 6.934l1-2.934c.072-.213.078-.452 0-.682-.188-.553-.789-.848-1.341-.659-.553.189-.847.788-.659 1.341l1 2.934zM4 11c-.213-.072-.452-.078-.682 0-.553.188-.848.789-.659 1.341.189.553.788.847 1.341.659l2.934-1-2.934-1zM12 17.066l-1 2.934c-.072.213-.078.452 0 .682.188.553.789.848 1.341.659.553-.189.847-.788.659-1.341l-1-2.934zM21.341 11.657c-.188-.553-.788-.848-1.341-.659l-2.934 1 2.934 1c.213.072.452.078.682 0 .552-.188.847-.789.659-1.341zM5.636 7.05l2.781 1.367-1.367-2.781c-.1-.202-.265-.375-.482-.482-.524-.258-1.157-.042-1.415.482-.257.523-.041 1.157.483 1.414zM5.153 17.432c-.257.523-.041 1.156.482 1.414.523.257 1.157.041 1.414-.482l1.367-2.781-2.781 1.367c-.201.099-.374.263-.482.482zM18.363 16.949l-2.781-1.367 1.367 2.781c.1.202.264.375.482.482.523.257 1.156.041 1.414-.482s.042-1.157-.482-1.414zM18.844 6.566c.258-.524.042-1.157-.481-1.415-.523-.257-1.157-.041-1.414.482l-1.369 2.783 2.782-1.368c.202-.1.375-.264.482-.482zM12 7.5c-2.481 0-4.5 2.019-4.5 4.5s2.019 4.5 4.5 4.5 4.5-2.019 4.5-4.5-2.019-4.5-4.5-4.5z"}}]})(props);
	};
	module.exports.TiAdjustContrast = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M12 4c-4.418 0-8 3.582-8 8s3.582 8 8 8 8-3.582 8-8-3.582-8-8-8zm0 14c-3.314 0-6-2.686-6-6s2.686-6 6-6 6 2.686 6 6-2.686 6-6 6zM12 7v10c2.757 0 5-2.243 5-5s-2.243-5-5-5z"}}]}]})(props);
	};
	module.exports.TiAnchorOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"circle","attr":{"cx":"12","cy":"6","r":"1"}},{"tag":"path","attr":{"d":"M19.793 12.096c.134-.34.207-.709.207-1.096 0-1.654-1.346-3-3-3h-.422c.273-.619.422-1.297.422-2 0-2.757-2.243-5-5-5s-5 2.243-5 5c0 .703.149 1.381.422 2h-.422c-1.654 0-3 1.346-3 3 0 .387.073.756.207 1.096-.732.548-1.207 1.422-1.207 2.404 0 4.963 4.037 9 9 9s9-4.037 9-9c0-.982-.475-1.856-1.207-2.404zm-7.793 9.404c-3.859 0-7-3.141-7-7 0-.553.447-1 1-1s1 .447 1 1c0 2.414 1.721 4.434 4 4.898v-7.398h-4c-.553 0-1-.447-1-1s.447-1 1-1h4v-1.184c-1.162-.413-2-1.511-2-2.816 0-1.657 1.343-3 3-3s3 1.343 3 3c0 1.305-.838 2.403-2 2.816v1.184h4c.553 0 1 .447 1 1s-.447 1-1 1h-4v7.398c2.279-.465 4-2.484 4-4.898 0-.553.447-1 1-1s1 .447 1 1c0 3.859-3.141 7-7 7zm-4.679-8.5h2.679v4.962c-1.207-.701-2-2.009-2-3.462 0-.597-.263-1.133-.679-1.5zm9.358 0c-.416.367-.679.903-.679 1.5 0 1.453-.793 2.761-2 3.462v-4.962h2.679z"}},{"tag":"circle","attr":{"cx":"12","cy":"6","r":"1"}}]}]})(props);
	};
	module.exports.TiAnchor = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 13.5c-.553 0-1 .447-1 1 0 2.414-1.721 4.434-4 4.898v-7.398h4c.553 0 1-.447 1-1s-.447-1-1-1h-4v-1.184c1.162-.413 2-1.511 2-2.816 0-1.657-1.343-3-3-3s-3 1.343-3 3c0 1.305.838 2.403 2 2.816v1.184h-4c-.553 0-1 .447-1 1s.447 1 1 1h4v7.398c-2.279-.465-4-2.484-4-4.898 0-.553-.447-1-1-1s-1 .447-1 1c0 3.859 3.141 7 7 7s7-3.141 7-7c0-.553-.447-1-1-1zm-6-8.5c.551 0 1 .449 1 1s-.449 1-1 1-1-.449-1-1 .449-1 1-1z"}}]})(props);
	};
	module.exports.TiArchive = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M13 12h-3c-.276 0-.5.224-.5.5s.224.5.5.5h3c.276 0 .5-.224.5-.5s-.224-.5-.5-.5zM20 5h-17c-.553 0-1 .448-1 1s.447 1 1 1h17c.553 0 1-.448 1-1s-.447-1-1-1zM18 8h-13c-.553 0-1 .448-1 1v8c0 1.654 1.346 3 3 3h9c1.654 0 3-1.346 3-3v-8c0-.552-.447-1-1-1zm-2 10h-9c-.552 0-1-.449-1-1v-7h11v7c0 .551-.448 1-1 1z"}}]}]})(props);
	};
	module.exports.TiArrowBackOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.164 19.547c-1.641-2.5-3.669-3.285-6.164-3.484v1.437c0 .534-.208 1.036-.586 1.414-.756.756-2.077.751-2.823.005l-6.293-6.207c-.191-.189-.298-.444-.298-.713s.107-.524.298-.712l6.288-6.203c.754-.755 2.073-.756 2.829.001.377.378.585.88.585 1.414v1.704c4.619.933 8 4.997 8 9.796v1c0 .442-.29.832-.714.958-.095.027-.19.042-.286.042-.331 0-.646-.165-.836-.452zm-7.141-5.536c2.207.056 4.638.394 6.758 2.121-.768-3.216-3.477-5.702-6.893-6.08-.504-.056-.888-.052-.888-.052v-3.497l-5.576 5.496 5.576 5.5v-3.499l1.023.011z"}}]})(props);
	};
	module.exports.TiArrowBack = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 9.059v-2.559c0-.256-.098-.512-.293-.708-.195-.195-.451-.292-.707-.292s-.512.097-.707.292l-6.293 6.208 6.293 6.207c.195.195.451.293.707.293s.512-.098.707-.293.293-.452.293-.707v-2.489c2.75.068 5.755.566 8 3.989v-1c0-4.633-3.5-8.443-8-8.941z"}}]})(props);
	};
	module.exports.TiArrowDownOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 21.312l-7.121-7.121c-1.17-1.17-1.17-3.073 0-4.242 1.094-1.094 2.978-1.138 4.121-.115v-4.834c0-1.654 1.346-3 3-3s3 1.346 3 3v4.834c1.143-1.023 3.027-.979 4.121.115 1.17 1.169 1.17 3.072 0 4.242l-7.121 7.121zm-5-10.242c-.268 0-.518.104-.707.293-.391.39-.391 1.023 0 1.414l5.707 5.707 5.707-5.707c.391-.391.391-1.024 0-1.414-.379-.379-1.035-.379-1.414 0l-3.293 3.293v-9.656c0-.551-.448-1-1-1s-1 .449-1 1v9.656l-3.293-3.293c-.189-.189-.439-.293-.707-.293z"}}]})(props);
	};
	module.exports.TiArrowDownThick = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.414 10.656c-.781-.781-2.047-.781-2.828 0l-1.586 1.586v-7.242c0-1.105-.896-2-2-2-1.105 0-2 .895-2 2v7.242l-1.586-1.586c-.781-.781-2.047-.781-2.828 0s-.781 2.047 0 2.828l6.414 6.414 6.414-6.414c.781-.781.781-2.046 0-2.828z"}}]})(props);
	};
	module.exports.TiArrowDown = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.707 13.293c-.391-.391-1.023-.391-1.414 0l-2.293 2.293v-7.586c0-.552-.447-1-1-1s-1 .448-1 1v7.586l-2.293-2.293c-.391-.391-1.023-.391-1.414 0s-.391 1.023 0 1.414l4.707 4.707 4.707-4.707c.391-.391.391-1.023 0-1.414z"}}]})(props);
	};
	module.exports.TiArrowForwardOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 19.999c-.096 0-.191-.015-.286-.042-.424-.126-.714-.516-.714-.958v-1c0-4.8 3.381-8.864 8-9.796v-1.704c0-.534.208-1.036.585-1.414.756-.757 2.075-.756 2.829-.001l6.288 6.203c.191.188.298.443.298.712s-.107.524-.298.712l-6.293 6.207c-.746.746-2.067.751-2.823-.005-.378-.378-.586-.88-.586-1.414v-1.437c-2.495.201-4.523.985-6.164 3.484-.19.288-.505.453-.836.453zm8-5.989l1-.01v3.499l5.576-5.5-5.576-5.496v3.497s-.384-.004-.891.052c-3.416.378-6.125 2.864-6.892 6.08 2.121-1.728 4.551-2.066 6.783-2.122z"}}]})(props);
	};
	module.exports.TiArrowForward = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 5.499c-.256 0-.512.097-.707.292-.195.196-.293.452-.293.708v2.559c-4.5.498-8 4.309-8 8.941v1c2.245-3.423 5.25-3.92 8-3.989v2.489c0 .255.098.512.293.707s.451.293.707.293.512-.098.707-.293l6.293-6.207-6.293-6.208c-.195-.195-.451-.292-.707-.292z"}}]})(props);
	};
	module.exports.TiArrowLeftOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10.928 21c-.801 0-1.555-.312-2.121-.879l-7.121-7.121 7.121-7.121c1.133-1.134 3.109-1.134 4.242 0 .566.564.879 1.317.879 2.119 0 .746-.27 1.451-.764 2.002h4.836c1.654 0 3 1.346 3 3s-1.346 3-3 3h-4.836c.493.549.764 1.252.764 1.998.002.802-.312 1.557-.879 2.124-.567.566-1.32.878-2.121.878zm-6.414-8l5.707 5.707c.379.378 1.035.378 1.414 0 .189-.189.293-.441.293-.708s-.104-.517-.291-.705l-3.295-3.294h9.658c.552 0 1-.449 1-1s-.448-1-1-1h-9.658l3.293-3.293c.189-.189.293-.441.293-.708s-.104-.517-.292-.705c-.381-.38-1.036-.379-1.415-.001l-5.707 5.707z"}}]})(props);
	};
	module.exports.TiArrowLeftThick = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 11h-7.244l1.586-1.586c.781-.781.781-2.049 0-2.828-.781-.781-2.047-.781-2.828 0l-6.414 6.414 6.414 6.414c.39.391.902.586 1.414.586s1.023-.195 1.414-.586c.781-.781.781-2.049 0-2.828l-1.586-1.586h7.244c1.104 0 2-.896 2-2 0-1.105-.896-2-2-2z"}}]})(props);
	};
	module.exports.TiArrowLeft = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 11h-7.586l2.293-2.293c.391-.391.391-1.023 0-1.414s-1.023-.391-1.414 0l-4.707 4.707 4.707 4.707c.195.195.451.293.707.293s.512-.098.707-.293c.391-.391.391-1.023 0-1.414l-2.293-2.293h7.586c.552 0 1-.448 1-1s-.448-1-1-1z"}}]})(props);
	};
	module.exports.TiArrowLoopOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.994 7.187l.006-.187c0-.801-.312-1.555-.879-2.121-.566-.567-1.32-.879-2.121-.879s-1.555.312-2.121.879l-2.883 2.883c-.531-.474-1.23-.762-1.996-.762h-1c-3.859 0-7 3.14-7 7s3.141 7 7 7h9c3.859 0 7-3.14 7-7 0-3.306-2.14-6.084-5.006-6.813zm-1.994 11.813h-9c-2.757 0-5-2.243-5-5s2.243-5 5-5h1c.553 0 1 .448 1 1s-.447 1-1 1h-1c-1.654 0-3 1.346-3 3s1.346 3 3 3h9c1.654 0 3-1.346 3-3s-1.121-3-2.5-3h-2.086l1.293 1.293c.391.391.391 1.023 0 1.414-.195.195-.451.293-.707.293s-.512-.098-.707-.293l-3.707-3.707 3.707-3.707c.195-.195.451-.293.707-.293s.512.098.707.293c.391.391.391 1.023 0 1.414l-1.293 1.293h2.086c2.481 0 4.5 2.243 4.5 5s-2.243 5-5 5zm.749-6.971c.7.164 1.251 1 1.251 1.971 0 1.103-.897 2-2 2h-9c-1.103 0-2-.897-2-2s.897-2 2-2h1c.856 0 1.588-.541 1.873-1.299l3.713 3.713c.378.378.88.586 1.414.586s1.036-.208 1.414-.586.586-.88.586-1.414c0-.345-.087-.677-.251-.971z"}}]})(props);
	};
	module.exports.TiArrowLoop = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.5 8h-2.086l1.293-1.293c.391-.391.391-1.023 0-1.414s-1.023-.391-1.414 0l-3.707 3.707 3.707 3.707c.195.195.451.293.707.293s.512-.098.707-.293c.391-.391.391-1.023 0-1.414l-1.293-1.293h2.086c1.379 0 2.5 1.346 2.5 3s-1.346 3-3 3h-8c-1.654 0-3-1.346-3-3s1.346-3 3-3c.553 0 1-.448 1-1s-.447-1-1-1c-2.757 0-5 2.243-5 5s2.243 5 5 5h8c2.757 0 5-2.243 5-5s-2.019-5-4.5-5z"}}]})(props);
	};
	module.exports.TiArrowMaximiseOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 3h-5.243c-1.302 0-2.401.838-2.815 2h-6.942v7.061l.012.12c-1.167.41-2.012 1.512-2.012 2.819v7h7c1.311 0 2.593-.826 3-2h7v-7.061l-.012-.12c1.167-.41 2.012-1.512 2.012-2.819v-7h-2zm-2 15h-5c-.553 0-1-.448-1-1s.447-1 1-1h3v-3.061c0-.552.447-1 1-1s1 .448 1 1v5.061zm-11-11h5.061c.553 0 1 .448 1 1s-.447 1-1 1h-3.061v3.061c0 .552-.448 1-1 1-.553 0-1-.448-1-1v-5.061zm13 3c0 .552-.447 1-1 1s-1-.448-1-1v-1.586l-3.293 3.293c-.195.195-.451.293-.707.293s-.512-.098-.707-.293c-.391-.391-.391-1.023 0-1.414l3.293-3.293h-1.586c-.553 0-1-.448-1-1s.447-1 1-1h5v5zm-10 10h-5v-5c0-.552.447-1 1-1s1 .448 1 1v1.586l3.293-3.293c.195-.195.451-.293.707-.293s.512.098.707.293c.391.391.391 1.023 0 1.414l-3.293 3.293h1.586c.553 0 1 .448 1 1s-.448 1-1 1zm2.414-7.414c-.378-.378-.88-.586-1.414-.586-.367 0-.716.105-1.023.289l.023-.228v-2.061h2.061l.229-.023c-.186.307-.29.656-.29 1.023 0 .534.208 1.036.586 1.414s.88.586 1.414.586c.367 0 .716-.105 1.023-.289l-.023.228v2.061h-1.939c-.122 0-.24.015-.356.036.189-.31.295-.664.295-1.036 0-.534-.208-1.036-.586-1.414z"}}]})(props);
	};
	module.exports.TiArrowMaximise = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 4c-.553 0-1 .448-1 1s.447 1 1 1h1.586l-3.293 3.293c-.391.391-.391 1.023 0 1.414.195.195.451.293.707.293s.512-.098.707-.293l3.293-3.293v1.586c0 .552.447 1 1 1s1-.448 1-1v-5h-5zM9.293 13.293l-3.293 3.293v-1.586c0-.552-.447-1-1-1s-1 .448-1 1v4.999h.996l4.004.001c.552 0 1-.448 1-1s-.447-1-1-1h-1.586l3.293-3.292c.391-.391.391-1.023 0-1.414s-1.023-.392-1.414-.001zM7 12c.552 0 1-.448 1-1v-3h3c.553 0 1-.448 1-1s-.447-1-1-1h-4.999l-.001 5c0 .552.447 1 1 1zM17 12c-.553 0-1 .448-1 1v3h-3c-.553 0-1 .448-1 1s.447 1 1 1h5v-5c0-.552-.447-1-1-1z"}}]})(props);
	};
	module.exports.TiArrowMinimiseOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22 6c0-.801-.312-1.555-.879-2.121-.566-.567-1.32-.879-2.121-.879s-1.555.312-2.121.879l-.883.883c-.531-.474-1.23-.762-1.996-.762-.919 0-1.732.424-2.283 1.077-.212-.047-.431-.077-.656-.077h-6.061v6.06c0 .255.042.499.102.736-.598.549-.98 1.33-.98 2.204 0 .735.266 1.409.705 1.931l-.947.948c-.568.566-.88 1.32-.88 2.121s.312 1.555.879 2.121c.566.567 1.32.879 2.121.879.539 0 1.334-.152 2.061-.879l.903-.919c.535.495 1.251.798 2.036.798.934 0 1.758-.437 2.309-1.107.241.063.49.107.752.107h5.939v-6.061c0-.226-.029-.444-.077-.656.653-.55 1.077-1.364 1.077-2.283 0-.766-.288-1.465-.762-1.996l.883-.883c.567-.566.879-1.32.879-2.121zm-15 1h4c.553 0 1 .448 1 1s-.447 1-1 1h-2v2c0 .552-.448 1-1 1-.553 0-1-.448-1-1v-4zm12.707-.293l-3.293 3.293h1.586c.553 0 1 .448 1 1s-.448 1-1 1h-5v-5c0-.552.447-1 1-1s1 .448 1 1v1.586l3.293-3.293c.195-.195.451-.293.707-.293s.512.098.707.293c.391.391.391 1.023 0 1.414zm-7.707 11.293c0 .552-.447 1-1 1s-1-.448-1-1v-1.707l-3.354 3.414c-.195.195-.39.293-.646.293s-.512-.098-.707-.293c-.391-.391-.391-1.023 0-1.414l3.293-3.293h-1.465c-.553 0-1-.448-1-1s.447-1 1-1h4.879v5zm0-6h-2.278c.173-.295.278-.634.278-1v-1h1.061c.342 0 .658-.094.939-.245v2.245zm1 1h2.713c-.433.094-.713.33-.713.939v1.061h-.939c-.391 0-.752.117-1.061.311v-2.311zm.061 4c0-.552.447-1 1-1h1.939v-2c0-.552.447-1 1-1s1 .448 1 1v4h-3.939c-.553 0-1-.448-1-1z"}}]})(props);
	};
	module.exports.TiArrowMinimise = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6.121 13c-.553 0-1 .448-1 1s.447 1 1 1h1.465l-3.293 3.293c-.391.391-.391 1.023 0 1.414.195.195.451.293.707.293s.512-.098.707-.293l3.414-3.414v1.707c0 .552.447 1 1 1s.879-.448.879-1v-5h-4.879zM7 11c.552 0 1-.448 1-1v-2h2c.553 0 1-.448 1-1s-.447-1-1-1h-3.999l-.001 4c0 .552.447 1 1 1zM17 13c-.553 0-1 .448-1 1v2h-2c-.553 0-1 .448-1 1s.447 1 1 1h4v-4c0-.552-.447-1-1-1zM18.293 4.293l-3.293 3.293v-1.586c0-.552-.447-1-1-1s-1 .448-1 1v5h5c.552 0 1-.448 1-1s-.447-1-1-1h-1.586l3.293-3.292c.391-.391.391-1.023 0-1.414s-1.023-.392-1.414-.001z"}}]})(props);
	};
	module.exports.TiArrowMoveOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22.828 10.586l-9.414-9.414c-.391-.391-.902-.586-1.414-.586s-1.023.195-1.414.586l-9.414 9.414c-.781.779-.781 2.047 0 2.828l9.414 9.414c.391.391.902.586 1.414.586s1.023-.195 1.414-.586l9.414-9.414c.781-.781.781-2.049 0-2.828zm-5.828 5.414c-.256 0-.512-.098-.707-.293-.391-.391-.391-1.023 0-1.414l1.293-1.293h-4.586v4.586l1.293-1.293c.195-.195.451-.293.707-.293s.512.098.707.293c.391.391.391 1.023 0 1.414l-3.707 3.707-3.707-3.707c-.391-.391-.391-1.023 0-1.414.195-.195.451-.293.707-.293s.512.098.707.293l1.293 1.293v-4.586h-4.586l1.293 1.293c.391.391.391 1.023 0 1.414-.195.195-.451.293-.707.293s-.512-.098-.707-.293l-3.707-3.707 3.707-3.707c.195-.195.451-.293.707-.293s.512.098.707.293c.391.391.391 1.023 0 1.414l-1.293 1.293h4.586v-4.586l-1.293 1.293c-.195.195-.451.293-.707.293s-.512-.098-.707-.293c-.391-.391-.391-1.023 0-1.414l3.707-3.707 3.707 3.707c.391.391.391 1.023 0 1.414-.195.195-.451.293-.707.293s-.512-.098-.707-.293l-1.293-1.293v4.586h4.586l-1.293-1.293c-.391-.391-.391-1.023 0-1.414.195-.195.451-.293.707-.293s.512.098.707.293l3.707 3.707-3.707 3.707c-.195.195-.451.293-.707.293zm-1.732-2c-.175.301-.268.643-.268 1-.357 0-.699.093-1 .268v-1.268h1.268zm-6.536 0h1.268v1.268c-.301-.175-.643-.268-1-.268 0-.357-.093-.699-.268-1zm0-4c.175-.301.268-.643.268-1 .357 0 .699-.093 1-.268v1.268h-1.268zm6.536 0h-1.268v-1.268c.301.175.643.268 1 .268 0 .357.093.699.268 1z"}}]})(props);
	};
	module.exports.TiArrowMove = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.707 8.293c-.391-.391-1.023-.391-1.414 0s-.391 1.023 0 1.414l1.293 1.293h-4.586v-4.586l1.293 1.293c.195.195.451.293.707.293s.512-.098.707-.293c.391-.391.391-1.023 0-1.414l-3.707-3.707-3.707 3.707c-.391.391-.391 1.023 0 1.414s1.023.391 1.414 0l1.293-1.293v4.586h-4.586l1.293-1.293c.391-.391.391-1.023 0-1.414s-1.023-.391-1.414 0l-3.707 3.707 3.707 3.707c.195.195.451.293.707.293s.512-.098.707-.293c.391-.391.391-1.023 0-1.414l-1.293-1.293h4.586v4.586l-1.293-1.293c-.391-.391-1.023-.391-1.414 0s-.391 1.023 0 1.414l3.707 3.707 3.707-3.707c.391-.391.391-1.023 0-1.414s-1.023-.391-1.414 0l-1.293 1.293v-4.586h4.586l-1.293 1.293c-.391.391-.391 1.023 0 1.414.195.195.451.293.707.293s.512-.098.707-.293l3.707-3.707-3.707-3.707z"}}]})(props);
	};
	module.exports.TiArrowRepeatOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.994 7.187l.006-.187c0-.801-.312-1.555-.879-2.121-.566-.567-1.32-.879-2.121-.879s-1.555.312-2.121.879l-2.892 2.891c-.53-.473-1.221-.77-1.987-.77h-1c-3.859 0-7 3.14-7 7 0 3.306 2.14 6.084 5.006 6.813l-.006.187c0 .801.312 1.555.879 2.121.566.567 1.32.879 2.121.879s1.555-.312 2.121-.879l2.892-2.891c.53.473 1.221.77 1.987.77h1c3.859 0 7-3.14 7-7 0-3.306-2.14-6.084-5.006-6.813zm-1.994 11.813h-1c-.553 0-1-.448-1-1s.447-1 1-1h1c1.654 0 3-1.346 3-3s-1.121-3-2.5-3h-2.086l1.293 1.293c.391.391.391 1.023 0 1.414-.195.195-.451.293-.707.293s-.512-.098-.707-.293l-3.707-3.707 3.707-3.707c.195-.195.451-.293.707-.293s.512.098.707.293c.391.391.391 1.023 0 1.414l-1.293 1.293h2.086c2.481 0 4.5 2.243 4.5 5s-2.243 5-5 5zm.749-6.971c.7.164 1.251 1 1.251 1.971 0 1.103-.897 2-2 2h-1c-.857 0-1.584.544-1.868 1.304l-3.718-3.718c-.378-.378-.88-.586-1.414-.586s-1.036.208-1.414.586-.586.88-.586 1.414c0 .345.087.677.251.971-.7-.164-1.251-1-1.251-1.971 0-1.103.897-2 2-2h1c.857 0 1.584-.544 1.868-1.304l3.718 3.718c.378.378.88.586 1.414.586s1.036-.208 1.414-.586.586-.88.586-1.414c0-.345-.087-.677-.251-.971zm-7.749-2.029c0 .552-.447 1-1 1h-1c-1.654 0-3 1.346-3 3s1.121 3 2.5 3h2.086l-1.293-1.293c-.391-.391-.391-1.023 0-1.414.195-.195.451-.293.707-.293s.512.098.707.293l3.707 3.707-3.707 3.707c-.195.195-.451.293-.707.293s-.512-.098-.707-.293c-.391-.391-.391-1.023 0-1.414l1.293-1.293h-2.086c-2.481 0-4.5-2.243-4.5-5s2.243-5 5-5h1c.553 0 1 .448 1 1z"}}]})(props);
	};
	module.exports.TiArrowRepeat = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.5 7h-2.086l1.293-1.293c.391-.391.391-1.023 0-1.414s-1.023-.391-1.414 0l-3.707 3.707 3.707 3.707c.195.195.451.293.707.293s.512-.098.707-.293c.391-.391.391-1.023 0-1.414l-1.293-1.293h2.086c1.379 0 2.5 1.346 2.5 3s-1.346 3-3 3c-.553 0-1 .448-1 1s.447 1 1 1c2.757 0 5-2.243 5-5s-2.019-5-4.5-5zM8.293 12.293c-.391.391-.391 1.023 0 1.414l1.293 1.293h-2.086c-1.379 0-2.5-1.346-2.5-3s1.346-3 3-3c.553 0 1-.448 1-1s-.447-1-1-1c-2.757 0-5 2.243-5 5s2.019 5 4.5 5h2.086l-1.293 1.293c-.391.391-.391 1.023 0 1.414.195.195.451.293.707.293s.512-.098.707-.293l3.707-3.707-3.707-3.707c-.391-.391-1.023-.391-1.414 0z"}}]})(props);
	};
	module.exports.TiArrowRightOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 21c-.801 0-1.555-.312-2.121-.879s-.88-1.321-.879-2.123c0-.746.271-.998.764-1.998h-4.836c-1.654 0-3-1.347-3-3 0-1.654 1.346-3 3-3h4.836c-.494-1-.764-1.255-.764-2.001.001-.802.312-1.554.88-2.121 1.132-1.132 3.108-1.133 4.241.001l7.121 7.121-7.121 7.121c-.566.567-1.32.879-2.121.879zm-7.072-9c-.552 0-1 .449-1 1s.448 1 1 1h9.658l-3.293 3.293c-.189.189-.293.439-.293.706 0 .269.104.519.293.708.379.378 1.035.378 1.414 0l5.707-5.707-5.707-5.707c-.379-.378-1.035-.378-1.414 0-.189.189-.293.439-.293.706 0 .268.104.519.293.708l3.293 3.293h-9.658z"}}]})(props);
	};
	module.exports.TiArrowRightThick = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10.586 6.586c-.781.779-.781 2.047 0 2.828l1.586 1.586h-7.244c-1.104 0-2 .895-2 2 0 1.104.896 2 2 2h7.244l-1.586 1.586c-.781.779-.781 2.047 0 2.828.391.391.902.586 1.414.586s1.023-.195 1.414-.586l6.414-6.414-6.414-6.414c-.781-.781-2.047-.781-2.828 0z"}}]})(props);
	};
	module.exports.TiArrowRight = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13.293 7.293c-.391.391-.391 1.023 0 1.414l2.293 2.293h-7.586c-.552 0-1 .448-1 1s.448 1 1 1h7.586l-2.293 2.293c-.391.391-.391 1.023 0 1.414.195.195.451.293.707.293s.512-.098.707-.293l4.707-4.707-4.707-4.707c-.391-.391-1.023-.391-1.414 0z"}}]})(props);
	};
	module.exports.TiArrowShuffle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 9h3.5c.736 0 1.393.391 1.851 1.001.325-.604.729-1.163 1.191-1.662-.803-.823-1.866-1.339-3.042-1.339h-3.5c-.553 0-1 .448-1 1s.447 1 1 1zM11.685 12.111c.551-1.657 2.256-3.111 3.649-3.111h1.838l-1.293 1.293c-.391.391-.391 1.023 0 1.414.195.195.451.293.707.293s.512-.098.707-.293l3.707-3.707-3.707-3.707c-.391-.391-1.023-.391-1.414 0s-.391 1.023 0 1.414l1.293 1.293h-1.838c-2.274 0-4.711 1.967-5.547 4.479l-.472 1.411c-.641 1.926-2.072 3.11-2.815 3.11h-2.5c-.553 0-1 .448-1 1s.447 1 1 1h2.5c1.837 0 3.863-1.925 4.713-4.479l.472-1.41zM15.879 13.293c-.391.391-.391 1.023 0 1.414l1.293 1.293h-2.338c-1.268 0-2.33-.891-2.691-2.108-.256.75-.627 1.499-1.09 2.185.886 1.162 2.243 1.923 3.781 1.923h2.338l-1.293 1.293c-.391.391-.391 1.023 0 1.414.195.195.451.293.707.293s.512-.098.707-.293l3.707-3.707-3.707-3.707c-.391-.391-1.023-.391-1.414 0z"}}]})(props);
	};
	module.exports.TiArrowSortedDown = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5.8 9.7l6.2 6.3 6.2-6.3c.2-.2.3-.5.3-.7s-.1-.5-.3-.7c-.2-.2-.4-.3-.7-.3h-11c-.3 0-.5.1-.7.3-.2.2-.3.4-.3.7s.1.5.3.7z"}}]})(props);
	};
	module.exports.TiArrowSortedUp = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.2 13.3l-6.2-6.3-6.2 6.3c-.2.2-.3.5-.3.7s.1.5.3.7c.2.2.4.3.7.3h11c.3 0 .5-.1.7-.3.2-.2.3-.5.3-.7s-.1-.5-.3-.7z"}}]})(props);
	};
	module.exports.TiArrowSyncOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.5 12.473c0-2.495-.818-4.426-2.653-6.259-.309-.309-.676-.533-1.073-.682l-.946-.946-3.707-3.707c-.566-.567-1.32-.879-2.121-.879s-1.555.312-2.121.879c-.567.566-.879 1.32-.879 2.121 0 .277.037.549.11.809-1.029.461-1.974 1.12-2.827 1.974-1.795 1.793-2.783 4.178-2.783 6.717 0 2.495.818 4.426 2.653 6.259.299.298.652.521 1.034.669l.985.986 3.707 3.707c.566.567 1.32.879 2.121.879s1.555-.312 2.121-.879c.567-.566.879-1.32.879-2.121 0-.286-.04-.566-.117-.834 1.031-.461 1.978-1.121 2.833-1.975 1.796-1.794 2.784-4.18 2.784-6.718zm-9.13 7.484l1.337 1.336c.391.391.391 1.023 0 1.414-.195.195-.451.293-.707.293s-.512-.098-.707-.293l-3.707-3.707 3.707-3.707c.195-.195.451-.293.707-.293s.512.098.707.293c.391.391.391 1.023 0 1.414l-1.247 1.247c1.351-.091 2.425-.59 3.428-1.593 1.039-1.038 1.611-2.419 1.611-3.888 0-1.422-.401-2.351-1.48-3.429-.391-.391-.391-1.023 0-1.415.195-.195.451-.293.708-.293.256 0 .512.098.707.292 1.448 1.447 2.066 2.896 2.066 4.844 0 2.004-.78 3.887-2.197 5.303-1.39 1.39-3.01 2.1-4.933 2.182zm-.766-14.939l-1.311-1.311c-.391-.391-.391-1.023 0-1.414.195-.195.451-.293.707-.293s.512.098.707.293l3.707 3.707-3.707 3.707c-.195.195-.451.293-.707.293s-.512-.098-.707-.293c-.391-.391-.391-1.023 0-1.414l1.275-1.275c-1.365.086-2.448.584-3.456 1.593-1.04 1.039-1.612 2.42-1.612 3.889 0 1.422.401 2.351 1.48 3.429.391.391.391 1.023 0 1.415-.195.195-.452.293-.708.293s-.512-.098-.707-.292c-1.447-1.448-2.065-2.897-2.065-4.845 0-2.004.78-3.887 2.197-5.303 1.382-1.383 2.993-2.093 4.907-2.179zm-2.916 10.204c-.888-.887-1.188-1.574-1.188-2.722 0-1.202.468-2.332 1.318-3.181l.187-.179c.033.481.236.93.581 1.274.378.378.88.586 1.414.586s1.036-.208 1.414-.586l2.339-2.339c-.078.596.104 1.219.56 1.675.888.887 1.188 1.574 1.188 2.722 0 1.202-.468 2.332-1.318 3.181l-.188.181c-.039-.472-.241-.91-.579-1.248-.38-.378-.882-.586-1.416-.586s-1.036.208-1.414.586l-2.342 2.342c.089-.605-.093-1.242-.556-1.706z"}}]})(props);
	};
	module.exports.TiArrowSync = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.5 12.473c0-1.948-.618-3.397-2.066-4.844-.391-.39-1.023-.39-1.414 0-.391.391-.391 1.024 0 1.415 1.079 1.078 1.48 2.007 1.48 3.429 0 1.469-.572 2.85-1.611 3.888-1.004 1.003-2.078 1.502-3.428 1.593l1.246-1.247c.391-.391.391-1.023 0-1.414s-1.023-.391-1.414 0l-3.707 3.707 3.707 3.707c.195.195.451.293.707.293s.512-.098.707-.293c.391-.391.391-1.023 0-1.414l-1.337-1.336c1.923-.082 3.542-.792 4.933-2.181 1.417-1.416 2.197-3.299 2.197-5.303zM6.5 12.5c0-1.469.572-2.85 1.611-3.889 1.009-1.009 2.092-1.508 3.457-1.594l-1.275 1.275c-.391.391-.391 1.023 0 1.414.195.196.451.294.707.294s.512-.098.707-.293l3.707-3.707-3.707-3.707c-.391-.391-1.023-.391-1.414 0s-.391 1.023 0 1.414l1.311 1.311c-1.914.086-3.525.796-4.907 2.179-1.417 1.416-2.197 3.299-2.197 5.303 0 1.948.618 3.397 2.066 4.844.195.195.451.292.707.292s.512-.098.707-.293c.391-.391.391-1.024 0-1.415-1.079-1.077-1.48-2.006-1.48-3.428z"}}]})(props);
	};
	module.exports.TiArrowUnsorted = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.2 9.3l-6.2-6.3-6.2 6.3c-.2.2-.3.4-.3.7s.1.5.3.7c.2.2.4.3.7.3h11c.3 0 .5-.1.7-.3.2-.2.3-.5.3-.7s-.1-.5-.3-.7zM5.8 14.7l6.2 6.3 6.2-6.3c.2-.2.3-.5.3-.7s-.1-.5-.3-.7c-.2-.2-.4-.3-.7-.3h-11c-.3 0-.5.1-.7.3-.2.2-.3.5-.3.7s.1.5.3.7z"}}]})(props);
	};
	module.exports.TiArrowUpOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 21c-1.654 0-3-1.346-3-3v-4.764c-1.143 1.024-3.025.979-4.121-.115-1.17-1.169-1.17-3.073 0-4.242l7.121-7.121 7.121 7.121c1.17 1.169 1.17 3.073 0 4.242-1.094 1.095-2.979 1.14-4.121.115v4.764c0 1.654-1.346 3-3 3zm-1-12.586v9.586c0 .551.448 1 1 1s1-.449 1-1v-9.586l3.293 3.293c.379.378 1.035.378 1.414 0 .391-.391.391-1.023 0-1.414l-5.707-5.707-5.707 5.707c-.391.391-.391 1.023 0 1.414.379.378 1.035.378 1.414 0l3.293-3.293z"}}]})(props);
	};
	module.exports.TiArrowUpThick = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 3.172l-6.414 6.414c-.781.781-.781 2.047 0 2.828s2.047.781 2.828 0l1.586-1.586v7.242c0 1.104.895 2 2 2 1.104 0 2-.896 2-2v-7.242l1.586 1.586c.391.391.902.586 1.414.586s1.023-.195 1.414-.586c.781-.781.781-2.047 0-2.828l-6.414-6.414z"}}]})(props);
	};
	module.exports.TiArrowUp = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 5.586l-4.707 4.707c-.391.391-.391 1.023 0 1.414s1.023.391 1.414 0l2.293-2.293v7.586c0 .552.447 1 1 1s1-.448 1-1v-7.586l2.293 2.293c.195.195.451.293.707.293s.512-.098.707-.293c.391-.391.391-1.023 0-1.414l-4.707-4.707z"}}]})(props);
	};
	module.exports.TiAt = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 4c-4.411 0-8 3.589-8 8s3.589 8 8 8c1.616 0 3.172-.479 4.499-1.384.456-.312.574-.934.263-1.39-.311-.457-.932-.572-1.39-.263-.994.679-2.16 1.037-3.372 1.037-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6v.5c0 .552-.448 1-1 1s-1-.448-1-1v-3c0-.553-.447-1-1-1-.441 0-.805.29-.938.688-.58-.427-1.289-.688-2.062-.688-1.93 0-3.5 1.57-3.5 3.5s1.57 3.5 3.5 3.5c1.045 0 1.975-.47 2.616-1.199.548.723 1.408 1.199 2.384 1.199 1.654 0 3-1.346 3-3v-.5c0-4.411-3.589-8-8-8zm0 9.5c-.827 0-1.5-.673-1.5-1.5s.673-1.5 1.5-1.5 1.5.673 1.5 1.5-.673 1.5-1.5 1.5z"}}]})(props);
	};
	module.exports.TiAttachmentOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.534 4.466c1.024 0 2.05.39 2.829 1.169 1.561 1.561 1.561 4.098 0 5.656l-7.071 7.072c-.778.779-1.804 1.17-2.828 1.17s-2.049-.391-2.828-1.17c-1.56-1.559-1.56-4.098 0-5.656l.807-.807c-.004.805.25 1.524.701 2.125l-.094.096c-.78.779-.78 2.049 0 2.828.39.39.901.584 1.414.584s1.024-.195 1.414-.584l2.535-2.535 4.537-4.537c.778-.779.778-2.049 0-2.828-.392-.39-.904-.584-1.417-.584-.512 0-1.023.195-1.413.584l-4.535 4.537c-.128.127-.146.275-.146.354 0 .076.019.226.146.353.099.099.228.147.356.147.127 0 .254-.049.352-.146l2.122-2.121 1.414-1.414c.392.392.586.902.586 1.414 0 .511-.194 1.021-.584 1.41l-2.124 2.125c-.486.487-1.127.729-1.768.729s-1.28-.244-1.769-.729c-.472-.474-.731-1.101-.731-1.769 0-.67.261-1.297.732-1.77l4.534-4.535c.779-.779 1.805-1.168 2.829-1.168m0-2c-1.604 0-3.11.623-4.242 1.755l-7.069 7.073c-1.133 1.131-1.757 2.638-1.757 4.242s.624 3.11 1.757 4.243c1.131 1.132 2.639 1.755 4.241 1.755s3.11-.624 4.242-1.757l7.071-7.071c1.133-1.131 1.757-2.638 1.757-4.242 0-1.603-.623-3.11-1.755-4.241-1.133-1.134-2.64-1.757-4.245-1.757z"}}]})(props);
	};
	module.exports.TiAttachment = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.364 6.635c-1.561-1.559-4.1-1.559-5.658 0l-4.534 4.535c-.473.473-.733 1.1-.733 1.77 0 .668.261 1.295.732 1.768.487.486 1.128.73 1.769.73.64 0 1.279-.242 1.767-.73l2.122-2.121c.391-.395.586-.904.586-1.414 0-.512-.195-1.023-.586-1.414l-3.536 3.535c-.193.195-.511.195-.708-.002-.127-.127-.146-.275-.146-.352 0-.078.019-.227.146-.354l4.535-4.537c.778-.779 2.048-.779 2.83 0 .779.779.779 2.049 0 2.828l-4.537 4.537-2.535 2.535c-.779.779-2.049.779-2.828 0-.78-.779-.78-2.049 0-2.828l.095-.096c-.451-.6-.702-1.359-.702-2.125l-.807.807c-1.56 1.559-1.56 4.098 0 5.656.779.779 1.804 1.17 2.828 1.17s2.049-.391 2.828-1.17l7.072-7.072c1.56-1.559 1.56-4.096 0-5.656z"}}]})(props);
	};
	module.exports.TiBackspaceOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 21h-10c-1.436 0-3.145-.88-3.977-2.046l-2.619-3.667-1.188-1.661c-.246-.344-.249-.894-.008-1.241l1.204-1.686 2.608-3.653c.835-1.167 2.546-2.046 3.98-2.046h10c1.654 0 3 1.346 3 3v10c0 1.654-1.346 3-3 3zm-15.771-8.001l.806 1.125 2.618 3.667c.451.633 1.57 1.209 2.348 1.209h10c.552 0 1-.45 1-1.001v-9.999c0-.551-.448-1-1-1h-10c-.776 0-1.897.576-2.351 1.209l-2.608 3.652-.813 1.138zM13.707 13l2.646-2.646c.194-.194.194-.512 0-.707-.195-.194-.513-.194-.707 0l-2.646 2.646-2.646-2.646c-.195-.194-.513-.194-.707 0-.195.195-.195.513 0 .707l2.646 2.646-2.646 2.646c-.195.195-.195.513 0 .707.097.098.225.147.353.147s.256-.049.354-.146l2.646-2.647 2.646 2.646c.098.098.226.147.354.147s.256-.049.354-.146c.194-.194.194-.512 0-.707l-2.647-2.647z"}}]})(props);
	};
	module.exports.TiBackspace = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.5 5h-10c-1.266 0-2.834.807-3.57 1.837l-2.61 3.653-1.199 1.679c-.121.175-.122.492.003.664l1.188 1.664 2.619 3.667c.735 1.029 2.302 1.836 3.569 1.836h10c1.379 0 2.5-1.122 2.5-2.5v-10c0-1.378-1.121-2.5-2.5-2.5zm-2.293 9.793c.391.391.391 1.023 0 1.414-.195.195-.451.293-.707.293s-.512-.098-.707-.293l-2.293-2.293-2.293 2.293c-.195.195-.451.293-.707.293s-.512-.098-.707-.293c-.391-.391-.391-1.023 0-1.414l2.293-2.293-2.293-2.293c-.391-.391-.391-1.023 0-1.414s1.023-.391 1.414 0l2.293 2.293 2.293-2.293c.391-.391 1.023-.391 1.414 0s.391 1.023 0 1.414l-2.293 2.293 2.293 2.293z"}}]})(props);
	};
	module.exports.TiBatteryCharge = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5 10v6h11v-6h-11zm5.83 4.908l-1.21-1.908-2.62.428 3.223-2.324 1.175 1.896 2.602-.43-3.17 2.338zM19 10c0-1.654-1.346-3-3-3h-11c-1.654 0-3 1.346-3 3v6c0 1.654 1.346 3 3 3h11c1.654 0 3-1.346 3-3 1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm-2 6c0 .552-.449 1-1 1h-11c-.551 0-1-.448-1-1v-6c0-.552.449-1 1-1h11c.551 0 1 .448 1 1v6z"}}]})(props);
	};
	module.exports.TiBatteryFull = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 16c-.552 0-1-.447-1-1v-4c0-.553.448-1 1-1s1 .447 1 1v4c0 .553-.448 1-1 1zM6 16c-.552 0-1-.447-1-1v-4c0-.553.448-1 1-1s1 .447 1 1v4c0 .553-.448 1-1 1zM15 16c-.552 0-1-.447-1-1v-4c0-.553.448-1 1-1s1 .447 1 1v4c0 .553-.448 1-1 1zM12 16c-.552 0-1-.447-1-1v-4c0-.553.448-1 1-1s1 .447 1 1v4c0 .553-.448 1-1 1zM19 10c0-1.654-1.346-3-3-3h-11c-1.654 0-3 1.346-3 3v6c0 1.654 1.346 3 3 3h11c1.654 0 3-1.346 3-3 1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm-2 6c0 .552-.449 1-1 1h-11c-.551 0-1-.448-1-1v-6c0-.552.449-1 1-1h11c.551 0 1 .448 1 1v6z"}}]})(props);
	};
	module.exports.TiBatteryHigh = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 16c-.552 0-1-.447-1-1v-4c0-.553.448-1 1-1s1 .447 1 1v4c0 .553-.448 1-1 1zM6 16c-.552 0-1-.447-1-1v-4c0-.553.448-1 1-1s1 .447 1 1v4c0 .553-.448 1-1 1zM12 16c-.552 0-1-.447-1-1v-4c0-.553.448-1 1-1s1 .447 1 1v4c0 .553-.448 1-1 1zM19 10c0-1.654-1.346-3-3-3h-11c-1.654 0-3 1.346-3 3v6c0 1.654 1.346 3 3 3h11c1.654 0 3-1.346 3-3 1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm-2 6c0 .552-.449 1-1 1h-11c-.551 0-1-.448-1-1v-6c0-.552.449-1 1-1h11c.551 0 1 .448 1 1v6z"}}]})(props);
	};
	module.exports.TiBatteryLow = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 16c-.552 0-1-.447-1-1v-4c0-.553.448-1 1-1s1 .447 1 1v4c0 .553-.448 1-1 1zM19 10c0-1.654-1.346-3-3-3h-11c-1.654 0-3 1.346-3 3v6c0 1.654 1.346 3 3 3h11c1.654 0 3-1.346 3-3 1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm-2 6c0 .552-.449 1-1 1h-11c-.551 0-1-.448-1-1v-6c0-.552.449-1 1-1h11c.551 0 1 .448 1 1v6z"}}]})(props);
	};
	module.exports.TiBatteryMid = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 16c-.552 0-1-.447-1-1v-4c0-.553.448-1 1-1s1 .447 1 1v4c0 .553-.448 1-1 1zM6 16c-.552 0-1-.447-1-1v-4c0-.553.448-1 1-1s1 .447 1 1v4c0 .553-.448 1-1 1zM19 10c0-1.654-1.346-3-3-3h-11c-1.654 0-3 1.346-3 3v6c0 1.654 1.346 3 3 3h11c1.654 0 3-1.346 3-3 1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm-2 6c0 .552-.449 1-1 1h-11c-.551 0-1-.448-1-1v-6c0-.552.449-1 1-1h11c.551 0 1 .448 1 1v6z"}}]})(props);
	};
	module.exports.TiBeaker = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.445 16.809l-2.64-9.809h1.195c.552 0 1-.448 1-1s-.448-1-1-1h-12c-.552 0-1 .448-1 1s.448 1 1 1h1.135c-.013.176-.048.402-.121.671l-2.459 9.138c-.218.809-.074 1.623.393 2.231.466.61 1.214.96 2.052.96h10c.838 0 1.586-.35 2.055-.959.466-.609.609-1.423.39-2.232zm-4.713-9.809l1.352 5.018-.084-.018h-8l-.084.018 1.029-3.826c.084-.312.173-.744.192-1.192h5.595zm2.734 10.824c-.087.114-.252.176-.466.176h-10c-.214 0-.379-.062-.466-.176-.086-.113-.104-.289-.048-.496l1.197-4.45c.088.073.195.122.317.122h8c.122 0 .229-.049.316-.121l1.197 4.45c.057.206.04.382-.047.495z"}}]})(props);
	};
	module.exports.TiBeer = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M10 16.5c0 .275-.225.5-.5.5s-.5-.225-.5-.5v-6c0-.275.225-.5.5-.5s.5.225.5.5v6zM12 16.5c0 .275-.225.5-.5.5s-.5-.225-.5-.5v-6c0-.275.225-.5.5-.5s.5.225.5.5v6zM14 16.5c0 .275-.225.5-.5.5s-.5-.225-.5-.5v-6c0-.275.225-.5.5-.5s.5.225.5.5v6zM18.5 6h-.5v-1c0-1.104-.896-2-2-2h-9c-1.104 0-2 .896-2 2v13c0 1.656 1.344 3 3 3h7c1.656 0 3-1.344 3-3h.5c1.93 0 3.5-1.57 3.5-3.5v-5c0-1.93-1.57-3.5-3.5-3.5zm-11.5-1h9v1h-4.444l-.118.332c-.164.458-.663.73-1.117.648l-.348-.058-.173.307c-.267.475-.765.771-1.3.771-.827 0-1.5-.673-1.5-1.5v-1.5zm9 13c0 .552-.448 1-1 1h-7c-.552 0-1-.448-1-1v-9.51c.419.317.936.51 1.5.51.784 0 1.521-.376 1.989-1 .728 0 1.383-.391 1.736-1h3.775v11zm4-3.5c0 .827-.673 1.5-1.5 1.5h-1.5v-8h1.5c.827 0 1.5.673 1.5 1.5v5z"}}]}]})(props);
	};
	module.exports.TiBell = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.715 17.301c-.017-.018-1.717-1.854-1.73-6.32-.009-2.607-1.69-4.824-4.019-5.641l.034-.34c0-1.103-.896-2-2-2s-2 .897-2 2l.034.338c-2.336.816-4.019 3.036-4.019 5.646 0 4.462-1.711 6.296-1.721 6.306-.287.286-.374.716-.22 1.091s.521.619.926.619h3.143c.447 1.72 1.999 3 3.857 3s3.41-1.28 3.857-3h3.143c.4 0 .758-.243.915-.61s.076-.799-.2-1.089zm-7.715-10.301c2.189 0 3.978 1.789 3.984 3.987.002.728.046 1.396.118 2.013h-8.2c.071-.617.113-1.286.113-2.016.001-2.196 1.788-3.984 3.985-3.984zm0 13c-.737 0-1.375-.405-1.722-1h3.443c-.346.595-.984 1-1.721 1zm-5.186-3c.352-.736.705-1.731.938-3h8.502c.234 1.269.588 2.264.938 3h-10.378z"}}]})(props);
	};
	module.exports.TiBook = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 3h-11c-.265 0-.52.105-.707.293l-3 3-.057.062c-.139.165-.225.373-.235.6l-.001.053v10.992c0 1.654 1.346 3 3 3h9c1.304 0 2.416-.836 2.829-2h.671c1.402 0 2.5-1.317 2.5-3v-10c0-1.654-1.346-3-3-3zm-12 16c-.551 0-1-.448-1-1v-10h2v11h-1zm10-1c0 .552-.449 1-1 1h-7v-11h7c.551 0 1 .448 1 1v9zm3-2c0 .62-.324 1-.5 1h-.5v-8c0-1.654-1.346-3-3-3h-8.586l1-1h10.586c.551 0 1 .448 1 1v10z"}}]})(props);
	};
	module.exports.TiBookmark = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 2h-8c-1.654 0-3 1.346-3 3v14c0 .514.104.946.308 1.285.564.935 1.815 1.008 2.813.008l3.172-3.172c.375-.374 1.039-.374 1.414 0l3.172 3.172c.491.491 1.002.74 1.52.74.797 0 1.601-.629 1.601-2.033v-14c0-1.654-1.346-3-3-3zm-8 2h8c.551 0 1 .449 1 1v9.905l-2.451-2.247c-1.406-1.289-3.693-1.288-5.099 0l-2.45 2.247v-9.905c0-.551.449-1 1-1zm6.121 11.707c-.565-.565-1.318-.876-2.121-.876s-1.556.312-2.121.876l-2.879 2.879v-2.324l3.126-2.866c1.033-.947 2.714-.947 3.747 0l3.127 2.866v2.324l-2.879-2.879z"}}]})(props);
	};
	module.exports.TiBriefcase = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M18 7c0-1.654-1.346-3-3-3h-6c-1.654 0-3 1.346-3 3-1.654 0-3 1.346-3 3v7c0 1.654 1.346 3 3 3h12c1.654 0 3-1.346 3-3v-7c0-1.654-1.346-3-3-3zm-9-1h6c.551 0 1 .449 1 1h-8c0-.551.449-1 1-1zm10 11c0 .551-.449 1-1 1h-12c-.551 0-1-.449-1-1v-1h14v1zm-14-2v-5c0-.551.449-1 1-1h12c.551 0 1 .449 1 1v5h-14zM13 12h-2c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1s-.45-1-1-1z"}}]}]})(props);
	};
	module.exports.TiBrush = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.177 3.823c-.382-.383-.894-.586-1.415-.586-.25 0-.503.047-.744.144-4.449 1.787-7.792 4.76-10.517 9.357-.102.172-.163.355-.209.542-1.38.215-2.6.903-3.442 1.993-.916 1.185-1.295 2.695-1.066 4.254l.216 1.473 1.473.217c.293.043.589.064.88.064 2.743 0 4.949-1.909 5.367-4.564.188-.047.371-.115.544-.218 4.598-2.728 7.571-6.069 9.355-10.517.298-.743.123-1.593-.442-2.159zm-14.824 15.458c-.192 0-.389-.016-.59-.044-.309-2.104 1.055-3.81 3-4.021l1.021 1.021c-.192 1.76-1.605 3.044-3.431 3.044zm4.89-4.502l-1.021-1.021c.38-.641.774-1.233 1.178-1.804.027.041 1.639 1.653 1.639 1.653-.568.401-1.158.794-1.796 1.172zm2.608-1.773s-1.821-1.801-1.879-1.824c2.147-2.784 4.651-4.685 7.791-5.943-1.255 3.127-3.144 5.623-5.912 7.767z"}}]})(props);
	};
	module.exports.TiBusinessCard = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M20 20h-16c-1.654 0-3-1.346-3-3v-10c0-1.654 1.346-3 3-3h16c1.654 0 3 1.346 3 3v10c0 1.654-1.346 3-3 3zm-16-14c-.551 0-1 .449-1 1v10c0 .551.449 1 1 1h16c.551 0 1-.449 1-1v-10c0-.551-.449-1-1-1h-16zM10 15h-4c-.553 0-1-.448-1-1s.447-1 1-1h4c.553 0 1 .448 1 1s-.447 1-1 1zM10 11h-4c-.553 0-1-.448-1-1s.447-1 1-1h4c.553 0 1 .448 1 1s-.447 1-1 1z"}},{"tag":"circle","attr":{"cx":"16","cy":"10.5","r":"2"}},{"tag":"path","attr":{"d":"M16 13.356c-1.562 0-2.5.715-2.5 1.429 0 .357.938.715 2.5.715 1.466 0 2.5-.357 2.5-.715 0-.714-.98-1.429-2.5-1.429z"}}]}]})(props);
	};
	module.exports.TiCalculator = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 21h-8c-1.7 0-3-1.3-3-3v-12c0-1.7 1.3-3 3-3h8c1.7 0 3 1.3 3 3v12c0 1.7-1.3 3-3 3zm-8-16c-.6 0-1 .4-1 1v12c0 .6.4 1 1 1h8c.6 0 1-.4 1-1v-12c0-.6-.4-1-1-1h-8z"}},{"tag":"circle","attr":{"cx":"10","cy":"11","r":"1"}},{"tag":"circle","attr":{"cx":"13","cy":"11","r":"1"}},{"tag":"circle","attr":{"cx":"16","cy":"11","r":"1"}},{"tag":"circle","attr":{"cx":"10","cy":"14","r":"1"}},{"tag":"circle","attr":{"cx":"13","cy":"14","r":"1"}},{"tag":"circle","attr":{"cx":"16","cy":"14","r":"1"}},{"tag":"circle","attr":{"cx":"10","cy":"17","r":"1"}},{"tag":"circle","attr":{"cx":"13","cy":"17","r":"1"}},{"tag":"circle","attr":{"cx":"16","cy":"17","r":"1"}},{"tag":"path","attr":{"d":"M16 7v1h-6v-1h6m1-1h-8v3h8v-3z"}}]})(props);
	};
	module.exports.TiCalendarOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 6.184v-.184c0-1.657-1.343-3-3-3s-3 1.343-3 3h-2c0-1.657-1.343-3-3-3s-3 1.343-3 3v.184c-1.161.415-2 1.514-2 2.816v9c0 1.654 1.346 3 3 3h12c1.654 0 3-1.346 3-3v-9c0-1.302-.839-2.401-2-2.816zm-4-.184c0-.552.447-1 1-1s1 .448 1 1v2c0 .552-.447 1-1 1s-1-.448-1-1v-2zm-8 0c0-.552.447-1 1-1s1 .448 1 1v2c0 .552-.447 1-1 1s-1-.448-1-1v-2zm12 12c0 .551-.448 1-1 1h-12c-.552 0-1-.449-1-1v-6h14v6zm0-7h-14v-2c0-.551.448-1 1-1 0 1.104.896 2 2 2s2-.896 2-2h4c0 1.104.896 2 2 2s2-.896 2-2c.552 0 1 .449 1 1v2z"}}]})(props);
	};
	module.exports.TiCalendar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 6.184v-.184c0-1.657-1.343-3-3-3s-3 1.343-3 3h-2c0-1.657-1.343-3-3-3s-3 1.343-3 3v.184c-1.161.415-2 1.514-2 2.816v9c0 1.654 1.346 3 3 3h12c1.654 0 3-1.346 3-3v-9c0-1.302-.839-2.401-2-2.816zm-4-.184c0-.552.447-1 1-1s1 .448 1 1v2c0 .552-.447 1-1 1s-1-.448-1-1v-2zm-8 0c0-.552.447-1 1-1s1 .448 1 1v2c0 .552-.447 1-1 1s-1-.448-1-1v-2zm12 12c0 .551-.448 1-1 1h-12c-.552 0-1-.449-1-1v-6h14v6z"}}]})(props);
	};
	module.exports.TiCameraOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 20h-14c-1.654 0-3-1.346-3-3v-8c0-1.654 1.346-3 3-3h1.586l1-1c.579-.579 1.596-1 2.414-1h4c.818 0 1.835.421 2.414 1l1 1h1.586c1.654 0 3 1.346 3 3v8c0 1.654-1.346 3-3 3zm-14-12c-.552 0-1 .448-1 1v8c0 .552.448 1 1 1h14c.552 0 1-.448 1-1v-8c0-.552-.448-1-1-1h-2c-.266 0-.52-.105-.707-.293l-1.293-1.293c-.201-.201-.715-.414-1-.414h-4c-.285 0-.799.213-1 .414l-1.293 1.293c-.187.188-.441.293-.707.293h-2zM12 10c1.379 0 2.5 1.121 2.5 2.5s-1.121 2.5-2.5 2.5-2.5-1.121-2.5-2.5 1.121-2.5 2.5-2.5m0-1c-1.934 0-3.5 1.566-3.5 3.5 0 1.932 1.566 3.5 3.5 3.5s3.5-1.568 3.5-3.5c0-1.934-1.566-3.5-3.5-3.5zM18 8.699c-.719 0-1.3.582-1.3 1.301s.581 1.299 1.3 1.299 1.3-.58 1.3-1.299-.581-1.301-1.3-1.301z"}}]})(props);
	};
	module.exports.TiCamera = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 6h-1.586l-1-1c-.579-.579-1.595-1-2.414-1h-4c-.819 0-1.835.421-2.414 1l-1 1h-1.586c-1.654 0-3 1.346-3 3v8c0 1.654 1.346 3 3 3h14c1.654 0 3-1.346 3-3v-8c0-1.654-1.346-3-3-3zm-7 10c-1.933 0-3.5-1.568-3.5-3.5 0-1.934 1.567-3.5 3.5-3.5s3.5 1.566 3.5 3.5c0 1.932-1.567 3.5-3.5 3.5zm6-4.701c-.719 0-1.3-.58-1.3-1.299s.581-1.301 1.3-1.301 1.3.582 1.3 1.301-.581 1.299-1.3 1.299z"}}]})(props);
	};
	module.exports.TiCancelOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 20.5c-4.688 0-8.5-3.812-8.5-8.5s3.812-8.5 8.497-8.5c4.69 0 8.503 3.812 8.503 8.5s-3.812 8.5-8.5 8.5zm0-15c-3.586 0-6.5 2.916-6.5 6.5s2.916 6.5 6.5 6.5 6.5-2.916 6.5-6.5-2.916-6.5-6.5-6.5zM12.003 8.5c1.929 0 3.497 1.57 3.497 3.5 0 .206-.02.412-.057.615l-4.057-4.059c.203-.036.408-.056.614-.056m.003-1c-.882 0-1.696.262-2.39.697l6.188 6.188c.438-.692.699-1.508.699-2.387 0-2.48-2.014-4.498-4.497-4.498zM8.557 11.384l4.059 4.06c-.204.036-.409.056-.616.056-1.93 0-3.5-1.57-3.5-3.502 0-.206.02-.412.057-.614m-.358-1.773c-.435.694-.699 1.508-.699 2.387 0 2.486 2.016 4.502 4.5 4.502.879 0 1.693-.264 2.387-.699l-6.188-6.19z"}}]})(props);
	};
	module.exports.TiCancel = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 4c-4.411 0-8 3.589-8 8s3.589 8 8 8 8-3.589 8-8-3.589-8-8-8zm-5 8c0-.832.224-1.604.584-2.295l6.711 6.711c-.691.36-1.463.584-2.295.584-2.757 0-5-2.243-5-5zm9.416 2.295l-6.711-6.711c.691-.36 1.463-.584 2.295-.584 2.757 0 5 2.243 5 5 0 .832-.224 1.604-.584 2.295z"}}]})(props);
	};
	module.exports.TiChartAreaOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 17h-16c-.552 0-1-.447-1-1v-3c0-.68.234-1.346.658-1.874l4-5c.98-1.226 2.885-1.469 4.143-.524l1.674 1.254 2.185-2.729c.57-.717 1.424-1.127 2.341-1.127.679 0 1.343.232 1.873.657.716.572 1.126 1.426 1.126 2.343v10c0 .553-.448 1-1 1zm-15-2h14v-9c0-.307-.137-.59-.375-.779-.227-.183-.465-.221-.624-.221-.306 0-.591.137-.782.376l-2.789 3.485c-.337.423-.949.5-1.381.176l-2.449-1.837c-.422-.316-1.055-.233-1.381.176l-4 5c-.181.228-.219.464-.219.624v2zM20 21h-16c-.552 0-1-.447-1-1s.448-1 1-1h16c.552 0 1 .447 1 1s-.448 1-1 1z"}}]})(props);
	};
	module.exports.TiChartArea = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 6c0-.587-.257-1.167-.75-1.562-.863-.69-2.121-.551-2.812.312l-2.789 3.486-2.449-1.836c-.864-.648-2.087-.493-2.762.351l-4 5c-.294.368-.438.811-.438 1.249v3h16v-10zM20 19h-16c-.552 0-1 .447-1 1s.448 1 1 1h16c.552 0 1-.447 1-1s-.448-1-1-1z"}}]})(props);
	};
	module.exports.TiChartBarOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 5c-.771 0-1.468.301-2 .779v-1.779c0-1.654-1.346-3-3-3s-3 1.346-3 3v4.779c-.532-.478-1.229-.779-2-.779-1.654 0-3 1.346-3 3v6h16v-9c0-1.654-1.346-3-3-3zm-5-2c.551 0 1 .448 1 1v11h-2v-11c0-.552.449-1 1-1zm-4 12h-2v-4c0-.552.449-1 1-1s1 .448 1 1v4zm10 0h-2v-7c0-.552.449-1 1-1s1 .448 1 1v7zM19 21h-14c-.552 0-1-.447-1-1s.448-1 1-1h14c.552 0 1 .447 1 1s-.448 1-1 1z"}}]})(props);
	};
	module.exports.TiChartBar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 4c0-1.105-.896-2-2-2s-2 .895-2 2v12h4v-12zM19 8c0-1.105-.896-2-2-2s-2 .895-2 2v8h4v-8zM9 11c0-1.105-.896-2-2-2s-2 .895-2 2v5h4v-5zM19 19h-14c-.553 0-1 .447-1 1s.447 1 1 1h14c.553 0 1-.447 1-1s-.447-1-1-1z"}}]})(props);
	};
	module.exports.TiChartLineOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5.999 17c-.677 0-1.342-.234-1.873-.658-.626-.501-1.019-1.215-1.107-2.011-.089-.796.138-1.58.639-2.206l4-5c.978-1.225 2.883-1.471 4.143-.523l1.674 1.254 2.184-2.729c.571-.716 1.425-1.127 2.342-1.127.679 0 1.343.232 1.873.657.626.501 1.021 1.216 1.108 2.013s-.14 1.58-.641 2.204l-4 5c-.977 1.226-2.882 1.471-4.143.526l-1.674-1.256-2.184 2.729c-.57.716-1.424 1.127-2.341 1.127zm4.001-9c-.306 0-.591.137-.781.374l-4 5.001c-.167.208-.243.471-.213.734.03.266.161.504.369.67.228.183.465.221.624.221.306 0 .591-.137.782-.376l3.395-4.244 3.224 2.42c.42.316 1.056.231 1.381-.176l4-5.001c.167-.208.242-.469.213-.734-.03-.266-.161-.504-.369-.67-.227-.182-.464-.22-.624-.22-.306 0-.591.137-.782.376l-3.395 4.242-3.224-2.417c-.175-.132-.382-.2-.6-.2zM19 21h-14c-.552 0-1-.447-1-1s.448-1 1-1h14c.552 0 1 .447 1 1s-.448 1-1 1z"}}]})(props);
	};
	module.exports.TiChartLine = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4.75 15.561c.369.294.811.439 1.248.439.588 0 1.168-.258 1.563-.752l2.789-3.486 2.45 1.838c.864.648 2.088.492 2.762-.352l4-5c.69-.861.55-2.121-.312-2.811-.863-.689-2.121-.551-2.812.312l-2.789 3.486-2.449-1.835c-.864-.648-2.087-.494-2.762.35l-4 5c-.69.863-.549 2.121.312 2.811zM5 21h14c.553 0 1-.447 1-1s-.447-1-1-1h-14c-.553 0-1 .447-1 1s.447 1 1 1z"}}]})(props);
	};
	module.exports.TiChartPieOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.227 7.609l.557-.559c.396-.396.607-.943.582-1.504-.026-.561-.286-1.084-.717-1.443-2.129-1.775-4.711-2.848-7.469-3.097l-.18-.006c-.497 0-.979.186-1.35.523-.414.379-.65.915-.65 1.477v2.229c-3.657.865-6.333 4.188-6.333 8.006 0 4.547 3.688 8.244 8.224 8.244 1.594 0 3.11-.479 4.441-1.345.277.142.583.226.9.226l.109-.004c.569-.03 1.098-.305 1.453-.75 1.421-1.781 2.204-4.019 2.204-6.297.002-2.032-.625-4.027-1.771-5.7zm-7.336 11.87c-3.438 0-6.224-2.793-6.224-6.244 0-3.137 2.317-5.729 5.333-6.164v6.408l4.609 4.754c-1.037.779-2.322 1.246-3.718 1.246zm.109-7.454v-9.025c2.411.218 4.607 1.173 6.366 2.641l-6.366 6.384zm.214 1.269l5.019-5.028c1.104 1.385 1.769 3.141 1.769 5.043 0 1.914-.664 3.666-1.769 5.051l-5.019-5.066z"}}]})(props);
	};
	module.exports.TiChartPie = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.614 13.98l4.908 4.922c.39.391.99.36 1.286-.106.88-1.394 1.393-3.044 1.393-4.815 0-2.131-.741-4.086-1.972-5.631l-5.615 5.63zM9 14.396v-7.355c-3.391.487-6 3.405-6 6.939 0 3.876 3.134 7.02 7 7.02 1.572 0 3.018-.526 4.186-1.403l-5.186-5.201zM16.331 6.213c.39-.391.365-.999-.089-1.313-1.253-.868-2.695-1.479-4.251-1.765-.544-.1-.991.312-.991.865v7.56l5.331-5.347z"}}]})(props);
	};
	module.exports.TiChevronLeftOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 20c-.802 0-1.555-.312-2.122-.879l-7.121-7.121 7.122-7.121c1.133-1.133 3.11-1.133 4.243 0 .566.566.878 1.32.878 2.121s-.312 1.555-.879 2.122l-2.878 2.878 2.878 2.879c.567.566.879 1.32.879 2.121s-.312 1.555-.879 2.122c-.566.566-1.319.878-2.121.878zm-6.415-8l5.708 5.707c.378.378 1.037.377 1.414 0 .189-.189.293-.439.293-.707s-.104-.518-.293-.707l-4.292-4.293 4.292-4.293c.189-.189.293-.44.293-.707s-.104-.518-.293-.707c-.378-.379-1.037-.378-1.414-.001l-5.708 5.708z"}}]})(props);
	};
	module.exports.TiChevronLeft = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14.414 5.586c-.78-.781-2.048-.781-2.828 0l-6.415 6.414 6.415 6.414c.39.391.902.586 1.414.586s1.024-.195 1.414-.586c.781-.781.781-2.047 0-2.828l-3.585-3.586 3.585-3.586c.781-.781.781-2.047 0-2.828z"}}]})(props);
	};
	module.exports.TiChevronRightOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 20c-.802 0-1.555-.312-2.122-.879-.566-.566-.878-1.32-.878-2.121s.312-1.555.879-2.122l2.878-2.878-2.878-2.879c-.567-.566-.879-1.32-.879-2.121s.312-1.555.879-2.122c1.133-1.132 3.109-1.133 4.243.001l7.121 7.121-7.122 7.121c-.566.567-1.319.879-2.121.879zm0-14c-.268 0-.518.104-.707.292-.189.19-.293.441-.293.708s.104.518.293.707l4.292 4.293-4.292 4.293c-.189.189-.293.439-.293.707s.104.518.293.707c.378.379 1.037.378 1.414.001l5.708-5.708-5.708-5.707c-.189-.189-.439-.293-.707-.293z"}}]})(props);
	};
	module.exports.TiChevronRight = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8.586 5.586c-.781.781-.781 2.047 0 2.828l3.585 3.586-3.585 3.586c-.781.781-.781 2.047 0 2.828.39.391.902.586 1.414.586s1.024-.195 1.414-.586l6.415-6.414-6.415-6.414c-.78-.781-2.048-.781-2.828 0z"}}]})(props);
	};
	module.exports.TiClipboard = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M17 3h-10c-1.654 0-3 1.346-3 3v12c0 1.654 1.346 3 3 3h10c1.654 0 3-1.346 3-3v-12c0-1.654-1.346-3-3-3zm-8 2h6v1c0 .551-.449 1-1 1h-4c-.551 0-1-.449-1-1v-1zm9 13c0 .551-.449 1-1 1h-10c-.551 0-1-.449-1-1v-12c0-.551.449-1 1-1h1v1c0 1.1.9 2 2 2h4c1.1 0 2-.9 2-2v-1h1c.551 0 1 .449 1 1v12zM16 17h-8c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h8c.276 0 .5.224.5.5s-.224.5-.5.5zM16 14h-8c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h8c.276 0 .5.224.5.5s-.224.5-.5.5zM16 11h-8c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h8c.276 0 .5.224.5.5s-.224.5-.5.5z"}}]}]})(props);
	};
	module.exports.TiCloudStorageOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.5 8.999l-.352.015c-.824-2.375-3.312-4.015-5.898-4.015-3.309 0-6.25 2.69-6.25 6v.126c-1 .445-2.75 2.014-2.75 3.875 0 2.206 2.044 4 4.25 4h11c2.757 0 5-2.244 5-5s-2.243-5.001-5-5.001zm0 8.001h-4.5v-3.794l2.146 2.146c.098.099.226.146.354.146s.256-.049.354-.146c.195-.194.195-.512 0-.707l-2.998-3-.164-.107c-.123-.051-.26-.051-.383 0l-.162.107-3 3c-.194.195-.194.513 0 .707.099.099.227.146.354.146s.256-.049.354-.146l2.145-2.146v3.794h-5.5c-1.104 0-2-.896-2-2s.896-2 1.908-2.005l1.422.015-.248-1.201c-.055-.264-.082-.536-.082-.809 0-2.206 1.794-4 4-4 1.951 0 3.604 1.402 3.93 3.334l.187 1.102 1.073-.306c.312-.089.569-.13.812-.13 1.653 0 3 1.346 3 3s-1.348 3-3.002 3z"}}]})(props);
	};
	module.exports.TiCloudStorage = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 9l-.351.015c-.825-2.377-3.062-4.015-5.649-4.015-3.309 0-6 2.691-6 6l.001.126c-1.724.445-3.001 2.013-3.001 3.874 0 2.206 1.794 4 4 4h5v-4.586l-1.293 1.293c-.195.195-.451.293-.707.293s-.512-.098-.707-.293c-.391-.391-.391-1.023 0-1.414l2.999-2.999c.093-.093.203-.166.326-.217.244-.101.52-.101.764 0 .123.051.233.124.326.217l2.999 2.999c.391.391.391 1.023 0 1.414-.195.195-.451.293-.707.293s-.512-.098-.707-.293l-1.293-1.293v4.586h4c2.757 0 5-2.243 5-5s-2.243-5-5-5z"}}]})(props);
	};
	module.exports.TiCodeOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M7.828 19c-.801 0-1.555-.312-2.121-.879l-5.121-5.121 5.121-5.121c1.133-1.134 3.112-1.134 4.243.001 1.169 1.168 1.169 3.072-.001 4.241l-.878.879.878.879c1.17 1.169 1.17 3.073 0 4.242-.564.567-1.318.879-2.121.879zm-4.414-6l3.707 3.707c.38.379 1.039.377 1.413.001.391-.391.391-1.025.001-1.415l-2.292-2.293 2.292-2.293c.39-.39.39-1.024 0-1.414-.378-.379-1.036-.377-1.414 0l-3.707 3.707zM16.172 19c-.803 0-1.557-.312-2.122-.88-1.169-1.168-1.169-3.072.001-4.241l.878-.879-.878-.879c-1.17-1.169-1.17-3.073 0-4.242 1.129-1.133 3.109-1.134 4.242 0l5.121 5.121-5.121 5.121c-.566.567-1.32.879-2.121.879zm-.001-10c-.267 0-.518.104-.705.292-.391.391-.391 1.025-.001 1.415l2.292 2.293-2.292 2.293c-.39.39-.39 1.024 0 1.414.377.378 1.035.379 1.414 0l3.707-3.707-3.707-3.707c-.19-.189-.441-.293-.708-.293z"}}]}]})(props);
	};
	module.exports.TiCode = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8.171 18c-.512 0-1.023-.195-1.414-.586l-4.414-4.414 4.414-4.414c.781-.781 2.049-.781 2.828 0 .781.781.781 2.047 0 2.828l-1.585 1.586 1.585 1.586c.781.781.781 2.047 0 2.828-.39.391-.902.586-1.414.586zM15.829 18c-.512 0-1.024-.195-1.414-.586-.781-.781-.781-2.047 0-2.828l1.585-1.586-1.585-1.586c-.781-.781-.781-2.047 0-2.828.779-.781 2.047-.781 2.828 0l4.414 4.414-4.414 4.414c-.39.391-.902.586-1.414.586z"}}]})(props);
	};
	module.exports.TiCoffee = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M17 19h-12c-.553 0-1-.447-1-1s.447-1 1-1h12c.553 0 1 .447 1 1s-.447 1-1 1zM17.5 5h-12.5v9c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2v-2h.5c1.93 0 3.5-1.57 3.5-3.5s-1.57-3.5-3.5-3.5zm-2.5 9h-8v-7h8v7zm2.5-4h-1.5v-3h1.5c.827 0 1.5.673 1.5 1.5s-.673 1.5-1.5 1.5z"}}]}]})(props);
	};
	module.exports.TiCogOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 5l.855 3.42 3.389-.971 1.501 2.6-2.535 2.449 2.535 2.451-1.5 2.6-3.39-.971-.855 3.422h-3l-.855-3.422-3.39.971-1.501-2.6 2.535-2.451-2.534-2.449 1.5-2.6 3.39.971.855-3.42h3m0-2h-3c-.918 0-1.718.625-1.939 1.516l-.354 1.412-1.4-.4c-.184-.053-.369-.078-.552-.078-.7 0-1.368.37-1.731 1l-1.5 2.6c-.459.796-.317 1.802.342 2.438l1.047 1.011-1.048 1.015c-.66.637-.802 1.643-.343 2.438l1.502 2.6c.363.631 1.031 1 1.731 1 .183 0 .368-.025.552-.076l1.399-.401.354 1.415c.222.885 1.022 1.51 1.94 1.51h3c.918 0 1.718-.625 1.939-1.516l.354-1.414 1.399.4c.184.053.369.077.552.077.7 0 1.368-.37 1.731-1l1.5-2.6c.459-.796.317-1.8-.342-2.438l-1.047-1.013 1.047-1.013c.66-.637.801-1.644.342-2.438l-1.5-2.6c-.365-.631-1.031-1-1.732-1-.184 0-.368.025-.551.076l-1.4.401-.354-1.413c-.22-.884-1.02-1.509-1.938-1.509zM11.5 10.5c1.104 0 2 .895 2 2 0 1.104-.896 2-2 2s-2-.896-2-2c0-1.105.896-2 2-2m0-1c-1.654 0-3 1.346-3 3s1.346 3 3 3 3-1.346 3-3-1.346-3-3-3z"}}]})(props);
	};
	module.exports.TiCog = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9.387 17.548l.371 1.482c.133.533.692.97 1.242.97h1c.55 0 1.109-.437 1.242-.97l.371-1.482c.133-.533.675-.846 1.203-.694l1.467.42c.529.151 1.188-.114 1.462-.591l.5-.867c.274-.477.177-1.179-.219-1.562l-1.098-1.061c-.396-.383-.396-1.008.001-1.39l1.096-1.061c.396-.382.494-1.084.22-1.561l-.501-.867c-.275-.477-.933-.742-1.461-.591l-1.467.42c-.529.151-1.07-.161-1.204-.694l-.37-1.48c-.133-.532-.692-.969-1.242-.969h-1c-.55 0-1.109.437-1.242.97l-.37 1.48c-.134.533-.675.846-1.204.695l-1.467-.42c-.529-.152-1.188.114-1.462.59l-.5.867c-.274.477-.177 1.179.22 1.562l1.096 1.059c.395.383.395 1.008 0 1.391l-1.098 1.061c-.395.383-.494 1.085-.219 1.562l.501.867c.274.477.933.742 1.462.591l1.467-.42c.528-.153 1.07.16 1.203.693zm2.113-7.048c1.104 0 2 .895 2 2 0 1.104-.896 2-2 2s-2-.896-2-2c0-1.105.896-2 2-2z"}}]})(props);
	};
	module.exports.TiCompass = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M12 5c3.859.001 7 3.142 7 7.001 0 3.858-3.141 6.998-7 6.999-3.859 0-7-3.14-7-6.999s3.141-7 7-7.001m0-2c-4.971.001-9 4.03-9 9.001 0 4.97 4.029 8.999 9 8.999 4.97-.001 9-4.03 9-8.999 0-4.971-4.029-9-9-9.001zM16.182 7.819c-.129-.128-.315-.178-.491-.127l-5.951 1.706c-.166.048-.295.177-.342.343l-1.707 5.951c-.051.175-.002.363.127.491.095.095.223.146.354.146l.138-.02 5.95-1.708c.165-.047.295-.177.342-.343l1.707-5.949c.05-.173.002-.361-.127-.49zm-7.282 7.282l1.383-4.817 3.434 3.435-4.817 1.382z"}}]}]})(props);
	};
	module.exports.TiContacts = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M19 3h-11c-1.654 0-3 1.346-3 3v1h-1c-.553 0-1 .448-1 1s.447 1 1 1h1v2h-1c-.553 0-1 .448-1 1s.447 1 1 1h1v2h-1c-.553 0-1 .448-1 1s.447 1 1 1h1v1c0 1.654 1.346 3 3 3h11c1.654 0 3-1.346 3-3v-12c0-1.654-1.346-3-3-3zm-12 3c0-.551.449-1 1-1v2h-1v-1zm0 3h1v2h-1v-2zm0 4h1v2h-1v-2zm0 5v-1h1v2c-.551 0-1-.449-1-1zm13 0c0 .551-.449 1-1 1h-10v-14h10c.551 0 1 .449 1 1v12z"}},{"tag":"circle","attr":{"cx":"14","cy":"10.5","r":"2"}},{"tag":"path","attr":{"d":"M14 13.356c-1.562 0-2.5.715-2.5 1.429 0 .357.938.715 2.5.715 1.466 0 2.5-.357 2.5-.715 0-.714-.98-1.429-2.5-1.429z"}}]}]})(props);
	};
	module.exports.TiCreditCard = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M17 7h-11c-1.654 0-3 1.346-3 3v7c0 1.654 1.346 3 3 3h11c1.654 0 3-1.346 3-3v-7c0-1.654-1.346-3-3-3zm1 10c0 .552-.448 1-1 1h-11c-.552 0-1-.448-1-1v-4h13v4zm0-6h-13v-1c0-.552.448-1 1-1h11c.552 0 1 .448 1 1v1zM14 16h2c.276 0 .5-.224.5-.5s-.224-.5-.5-.5h-2c-.276 0-.5.224-.5.5s.224.5.5.5z"}}]}]})(props);
	};
	module.exports.TiCss3 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M5.7 3.4l-.6 3.2h12.3l-.4 2.1h-12.3l-.6 3.2h12.3l-.7 3.6-5 1.7-4.3-1.7.3-1.6h-3l-.7 3.8 7.1 2.9 8.2-2.9 1.1-5.8.2-1.2 1.4-7.3h-15.3z"}}]})(props);
	};
	module.exports.TiDatabase = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.983 8.791c-.176-3.704-3.236-6.666-6.983-6.666s-6.807 2.962-6.983 6.666l-.017.084v6.25c0 3.86 3.141 7 7 7s7-3.14 7-7v-6.25l-.017-.084zm-6.983 8.834c-2.22 0-4.132-1.324-5-3.222v-.388c1.271 1.3 3.042 2.11 5 2.11s3.729-.811 5-2.11v.388c-.868 1.898-2.78 3.222-5 3.222zm0-13.5c2.757 0 5 2.243 5 5s-2.243 5-5 5-5-2.243-5-5 2.243-5 5-5zm0 16c-2.271 0-4.172-1.532-4.778-3.609 1.188 1.293 2.888 2.109 4.778 2.109s3.59-.816 4.778-2.109c-.606 2.077-2.507 3.609-4.778 3.609z"}}]})(props);
	};
	module.exports.TiDeleteOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 3c-4.963 0-9 4.038-9 9s4.037 9 9 9 9-4.038 9-9-4.037-9-9-9zm0 16c-3.859 0-7-3.14-7-7s3.141-7 7-7 7 3.14 7 7-3.141 7-7 7zM12.707 12l2.646-2.646c.194-.194.194-.512 0-.707-.195-.194-.513-.194-.707 0l-2.646 2.646-2.646-2.647c-.195-.194-.513-.194-.707 0-.195.195-.195.513 0 .707l2.646 2.647-2.646 2.646c-.195.195-.195.513 0 .707.097.098.225.147.353.147s.256-.049.354-.146l2.646-2.647 2.646 2.646c.098.098.226.147.354.147s.256-.049.354-.146c.194-.194.194-.512 0-.707l-2.647-2.647z"}}]})(props);
	};
	module.exports.TiDelete = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 4c-4.419 0-8 3.582-8 8s3.581 8 8 8 8-3.582 8-8-3.581-8-8-8zm3.707 10.293c.391.391.391 1.023 0 1.414-.195.195-.451.293-.707.293s-.512-.098-.707-.293l-2.293-2.293-2.293 2.293c-.195.195-.451.293-.707.293s-.512-.098-.707-.293c-.391-.391-.391-1.023 0-1.414l2.293-2.293-2.293-2.293c-.391-.391-.391-1.023 0-1.414s1.023-.391 1.414 0l2.293 2.293 2.293-2.293c.391-.391 1.023-.391 1.414 0s.391 1.023 0 1.414l-2.293 2.293 2.293 2.293z"}}]})(props);
	};
	module.exports.TiDeviceDesktop = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M21 1h-18c-1.654 0-3 1.346-3 3v11c0 1.654 1.346 3 3 3h6v2h-3c-.552 0-1 .448-1 1s.448 1 1 1h12c.552 0 1-.448 1-1s-.448-1-1-1h-3v-2h6c1.654 0 3-1.346 3-3v-11c0-1.654-1.346-3-3-3zm-7 19h-4v-2h4v2zm8-5c0 .551-.449 1-1 1h-18c-.551 0-1-.449-1-1v-11c0-.551.449-1 1-1h18c.551 0 1 .449 1 1v11zM20 4h-16c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-8c0-.55-.45-1-1-1zm0 9h-16v-8h16v8z"}}]}]})(props);
	};
	module.exports.TiDeviceLaptop = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.989 16.049c.009-.315.011-.657.011-1.049v-9c0-1.654-1.346-3-3-3h-14c-1.654 0-3 1.346-3 3v9c0 .385.002.73.012 1.049-1.145.228-2.012 1.24-2.012 2.451 0 1.378 1.122 2.5 2.5 2.5h19c1.378 0 2.5-1.122 2.5-2.5 0-1.211-.866-2.222-2.011-2.451zm-17.989-10.049c0-.551.449-1 1-1h14c.551 0 1 .449 1 1v9c0 .388-.005.726-.014 1h-.986v-9c0-.55-.45-1-1-1h-12c-.55 0-1 .45-1 1v9h-.98c-.012-.264-.02-.599-.02-1v-9zm14 10h-12v-9h12v9zm3.5 3h-19c-.271 0-.5-.229-.5-.5s.229-.5.5-.5h19c.271 0 .5.229.5.5s-.229.5-.5.5z"}}]})(props);
	};
	module.exports.TiDevicePhone = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M15 3h-7c-1.654 0-3 1.346-3 3v12c0 1.654 1.346 3 3 3h7c1.654 0 3-1.346 3-3v-12c0-1.654-1.346-3-3-3zm1 15c0 .551-.449 1-1 1h-7c-.551 0-1-.449-1-1v-12c0-.551.449-1 1-1h7c.551 0 1 .449 1 1v12zM14 6h-5c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h1.5c0 .553.448 1 1 1s1-.447 1-1h1.5c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1zm0 10h-5v-9h5v9z"}}]}]})(props);
	};
	module.exports.TiDeviceTablet = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M17 4h-9c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3.5c0 .553.448 1 1 1s1-.447 1-1h3.5c.55 0 1-.45 1-1v-12c0-.55-.45-1-1-1zm0 13h-9v-12h9v12zM18 1h-11c-1.654 0-3 1.346-3 3v15c0 1.654 1.346 3 3 3h11c1.654 0 3-1.346 3-3v-15c0-1.654-1.346-3-3-3zm1 18c0 .551-.449 1-1 1h-11c-.551 0-1-.449-1-1v-15c0-.551.449-1 1-1h11c.551 0 1 .449 1 1v15z"}}]}]})(props);
	};
	module.exports.TiDirections = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.908 9.5l-2.754-2.607c-.568-.541-1.447-.893-2.237-.893h-2.917v-.5c0-.828-.672-1.5-1.5-1.5s-1.5.672-1.5 1.5v.5h-3.5c-1.93 0-3.5 1.57-3.5 3.5 0 1.396.828 2.596 2.016 3.157l-1.844 1.843 2.561 2.561c.57.57 1.46.939 2.268.939h2.2l.8 4h1l.8-4h2.7c1.931 0 3.5-1.57 3.5-3.5 0-.902-.353-1.718-.915-2.339l.072-.056 2.75-2.605zm-5.408 6.5h-7.5c-.275 0-.658-.158-.854-.354l-1.146-1.146 1.146-1.146c.195-.195.577-.354.854-.354h7.5c.828 0 1.5.672 1.5 1.5s-.672 1.5-1.5 1.5zm1.279-5.344c-.199.19-.586.344-.862.344h-9.417c-.828 0-1.5-.672-1.5-1.5s.672-1.5 1.5-1.5h9.417c.276 0 .663.154.862.344l1.221 1.156-1.221 1.156z"}}]})(props);
	};
	module.exports.TiDivideOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 8.5c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3zm0-4c-.552 0-1 .449-1 1s.448 1 1 1 1-.449 1-1-.448-1-1-1zM12 21.5c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3zm0-4c-.552 0-1 .449-1 1s.448 1 1 1 1-.449 1-1-.448-1-1-1zM18 15h-12c-1.654 0-3-1.346-3-3s1.346-3 3-3h12c1.654 0 3 1.346 3 3s-1.346 3-3 3zm-12-4c-.552 0-1 .449-1 1s.448 1 1 1h12c.552 0 1-.449 1-1s-.448-1-1-1h-12z"}}]})(props);
	};
	module.exports.TiDivide = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"12","cy":"6","r":"2.25"}},{"tag":"circle","attr":{"cx":"12","cy":"18","r":"2.25"}},{"tag":"path","attr":{"d":"M18 10h-12c-1.104 0-2 .896-2 2s.896 2 2 2h12c1.104 0 2-.896 2-2s-.896-2-2-2z"}}]})(props);
	};
	module.exports.TiDocumentAdd = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 12h-2v-2c0-.553-.447-1-1-1s-1 .447-1 1v2h-2c-.553 0-1 .447-1 1s.447 1 1 1h2v2c0 .553.447 1 1 1s1-.447 1-1v-2h2c.553 0 1-.447 1-1s-.447-1-1-1zM19.707 7.293l-4-4c-.187-.188-.441-.293-.707-.293h-8c-1.654 0-3 1.346-3 3v12c0 1.654 1.346 3 3 3h10c1.654 0 3-1.346 3-3v-10c0-.266-.105-.52-.293-.707zm-2.121.707h-1.086c-.827 0-1.5-.673-1.5-1.5v-1.086l2.586 2.586zm-.586 11h-10c-.552 0-1-.448-1-1v-12c0-.552.448-1 1-1h7v1.5c0 1.379 1.121 2.5 2.5 2.5h1.5v9c0 .552-.448 1-1 1z"}}]})(props);
	};
	module.exports.TiDocumentDelete = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.707 7.293l-4-4c-.187-.188-.441-.293-.707-.293h-8c-1.654 0-3 1.346-3 3v12c0 1.654 1.346 3 3 3h10c1.654 0 3-1.346 3-3v-10c0-.266-.105-.52-.293-.707zm-2.121.707h-1.086c-.827 0-1.5-.673-1.5-1.5v-1.086l2.586 2.586zm-.586 11h-10c-.552 0-1-.448-1-1v-12c0-.552.448-1 1-1h7v1.5c0 1.379 1.121 2.5 2.5 2.5h1.5v9c0 .552-.448 1-1 1zM15 14h-6c-.553 0-1-.447-1-1s.447-1 1-1h6c.553 0 1 .447 1 1s-.447 1-1 1z"}}]})(props);
	};
	module.exports.TiDocumentText = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M17 21h-10c-1.654 0-3-1.346-3-3v-12c0-1.654 1.346-3 3-3h10c1.654 0 3 1.346 3 3v12c0 1.654-1.346 3-3 3zm-10-16c-.551 0-1 .449-1 1v12c0 .551.449 1 1 1h10c.551 0 1-.449 1-1v-12c0-.551-.449-1-1-1h-10zM16 11h-8c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h8c.276 0 .5.224.5.5s-.224.5-.5.5zM16 8h-8c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h8c.276 0 .5.224.5.5s-.224.5-.5.5zM16 14h-8c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h8c.276 0 .5.224.5.5s-.224.5-.5.5zM16 17h-8c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h8c.276 0 .5.224.5.5s-.224.5-.5.5z"}}]}]})(props);
	};
	module.exports.TiDocument = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.707 7.293l-4-4c-.187-.188-.441-.293-.707-.293h-8c-1.654 0-3 1.346-3 3v12c0 1.654 1.346 3 3 3h10c1.654 0 3-1.346 3-3v-10c0-.266-.105-.52-.293-.707zm-2.121.707h-1.086c-.827 0-1.5-.673-1.5-1.5v-1.086l2.586 2.586zm-.586 11h-10c-.552 0-1-.448-1-1v-12c0-.552.448-1 1-1h7v1.5c0 1.379 1.121 2.5 2.5 2.5h1.5v9c0 .552-.448 1-1 1z"}}]})(props);
	};
	module.exports.TiDownloadOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.986 17c0-.105-.004-.211-.038-.316l-2-6c-.136-.409-.516-.684-.948-.684h-.561l.682-.678c1.17-1.17 1.17-3.072 0-4.242-.81-.812-2.068-1.078-3.121-.709v-1.371c0-1.654-1.346-3-3-3s-3 1.346-3 3v1.371c-1.052-.369-2.311-.103-3.121.709-1.17 1.17-1.17 3.072.002 4.244l.68.676h-.561c-.432 0-.812.275-.948.684l-2 6c-.034.105-.038.211-.038.316-.014 0-.014 5-.014 5 0 .553.447 1 1 1h16c.553 0 1-.447 1-1 0 0 0-5-.014-5zm-13.693-10.506c.189-.187.439-.293.707-.293s.518.104.707.293l2.293 2.293v-5.787c0-.552.448-1 1-1s1 .448 1 1v5.787l2.293-2.293c.379-.377 1.035-.377 1.414 0 .391.39.391 1.023.002 1.412l-4.709 4.684-4.707-4.682c-.391-.388-.391-1.024 0-1.414zm-.572 5.506h1.852l3.429 3.41 3.428-3.41h1.852l1.667 5h-13.894l1.666-5zm12.279 9h-14v-3h14v3z"}}]})(props);
	};
	module.exports.TiDownload = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.707 7.404c-.189-.188-.448-.283-.707-.283s-.518.095-.707.283l-2.293 2.293v-6.697c0-.552-.448-1-1-1s-1 .448-1 1v6.697l-2.293-2.293c-.189-.188-.44-.293-.707-.293s-.518.105-.707.293c-.39.39-.39 1.024 0 1.414l4.707 4.682 4.709-4.684c.388-.387.388-1.022-.002-1.412zM20.987 16c0-.105-.004-.211-.039-.316l-2-6c-.136-.409-.517-.684-.948-.684h-.219c-.094.188-.21.368-.367.525l-1.482 1.475h1.348l1.667 5h-13.893l1.667-5h1.348l-1.483-1.475c-.157-.157-.274-.337-.367-.525h-.219c-.431 0-.812.275-.948.684l-2 6c-.035.105-.039.211-.039.316-.013 0-.013 5-.013 5 0 .553.447 1 1 1h16c.553 0 1-.447 1-1 0 0 0-5-.013-5z"}}]})(props);
	};
	module.exports.TiDropbox = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3 12.9l5.3 3.5 3.7-3.1-5.3-3.3zM8.3 3.6l-5.3 3.5 3.7 2.9 5.3-3.3zM21 7.1l-5.3-3.5-3.7 3.1 5.3 3.3zM12 13.3l3.7 3.1 5.3-3.5-3.7-2.9zM12 14.5l-3.7 3.1-1.6-1.1v1.2l5.3 3.2 5.3-3.2v-1.2l-1.6 1.1z"}}]})(props);
	};
	module.exports.TiEdit = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.561 5.318l-2.879-2.879c-.293-.293-.677-.439-1.061-.439-.385 0-.768.146-1.061.439l-3.56 3.561h-9c-.552 0-1 .447-1 1v13c0 .553.448 1 1 1h13c.552 0 1-.447 1-1v-9l3.561-3.561c.293-.293.439-.677.439-1.061s-.146-.767-.439-1.06zm-10.061 9.354l-2.172-2.172 6.293-6.293 2.172 2.172-6.293 6.293zm-2.561-1.339l1.756 1.728-1.695-.061-.061-1.667zm7.061 5.667h-11v-11h6l-3.18 3.18c-.293.293-.478.812-.629 1.289-.16.5-.191 1.056-.191 1.47v3.061h3.061c.414 0 1.108-.1 1.571-.29.464-.19.896-.347 1.188-.64l3.18-3.07v6zm2.5-11.328l-2.172-2.172 1.293-1.293 2.171 2.172-1.292 1.293z"}}]})(props);
	};
	module.exports.TiEjectOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 8.551v-1.551c0-1.105-.896-2-2-2h-10v10c0 1.104.896 2 2 2h1.066c.893 2.887 3.646 5 6.809 5 3.859 0 7.062-3.016 7.062-6.875.001-3.161-2.068-5.74-4.937-6.574zm-8 1.862v3.243c0 .552-.448 1-1 1s-1-.448-1-1v-6.656h6.656c.552 0 1 .448 1 1s-.448 1-1 1h-3.243l4.801 4.799c.392.391.392 1.025.001 1.415-.189.188-.439.292-.708.292-.268 0-.519-.104-.707-.291l-4.8-4.802zm6 9.618c-2.757 0-5-2.26-5-5.016 0-.705-.004-1.371.21-1.979l2.883 2.884c.39.39.901.584 1.414.584s1.022-.194 1.414-.584c.781-.78.781-2.049 0-2.83l-2.567-2.567c.517-.226 1.065-.398 1.646-.398 2.757 0 5 2.182 5 4.938 0 2.757-2.243 4.968-5 4.968z"}}]})(props);
	};
	module.exports.TiEject = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 17.5c-2.481 0-4.5-2.019-4.5-4.5 0-.553-.447-1-1-1s-1 .447-1 1c0 3.584 2.916 6.5 6.5 6.5s6.5-2.916 6.5-6.5-2.916-6.5-6.5-6.5c-.553 0-1 .447-1 1s.447 1 1 1c2.481 0 4.5 2.019 4.5 4.5s-2.019 4.5-4.5 4.5zM10.656 4c.552 0 1 .448 1 1s-.448 1-1 1h-3.243l1.708 1.707 4.093 4.092c.391.391.391 1.025.001 1.415-.189.188-.44.292-.708.292s-.519-.104-.707-.291l-4.093-4.094-1.707-1.708v3.243c0 .552-.448 1-1 1s-1-.448-1-1v-6.656h6.656"}}]})(props);
	};
	module.exports.TiEqualsOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 12h-12c-1.654 0-3-1.346-3-3s1.346-3 3-3h12c1.654 0 3 1.346 3 3s-1.346 3-3 3zm-12-4c-.552 0-1 .449-1 1s.448 1 1 1h12c.552 0 1-.449 1-1s-.448-1-1-1h-12zM18 19h-12c-1.654 0-3-1.346-3-3s1.346-3 3-3h12c1.654 0 3 1.346 3 3s-1.346 3-3 3zm-12-4c-.552 0-1 .449-1 1s.448 1 1 1h12c.552 0 1-.449 1-1s-.448-1-1-1h-12z"}}]})(props);
	};
	module.exports.TiEquals = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 7h-12c-1.104 0-2 .896-2 2s.896 2 2 2h12c1.104 0 2-.896 2-2s-.896-2-2-2zM18 14h-12c-1.104 0-2 .896-2 2s.896 2 2 2h12c1.104 0 2-.896 2-2s-.896-2-2-2z"}}]})(props);
	};
	module.exports.TiExportOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22.711 9.796c-.041-.041-4.055-4.096-5.982-6.146-.42-.414-.999-.65-1.586-.65-1.182 0-2.143.896-2.143 2h-8c-.553 0-1 .448-1 1v14c0 .552.447 1 1 1h14c.553 0 1-.448 1-1v-6.045c1.434-1.461 2.688-2.729 2.711-2.751.387-.39.387-1.018 0-1.408zm-7.432 6.145l-.136.059-.144-.04v-3.96h-1c-1.771.034-3.336.68-4.753 1.958.43-2.215 1.6-4.958 4.753-4.958h1v-3.958l.144-.042.154.05c1.436 1.525 4.051 4.187 5.297 5.45-.253.257-4.342 4.422-5.315 5.441zm-9.279 3.059v-12h8v1c-4.66 0-6 4.871-6 8.5v.5c1.691-2.578 3.6-3.953 6-4v3c0 .551.512 1 1.143 1 .364 0 .676-.158.883-.391.539-.565 1.242-1.291 1.976-2.043v4.434h-12.002z"}}]})(props);
	};
	module.exports.TiExport = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8 16.5v.5c1.691-2.578 3.6-3.953 6-4v3c0 .551.511 1 1.143 1 .364 0 .675-.158.883-.391 1.933-2.029 5.974-6.109 5.974-6.109s-4.041-4.082-5.975-6.137c-.208-.205-.518-.363-.882-.363-.632 0-1.143.447-1.143 1v3c-4.66 0-6 4.871-6 8.5zM5 21h14c.553 0 1-.448 1-1v-6.046c-.664.676-1.364 1.393-2 2.047v2.999h-12v-12h7v-2h-8c-.553 0-1 .448-1 1v14c0 .552.447 1 1 1z"}}]})(props);
	};
	module.exports.TiEyeOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 9c1.211 0 2.381.355 3.297 1.004 1.301.92 2.43 2.124 3.165 2.996-.735.872-1.864 2.077-3.166 2.996-.915.649-2.085 1.004-3.296 1.004s-2.382-.355-3.299-1.004c-1.301-.92-2.43-2.124-3.164-2.996.734-.872 1.863-2.076 3.164-2.995.917-.65 2.088-1.005 3.299-1.005m0-2c-1.691 0-3.242.516-4.453 1.371-2.619 1.852-4.547 4.629-4.547 4.629s1.928 2.777 4.547 4.629c1.211.855 2.762 1.371 4.453 1.371s3.242-.516 4.451-1.371c2.619-1.852 4.549-4.629 4.549-4.629s-1.93-2.777-4.549-4.629c-1.209-.855-2.76-1.371-4.451-1.371zM12 12c-.553 0-1 .447-1 1 0 .551.447 1 1 1 .551 0 1-.449 1-1 0-.553-.449-1-1-1zM12 16c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3zm0-5c-1.104 0-2 .896-2 2s.896 2 2 2 2-.896 2-2-.896-2-2-2z"}}]})(props);
	};
	module.exports.TiEye = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.821 12.43c-.083-.119-2.062-2.944-4.793-4.875-1.416-1.003-3.202-1.555-5.028-1.555-1.825 0-3.611.552-5.03 1.555-2.731 1.931-4.708 4.756-4.791 4.875-.238.343-.238.798 0 1.141.083.119 2.06 2.944 4.791 4.875 1.419 1.002 3.205 1.554 5.03 1.554 1.826 0 3.612-.552 5.028-1.555 2.731-1.931 4.71-4.756 4.793-4.875.239-.342.239-.798 0-1.14zm-9.821 4.07c-1.934 0-3.5-1.57-3.5-3.5 0-1.934 1.566-3.5 3.5-3.5 1.93 0 3.5 1.566 3.5 3.5 0 1.93-1.57 3.5-3.5 3.5zM14 13c0 1.102-.898 2-2 2-1.105 0-2-.898-2-2 0-1.105.895-2 2-2 1.102 0 2 .895 2 2z"}}]})(props);
	};
	module.exports.TiFeather = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.68 1.017l-.18-.034-.18.033c-4.821.884-8.32 5.084-8.32 9.984 0 4.617 3.108 8.61 7.5 9.795v1.205c0 .553.448 1 1 1s1-.447 1-1v-1.205c4.392-1.185 7.5-5.178 7.5-9.795 0-4.9-3.499-9.1-8.32-9.983zm.82 17.683v-11.7c0-.553-.448-1-1-1s-1 .447-1 1v11.7c-3.18-1.093-5.4-4.054-5.49-7.483l3.137 3.137c.097.097.225.146.353.146s.256-.049.354-.146c.195-.195.195-.512 0-.707l-3.769-3.769c.133-.964.434-1.877.877-2.709l2.184 2.185c.098.097.226.146.354.146s.256-.049.354-.146c.195-.195.195-.512 0-.707l-2.353-2.353c1.162-1.641 2.919-2.846 4.999-3.275 2.08.43 3.837 1.635 4.999 3.275l-2.353 2.353c-.195.195-.195.512 0 .707.098.097.226.146.354.146s.256-.049.354-.146l2.184-2.185c.444.832.744 1.745.877 2.709l-3.769 3.769c-.195.195-.195.512 0 .707.098.098.226.146.354.146s.256-.049.354-.146l3.137-3.137c-.091 3.429-2.311 6.39-5.491 7.483z"}}]})(props);
	};
	module.exports.TiFilm = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M8 8v7h8v-7h-8zm7 6h-6v-5h6v5zM17 2h-3v2h-4v-2h-3c-1.654 0-3 1.346-3 3v13c0 1.654 1.346 3 3 3h3v-2h4v2h3c1.654 0 3-1.346 3-3v-13c0-1.654-1.346-3-3-3zm1 4c-.553 0-1 .447-1 1s.447 1 1 1v1c-.553 0-1 .447-1 1s.447 1 1 1v1c-.553 0-1 .447-1 1s.447 1 1 1v1c-.553 0-1 .447-1 1s.447 1 1 1v1c0 .551-.448 1-1 1h-1v-2h-8v2h-1c-.552 0-1-.449-1-1v-1c.553 0 1-.447 1-1s-.447-1-1-1v-1c.553 0 1-.447 1-1s-.447-1-1-1v-1c.553 0 1-.447 1-1s-.447-1-1-1v-1c.553 0 1-.447 1-1s-.447-1-1-1v-1c0-.551.448-1 1-1h1v2h8v-2h1c.552 0 1 .449 1 1v1z"}}]}]})(props);
	};
	module.exports.TiFilter = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 6h-14c-1.1 0-1.4.6-.6 1.4l4.2 4.2c.8.8 1.4 2.3 1.4 3.4v5l4-2v-3.5c0-.8.6-2.1 1.4-2.9l4.2-4.2c.8-.8.5-1.4-.6-1.4z"}}]})(props);
	};
	module.exports.TiFlagOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.383 4.318c-.374-.155-.804-.069-1.09.217-1.264 1.263-3.321 1.264-4.586 0-2.045-2.043-5.37-2.043-7.414 0-.188.187-.293.442-.293.707v13c0 .552.448 1 1 1s1-.448 1-1v-4.553c1.271-.997 3.121-.911 4.293.26 2.045 2.043 5.371 2.043 7.414 0 .188-.188.293-.442.293-.707v-8c0-.405-.244-.769-.617-.924zm-7.09 1.631c1.54 1.539 3.808 1.918 5.707 1.138v2.311c-1.446.916-3.387.749-4.646-.51-1.448-1.447-3.598-1.743-5.354-.927v-2.272c1.271-.997 3.121-.912 4.293.26zm1.414 6.585c-1.022-1.021-2.365-1.532-3.707-1.532-.681 0-1.361.131-2 .394v-2.311c1.446-.916 3.387-.749 4.646.51.925.924 2.139 1.386 3.354 1.386.687 0 1.366-.164 2-.459v2.272c-1.272.997-3.122.911-4.293-.26z"}}]})(props);
	};
	module.exports.TiFlag = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.383 4.318c-.374-.155-.804-.069-1.09.217-1.264 1.263-3.321 1.264-4.586 0-2.045-2.043-5.37-2.043-7.414 0-.188.187-.293.442-.293.707v13c0 .552.447 1 1 1s1-.448 1-1v-4.553c1.271-.997 3.121-.911 4.293.26 2.045 2.043 5.371 2.043 7.414 0 .188-.188.293-.442.293-.707v-8c0-.405-.244-.769-.617-.924z"}}]})(props);
	};
	module.exports.TiFlashOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14.5 4h.005m-.005 0l-2.5 6 5 2.898-7.5 7.102 2.5-6-5-2.9 7.5-7.1m0-2c-.562.012-1.029.219-1.379.551l-7.497 7.095c-.458.435-.685 1.059-.61 1.686.072.626.437 1.182.982 1.498l3.482 2.021-1.826 4.381c-.362.871-.066 1.879.712 2.416.344.236.739.354 1.135.354.498 0 .993-.186 1.375-.548l7.5-7.103c.458-.434.685-1.058.61-1.685-.073-.627-.438-1.183-.982-1.498l-3.482-2.018 1.789-4.293c.123-.26.192-.551.192-.857 0-1.102-.89-1.996-2.001-2z"}}]})(props);
	};
	module.exports.TiFlash = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.502 12.033l-4.241-2.458 2.138-5.131c.066-.134.103-.285.103-.444 0-.552-.445-1-.997-1-.249.004-.457.083-.622.214l-.07.06-7.5 7.1c-.229.217-.342.529-.306.842.036.313.219.591.491.75l4.242 2.46-2.163 5.19c-.183.436-.034.94.354 1.208.173.118.372.176.569.176.248 0 .496-.093.688-.274l7.5-7.102c.229-.217.342-.529.306-.842-.037-.313-.22-.591-.492-.749z"}}]})(props);
	};
	module.exports.TiFlowChildren = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 16c-1.305 0-2.403.837-2.816 2h-3.184c-1.654 0-3-1.346-3-3v-3.025c.838.634 1.87 1.025 3 1.025h3.184c.413 1.163 1.512 2 2.816 2 1.657 0 3-1.343 3-3s-1.343-3-3-3c-1.305 0-2.403.837-2.816 2h-3.184c-1.654 0-3-1.346-3-3v-.184c1.163-.413 2-1.512 2-2.816 0-1.657-1.343-3-3-3s-3 1.343-3 3c0 1.304.837 2.403 2 2.816v7.184c0 2.757 2.243 5 5 5h3.184c.413 1.163 1.512 2 2.816 2 1.657 0 3-1.343 3-3s-1.343-3-3-3zm0-5c.552 0 1 .449 1 1s-.448 1-1 1-1-.449-1-1 .448-1 1-1zm-10-7c.552 0 1 .449 1 1s-.448 1-1 1-1-.449-1-1 .448-1 1-1zm10 16c-.552 0-1-.449-1-1s.448-1 1-1 1 .449 1 1-.448 1-1 1z"}}]})(props);
	};
	module.exports.TiFlowMerge = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 16.184v-1.851c0-1.93-1.57-3.5-3.5-3.5-.827 0-1.5-.673-1.5-1.5v-1.517c1.161-.415 2-1.514 2-2.816 0-1.654-1.346-3-3-3s-3 1.346-3 3c0 1.302.839 2.401 2 2.815v1.518c0 .827-.673 1.5-1.5 1.5-1.93 0-3.5 1.57-3.5 3.5v1.851c-1.161.415-2 1.514-2 2.816 0 1.654 1.346 3 3 3s3-1.346 3-3c0-1.302-.839-2.401-2-2.816v-1.851c0-.827.673-1.5 1.5-1.5.979 0 1.864-.407 2.5-1.058.636.651 1.521 1.058 2.5 1.058.827 0 1.5.673 1.5 1.5v1.851c-1.161.415-2 1.514-2 2.816 0 1.654 1.346 3 3 3s3-1.346 3-3c0-1.302-.839-2.401-2-2.816zm-11 3.816c-.552 0-1-.449-1-1s.448-1 1-1 1 .449 1 1-.448 1-1 1zm5-16c.552 0 1 .449 1 1s-.448 1-1 1-1-.449-1-1 .448-1 1-1zm5 16c-.552 0-1-.449-1-1s.448-1 1-1 1 .449 1 1-.448 1-1 1z"}}]})(props);
	};
	module.exports.TiFlowParallel = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M18 16.184v-8.368c1.161-.415 2-1.514 2-2.816 0-1.654-1.346-3-3-3s-3 1.346-3 3c0 1.302.839 2.401 2 2.815v8.369c-1.161.415-2 1.514-2 2.816 0 1.654 1.346 3 3 3s3-1.346 3-3c0-1.302-.839-2.401-2-2.816zm-1-12.184c.552 0 1 .449 1 1s-.448 1-1 1-1-.449-1-1 .448-1 1-1zm0 16c-.552 0-1-.449-1-1s.448-1 1-1 1 .449 1 1-.448 1-1 1zM10 5c0-1.654-1.346-3-3-3s-3 1.346-3 3c0 1.302.839 2.401 2 2.815v8.369c-1.161.415-2 1.514-2 2.816 0 1.654 1.346 3 3 3s3-1.346 3-3c0-1.302-.839-2.401-2-2.816v-8.368c1.161-.415 2-1.514 2-2.816zm-3-1c.552 0 1 .449 1 1s-.448 1-1 1-1-.449-1-1 .448-1 1-1zm0 16c-.552 0-1-.449-1-1s.448-1 1-1 1 .449 1 1-.448 1-1 1z"}}]}]})(props);
	};
	module.exports.TiFlowSwitch = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M8 16.184v-.684c0-.848.512-1.595 1.287-2.047-.667-.282-1.279-.667-1.822-1.131-.904.814-1.465 1.938-1.465 3.178v.684c-1.161.415-2 1.514-2 2.816 0 1.654 1.346 3 3 3s3-1.346 3-3c0-1.302-.839-2.401-2-2.816zm-1 3.816c-.552 0-1-.449-1-1s.448-1 1-1 1 .449 1 1-.448 1-1 1zM16 7.815v.351c0 .985-.535 1.852-1.345 2.36.665.274 1.279.646 1.823 1.1.936-.878 1.522-2.102 1.522-3.459v-.351c1.161-.415 2-1.514 2-2.816 0-1.654-1.346-3-3-3s-3 1.346-3 3c0 1.302.839 2.401 2 2.815zm1-3.815c.552 0 1 .449 1 1s-.448 1-1 1-1-.449-1-1 .448-1 1-1zM17.935 16.164c-.41-2.913-2.911-5.164-5.935-5.164-1.936 0-3.552-1.381-3.92-3.209 1.12-.436 1.92-1.519 1.92-2.791 0-1.654-1.346-3-3-3s-3 1.346-3 3c0 1.326.87 2.44 2.065 2.836.41 2.913 2.911 5.164 5.935 5.164 1.936 0 3.552 1.381 3.92 3.209-1.12.436-1.92 1.519-1.92 2.791 0 1.654 1.346 3 3 3s3-1.346 3-3c0-1.326-.87-2.44-2.065-2.836zm-10.935-12.164c.552 0 1 .449 1 1s-.448 1-1 1-1-.449-1-1 .448-1 1-1zm10 16c-.552 0-1-.449-1-1s.448-1 1-1 1 .449 1 1-.448 1-1 1z"}}]}]})(props);
	};
	module.exports.TiFolderAdd = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 6h-6c0-1.104-.896-2-2-2h-4c-1.654 0-3 1.346-3 3v10c0 1.654 1.346 3 3 3h12c1.654 0 3-1.346 3-3v-8c0-1.654-1.346-3-3-3zm0 12h-12c-.552 0-1-.448-1-1v-7h4c.275 0 .5-.225.5-.5s-.225-.5-.5-.5h-4v-2c0-.552.448-1 1-1h4c0 1.104.896 2 2 2h6c.552 0 1 .448 1 1h-4c-.275 0-.5.225-.5.5s.225.5.5.5h4v7c0 .552-.448 1-1 1zM15 12h-2v-2c0-.553-.447-1-1-1s-1 .447-1 1v2h-2c-.553 0-1 .447-1 1s.447 1 1 1h2v2c0 .553.447 1 1 1s1-.447 1-1v-2h2c.553 0 1-.447 1-1s-.447-1-1-1z"}}]})(props);
	};
	module.exports.TiFolderDelete = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 6h-6c0-1.104-.896-2-2-2h-4c-1.654 0-3 1.346-3 3v10c0 1.654 1.346 3 3 3h12c1.654 0 3-1.346 3-3v-8c0-1.654-1.346-3-3-3zm-12 0h4c0 1.104.896 2 2 2h6c.552 0 1 .448 1 1h-14v-2c0-.552.448-1 1-1zm12 12h-12c-.552 0-1-.448-1-1v-7h14v7c0 .552-.448 1-1 1zM15 14h-6c-.553 0-1-.447-1-1s.447-1 1-1h6c.553 0 1 .447 1 1s-.447 1-1 1z"}}]})(props);
	};
	module.exports.TiFolderOpen = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22.3 8h-2.4c-.4-1.2-1.5-2-2.8-2h-6c0-1.1-.9-2-2-2h-4.1c-1.7 0-3 1.3-3 3v10c0 1.7 1.3 3 3 3h12c1.7 0 3.4-1.3 3.8-3l2.2-8c.1-.6-.2-1-.7-1zm-18.3 1v-2c0-.6.4-1 1-1h4c0 1.1.9 2 2 2h6c.6 0 1 .4 1 1h-11.1c-.6 0-1.1.4-1.3 1l-1.6 6.3v-7.3zm14.9 7.5c-.2.8-1.1 1.5-1.9 1.5h-12s-.4-.2-.2-.8l1.9-7c0-.1.2-.2.3-.2h13.7l-1.8 6.5z"}}]})(props);
	};
	module.exports.TiFolder = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 6h-6c0-1.104-.896-2-2-2h-4c-1.654 0-3 1.346-3 3v10c0 1.654 1.346 3 3 3h12c1.654 0 3-1.346 3-3v-8c0-1.654-1.346-3-3-3zm-12 0h4c0 1.104.896 2 2 2h6c.552 0 1 .448 1 1h-14v-2c0-.552.448-1 1-1zm12 12h-12c-.552 0-1-.448-1-1v-7h14v7c0 .552-.448 1-1 1z"}}]})(props);
	};
	module.exports.TiGift = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 8h-2.352c.219-.457.352-.961.352-1.5 0-1.93-1.57-3.5-3.5-3.5-.979 0-1.864.407-2.5 1.058-.636-.651-1.521-1.058-2.5-1.058-1.93 0-3.5 1.57-3.5 3.5 0 .539.133 1.043.352 1.5h-2.352c-.553 0-1 .448-1 1v4c0 .552.447 1 1 1v5c0 1.654 1.346 3 3 3h10c1.654 0 3-1.346 3-3v-5c.553 0 1-.448 1-1v-4c0-.552-.447-1-1-1zm-1 4h-5v-2h5v2zm-8-5h2v1h-2v-1zm2 3v2h-2v-2h2zm1.5-5c.827 0 1.5.673 1.5 1.5s-.673 1.5-1.5 1.5c-.177 0-.344-.039-.5-.097v-.903c0-.521-.404-.937-.913-.982.202-.59.756-1.018 1.413-1.018zm-6.5 1.5c0-.827.673-1.5 1.5-1.5.657 0 1.211.428 1.413 1.018-.509.045-.913.461-.913.982v.903c-.156.058-.323.097-.5.097-.827 0-1.5-.673-1.5-1.5zm2 3.5v2h-5v-2h5zm-3 10c-.551 0-1-.449-1-1v-6h4v7h-3zm4 0v-7h2v7h-2zm6 0h-3v-7h4v6c0 .551-.449 1-1 1z"}}]})(props);
	};
	module.exports.TiGlobeOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 6c2.206 0 4 1.794 4 4s-1.794 4-4 4c-2.204 0-3.998-1.794-3.998-4s1.794-4 3.998-4m0-2c-3.314 0-5.998 2.686-5.998 6s2.684 6 5.998 6c3.312 0 6-2.688 6-6 0-3.314-2.688-6-6-6zM17 20h-4v-1.23c1.641-.371 3.146-1.188 4.363-2.406 1.699-1.699 2.637-3.96 2.637-6.363 0-2.067-.691-4.028-1.968-5.619l.675-.673c.391-.391.391-1.023.001-1.415-.392-.392-1.024-.39-1.415-.001l-2.052 2.049.708.708c1.322 1.321 2.051 3.08 2.051 4.95s-.729 3.627-2.051 4.949-3.079 2.051-4.949 2.051-3.627-.729-4.949-2.051c-.391-.391-1.023-.391-1.414 0-.391.39-.391 1.023 0 1.414 1.699 1.699 3.959 2.637 6.363 2.637v1h-4c-.553 0-1 .447-1 1s.447 1 1 1h10c.553 0 1-.447 1-1s-.447-1-1-1z"}}]})(props);
	};
	module.exports.TiGlobe = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 20h-4c-.553 0-1 .447-1 1s.447 1 1 1h10c.553 0 1-.447 1-1s-.447-1-1-1h-4v-1.23c1.64-.371 3.146-1.188 4.363-2.406 1.7-1.7 2.637-3.96 2.637-6.364 0-2.067-.692-4.029-1.968-5.619l.675-.673c.391-.391.391-1.023.001-1.415-.391-.391-1.024-.39-1.415-.001l-2.052 2.049.708.708c1.322 1.322 2.051 3.081 2.051 4.951s-.729 3.627-2.051 4.949-3.079 2.051-4.949 2.051-3.627-.729-4.949-2.051c-.391-.391-1.023-.391-1.414 0-.391.39-.391 1.023 0 1.414 1.699 1.7 3.959 2.637 6.363 2.637v1zM11 4c1.657 0 3.157.672 4.243 1.757 1.085 1.086 1.757 2.586 1.757 4.243 0 1.656-.672 3.156-1.757 4.242-1.086 1.086-2.586 1.758-4.243 1.758-1.658 0-3.157-.672-4.242-1.757-1.085-1.086-1.756-2.586-1.756-4.243s.671-3.157 1.756-4.243c1.085-1.085 2.584-1.757 4.242-1.757z"}}]})(props);
	};
	module.exports.TiGroupOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 14c2.764 0 5-2.238 5-5s-2.236-5-5-5-5 2.238-5 5 2.236 5 5 5zm0-8c1.654 0 3 1.346 3 3s-1.346 3-3 3-3-1.346-3-3 1.346-3 3-3zM20 15c1.381 0 2.5-1.117 2.5-2.5 0-1.381-1.119-2.5-2.5-2.5-1.382 0-2.5 1.119-2.5 2.5 0 1.383 1.118 2.5 2.5 2.5zm0-4c.827 0 1.5.673 1.5 1.5s-.673 1.5-1.5 1.5-1.5-.673-1.5-1.5.673-1.5 1.5-1.5zM20 15.59c-1.331 0-2.332.406-2.917.969-1.115-.918-2.878-1.559-5.083-1.559-2.266 0-3.995.648-5.092 1.564-.596-.565-1.608-.975-2.908-.975-2.188 0-3.5 1.091-3.5 2.183 0 .545 1.312 1.092 3.5 1.092.604 0 1.146-.051 1.623-.133l-.04.27c0 1 2.405 2 6.417 2 3.762 0 6.417-1 6.417-2l-.021-.255c.463.073.996.118 1.604.118 2.051 0 3.5-.547 3.5-1.092 0-1.092-1.373-2.182-3.5-2.182zm-16 2.273c-1.309 0-2.068-.207-2.417-.354.239-.405 1.003-.92 2.417-.92 1.107 0 1.837.351 2.208.706l-.235.344c-.452.119-1.108.224-1.973.224zm8 1.137c-2.163 0-3.501-.312-4.184-.561.521-.678 1.918-1.439 4.184-1.439 2.169 0 3.59.761 4.148 1.425-.755.27-2.162.575-4.148.575zm8-1.137c-.914 0-1.546-.103-1.973-.213-.072-.127-.155-.252-.248-.375.356-.345 1.071-.685 2.221-.685 1.324 0 2.141.501 2.404.911-.39.163-1.205.362-2.404.362zM4 15c1.381 0 2.5-1.119 2.5-2.5 0-1.379-1.119-2.5-2.5-2.5-1.382 0-2.5 1.121-2.5 2.5 0 1.381 1.118 2.5 2.5 2.5zm0-4c.827 0 1.5.673 1.5 1.5s-.673 1.5-1.5 1.5-1.5-.673-1.5-1.5.673-1.5 1.5-1.5z"}}]})(props);
	};
	module.exports.TiGroup = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 14c1.381 0 2.631-.56 3.536-1.465.904-.904 1.464-2.154 1.464-3.535s-.56-2.631-1.464-3.535c-.905-.905-2.155-1.465-3.536-1.465s-2.631.56-3.536 1.465c-.904.904-1.464 2.154-1.464 3.535s.56 2.631 1.464 3.535c.905.905 2.155 1.465 3.536 1.465zM20 15c.69 0 1.315-.279 1.768-.731.453-.452.732-1.077.732-1.769 0-.69-.279-1.315-.732-1.768-.453-.453-1.078-.732-1.768-.732-.691 0-1.316.279-1.769.732-.452.453-.731 1.078-.731 1.768 0 .691.279 1.316.731 1.769s1.078.731 1.769.731zM20 15.59c-1.331 0-2.332.406-2.917.968-1.115-.917-2.878-1.558-5.083-1.558-2.266 0-3.995.648-5.092 1.564-.596-.565-1.608-.974-2.908-.974-2.188 0-3.5 1.09-3.5 2.182 0 .545 1.312 1.092 3.5 1.092.604 0 1.146-.051 1.623-.133l-.04.27c0 1 2.406 2 6.417 2 3.762 0 6.417-1 6.417-2l-.02-.255c.463.073.995.118 1.603.118 2.051 0 3.5-.547 3.5-1.092 0-1.092-1.373-2.182-3.5-2.182zM4 15c.69 0 1.315-.279 1.768-.732.453-.453.732-1.078.732-1.768 0-.689-.279-1.314-.732-1.768-.453-.452-1.078-.732-1.768-.732-.691 0-1.316.28-1.769.732-.452.454-.731 1.079-.731 1.768 0 .69.279 1.315.731 1.768.453.453 1.078.732 1.769.732z"}}]})(props);
	};
	module.exports.TiHeadphones = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 13c0-4.963-4.037-9-9-9s-9 4.037-9 9v2.6l.023.113c-.013.243-.023.5-.023.787v2c0 1.93 1.57 3.5 3.5 3.5s3.5-1.57 3.5-3.5v-2c0-1.511-.83-2.79-1.982-3.278.095-2.122 1.837-3.823 3.982-3.823s3.887 1.7 3.982 3.822c-1.152.49-1.982 1.768-1.982 3.279v2c0 1.93 1.57 3.5 3.5 3.5s3.5-1.57 3.5-3.5v-2c0-.287-.01-.544-.023-.787l.023-.113v-2.6zm-16 0c0-1.586.538-3.046 1.432-4.221l.89.889c-.742.928-1.218 2.075-1.302 3.332-.02 0-.02 1-.02 1h-1v-1zm3 5.5c0 .827-.673 1.5-1.5 1.5s-1.5-.673-1.5-1.5v-2c0-.666.057-1.176.114-1.5h1.886c.473 0 1 .616 1 1.5v2zm7.77-9.338l-.354.354c-.912-.913-2.125-1.416-3.416-1.416s-2.504.503-3.417 1.416l-.354-.354-1.141-1.141-.627-.626c1.479-1.48 3.447-2.295 5.539-2.295 2.093 0 4.06.815 5.539 2.295l-.627.626-1.142 1.141zm3.23 9.338c0 .827-.673 1.5-1.5 1.5s-1.5-.673-1.5-1.5v-2c0-.884.527-1.5 1-1.5h1.886c.057.324.114.834.114 1.5v2zm0-4.5h-1v-1c-.104-1.257-.58-2.404-1.322-3.332l.891-.889c.893 1.175 1.431 2.634 1.431 4.221v1z"}}]})(props);
	};
	module.exports.TiHeartFullOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2.2 9.4c0 1.3.2 3.3 2 5.1 1.6 1.6 6.9 5.2 7.1 5.4.2.1.4.2.6.2s.4-.1.6-.2c.2-.2 5.5-3.7 7.1-5.4 1.8-1.8 2-3.8 2-5.1 0-3-2.4-5.4-5.4-5.4-1.6 0-3.2.9-4.2 2.3-1-1.4-2.6-2.3-4.4-2.3-2.9 0-5.4 2.4-5.4 5.4z"}}]})(props);
	};
	module.exports.TiHeartHalfOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M2.2 9.4c0 1.3.2 3.3 2 5.1 1.6 1.6 6.9 5.2 7.1 5.4.2.1.4.2.6.2s.4-.1.6-.2c.2-.2 5.5-3.7 7.1-5.4 1.8-1.8 2-3.8 2-5.1 0-3-2.4-5.4-5.4-5.4-1.6 0-3.2.9-4.2 2.3-1-1.4-2.6-2.3-4.4-2.3-2.9 0-5.4 2.4-5.4 5.4zm9.8 1c.6 0 1-.4 1-1 0-1.9 1.5-3.4 3.4-3.4s3.4 1.5 3.4 3.4c0 1.1-.2 2.4-1.5 3.7-1.2 1.2-4.9 3.8-6.3 4.7v-7.4z"}}]})(props);
	};
	module.exports.TiHeartOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 20c-.195 0-.391-.057-.561-.172-.225-.151-5.508-3.73-7.146-5.371-1.831-1.831-2.043-3.777-2.043-5.082 0-2.964 2.411-5.375 5.375-5.375 1.802 0 3.398.891 4.375 2.256.977-1.365 2.573-2.256 4.375-2.256 2.964 0 5.375 2.411 5.375 5.375 0 1.305-.212 3.251-2.043 5.082-1.641 1.641-6.923 5.22-7.146 5.371-.17.115-.366.172-.561.172zm-4.375-14c-1.861 0-3.375 1.514-3.375 3.375 0 1.093.173 2.384 1.457 3.668 1.212 1.212 4.883 3.775 6.293 4.746 1.41-.971 5.081-3.534 6.293-4.746 1.284-1.284 1.457-2.575 1.457-3.668 0-1.861-1.514-3.375-3.375-3.375s-3.375 1.514-3.375 3.375c0 .552-.447 1-1 1s-1-.448-1-1c0-1.861-1.514-3.375-3.375-3.375z"}}]})(props);
	};
	module.exports.TiHeart = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 10.375c0-2.416-1.959-4.375-4.375-4.375s-4.375 1.959-4.375 4.375c0 1.127.159 2.784 1.75 4.375l7 5.25s5.409-3.659 7-5.25 1.75-3.248 1.75-4.375c0-2.416-1.959-4.375-4.375-4.375s-4.375 1.959-4.375 4.375"}}]})(props);
	};
	module.exports.TiHomeOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22.262 10.468c-3.39-2.854-9.546-8.171-9.607-8.225l-.655-.563-.652.563c-.062.053-6.221 5.368-9.66 8.248-.438.394-.688.945-.688 1.509 0 1.104.896 2 2 2h1v6c0 1.104.896 2 2 2h12c1.104 0 2-.896 2-2v-6h1c1.104 0 2-.896 2-2 0-.598-.275-1.161-.738-1.532zm-8.262 9.532h-4v-5h4v5zm4-8l.002 8h-3.002v-6h-6v6h-3v-8h-3.001c2.765-2.312 7.315-6.227 9.001-7.68 1.686 1.453 6.234 5.367 9 7.681l-3-.001z"}}]})(props);
	};
	module.exports.TiHome = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 3s-6.186 5.34-9.643 8.232c-.203.184-.357.452-.357.768 0 .553.447 1 1 1h2v7c0 .553.447 1 1 1h3c.553 0 1-.448 1-1v-4h4v4c0 .552.447 1 1 1h3c.553 0 1-.447 1-1v-7h2c.553 0 1-.447 1-1 0-.316-.154-.584-.383-.768-3.433-2.892-9.617-8.232-9.617-8.232z"}}]})(props);
	};
	module.exports.TiHtml5 = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13.1 3.5l.7 1.1.7-1.1v1.5h1v-3h-1l-.7 1.1-.6-1.1h-1.1v3h1zM18.4 5v-1h-1.4v-2h-1v3zM9.8 5h1v-2h.9v-1h-2.8v1h.9zM6.6 4h.9v1h1v-3h-1v1h-.9v-1h-1v3h1zM5 6l1.2 14.4 5.8 1.6 5.8-1.6 1.2-14.4h-14zm11.3 4.6h-6.8l.2 1.8h6.3999999999999995l-.5 5.5-3.6 1-3.6-1-.3-2.9h1.8l.1 1.5 2 .5 2-.5.2-2.3h-6.2l-.5-5.3h9l-.2 1.7z"}}]})(props);
	};
	module.exports.TiImageOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8.5 7.999c.827 0 1.5.673 1.5 1.5s-.673 1.5-1.5 1.5-1.5-.673-1.5-1.5.673-1.5 1.5-1.5m0-1c-1.381 0-2.5 1.119-2.5 2.5s1.119 2.5 2.5 2.5 2.5-1.119 2.5-2.5-1.119-2.5-2.5-2.5zM16 11.999c.45.051 1.27 1.804 1.779 4.001h-11.392c.434-1.034 1.055-2.001 1.612-2.001.806 0 1.125.185 1.53.42.447.258 1.006.58 1.97.58 1.138 0 1.942-.885 2.653-1.666.627-.687 1.218-1.334 1.848-1.334m0-1c-2 0-3 3-4.5 3s-1.499-1-3.5-1c-2 0-3.001 4-3.001 4h14.001s-1-6-3-6zM22 6c0-1.104-.896-2-2-2h-16c-1.104 0-2 .896-2 2v12c0 1.104.896 2 2 2h16c1.104 0 2-.896 2-2v-12zm-2 12h-16v-12h16.003l-.003 12z"}}]})(props);
	};
	module.exports.TiImage = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"8.5","cy":"8.501","r":"2.5"}},{"tag":"path","attr":{"d":"M16 10c-2 0-3 3-4.5 3s-1.499-1-3.5-1c-2 0-3.001 4-3.001 4h14.001s-1-6-3-6zM20 3h-16c-1.103 0-2 .897-2 2v12c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-12c0-1.103-.897-2-2-2zm0 14h-16v-12h16v12z"}}]})(props);
	};
	module.exports.TiInfinityOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.434 8.596c1.152 0 2.237.449 3.053 1.264.815.816 1.266 1.9 1.266 3.056s-.45 2.239-1.268 3.056c-.813.815-1.898 1.266-3.053 1.266s-2.238-.449-3.055-1.266l-1.376-1.32-1.395 1.338c-.797.799-1.882 1.248-3.036 1.248-1.154 0-2.239-.449-3.054-1.267-.815-.813-1.265-1.899-1.265-3.053s.45-2.237 1.267-3.056c.814-.813 1.898-1.266 3.053-1.266 1.154 0 2.239.449 3.055 1.266l1.375 1.32 1.396-1.34c.798-.797 1.882-1.246 3.037-1.246m0-2c-1.679 0-3.25.645-4.433 1.813-1.163-1.159-2.746-1.813-4.43-1.813-1.688 0-3.274.657-4.467 1.853-1.194 1.192-1.852 2.78-1.852 4.469s.658 3.274 1.852 4.468c1.191 1.192 2.779 1.852 4.468 1.852 1.679 0 3.251-.645 4.431-1.814 1.163 1.16 2.746 1.814 4.431 1.814 1.689 0 3.276-.658 4.469-1.854 1.193-1.188 1.852-2.776 1.852-4.467 0-1.688-.658-3.274-1.852-4.47-1.197-1.195-2.783-1.851-4.469-1.851zM7.571 12.096c.225 0 .426.088.612.271l.57.548-.603.579c-.141.142-.352.223-.578.223-.227 0-.438-.08-.58-.223-.155-.155-.24-.36-.24-.578 0-.221.084-.422.243-.581.156-.155.355-.239.576-.239m0-1c-.486 0-.942.189-1.285.533-.345.346-.535.801-.535 1.287 0 .484.189.941.533 1.285.344.344.815.516 1.287.516.471 0 .942-.172 1.285-.516l1.339-1.285-1.321-1.27c-.36-.361-.817-.55-1.303-.55zM16.434 12.113c.228 0 .438.08.576.219.158.159.242.359.242.582s-.083.422-.243.581c-.144.146-.352.228-.571.228-.23 0-.444-.088-.617-.261l-.571-.548.603-.578c.141-.143.353-.223.581-.223m0-1c-.472 0-.943.172-1.287.516l-1.34 1.285 1.322 1.27c.362.361.838.539 1.311.539.472 0 .937-.177 1.279-.521.346-.344.534-.801.534-1.287s-.188-.941-.532-1.287c-.346-.344-.817-.515-1.287-.515z"}}]})(props);
	};
	module.exports.TiInfinity = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.433 8.596c-1.153 0-2.237.449-3.036 1.246l-1.396 1.34-1.375-1.32c-.815-.817-1.901-1.266-3.055-1.266-1.154 0-2.239.451-3.053 1.266-.817.816-1.267 1.9-1.267 3.055 0 1.152.449 2.238 1.266 3.053.814.816 1.899 1.266 3.054 1.266 1.153 0 2.239-.449 3.036-1.248l1.395-1.338 1.376 1.32c.815.816 1.901 1.266 3.055 1.266s2.238-.449 3.053-1.266c.817-.814 1.267-1.9 1.267-3.055s-.449-2.238-1.266-3.055c-.817-.815-1.901-1.264-3.054-1.264zm-7.576 5.605c-.687.688-1.884.688-2.572 0-.344-.344-.533-.801-.533-1.285 0-.486.189-.941.535-1.287.342-.344.799-.533 1.284-.533s.942.189 1.305.551l1.321 1.27-1.34 1.284zm8.861 0c-.687.689-1.866.705-2.59-.018l-1.321-1.27 1.339-1.285c.688-.688 1.886-.688 2.573-.002.344.346.533.801.533 1.287s-.19.944-.534 1.288z"}}]})(props);
	};
	module.exports.TiInfoLargeOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14.234 16.014l.554-1.104c.808-1.61.897-3.228.253-4.552-.122-.252-.277-.479-.443-.693 1.411-.619 2.402-2.026 2.402-3.664 0-2.206-1.794-4-4-4s-4 1.794-4 4c0 .783.234 1.508.624 2.126-1.696.33-2.806 1.248-2.947 1.375-.716.631-.885 1.68-.405 2.504.324.559.886.909 1.494.98l-.554 1.104c-.808 1.61-.897 3.228-.254 4.552.565 1.164 1.621 1.955 2.972 2.229.413.084.836.127 1.254.127 2.368 0 3.965-1.347 4.14-1.501.716-.63.887-1.678.407-2.503-.325-.556-.887-.909-1.497-.98zm-1.234-12.013c1.104 0 2 .896 2 2s-.896 2-2 2c-1.105 0-2-.896-2-2s.895-2 2-2zm-1.816 14.999c-.271 0-.559-.025-.854-.087-1.642-.334-2.328-1.933-1.328-3.927l1-1.995c.5-.996.47-1.63-.108-2.035-.181-.125-.431-.169-.689-.169-.577 0-1.201.214-1.201.214s1.133-1.001 2.812-1.001c.271 0 .56.025.856.087 1.64.334 2.328 1.933 1.328 3.927l-1 1.993c-.5.998-.472 1.632.106 2.035.181.126.433.169.692.169.577 0 1.2-.212 1.2-.212s-1.133 1.001-2.814 1.001z"}}]})(props);
	};
	module.exports.TiInfoLarge = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13.839 17.525c-.006.002-.559.186-1.039.186-.265 0-.372-.055-.406-.079-.168-.117-.48-.336.054-1.4l1-1.994c.593-1.184.681-2.329.245-3.225-.356-.733-1.039-1.236-1.92-1.416-.317-.065-.639-.097-.958-.097-1.849 0-3.094 1.08-3.146 1.126-.179.158-.221.42-.102.626.12.206.367.3.595.222.005-.002.559-.187 1.039-.187.263 0 .369.055.402.078.169.118.482.34-.051 1.402l-1 1.995c-.594 1.185-.681 2.33-.245 3.225.356.733 1.038 1.236 1.921 1.416.314.063.636.097.954.097 1.85 0 3.096-1.08 3.148-1.126.179-.157.221-.42.102-.626-.12-.205-.369-.297-.593-.223z"}},{"tag":"circle","attr":{"cx":"13","cy":"6.001","r":"2.5"}}]})(props);
	};
	module.exports.TiInfoOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12,5.51c0.56,0,1.12,0.35,1.54,1.06l5.91,9.85C20.31,17.84,19.65,19,18,19H6c-1.65,0-2.31-1.16-1.46-2.57l5.91-9.85\r\n\tC10.88,5.86,11.44,5.51,12,5.51 M12,3.51c-1.3,0-2.48,0.74-3.26,2.03L2.83,15.4c-0.44,0.74-0.66,1.5-0.66,2.23\r\n\tc0,0.56,0.14,1.11,0.42,1.6C3.23,20.35,4.47,21,6,21h12c1.53,0,2.77-0.65,3.41-1.77c0.29-0.51,0.43-1.07,0.42-1.65\r\n\tc-0.01-0.71-0.23-1.46-0.66-2.18l-5.91-9.85C14.48,4.25,13.3,3.51,12,3.51z M13.5,16.75c0,0-0.71,0.36-1.07,0.18\r\n\tc-0.36-0.18-0.43-0.54-0.23-1.15l0.41-1.22c0.4-1.22-0.12-2.08-1.08-2.13c-1.26-0.07-2.02,0.83-2.02,0.83s0.71-0.36,1.07-0.18\r\n\tc0.36,0.18,0.43,0.54,0.23,1.15l-0.41,1.22c-0.4,1.22,0.12,2.07,1.08,2.13C12.74,17.64,13.5,16.75,13.5,16.75z"}},{"tag":"circle","attr":{"cx":"12","cy":"10","r":"1.3"}}]})(props);
	};
	module.exports.TiInfo = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.17,15.4l-5.91-9.85C14.48,4.25,13.3,3.51,12,3.51S9.52,4.25,8.74,5.54L2.83,15.4c-0.44,0.73-0.66,1.49-0.66,2.21\r\n\tc0,0.57,0.14,1.13,0.42,1.62C3.23,20.35,4.47,21,6,21h12c1.53,0,2.77-0.65,3.41-1.77c0.28-0.49,0.42-1.02,0.42-1.58\r\n\tC21.84,16.91,21.62,16.14,21.17,15.4z M12,8.45c0.85,0,1.55,0.7,1.55,1.55c0,0.85-0.69,1.55-1.55,1.55c-0.85,0-1.55-0.7-1.55-1.55\r\n\tC10.45,9.14,11.14,8.45,12,8.45z M13.69,16.91c-0.03,0.04-0.8,0.92-2.07,0.92l-0.15,0c-0.51-0.03-0.93-0.25-1.18-0.63\r\n\tc-0.31-0.47-0.36-1.11-0.12-1.82l0.41-1.22c0.23-0.68,0.01-0.79-0.11-0.85l-0.14-0.02c-0.25,0-0.6,0.15-0.71,0.21\r\n\tc-0.1,0.05-0.23,0.03-0.31-0.07c-0.07-0.1-0.07-0.23,0.01-0.32c0.03-0.04,0.87-0.99,2.22-0.91c0.51,0.03,0.93,0.25,1.18,0.63\r\n\tc0.32,0.47,0.36,1.11,0.12,1.83l-0.41,1.22c-0.23,0.68-0.01,0.79,0.11,0.85l0.14,0.02c0.25,0,0.6-0.15,0.71-0.2\r\n\tc0.11-0.06,0.23-0.03,0.31,0.07C13.77,16.69,13.77,16.82,13.69,16.91z"}}]})(props);
	};
	module.exports.TiInputCheckedOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.885 6.177c-.221-.771-.728-1.409-1.427-1.798-.445-.248-.949-.379-1.457-.379-.862 0-1.661.381-2.219 1h-6.782c-1.654 0-3 1.346-3 3v8c0 1.654 1.346 3 3 3h8c1.654 0 3-1.346 3-3v-6.454l.622-1.088c.39-.7.482-1.51.263-2.281zm-3.758.338c.104-.189.27-.328.459-.416.301-.113.623-.127.9.027.232.13.402.343.476.6.033.117.039.236.03.353-.012.115-.043.227-.092.332l-.021.065-4.006 7.011c-.151.273-.427.461-.742.506l-.132.009c-.267 0-.518-.104-.707-.293l-3-3c-.39-.39-.39-1.024 0-1.414.189-.189.44-.293.707-.293s.518.104.707.293l1.125 1.125.92.92.652-1.125 2.724-4.7zm-.127 10.485h-8c-.552 0-1-.449-1-1v-8c0-.551.448-1 1-1h6.689l-2.15 3.712-1.125-1.125c-.391-.391-.902-.586-1.414-.586s-1.023.195-1.414.586c-.781.781-.781 2.047 0 2.828l3 3c.378.378.888.586 1.414.586l.277-.02c.621-.087 1.166-.461 1.471-1.01l2.252-3.94v4.969c0 .551-.448 1-1 1z"}}]})(props);
	};
	module.exports.TiInputChecked = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 19h-8c-1.654 0-3-1.346-3-3v-8c0-1.654 1.346-3 3-3h5c.553 0 1 .448 1 1s-.447 1-1 1h-5c-.552 0-1 .449-1 1v8c0 .551.448 1 1 1h8c.552 0 1-.449 1-1v-3c0-.552.447-1 1-1s1 .448 1 1v3c0 1.654-1.346 3-3 3zM13.166 14.833c-.35 0-.689-.139-.941-.391l-2.668-2.667c-.52-.521-.52-1.365 0-1.885.521-.521 1.365-.521 1.887 0l1.416 1.417 3.475-5.455c.357-.644 1.17-.877 1.814-.519.643.358.875 1.17.518 1.813l-4.334 7c-.203.366-.566.615-.98.673l-.187.014z"}}]})(props);
	};
	module.exports.TiKeyOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 21h-6v-4.414l3.783-3.783c-.187-.587-.283-1.192-.283-1.803 0-3.309 2.691-6 6-6s6 2.691 6 6-2.691 6-6 6h-1.5v2h-2v2zm-4-2h2v-2h2v-2h3.5c2.206 0 4-1.794 4-4s-1.794-4-4-4-4 1.794-4 4c0 .559.121 1.109.359 1.639l.285.631-4.144 4.144v1.586zM13.5 9.998c.551 0 1 .449 1 1.002 0 .552-.449 1-1 1s-1-.448-1-1c0-.553.449-1.002 1-1.002m0-1c-1.104 0-2 .896-2 2.002 0 1.104.896 2 2 2 1.105 0 2-.896 2-2 0-1.105-.895-2.002-2-2.002z"}}]})(props);
	};
	module.exports.TiKey = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8.5 11c0 .732.166 1.424.449 2.051l-3.949 3.949v1.5s.896 1.5 2 1.5h2v-2h2v-2h2.5c2.762 0 5-2.238 5-5s-2.238-5-5-5-5 2.238-5 5zm5 2c-1.104 0-2-.896-2-2 0-1.105.896-2.002 2-2.002 1.105 0 2 .896 2 2.002 0 1.104-.895 2-2 2z"}}]})(props);
	};
	module.exports.TiKeyboard = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8 13h7v2h-7zM5 13h2v2h-2zM5 9h2v1h-2zM8 12v-1h-3v1h2zM8 9h1v1h-1zM9 11h1v1h-1zM10 9h1v1h-1zM11 11h1v1h-1zM12 9h1v1h-1zM13 11h1v1h-1zM14 9h1v1h-1zM15 11h1v1h-1zM16 9h1v1h-1zM17 12h2v-3h-1v2h-1zM18 13h-1v1h-1v1h3v-1h-1zM20 6h-16c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2v-8c0-1.1-.9-2-2-2zm0 10h-16v-8h16v8z"}}]})(props);
	};
	module.exports.TiLeaf = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 11c0-4.9-3.499-9.1-8.32-9.983l-.18-.034-.18.033c-4.821.884-8.32 5.084-8.32 9.984 0 4.617 3.108 8.61 7.5 9.795v1.205c0 .553.448 1 1 1s1-.447 1-1v-1.205c4.392-1.185 7.5-5.178 7.5-9.795zm-7.5 7.7v-2.993l4.354-4.354c.195-.195.195-.512 0-.707s-.512-.195-.707 0l-3.647 3.647v-3.586l2.354-2.354c.195-.195.195-.512 0-.707s-.512-.195-.707 0l-1.647 1.647v-3.293c0-.553-.448-1-1-1s-1 .447-1 1v3.293l-1.646-1.647c-.195-.195-.512-.195-.707 0s-.195.512 0 .707l2.354 2.354v3.586l-3.646-3.646c-.195-.195-.512-.195-.707 0s-.195.512 0 .707l4.354 4.354v2.992c-3.249-1.116-5.502-4.179-5.502-7.7 0-3.874 2.723-7.201 6.5-7.981 3.777.78 6.5 4.107 6.5 7.981 0 3.521-2.253 6.584-5.5 7.7z"}}]})(props);
	};
	module.exports.TiLightbulb = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M12.5 5.5c-.276 0-.5.224-.5.5s.224.5.5.5c1.083 0 1.964.881 1.964 1.964 0 .276.224.5.5.5s.5-.224.5-.5c0-1.634-1.33-2.964-2.964-2.964zM12.5 1c-4.136 0-7.5 3.364-7.5 7.5 0 1.486.44 2.922 1.274 4.165l.08.135c1.825 2.606 2.146 3.43 2.146 4.2v3c0 .552.448 1 1 1h2c0 .26.11.52.29.71.19.18.45.29.71.29.26 0 .52-.11.71-.29.18-.19.29-.45.29-.71h2c.552 0 1-.448 1-1v-3c0-.782.319-1.61 2.132-4.199.895-1.275 1.368-2.762 1.368-4.301 0-4.136-3.364-7.5-7.5-7.5zm2 18h-4v-1h4v1zm2.495-7.347c-1.466 2.093-2.143 3.289-2.385 4.347h-1.11v-2c0-.552-.448-1-1-1s-1 .448-1 1v2h-1.113c-.24-1.03-.898-2.2-2.306-4.22l-.077-.129c-.657-.934-1.004-2.024-1.004-3.151 0-3.033 2.467-5.5 5.5-5.5s5.5 2.467 5.5 5.5c0 1.126-.347 2.216-1.005 3.153z"}}]}]})(props);
	};
	module.exports.TiLinkOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.5 5.999c.282 0 .562.106.777.321.431.431.431 1.127 0 1.557l-1.72 1.723.307.308c.585.584.906 1.362.906 2.192s-.321 1.607-.906 2.191l-4.172 4.172c-.584.584-1.361.906-2.191.906s-1.607-.322-2.191-.906l-.31-.309-1.723 1.723c-.215.215-.495.322-.777.322s-.562-.107-.777-.322c-.431-.43-.431-1.126 0-1.557l1.72-1.72-.308-.309c-.583-.584-.905-1.361-.905-2.191s.321-1.608.905-2.192l4.173-4.173c.584-.584 1.387-.875 2.191-.875s1.607.291 2.191.875l.31.308 1.723-1.723c.215-.215.495-.321.777-.321m0-2c-.828 0-1.605.321-2.191.908l-.492.491c-.707-.351-1.504-.539-2.316-.539-1.363 0-2.677.533-3.605 1.461l-4.172 4.173c-.964.962-1.494 2.241-1.494 3.607 0 .822.192 1.616.558 2.327l-.479.48c-.586.585-.909 1.364-.909 2.193 0 .827.322 1.605.908 2.191.584.586 1.363.908 2.191.908s1.605-.322 2.191-.908l.48-.48c.711.365 1.504.559 2.328.559 1.363 0 2.645-.53 3.605-1.492l4.172-4.172c.963-.962 1.492-2.242 1.492-3.605 0-.824-.192-1.617-.558-2.328l.479-.48c.589-.587.912-1.366.912-2.193 0-.828-.322-1.606-.908-2.192-.587-.588-1.364-.909-2.192-.909zM11.4 11.168c.017.535.233 1.036.613 1.416.381.38.881.598 1.416.614l-1.832 1.831c-.017-.534-.234-1.035-.613-1.415-.381-.38-.881-.597-1.416-.614l1.832-1.832m1.1-2.139c-.242 0-.468.094-.637.262l-4.172 4.172c-.168.168-.26.395-.26.637 0 .24.092.467.26.635l.309.308.723-.723c.215-.215.495-.321.777-.321s.562.106.777.321c.431.431.431 1.127 0 1.557l-.72.723.308.308c.168.168.401.253.636.253s.468-.084.637-.253l4.172-4.173c.168-.168.26-.395.26-.635 0-.242-.092-.469-.26-.637l-.31-.309-.723.723c-.215.215-.495.322-.777.322s-.562-.107-.777-.322c-.431-.43-.431-1.126 0-1.557l.72-.72-.307-.309c-.169-.168-.395-.262-.636-.262z"}}]})(props);
	};
	module.exports.TiLink = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.277 6.321c-.43-.43-1.126-.43-1.556 0l-1.721 1.722-.308-.308c-1.168-1.168-3.216-1.168-4.384 0l-4.172 4.172c-.584.584-.906 1.363-.906 2.192s.322 1.608.906 2.192l.308.308-1.722 1.722c-.43.43-.43 1.126 0 1.556.215.215.496.322.778.322s.563-.107.778-.322l1.722-1.722.308.308c.584.584 1.362.906 2.192.906s1.608-.322 2.192-.906l4.172-4.172c.584-.584.906-1.362.906-2.192s-.322-1.608-.906-2.192l-.308-.308 1.722-1.722c.429-.43.429-1.126-.001-1.556zm-2.969 6.414l-4.172 4.172c-.168.168-.402.253-.636.253s-.468-.084-.636-.253l-.308-.308.722-.722c.43-.43.43-1.126 0-1.556-.215-.215-.496-.322-.778-.322s-.563.107-.778.322l-.722.722-.308-.308c-.168-.168-.261-.395-.261-.636s.093-.468.261-.636l4.172-4.172c.168-.168.394-.261.636-.261s.468.093.636.261l.308.308-.722.722c-.43.43-.43 1.126 0 1.556.215.215.496.322.778.322s.563-.107.778-.322l.722-.722.308.308c.168.168.261.395.261.636s-.093.468-.261.636z"}}]})(props);
	};
	module.exports.TiLocationArrowOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.087 20.914c-.353 0-1.219-.146-1.668-1.496l-1.209-3.627-3.628-1.209c-1.244-.415-1.469-1.172-1.493-1.587s.114-1.193 1.302-1.747l11.375-5.309c1.031-.479 1.922-.309 2.348.362.224.351.396.97-.053 1.933l-5.309 11.375c-.529 1.135-1.272 1.305-1.665 1.305zm-5.39-8.068l4.094 1.363 1.365 4.093 4.775-10.233-10.234 4.777z"}}]})(props);
	};
	module.exports.TiLocationArrow = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10.368 19.102c.349 1.049 1.011 1.086 1.478.086l5.309-11.375c.467-1.002.034-1.434-.967-.967l-11.376 5.308c-1.001.467-.963 1.129.085 1.479l4.103 1.367 1.368 4.102z"}}]})(props);
	};
	module.exports.TiLocationOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 5c1.609 0 3.12.614 4.254 1.73 1.126 1.107 1.746 2.579 1.746 4.14s-.62 3.03-1.745 4.139l-4.255 4.184-4.254-4.186c-1.125-1.107-1.745-2.576-1.745-4.139s.62-3.032 1.745-4.141c1.135-1.113 2.647-1.727 4.254-1.727m0-2c-2.047 0-4.096.768-5.657 2.305-3.124 3.074-3.124 8.057 0 11.131l5.657 5.563 5.657-5.565c3.124-3.072 3.124-8.056 0-11.129-1.561-1.537-3.609-2.305-5.657-2.305zM12 8.499c.668 0 1.296.26 1.768.731.976.976.976 2.562 0 3.537-.473.472-1.1.731-1.768.731s-1.295-.26-1.768-.731c-.976-.976-.976-2.562 0-3.537.473-.471 1.101-.731 1.768-.731m0-1c-.896 0-1.792.342-2.475 1.024-1.367 1.367-1.367 3.584 0 4.951.684.684 1.578 1.024 2.475 1.024s1.792-.342 2.475-1.024c1.366-1.367 1.366-3.584 0-4.951-.683-.683-1.579-1.024-2.475-1.024z"}}]})(props);
	};
	module.exports.TiLocation = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.657 5.304c-3.124-3.073-8.189-3.073-11.313 0-3.124 3.074-3.124 8.057 0 11.13l5.656 5.565 5.657-5.565c3.124-3.073 3.124-8.056 0-11.13zm-5.657 8.195c-.668 0-1.295-.26-1.768-.732-.975-.975-.975-2.561 0-3.536.472-.472 1.1-.732 1.768-.732s1.296.26 1.768.732c.975.975.975 2.562 0 3.536-.472.472-1.1.732-1.768.732z"}}]})(props);
	};
	module.exports.TiLockClosedOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"12","cy":"17","r":"1.3"}},{"tag":"path","attr":{"d":"M17 10h-1v-2c0-2.206-1.794-4-4-4s-4 1.794-4 4v2h-1c-1.104 0-2 .896-2 2v7c0 1.104.896 2 2 2h10c1.104 0 2-.896 2-2v-7c0-1.104-.896-2-2-2zm-7-2c0-1.104.896-2 2-2s2 .896 2 2v3h-4v-3zm7 11h-10v-7h10.003l-.003 7z"}}]})(props);
	};
	module.exports.TiLockClosed = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 10h-1v-2c0-2.205-1.794-4-4-4s-4 1.795-4 4v2h-1c-1.103 0-2 .896-2 2v7c0 1.104.897 2 2 2h10c1.103 0 2-.896 2-2v-7c0-1.104-.897-2-2-2zm-5 8.299c-.719 0-1.3-.58-1.3-1.299s.581-1.301 1.3-1.301 1.3.582 1.3 1.301-.581 1.299-1.3 1.299zm2-7.299h-4v-3c0-1.104.897-2 2-2s2 .896 2 2v3z"}}]})(props);
	};
	module.exports.TiLockOpenOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"12","cy":"17","r":"1.3"}},{"tag":"path","attr":{"d":"M18 4c-2.206 0-4 1.794-4 4v3h-4v-1h-3c-1.104 0-2 .896-2 2v7c0 1.104.896 2 2 2h10c1.104 0 2-.896 2-2v-7c0-1.104-.896-2-2-2h-1v-2c0-1.104.896-2 2-2s2 .896 2 2v3c0 .552.448 1 1 1s1-.448 1-1v-3c0-2.206-1.794-4-4-4zm-1 15h-10v-7h10.003l-.003 7z"}}]})(props);
	};
	module.exports.TiLockOpen = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 4c-2.206 0-4 1.795-4 4v3h-4v-1h-3c-1.103 0-2 .896-2 2v7c0 1.104.897 2 2 2h10c1.103 0 2-.896 2-2v-7c0-1.104-.897-2-2-2h-1v-2c0-1.104.897-2 2-2s2 .896 2 2v3c0 .553.448 1 1 1s1-.447 1-1v-3c0-2.205-1.794-4-4-4zm-6 14.299c-.719 0-1.3-.58-1.3-1.299s.581-1.301 1.3-1.301 1.3.582 1.3 1.301-.581 1.299-1.3 1.299z"}}]})(props);
	};
	module.exports.TiMail = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 7h-14c-1.104 0-2 .896-2 2v9c0 1.104.896 2 2 2h14c1.104 0 2-.896 2-2v-9c0-1.104-.896-2-2-2zm-9.684 7.316l1.602 1.4c.305.266.691.398 1.082.398s.777-.133 1.082-.398l1.602-1.4-.037.037 3.646 3.646h-12.586l3.646-3.646-.037-.037zm-4.316 2.977v-6.753l3.602 3.151-3.602 3.602zm10.398-3.602l3.602-3.151v6.75l-3.602-3.599zm3.602-4.691v.21l-6.576 5.754c-.227.198-.621.198-.848 0l-6.576-5.754v-.21h14z"}}]})(props);
	};
	module.exports.TiMap = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.383 3.076c-.373-.155-.804-.069-1.09.217l-3.867 3.867-4.301-3.441c-.396-.316-.973-.287-1.332.074l-4.5 4.5c-.188.187-.293.441-.293.707v10c0 .404.243.77.617.924.124.053.254.076.383.076.26 0 .516-.102.707-.293l3.867-3.867 4.301 3.441c.396.316.971.285 1.332-.074l4.5-4.5c.188-.187.293-.441.293-.707v-10c0-.404-.243-.77-.617-.924zm-13.383 13.51v-7.172l3-3v7.24c-.07.043-3 2.932-3 2.932zm4.125-2.867l-.125-.068v-7.469s3.959 3.143 4 3.166v7.473l-3.875-3.102zm7.875-.133l-3 3v-7.236c.07-.043 3-2.936 3-2.936v7.172z"}}]})(props);
	};
	module.exports.TiMediaEjectOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M16 21h-8c-1.654 0-3-1.346-3-3s1.346-3 3-3h8c1.654 0 3 1.346 3 3s-1.346 3-3 3zm-8-4c-.551 0-1 .448-1 1s.449 1 1 1h8c.551 0 1-.448 1-1s-.449-1-1-1h-8zM12 6.866l4.964 5.096.036.038-10 .004.08-.087 4.92-5.051m0-2.866s-3.859 3.963-6.433 6.604c-.349.363-.567.853-.567 1.396 0 1.104.896 2 2 2h10c1.104 0 2-.896 2-2 0-.543-.218-1.033-.568-1.393-2.573-2.644-6.432-6.607-6.432-6.607z"}}]}]})(props);
	};
	module.exports.TiMediaEject = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 16h-10c-1.104 0-2 .895-2 2 0 1.104.896 2 2 2h10c1.104 0 2-.896 2-2 0-1.105-.896-2-2-2zM18.433 10.604c-2.574-2.641-6.433-6.604-6.433-6.604s-3.859 3.963-6.433 6.604c-.349.363-.567.853-.567 1.396 0 1.104.896 2 2 2h10c1.104 0 2-.896 2-2 0-.543-.218-1.033-.567-1.396z"}}]})(props);
	};
	module.exports.TiMediaFastForwardOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M14 8.676l4.133 4.025-4.133 4.026v-8.051m-.2-2.276c-.994 0-1.8.807-1.8 1.801v9c0 .994.806 1.799 1.8 1.799.488 0 .93-.195 1.253-.512 2.381-2.314 5.947-5.787 5.947-5.787s-3.566-3.475-5.944-5.789c-.327-.314-.768-.512-1.256-.512zM5 8.676l4.133 4.025-4.133 4.026v-8.051m-.2-2.276c-.994 0-1.8.807-1.8 1.801v9c0 .994.806 1.799 1.8 1.799.488 0 .93-.195 1.253-.512 2.381-2.314 5.947-5.787 5.947-5.787s-3.566-3.474-5.944-5.789c-.327-.314-.768-.512-1.256-.512z"}}]}]})(props);
	};
	module.exports.TiMediaFastForward = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.053 6.912c-.324-.314-.765-.512-1.253-.512-.994 0-1.8.807-1.8 1.801v9c0 .994.806 1.799 1.8 1.799.488 0 .93-.195 1.253-.512 2.381-2.314 5.947-5.787 5.947-5.787s-3.566-3.474-5.947-5.789zM6.053 6.912c-.324-.314-.765-.512-1.253-.512-.994 0-1.8.807-1.8 1.801v9c0 .994.806 1.799 1.8 1.799.488 0 .93-.195 1.253-.512 2.381-2.314 5.947-5.787 5.947-5.787s-3.566-3.474-5.947-5.789z"}}]})(props);
	};
	module.exports.TiMediaPauseOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8 20c-1.654 0-3-1.346-3-3v-9c0-1.654 1.346-3 3-3s3 1.346 3 3v9c0 1.654-1.346 3-3 3zm0-13c-.552 0-1 .449-1 1v9c0 .551.448 1 1 1s1-.449 1-1v-9c0-.551-.448-1-1-1zM15 20c-1.654 0-3-1.346-3-3v-9c0-1.654 1.346-3 3-3s3 1.346 3 3v9c0 1.654-1.346 3-3 3zm0-13c-.552 0-1 .449-1 1v9c0 .551.448 1 1 1s1-.449 1-1v-9c0-.551-.448-1-1-1z"}}]})(props);
	};
	module.exports.TiMediaPause = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8 6c-1.104 0-2 .896-2 2v8c0 1.104.896 2 2 2s2-.896 2-2v-8c0-1.104-.896-2-2-2zM15 6c-1.104 0-2 .896-2 2v8c0 1.104.896 2 2 2s2-.896 2-2v-8c0-1.104-.896-2-2-2z"}}]})(props);
	};
	module.exports.TiMediaPlayOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8.998 7.002l.085.078 5.051 4.92-5.096 4.964-.038.036-.002-9.998m.002-2.002c-1.104 0-2 .896-2 2v10c0 1.104.896 2 2 2 .543 0 1.033-.218 1.393-.568 2.644-2.573 6.607-6.432 6.607-6.432s-3.963-3.859-6.604-6.433c-.363-.349-.853-.567-1.396-.567z"}}]})(props);
	};
	module.exports.TiMediaPlayReverseOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 7v10l-5.1-5 5.1-5m-1.4-1.4c-2.6 2.5-6.6 6.4-6.6 6.4s4 3.9 6.6 6.4c.4.4.9.6 1.4.6 1.1 0 2-.9 2-2v-10c0-1.1-.9-2-2-2-.5 0-1 .2-1.4.6z"}}]})(props);
	};
	module.exports.TiMediaPlayReverse = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 19c1.1 0 2-.9 2-2v-10c0-1.1-.9-2-2-2-.5 0-1 .2-1.4.6-2.6 2.5-6.6 6.4-6.6 6.4s4 3.9 6.6 6.4c.4.4.9.6 1.4.6z"}}]})(props);
	};
	module.exports.TiMediaPlay = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10.396 18.433c2.641-2.574 6.604-6.433 6.604-6.433s-3.963-3.859-6.604-6.433c-.363-.349-.853-.567-1.396-.567-1.104 0-2 .896-2 2v10c0 1.104.896 2 2 2 .543 0 1.033-.218 1.396-.567z"}}]})(props);
	};
	module.exports.TiMediaRecordOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 8c2.205 0 4 1.794 4 4s-1.795 4-4 4-4-1.794-4-4 1.795-4 4-4m0-2c-3.314 0-6 2.686-6 6 0 3.312 2.686 6 6 6 3.312 0 6-2.688 6-6 0-3.314-2.688-6-6-6z"}}]})(props);
	};
	module.exports.TiMediaRecord = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 12c0-1.657-.672-3.157-1.757-4.243-1.086-1.085-2.586-1.757-4.243-1.757-1.656 0-3.156.672-4.242 1.757-1.086 1.086-1.758 2.586-1.758 4.243 0 1.656.672 3.156 1.758 4.242s2.586 1.758 4.242 1.758c1.657 0 3.157-.672 4.243-1.758 1.085-1.086 1.757-2.586 1.757-4.242z"}}]})(props);
	};
	module.exports.TiMediaRewindOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M10 8.676v8.05l-4.133-4.025 4.133-4.025m.2-2.276c-.488 0-.931.197-1.253.512-2.381 2.315-5.947 5.789-5.947 5.789l5.944 5.789c.326.315.768.51 1.256.51.994 0 1.8-.805 1.8-1.799v-9c0-.994-.806-1.801-1.8-1.801zM19 8.676v8.051l-4.133-4.025 4.133-4.026m.2-2.276c-.488 0-.931.197-1.253.512-2.381 2.315-5.947 5.789-5.947 5.789l5.944 5.789c.326.315.768.51 1.256.51.994 0 1.8-.805 1.8-1.799v-9c0-.994-.806-1.801-1.8-1.801z"}}]}]})(props);
	};
	module.exports.TiMediaRewind = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10.2 6.4c-.488 0-.931.197-1.253.512-2.381 2.315-5.947 5.789-5.947 5.789l5.944 5.789c.326.315.768.51 1.256.51.994 0 1.8-.805 1.8-1.799v-9c0-.994-.806-1.801-1.8-1.801zM19.2 6.4c-.488 0-.931.197-1.253.512-2.381 2.315-5.947 5.789-5.947 5.789l5.944 5.789c.326.315.768.51 1.256.51.994 0 1.8-.805 1.8-1.799v-9c0-.994-.806-1.801-1.8-1.801z"}}]})(props);
	};
	module.exports.TiMediaStopOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 8v8h-8v-8h8m0-2h-8c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2v-8c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.TiMediaStop = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 6h-8c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2v-8c0-1.1-.9-2-2-2z"}}]})(props);
	};
	module.exports.TiMessageTyping = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 6h-13c-1.65 0-3 1.35-3 3v7c0 1.65 1.35 3 3 3h1v3l3-3h9c1.65 0 3-1.35 3-3v-7c0-1.65-1.35-3-3-3zm1 10c0 .542-.458 1-1 1h-13c-.542 0-1-.458-1-1v-7c0-.542.458-1 1-1h13c.542 0 1 .458 1 1v7zM7 14.5c-1.104 0-2-.896-2-2s.896-2 2-2 2 .896 2 2-.896 2-2 2zm0-3c-.552 0-1 .448-1 1s.448 1 1 1 1-.448 1-1-.448-1-1-1zM11.5 14.5c-1.104 0-2-.896-2-2s.896-2 2-2 2 .896 2 2-.896 2-2 2zm0-3c-.552 0-1 .448-1 1s.448 1 1 1 1-.448 1-1-.448-1-1-1zM16 14.5c-1.104 0-2-.896-2-2s.896-2 2-2 2 .896 2 2-.896 2-2 2zm0-3c-.552 0-1 .448-1 1s.448 1 1 1 1-.448 1-1-.448-1-1-1z"}}]})(props);
	};
	module.exports.TiMessage = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 7c.542 0 1 .458 1 1v7c0 .542-.458 1-1 1h-8.829l-.171.171v-.171h-3c-.542 0-1-.458-1-1v-7c0-.542.458-1 1-1h12m0-2h-12c-1.65 0-3 1.35-3 3v7c0 1.65 1.35 3 3 3h1v3l3-3h8c1.65 0 3-1.35 3-3v-7c0-1.65-1.35-3-3-3z"}}]})(props);
	};
	module.exports.TiMessages = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 7h-3c0-1.65-1.35-3-3-3h-12c-1.65 0-3 1.35-3 3v7c0 1.65 1.35 3 3 3v3l3-3c0 1.65 1.35 3 3 3h8l3 3v-3h1c1.65 0 3-1.35 3-3v-7c0-1.65-1.35-3-3-3zm-18 8c-.542 0-1-.458-1-1v-7c0-.542.458-1 1-1h12c.542 0 1 .458 1 1v1h-6.5c-1.379 0-2.5 1.121-2.5 2.5v4.5h-4zm19 2c0 .542-.458 1-1 1h-12c-.542 0-1-.458-1-1v-6.5c0-.827.673-1.5 1.5-1.5h11.5c.542 0 1 .458 1 1v7z"}}]})(props);
	};
	module.exports.TiMicrophoneOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M12 16c-2.206 0-4-1.795-4-4v-6c0-2.205 1.794-4 4-4s4 1.795 4 4v6c0 2.205-1.794 4-4 4zm0-12c-1.103 0-2 .896-2 2v6c0 1.104.897 2 2 2s2-.896 2-2v-6c0-1.104-.897-2-2-2zM19 12v-2c0-.553-.447-1-1-1s-1 .447-1 1v2c0 2.757-2.243 5-5 5s-5-2.243-5-5v-2c0-.553-.447-1-1-1s-1 .447-1 1v2c0 3.52 2.613 6.432 6 6.92v1.08h-3c-.553 0-1 .447-1 1s.447 1 1 1h8c.553 0 1-.447 1-1s-.447-1-1-1h-3v-1.08c3.387-.488 6-3.4 6-6.92z"}}]}]})(props);
	};
	module.exports.TiMicrophone = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 16c2.206 0 4-1.795 4-4v-6c0-2.206-1.794-4-4-4s-4 1.794-4 4v6c0 2.205 1.794 4 4 4zM19 12v-2c0-.552-.447-1-1-1s-1 .448-1 1v2c0 2.757-2.243 5-5 5s-5-2.243-5-5v-2c0-.552-.447-1-1-1s-1 .448-1 1v2c0 3.52 2.613 6.432 6 6.92v1.08h-3c-.553 0-1 .447-1 1s.447 1 1 1h8c.553 0 1-.447 1-1s-.447-1-1-1h-3v-1.08c3.387-.488 6-3.4 6-6.92z"}}]})(props);
	};
	module.exports.TiMinusOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 16h-12c-1.654 0-3-1.346-3-3s1.346-3 3-3h12c1.654 0 3 1.346 3 3s-1.346 3-3 3zm-12-4c-.551 0-1 .449-1 1s.449 1 1 1h12c.551 0 1-.449 1-1s-.449-1-1-1h-12z"}}]})(props);
	};
	module.exports.TiMinus = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 11h-12c-1.104 0-2 .896-2 2s.896 2 2 2h12c1.104 0 2-.896 2-2s-.896-2-2-2z"}}]})(props);
	};
	module.exports.TiMortarBoard = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.5 7.9s-5.8-2.9-6.9-3.5-1.7-.7-3 0c-1.3.6-6.7 3.3-6.7 3.3-.8.4-1.5 1.2-1.5 2s.2 1.2.2 1.2-.1.3-.3 1.5c-.3 1.2-.3 2.7-.3 3.3 0 1.5 1.3 2.6 2.2 2.7.9.1 1.6-.1 1.6-.1 1.4 1.3 3.7 2.1 6.4 2.1 4.4 0 7.8-2.2 7.8-5 0-1.1-.4-2.7-.4-2.7l1.1-.6c.9-.5 1.3-1.4 1.3-2.3-.1-.8-.6-1.5-1.5-1.9zm-8.2 10.4c-3.2 0-5.8-1.3-5.8-3l.5-2.8 4.2 2.1c.6.3 1.5.3 2.2 0l4.3-2.1.4 2.8c0 1.6-2.5 3-5.8 3zm7.3-8.1l-6.6 3.4c-.4.2-1 .2-1.4 0l-5.7-2.9c-.2.5-.3 1.2-.3 2 0 1.4.2 2.4.2 2.9s-.3.8-.7.8h-.1c-.4 0-.8-.3-.8-.8s0-1.6.3-3.1c.2-.9.4-1.7.6-2.2l-.2-.1c-.4-.2-.4-.5 0-.7l6.7-3.4c.4-.2.9-.2 1.3 0s6.7 3.4 6.7 3.4c.4.2.4.5 0 .7z"}}]})(props);
	};
	module.exports.TiNews = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 4h-18c-1.104 0-2 .896-2 2v12c0 1.104.896 2 2 2h18c1.104 0 2-.896 2-2v-12c0-1.104-.896-2-2-2zm-18 2h8v12h-8v-12zm18 12h-9v-12h9.003l-.003 12zM20 13.5c0-.275-.225-.5-.5-.5h-1c-.275 0-.5.225-.5.5v3c0 .275.225.5.5.5h1c.275 0 .5-.225.5-.5v-3zM17 7.5c0-.275-.225-.5-.5-.5h-3c-.275 0-.5.225-.5.5v5c0 .275.225.5.5.5h3c.275 0 .5-.225.5-.5v-5zM18.5 10h1c.275 0 .5-.225.5-.5s-.225-.5-.5-.5h-1c-.275 0-.5.225-.5.5s.225.5.5.5zM18.5 12h1c.275 0 .5-.225.5-.5s-.225-.5-.5-.5h-1c-.275 0-.5.225-.5.5s.225.5.5.5zM13.5 15h3c.275 0 .5-.225.5-.5s-.225-.5-.5-.5h-3c-.275 0-.5.225-.5.5s.225.5.5.5zM16.5 16h-3c-.275 0-.5.225-.5.5s.225.5.5.5h3c.275 0 .5-.225.5-.5s-.225-.5-.5-.5zM18.5 8h1c.275 0 .5-.225.5-.5s-.225-.5-.5-.5h-1c-.275 0-.5.225-.5.5s.225.5.5.5zM10 7.5c0-.275-.225-.5-.5-.5h-5c-.275 0-.5.225-.5.5v3c0 .275.225.5.5.5h5c.275 0 .5-.225.5-.5v-3zM9.501 14h-5c-.274 0-.5.225-.5.5s.226.5.5.5h5c.274 0 .499-.225.499-.5s-.225-.5-.499-.5zM9.501 12h-5c-.274 0-.5.225-.5.5s.226.5.5.5h5c.274 0 .499-.225.499-.5s-.225-.5-.499-.5zM9.501 16h-5c-.274 0-.5.225-.5.5s.226.5.5.5h5c.274 0 .499-.225.499-.5s-.225-.5-.499-.5z"}}]})(props);
	};
	module.exports.TiNotesOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.324 4.367c-.368-.324-.84-.5-1.324-.5l-.248.016-9 1.25c-1.001.125-1.752.975-1.752 1.984v6.111c-1.746.551-3 2.034-3 3.772 0 2.205 2.019 4 4.5 4 1.695 0 3.169-.842 3.937-2.078.803.667 1.879 1.078 3.063 1.078 2.481 0 4.5-1.795 4.5-4v-10.133c0-.574-.246-1.119-.676-1.5zm-7.324 11.633v-4.256l3-.45v1.737c-1.693.208-3 1.46-3 2.969zm6 0c0 1.104-1.119 2-2.5 2s-2.5-.896-2.5-2 1.119-2 2.5-2c.172 0 .338.014.5.041v-3.908l-5 .75v6.117c0 1.104-1.119 2-2.5 2s-2.5-.896-2.5-2 1.119-2 2.5-2c.172 0 .338.014.5.041v-7.924l9-1.25v10.133z"}}]})(props);
	};
	module.exports.TiNotes = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.831 4.059c-.107-.095-.243-.139-.394-.121l-11 1.25c-.249.031-.437.244-.437.496v10.316c-1.654 0-3 1.122-3 2.5s1.346 2.5 3 2.5 3-1.122 3-2.5v-7.609l6-.625v3.734c-1.654 0-3 1.122-3 2.5s1.346 2.5 3 2.5 3-1.122 3-2.5v-12.066c0-.144-.062-.28-.169-.375z"}}]})(props);
	};
	module.exports.TiPen = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.329 7.207c0-1.212-.472-2.352-1.329-3.207s-1.996-1.329-3.207-1.329c-1.199 0-2.327.463-3.18 1.304-.027.025-7.967 7.964-7.967 7.964-.373.373-.717.91-.967 1.514-.195.473-1.979 5.863-2.336 6.939-.119.358-.025.754.242 1.021.189.189.445.293.707.293.105 0 .211-.018.314-.051 1.076-.355 6.465-2.141 6.938-2.336.603-.248 1.14-.592 1.515-.967l2.157-2.156.076.01c.64 0 1.28-.244 1.769-.732l4.5-4.5c.696-.695.887-1.699.588-2.572.107-.386.18-.783.18-1.195zm-11.864 10.379c-.406.143-1.145.393-2.038.691l-1.704-1.704c.301-.894.551-1.634.691-2.038l3.051 3.051zm-4.097.047l.999.999-1.498.499.499-1.498zm7.698-3.113l-2.42 2.42-.235.18-3.53-3.529.18-.234 7.131-7.131 2.731 2.731-3.69 3.69c-.513.512-.549 1.289-.167 1.873zm6.08-4.959l-4.5 4.5c-.098.099-.226.146-.354.146s-.256-.049-.354-.146c-.195-.194-.195-.512 0-.707l4.5-4.5c.194-.194.512-.194.707 0 .196.195.197.511.001.707zm.107-1.764c-.519-.168-1.108-.062-1.521.35l-.102.102-2.731-2.731.078-.078c.984-.98 2.652-.981 3.608-.023.479.479.743 1.116.743 1.793.001.199-.03.394-.075.587z"}}]})(props);
	};
	module.exports.TiPencil = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 6.879l-3.879-3.879c-.293-.293-.678-.439-1.061-.439-.384 0-.767.146-1.06.439l-10.939 10.939c-.293.293-.558.727-.75 1.188-.192.463-.311.959-.311 1.373v4.5h4.5c.414 0 .908-.119 1.371-.311.463-.192.896-.457 1.189-.75l10.94-10.939c.293-.293.439-.678.439-1.061 0-.384-.146-.767-.439-1.06zm-15.232 8.182l8.293-8.293 1.232 1.232-8.293 8.293-1.232-1.232zm1.732 3.939h-1.5l-1-1v-1.5c0-.077.033-.305.158-.605.01-.02 2.967 2.938 2.967 2.938-.322.134-.548.167-.625.167zm1.439-.768l-1.232-1.232 8.293-8.293 1.232 1.232-8.293 8.293zm9-9l-3.172-3.172 1.293-1.293 3.17 3.172-1.291 1.293z"}}]})(props);
	};
	module.exports.TiPhoneOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.502 3.672l-1.795-1.793c-.566-.567-1.32-.879-2.121-.879s-1.555.312-2.121.879l-1.586 1.586c-1.17 1.17-1.17 3.072 0 4.242l1.379 1.379-4.172 4.172-1.379-1.379c-.566-.567-1.32-.879-2.121-.879s-1.555.312-2.121.879l-1.586 1.586c-1.17 1.17-1.17 3.072 0 4.242l1.794 1.793c.465.465 1.796 1.545 4.116 1.545 2.764 0 5.694-1.529 8.711-4.545 6.245-6.246 4.825-11.002 3.002-12.828zm-6.209 1.207l1.586-1.586c.195-.195.451-.293.707-.293s.512.098.707.293l1.083 1.082-3.001 3-1.082-1.082c-.391-.391-.391-1.023 0-1.414zm-10 11.414c-.391-.391-.391-1.023 0-1.414l1.586-1.586c.195-.195.451-.293.707-.293s.512.098.707.293l1.082 1.082-2.999 3-1.083-1.082zm11.793-1.207c-3.083 3.082-5.551 3.959-7.297 3.959-1.349 0-2.267-.523-2.702-.959-.004-.004 2.995-3.004 2.995-3.004l.297.297c.195.195.451.293.707.293s.512-.098.707-.293l5.586-5.586c.391-.391.391-1.023 0-1.414l-.297-.297 3.001-3c1.003 1.004 2.467 4.539-2.997 10.004z"}}]})(props);
	};
	module.exports.TiPhone = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13.374 7.083l3.711-3.71-.438-.434c-.566-.566-1.555-.566-2.121 0l-1.586 1.586c-.284.284-.44.661-.44 1.061s.156.777.438 1.06l.436.437zM6.646 12.939c-.566-.566-1.555-.566-2.121 0l-1.586 1.586c-.283.284-.439.661-.439 1.061s.156.777.441 1.062l.437.432 3.703-3.703-.435-.438zM18.437 4.729l-.354-.354-3.708 3.708.65.649c.095.095.146.22.146.354s-.052.259-.146.354l-5.586 5.586c-.189.188-.518.189-.707 0l-.65-.65-3.702 3.71.354.354c.26.26 1.246 1.105 3.056 1.105 1.616 0 4.256-.712 7.65-4.105 6.773-6.775 3.158-10.55 2.997-10.711z"}}]})(props);
	};
	module.exports.TiPiOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.121 7.121c-.566-.567-1.32-.879-2.121-.879s-1.555.312-2.121.879c-.233.233-.546.362-.879.362s-.646-.129-.879-.362c-1.366-1.366-3.185-2.118-5.121-2.118s-3.755.752-5.121 2.118c-.567.567-.879 1.32-.879 2.121s.312 1.555.879 2.121c.566.567 1.32.879 2.121.879v4.758c0 1.654 1.346 3 3 3s3-1.346 3-3c0 1.654 1.346 3 3 3s3-1.346 3-3v-4.166c.784-.356 1.501-.851 2.12-1.47.568-.567.88-1.321.88-2.122s-.312-1.554-.879-2.121zm-1.414 2.828c-.768.767-1.715 1.245-2.707 1.437v5.614c0 .553-.447 1-1 1s-1-.447-1-1v-5.614c-.992-.191-1.939-.67-2.707-1.437-.374-.374-.821-.623-1.293-.775v7.826c0 .553-.447 1-1 1s-1-.447-1-1v-7.827c-.473.152-.919.402-1.293.776-.195.196-.451.293-.707.293s-.512-.098-.707-.293c-.391-.391-.391-1.023 0-1.414 1.021-1.021 2.364-1.532 3.707-1.532s2.685.511 3.707 1.532c.633.632 1.463.948 2.293.948.831 0 1.661-.316 2.293-.948.195-.195.451-.293.707-.293s.512.098.707.293c.391.391.391 1.024 0 1.414z"}}]})(props);
	};
	module.exports.TiPi = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.707 8.535c-.391-.391-1.023-.391-1.414 0-1.264 1.264-3.321 1.264-4.586 0-2.045-2.044-5.371-2.042-7.414 0-.391.391-.391 1.023 0 1.414s1.023.391 1.414 0c.374-.374.82-.624 1.293-.776v7.827c0 .553.447 1 1 1s1-.447 1-1v-7.826c.472.152.919.401 1.293.775.768.767 1.715 1.245 2.707 1.437v5.614c0 .553.447 1 1 1s1-.447 1-1v-5.614c.992-.191 1.939-.67 2.707-1.437.391-.39.391-1.023 0-1.414z"}}]})(props);
	};
	module.exports.TiPinOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.436 7.586l-3.998-4.02c-.752-.756-2.063-.764-2.83-.006-.196.196-.35.436-.418.629-.653 1.362-1.354 2.215-2.254 2.727l-.217.105c-.968.485-2.285.979-4.719.979-.266 0-.521.052-.766.152-.484.202-.879.595-1.082 1.084-.199.484-.199 1.041 0 1.525.104.249.25.471.435.651l3.235 3.235-3.822 5.353 5.352-3.822 3.227 3.227c.186.189.406.339.656.441.247.103.503.154.766.154s.519-.052.765-.154c.498-.205.883-.592 1.08-1.078.103-.242.155-.507.155-.768 0-2.436.494-3.752.978-4.721.496-.992 1.369-1.748 2.754-2.414.271-.104.51-.256.711-.457.772-.782.768-2.051-.008-2.822zm-5.248 4.801c-.819 1.643-1.188 3.37-1.195 5.604l-7.993-7.991c2.139 0 3.814-.335 5.396-1.084l.235-.105c1.399-.699 2.468-1.893 3.388-3.834l3.924 4.051c-1.863.893-3.056 1.96-3.755 3.359z"}}]})(props);
	};
	module.exports.TiPin = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.729 4.271c-.389-.391-1.021-.393-1.414-.004-.104.104-.176.227-.225.355-.832 1.736-1.748 2.715-2.904 3.293-1.297.64-2.786 1.085-5.186 1.085-.13 0-.26.025-.382.076-.245.102-.439.297-.541.541-.101.244-.101.52 0 .764.051.123.124.234.217.326l3.243 3.243-4.537 6.05 6.05-4.537 3.242 3.242c.092.094.203.166.326.217.122.051.252.078.382.078s.26-.027.382-.078c.245-.102.44-.295.541-.541.051-.121.077-.252.077-.381 0-2.4.444-3.889 1.083-5.166.577-1.156 1.556-2.072 3.293-2.904.129-.049.251-.121.354-.225.389-.393.387-1.025-.004-1.414l-3.997-4.02z"}}]})(props);
	};
	module.exports.TiPipette = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.384 7.331c.073-1.199-.354-2.388-1.146-3.179-.732-.731-1.793-1.152-2.912-1.152-1.176 0-2.206.453-2.825 1.243-.692.883-1.392 2.625-1.769 3.647l-1.616-1.617c-.392-.391-1.023-.391-1.414 0-.392.392-.392 1.023 0 1.414l.293.293-5.231 5.232c-.375.375-.719.912-.968 1.516-.019.043-1.726 4.328-.093 5.959.527.526 1.33.707 2.178.707 1.778-.002 3.753-.787 3.783-.801.602-.248 1.141-.592 1.514-.967l5.232-5.232.293.293c.195.195.451.293.707.293s.512-.098.707-.293c.391-.391.391-1.022 0-1.414l-1.617-1.616c1.023-.376 2.766-1.075 3.648-1.769.721-.562 1.17-1.493 1.236-2.557zm-16.265 11.944c-.247-.295-.105-1.508.154-2.58l2.422 2.423c-1.071.261-2.283.403-2.576.157zm4.645-1.061c-.188.188-.511.388-.865.533l-.116.042-3.181-3.18.043-.117c.146-.354.346-.678.533-.864l5.232-5.231 3.586 3.586-5.232 5.231z"}}]})(props);
	};
	module.exports.TiPlaneOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M20.988 12.396l-4.988-2.851v-4.795c0-1.93-1.57-3.5-3.5-3.5s-3.5 1.57-3.5 3.5v4.795l-4.988 2.851c-1.317.752-1.865 2.371-1.276 3.769.589 1.399 2.132 2.135 3.589 1.72l2.675-.765v.838l-.874.699c-1.198.959-1.48 2.667-.653 3.959.827 1.293 2.494 1.753 3.869 1.066.004-.001.5-.183 1.158-.183l1.158.183c1.375.687 3.042.227 3.869-1.066.827-1.292.545-3-.653-3.959l-.874-.699v-.838l2.676.765c1.457.415 3-.321 3.589-1.72s.041-3.017-1.277-3.769zm-.566 2.992c-.197.466-.711.713-1.196.573l-5.226-1.492v4.451l1.625 1.3c.399.319.493.889.218 1.32-.275.43-.828.583-1.29.355-.008-.004-.824-.395-2.053-.395s-2.045.391-2.053.395c-.462.227-1.015.074-1.29-.355-.275-.431-.182-1 .218-1.32l1.625-1.3v-4.451l-5.226 1.493c-.485.14-.999-.107-1.196-.573-.196-.466-.014-1.005.426-1.256l5.996-3.427v-5.956c0-.827.673-1.5 1.5-1.5s1.5.673 1.5 1.5v5.956l5.996 3.426c.44.251.622.79.426 1.256z"}},{"tag":"circle","attr":{"cx":"12.5","cy":"4.5","r":".5"}}]}]})(props);
	};
	module.exports.TiPlane = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.996 13.507l-5.996-3.426v-5.956c0-.827-.673-1.5-1.5-1.5s-1.5.673-1.5 1.5v5.956l-5.996 3.426c-.439.251-.622.79-.426 1.256.197.466.711.713 1.196.573l5.226-1.492v4.451l-1.625 1.3c-.387.31-.488.856-.239 1.284s.776.608 1.235.425l2.129-.852 2.129.852c.121.048.247.071.371.071.347 0 .681-.181.864-.497.249-.428.147-.975-.239-1.284l-1.625-1.3v-4.451l5.226 1.493.274.039c.394 0 .762-.233.922-.612.196-.466.014-1.005-.426-1.256zm-7.496-9.132c-.276 0-.5-.224-.5-.5s.224-.5.5-.5.5.224.5.5-.224.5-.5.5z"}}]})(props);
	};
	module.exports.TiPlug = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18,6h-1V3c0-0.6-0.4-1-1-1h-2c-0.6,0-1,0.4-1,1v3h-2V3c0-0.6-0.4-1-1-1H8C7.4,2,7,2.4,7,3v3H6C5.4,6,5,6.4,5,7v4\r\n\tc0,0.1,0,0.1,0,0.2c0.2,2.5,1.8,4.6,4,5.6V20c0,1.1,0.9,2,2,2h2c1.1,0,2-0.9,2-2v-3.2c2.2-1,3.7-3.1,4-5.6c0-0.1,0-0.1,0-0.2V7\r\n\tC19,6.4,18.6,6,18,6z M14,3h2v3h-2V3z M8,3h2v3H8V3z M13,20h-2v-2h2V20z M12,15.5c-2.2,0-4.1-1.5-4.7-3.5h9.5\r\n\tC16.1,14,14.2,15.5,12,15.5z M17,10.5c0,0.2,0,0.3-0.1,0.5H7.1C7,10.8,7,10.7,7,10.5V8h10V10.5z"}}]})(props);
	};
	module.exports.TiPlusOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 21c-1.654 0-3-1.346-3-3l.053-3.053-3.035.053c-1.672 0-3.018-1.346-3.018-3s1.346-3 3-3l3.053-.054-.053-2.928c0-1.672 1.346-3.018 3-3.018s3 1.346 3 3l.055 2.946 2.963.054c1.636 0 2.982 1.346 2.982 3s-1.346 3-3 3l-2.945-.053-.055 3.071c0 1.636-1.346 2.982-3 2.982zm-1-8v5.018c0 .533.449.982 1 .982s1-.449 1-1v-5h5.018c.533 0 .982-.449.982-1s-.449-1-1-1h-5v-5c0-.569-.449-1-1-1s-1 .449-1 1v5h-5c-.569 0-1 .449-1 1s.449 1 1 1h5z"}}]})(props);
	};
	module.exports.TiPlus = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 10h-4v-4c0-1.104-.896-2-2-2s-2 .896-2 2l.071 4h-4.071c-1.104 0-2 .896-2 2s.896 2 2 2l4.071-.071-.071 4.071c0 1.104.896 2 2 2s2-.896 2-2v-4.071l4 .071c1.104 0 2-.896 2-2s-.896-2-2-2z"}}]})(props);
	};
	module.exports.TiPointOfInterestOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.5 4c1.93 0 3.5 1.57 3.5 3.5s-1.57 3.5-3.5 3.5h-1.5v2h1.5c1.93 0 3.5 1.57 3.5 3.5s-1.57 3.5-3.5 3.5-3.5-1.57-3.5-3.5v-1.5h-2v1.5c0 1.93-1.57 3.5-3.5 3.5s-3.5-1.57-3.5-3.5 1.57-3.5 3.5-3.5h1.5v-2h-1.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5v1.5h2v-1.5c0-1.93 1.57-3.5 3.5-3.5m-1.5 5h1.5c.827 0 1.5-.674 1.5-1.5 0-.828-.673-1.5-1.5-1.5s-1.5.672-1.5 1.5v1.5m-7.5 0h1.5v-1.5c0-.828-.673-1.5-1.5-1.5s-1.5.672-1.5 1.5c0 .826.673 1.5 1.5 1.5m9 9c.827 0 1.5-.674 1.5-1.5 0-.828-.673-1.5-1.5-1.5h-1.5v1.5c0 .826.673 1.5 1.5 1.5m-9 0c.827 0 1.5-.674 1.5-1.5v-1.5h-1.5c-.827 0-1.5.672-1.5 1.5 0 .826.673 1.5 1.5 1.5m9-16c-1.857 0-3.504.926-4.5 2.341-.996-1.415-2.643-2.341-4.5-2.341-3.033 0-5.5 2.468-5.5 5.5 0 1.857.926 3.504 2.341 4.5-1.415.996-2.341 2.643-2.341 4.5 0 3.032 2.467 5.5 5.5 5.5 1.857 0 3.504-.926 4.5-2.341.996 1.415 2.643 2.341 4.5 2.341 3.033 0 5.5-2.468 5.5-5.5 0-1.857-.926-3.504-2.341-4.5 1.415-.996 2.341-2.643 2.341-4.5 0-3.032-2.467-5.5-5.5-5.5zM13 11h-2v2h2z"}}]})(props);
	};
	module.exports.TiPointOfInterest = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.5 11c1.93 0 3.5-1.57 3.5-3.5s-1.57-3.5-3.5-3.5-3.5 1.57-3.5 3.5v1.5h-2v-1.5c0-1.93-1.57-3.5-3.5-3.5s-3.5 1.57-3.5 3.5 1.57 3.5 3.5 3.5h1.5v2h-1.5c-1.93 0-3.5 1.57-3.5 3.5s1.57 3.5 3.5 3.5 3.5-1.57 3.5-3.5v-1.5h2v1.5c0 1.93 1.57 3.5 3.5 3.5s3.5-1.57 3.5-3.5-1.57-3.5-3.5-3.5h-1.5v-2h1.5zm-1.5-3.5c0-.828.673-1.5 1.5-1.5s1.5.672 1.5 1.5c0 .826-.673 1.5-1.5 1.5h-1.5v-1.5zm-6 9c0 .826-.673 1.5-1.5 1.5s-1.5-.674-1.5-1.5c0-.828.673-1.5 1.5-1.5h1.5v1.5zm0-7.5h-1.5c-.827 0-1.5-.674-1.5-1.5 0-.828.673-1.5 1.5-1.5s1.5.672 1.5 1.5v1.5zm4 4h-2v-2h2v2zm3.5 2c.827 0 1.5.672 1.5 1.5 0 .826-.673 1.5-1.5 1.5s-1.5-.674-1.5-1.5v-1.5h1.5z"}}]})(props);
	};
	module.exports.TiPowerOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.51 6.062c-.814-.815-1.98-1.05-3.01-.729v-.333c0-1.656-1.344-3-3-3s-3 1.344-3 3v.332c-1.029-.319-2.195-.085-3.01.73-1.605 1.606-2.49 3.741-2.49 6.011s.885 4.405 2.49 6.011c1.604 1.605 3.739 2.489 6.01 2.489s4.405-.884 6.01-2.489c1.605-1.605 2.49-3.74 2.49-6.011s-.885-4.405-2.49-6.011zm-7.01-1.062c0-.552.447-1 1-1s1 .448 1 1v5c0 .552-.447 1-1 1s-1-.448-1-1v-5zm-1 3.803v1.197c0 1.104.896 2 2 2s2-.896 2-2v-1.182c.095.284.248.554.475.78.661.661 1.025 1.54 1.025 2.475s-.364 1.814-1.025 2.476c-1.322 1.321-3.627 1.321-4.949 0-.662-.662-1.026-1.541-1.026-2.476s.364-1.814 1.025-2.476c.231-.23.383-.504.475-.794zm6.596 7.867c-1.228 1.228-2.859 1.903-4.596 1.903s-3.368-.676-4.596-1.903c-1.227-1.228-1.904-2.86-1.904-4.597s.677-3.369 1.904-4.597c.391-.391 1.023-.391 1.414 0s.391 1.023 0 1.414c-.85.851-1.318 1.981-1.318 3.183s.468 2.333 1.318 3.183c.85.85 1.979 1.317 3.182 1.317s2.332-.468 3.182-1.317c.851-.85 1.318-1.98 1.318-3.183s-.468-2.333-1.318-3.183c-.391-.391-.391-1.023 0-1.414s1.023-.391 1.414 0c1.227 1.229 1.904 2.861 1.904 4.597s-.677 3.369-1.904 4.597z"}}]})(props);
	};
	module.exports.TiPower = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.5 18.573c-1.736 0-3.368-.676-4.596-1.903-1.227-1.228-1.904-2.86-1.904-4.597s.677-3.369 1.904-4.597c.391-.391 1.023-.391 1.414 0s.391 1.023 0 1.414c-.85.851-1.318 1.981-1.318 3.183s.468 2.333 1.318 3.183c.85.85 1.979 1.317 3.182 1.317s2.332-.468 3.182-1.317c.851-.85 1.318-1.98 1.318-3.183s-.468-2.333-1.318-3.183c-.391-.391-.391-1.023 0-1.414s1.023-.391 1.414 0c1.227 1.229 1.904 2.861 1.904 4.597s-.677 3.369-1.904 4.597c-1.228 1.227-2.86 1.903-4.596 1.903zM11.5 11c-.553 0-1-.448-1-1v-5c0-.552.447-1 1-1s1 .448 1 1v5c0 .552-.447 1-1 1z"}}]})(props);
	};
	module.exports.TiPrinter = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M17 5v-2c0-.552-.448-1-1-1h-9c-.552 0-1 .448-1 1v2c-1.654 0-3 1.346-3 3v10c0 1.654 1.346 3 3 3h11c1.654 0 3-1.346 3-3v-10c0-1.654-1.346-3-3-3zm-9-1h7v5h-7v-5zm-2 3v3c0 .552.448 1 1 1h9c.552 0 1-.448 1-1v-3c.551 0 1 .449 1 1v2.5c0 .827-.673 1.5-1.5 1.5h-10c-.827 0-1.5-.673-1.5-1.5v-2.5c0-.551.449-1 1-1zm11 12h-11c-.551 0-1-.449-1-1v-5.513c.419.318.935.513 1.5.513h10c.565 0 1.081-.195 1.5-.513v5.513c0 .551-.449 1-1 1zM13.5 7h-4c-.276 0-.5.224-.5.5s.224.5.5.5h4c.276 0 .5-.224.5-.5s-.224-.5-.5-.5zM15 16h-7c-.276 0-.5.224-.5.5s.224.5.5.5h7c.276 0 .5-.224.5-.5s-.224-.5-.5-.5zM13.5 5h-4c-.276 0-.5.224-.5.5s.224.5.5.5h4c.276 0 .5-.224.5-.5s-.224-.5-.5-.5z"}}]}]})(props);
	};
	module.exports.TiPuzzleOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20 11.25v-1.75c0-1.93-1.57-3.5-3.5-3.5h-.759c-.141-1.982-1.953-3.5-4.241-3.5s-4.1 1.518-4.241 3.5h-.759c-1.93 0-3.5 1.57-3.5 3.5v1.75c0 1.012.514 1.847 1.295 2.246-.358.188-.668.469-.894.825-.262.414-.401.908-.401 1.429v2.75c0 1.93 1.57 3.5 3.5 3.5h2.75c.976 0 1.831-.497 2.242-1.299l.036.066c.435.772 1.266 1.233 2.222 1.233h2.75c1.93 0 3.5-1.57 3.5-3.5v-2.75c0-1.013-.515-1.849-1.297-2.247.776-.411 1.297-1.256 1.297-2.253zm-2 7.25c0 .825-.675 1.5-1.5 1.5h-2.75c-.356 0-.724-.216-.391-.766.246-.28.391-.619.391-.984 0-.967-1.007-1.75-2.25-1.75s-2.25.783-2.25 1.75c0 .3.095.576.255.823.507.673.136.927-.255.927h-2.75c-.825 0-1.5-.675-1.5-1.5v-2.75c0-.258.113-.521.384-.521.104 0 .229.039.382.13.28.246.62.391.984.391.966 0 1.75-1.008 1.75-2.25s-.784-2.25-1.75-2.25c-.3 0-.576.095-.822.255-.237.171-.422.243-.562.243-.26 0-.366-.245-.366-.498v-1.75c0-.825.675-1.5 1.5-1.5h2.75c.391 0 .762-.254.243-.927-.148-.247-.243-.523-.243-.823 0-.967 1.007-1.75 2.25-1.75s2.25.783 2.25 1.75c0 .365-.145.704-.391.984-.333.55.035.766.391.766h2.75c.825 0 1.5.675 1.5 1.5v1.75c0 .258-.113.521-.384.521-.104 0-.229-.039-.382-.13-.28-.246-.62-.391-.984-.391-.966 0-1.75 1.008-1.75 2.25s.784 2.25 1.75 2.25c.3 0 .576-.095.822-.255.237-.171.422-.244.562-.243.259 0 .365.245.365.498v2.75zm-13-5.806c.116.032.236.054.365.054.342 0 .683-.119 1.038-.364l.069-.041c.097-.063.188-.093.278-.093.354 0 .75.535.75 1.25s-.396 1.25-.75 1.25c-.108 0-.217-.048-.324-.142l-.143-.104c-.301-.183-.604-.275-.899-.275-.134 0-.261.023-.384.059v-1.594zm12.635 1.558c-.342 0-.683.119-1.038.364l-.069.041c-.097.063-.188.093-.277.093-.354 0-.75-.535-.75-1.25s.396-1.25.75-1.25c.108 0 .217.048.324.142l.143.104c.302.183.604.275.899.275.136 0 .262-.025.384-.062v1.597c-.117-.032-.237-.054-.366-.054zm-6.943 5.748c.101-.346.093-.816-.305-1.396l-.044-.074c-.062-.098-.094-.189-.094-.279 0-.354.534-.75 1.25-.75s1.25.396 1.25.75c0 .108-.048.217-.143.325l-.104.142c-.325.537-.311.979-.22 1.284h-1.59z"}}]})(props);
	};
	module.exports.TiPuzzle = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.25 11.25c.364 0 .704.145.984.391.549.332.766-.034.766-.391v-1.75c0-.825-.675-1.5-1.5-1.5h-2.75c-.356 0-.724-.216-.391-.766.246-.28.391-.619.391-.984 0-.967-1.007-1.75-2.25-1.75s-2.25.783-2.25 1.75c0 .3.095.576.255.823.507.673.136.927-.255.927h-2.75c-.825 0-1.5.675-1.5 1.5v1.75c0 .391.254.762.928.244.246-.149.522-.244.822-.244.966 0 1.75 1.008 1.75 2.25s-.784 2.25-1.75 2.25c-.364 0-.704-.145-.984-.391-.549-.332-.766.034-.766.391v2.75c0 .825.675 1.5 1.5 1.5h2.75c.391 0 .762-.254.243-.927-.148-.247-.243-.523-.243-.823 0-.967 1.007-1.75 2.25-1.75s2.25.783 2.25 1.75c0 .365-.145.704-.391.984-.333.55.035.766.391.766h2.75c.825 0 1.5-.675 1.5-1.5v-2.75c0-.391-.254-.762-.928-.244-.246.149-.522.244-.822.244-.966 0-1.75-1.008-1.75-2.25s.784-2.25 1.75-2.25z"}}]})(props);
	};
	module.exports.TiRadarOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.997 4.5c-4.685 0-8.497 3.812-8.497 8.5s3.813 8.5 8.5 8.5c4.688 0 8.5-3.812 8.5-8.5s-3.812-8.5-8.503-8.5zm.003 15c-3.584 0-6.5-2.916-6.5-6.5s2.914-6.5 6.5-6.5c3.584 0 6.5 2.916 6.5 6.5s-2.916 6.5-6.5 6.5zM15.348 12.031l.152-.031h.879c-.383-1.677-1.699-2.995-3.379-3.378v.878c0 .551-.449 1-1 1-.497 0-.892-.371-.969-.846l-.031-.154v-.88c-1.678.382-2.997 1.702-3.38 3.38h.88l.153.031c.476.076.847.472.847.969s-.371.893-.846.969l-.154.031h-.878c.384 1.677 1.702 2.995 3.378 3.379v-.879l.031-.154c.077-.476.472-.846.969-.846s.893.371.969.848l.031.152v.879c1.677-.383 2.996-1.702 3.379-3.379h-.879l-.152-.031c-.477-.076-.848-.472-.848-.969s.371-.893.848-.969zm-.446 2.867c-.264.399-.604.74-1.004 1.002-.256-.81-1.004-1.401-1.897-1.401s-1.642.592-1.898 1.401c-.4-.262-.74-.603-1.003-1.002.81-.256 1.401-1.006 1.401-1.898 0-.895-.592-1.643-1.402-1.898.263-.399.603-.74 1.004-1.002.256.81 1.005 1.401 1.898 1.401.894 0 1.644-.593 1.899-1.403.399.264.74.604 1.002 1.004-.81.256-1.401 1.006-1.401 1.898-.001.893.591 1.643 1.401 1.898z"}}]})(props);
	};
	module.exports.TiRadar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 20c3.86 0 7-3.141 7-7s-3.14-7-7.003-7c-3.858 0-6.997 3.141-6.997 7s3.14 7 7 7zm-1-11.898v1.898c0 .553.448 1 1 1s1-.447 1-1v-1.898c1.956.398 3.5 1.942 3.899 3.898h-1.899c-.552 0-1 .447-1 1s.448 1 1 1h1.899c-.399 1.956-1.943 3.5-3.899 3.898v-1.898c0-.553-.448-1-1-1s-1 .447-1 1v1.898c-1.956-.398-3.5-1.942-3.899-3.898h1.899c.552 0 1-.447 1-1s-.448-1-1-1h-1.899c.399-1.956 1.942-3.5 3.899-3.898z"}}]})(props);
	};
	module.exports.TiRefreshOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.368 4.998c-.488 0-1.2.145-1.956.773-1.036-.489-2.189-.771-3.412-.771-4.418 0-8 3.582-8 8s3.582 8 8 8c4.312 0 8-3.316 8-8v-4.936c-.016-2.111-1.375-3.066-2.632-3.066zm.632 8.002h-5.128c-1.134 0-1.407-.561-.604-1.363l1.448-1.402c-.562-.371-1.22-.549-1.909-.549-.93 0-1.805.375-2.464 1.033-.657.656-1.02 1.537-1.02 2.467 0 .933.362 1.811 1.02 2.469.659.658 1.534 1.021 2.464 1.021s1.805-.36 2.465-1.019c.177-.18.334-.372.468-.579.222-.345.596-.533.979-.533.216 0 .433.06.625.185.54.346.697 1.063.351 1.604-.223.344-.484.668-.78.965-1.097 1.099-2.556 1.703-4.106 1.703-1.55 0-3.009-.604-4.104-1.701-1.097-1.096-1.701-2.555-1.701-4.106 0-1.551.604-3.012 1.702-4.104 1.096-1.098 2.554-1.7 4.104-1.7 1.311 0 2.551.436 3.566 1.229l1.154-1.158c.311-.312.602-.461.841-.461.377 0 .627.372.632 1.065v4.934zm-7.08.05c.162.392.63.95 1.952.95h1.299s-.21.504-.614.907-1.086.745-1.75.745-1.289-.246-1.758-.715c-.468-.47-.727-1.088-.727-1.752s.258-1.139.726-1.604c.472-.472 1.097-.581 1.759-.581l-.246.123c-.935.934-.803 1.536-.641 1.927z"}}]})(props);
	};
	module.exports.TiRefresh = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12.872 13.191h5.128v-5.127c-.008-1.135-.671-1.408-1.473-.605l-1.154 1.158c-1.015-.795-2.257-1.23-3.566-1.23-1.55 0-3.009.604-4.104 1.701-1.099 1.092-1.703 2.553-1.703 4.103 0 1.553.604 3.012 1.701 4.107 1.097 1.097 2.555 1.702 4.106 1.702 1.55 0 3.009-.605 4.106-1.703.296-.297.558-.621.78-.965.347-.541.19-1.26-.35-1.605-.539-.346-1.258-.189-1.604.35-.133.207-.292.4-.468.58-.659.658-1.534 1.02-2.464 1.02-.93 0-1.805-.361-2.464-1.02-.657-.658-1.02-1.533-1.02-2.465 0-.93.362-1.805 1.02-2.461.659-.658 1.534-1.021 2.464-1.021.688 0 1.346.201 1.909.572l-1.448 1.451c-.803.802-.53 1.458.604 1.458z"}}]})(props);
	};
	module.exports.TiRssOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8 4.999c-1.657 0-3.011 1.344-3.011 3l.005 9c0 2.209 1.793 4 4.002 4l9.003.001c1.655 0 3-1.346 3-3.001.001-7.179-5.819-13-12.999-13zm1.001 14c-1.105.002-2.001-.894-2.001-1.999-.002-1.105.894-2.001 2.001-2.001 1.105-.002 2.001.894 1.999 2.001.002 1.105-.894 2.001-1.999 1.999zm4.499 0c-.829 0-1.5-.671-1.5-1.5 0-1.931-1.57-3.5-3.5-3.5-.829 0-1.5-.671-1.5-1.5s.671-1.5 1.5-1.5c3.584 0 6.5 2.916 6.5 6.5 0 .829-.671 1.5-1.5 1.5zm4 0c-.829 0-1.5-.671-1.5-1.5 0-4.136-3.364-7.5-7.5-7.5-.829 0-1.5-.671-1.5-1.5s.671-1.5 1.5-1.5c5.79 0 10.5 4.71 10.5 10.5 0 .829-.671 1.5-1.5 1.5z"}}]})(props);
	};
	module.exports.TiRss = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6.002 15.999c-1.107 0-2.004.897-2.002 2.001 0 1.104.896 2.001 2.002 1.999 1.103.002 2-.894 1.998-1.999.002-1.107-.895-2.003-1.998-2.001zM6 4c-1.104 0-2 .896-2 2s.896 2 2 2c5.514 0 10 4.486 10 10 0 1.104.896 2 2 2s2-.896 2-2c0-7.72-6.28-14-14-14zM6 10c-1.104 0-2 .896-2 2s.896 2 2 2c2.205 0 4 1.794 4 4 0 1.104.896 2 2 2s2-.896 2-2c0-4.411-3.589-8-8-8z"}}]})(props);
	};
	module.exports.TiScissorsOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.124 5.27l.25.013c.163.022.319.02.468.077.146.05.292.084.42.146.254.131.471.262.631.422.174.137.248.279.321.371l.108.146-.166-.074c-.105-.043-.258-.139-.442-.16-.129-.037-.282-.047-.442-.047l-.15.002-.318.061c-.103.01-.201.078-.295.113-.186.088-.35.203-.461.34l-.057.076c.451.477.732 1.115.732 1.824 0 1.471-1.195 2.668-2.666 2.668-.908 0-1.707-.457-2.189-1.15l-1.657 2.625c1.712 1.92 3.22 4.348 3.22 4.348 1.037 1.429-.789 3.947-.789 3.947l-3.552-6.522-3.551 6.522s-1.826-2.52-.789-3.947c0 0 1.507-2.428 3.22-4.348l-1.656-2.625c-.482.693-1.283 1.15-2.188 1.15-1.472 0-2.667-1.197-2.667-2.668 0-1.469 1.195-2.666 2.667-2.666.925 0 1.739.475 2.218 1.193.955 1.428 1.739 3.156 2.748 4.334 1.008-1.178 1.792-2.906 2.746-4.336.48-.717 1.295-1.191 2.221-1.191l.186.018.326-.188.383-.211c.132-.072.297-.107.449-.158.224-.07.475-.105.721-.105m-2.069 4.376c.273 0 .547-.104.756-.312.416-.416.416-1.092 0-1.508-.209-.208-.481-.312-.754-.312s-.545.104-.754.312l-.24.377c-.144.381-.066.826.24 1.131.207.209.479.312.752.312m-9.931 0c.272 0 .545-.104.752-.312.308-.305.382-.75.237-1.131l-.237-.377c-.207-.208-.48-.312-.753-.312s-.547.104-.755.312c-.417.416-.417 1.092 0 1.508.208.208.482.312.756.312m4.965 3.762c.218 0 .396-.178.396-.395 0-.22-.176-.396-.396-.396-.219 0-.394.176-.394.396 0 .217.176.395.394.395m7.035-10.138c-.448 0-.901.066-1.312.191l-.117.036c-.168.051-.426.126-.707.28l-.271.148c-1.388.102-2.656.815-3.467 1.961l-.079.108c-.39.584-.741 1.192-1.082 1.784-.339-.592-.69-1.199-1.081-1.784l-.078-.107c-.877-1.239-2.289-1.974-3.807-1.974-2.574 0-4.667 2.093-4.667 4.666s2.094 4.668 4.667 4.668c.309 0 .611-.03.908-.09-1.016 1.338-1.777 2.53-1.948 2.803-1.714 2.467.392 5.619.835 6.229.377.521.98.826 1.619.826l.129-.004c.686-.044 1.3-.437 1.628-1.039l1.795-3.298 1.795 3.298c.328.604.943.995 1.628 1.039l.129.004c.639 0 1.241-.306 1.619-.826.443-.61 2.549-3.764.834-6.229-.17-.271-.932-1.465-1.947-2.803.295.06.601.09.908.09 2.573 0 4.668-2.095 4.668-4.668l-.004-.179c.467-.096.898-.356 1.2-.758.547-.729.536-1.733-.032-2.445l-.049-.067-.039-.053c-.102-.146-.279-.394-.572-.644-.35-.326-.738-.547-1.045-.705-.275-.136-.488-.201-.628-.244l-.062-.02c-.333-.117-.622-.146-.784-.16l-.054-.006-.086-.01-.444-.018z"}}]})(props);
	};
	module.exports.TiScissors = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.625 5.515c-1-1.522-2.915-1.67-4.397-.824l-.186.107-.076-.003c-1.042 0-2.01.511-2.604 1.369l-.034.045c-.43.645-.723 1.236-1.005 1.809-.255.516-.5 1.01-.824 1.483-.325-.475-.57-.97-.826-1.486-.283-.571-.575-1.162-1.004-1.806l-.033-.044c-.593-.859-1.562-1.37-2.603-1.37-1.747 0-3.167 1.42-3.167 3.166 0 1.747 1.421 3.168 3.167 3.168.775 0 1.515-.287 2.087-.791l.652 1.198c-1.621 1.876-2.979 4.054-3.019 4.121-1.236 1.702.705 4.42.789 4.534.094.131.245.207.405.207.204-.012.357-.11.439-.261l3.112-5.717 3.113 5.717c.082.15.235.249.407.26.174.019.336-.066.437-.206.083-.114 2.024-2.832.809-4.504l-.323-.521c-1.076-1.736-1.187-1.916-2.715-3.634l.651-1.195c.572.504 1.313.791 2.088.791 1.746 0 3.167-1.421 3.167-3.168 0-.634-.191-1.246-.547-1.768.472-.27.997-.123 1.456.095.466.191.897-.377.584-.772zm-13.625 3.485c-.552 0-1-.447-1-1s.448-1 1-1 1 .447 1 1-.448 1-1 1zm4.5 3.395c-.277 0-.5-.225-.5-.5 0-.277.223-.5.5-.5s.5.223.5.5c0 .275-.223.5-.5.5zm4.5-3.395c-.552 0-1-.447-1-1s.448-1 1-1 1 .447 1 1-.448 1-1 1z"}}]})(props);
	};
	module.exports.TiShoppingBag = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 4h-10c-1.654 0-3 1.346-3 3v11c0 1.654 1.346 3 3 3h10c1.654 0 3-1.346 3-3v-11c0-1.654-1.346-3-3-3zm1 14c0 .551-.448 1-1 1h-10c-.552 0-1-.449-1-1v-7.28c.296.174.635.28 1 .28h1.5c0 1.93 1.57 3.5 3.5 3.5s3.5-1.57 3.5-3.5h1.5c.365 0 .704-.106 1-.279v7.279zm-8.5-7h5c0 1.378-1.121 2.5-2.5 2.5s-2.5-1.122-2.5-2.5zm8.5-2c0 .551-.448 1-1 1h-10c-.552 0-1-.449-1-1v-2c0-.551.448-1 1-1h10c.552 0 1 .449 1 1v2z"}}]})(props);
	};
	module.exports.TiShoppingCart = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M20.756 5.345c-.191-.219-.466-.345-.756-.345h-13.819l-.195-1.164c-.08-.482-.497-.836-.986-.836h-2.25c-.553 0-1 .447-1 1s.447 1 1 1h1.403l1.86 11.164.045.124.054.151.12.179.095.112.193.13.112.065c.116.047.238.075.367.075h11.001c.553 0 1-.447 1-1s-.447-1-1-1h-10.153l-.166-1h11.319c.498 0 .92-.366.99-.858l1-7c.041-.288-.045-.579-.234-.797zm-1.909 1.655l-.285 2h-3.562v-2h3.847zm-4.847 0v2h-3v-2h3zm0 3v2h-3v-2h3zm-4-3v2h-3l-.148.03-.338-2.03h3.486zm-2.986 3h2.986v2h-2.653l-.333-2zm7.986 2v-2h3.418l-.285 2h-3.133z"}},{"tag":"circle","attr":{"cx":"8.5","cy":"19.5","r":"1.5"}},{"tag":"circle","attr":{"cx":"17.5","cy":"19.5","r":"1.5"}}]}]})(props);
	};
	module.exports.TiSocialAtCircular = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M11.844 7.5c-2.481 0-4.438 2.019-4.438 4.5s2.05 4.5 4.531 4.5c.908 0 1.799-.27 2.547-.778.228-.155.295-.466.139-.694-.155-.229-.462-.287-.691-.132-.58.396-1.258.604-1.965.604-1.93 0-3.499-1.57-3.499-3.5s1.446-3.5 3.376-3.5 3.375 1.57 3.375 3.5v.25c0 .414-.336.75-.75.75s-.75-.336-.75-.75v-1.75c0-.276-.099-.5-.375-.5-.205 0-.318.124-.396.301-.303-.188-.628-.301-1.01-.301-1.104 0-1.984.896-1.984 2s.904 2 2.008 2c.562 0 1.073-.235 1.438-.609.319.369.664.609 1.192.609.965 0 1.627-.785 1.627-1.75v-.25c0-2.481-1.894-4.5-4.375-4.5zm.125 5.5c-.551 0-1-.449-1-1s.449-1 1-1 1 .449 1 1-.449 1-1 1zM12 21c-4.963 0-9-4.037-9-9s4.037-9 9-9 9 4.037 9 9-4.037 9-9 9zm0-16c-3.859 0-7 3.141-7 7s3.141 7 7 7 7-3.141 7-7-3.141-7-7-7z"}}]}]})(props);
	};
	module.exports.TiSocialDribbbleCircular = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M12 21c-4.962 0-9-4.037-9-9s4.038-9 9-9 9 4.037 9 9-4.038 9-9 9zm0-16c-3.86 0-7 3.141-7 7s3.14 7 7 7 7-3.141 7-7-3.14-7-7-7zM12 6.5c-3.033 0-5.5 2.468-5.5 5.5s2.467 5.5 5.5 5.5 5.5-2.468 5.5-5.5-2.467-5.5-5.5-5.5zm4.49 5.402c-1.048-.186-2.1-.18-3.103.042-.127-.326-.267-.647-.417-.965.875-.524 1.652-1.221 2.284-2.07.746.785 1.211 1.834 1.236 2.993zm-2-3.646c-.546.748-1.215 1.367-1.975 1.832-.479-.856-1.046-1.663-1.692-2.412.378-.103.767-.176 1.177-.176.921 0 1.776.28 2.49.756zm-4.641-.184c.687.758 1.278 1.59 1.776 2.473-1.238.531-2.622.691-3.998.437.293-1.259 1.118-2.302 2.222-2.91zm-2.349 3.928c.468.064.936.121 1.399.121 1.106 0 2.187-.244 3.185-.683.123.261.238.524.344.793-1.469.526-2.769 1.489-3.728 2.805-.738-.802-1.2-1.862-1.2-3.036zm1.948 3.699c.842-1.189 2.004-2.057 3.318-2.527.314 1.001.518 2.039.596 3.095-.433.138-.884.233-1.362.233-.948 0-1.826-.298-2.552-.801zm4.872.137c-.099-1-.296-1.983-.593-2.937.87-.176 1.778-.172 2.683.001-.256 1.247-1.035 2.296-2.09 2.936z"}}]}]})(props);
	};
	module.exports.TiSocialDribbble = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 3c-4.962 0-9 4.037-9 9s4.038 9 9 9 9-4.037 9-9-4.038-9-9-9zm6.962 8.275c-1.765-.289-3.534-.187-5.205.262-.18-.436-.383-.859-.59-1.283 1.422-.81 2.685-1.912 3.713-3.262 1.143 1.113 1.909 2.611 2.082 4.283zm-2.832-4.914c-.939 1.243-2.1 2.259-3.401 3.009-.782-1.445-1.729-2.8-2.807-4.056.657-.204 1.355-.314 2.078-.314 1.545 0 2.971.51 4.13 1.361zm-7.183-.65c1.119 1.265 2.093 2.645 2.892 4.117-2.061.957-4.396 1.294-6.717.899.408-2.212 1.86-4.058 3.825-5.016zm-3.947 6.289l.015-.294c.676.111 1.353.188 2.024.188 1.827 0 3.607-.426 5.237-1.187.182.373.365.744.525 1.127-2.429.866-4.583 2.486-6.101 4.726-1.056-1.227-1.7-2.818-1.7-4.56zm2.393 5.257c1.43-2.129 3.465-3.673 5.764-4.487.683 1.854 1.123 3.795 1.292 5.779-.763.287-1.587.451-2.449.451-1.765 0-3.375-.661-4.607-1.743zm8.014.852c-.196-1.932-.631-3.822-1.293-5.632 1.564-.404 3.222-.486 4.871-.19-.102 2.502-1.516 4.668-3.578 5.822z"}}]})(props);
	};
	module.exports.TiSocialFacebookCircular = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.354 5.624c-1.75-1.741-3.888-2.624-6.354-2.624-2.489 0-4.633.884-6.373 2.625-1.743 1.741-2.627 3.887-2.627 6.375 0 2.465.883 4.603 2.624 6.354 1.741 1.756 3.886 2.646 6.376 2.646 2.467 0 4.605-.89 6.356-2.643 1.755-1.753 2.644-3.892 2.644-6.357 0-2.488-.89-4.634-2.646-6.376zm-1.412 11.319c-1.137 1.139-2.436 1.788-3.942 1.985v-4.928h2v-2h-2v-1.4c0-.331.269-.6.601-.6h1.399v-2h-1.397c-.742 0-1.361.273-1.857.822-.496.547-.746 1.215-.746 2.008v1.17h-2v2h2v4.93c-1.522-.195-2.826-.845-3.957-1.984-1.375-1.384-2.043-3.002-2.043-4.946 0-1.966.667-3.588 2.042-4.96 1.37-1.373 2.992-2.04 4.958-2.04 1.945 0 3.562.668 4.945 2.043 1.383 1.372 2.055 2.994 2.055 4.957 0 1.941-.673 3.559-2.058 4.943z"}}]})(props);
	};
	module.exports.TiSocialFacebook = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 10h3v3h-3v7h-3v-7h-3v-3h3v-1.255c0-1.189.374-2.691 1.118-3.512.744-.823 1.673-1.233 2.786-1.233h2.096v3h-2.1c-.498 0-.9.402-.9.899v2.101z"}}]})(props);
	};
	module.exports.TiSocialFlickrCircular = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M12 21c-2.489 0-4.635-.89-6.376-2.646-1.741-1.751-2.624-3.889-2.624-6.354 0-2.488.884-4.634 2.627-6.375 1.74-1.741 3.885-2.625 6.373-2.625 2.466 0 4.604.883 6.354 2.624 1.755 1.742 2.646 3.888 2.646 6.376 0 2.465-.89 4.604-2.644 6.357-1.751 1.753-3.889 2.643-6.356 2.643zm0-16c-1.966 0-3.588.667-4.958 2.04-1.374 1.372-2.042 2.994-2.042 4.96 0 1.944.668 3.562 2.043 4.945 1.372 1.383 2.993 2.055 4.957 2.055 1.943 0 3.56-.673 4.941-2.057 1.386-1.384 2.059-3.002 2.059-4.943 0-1.963-.672-3.585-2.055-4.957-1.383-1.375-3-2.043-4.945-2.043zM9 14.5c-1.379 0-2.5-1.121-2.5-2.5s1.121-2.5 2.5-2.5 2.5 1.121 2.5 2.5-1.121 2.5-2.5 2.5zm0-4c-.827 0-1.5.673-1.5 1.5s.673 1.5 1.5 1.5 1.5-.673 1.5-1.5-.673-1.5-1.5-1.5zM15 14.5c-1.379 0-2.5-1.121-2.5-2.5s1.121-2.5 2.5-2.5 2.5 1.121 2.5 2.5-1.121 2.5-2.5 2.5z"}}]}]})(props);
	};
	module.exports.TiSocialFlickr = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7.5 16c-2.206 0-4-1.794-4-4s1.794-4 4-4 4 1.794 4 4-1.794 4-4 4zm0-6c-1.103 0-2 .897-2 2s.897 2 2 2 2-.897 2-2-.897-2-2-2zM16.5 8c-2.206 0-4 1.794-4 4s1.794 4 4 4 4-1.794 4-4-1.794-4-4-4z"}}]})(props);
	};
	module.exports.TiSocialGithubCircular = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M12 21c-4.963 0-9-4.038-9-9s4.037-9 9-9 9 4.038 9 9-4.037 9-9 9zm0-16c-3.859 0-7 3.14-7 7s3.141 7 7 7 7-3.14 7-7-3.141-7-7-7zM13.565 12.626c.171 0 .316.084.441.255.124.169.187.378.187.625 0 .248-.062.457-.187.626-.125.169-.271.254-.441.254-.181 0-.337-.084-.461-.254-.124-.169-.187-.378-.187-.626s.062-.456.187-.625c.125-.171.281-.255.461-.255m2.21-2.289c.482.522.725 1.155.725 1.898 0 .482-.057.915-.166 1.301-.111.384-.252.698-.42.939-.171.242-.378.454-.627.635-.249.184-.478.316-.685.401-.208.085-.446.15-.716.196-.266.047-.467.072-.606.079l-.44.009-.352.01-.488.011-.488-.011-.352-.01-.44-.009c-.14-.007-.341-.032-.606-.079-.271-.045-.508-.11-.716-.196-.207-.084-.436-.217-.684-.401-.25-.182-.457-.394-.628-.635-.168-.241-.309-.555-.42-.939-.109-.386-.166-.819-.166-1.301 0-.743.242-1.376.725-1.898-.053-.026-.056-.286-.008-.782.043-.496.148-.953.319-1.37.602.064 1.343.404 2.23 1.017.3-.078.71-.118 1.233-.118.549 0 .959.04 1.234.118.404-.273.791-.496 1.16-.666.374-.168.644-.267.814-.293l.254-.058c.172.417.277.875.32 1.37.05.496.047.756-.006.782m-3.754 5.027c1.083 0 1.899-.129 2.454-.39.553-.26.833-.796.833-1.605 0-.469-.176-.861-.529-1.174-.181-.17-.394-.273-.638-.313-.238-.039-.607-.039-1.104 0-.495.04-.834.058-1.016.058-.248 0-.517-.013-.851-.039l-.783-.049c-.191-.006-.395.018-.616.069-.223.053-.404.143-.55.273-.336.3-.507.691-.507 1.174 0 .809.274 1.345.821 1.605.547.261 1.361.39 2.444.39m-1.524-2.737c.17 0 .316.084.44.255.124.169.187.378.187.625 0 .248-.062.457-.187.626-.124.169-.271.254-.44.254-.182 0-.337-.084-.462-.254-.124-.169-.187-.378-.187-.626s.062-.456.187-.625c.125-.171.28-.255.462-.255"}}]}]})(props);
	};
	module.exports.TiSocialGithub = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14.435 12.973c.269 0 .492.133.686.396.192.265.294.588.294.975 0 .385-.102.711-.294.973-.193.265-.417.396-.686.396-.278 0-.522-.131-.715-.396-.192-.262-.294-.588-.294-.973 0-.387.102-.71.294-.975.192-.264.436-.396.715-.396m3.44-3.559c.746.811 1.125 1.795 1.125 2.953 0 .748-.086 1.423-.259 2.023-.175.597-.394 1.084-.654 1.459-.264.376-.588.705-.974.989-.386.286-.741.492-1.065.623-.325.132-.695.233-1.111.306-.417.071-.726.111-.943.123l-.685.014-.547.015c-.301.013-.56.016-.762.016s-.461-.003-.762-.016l-.547-.015-.685-.014c-.218-.012-.526-.052-.943-.123-.423-.072-.786-.174-1.111-.306-.324-.131-.68-.337-1.064-.623-.387-.284-.711-.613-.975-.989-.261-.375-.479-.862-.654-1.459-.173-.6-.259-1.275-.259-2.023 0-1.158.379-2.143 1.125-2.953-.082-.041-.085-.447-.008-1.217.063-.771.227-1.482.495-2.132.934.099 2.09.629 3.471 1.581.466-.119 1.101-.183 1.917-.183.852 0 1.491.064 1.918.184.629-.425 1.23-.771 1.805-1.034.584-.261 1.005-.416 1.269-.457l.396-.09c.27.649.434 1.36.496 2.132.076.769.073 1.175-.009 1.216m-5.845 7.82c1.688 0 2.954-.202 3.821-.607.855-.404 1.292-1.238 1.292-2.496 0-.73-.273-1.34-.822-1.828-.278-.263-.613-.425-.989-.486-.375-.061-.949-.061-1.72 0-.769.062-1.298.09-1.582.09-.385 0-.8-.018-1.319-.059-.52-.04-.928-.065-1.223-.078-.294-.009-.609.027-.958.108-.345.082-.629.224-.853.425-.521.469-.79 1.077-.79 1.828 0 1.258.426 2.092 1.28 2.496.85.405 2.113.607 3.802.607h.061m-2.434-4.261c.268 0 .492.133.685.396.192.265.294.588.294.975 0 .385-.102.711-.294.973-.192.265-.417.396-.685.396-.279 0-.522-.131-.716-.396-.192-.262-.294-.588-.294-.973 0-.387.102-.71.294-.975.193-.264.436-.396.716-.396"}}]})(props);
	};
	module.exports.TiSocialGooglePlusCircular = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12.8 13.1l-.4-.3c-.1-.1-.3-.2-.3-.5l.3-.6c.5-.4 1-.8 1-1.7s-.6-1.4-.8-1.6h.7l.7-.4h-2.4c-.6 0-1.4.1-2.1.6-.5.4-.8 1-.8 1.6 0 .9.7 1.9 2 1.9h.4c-.1.1-.1.2-.1.4 0 .4.2.6.4.8-.5 0-1.5.1-2.3.5-.7.4-.9 1-.9 1.4 0 .9.8 1.7 2.5 1.7 2 0 3.1-1.1 3.1-2.2 0-.7-.5-1.1-1-1.6zm-1.6-1.3c-1 0-1.5-1.3-1.5-2.1.1-.4.1-.7.3-.9s.5-.4.8-.4c1 0 1.5 1.3 1.5 2.2 0 .2 0 .6-.3.9-.1.1-.5.3-.8.3zm.1 4.7c-1.3 0-2.1-.6-2.1-1.4 0-.8.8-1.1 1-1.2.5-.2 1.1-.2 1.2-.2h.3c.9.6 1.3 1 1.3 1.6 0 .7-.6 1.2-1.7 1.2zM15 12h-1v-1h1v-1h1v1h1v1h-1v1h-1zM12 21c-5 0-9-4-9-9s4-9 9-9 9 4 9 9-4 9-9 9zm0-16c-3.9 0-7 3.1-7 7s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7z"}}]})(props);
	};
	module.exports.TiSocialGooglePlus = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12.9 13.5l-.7-.5c-.2-.2-.5-.4-.5-.8s.3-.7.6-1c.8-.6 1.7-1.3 1.7-2.8 0-1.5-.9-2.3-1.4-2.7h1.2l1.2-.7h-4.1c-1 0-2.4.2-3.5 1.1-.8.7-1.2 1.7-1.2 2.6 0 1.5 1.2 3.1 3.3 3.1h.6c-.1.2-.2.4-.2.7 0 .6.3 1 .6 1.3-.9.1-2.5.2-3.8.9-1.2.7-1.5 1.7-1.5 2.4 0 1.5 1.4 2.8 4.2 2.8 3.4 0 5.2-1.9 5.2-3.7 0-1.3-.8-1.9-1.7-2.7zm-2.5-2.2c-1.7 0-2.5-2.2-2.5-3.5 0-.5.1-1 .4-1.5.3-.4.9-.7 1.4-.7 1.6 0 2.5 2.2 2.5 3.6 0 .4 0 1-.5 1.4-.3.4-.9.7-1.3.7zm0 7.9c-2.1 0-3.5-1-3.5-2.4s1.3-1.9 1.7-2c.8-.3 1.9-.3 2.1-.3h.5c1.5 1.1 2.1 1.6 2.1 2.6 0 1.2-1 2.1-2.9 2.1zM17 12h-2v-1h2v-1.9l1-.1v2h2v1h-2v2h-1z"}}]})(props);
	};
	module.exports.TiSocialInstagramCircular = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 3c-5 0-9 4-9 9s4 9 9 9 9-4 9-9-4-9-9-9zm0 7c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm2.8-2c0-.7.6-1.2 1.2-1.2s1.2.6 1.2 1.2-.5 1.2-1.2 1.2-1.2-.5-1.2-1.2zm-2.8 11c-3.9 0-7-3.1-7-7h3c0 2.2 1.8 4 4 4s4-1.8 4-4h3c0 3.9-3.1 7-7 7z"}}]})(props);
	};
	module.exports.TiSocialInstagram = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 3h-12c-1.7 0-3 1.3-3 3v12c0 1.7 1.3 3 3 3h12c1.7 0 3-1.3 3-3v-12c0-1.7-1.3-3-3-3zm-6 6c1.7 0 3 1.3 3 3s-1.3 3-3 3-3-1.3-3-3 1.3-3 3-3zm3.8-2c0-.7.6-1.2 1.2-1.2s1.2.6 1.2 1.2-.5 1.2-1.2 1.2-1.2-.5-1.2-1.2zm2.2 12h-12c-.6 0-1-.4-1-1v-6h2c0 2.8 2.2 5 5 5s5-2.2 5-5h2v6c0 .6-.4 1-1 1z"}}]})(props);
	};
	module.exports.TiSocialLastFmCircular = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M12 21c-2.489 0-4.635-.89-6.376-2.646-1.741-1.751-2.624-3.89-2.624-6.354 0-2.489.884-4.633 2.627-6.375 1.74-1.741 3.885-2.625 6.373-2.625 2.466 0 4.604.883 6.354 2.624 1.755 1.742 2.646 3.887 2.646 6.376 0 2.464-.89 4.604-2.644 6.357-1.751 1.754-3.889 2.643-6.356 2.643zm0-16c-1.966 0-3.588.667-4.958 2.04-1.374 1.372-2.042 2.994-2.042 4.96 0 1.944.668 3.562 2.043 4.945 1.372 1.383 2.993 2.055 4.957 2.055 1.943 0 3.56-.673 4.941-2.056 1.386-1.385 2.059-3.002 2.059-4.944 0-1.963-.672-3.585-2.055-4.957-1.383-1.375-3-2.043-4.945-2.043zM14.199 14.333c1.335 0 2-.444 2-1.333 0-.733-.422-1.199-1.267-1.4l-.632-.133c-.354-.089-.534-.277-.534-.566 0-.334.224-.5.666-.5.49 0 .746.188.767.565l.967-.1c-.063-.822-.622-1.233-1.666-1.233-1.134 0-1.699.467-1.699 1.401 0 .665.365 1.088 1.099 1.267l.668.133c.443.11.666.312.666.601 0 .354-.345.532-1.034.532-.844 0-1.398-.411-1.666-1.233l-.334-.967c-.199-.644-.449-1.095-.75-1.35-.3-.255-.771-.384-1.416-.384-.601 0-1.128.223-1.584.667-.456.445-.683 1.033-.683 1.767 0 .688.216 1.239.649 1.649.435.413.95.617 1.55.617.602 0 1.078-.144 1.434-.433l-.299-.834c-.311.312-.679.468-1.101.468-.354 0-.662-.14-.916-.417-.257-.277-.385-.64-.385-1.084 0-.556.139-.961.417-1.217s.594-.383.951-.383c.379 0 .648.1.816.299.167.201.315.512.45.935l.3.967c.356 1.133 1.212 1.699 2.566 1.699"}}]}]})(props);
	};
	module.exports.TiSocialLastFm = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.942 16.182c2.374 0 3.558-.791 3.558-2.373 0-1.304-.749-2.132-2.254-2.49l-1.119-.235c-.637-.159-.951-.495-.951-1.009 0-.594.396-.889 1.186-.889.869 0 1.323.334 1.363 1.006l1.717-.178c-.114-1.463-1.109-2.195-2.962-2.195-2.019 0-3.026.832-3.026 2.495 0 1.182.654 1.935 1.958 2.251l1.188.236c.79.196 1.186.555 1.186 1.068 0 .631-.614.949-1.842.949-1.498 0-2.489-.732-2.962-2.195l-.597-1.721c-.354-1.145-.796-1.947-1.334-2.401-.53-.45-1.367-.683-2.519-.683-1.069 0-2.007.396-2.815 1.188-.811.791-1.217 1.838-1.217 3.142 0 1.223.383 2.203 1.156 2.935.774.733 1.688 1.099 2.756 1.099 1.069 0 1.918-.256 2.55-.77l-.53-1.485c-.554.556-1.211.833-1.96.833-.63 0-1.175-.248-1.628-.744-.455-.492-.686-1.137-.686-1.927 0-.989.247-1.708.743-2.163.497-.455 1.056-.681 1.689-.681.674 0 1.155.177 1.457.53.296.357.56.912.797 1.662l.537 1.721c.632 2.014 2.154 3.024 4.561 3.024"}}]})(props);
	};
	module.exports.TiSocialLinkedinCircular = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M10.033 15.3h-1.6v-5.199h1.6v5.199zm-.8-5.866c-.577 0-.866-.267-.866-.8 0-.223.082-.412.25-.567.166-.155.371-.233.616-.233.577 0 .866.268.866.801s-.288.799-.866.799zm6.734 5.866h-1.633v-2.9c0-.755-.268-1.133-.801-1.133-.422 0-.699.211-.834.633-.043.067-.066.201-.066.4v3h-1.633v-3.533c0-.8-.012-1.355-.033-1.666h1.4l.1.699c.367-.556.9-.833 1.633-.833.557 0 1.006.194 1.35.583.346.389.518.95.518 1.684v3.066zM12 21c-4.963 0-9-4.037-9-9s4.037-9 9-9 9 4.037 9 9-4.037 9-9 9zm0-16c-3.859 0-7 3.141-7 7s3.141 7 7 7 7-3.141 7-7-3.141-7-7-7z"}}]}]})(props);
	};
	module.exports.TiSocialLinkedin = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8 19h-3v-10h3v10zm11 0h-3v-5.342c0-1.392-.496-2.085-1.479-2.085-.779 0-1.273.388-1.521 1.165v6.262h-3s.04-9 0-10h2.368l.183 2h.062c.615-1 1.598-1.678 2.946-1.678 1.025 0 1.854.285 2.487 1.001.637.717.954 1.679.954 3.03v5.647z"}},{"tag":"ellipse","attr":{"cx":"6.5","cy":"6.5","rx":"1.55","ry":"1.5"}}]})(props);
	};
	module.exports.TiSocialPinterestCircular = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M12 21c-4.963 0-9-4.037-9-9s4.037-9 9-9 9 4.037 9 9-4.037 9-9 9zm0-16c-3.859 0-7 3.141-7 7s3.141 7 7 7 7-3.141 7-7-3.141-7-7-7zM12.335 8c-2.468 0-3.712 1.77-3.712 3.244 0 .895.338 1.688 1.063 1.984.119.049.226.002.261-.129l.105-.418c.035-.129.021-.175-.074-.289-.209-.246-.344-.566-.344-1.019 0-1.312.982-2.487 2.558-2.487 1.396 0 2.161.853 2.161 1.99 0 1.498-.662 2.762-1.646 2.762-.543 0-.95-.449-.82-1.001.156-.658.459-1.368.459-1.843 0-.426-.229-.779-.7-.779-.556 0-1.002.574-1.002 1.344 0 .49.166.822.166.822l-.669 2.83c-.198.84-.029 1.87-.015 1.974.008.062.087.077.123.03.052-.067.713-.885.938-1.7.064-.23.366-1.427.366-1.427.18.344.707.646 1.268.646 1.67 0 2.803-1.521 2.803-3.56-.001-1.538-1.306-2.974-3.289-2.974z"}}]}]})(props);
	};
	module.exports.TiSocialPinterest = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12.486 4.771c-4.23 0-6.363 3.033-6.363 5.562 0 1.533.581 2.894 1.823 3.401.205.084.387.004.446-.221l.182-.717c.061-.221.037-.3-.127-.495-.359-.422-.588-.972-.588-1.747 0-2.25 1.683-4.264 4.384-4.264 2.392 0 3.706 1.463 3.706 3.412 0 2.568-1.137 4.734-2.824 4.734-.932 0-1.629-.77-1.405-1.715.268-1.13.786-2.347.786-3.16 0-.729-.392-1.336-1.2-1.336-.952 0-1.718.984-1.718 2.304 0 .841.286 1.409.286 1.409l-1.146 4.852c-.34 1.44-.051 3.206-.025 3.385.013.104.149.131.21.051.088-.115 1.223-1.517 1.607-2.915.111-.396.627-2.445.627-2.445.311.589 1.213 1.108 2.175 1.108 2.863 0 4.804-2.608 4.804-6.103-.003-2.64-2.24-5.1-5.64-5.1z"}}]})(props);
	};
	module.exports.TiSocialSkypeOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8.865 5c.751 0 1.44.202 2.069.609.324-.08.711-.121 1.157-.121 1.846 0 3.418.67 4.717 2.008 1.299 1.339 1.948 2.962 1.948 4.87 0 .466-.051.953-.152 1.461.264.589.396 1.187.396 1.794 0 1.097-.38 2.036-1.142 2.815-.761.781-1.668 1.173-2.725 1.173-.629 0-1.237-.162-1.825-.488-.527.081-.933.122-1.217.122-1.847 0-3.425-.67-4.733-2.009s-1.963-2.962-1.963-4.868c0-.447.051-.902.152-1.37-.364-.609-.547-1.288-.547-2.039 0-1.096.376-2.029 1.126-2.799.75-.772 1.664-1.158 2.739-1.158m3.135 10.53c-.406 0-.729-.061-.975-.183-.263-.142-.445-.284-.547-.425-.243-.447-.376-.681-.396-.7-.081-.243-.202-.447-.364-.609-.203-.14-.406-.213-.61-.213-.284 0-.517.091-.7.274-.183.182-.274.396-.274.639 0 .386.144.801.428 1.248.263.405.629.741 1.096 1.003.648.346 1.45.519 2.404.519.79 0 1.49-.122 2.1-.365.609-.284 1.055-.639 1.339-1.065.304-.467.456-.975.456-1.522 0-.445-.08-.852-.242-1.217-.163-.304-.416-.578-.762-.82-.365-.225-.75-.407-1.156-.548-.689-.204-1.178-.336-1.461-.396-.143-.021-.32-.055-.533-.107l-.41-.106c-.243-.08-.416-.152-.518-.212-.163-.081-.294-.193-.396-.336-.103-.1-.152-.233-.152-.396 0-.243.142-.455.426-.639.265-.203.649-.305 1.156-.305.508 0 .884.092 1.127.273.263.225.456.478.577.762.163.264.295.446.396.547.162.123.355.184.578.184.264 0 .498-.102.699-.306.184-.181.275-.404.275-.669 0-.202-.072-.467-.214-.791-.162-.243-.376-.486-.639-.729-.284-.224-.659-.417-1.127-.579-.485-.143-1.004-.213-1.552-.213-.73 0-1.38.11-1.948.335-.566.2-1.003.505-1.307.911-.305.406-.457.872-.457 1.4 0 .527.143.984.426 1.37.346.405.73.688 1.156.851.488.224 1.076.407 1.766.548.121.021.27.056.441.106l.457.123.319.075c.284.103.517.243.699.427.183.141.274.354.274.639 0 .346-.162.629-.486.853-.364.243-.821.364-1.369.364m-3.135-12.53c-1.609 0-3.053.61-4.174 1.765-1.105 1.134-1.691 2.585-1.691 4.192 0 .832.156 1.619.466 2.348-.047.357-.07.713-.07 1.062 0 2.438.853 4.547 2.532 6.267 1.693 1.732 3.768 2.61 6.164 2.61.254 0 .547-.02.896-.06.69.283 1.409.426 2.146.426 1.588 0 3.025-.614 4.157-1.777 1.117-1.143 1.709-2.6 1.709-4.211 0-.677-.111-1.349-.332-2.004.059-.427.089-.846.089-1.251 0-2.437-.846-4.544-2.513-6.263-1.685-1.735-3.755-2.615-6.152-2.615-.279 0-.546.013-.801.038-.756-.35-1.568-.527-2.426-.527z"}}]})(props);
	};
	module.exports.TiSocialSkype = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.668 13.312c.059-.427.089-.846.089-1.251 0-2.437-.846-4.544-2.513-6.263-1.685-1.735-3.755-2.615-6.152-2.615-.279 0-.546.013-.801.038-.756-.35-1.568-.526-2.426-.526-1.609 0-3.053.61-4.174 1.765-1.105 1.135-1.691 2.585-1.691 4.192 0 .832.156 1.619.466 2.348-.047.357-.07.713-.07 1.062 0 2.438.853 4.547 2.532 6.267 1.693 1.732 3.768 2.61 6.164 2.61.254 0 .547-.02.896-.06.69.283 1.409.426 2.146.426 1.588 0 3.025-.614 4.157-1.777 1.117-1.143 1.709-2.6 1.709-4.211 0-.677-.111-1.349-.332-2.005zm-5.168 2.036c-.284.427-.729.781-1.339 1.065-.609.243-1.31.365-2.1.365-.954 0-1.756-.173-2.404-.519-.467-.262-.833-.598-1.096-1.003-.284-.447-.428-.862-.428-1.248 0-.243.092-.457.274-.639.184-.184.416-.274.7-.274.203 0 .406.072.609.213.162.162.283.366.364.609.021.02.153.253.396.7.102.141.284.283.547.425.245.122.568.183.975.183.548 0 1.005-.121 1.37-.364.324-.224.486-.507.486-.853 0-.284-.092-.498-.274-.639-.183-.184-.415-.324-.699-.427l-.319-.075-.457-.123c-.172-.051-.32-.086-.441-.106-.689-.141-1.277-.324-1.766-.548-.426-.162-.811-.445-1.156-.851-.283-.386-.426-.843-.426-1.37 0-.528.152-.994.457-1.4.304-.406.74-.711 1.308-.913.569-.224 1.219-.334 1.949-.334.548 0 1.066.07 1.552.213.468.162.843.355 1.127.579.263.243.477.486.639.729.142.324.214.589.214.791 0 .265-.092.488-.275.669-.201.204-.436.306-.699.306-.223 0-.416-.061-.578-.184-.102-.101-.233-.283-.396-.547-.121-.284-.314-.537-.577-.762-.243-.182-.619-.273-1.127-.273-.507 0-.892.102-1.156.305-.284.184-.426.396-.426.639 0 .162.05.296.152.396.102.143.232.255.396.336.102.06.274.132.518.212l.41.106c.213.053.391.087.533.107.283.061.771.192 1.461.396.406.141.791.323 1.156.548.346.242.599.517.762.82.162.365.242.771.242 1.217-.002.548-.154 1.056-.458 1.523z"}}]})(props);
	};
	module.exports.TiSocialTumblerCircular = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M14.377 15.59v-1.234c-.399.268-.788.4-1.166.4-.178 0-.377-.057-.6-.166-.134-.09-.211-.189-.234-.301-.066-.133-.1-.422-.1-.867v-1.966h1.834v-1.233h-1.834v-1.967h-1.066c-.089.467-.178.8-.267 1-.11.244-.288.467-.533.666-.245.201-.5.345-.767.434v1.101h.833v2.7c0 .311.044.576.134.799.066.178.199.355.4.533.154.156.377.289.666.4.355.09.666.133.934.133.311 0 .6-.033.866-.1.312-.067.612-.178.9-.332"}},{"tag":"path","attr":{"d":"M12 21c-4.963 0-9-4.037-9-9s4.037-9 9-9 9 4.037 9 9-4.037 9-9 9zm0-16c-3.859 0-7 3.141-7 7s3.141 7 7 7 7-3.141 7-7-3.141-7-7-7z"}}]}]})(props);
	};
	module.exports.TiSocialTumbler = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15.527 17.921v-2.066c-.669.448-1.32.67-1.952.67-.298 0-.631-.094-1.004-.277-.223-.151-.354-.317-.393-.503-.11-.224-.178-.708-.178-1.454v-3.291h3v-2h-3v-3.356h-1.772c-.149.782-.298 1.338-.448 1.673-.184.41-.482.782-.891 1.116-.411.337-.837.577-1.285.725v1.842h1.396v4.521c0 .52.073.964.223 1.337.111.298.334.595.671.893.259.262.631.484 1.115.67.595.15 1.114.223 1.562.223.52 0 1.004-.056 1.45-.167.521-.112 1.023-.298 1.506-.556"}}]})(props);
	};
	module.exports.TiSocialTwitterCircular = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M15.279 10.283c.358-.221.597-.521.713-.904-.349.186-.697.312-1.045.383-.312-.336-.708-.507-1.182-.507-.464 0-.855.163-1.175.479-.317.318-.478.706-.478 1.158 0 .137.017.26.052.364-1.368-.048-2.499-.614-3.391-1.706-.151.267-.227.539-.227.82 0 .578.244 1.036.73 1.373-.277-.023-.521-.094-.73-.209 0 .413.121.758.365 1.062.243.3.557.492.939.573-.139.036-.285.053-.435.053-.14 0-.237-.012-.296-.037.104.337.296.609.574.818.277.21.597.32.957.33-.591.465-1.269.694-2.035.694-.188 0-.32-.002-.4-.017.754.489 1.594.733 2.521.733.951 0 1.792-.241 2.522-.723.73-.479 1.271-1.07 1.617-1.767.348-.695.521-1.419.521-2.174v-.209c.336-.253.609-.538.818-.854-.298.133-.611.222-.935.267zM12 21c-2.49 0-4.635-.89-6.376-2.646-1.741-1.751-2.624-3.889-2.624-6.354 0-2.488.884-4.634 2.627-6.375 1.74-1.741 3.884-2.625 6.373-2.625 2.466 0 4.604.883 6.354 2.624 1.756 1.742 2.646 3.888 2.646 6.376 0 2.465-.889 4.604-2.644 6.357-1.751 1.753-3.889 2.643-6.356 2.643zm0-16c-1.966 0-3.588.667-4.958 2.04-1.375 1.372-2.042 2.994-2.042 4.96 0 1.944.668 3.562 2.043 4.945 1.372 1.383 2.993 2.055 4.957 2.055 1.943 0 3.56-.673 4.942-2.057 1.385-1.384 2.058-3.002 2.058-4.943 0-1.963-.672-3.585-2.055-4.957-1.383-1.375-3-2.043-4.945-2.043z"}}]}]})(props);
	};
	module.exports.TiSocialTwitter = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.89 7.012c.808-.496 1.343-1.173 1.605-2.034-.786.417-1.569.703-2.351.861-.703-.756-1.593-1.14-2.66-1.14-1.043 0-1.924.366-2.643 1.078-.715.717-1.076 1.588-1.076 2.605 0 .309.039.585.117.819-3.076-.105-5.622-1.381-7.628-3.837-.34.601-.51 1.213-.51 1.846 0 1.301.549 2.332 1.645 3.089-.625-.053-1.176-.211-1.645-.47 0 .929.273 1.705.82 2.388.549.676 1.254 1.107 2.115 1.291-.312.08-.641.118-.979.118-.312 0-.533-.026-.664-.083.23.757.664 1.371 1.291 1.841.625.472 1.344.721 2.152.743-1.332 1.045-2.855 1.562-4.578 1.562-.422 0-.721-.006-.902-.038 1.697 1.102 3.586 1.649 5.676 1.649 2.139 0 4.029-.542 5.674-1.626 1.645-1.078 2.859-2.408 3.639-3.974.784-1.564 1.172-3.192 1.172-4.892v-.468c.758-.57 1.371-1.212 1.84-1.921-.68.293-1.383.492-2.11.593z"}}]})(props);
	};
	module.exports.TiSocialVimeoCircular = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M14.463 9.141c-.512 0-.988.238-1.43.715-.311.312-.5.678-.566 1.101.207-.131.387-.196.541-.196.159 0 .29.07.393.212.199.278.188.629-.033 1.051-.489.934-.846 1.4-1.066 1.4-.156 0-.356-.522-.602-1.567-.043-.155-.088-.378-.133-.667-.045-.288-.088-.538-.133-.75-.045-.211-.111-.428-.2-.649s-.2-.384-.333-.483c-.094-.069-.202-.104-.327-.104l-.173.021c-.289.067-.623.245-1 .534-.379.288-.689.566-.934.833l-.334.4.301.399.166-.133c.066-.045.189-.101.367-.167l.191-.043c.069 0 .116.025.143.076.066.089.271.717.615 1.884.346 1.167.562 1.839.65 2.017.156.311.367.55.633.717.13.08.271.121.427.121.165 0 .346-.047.54-.139.601-.399 1.289-1.066 2.067-2 .778-.933 1.255-1.922 1.433-2.966.156-.911-.11-1.434-.799-1.567-.138-.035-.272-.05-.404-.05zM12 21c-4.963 0-9-4.037-9-9s4.037-9 9-9 9 4.037 9 9-4.037 9-9 9zm0-16c-3.859 0-7 3.141-7 7s3.141 7 7 7 7-3.141 7-7-3.141-7-7-7z"}}]}]})(props);
	};
	module.exports.TiSocialVimeo = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18.92 8.776c-.329 1.929-1.211 3.758-2.649 5.48-1.436 1.725-2.71 2.957-3.819 3.695-.699.331-1.293.34-1.786.034-.493-.31-.883-.751-1.169-1.325-.165-.328-.565-1.569-1.202-3.728-.636-2.155-1.017-3.315-1.139-3.479-.083-.163-.288-.184-.616-.061-.33.122-.555.226-.678.309-.123.081-.226.165-.308.245l-.554-.737.616-.74c.452-.492 1.026-1.007 1.724-1.54.7-.534 1.314-.862 1.848-.987.371-.08.679-.028.924.156.247.184.452.484.616.894.165.409.289.811.369 1.199.083.392.165.854.248 1.387.081.534.164.945.246 1.232.451 1.93.821 2.896 1.109 2.896.41 0 1.067-.863 1.971-2.59.41-.779.432-1.426.062-1.941-.369-.512-.943-.522-1.724-.029.123-.78.472-1.456 1.046-2.031 1.026-1.109 2.157-1.521 3.388-1.234 1.273.247 1.765 1.213 1.477 2.895z"}}]})(props);
	};
	module.exports.TiSocialYoutubeCircular = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.1","id":"Layer_1","viewBox":"0 0 24 24"},"child":[{"tag":"polygon","attr":{"points":"8.48,13.14 9.21,13.14 9.21,16.75 9.91,16.75 9.91,13.14 10.64,13.14 10.64,12.53 8.48,12.53 "}},{"tag":"path","attr":{"d":"M12.17,16c-0.12,0.14-0.53,0.42-0.53,0.02v-2.39h-0.62v2.61c0,0.79,0.79,0.58,1.16,0.17v0.34h0.62v-3.12h-0.62V16H12.17z"}},{"tag":"path","attr":{"d":"M14.48,13.61c-0.36,0-0.59,0.27-0.59,0.27v-1.36h-0.63v4.23h0.63v-0.24c0,0,0.21,0.28,0.59,0.28c0.33,0,0.58-0.29,0.58-0.69\r\n\tc0,0,0-1.26,0-1.73S14.84,13.61,14.48,13.61z M14.41,16.02c0,0.23-0.16,0.34-0.37,0.25c-0.05-0.02-0.1-0.06-0.15-0.11v-1.94\r\n\tc0.04-0.04,0.09-0.07,0.13-0.1c0.22-0.11,0.39,0.06,0.39,0.29L14.41,16.02L14.41,16.02z"}},{"tag":"path","attr":{"d":"M16.72,15.86c0,0.24-0.13,0.4-0.28,0.41c-0.16,0.01-0.32-0.12-0.32-0.41v-0.59h1.19v-0.8c0-0.29-0.11-0.51-0.26-0.66\r\n\tc-0.17-0.16-0.4-0.24-0.63-0.24c-0.22,0-0.45,0.07-0.63,0.21c-0.19,0.15-0.31,0.38-0.31,0.69v1.4c0,0.28,0.09,0.5,0.23,0.66\r\n\tc0.17,0.18,0.4,0.28,0.64,0.29c0.29,0.01,0.6-0.11,0.78-0.36c0.11-0.15,0.18-0.35,0.18-0.59v-0.16h-0.59\r\n\tC16.72,15.71,16.72,15.76,16.72,15.86z M16.12,14.47c0-0.17,0.1-0.37,0.29-0.37s0.31,0.18,0.31,0.37s0,0.32,0,0.32h-0.6\r\n\tC16.12,14.78,16.12,14.64,16.12,14.47z"}},{"tag":"path","attr":{"d":"M12.97,3c-4.97,0-9,4.03-9,9s4.03,9,9,9s9-4.03,9-9S17.94,3,12.97,3z M14.55,6.37h0.8v2.68c0,0.17,0.08,0.17,0.11,0.17\r\n\tc0.12,0,0.3-0.13,0.39-0.22V6.36h0.8V9.9h-0.8V9.59c-0.11,0.1-0.22,0.18-0.33,0.24c-0.15,0.08-0.29,0.11-0.43,0.11\r\n\tc-0.18,0-0.31-0.06-0.41-0.17c-0.09-0.11-0.13-0.28-0.13-0.49V6.37z M12,7.3c0-0.55,0.45-1,1-1s1,0.45,1,1V9c0,0.55-0.45,1-1,1\r\n\ts-1-0.45-1-1V7.3z M9.92,5.15l0.48,1.76l0.49-1.76h0.91l-0.94,2.78V9.9H9.97V7.93L9.01,5.15H9.92z M17.82,17.69\r\n\tc-0.51,0.5-4.83,0.51-4.83,0.51s-4.31-0.01-4.83-0.51c-0.51-0.5-0.51-2.99-0.51-3.01c0-0.01,0-2.5,0.51-3.01\r\n\tc0.51-0.5,4.83-0.51,4.83-0.51s4.31,0.01,4.83,0.51c0.51,0.5,0.52,2.99,0.52,3.01C18.34,14.68,18.34,17.18,17.82,17.69z"}},{"tag":"path","attr":{"d":"M12.98,9.35c0.17,0,0.25-0.1,0.26-0.26v-1.9c0-0.13-0.13-0.24-0.25-0.24s-0.25,0.1-0.25,0.24v1.9\r\n\tC12.74,9.24,12.81,9.34,12.98,9.35z"}}]})(props);
	};
	module.exports.TiSocialYoutube = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22.8 8.6c-.2-1.5-.4-2.6-1-3-.6-.5-5.8-.6-9.8-.6s-9.2.1-9.8.6c-.6.4-.8 1.5-1 3s-.2 2.4-.2 3.4 0 1.9.2 3.4.4 2.6 1 3c.6.5 5.8.6 9.8.6 4 0 9.2-.1 9.8-.6.6-.4.8-1.5 1-3s.2-2.4.2-3.4 0-1.9-.2-3.4zm-12.8 7v-7.2l6 3.6-6 3.6z"}}]})(props);
	};
	module.exports.TiSortAlphabeticallyOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M5.618 14h2.764l-1.382-2.764zM21 14l2.4-3.2c.686-.915.795-2.119.284-3.142-.512-1.023-1.54-1.658-2.684-1.658h-6c-1.654 0-3 1.346-3 3 0 .77.295 1.469.774 2h-.274c-.368 0-.708.107-1.005.281l-1.811-3.623c-.498-.995-1.527-1.614-2.684-1.614s-2.186.619-2.684 1.614l-4 8c-.358.717-.416 1.53-.163 2.291s.788 1.376 1.504 1.735c.414.207.879.316 1.342.316 1.143 0 2.171-.635 2.684-1.657l.171-.343h2.291l.171.342c.512 1.023 1.54 1.658 2.684 1.658.464 0 .928-.109 1.342-.316.243-.122.455-.282.652-.458.54.488 1.246.774 2.006.774h6c1.654 0 3-1.346 3-3s-1.346-3-3-3zm-9.553 3.895c-.143.071-.296.105-.446.105-.368 0-.721-.203-.896-.553l-.723-1.447h-4.764l-.724 1.447c-.175.35-.528.553-.895.553-.15 0-.303-.034-.446-.106-.494-.247-.694-.848-.447-1.342l4-8c.169-.338.532-.508.894-.508s.725.169.895.508l4 8c.247.495.046 1.095-.448 1.343zm1.053-3.895c-.552 0-1-.448-1-1s.448-1 1-1h1c.552 0 1 .448 1 1s-.448 1-1 1h-1zm8.5 4h-6c-.379 0-.725-.214-.895-.553s-.132-.744.095-1.047l4.8-6.4h-4c-.552 0-1-.448-1-1s.448-1 1-1h6c.379 0 .725.214.895.553s.132.744-.095 1.047l-4.8 6.4h4c.552 0 1 .448 1 1s-.448 1-1 1z"}}]}]})(props);
	};
	module.exports.TiSortAlphabetically = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10.895 16.553l-4-8c-.339-.678-1.45-.678-1.789 0l-4 8c-.247.494-.047 1.095.447 1.342.495.248 1.095.046 1.342-.447l.723-1.448h4.764l.724 1.447c.175.351.528.553.895.553.15 0 .303-.034.446-.105.494-.248.695-.848.448-1.342zm-6.277-2.553l1.382-2.764 1.382 2.764h-2.764zM22 18h-6c-.379 0-.725-.214-.895-.553s-.132-.744.095-1.047l4.8-6.4h-4c-.552 0-1-.448-1-1s.448-1 1-1h6c.379 0 .725.214.895.553s.132.744-.095 1.047l-4.8 6.4h4c.552 0 1 .448 1 1s-.448 1-1 1zM14 14h-2c-.552 0-1-.448-1-1s.448-1 1-1h2c.552 0 1 .448 1 1s-.448 1-1 1z"}}]})(props);
	};
	module.exports.TiSortNumericallyOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M23.292 12.134c.138-.445.208-.91.208-1.384 0-2.619-2.131-4.75-4.75-4.75-1.396 0-2.685.61-3.573 1.632l-.056-.067c-.973-.974-2.349-1.533-3.776-1.533-1.422 0-2.794.556-3.77 1.525-.264-.431-.644-.813-1.122-1.108-.474-.294-1.032-.449-1.613-.449-.482 0-.955.109-1.369.316l-1.406.747c-1.442.721-2.051 2.526-1.313 4.002.272.543.714.982 1.248 1.272v4.663c0 1.654 1.346 3 3 3 .766 0 1.458-.297 1.989-.771.54.487 1.25.771 2.011.771h5c.778 0 1.479-.305 2.01-.795.796.5 1.731.795 2.74.795 2.895 0 5.25-2.355 5.25-5.25 0-.922-.25-1.825-.708-2.616zm-17.292 4.866c0 .552-.448 1-1 1s-1-.448-1-1v-6.382c-.144.072-.306.106-.471.106-.401 0-.813-.203-.988-.553-.247-.494-.031-1.095.463-1.342l1.361-.724c.141-.07.307-.105.475-.105.199 0 .4.05.561.149.294.183.599.504.599.851v8zm8 1h-5c-.404 0-.769-.244-.924-.617-.155-.374-.069-.804.217-1.09l4-4c.254-.254.394-.591.394-.95 0-.358-.14-.695-.394-.949s-.601-.381-.949-.381-.696.127-.952.382c-.252.252-.392.589-.392.948 0 .552-.448 1-1 1s-1-.448-1-1c0-.894.348-1.733.98-2.364.632-.631 1.498-.947 2.364-.947s1.731.316 2.363.948c.632.631.979 1.471.979 2.363 0 .893-.348 1.733-.979 2.364l-2.293 2.293h2.586c.552 0 1 .448 1 1s-.448 1-1 1zm4.75 0c-1.792 0-3.25-1.458-3.25-3.25 0-.552.448-1 1-1s1 .448 1 1c0 .689.561 1.25 1.25 1.25s1.25-.561 1.25-1.25-.561-1.25-1.25-1.25c-.552 0-1-.448-1-1s.448-1 1-1c.414 0 .75-.336.75-.75s-.336-.75-.75-.75c-.281 0-.536.155-.665.404-.178.343-.527.54-.889.54-.155 0-.312-.036-.459-.112-.491-.254-.682-.857-.428-1.348.475-.915 1.41-1.484 2.441-1.484 1.516 0 2.75 1.233 2.75 2.75 0 .611-.207 1.17-.545 1.627.639.594 1.045 1.434 1.045 2.373 0 1.792-1.458 3.25-3.25 3.25z"}}]})(props);
	};
	module.exports.TiSortNumerically = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M4 18c-.552 0-1-.448-1-1v-6.382l-.553.276c-.495.248-1.095.046-1.342-.447-.247-.494-.046-1.094.448-1.342l2-1c.31-.155.678-.139.973.044.294.183.474.504.474.851v8c0 .552-.448 1-1 1zM13 18h-5c-.404 0-.769-.244-.924-.617-.155-.374-.069-.804.217-1.09l4-4c.254-.254.394-.591.394-.95 0-.358-.14-.695-.394-.949-.508-.508-1.39-.508-1.9.001-.253.252-.393.589-.393.948 0 .552-.448 1-1 1s-1-.448-1-1c0-.894.348-1.733.98-2.364 1.265-1.263 3.464-1.263 4.727.001.632.631.979 1.471.979 2.363 0 .893-.348 1.733-.979 2.364l-2.293 2.293h2.586c.552 0 1 .448 1 1s-.448 1-1 1zM20.955 12.377c.338-.457.545-1.016.545-1.627 0-1.517-1.234-2.75-2.75-2.75-1.031 0-1.966.569-2.44 1.484-.254.49-.063 1.094.428 1.348.49.254 1.094.062 1.348-.428.128-.249.383-.404.664-.404.414 0 .75.336.75.75s-.336.75-.75.75c-.552 0-1 .448-1 1s.448 1 1 1c.689 0 1.25.561 1.25 1.25s-.561 1.25-1.25 1.25-1.25-.561-1.25-1.25c0-.552-.448-1-1-1s-1 .448-1 1c0 1.792 1.458 3.25 3.25 3.25s3.25-1.458 3.25-3.25c0-.939-.406-1.779-1.045-2.373z"}}]})(props);
	};
	module.exports.TiSpannerOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"circle","attr":{"cx":"8","cy":"16","r":"1"}},{"tag":"path","attr":{"d":"M20.733 4.657c-.392-.378-1.013-.377-1.399.009.387-.386.388-1.008.01-1.4-1.078-.792-2.405-1.266-3.844-1.266-3.59 0-6.5 2.91-6.5 6.5l.031.379c-.337.239-2.893 2.147-4.258 3.301-1.135.99-1.773 2.375-1.773 3.82 0 2.757 2.243 5 5 5 1.465 0 2.854-.65 3.811-1.784 1.173-1.375 3.08-3.923 3.317-4.229l.372.013c3.59 0 6.5-2.91 6.5-6.5 0-1.44-.474-2.766-1.267-3.843zm-12.733 14.343c-1.656 0-3-1.343-3-3 0-.92.423-1.732 1.064-2.292 2.368-2.002 3.617-2.748 5.115-4.015-.105-.382-.179-.777-.179-1.193 0-2.485 2.015-4.5 4.5-4.5.47 0 .914.092 1.339.226l-2.839 2.774.5 2.5 2.5.5 2.805-2.741c.115.396.195.807.195 1.241 0 2.485-2.015 4.5-4.5 4.5-.416 0-.811-.074-1.193-.18-1.267 1.498-2.013 2.748-4.024 5.105-.551.652-1.363 1.075-2.283 1.075zm11.384-12.729l-2.705 2.645-1.329-.266-.263-1.314 2.726-2.663c.651.393 1.19.939 1.571 1.598z"}}]}]})(props);
	};
	module.exports.TiSpanner = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.285 7.119c-.05-.168-.184-.299-.354-.344-.172-.047-.352.003-.477.126l-2.616 2.557-1.914-.383-.381-1.907 2.645-2.585c.126-.123.178-.303.137-.474s-.168-.308-.336-.361c-.531-.166-1.018-.248-1.489-.248-2.757 0-5 2.243-5 5 0 .323.038.65.118 1.01-.562.463-1.096.862-1.701 1.314-.865.646-1.845 1.377-3.182 2.506-.785.686-1.235 1.659-1.235 2.67 0 1.93 1.57 3.5 3.5 3.5 1.021 0 1.993-.456 2.662-1.25 1.149-1.347 1.891-2.336 2.544-3.209.442-.591.832-1.111 1.283-1.66.36.081.688.119 1.011.119 2.757 0 5-2.243 5-5 0-.437-.068-.875-.215-1.381zm-12.285 9.881c-.553 0-1-.447-1-1s.447-1 1-1 1 .447 1 1-.447 1-1 1z"}}]})(props);
	};
	module.exports.TiSpiral = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 11.8c1-.4.7-1.8 0-2.4-1.1-.9-2.7-.4-3.4.8-1.5 2.4.9 5 3.4 4.9 2.7-.2 4.3-2.9 3.7-5.4-.7-3-3.9-4.5-6.7-3.6-2.6.8-4.2 3.5-4 6.2.3 3 2.6 5.4 5.5 5.9 2.8.5 5.7-.8 7.2-3.2.7-1.1 1.2-2.4 1.2-3.8 0-.5.5-1 1.1-.9.8 0 1 .8.9 1.4-.4 4.7-4.5 8.6-9.3 8.6-5.9 0-10.5-6.2-8-11.8 2.5-5.4 10.3-6.5 13.3-1.2 1.5 2.5 1.2 5.8-.9 7.9-2 2-5.3 2.4-7.7.7-2.2-1.6-2.9-4.9-1.1-7.2 1.7-2.3 5.5-2.4 7 .2 1.1 1.9 0 5.2-2.5 4.9-1.6 0-3-1.7-2.1-3.2.6-.9 1.9-.6 2.3.1.2.8.1 1.1.1 1.1z"}}]})(props);
	};
	module.exports.TiStarFullOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3.1 11.3l3.6 3.3-1 4.6c-.1.6.1 1.2.6 1.5.2.2.5.3.8.3.2 0 .4 0 .6-.1 0 0 .1 0 .1-.1l4.1-2.3 4.1 2.3s.1 0 .1.1c.5.2 1.1.2 1.5-.1.5-.3.7-.9.6-1.5l-1-4.6c.4-.3 1-.9 1.6-1.5l1.9-1.7.1-.1c.4-.4.5-1 .3-1.5s-.6-.9-1.2-1h-.1l-4.7-.5-1.9-4.3s0-.1-.1-.1c-.1-.7-.6-1-1.1-1-.5 0-1 .3-1.3.8 0 0 0 .1-.1.1l-1.9 4.3-4.7.5h-.1c-.5.1-1 .5-1.2 1-.1.6 0 1.2.4 1.6z"}}]})(props);
	};
	module.exports.TiStarHalfOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M3.1 11.3l3.6 3.3-1 4.6c-.1.6.1 1.2.6 1.5.2.2.5.3.8.3.2 0 .4 0 .6-.1 0 0 .1 0 .1-.1l4.1-2.3 4.1 2.3s.1 0 .1.1c.5.2 1.1.2 1.5-.1.5-.3.7-.9.6-1.5l-1-4.6c.4-.3 1-.9 1.6-1.5l1.9-1.7.1-.1c.4-.4.5-1 .3-1.5s-.6-.9-1.2-1h-.1l-4.7-.5-1.9-4.3s0-.1-.1-.1c-.1-.7-.6-1-1.1-1-.5 0-1 .3-1.3.8 0 0 0 .1-.1.1l-1.9 4.3-4.7.5h-.1c-.5.1-1 .5-1.2 1-.1.6 0 1.2.4 1.6zm8.9 5v-10.5l1.7 3.8c.1.3.5.5.8.6l4.2.5-3.1 2.8c-.3.2-.4.6-.3 1 0 .2.5 2.2.8 4.1l-3.6-2.1c-.2-.2-.3-.2-.5-.2z"}}]})(props);
	};
	module.exports.TiStarHalf = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.5 4.3c-.9 1.9-2.2 4.8-2.2 4.8s-3.1.4-5.2.6c-.2 0-.4.2-.4.3-.1.2 0 .4.1.5 1.6 1.4 3.9 3.6 3.9 3.6s-.6 3.1-1.1 5.2c0 .2 0 .4.2.5.2.2.4.2.6.1 1.8-1 4.6-2.6 4.6-2.6v-13.3c-.2 0-.4.2-.5.3z"}}]})(props);
	};
	module.exports.TiStarOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.855 20.966c-.224 0-.443-.05-.646-.146l-.104-.051-4.107-2.343-4.107 2.344-.106.053c-.488.228-1.085.174-1.521-.143-.469-.34-.701-.933-.586-1.509l.957-4.642-1.602-1.457-1.895-1.725-.078-.082c-.375-.396-.509-.97-.34-1.492.173-.524.62-.912 1.16-1.009l.102-.018 4.701-.521 1.946-4.31.06-.11c.262-.473.764-.771 1.309-.771.543 0 1.044.298 1.309.77l.06.112 1.948 4.312 4.701.521.104.017c.539.1.986.486 1.158 1.012.17.521.035 1.098-.34 1.494l-.078.078-3.498 3.184.957 4.632c.113.587-.118 1.178-.59 1.519-.252.182-.556.281-.874.281zm-8.149-6.564c-.039.182-.466 2.246-.845 4.082l3.643-2.077c.307-.175.684-.175.99 0l3.643 2.075-.849-4.104c-.071-.346.045-.705.308-.942l3.1-2.822-4.168-.461c-.351-.039-.654-.26-.801-.584l-1.728-3.821-1.726 3.821c-.146.322-.45.543-.801.584l-4.168.461 3.1 2.822c.272.246.384.617.302.966z"}}]})(props);
	};
	module.exports.TiStar = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9.362 9.158l-5.268.584c-.19.023-.358.15-.421.343s0 .394.14.521c1.566 1.429 3.919 3.569 3.919 3.569-.002 0-.646 3.113-1.074 5.19-.036.188.032.387.196.506.163.119.373.121.538.028 1.844-1.048 4.606-2.624 4.606-2.624l4.604 2.625c.168.092.378.09.541-.029.164-.119.232-.318.195-.505l-1.071-5.191 3.919-3.566c.14-.131.202-.332.14-.524s-.23-.319-.42-.341c-2.108-.236-5.269-.586-5.269-.586l-2.183-4.83c-.082-.173-.254-.294-.456-.294s-.375.122-.453.294l-2.183 4.83z"}}]})(props);
	};
	module.exports.TiStarburstOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.556 11.169l-1.849-1.232.984-1.993c.148-.3.137-.654-.03-.943-.168-.29-.468-.477-.802-.498l-2.218-.143-.144-2.218c-.02-.334-.208-.635-.497-.802-.29-.167-.645-.18-.943-.03l-1.991.985-1.233-1.849c-.371-.557-1.293-.557-1.664 0l-1.234 1.848-1.992-.984c-.299-.15-.654-.137-.943.03-.29.167-.477.468-.498.802l-.143 2.217-2.218.143c-.334.022-.635.209-.802.498s-.179.644-.03.943l.984 1.993-1.849 1.233c-.278.186-.445.498-.445.832s.167.646.445.832l1.85 1.233-.985 1.992c-.148.3-.137.654.03.943s.468.477.802.498l2.218.143.143 2.218c.021.333.208.634.498.801s.642.179.943.031l1.992-.985 1.233 1.849c.186.278.498.445.832.445s.646-.167.832-.445l1.233-1.849 1.991.985c.299.148.653.136.943-.03.29-.167.477-.468.498-.802l.143-2.217 2.219-.144c.334-.021.635-.208.802-.498s.179-.644.03-.943l-.984-1.992 1.849-1.233c.278-.186.445-.498.445-.832 0-.334-.167-.647-.445-.832zm-4.032 2.997l.71 1.435-1.6.104c-.502.033-.901.432-.934.934l-.103 1.598-1.435-.709c-.45-.224-.996-.077-1.275.342l-.887 1.33-.889-1.333c-.191-.287-.508-.445-.833-.445-.149 0-.3.033-.442.104l-1.436.709-.103-1.598c-.032-.501-.432-.901-.934-.934l-1.596-.103.71-1.435c.223-.451.076-.997-.342-1.275l-1.333-.889 1.332-.888c.418-.279.564-.825.342-1.275l-.71-1.436 1.6-.103c.502-.033.901-.432.934-.934l.103-1.598 1.435.709c.448.221.996.076 1.275-.342l.887-1.331.889 1.333c.279.418.826.563 1.275.342l1.436-.71.104 1.599c.033.501.433.9.934.933l1.598.103-.709 1.437c-.223.451-.076.996.342 1.275l1.332.888-1.333.889c-.42.277-.566.823-.344 1.274z"}}]})(props);
	};
	module.exports.TiStarburst = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.064 10.109l1.179-2.387c.074-.149.068-.327-.015-.471-.083-.145-.234-.238-.401-.249l-2.656-.172-.172-2.656c-.011-.167-.104-.317-.249-.401-.145-.084-.322-.09-.472-.015l-2.385 1.18-1.477-2.215c-.186-.278-.646-.278-.832 0l-1.477 2.215-2.385-1.18c-.151-.075-.327-.069-.472.015-.145.083-.238.234-.249.401l-.171 2.656-2.657.171c-.167.011-.318.104-.401.249-.084.145-.089.322-.015.472l1.179 2.386-2.214 1.477c-.139.093-.223.249-.223.416s.083.323.223.416l2.215 1.477-1.18 2.386c-.074.15-.068.327.015.472.083.144.234.238.401.248l2.656.171.171 2.657c.011.167.104.317.249.401.144.083.32.088.472.015l2.386-1.179 1.477 2.214c.093.139.249.223.416.223s.323-.083.416-.223l1.477-2.214 2.386 1.179c.15.073.327.068.472-.015s.238-.234.249-.401l.171-2.656 2.656-.172c.167-.011.317-.104.401-.249.083-.145.089-.322.015-.472l-1.179-2.385 2.214-1.478c.139-.093.223-.249.223-.416s-.083-.323-.223-.416l-2.214-1.475z"}}]})(props);
	};
	module.exports.TiStopwatch = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M19.414 8.902c.104-.048.206-.108.293-.195l.5-.5c.391-.391.391-1.023 0-1.414s-1.023-.391-1.414 0l-.5.5-.115.173c-1.387-1.312-3.188-2.19-5.189-2.41l.011-.056v-1h1c.55 0 1-.45 1-1s-.45-1-1-1h-4c-.55 0-1 .45-1 1s.45 1 1 1h1v1l.012.057c-4.506.492-8.012 4.307-8.012 8.943 0 4.971 4.029 9 9 9s9-4.029 9-9c0-1.894-.588-3.648-1.586-5.098zm-7.414 12.098c-3.859 0-7-3.14-7-7s3.141-7 7-7 7 3.14 7 7-3.141 7-7 7zM13 13v-2c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1h-2zM12 8c-3.312 0-6 2.688-6 6s2.688 6 6 6 6-2.688 6-6-2.688-6-6-6zm0 11c-2.757 0-5-2.243-5-5s2.243-5 5-5 5 2.243 5 5-2.243 5-5 5z"}}]}]})(props);
	};
	module.exports.TiSupport = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 3.5c-4.688 0-8.5 3.812-8.5 8.5s3.812 8.5 8.5 8.5 8.5-3.812 8.5-8.5-3.812-8.5-8.5-8.5zm6.5 8.5c0 1.064-.264 2.066-.718 2.956l-1.931-1.931c.088-.332.147-.674.147-1.025 0-.355-.062-.693-.147-1.021l1.932-1.932c.455.889.717 1.891.717 2.953zm-13 0c0-1.064.264-2.066.718-2.956l1.933 1.933c-.086.33-.147.668-.147 1.022 0 .353.062.69.147 1.021l-1.934 1.934c-.455-.89-.717-1.892-.717-2.954zm3.068-2.02l-1.775-1.775 1.414-1.414 1.775 1.775c-.584.345-1.068.83-1.414 1.414zm-1.777 5.813l1.773-1.773c.17.289.362.564.605.809s.52.438.807.607l-1.771 1.771-1.414-1.414zm3.795-2.379c-.377-.378-.585-.88-.584-1.414 0-1.104.896-2 1.998-2 1.104 0 2 .896 2 2.001.001.533-.207 1.035-.584 1.412-.755.757-2.073.757-2.83.001zm6.623-5.207l-1.775 1.775c-.345-.586-.828-1.069-1.412-1.416l1.773-1.773 1.414 1.414zm-2.378 6.619c.241-.242.435-.518.604-.803l1.771 1.771-1.414 1.414-1.772-1.772c.291-.17.567-.366.811-.61zm.125-8.608l-1.933 1.932c-.328-.088-.668-.15-1.023-.15s-.693.062-1.021.148l-1.932-1.932c.889-.455 1.891-.717 2.953-.717 1.064.001 2.066.265 2.956.719zm-5.912 11.564l1.933-1.933c.332.088.672.149 1.023.149s.691-.062 1.021-.147l1.932 1.932c-.889.455-1.891.717-2.953.717-1.064 0-2.066-.264-2.956-.718z"}}]})(props);
	};
	module.exports.TiTabsOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 4h-10c-1.104 0-2 .896-2 2v2h-1c-1.104 0-2 .896-2 2v9c0 1.104.896 2 2 2h9c1.104 0 2-.896 2-2v-1h2c1.104 0 2-.896 2-2v-10c0-1.104-.896-2-2-2zm-13 15v-9h8.5c.275 0 .5.225.5.5v8.5h-9zm13-3h-3v-5.5c0-.827-.673-1.5-1.5-1.5h-5.5v-3h10v10z"}}]})(props);
	};
	module.exports.TiTag = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 4c1.279 0 2.559.488 3.535 1.465l3.465 3.535 5 5-7 7-5.498-5.498c-.037.033-3.037-2.967-3.037-2.967-1.953-1.953-1.953-5.119 0-7.07.976-.977 2.256-1.465 3.535-1.465m0-2c-1.87 0-3.628.729-4.949 2.051-1.322 1.32-2.051 3.078-2.051 4.948s.729 3.628 2.051 4.95l3 3c.107.107.227.201.35.279l5.187 5.186c.391.391.9.586 1.413.586s1.022-.195 1.414-.586l7-7c.78-.781.78-2.047 0-2.828l-5-5-3.45-3.521c-1.337-1.336-3.095-2.065-4.965-2.065zM9 7.498c.829 0 1.5.672 1.5 1.502s-.671 1.498-1.5 1.498-1.5-.668-1.5-1.498.671-1.502 1.5-1.502m0-1c-1.379 0-2.5 1.122-2.5 2.502 0 1.377 1.121 2.498 2.5 2.498s2.5-1.121 2.5-2.498c0-1.38-1.121-2.502-2.5-2.502z"}}]})(props);
	};
	module.exports.TiTags = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M21.422 9.594l-6.465-6.535c-1.329-1.33-3.087-2.059-4.957-2.059s-3.628.729-4.95 2.051c-1.416 1.414-2.127 3.356-2.027 5.314-.662 1.085-1.023 2.33-1.023 3.634 0 1.87.729 3.628 2.051 4.95l3.053 2.984 3.482 3.48c.391.392.902.587 1.414.587s1.023-.195 1.414-.586l7-7c.778-.778.782-2.038.008-2.82l-.093-.094 1.085-1.086c.778-.778.782-2.038.008-2.82zm-9.422 12.406l-3.498-3.497-3.037-2.968c-1.953-1.953-1.953-5.119 0-7.07.976-.977 2.256-1.465 3.535-1.465s2.559.488 3.535 1.465l6.465 6.535-7 7zm1.957-14.941c-1.329-1.33-3.087-2.059-4.957-2.059-1.276 0-2.497.347-3.565.982.241-.55.579-1.067 1.03-1.518.976-.976 2.256-1.464 3.535-1.464s2.559.488 3.535 1.465l6.465 6.535-1.078 1.078-4.965-5.019zM9 10.499c.83 0 1.5.672 1.5 1.501 0 .83-.67 1.499-1.5 1.499s-1.5-.669-1.5-1.499c0-.829.67-1.501 1.5-1.501m0-1c-1.378 0-2.5 1.122-2.5 2.501 0 1.378 1.122 2.499 2.5 2.499s2.5-1.121 2.5-2.499c0-1.379-1.122-2.501-2.5-2.501z"}}]}]})(props);
	};
	module.exports.TiThLargeOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 2h-5c-1.103 0-2 .896-2 2v5c0 1.104.897 2 2 2h5c1.103 0 2-.896 2-2v-5c0-1.104-.897-2-2-2zm0 7h-5v-5h5v5zM20 2h-5c-1.104 0-2 .896-2 2v5c0 1.104.896 2 2 2h5c1.104 0 2-.896 2-2v-5c0-1.104-.896-2-2-2zm0 7h-5v-5h5v5zM9 13h-5c-1.103 0-2 .896-2 2v5c0 1.104.897 2 2 2h5c1.103 0 2-.896 2-2v-5c0-1.104-.897-2-2-2zm0 7h-5v-5h5v5zM20 13h-5c-1.104 0-2 .896-2 2v5c0 1.104.896 2 2 2h5c1.104 0 2-.896 2-2v-5c0-1.104-.896-2-2-2zm0 7h-5v-5h5v5z"}}]})(props);
	};
	module.exports.TiThLarge = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M8 3h-2c-.825 0-1.575.337-2.119.881-.544.544-.881 1.294-.881 2.119v2c0 .825.337 1.575.881 2.119.544.544 1.294.881 2.119.881h2c.825 0 1.575-.337 2.119-.881.544-.544.881-1.294.881-2.119v-2c0-.825-.337-1.575-.881-2.119-.544-.544-1.294-.881-2.119-.881zM18 3h-2c-.825 0-1.575.337-2.119.881-.544.544-.881 1.294-.881 2.119v2c0 .825.337 1.575.881 2.119.544.544 1.294.881 2.119.881h2c.825 0 1.575-.337 2.119-.881.544-.544.881-1.294.881-2.119v-2c0-.825-.337-1.575-.881-2.119-.544-.544-1.294-.881-2.119-.881zM8 13h-2c-.825 0-1.575.337-2.119.881-.544.544-.881 1.294-.881 2.119v2c0 .825.337 1.575.881 2.119.544.544 1.294.881 2.119.881h2c.825 0 1.575-.337 2.119-.881.544-.544.881-1.294.881-2.119v-2c0-.825-.337-1.575-.881-2.119-.544-.544-1.294-.881-2.119-.881zM18 13h-2c-.825 0-1.575.337-2.119.881-.544.544-.881 1.294-.881 2.119v2c0 .825.337 1.575.881 2.119.544.544 1.294.881 2.119.881h2c.825 0 1.575-.337 2.119-.881.544-.544.881-1.294.881-2.119v-2c0-.825-.337-1.575-.881-2.119-.544-.544-1.294-.881-2.119-.881z"}}]})(props);
	};
	module.exports.TiThListOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 18c.55 0 1 .45 1 1s-.45 1-1 1h-7c-.55 0-1-.45-1-1s.45-1 1-1h7m0-2h-7c-1.654 0-3 1.346-3 3s1.346 3 3 3h7c1.654 0 3-1.346 3-3s-1.346-3-3-3zM19 11c.55 0 1 .45 1 1s-.45 1-1 1h-7c-.55 0-1-.45-1-1s.45-1 1-1h7m0-2h-7c-1.654 0-3 1.346-3 3s1.346 3 3 3h7c1.654 0 3-1.346 3-3s-1.346-3-3-3zM19 4c.55 0 1 .45 1 1s-.45 1-1 1h-7c-.55 0-1-.45-1-1s.45-1 1-1h7m0-2h-7c-1.654 0-3 1.346-3 3s1.346 3 3 3h7c1.654 0 3-1.346 3-3s-1.346-3-3-3zM6 16h-2c-1.104 0-2 .896-2 2v2c0 1.104.896 2 2 2h2c1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm0 4h-2v-2h2v2zM6 9h-2c-1.104 0-2 .896-2 2v2c0 1.104.896 2 2 2h2c1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm0 4h-2v-2h2v2zM6 2h-2c-1.104 0-2 .896-2 2v2c0 1.104.896 2 2 2h2c1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm0 4h-2v-2h2v2z"}}]})(props);
	};
	module.exports.TiThList = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 17h-7c-1.103 0-2 .897-2 2s.897 2 2 2h7c1.103 0 2-.897 2-2s-.897-2-2-2zM19 10h-7c-1.103 0-2 .897-2 2s.897 2 2 2h7c1.103 0 2-.897 2-2s-.897-2-2-2zM19 3h-7c-1.103 0-2 .897-2 2s.897 2 2 2h7c1.103 0 2-.897 2-2s-.897-2-2-2z"}},{"tag":"circle","attr":{"cx":"5","cy":"19","r":"2.5"}},{"tag":"circle","attr":{"cx":"5","cy":"12","r":"2.5"}},{"tag":"circle","attr":{"cx":"5","cy":"5","r":"2.5"}}]})(props);
	};
	module.exports.TiThMenuOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 18c.55 0 1 .45 1 1s-.45 1-1 1h-14c-.55 0-1-.45-1-1s.45-1 1-1h14m0-2h-14c-1.654 0-3 1.346-3 3s1.346 3 3 3h14c1.654 0 3-1.346 3-3s-1.346-3-3-3zM19 11c.55 0 1 .45 1 1s-.45 1-1 1h-14c-.55 0-1-.45-1-1s.45-1 1-1h14m0-2h-14c-1.654 0-3 1.346-3 3s1.346 3 3 3h14c1.654 0 3-1.346 3-3s-1.346-3-3-3zM19 4c.55 0 1 .45 1 1s-.45 1-1 1h-14c-.55 0-1-.45-1-1s.45-1 1-1h14m0-2h-14c-1.654 0-3 1.346-3 3s1.346 3 3 3h14c1.654 0 3-1.346 3-3s-1.346-3-3-3z"}}]})(props);
	};
	module.exports.TiThMenu = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 17h-14c-1.103 0-2 .897-2 2s.897 2 2 2h14c1.103 0 2-.897 2-2s-.897-2-2-2zM19 10h-14c-1.103 0-2 .897-2 2s.897 2 2 2h14c1.103 0 2-.897 2-2s-.897-2-2-2zM19 3h-14c-1.103 0-2 .897-2 2s.897 2 2 2h14c1.103 0 2-.897 2-2s-.897-2-2-2z"}}]})(props);
	};
	module.exports.TiThSmallOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M6 16h-2c-1.104 0-2 .896-2 2v2c0 1.104.896 2 2 2h2c1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm0 4h-2v-2h2v2zM6 9h-2c-1.104 0-2 .896-2 2v2c0 1.104.896 2 2 2h2c1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm0 4h-2v-2h2v2zM6 2h-2c-1.104 0-2 .896-2 2v2c0 1.104.896 2 2 2h2c1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm0 4h-2v-2h2v2zM13 16h-2c-1.104 0-2 .896-2 2v2c0 1.104.896 2 2 2h2c1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm0 4h-2v-2h2v2zM13 9h-2c-1.104 0-2 .896-2 2v2c0 1.104.896 2 2 2h2c1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm0 4h-2v-2h2v2zM13 2h-2c-1.104 0-2 .896-2 2v2c0 1.104.896 2 2 2h2c1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm0 4h-2v-2h2v2zM20 16h-2c-1.104 0-2 .896-2 2v2c0 1.104.896 2 2 2h2c1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm0 4h-2v-2h2v2zM20 9h-2c-1.104 0-2 .896-2 2v2c0 1.104.896 2 2 2h2c1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm0 4h-2v-2h2v2zM20 2h-2c-1.104 0-2 .896-2 2v2c0 1.104.896 2 2 2h2c1.104 0 2-.896 2-2v-2c0-1.104-.896-2-2-2zm0 4h-2v-2h2v2z"}}]})(props);
	};
	module.exports.TiThSmall = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"5","cy":"19","r":"2.5"}},{"tag":"circle","attr":{"cx":"5","cy":"12","r":"2.5"}},{"tag":"circle","attr":{"cx":"5","cy":"5","r":"2.5"}},{"tag":"circle","attr":{"cx":"12","cy":"19","r":"2.5"}},{"tag":"circle","attr":{"cx":"12","cy":"12","r":"2.5"}},{"tag":"circle","attr":{"cx":"12","cy":"5","r":"2.5"}},{"tag":"circle","attr":{"cx":"19","cy":"19","r":"2.5"}},{"tag":"circle","attr":{"cx":"19","cy":"12","r":"2.5"}},{"tag":"circle","attr":{"cx":"19","cy":"5","r":"2.5"}}]})(props);
	};
	module.exports.TiThermometer = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M13 15.071v-5.571c0-.275-.225-.5-.5-.5s-.5.225-.5.5v5.571c-.86.224-1.5 1-1.5 1.929 0 1.103.896 2 2 2s2-.897 2-2c0-.929-.64-1.705-1.5-1.929zM16 13.459v-7.959c0-1.93-1.57-3.5-3.5-3.5s-3.5 1.57-3.5 3.5v7.959c-.922.902-1.5 2.151-1.5 3.541 0 2.757 2.243 5 5 5s5-2.243 5-5c0-1.39-.578-2.639-1.5-3.541zm-3.5 6.541c-1.654 0-3-1.346-3-3 0-1.105.607-2.062 1.5-2.583v-8.917c0-.827.673-1.5 1.5-1.5s1.5.673 1.5 1.5v8.917c.893.521 1.5 1.478 1.5 2.583 0 1.654-1.346 3-3 3z"}}]}]})(props);
	};
	module.exports.TiThumbsDown = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 5c-.755 0-1.438.289-1.965.751l-.188-.192c-.96-.737-3.665-1.559-5.847-1.559-1.879 0-2.607.293-3.252.552l-.316.124c-.834.305-1.578 1.229-1.738 2.2l-.664 5.972c-.174 1.039.441 2.127 1.4 2.478.394.144 2.512.405 3.883.56-.215 1.256-.312 2.405-.312 3.616 0 1.379 1.121 2.5 2.5 2.5s2.5-1.121 2.5-2.5c0-1.875.667-2.737 1.616-3.699.548.724 1.408 1.199 2.384 1.199 1.653 0 2.999-1.347 2.999-3v-6c-.001-1.656-1.346-3.002-3-3.002zm-6 14.5c0 .275-.225.5-.5.5s-.5-.225-.5-.5c0-1.805.256-3.241.479-4.293l.297-1.398-1.321.188c-.605-.05-3.934-.447-4.335-.552-.058-.028-.132-.18-.108-.321l.663-5.976c.037-.223.291-.539.443-.594l.377-.146c.544-.219 1.015-.408 2.506-.408 1.914 0 4.118.753 4.633 1.146.156.12.366.564.366.854v4.977c-.001.026-.04.649-.707 1.316-.913.913-2.293 2.293-2.293 5.207zm7-5.5c0 .552-.448 1-1 1s-1-.448-1-1v-6c0-.552.448-1 1-1s1 .448 1 1v6z"}}]})(props);
	};
	module.exports.TiThumbsOk = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.7 12.6c-.1-.3-.2-.6-.4-.9.3-.6.5-1 .3-1.9-.2-.8-.8-1.7-1.6-2.5l-1.7-.9.8-1.8c.4-.8.4-1.8-.1-2.5-.5-.8-1.4-1.3-2.3-1.3-1 0-1.8.6-2.3 1.5 0 0-.8-.2-1.8.1l-1.3 1.2s-1.7.5-2 2-.4 3.4-.8 4.1-2.5 3.3-3.7 4.7c-.9 1.1-.7 2.3.1 3.2l5 5c.8.8 2.7 1.1 4-.3 1.4-1.4.5-3.3.5-3.3.4-.3 1.5-1.2 2.6-1.5s2.8-.9 3.7-2.1c.8-1 1.2-1.8 1-2.8zm-9.3 8.3c-.4.4-1 .4-1.4 0l-4.2-4.2c-.2-.2-.3-.4-.3-.7s.1-.5.3-.7l.7-.7 4.9 4.9c.2.2.3.4.3.7 0 .3-.1.5-.3.7zm6.6-9.9c-.5 0-.7-.5-1.1-.9s-1.3-.5-2-.2-1 1-1 1.7c0 1 .7 1.9 1.7 1.9.7 0 .9-.1 1.3-.3.6-.4.8-.8 1.2-.8s.7.2.7.8-.6 1.3-1.2 1.7-1.1.5-1.7.6c-.6.1-1 .1-1.8.6-.7.4-1.4.9-1.8 1.3l-4.6-4.6c.9-1.1 1.7-2.3 1.8-2.9l.7-3.9c.1-.4.4-.5.6-.5.3 0 .6.2.7.4l.4-1.3c.1-.3.4-.5.6-.5.4 0 .8.3.7.8l-.5 2.4c.6-1.2 1.5-2.7 2.1-3.8.2-.3.4-.6.9-.6s.9.6.7 1.1c-.2.4-2 3.5-2.8 4.8-.1.1 0 .2.2.1.3-.2 1-.7 1.7-.7 1.2-.1 1.8.4 2.1.6.4.3.8.8 1.1 1.3.2.5-.2.9-.7.9zm-.2.7c-.4 0-.7.1-.9.4s-.6.7-1.1.7c-.7 0-1.1-.5-1.1-1.1s.4-1 1.1-1c.5 0 .9.4 1.1.7s.5.3.9.3z"}}]})(props);
	};
	module.exports.TiThumbsUp = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.57 8.676c-.391-.144-2.512-.406-3.883-.56.215-1.255.313-2.405.313-3.616 0-1.379-1.122-2.5-2.5-2.5s-2.5 1.121-2.5 2.5c0 1.875-.666 2.738-1.616 3.699-.548-.722-1.407-1.199-2.384-1.199-1.654 0-3 1.346-3 3v6c0 1.654 1.346 3 3 3 .755 0 1.438-.29 1.965-.752l.188.193c.96.736 3.667 1.559 5.848 1.559 1.879 0 2.608-.293 3.253-.553l.316-.123c.834-.305 1.576-1.227 1.736-2.2l.666-5.974c.173-1.037-.443-2.125-1.402-2.474zm-12.57 8.324c-.551 0-1-.448-1-1v-6c0-.552.449-1 1-1s1 .448 1 1v6c0 .552-.449 1-1 1zm11.327-.15c-.037.224-.292.541-.443.596l-.376.146c-.545.219-1.016.408-2.508.408-1.914 0-4.118-.753-4.632-1.146-.158-.12-.368-.564-.368-.854v-4.98c.003-.047.051-.656.707-1.312.913-.914 2.293-2.294 2.293-5.208 0-.275.225-.5.5-.5s.5.225.5.5c0 1.407-.146 2.73-.479 4.293l-.297 1.396 1.321-.188c.603.05 3.933.447 4.334.55.058.03.132.183.111.323l-.663 5.976z"}}]})(props);
	};
	module.exports.TiTickOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11 20c-.801 0-1.555-.312-2.121-.879l-4-4c-.567-.566-.879-1.32-.879-2.121s.312-1.555.879-2.122c1.133-1.133 3.109-1.133 4.242 0l1.188 1.188 3.069-5.523c.526-.952 1.533-1.544 2.624-1.544.507 0 1.012.131 1.456.378.7.39 1.206 1.028 1.427 1.798.221.771.127 1.581-.263 2.282l-5 9c-.454.818-1.279 1.384-2.206 1.514-.139.019-.277.029-.416.029zm-4-8c-.268 0-.518.104-.707.293s-.293.439-.293.707.104.518.293.707l4 4c.223.221.523.33.844.283.312-.043.586-.232.737-.504l5-9c.13-.233.161-.503.088-.76-.073-.257-.243-.47-.478-.6-.473-.264-1.101-.078-1.357.388l-4.357 7.841-3.062-3.062c-.19-.189-.44-.293-.708-.293z"}}]})(props);
	};
	module.exports.TiTick = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16.972 6.251c-.967-.538-2.185-.188-2.72.777l-3.713 6.682-2.125-2.125c-.781-.781-2.047-.781-2.828 0-.781.781-.781 2.047 0 2.828l4 4c.378.379.888.587 1.414.587l.277-.02c.621-.087 1.166-.46 1.471-1.009l5-9c.537-.966.189-2.183-.776-2.72z"}}]})(props);
	};
	module.exports.TiTicket = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M21.485 8.071l-5.364-5.364c-1.128-1.128-3.111-1.136-4.248-.018l-9.148 9.002c-.571.562-.887 1.313-.891 2.115-.003.803.307 1.556.873 2.121l5.365 5.365c.567.567 1.325.88 2.133.88.799 0 1.551-.307 2.115-.862l9.147-9.003c.571-.562.888-1.313.891-2.115.003-.802-.307-1.555-.873-2.121zm-1.421 2.811l-9.146 9.003c-.381.373-1.056.37-1.432-.006l-1.275-1.275c.71-.785.693-1.994-.062-2.752-.758-.757-1.968-.773-2.752-.063l-1.275-1.274c-.186-.187-.288-.435-.287-.699s.105-.513.293-.697l9.148-9.002c.189-.186.441-.288.713-.288.273 0 .529.104.719.294l1.275 1.275c-.711.785-.694 1.994.062 2.751.758.757 1.967.773 2.752.063l1.274 1.274c.187.187.288.435.287.699s-.105.512-.294.697zM11.601 17.042l-4.657-4.656 5.649-5.429 4.657 4.656-5.649 5.429zm-3.23-4.643l3.243 3.242 4.206-4.041-3.241-3.242-4.208 4.041z"}}]}]})(props);
	};
	module.exports.TiTime = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 13c0-.55-.45-1-1-1h-3c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1zM12 6c3.859 0 7 3.141 7 7s-3.141 7-7 7-7-3.141-7-7 3.141-7 7-7m0-2c-4.971 0-9 4.029-9 9s4.029 9 9 9 9-4.029 9-9-4.029-9-9-9zM13 10c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1s1-.45 1-1v-3zM12 8c2.757 0 5 2.243 5 5s-2.243 5-5 5-5-2.243-5-5 2.243-5 5-5m0-1c-3.312 0-6 2.686-6 6 0 3.312 2.688 6 6 6s6-2.688 6-6c0-3.314-2.688-6-6-6z"}}]})(props);
	};
	module.exports.TiTimesOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M16 19c-.802 0-1.555-.312-2.122-.879l-1.878-1.879-1.879 1.879c-1.133 1.133-3.109 1.133-4.243 0-.566-.566-.878-1.32-.878-2.121s.312-1.555.879-2.122l1.878-1.878-1.878-1.879c-.567-.566-.879-1.32-.879-2.121s.312-1.555.879-2.122c1.133-1.132 3.109-1.133 4.243.001l1.878 1.879 1.879-1.879c1.133-1.133 3.109-1.133 4.243 0 .566.566.878 1.32.878 2.121s-.312 1.555-.879 2.122l-1.878 1.878 1.878 1.879c.567.566.879 1.32.879 2.121s-.312 1.555-.879 2.122c-.566.566-1.319.878-2.121.878zm-4-5.586l3.293 3.293c.378.378 1.037.377 1.414 0 .189-.189.293-.439.293-.707s-.104-.518-.293-.707l-3.292-3.293 3.292-3.293c.189-.189.293-.44.293-.707s-.104-.518-.293-.707c-.378-.379-1.037-.378-1.414-.001l-3.293 3.294-3.293-3.293c-.378-.378-1.037-.377-1.414 0-.189.189-.293.44-.293.707s.104.518.293.707l3.292 3.293-3.292 3.293c-.189.189-.293.439-.293.707s.104.518.293.707c.378.379 1.037.378 1.414.001l3.293-3.294z"}}]})(props);
	};
	module.exports.TiTimes = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.414 6.586c-.78-.781-2.048-.781-2.828 0l-2.586 2.586-2.586-2.586c-.78-.781-2.048-.781-2.828 0-.781.781-.781 2.047 0 2.828l2.585 2.586-2.585 2.586c-.781.781-.781 2.047 0 2.828.39.391.902.586 1.414.586s1.024-.195 1.414-.586l2.586-2.586 2.586 2.586c.39.391.902.586 1.414.586s1.024-.195 1.414-.586c.781-.781.781-2.047 0-2.828l-2.585-2.586 2.585-2.586c.781-.781.781-2.047 0-2.828z"}}]})(props);
	};
	module.exports.TiTrash = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M18 7h-1v-1c0-1.104-.896-2-2-2h-7c-1.104 0-2 .896-2 2v1h-1c-.552 0-1 .448-1 1s.448 1 1 1v8c0 2.206 1.794 4 4 4h5c2.206 0 4-1.794 4-4v-8c.552 0 1-.448 1-1s-.448-1-1-1zm-10-1h7v1h-7v-1zm8 11c0 1.104-.896 2-2 2h-5c-1.104 0-2-.896-2-2v-8h9v8zM8.5 10.5c-.275 0-.5.225-.5.5v6c0 .275.225.5.5.5s.5-.225.5-.5v-6c0-.275-.225-.5-.5-.5zM10.5 10.5c-.275 0-.5.225-.5.5v6c0 .275.225.5.5.5s.5-.225.5-.5v-6c0-.275-.225-.5-.5-.5zM12.5 10.5c-.275 0-.5.225-.5.5v6c0 .275.225.5.5.5s.5-.225.5-.5v-6c0-.275-.225-.5-.5-.5zM14.5 10.5c-.275 0-.5.225-.5.5v6c0 .275.225.5.5.5s.5-.225.5-.5v-6c0-.275-.225-.5-.5-.5z"}}]})(props);
	};
	module.exports.TiTree = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.781 17.375l-2.7-3.375h.919c.373 0 .715-.207.887-.538.172-.331.146-.729-.068-1.035l-7-10c-.317-.452-.94-.562-1.393-.246-.091.063-.158.146-.221.231-.025.015-7.025 10.015-7.025 10.015-.214.306-.24.704-.068 1.035.173.331.515.538.888.538h.919l-2.7 3.375c-.24.301-.287.712-.121 1.059.167.345.518.566.902.566h7v3c0 .553.448 1 1 1s1-.447 1-1v-3h7c.384 0 .735-.221.901-.566.167-.347.12-.758-.12-1.059zm-7.781-.375v-5c0-.553-.448-1-1-1s-1 .447-1 1v5h-4.919l2.7-3.375c.24-.301.287-.712.121-1.059-.167-.345-.518-.566-.902-.566h-1.08l5.08-7.256 5.08 7.256h-1.08c-.384 0-.735.221-.901.566-.167.347-.12.758.121 1.059l2.7 3.375h-4.92z"}}]})(props);
	};
	module.exports.TiUploadOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.986 17c0-.105-.004-.211-.038-.316l-2-6c-.093-.276-.302-.483-.56-.594.881-1.175.799-2.847-.269-3.914l-6.119-6.121-6.121 6.121c-1.067 1.067-1.149 2.739-.27 3.914-.256.109-.467.316-.559.594l-2 6c-.034.105-.038.211-.038.316-.012 0-.012 5-.012 5 0 .553.447 1 1 1h16c.553 0 1-.447 1-1 0 0 0-5-.014-5zm-13.693-9.41l4.707-4.707 4.707 4.707c.391.391.391 1.023 0 1.414-.379.377-1.035.377-1.414 0l-2.293-2.293v5.789c0 .552-.448 1-1 1s-1-.448-1-1v-5.789l-2.293 2.293c-.379.377-1.035.377-1.414 0-.391-.391-.391-1.025 0-1.414zm-.572 4.41h2.279v.5c0 1.654 1.346 3 3 3s3-1.346 3-3v-.5h2.279l1.666 5h-13.892l1.668-5zm-1.721 9v-3h14v3h-14z"}}]})(props);
	};
	module.exports.TiUpload = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.987 16c0-.105-.004-.211-.039-.316l-2-6c-.136-.409-.517-.684-.948-.684h-4v2h3.279l1.667 5h-13.892l1.667-5h3.279v-2h-4c-.431 0-.812.275-.948.684l-2 6c-.035.105-.039.211-.039.316-.013 0-.013 5-.013 5 0 .553.447 1 1 1h16c.553 0 1-.447 1-1 0 0 0-5-.013-5zM16 7.904c.259 0 .518-.095.707-.283.39-.39.39-1.024 0-1.414l-4.707-4.707-4.707 4.707c-.39.39-.39 1.024 0 1.414.189.189.448.283.707.283s.518-.094.707-.283l2.293-2.293v6.672c0 .552.448 1 1 1s1-.448 1-1v-6.672l2.293 2.293c.189.189.448.283.707.283z"}}]})(props);
	};
	module.exports.TiUserAddOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 14h-6c-.553 0-1-.448-1-1s.447-1 1-1h6c.553 0 1 .448 1 1s-.447 1-1 1zM18 17c-.553 0-1-.448-1-1v-6c0-.552.447-1 1-1s1 .448 1 1v6c0 .552-.447 1-1 1zM9 6c1.654 0 3 1.346 3 3s-1.346 3-3 3-3-1.346-3-3 1.346-3 3-3m0-2c-2.764 0-5 2.238-5 5s2.236 5 5 5 5-2.238 5-5-2.236-5-5-5zM9 17c2.021 0 3.301.771 3.783 1.445-.683.26-1.969.555-3.783.555-1.984 0-3.206-.305-3.818-.542.459-.715 1.777-1.458 3.818-1.458m0-2c-3.75 0-6 2-6 4 0 1 2.25 2 6 2 3.518 0 6-1 6-2 0-2-2.354-4-6-4z"}}]})(props);
	};
	module.exports.TiUserAdd = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M9 14c1.381 0 2.631-.56 3.536-1.465.904-.904 1.464-2.154 1.464-3.535s-.56-2.631-1.464-3.535c-.905-.905-2.155-1.465-3.536-1.465s-2.631.56-3.536 1.465c-.904.904-1.464 2.154-1.464 3.535s.56 2.631 1.464 3.535c.905.905 2.155 1.465 3.536 1.465zM9 21c3.518 0 6-1 6-2 0-2-2.354-4-6-4-3.75 0-6 2-6 4 0 1 2.25 2 6 2zM21 12h-2v-2c0-.553-.447-1-1-1s-1 .447-1 1v2h-2c-.553 0-1 .447-1 1s.447 1 1 1h2v2c0 .553.447 1 1 1s1-.447 1-1v-2h2c.553 0 1-.447 1-1s-.447-1-1-1z"}}]})(props);
	};
	module.exports.TiUserDeleteOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 14h-6c-.553 0-1-.448-1-1s.447-1 1-1h6c.553 0 1 .448 1 1s-.447 1-1 1zM9 6c1.654 0 3 1.346 3 3s-1.346 3-3 3-3-1.346-3-3 1.346-3 3-3m0-2c-2.764 0-5 2.238-5 5s2.236 5 5 5 5-2.238 5-5-2.236-5-5-5zM9 17c2.021 0 3.301.771 3.783 1.445-.683.26-1.969.555-3.783.555-1.984 0-3.206-.305-3.818-.542.459-.715 1.777-1.458 3.818-1.458m0-2c-3.75 0-6 2-6 4 0 1 2.25 2 6 2 3.518 0 6-1 6-2 0-2-2.354-4-6-4z"}}]})(props);
	};
	module.exports.TiUserDelete = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 14h-6c-.553 0-1-.447-1-1s.447-1 1-1h6c.553 0 1 .447 1 1s-.447 1-1 1zM14 9c0 1.381-.56 2.631-1.464 3.535-.905.905-2.155 1.465-3.536 1.465s-2.631-.56-3.536-1.465c-.904-.904-1.464-2.154-1.464-3.535s.56-2.631 1.464-3.535c.905-.905 2.155-1.465 3.536-1.465s2.631.56 3.536 1.465c.904.904 1.464 2.154 1.464 3.535zM9 15c-3.75 0-6 2-6 4 0 1 2.25 2 6 2 3.518 0 6-1 6-2 0-2-2.354-4-6-4z"}}]})(props);
	};
	module.exports.TiUserOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 6c1.654 0 3 1.346 3 3s-1.346 3-3 3-3-1.346-3-3 1.346-3 3-3m0-2c-2.764 0-5 2.238-5 5s2.236 5 5 5 5-2.238 5-5-2.236-5-5-5zM12 17c2.021 0 3.301.771 3.783 1.445-.683.26-1.969.555-3.783.555-1.984 0-3.206-.305-3.818-.542.459-.715 1.777-1.458 3.818-1.458m0-2c-3.75 0-6 2-6 4 0 1 2.25 2 6 2 3.518 0 6-1 6-2 0-2-2.354-4-6-4z"}}]})(props);
	};
	module.exports.TiUser = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 9c0-1.381-.56-2.631-1.464-3.535-.905-.905-2.155-1.465-3.536-1.465s-2.631.56-3.536 1.465c-.904.904-1.464 2.154-1.464 3.535s.56 2.631 1.464 3.535c.905.905 2.155 1.465 3.536 1.465s2.631-.56 3.536-1.465c.904-.904 1.464-2.154 1.464-3.535zM6 19c0 1 2.25 2 6 2 3.518 0 6-1 6-2 0-2-2.354-4-6-4-3.75 0-6 2-6 4z"}}]})(props);
	};
	module.exports.TiVendorAndroid = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M7.1 8h9.799999999999999c.1 0 .1 0 .1-.1-.1-.5-.2-.9-.4-1.3-.4-.9-1.1-1.5-1.9-2l-.4-.2s0-.1.1-.1c.3-.4.6-.8.9-1.3.1-.1.1-.2 0-.3-.1-.1-.2 0-.3.1l-.9 1.3s-.1.1-.1 0c-.8-.3-1.6-.4-2.4-.4-.6 0-1.1.2-1.6.4h-.1l-.9-1.2s0-.1-.1-.1c-.1-.1-.2-.1-.2 0-.1 0-.1.1 0 .2 0 0 0 .1.1.1.2.4.5.8.8 1.2l.1.1h-.1c-.6.3-1.1.7-1.5 1.2-.6.6-1 1.4-1.1 2.3 0 .1 0 .1.1.1zm7.1-2.8c.4 0 .8.3.8.8 0 .4-.3.8-.7.8-.4 0-.8-.3-.8-.8-.1-.4.3-.8.7-.8zm-4.3 0c.4 0 .8.3.8.8 0 .4-.3.8-.7.8-.5 0-.9-.4-.9-.8s.4-.8.8-.8zM5 9c-.5 0-1 .5-1 1v5c0 .5.5 1 1 1s1-.5 1-1v-5c0-.5-.5-1-1-1zM19 9c-.5 0-1 .5-1 1v5c0 .5.5 1 1 1s1-.5 1-1v-5c0-.5-.5-1-1-1zM7 17c0 .5.5 1 1 1h1v3c0 .5.5 1 1 1s1-.5 1-1v-3h2v3c0 .5.5 1 1 1s1-.5 1-1v-3h1c.5 0 1-.5 1-1v-8h-10v8z"}}]})(props);
	};
	module.exports.TiVendorApple = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M11.9 6.6s-.1-1.6.9-3l2.8-1.6s.1 1.6-.9 3l-2.8 1.6zM17.3 12.2c0-1.5.8-2.8 2-3.6l-.9-.9c-.5-.3-1.1-.7-2.4-.7-1.4 0-2.4.9-3.7.9-1.3 0-2.2-.8-3.1-.9-.7 0-1.4 0-2.1.3-.5.2-1.2.7-1.6 1.2-.6.6-1.2 1.9-1.3 3.1-.1 1.2-.1 2.1.2 3.2.2.9.6 1.8 1 2.6.3.6.6 1.2 1 1.8.3.4.7.8 1.1 1.1.3.2.6.4 1 .6.2 0 .5.1.8.1.6-.1 1.6-.9 2.4-1.1.4-.1.8-.1 1.3 0 .7.1 1.4.9 2.2 1 .6.1 1.2 0 1.7-.3.4-.2.7-.5 1-.9.4-.4.7-.9 1-1.3.4-.7.9-1.5 1.1-2.3-1.6-.6-2.7-2.1-2.7-3.9z"}}]})(props);
	};
	module.exports.TiVendorMicrosoft = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10 12.5c0-.3-.2-.5-.5-.5h-6c-.3 0-.5.2-.5.5v5c0 .3.2.5.5.6l6 .7c.3 0 .5-.2.5-.4v-5.9zM11.5 12c-.3 0-.5.2-.5.5v5.9c0 .3.2.5.5.6l9 1c.3 0 .5-.2.5-.4v-7c0-.3-.2-.5-.5-.5l-9-.1zM10 4.7c0-.3-.2-.5-.5-.4l-6 .7c-.3 0-.5.2-.5.5v5c0 .3.2.5.5.5h6c.3 0 .5-.2.5-.5v-5.8zM11.5 4.1c-.3 0-.5.3-.5.6v5.9c0 .3.2.5.5.5h9c.3 0 .5-.2.5-.5v-7c0-.3-.2-.5-.5-.4l-9 .9z"}}]})(props);
	};
	module.exports.TiVideoOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"circle","attr":{"cx":"7","cy":"11","r":"1"}},{"tag":"path","attr":{"d":"M21.585 7.188c-.262-.188-.599-.241-.901-.137l-1.707.568c-.188-1.477-1.451-2.62-2.977-2.62h-11c-1.654 0-3 1.347-3 3v6c0 1.653 1.346 3 3 3h3v1.111l.008.09c.066.738.381 1.423.887 1.928.562.562 1.311.872 2.104.872s1.542-.31 2.104-.87c.574-.577.898-1.346.896-2.113v-1.017h2c1.524 0 2.789-1.145 2.978-2.62l1.707.568c.303.104.64.051.9-.138.262-.188.415-.49.415-.812v-6c.001-.318-.153-.621-.414-.81zm-9.585 10.835c.001.248-.119.5-.309.689-.191.189-.441.286-.692.286-.25 0-.501-.097-.69-.286-.19-.189-.285-.441-.309-.691v-2.021h2v2.023zm5-4.023c0 .552-.448 1-1 1h-11c-.552 0-1-.448-1-1v-6c0-.552.448-1 1-1h11c.552 0 1 .448 1 1v6zm3-1.389s-1.895-.605-2-.605v-2.012c.105 0 2-.605 2-.605v3.222z"}}]})(props);
	};
	module.exports.TiVideo = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M22.525 7.149c-.16-.099-.342-.149-.525-.149-.153 0-.306.035-.447.105l-2.553 1.277v-.382c0-1.654-1.346-3-3-3h-11c-1.654 0-3 1.346-3 3v8c0 1.654 1.346 3 3 3h11c1.654 0 3-1.346 3-3v-.382l2.553 1.276c.141.071.294.106.447.106.183 0 .365-.05.525-.149.295-.183.475-.504.475-.851v-8c0-.347-.18-.668-.475-.851zm-15.525 6.351c-.829 0-1.5-.671-1.5-1.5s.671-1.5 1.5-1.5 1.5.671 1.5 1.5-.671 1.5-1.5 1.5z"}}]})(props);
	};
	module.exports.TiVolumeDown = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M15.138 5.824c-.449 0-.905.152-1.356.453l-2.672 1.781c-.753.503-2.206.942-3.11.942-1.654 0-3 1.346-3 3v2c0 1.654 1.346 3 3 3 .904 0 2.357.439 3.109.941l2.672 1.781c.451.301.907.453 1.356.453.898.001 1.863-.68 1.863-2.175v-10c0-1.495-.965-2.176-1.862-2.176zm-7.138 9.176c-.552 0-1-.448-1-1v-2c0-.552.448-1 1-1 1.211 0 2.907-.495 4-1.146v6.293c-1.093-.652-2.789-1.147-4-1.147zm7 3l-.006.12-.104-.062-1.89-1.26v-7.596l1.891-1.261.104-.062.005.121v10zM18.292 10.294c-.39.391-.39 1.023.002 1.414.345.345.535.803.535 1.291 0 .489-.19.948-.536 1.294-.391.39-.391 1.023 0 1.414.195.195.451.293.707.293s.512-.098.707-.293c.724-.723 1.122-1.685 1.122-2.708s-.398-1.984-1.123-2.707c-.389-.389-1.023-.391-1.414.002z"}}]}]})(props);
	};
	module.exports.TiVolumeMute = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19.707 5.293c-.391-.391-1.023-.391-1.414 0l-1.551 1.551c-.345-.688-.987-1.02-1.604-1.02-.449 0-.905.152-1.356.453l-2.672 1.781c-.753.503-2.206.942-3.11.942-1.654 0-3 1.346-3 3v2c0 1.237.754 2.302 1.826 2.76l-1.533 1.533c-.391.391-.391 1.023 0 1.414.195.195.451.293.707.293s.512-.098.707-.293l2.527-2.527c.697.174 1.416.455 1.875.762l2.672 1.781c.451.301.907.453 1.356.453.898 0 1.863-.681 1.863-2.176v-8.586l2.707-2.707c.391-.391.391-1.023 0-1.414zm-4.816 2.648l.104-.062.005.121v1.293l-2 2v-2.091l1.891-1.261zm-7.891 4.059c0-.552.448-1 1-1 1.211 0 2.907-.495 4-1.146v2.439l-2.83 2.83c-.413-.077-.814-.123-1.17-.123-.552 0-1-.448-1-1v-2zm3.301 3.406l1.699-1.699v2.439c-.481-.287-1.075-.542-1.699-.74zm4.693 2.714l-.104-.062-1.89-1.26v-4.091l2-2v7.293l-.006.12z"}}]})(props);
	};
	module.exports.TiVolumeUp = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M16.706 10.292c-.389-.389-1.023-.391-1.414.002-.39.391-.39 1.023.002 1.414.345.345.535.803.535 1.291 0 .489-.19.948-.536 1.294-.391.39-.391 1.023 0 1.414.195.195.451.293.707.293s.512-.098.707-.293c.724-.723 1.122-1.685 1.122-2.708s-.398-1.984-1.123-2.707zM18.706 8.292c-.391-.389-1.023-.39-1.414.002-.39.391-.39 1.024.002 1.414.879.877 1.363 2.044 1.364 3.287.001 1.246-.484 2.417-1.365 3.298-.391.391-.391 1.023 0 1.414.195.195.451.293.707.293s.512-.098.707-.293c1.259-1.259 1.952-2.933 1.951-4.713-.001-1.777-.694-3.447-1.952-4.702zM20.706 6.292c-.391-.389-1.023-.39-1.414.002-.39.391-.39 1.024.002 1.414 1.412 1.409 2.191 3.285 2.192 5.284.002 2.002-.777 3.885-2.193 5.301-.391.391-.391 1.023 0 1.414.195.195.451.293.707.293s.512-.098.707-.293c1.794-1.794 2.781-4.18 2.779-6.717-.001-2.533-.989-4.912-2.78-6.698zM12.138 5.824c-.449 0-.905.152-1.356.453l-2.673 1.782c-.752.502-2.205.941-3.109.941-1.654 0-3 1.346-3 3v2c0 1.654 1.346 3 3 3 .904 0 2.357.439 3.109.941l2.672 1.781c.451.301.907.453 1.356.453.898.001 1.863-.68 1.863-2.175v-10c0-1.495-.965-2.176-1.862-2.176zm-7.138 9.176c-.552 0-1-.448-1-1v-2c0-.552.448-1 1-1 1.211 0 2.907-.495 4-1.146v6.293c-1.093-.652-2.789-1.147-4-1.147zm7 3l-.006.12-.104-.062-1.89-1.26v-7.596l1.891-1.261.104-.062.005.121v10z"}}]}]})(props);
	};
	module.exports.TiVolume = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.138 5.824c-.449 0-.905.152-1.356.453l-2.672 1.781c-.753.503-2.206.942-3.11.942-1.654 0-3 1.346-3 3v2c0 1.654 1.346 3 3 3 .904 0 2.357.439 3.109.941l2.672 1.781c.451.301.907.453 1.356.453.898.001 1.863-.68 1.863-2.175v-10c0-1.495-.965-2.176-1.862-2.176zm-3.138 10.322c-1.093-.651-2.789-1.146-4-1.146-.552 0-1-.448-1-1v-2c0-.552.448-1 1-1 1.211 0 2.907-.495 4-1.146v6.292zm3 1.854l-.006.12-.104-.062-1.89-1.26v-7.596l1.891-1.261.104-.062.005.121v10z"}}]})(props);
	};
	module.exports.TiWarningOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 5.511c.561 0 1.119.354 1.544 1.062l5.912 9.854c.851 1.415.194 2.573-1.456 2.573h-12c-1.65 0-2.307-1.159-1.456-2.573l5.912-9.854c.425-.708.983-1.062 1.544-1.062m0-2c-1.296 0-2.482.74-3.259 2.031l-5.912 9.856c-.786 1.309-.872 2.705-.235 3.83s1.879 1.772 3.406 1.772h12c1.527 0 2.77-.646 3.406-1.771s.551-2.521-.235-3.83l-5.912-9.854c-.777-1.294-1.963-2.034-3.259-2.034z"}},{"tag":"circle","attr":{"cx":"12","cy":"16","r":"1.3"}},{"tag":"path","attr":{"d":"M13.5 10c0-.83-.671-1.5-1.5-1.5s-1.5.67-1.5 1.5c0 .199.041.389.111.562.554 1.376 1.389 3.438 1.389 3.438l1.391-3.438c.068-.173.109-.363.109-.562z"}}]})(props);
	};
	module.exports.TiWarning = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.171 15.398l-5.912-9.854c-.776-1.293-1.963-2.033-3.259-2.033s-2.483.74-3.259 2.031l-5.912 9.856c-.786 1.309-.872 2.705-.235 3.83.636 1.126 1.878 1.772 3.406 1.772h12c1.528 0 2.77-.646 3.406-1.771.637-1.125.551-2.521-.235-3.831zm-9.171 2.151c-.854 0-1.55-.695-1.55-1.549 0-.855.695-1.551 1.55-1.551s1.55.696 1.55 1.551c0 .854-.696 1.549-1.55 1.549zm1.633-7.424c-.011.031-1.401 3.468-1.401 3.468-.038.094-.13.156-.231.156s-.193-.062-.231-.156l-1.391-3.438c-.09-.233-.129-.443-.129-.655 0-.965.785-1.75 1.75-1.75s1.75.785 1.75 1.75c0 .212-.039.422-.117.625z"}}]})(props);
	};
	module.exports.TiWatch = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 13h2c.55 0 1-.45 1-1s-.45-1-1-1h-1v-1c0-.55-.45-1-1-1s-1 .45-1 1v2c0 .55.45 1 1 1zM17 7.105v-2.105c0-1.654-1.346-3-3-3h-4c-1.654 0-3 1.346-3 3v2.105c-1.236 1.263-2 2.989-2 4.895s.764 3.632 2 4.895v2.105c0 1.654 1.346 3 3 3h4c1.654 0 3-1.346 3-3v-2.105c1.236-1.262 2-2.988 2-4.895s-.764-3.632-2-4.895zm-8-2.105c0-.551.449-1 1-1h4c.551 0 1 .449 1 1v1.809c-.883-.512-1.906-.809-3-.809s-2.117.297-3 .809v-1.809zm6 14c0 .551-.449 1-1 1h-4c-.551 0-1-.449-1-1v-1.811c.883.513 1.906.811 3 .811s2.117-.298 3-.811v1.811zm-3-2c-2.757 0-5-2.243-5-5s2.243-5 5-5 5 2.243 5 5-2.243 5-5 5z"}}]})(props);
	};
	module.exports.TiWavesOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.221 10.761c.498-.552.779-1.252.779-2 0-.801-.312-1.555-.879-2.121-.566-.567-1.32-.879-2.121-.879s-1.555.312-2.121.879c-.233.232-.546.361-.879.361-.333 0-.646-.129-.879-.362-1.366-1.366-3.185-2.118-5.121-2.118s-3.755.752-5.121 2.118c-.567.567-.879 1.321-.879 2.122 0 .748.281 1.448.779 2-.498.551-.779 1.252-.779 2s.281 1.448.779 2c-.498.551-.779 1.252-.779 2 0 .801.312 1.555.879 2.121.566.566 1.32.879 2.121.879s1.555-.312 2.121-.879c.234-.233.545-.362.878-.362.333 0 .646.129.88.363 1.367 1.365 3.185 2.117 5.121 2.117 1.937 0 3.755-.752 5.121-2.118.567-.567.879-1.32.879-2.121 0-.748-.281-1.448-.779-2 .498-.552.779-1.252.779-2s-.281-1.449-.779-2zm-1.514 6.707c-1.021 1.021-2.364 1.532-3.707 1.532-1.342 0-2.685-.511-3.707-1.532-.633-.632-1.463-.948-2.293-.948-.831 0-1.661.316-2.292.948-.196.195-.452.293-.708.293s-.512-.098-.707-.293c-.391-.391-.391-1.023 0-1.414 1.021-1.021 2.364-1.532 3.706-1.532 1.343 0 2.686.511 3.708 1.532.632.632 1.463.947 2.293.947.831 0 1.661-.315 2.293-.947.195-.195.451-.293.707-.293s.512.098.707.293c.391.39.391 1.023 0 1.414zm-13.414-9.414c1.021-1.022 2.365-1.533 3.707-1.533 1.343 0 2.685.511 3.707 1.532.632.633 1.463.948 2.293.948.831 0 1.661-.315 2.293-.947.195-.196.451-.293.707-.293s.512.098.707.293c.391.391.391 1.023 0 1.414-1.021 1.021-2.364 1.532-3.707 1.532-1.342 0-2.685-.511-3.707-1.532-.633-.632-1.463-.948-2.293-.948-.831 0-1.661.316-2.292.948-.196.195-.452.293-.708.293s-.512-.098-.707-.293c-.391-.391-.391-1.024 0-1.414zm13.414 5.414c-1.021 1.021-2.364 1.532-3.707 1.532-1.342 0-2.685-.511-3.707-1.532-.633-.632-1.463-.948-2.293-.948-.831 0-1.661.316-2.292.948-.196.195-.452.293-.708.293s-.512-.098-.707-.293c-.391-.391-.391-1.023 0-1.414 1.021-1.021 2.364-1.532 3.706-1.532 1.343 0 2.686.511 3.708 1.532.632.632 1.463.947 2.293.947.831 0 1.661-.315 2.293-.947.195-.195.451-.293.707-.293s.512.098.707.293c.391.39.391 1.023 0 1.414z"}}]})(props);
	};
	module.exports.TiWaves = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M15 19c-1.342 0-2.685-.511-3.707-1.532-1.266-1.265-3.323-1.264-4.586 0-.391.391-1.023.391-1.414 0s-.391-1.023 0-1.414c2.043-2.043 5.369-2.043 7.414 0 1.265 1.264 3.322 1.263 4.586 0 .391-.391 1.023-.391 1.414 0s.391 1.023 0 1.414c-1.021 1.021-2.364 1.532-3.707 1.532zM15 15c-1.342 0-2.685-.511-3.707-1.532-1.266-1.265-3.323-1.264-4.586 0-.391.391-1.023.391-1.414 0s-.391-1.023 0-1.414c2.043-2.043 5.369-2.043 7.414 0 1.265 1.264 3.322 1.263 4.586 0 .391-.391 1.023-.391 1.414 0s.391 1.023 0 1.414c-1.021 1.021-2.364 1.532-3.707 1.532zM15 11c-1.342 0-2.685-.511-3.707-1.532-1.266-1.265-3.323-1.264-4.586 0-.391.391-1.023.391-1.414 0s-.391-1.023 0-1.414c2.043-2.042 5.369-2.044 7.414 0 1.265 1.264 3.322 1.263 4.586 0 .391-.391 1.023-.391 1.414 0s.391 1.023 0 1.414c-1.021 1.021-2.364 1.532-3.707 1.532z"}}]})(props);
	};
	module.exports.TiWeatherCloudy = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17 19h-11c-2.206 0-4-1.794-4-4 0-1.861 1.277-3.429 3.001-3.874l-.001-.126c0-3.309 2.691-6 6-6 2.587 0 4.824 1.638 5.65 4.015 2.942-.246 5.35 2.113 5.35 4.985 0 2.757-2.243 5-5 5zm-11.095-6.006c-1.008.006-1.905.903-1.905 2.006s.897 2 2 2h11c1.654 0 3-1.346 3-3s-1.346-3-3-3c-.243 0-.5.041-.81.13l-1.075.307-.186-1.103c-.325-1.932-1.977-3.334-3.929-3.334-2.206 0-4 1.794-4 4 0 .272.027.545.082.811l.244 1.199-1.421-.016z"}}]})(props);
	};
	module.exports.TiWeatherDownpour = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M15 22c-.552 0-1-.447-1-1v-6c0-.553.448-1 1-1s1 .447 1 1v6c0 .553-.448 1-1 1zM9 22c-.552 0-1-.447-1-1v-6c0-.553.448-1 1-1s1 .447 1 1v6c0 .553-.448 1-1 1zM12 24c-.552 0-1-.447-1-1v-6c0-.553.448-1 1-1s1 .447 1 1v6c0 .553-.448 1-1 1zM6 18c-2.206 0-4-1.794-4-4 0-1.861 1.277-3.429 3.001-3.874l-.001-.126c0-3.309 2.691-6 6-6 2.587 0 4.824 1.639 5.65 4.015 2.936-.244 5.35 2.113 5.35 4.985 0 2.241-1.507 4.223-3.666 4.819-.535.146-1.083-.166-1.23-.697-.147-.532.165-1.083.698-1.23 1.294-.358 2.198-1.547 2.198-2.892 0-1.654-1.346-3-3-3-.242 0-.499.041-.811.13l-1.074.306-.185-1.102c-.326-1.932-1.978-3.334-3.93-3.334-2.206 0-4 1.794-4 4 0 .272.027.545.082.808l.248 1.202-1.422-.016c-1.011.006-1.908.903-1.908 2.006s.897 2 2 2c.552 0 1 .447 1 1s-.448 1-1 1z"}}]}]})(props);
	};
	module.exports.TiWeatherNight = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M10.5 20c-.861 0-1.71-.151-2.523-.451l-1.317-.485.89-1.087c1.275-1.56 1.95-3.454 1.95-5.477s-.675-3.917-1.951-5.477l-.89-1.087 1.317-.485c.814-.3 1.663-.451 2.524-.451 4.136 0 7.5 3.364 7.5 7.5s-3.364 7.5-7.5 7.5zm-.509-2.024c.169.016.339.024.509.024 3.032 0 5.5-2.468 5.5-5.5s-2.468-5.5-5.5-5.5c-.17 0-.34.008-.509.024.991 1.645 1.509 3.511 1.509 5.476s-.518 3.831-1.509 5.476z"}}]})(props);
	};
	module.exports.TiWeatherPartlySunny = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M14.5 3l-1 3-1-3c-.184-.553.114-1.149.666-1.333.553-.185 1.15.114 1.334.666.075.226.07.458 0 .667zM19.864 6.05l-2.829 1.415 1.415-2.829c.261-.521.894-.731 1.414-.472.521.261.731.894.472 1.415-.107.212-.274.372-.472.471zM21.5 12l-3-1 3-1c.553-.185 1.149.114 1.334.667.184.552-.115 1.148-.668 1.333-.225.075-.457.069-.666 0zM8.55 4.636l1.415 2.829-2.829-1.415c-.521-.261-.732-.894-.472-1.414.261-.521.895-.731 1.414-.472.213.107.373.274.472.472zM17.776 12.342c.139-.424.224-.871.224-1.342 0-2.481-2.019-4.5-4.5-4.5-1.34 0-2.537.594-3.357 1.528l-.143-.028c-1.776 0-3.369.78-4.469 2.011-.24-.08-.472-.086-.697-.011-.553.185-.852.781-.668 1.333.057.167.158.299.277.411-.283.697-.443 1.458-.443 2.256l.002.126c-1.725.445-3.002 2.013-3.002 3.874 0 2.206 1.795 4 4 4h11c2.757 0 5-2.243 5-5 0-2.129-1.344-3.939-3.224-4.658zm-4.276-3.842c1.379 0 2.5 1.121 2.5 2.5 0 .366-.096.706-.238 1.019-.354.021-.72.074-1.118.188-.521-1.353-1.604-2.415-2.967-2.905.456-.49 1.102-.802 1.823-.802zm2.5 11.5h-11c-1.104 0-2-.897-2-2s.896-2 1.908-2.006l1.422.016-.248-1.202c-.055-.263-.082-.536-.082-.808 0-2.206 1.795-4 4-4l.069-.014c1.904.055 3.495 1.406 3.847 3.27l.038.186c.123.436.517.706.946.712l.289-.023c.312-.09.569-.131.811-.131 1.654 0 3 1.346 3 3s-1.346 3-3 3z"}}]}]})(props);
	};
	module.exports.TiWeatherShower = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M17 18c-.552 0-1-.447-1-1s.448-1 1-1c1.654 0 3-1.346 3-3s-1.346-3-3-3c-.243 0-.5.041-.81.13l-1.075.307-.185-1.103c-.326-1.932-1.978-3.334-3.93-3.334-2.206 0-4 1.794-4 4 0 .272.027.545.082.811l.244 1.199-1.42-.016c-1.009.006-1.906.903-1.906 2.006s.897 2 2 2c.552 0 1 .447 1 1s-.448 1-1 1c-2.206 0-4-1.794-4-4 0-1.861 1.277-3.429 3.001-3.874l-.001-.126c0-3.309 2.691-6 6-6 2.587 0 4.824 1.638 5.65 4.015 2.939-.244 5.35 2.113 5.35 4.985 0 2.757-2.243 5-5 5zM10.5 18l1-3 1 3c.184.553-.114 1.149-.667 1.333-.552.185-1.149-.114-1.333-.666-.075-.226-.07-.458 0-.667zM13.5 20l1-3 1 3c.184.553-.114 1.149-.667 1.333-.552.185-1.149-.114-1.333-.666-.075-.226-.07-.458 0-.667zM7.5 20l1-3 1 3c.184.553-.114 1.149-.667 1.333-.552.185-1.149-.114-1.333-.666-.075-.226-.07-.458 0-.667z"}}]}]})(props);
	};
	module.exports.TiWeatherSnow = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M20.5 15.134l-2.457-.503 1.483-.396c.533-.143.85-.69.707-1.225-.142-.533-.689-.85-1.225-.707l-1.508.403c.037-.231.071-.464.071-.706s-.034-.476-.071-.707l1.51.404.26.034c.441 0 .846-.295.965-.741.143-.533-.174-1.082-.707-1.225l-1.483-.397 2.455-.502c.216-.044.42-.156.577-.333.386-.436.347-1.102-.089-1.488-.436-.386-1.102-.347-1.488.089l-1.663 1.874.398-1.479c.144-.533-.173-1.082-.706-1.226-.531-.142-1.082.173-1.226.706l-.407 1.517c-.366-.299-.771-.544-1.219-.717l1.102-1.102c.391-.391.391-1.023 0-1.414s-1.023-.391-1.414 0l-1.086 1.086.793-2.379c.069-.209.075-.441 0-.667-.184-.552-.781-.851-1.333-.666-.552.184-.85.78-.667 1.333l.793 2.379-1.086-1.086c-.391-.391-1.023-.391-1.414 0s-.391 1.023 0 1.414l1.102 1.102c-.447.173-.853.419-1.219.717l-.405-1.515c-.143-.534-.697-.852-1.224-.708-.534.143-.851.69-.708 1.224l.396 1.485-1.662-1.877c-.146-.164-.345-.285-.578-.333-.57-.117-1.127.25-1.244.82s.251 1.128.822 1.245l2.454.503-1.48.396c-.533.143-.85.691-.707 1.225.119.447.523.741.965.741l.26-.034 1.508-.404c-.039.231-.073.465-.073.706 0 .242.034.475.071.707l-1.508-.404c-.532-.142-1.081.173-1.225.707-.144.533.174 1.082.707 1.225l1.483.397-2.455.502c-.216.044-.42.156-.577.334-.387.436-.347 1.102.089 1.487.436.387 1.103.347 1.488-.089l1.665-1.878-.398 1.484c-.144.533.173 1.082.707 1.225l.26.034c.441 0 .845-.294.965-.741l.406-1.515c.366.298.771.544 1.22.716l-1.104 1.102c-.391.39-.391 1.023 0 1.414s1.023.391 1.414 0l.706-.707h.252l-.666 1.999c-.069.209-.075.441 0 .667.184.552.781.851 1.333.666.553-.184.851-.78.667-1.333l-.666-1.999h.252l.707.707c.196.195.451.293.707.293s.512-.098.707-.293c.391-.39.391-1.023 0-1.414l-1.102-1.103c.448-.172.854-.418 1.22-.717l.406 1.517c.12.447.523.741.965.741l.26-.034c.533-.143.851-.691.707-1.225l-.397-1.48 1.662 1.874c.146.165.345.285.577.333.57.117 1.128-.251 1.244-.821.117-.57-.251-1.127-.821-1.244zm-7.428-.634c-1.379 0-2.5-1.121-2.5-2.5s1.121-2.5 2.5-2.5 2.5 1.121 2.5 2.5-1.121 2.5-2.5 2.5z"}}]})(props);
	};
	module.exports.TiWeatherStormy = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M17 18c-.553 0-1-.447-1-1s.447-1 1-1c1.654 0 3-1.346 3-3s-1.346-3-3-3c-.238 0-.496.042-.813.131l-1.071.301-.186-1.098c-.326-1.932-1.979-3.334-3.93-3.334-2.205 0-4 1.794-4 4 0 .274.027.545.082.806l.26 1.24-1.436-.052c-1.01.006-1.906.903-1.906 2.006s.896 2 2 2c.553 0 1 .447 1 1s-.447 1-1 1c-2.205 0-4-1.794-4-4 0-1.861 1.277-3.429 3.002-3.874l-.002-.126c0-3.309 2.691-6 6-6 2.587 0 4.824 1.638 5.649 4.015 2.925-.241 5.351 2.112 5.351 4.985 0 2.757-2.243 5-5 5zM12.639 14l-4.5 4.051 3 1.449-1.5 3.5 4.5-4.05-3-1.45z"}}]}]})(props);
	};
	module.exports.TiWeatherSunny = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M13 4l-1 2.934-1-2.934c-.188-.553.106-1.152.659-1.341.552-.188 1.153.107 1.341.659.078.23.072.469 0 .682zM4 11l2.934 1-2.934 1c-.553.188-1.152-.106-1.341-.659-.188-.552.107-1.153.659-1.341.23-.078.469-.072.682 0zM11 20l1-2.934 1 2.934c.188.553-.106 1.152-.659 1.341-.552.188-1.152-.106-1.341-.659-.078-.23-.072-.469 0-.682zM20 12.998l-2.934-1 2.934-1c.553-.188 1.152.106 1.341.659.188.552-.106 1.152-.659 1.341-.23.078-.469.072-.682 0zM7.05 5.636l1.367 2.781-2.781-1.367c-.524-.257-.74-.891-.483-1.414.258-.523.891-.739 1.414-.482.218.107.383.28.483.482zM5.636 16.949l2.781-1.367-1.367 2.781c-.257.523-.891.739-1.414.482-.523-.258-.739-.891-.482-1.414.107-.218.28-.382.482-.482zM16.949 18.363l-1.367-2.781 2.781 1.367c.523.257.739.891.482 1.414-.258.523-.891.739-1.414.482-.218-.107-.382-.28-.482-.482zM18.362 7.048l-2.782 1.368 1.368-2.782c.257-.523.891-.739 1.414-.482.523.258.739.891.481 1.415-.106.217-.279.381-.481.481zM12 16.5c-2.481 0-4.5-2.019-4.5-4.5s2.019-4.5 4.5-4.5 4.5 2.019 4.5 4.5-2.019 4.5-4.5 4.5zm0-7c-1.379 0-2.5 1.121-2.5 2.5s1.121 2.5 2.5 2.5 2.5-1.121 2.5-2.5-1.121-2.5-2.5-2.5z"}}]}]})(props);
	};
	module.exports.TiWeatherWindyCloudy = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"g","attr":{},"child":[{"tag":"path","attr":{"d":"M4.798 15.75c-.134 0-.27-.026-.4-.084-1.457-.639-2.398-2.077-2.398-3.666 0-1.861 1.277-3.429 3.001-3.874l-.001-.126c0-3.309 2.691-6 6-6 2.932 0 5.413 2.104 5.902 5.001.092.544-.275 1.061-.82 1.152-.544.083-1.06-.276-1.152-.82-.326-1.931-1.979-3.333-3.93-3.333-2.206 0-4 1.794-4 4 0 .272.027.546.081.812l.259 1.27-1.431-.088c-1.012.006-1.909.903-1.909 2.006 0 .795.471 1.515 1.2 1.834.506.222.736.812.515 1.317-.164.375-.531.599-.917.599zM19 7c-.553 0-1 .447-1 1s.447 1 1 1c.552 0 1 .448 1 1s-.448 1-1 1h-9.6c-.553 0-1 .447-1 1s.447 1 1 1h4.6c.552 0 1 .448 1 1s-.448 1-1 1h-5c-1.654 0-3 1.346-3 3s1.346 3 3 3c.553 0 1-.447 1-1s-.447-1-1-1c-.552 0-1-.448-1-1s.448-1 1-1h5c1.654 0 3-1.346 3-3 0-.353-.072-.686-.185-1h2.185c1.654 0 3-1.346 3-3s-1.346-3-3-3z"}}]}]})(props);
	};
	module.exports.TiWeatherWindy = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M19 5c-.553 0-1 .447-1 1s.447 1 1 1c.552 0 1 .448 1 1s-.448 1-1 1h-11c-.553 0-1 .447-1 1s.447 1 1 1h6c.552 0 1 .448 1 1s-.448 1-1 1h-6.4c-1.654 0-3 1.346-3 3s1.346 3 3 3c.553 0 1-.447 1-1s-.447-1-1-1c-.552 0-1-.448-1-1s.448-1 1-1h6.4c1.654 0 3-1.346 3-3 0-.353-.072-.686-.185-1h2.185c1.654 0 3-1.346 3-3s-1.346-3-3-3z"}}]})(props);
	};
	module.exports.TiWiFiOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21.157 10.764c0-.785-.269-1.464-.706-2.048-.045-.094-.131-.149-.21-.226-.163-.18-.341-.338-.536-.48-4.45-3.739-10.965-3.735-15.414.006-.193.142-.742.738-.742.738-.437.584-.706 1.305-.706 2.09 0 .816.362 1.758.759 2.155l5.775 5.796c.642.732 1.572 1.204 2.622 1.204.996 0 1.709-.167 2.526-1 .004 0 5.565-5.646 5.565-5.646.706-.703 1.067-1.699 1.067-2.589zm-9.156 7.234c-.829.002-1.501-.668-1.501-1.498-.002-.828.67-1.502 1.501-1.502.829-.002 1.501.67 1.499 1.502.002.828-.67 1.5-1.499 1.498zm3.888-3.268c-.293.293-.677.438-1.061.438-.385 0-.768-.146-1.061-.438-.976-.976-2.562-.976-3.536 0-.586.586-1.536.584-2.122 0-.586-.586-.586-1.537 0-2.123 2.144-2.144 5.632-2.144 7.779 0 .587.586.587 1.538.001 2.123zm2.829-2.828c-.293.293-.677.438-1.061.438s-.769-.146-1.062-.438c-2.533-2.534-6.658-2.534-9.192 0-.586.584-1.536.584-2.122 0-.585-.586-.585-1.536 0-2.123 3.704-3.701 9.729-3.701 13.435 0 .587.588.587 1.537.002 2.123z"}}]})(props);
	};
	module.exports.TiWiFi = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13.414 19.412c.783-.779.783-2.047 0-2.826-.781-.785-2.049-.785-2.828-.002-.783.783-.783 2.051 0 2.831.781.78 2.049.781 2.828-.003zM20.485 11.515c-.512 0-1.024-.195-1.414-.586-3.899-3.899-10.243-3.898-14.143 0-.782.781-2.048.78-2.829 0-.781-.781-.781-2.047 0-2.829 5.459-5.458 14.341-5.458 19.799 0 .781.781.781 2.047 0 2.828-.389.391-.901.587-1.413.587zM7.757 15.757c-.512 0-1.024-.195-1.414-.586-.781-.781-.781-2.047 0-2.828 3.118-3.119 8.194-3.119 11.313 0 .781.781.781 2.047 0 2.829-.781.781-2.047.781-2.829 0-1.559-1.56-4.097-1.559-5.657 0-.389.39-.901.585-1.413.585z"}}]})(props);
	};
	module.exports.TiWine = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M17.568 9.432c0-2.55-.906-5.592-.944-5.72-.128-.423-.517-.712-.958-.712h-7.332c-.441 0-.83.289-.958.712-.038.128-.944 3.17-.944 5.72 0 2.735 1.984 5.011 4.587 5.477l-.019.091v4h-1c-.553 0-1 .447-1 1s.447 1 1 1h4c.553 0 1-.447 1-1s-.447-1-1-1h-1v-4l-.019-.092c2.603-.466 4.587-2.741 4.587-5.476zm-5.568 3.568c-1.773 0-3.236-1.303-3.511-3h7.021c-.274 1.697-1.737 3-3.51 3zm-3.555-4c.062-1.468.422-3.093.653-4h5.803c.231.907.591 2.532.653 4h-7.109z"}}]})(props);
	};
	module.exports.TiWorldOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2c-4.971 0-9 4.029-9 9s4.029 9 9 9 9-4.029 9-9-4.029-9-9-9zm0 6c0-.553.447-1 1-1s1 .447 1 1v3c-.552 0-1 .448-1 1s.448 1 1 1c.553 0 1-.448 1-1h1v-2l1 1-1 1c0 3 0 3-2 4 0-1-1-1-3-1v-2l-2-2v-2c-1 0-1 1-1 1l-.561-.561-1.652-1.651c1.167-2.247 3.512-3.788 6.213-3.788.688 0 1.353.104 1.981.29-.086.895-.579 1.71-1.481 1.71-1 0-1.5 1-1.5 2v3s1 0 1-3zm0 10c-3.859 0-7-3.14-7-7 0-.776.133-1.521.367-2.219l1.926 1.926 1 1 1.707 1.707v1.586c0 .552.447 1 1 1 .779 0 1.651 0 2.006.091.038.301.209.582.468.742.168.104.36.16.552.16.145 0 .289-.032.422-.098 2.348-1.174 2.539-1.644 2.552-4.479l.708-.708c.391-.391.391-1.023 0-1.414l-1-1c-.192-.192-.448-.294-.708-.294-.129 0-.259.025-.383.076-.373.155-.617.52-.617.924v-2c0-.689-.351-1.298-.883-1.658.421-.411.712-.995.826-1.685 2.392 1.115 4.057 3.535 4.057 6.343 0 3.86-3.141 7-7 7z"}}]})(props);
	};
	module.exports.TiWorld = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M12 2c-4.971 0-9 4.029-9 9s4.029 9 9 9 9-4.029 9-9-4.029-9-9-9zm2 2c0 1-.5 2-1.5 2s-1.5 1-1.5 2v3s1 0 1-3c0-.553.447-1 1-1s1 .447 1 1v3c-.552 0-1 .448-1 1s.448 1 1 1c.553 0 1-.448 1-1h1v-2l1 1-1 1c0 3 0 3-2 4 0-1-1-1-3-1v-2l-2-2v-2c-1 0-1 1-1 1l-.561-.561-2.39-2.39c.11-.192.225-.382.35-.564l.523-.678c1.468-1.716 3.644-2.807 6.078-2.807.691 0 1.359.098 2 .262v.738z"}}]})(props);
	};
	module.exports.TiZoomInOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 11h-2v-2c0-.275-.225-.5-.5-.5s-.5.225-.5.5v2h-2c-.275 0-.5.225-.5.5s.225.5.5.5h2v2c0 .275.225.5.5.5s.5-.225.5-.5v-2h2c.275 0 .5-.225.5-.5s-.225-.5-.5-.5zM19.381 15.956l-2.244-2.283c.227-.687.363-1.412.363-2.173 0-3.859-3.141-7-7-7s-7 3.141-7 7 3.141 7 7 7c.762 0 1.488-.137 2.173-.364l2.397 2.386c.601.506 1.348.783 2.104.783 1.727 0 3.131-1.404 3.131-3.131 0-.84-.328-1.628-.924-2.218zm-3.901-1.11l2.492 2.531c.205.203.332.486.332.797 0 .625-.507 1.131-1.131 1.131-.312 0-.594-.127-.816-.313l-2.512-2.511c.646-.436 1.201-.991 1.635-1.635zm-9.98-3.346c0-2.757 2.243-5 5-5s5 2.243 5 5-2.243 5-5 5-5-2.243-5-5z"}}]})(props);
	};
	module.exports.TiZoomIn = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 11h-2v-2c0-.276-.224-.5-.5-.5s-.5.224-.5.5v2h-2c-.276 0-.5.224-.5.5s.224.5.5.5h2v2c0 .276.224.5.5.5s.5-.224.5-.5v-2h2c.276 0 .5-.224.5-.5s-.224-.5-.5-.5zM18.432 14.97l-.536-.537-.749-.75c.227-.688.354-1.42.354-2.183 0-3.859-3.141-7-7-7s-7 3.141-7 7 3.141 7 7 7c.763 0 1.496-.127 2.184-.354l.75.749 1.512 1.51.061.061.064.055c.601.506 1.348.784 2.104.784 1.726 0 3.13-1.404 3.13-3.131 0-.84-.328-1.628-.924-2.218l-.95-.986zm-12.932-3.47c0-2.757 2.243-5 5-5s5 2.243 5 5-2.243 5-5 5-5-2.243-5-5z"}}]})(props);
	};
	module.exports.TiZoomOutOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 12h-5c-.275 0-.5-.225-.5-.5s.225-.5.5-.5h5c.275 0 .5.225.5.5s-.225.5-.5.5zM19.381 15.956l-2.245-2.283c.228-.687.364-1.412.364-2.173 0-3.859-3.141-7-7-7s-7 3.141-7 7 3.141 7 7 7c.761 0 1.488-.137 2.173-.364l2.397 2.386c.601.506 1.348.783 2.104.783 1.727 0 3.131-1.404 3.131-3.131 0-.84-.328-1.628-.924-2.218zm-3.901-1.11l2.492 2.531c.205.203.332.486.332.797 0 .625-.507 1.131-1.131 1.131-.312 0-.594-.127-.816-.313l-2.512-2.511c.646-.436 1.201-.991 1.635-1.635zm-9.98-3.346c0-2.757 2.243-5 5-5s5 2.243 5 5-2.243 5-5 5-5-2.243-5-5z"}}]})(props);
	};
	module.exports.TiZoomOut = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 11h-5c-.276 0-.5.224-.5.5s.224.5.5.5h5c.276 0 .5-.224.5-.5s-.224-.5-.5-.5zM19.381 15.956l-.949-.986-.537-.537-.749-.75c.227-.688.354-1.42.354-2.183 0-3.859-3.14-7-7-7s-7 3.141-7 7 3.14 7 7 7c.763 0 1.496-.127 2.184-.354l.75.749 1.512 1.51.06.061.065.055c.601.506 1.348.784 2.104.784 1.726 0 3.13-1.404 3.13-3.131 0-.84-.328-1.628-.924-2.218zm-13.881-4.456c0-2.757 2.243-5 5-5s5 2.243 5 5-2.243 5-5 5-5-2.243-5-5z"}}]})(props);
	};
	module.exports.TiZoomOutline = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M14 8c1.656 0 3 1.344 3 3s-1.344 3-3 3-3-1.344-3-3 1.344-3 3-3m0-1c-2.206 0-4 1.794-4 4s1.794 4 4 4 4-1.794 4-4-1.794-4-4-4zM4.195 17.674c0 1.727 1.404 3.131 3.131 3.131.756 0 1.503-.277 2.104-.783l2.397-2.386c.685.227 1.412.364 2.173.364 3.86 0 7-3.141 7-7s-3.14-7-7-7c-3.859 0-7 3.141-7 7 0 .761.136 1.486.364 2.173l-2.245 2.283c-.596.59-.924 1.378-.924 2.218zm6.459-1.694l-2.512 2.511c-.223.187-.504.313-.816.313-.624 0-1.131-.506-1.131-1.131 0-.311.127-.594.332-.797l2.492-2.531c.435.645.99 1.2 1.635 1.635zm3.346.02c-2.757 0-5-2.243-5-5s2.243-5 5-5 5 2.243 5 5-2.243 5-5 5z"}}]})(props);
	};
	module.exports.TiZoom = function (props) {
	  return GenIcon({"tag":"svg","attr":{"version":"1.2","baseProfile":"tiny","viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M13 4c-3.859 0-7 3.141-7 7 0 .763.127 1.495.354 2.183l-.749.75-.511.512-1.008 1.045c-.562.557-.891 1.345-.891 2.185 0 1.727 1.404 3.131 3.13 3.131.757 0 1.504-.278 2.104-.784l.064-.055.061-.061 1.512-1.51.75-.749c.688.226 1.421.353 2.184.353 3.859 0 7-3.141 7-7s-3.141-7-7-7zm0 12c-2.757 0-5-2.243-5-5s2.243-5 5-5 5 2.243 5 5-2.243 5-5 5zM13 7c-2.205 0-4 1.794-4 4s1.795 4 4 4 4-1.794 4-4-1.795-4-4-4zm0 7c-1.656 0-3-1.344-3-3s1.344-3 3-3 3 1.344 3 3-1.344 3-3 3z"}}]})(props);
	};


/***/ }
/******/ ]);